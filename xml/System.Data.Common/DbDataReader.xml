<Type Name="DbDataReader" FullName="System.Data.Common.DbDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="520e7da93f051464573cf10e504b9b4bc31fe21b" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51305514" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbDataReader : MarshalByRefObject, IDisposable, System.Collections.IEnumerable, System.Data.IDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataReader extends System.MarshalByRefObject implements class System.Collections.IEnumerable, class System.Data.IDataReader, class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataReader&#xA;Inherits MarshalByRefObject&#xA;Implements IDataReader, IDisposable, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataReader abstract : MarshalByRefObject, IDisposable, System::Collections::IEnumerable, System::Data::IDataReader" />
  <TypeSignature Language="F#" Value="type DbDataReader = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDataReader&#xA;    interface IEnumerable&#xA;    interface IDisposable&#xA;    interface IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDataReader</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDataRecord</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c185e-101">Lit un flux avant uniquement de lignes d'une source de donn√©es.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c185e-101">Reads a forward-only stream of rows from a data source.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
      <span data-ttu-id="c185e-102">DbProviderFactories (ADO.NET)</span>
      <span class="sxs-lookup">
        <span data-stu-id="c185e-102">DbProviderFactories (ADO.NET)</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
      <span data-ttu-id="c185e-103">Vue d'ensemble d'ADO.NET</span>
      <span class="sxs-lookup">
        <span data-stu-id="c185e-103">ADO.NET Overview</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c185e-104">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-104">Initializes a new instance of the <see cref="T:System.Data.Common.DbDataReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="c185e-105">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-105">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-106">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-106">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="dbDataReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c185e-107">Ferme l'objet <see cref="T:System.Data.Common.DbDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-107">Closes the <see cref="T:System.Data.Common.DbDataReader" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-108">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-108">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public abstract int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.Common.DbDataReader.Depth" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.Depth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c185e-109">Obtient une valeur indiquant la profondeur d'imbrication de la ligne actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-109">Gets a value indicating the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c185e-110">Profondeur d'imbrication de la ligne actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-110">The depth of nesting for the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-111">La profondeur de la table situ√©e le plus √† l'ext√©rieur est z√©ro.</span><span class="sxs-lookup"><span data-stu-id="c185e-111">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-112">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-112">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c185e-113">Lib√®re les ressources utilis√©es par <see cref="T:System.Data.Common.DbDataReader" /> et appelle <see cref="M:System.Data.SqlClient.SqlDataReader.Close" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-113">Releases the resources used by the <see cref="T:System.Data.Common.DbDataReader" /> and calls <see cref="M:System.Data.SqlClient.SqlDataReader.Close" />.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-114">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-114">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dbDataReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c185e-115">Lib√®re toutes les ressources utilis√©es par l'instance actuelle de la classe <see cref="T:System.Data.Common.DbDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-115">Releases all resources used by the current instance of the <see cref="T:System.Data.Common.DbDataReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-116">Appelez la m√©thode `Dispose` une fois que vous avez termin√© d'utiliser <xref:System.Data.Common.DbDataReader>.</span><span class="sxs-lookup"><span data-stu-id="c185e-116">Call `Dispose` when you are finished using the <xref:System.Data.Common.DbDataReader>.</span></span> <span data-ttu-id="c185e-117">La m√©thode `Dispose` rend le <xref:System.Data.Common.DbDataReader> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="c185e-117">The `Dispose` method leaves the <xref:System.Data.Common.DbDataReader> in an unusable state.</span></span> <span data-ttu-id="c185e-118">Apr√®s avoir appel√© `Dispose`, vous devez lib√©rer toutes les r√©f√©rences √† la <xref:System.Data.Common.DbDataReader> pour que le garbage collector puisse r√©cup√©rer la m√©moire qui le <xref:System.Data.Common.DbDataReader> occup√©e.</span><span class="sxs-lookup"><span data-stu-id="c185e-118">After calling `Dispose`, you must release all references to the <xref:System.Data.Common.DbDataReader> so the garbage collector can reclaim the memory that the <xref:System.Data.Common.DbDataReader> was occupying.</span></span>  
  
 <span data-ttu-id="c185e-119">Pour plus d‚Äôinformations, consultez [de nettoyage des ressources non manag√©es](~/docs/standard/garbage-collection/unmanaged.md) et [impl√©mentation d‚Äôune m√©thode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-119">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c185e-120">Appelez toujours `Dispose` avant de lib√©rer votre derni√®re r√©f√©rence √† <xref:System.Data.Common.DbDataReader>.</span><span class="sxs-lookup"><span data-stu-id="c185e-120">Always call `Dispose` before you release your last reference to the <xref:System.Data.Common.DbDataReader>.</span></span> <span data-ttu-id="c185e-121">Sinon, les ressources utilis√©es ne seront pas lib√©r√©es tant que le garbage collector n'aura pas appel√© la m√©thode <xref:System.Data.Common.DbDataReader> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="c185e-121">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.Common.DbDataReader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-122">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-122">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dbDataReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c185e-123">
            <see langword="true" /> pour lib√©rer les ressources manag√©es et non manag√©es¬†; <see langword="false" /> pour lib√©rer uniquement les ressources non manag√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-123">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-124">Lib√®re les ressources manag√©es utilis√©es par <see cref="T:System.Data.Common.DbDataReader" /> et lib√®re √©ventuellement les ressources non manag√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-124">Releases the managed resources used by the <see cref="T:System.Data.Common.DbDataReader" /> and optionally releases the unmanaged resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-125">Cette m√©thode appelle <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="c185e-125">This method calls <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-126">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-126">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public abstract int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.Common.DbDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.FieldCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c185e-127">Obtient le nombre de colonnes figurant dans la ligne actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-127">Gets the number of columns in the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c185e-128">Nombre de colonnes figurant dans la ligne actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-128">The number of columns in the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-129">Inclut des champs masqu√©s.</span><span class="sxs-lookup"><span data-stu-id="c185e-129">Includes hidden fields.</span></span> <span data-ttu-id="c185e-130">Utilisez <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> pour exclure les champs masqu√©s.</span><span class="sxs-lookup"><span data-stu-id="c185e-130">Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c185e-131">Il n'existe aucune connexion active √† une instance de SQL Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-131">There is no current connection to an instance of SQL Server.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-132">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-132">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public abstract bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetBoolean : int -&gt; bool" Usage="dbDataReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBoolean(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-133">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-133">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-134">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'une valeur Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-134">Gets the value of the specified column as a Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-135">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-135">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-136">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-136">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-137">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-137">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public abstract byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetByte : int -&gt; byte" Usage="dbDataReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetByte(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-138">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-138">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-139">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'un octet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-139">Gets the value of the specified column as a byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-140">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-140">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-141">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-141">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-142">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-142">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract long GetBytes (int ordinal, long dataOffset, byte[] buffer, int bufferOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetBytes(int32 ordinal, int64 dataOffset, unsigned int8[] buffer, int32 bufferOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (ordinal As Integer, dataOffset As Long, buffer As Byte(), bufferOffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetBytes(int ordinal, long dataOffset, cli::array &lt;System::Byte&gt; ^ buffer, int bufferOffset, int length);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dbDataReader.GetBytes (ordinal, dataOffset, buffer, bufferOffset, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-143">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-143">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataOffset">
          <span data-ttu-id="c185e-144">Index figurant dans la ligne √† partir de laquelle commencer l'op√©ration de lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-144">The index within the row from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="c185e-145">M√©moire tampon dans laquelle copier les donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-145">The buffer into which to copy the data.</span>
          </span>
        </param>
        <param name="bufferOffset">
          <span data-ttu-id="c185e-146">Index avec la m√©moire tampon vers laquelle les donn√©es seront copi√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-146">The index with the buffer to which the data will be copied.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="c185e-147">Nombre maximal de caract√®res √† lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-147">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-148">Lit un flux de donn√©es d'octets de la colonne sp√©cifi√©e, en commen√ßant √† l'emplacement indiqu√© par <paramref name="dataOffset" />, dans la m√©moire tampon, en commen√ßant √† l'emplacement indiqu√© par <paramref name="bufferOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-148">Reads a stream of bytes from the specified column, starting at location indicated by <paramref name="dataOffset" />, into the buffer, starting at the location indicated by <paramref name="bufferOffset" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-149">Nombre r√©el d'octets lus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-149">The actual number of bytes read.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-150">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-150">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-151">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-151">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public abstract char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetChar : int -&gt; char" Usage="dbDataReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChar(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-152">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-152">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-153">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'un caract√®re unique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-153">Gets the value of the specified column as a single character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-154">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-154">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-155">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-155">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-156">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-156">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract long GetChars (int ordinal, long dataOffset, char[] buffer, int bufferOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetChars(int32 ordinal, int64 dataOffset, char[] buffer, int32 bufferOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (ordinal As Integer, dataOffset As Long, buffer As Char(), bufferOffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetChars(int ordinal, long dataOffset, cli::array &lt;char&gt; ^ buffer, int bufferOffset, int length);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dbDataReader.GetChars (ordinal, dataOffset, buffer, bufferOffset, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-157">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-157">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataOffset">
          <span data-ttu-id="c185e-158">Index figurant dans la ligne √† partir de laquelle commencer l'op√©ration de lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-158">The index within the row from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="c185e-159">M√©moire tampon dans laquelle copier les donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-159">The buffer into which to copy the data.</span>
          </span>
        </param>
        <param name="bufferOffset">
          <span data-ttu-id="c185e-160">Index avec la m√©moire tampon vers laquelle les donn√©es seront copi√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-160">The index with the buffer to which the data will be copied.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="c185e-161">Nombre maximal de caract√®res √† lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-161">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-162">Lit un flux de donn√©es de caract√®res de la colonne sp√©cifi√©e, en commen√ßant √† l'emplacement indiqu√© par <paramref name="dataOffset" />, dans la m√©moire tampon, en commen√ßant √† l'emplacement indiqu√© par <paramref name="bufferOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-162">Reads a stream of characters from the specified column, starting at location indicated by <paramref name="dataOffset" />, into the buffer, starting at the location indicated by <paramref name="bufferOffset" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-163">Nombre r√©el de caract√®res lus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-163">The actual number of characters read.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-164">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-164">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataReader GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbDataReader GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbDataReader ^ GetData(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.GetData : int -&gt; System.Data.Common.DbDataReader" Usage="dbDataReader.GetData ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-165">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-165">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-166">Retourne un objet <see cref="T:System.Data.Common.DbDataReader" /> pour le num√©ro de colonne demand√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-166">Returns a <see cref="T:System.Data.Common.DbDataReader" /> object for the requested column ordinal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-167">Objet <see cref="T:System.Data.Common.DbDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-167">A <see cref="T:System.Data.Common.DbDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-168">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-168">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public abstract string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDataTypeName : int -&gt; string" Usage="dbDataReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDataTypeName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-169">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-169">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-170">Obtient le nom du type de donn√©es de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-170">Gets name of the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-171">Cha√Æne repr√©sentant le nom du type de donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-171">A string representing the name of the data type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetDataTypes(String connectiongString) {       
   using (SqlConnection conn = new SqlConnection(connectiongString)) {  
      String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]";  
      using (DbCommand command = new SqlCommand(queryString, conn)) {  
         conn.Open();               
         using (DbDataReader reader = command.ExecuteReader()) {  
            for (Int32 i = 0; i < reader.FieldCount; i++) {  
               Console.WriteLine("ColumnName:{0,-15}DataType:{1,-15}",reader.GetName(i),reader.GetDataTypeName(i));  
            }  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-172">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-172">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-173">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-173">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public abstract DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDateTime : int -&gt; DateTime" Usage="dbDataReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDateTime(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-174">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-174">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-175">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'un objet <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-175">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-176">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-176">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-177">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-177">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-178">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-178">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetDbDataReader">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbDataReader GetDbDataReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbDataReader GetDbDataReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbDataReader (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbDataReader ^ GetDbDataReader(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDbDataReader : int -&gt; System.Data.Common.DbDataReader&#xA;override this.GetDbDataReader : int -&gt; System.Data.Common.DbDataReader" Usage="dbDataReader.GetDbDataReader ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-179">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-179">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-180">Retourne un objet <see cref="T:System.Data.Common.DbDataReader" /> pour l'ordinal de colonne demand√© qui peut √™tre substitu√© par une impl√©mentation sp√©cifique au fournisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-180">Returns a <see cref="T:System.Data.Common.DbDataReader" /> object for the requested column ordinal that can be overridden with a provider-specific implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-181">Objet <see cref="T:System.Data.Common.DbDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-181">A <see cref="T:System.Data.Common.DbDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-182">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-182">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public abstract decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDecimal : int -&gt; decimal" Usage="dbDataReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDecimal(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-183">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-183">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-184">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'un objet <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-184">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-185">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-185">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-186">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-186">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-187">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-187">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public abstract double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDouble : int -&gt; double" Usage="dbDataReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDouble(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-188">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-188">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-189">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'un nombre √† virgule flottante double pr√©cision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-189">Gets the value of the specified column as a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-190">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-190">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-191">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-191">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-192">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-192">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dbDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c185e-193">Retourne un objet <see cref="T:System.Collections.IEnumerator" /> qui peut √™tre utilis√© pour it√©rer au sein des lignes dans le lecteur de donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-193">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-194">
            <see cref="T:System.Collections.IEnumerator" /> qui peut √™tre utilis√© pour it√©rer au sein des lignes dans le lecteur de donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-194">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-195">Bien que vous pouvez utiliser cette m√©thode pour r√©cup√©rer un constructeur explicite, dans les langages qui prennent en charge explicite **foreach** construction, il est plus simple d‚Äôutiliser la construction de boucle directement pour effectuer une it√©ration dans les lignes dans le lecteur de donn√©es.</span><span class="sxs-lookup"><span data-stu-id="c185e-195">Although you can use this method to retrieve an explicit constructor, in languages that support an explicit **foreach** construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 <span data-ttu-id="c185e-196">Si vous impl√©mentez cette m√©thode, elle doit retourner une nouvelle instance de <xref:System.Data.Common.DbEnumerator> ou assurez-vous que votre √©num√©rateur renvoie <xref:System.Data.IDataRecord> objets.</span><span class="sxs-lookup"><span data-stu-id="c185e-196">If you implement this method, it should return a new instance of <xref:System.Data.Common.DbEnumerator> or ensure that your enumerator returns <xref:System.Data.IDataRecord> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-197">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-197">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public abstract Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldType : int -&gt; Type" Usage="dbDataReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFieldType(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-198">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-198">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-199">Obtient le type de donn√©es de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-199">Gets the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-200">Type de donn√©es de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-200">The data type of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-201">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-201">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-202">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-202">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T GetFieldValue&lt;T&gt; (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetFieldValue&lt;T&gt;(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldValue(Of T) (ordinal As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual T GetFieldValue(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValue : int -&gt; 'T&#xA;override this.GetFieldValue : int -&gt; 'T" Usage="dbDataReader.GetFieldValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="c185e-203">Obtient, de mani√®re asynchrone, la valeur de la colonne sp√©cifi√©e sous la forme d'un type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-203">Synchronously gets the value of the specified column as a type.</span>
          </span>
        </typeparam>
        <param name="ordinal">
          <span data-ttu-id="c185e-204">Colonne √† r√©cup√©rer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-204">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-205">Obtient, de mani√®re asynchrone, la valeur de la colonne sp√©cifi√©e sous la forme d'un type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-205">Synchronously gets the value of the specified column as a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-206">Colonne √† r√©cup√©rer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-206">The column to be retrieved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-207">Pour plus d‚Äôinformations, consultez [prise en charge de la diffusion en continu SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-207">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c185e-208">La connexion est perdue ou est ferm√©e pendant la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-208">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-209">Fermeture de <see cref="T:System.Data.SqlClient.SqlDataReader" /> au cours de la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-209">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-210">Il n'existe aucune donn√©e pr√™te √† √™tre lue (par exemple, le premier <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> n'a pas √©t√© appel√© ou retourn√© comme false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-210">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="c185e-211">Tentative de lecture d'une colonne pr√©c√©demment lue en mode s√©quentiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-211">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="c185e-212">Il y avait une op√©ration asynchrone en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-212">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="c185e-213">Cela s'applique √† toutes les m√©thodes¬†Get\* ex√©cut√©es en mode s√©quentiel, car elles peuvent √™tre appel√©es pendant la lecture d'un flux de donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-213">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="c185e-214">Tentative de lecture d'une colonne qui n'existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-214">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-215">
            <paramref name="T" /> ne correspond pas au type retourn√© par SQL Server ou ne peut pas √™tre cast√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-215">
              <paramref name="T" /> doesn‚Äôt match the type returned by SQL Server or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFieldValueAsync&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c185e-216">Obtient, de mani√®re asynchrone, la valeur de la colonne sp√©cifi√©e sous la forme d'un type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-216">Asynchronously gets the value of the specified column as a type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-217">Pour plus d‚Äôinformations, consultez [prise en charge de la diffusion en continu SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-217">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFieldValueAsync(Of T) (ordinal As Integer) As Task(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.GetFieldValueAsync : int -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="dbDataReader.GetFieldValueAsync ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="c185e-218">Type de la valeur √† retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-218">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="ordinal">
          <span data-ttu-id="c185e-219">Type de la valeur √† retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-219">The type of the value to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-220">Obtient, de mani√®re asynchrone, la valeur de la colonne sp√©cifi√©e sous la forme d'un type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-220">Asynchronously gets the value of the specified column as a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-221">Type de la valeur √† retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-221">The type of the value to be returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-222">`T` peut √™tre un des types suivants¬†:</span><span class="sxs-lookup"><span data-stu-id="c185e-222">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="c185e-223">Bool√©en</span><span class="sxs-lookup"><span data-stu-id="c185e-223">Boolean</span></span>|<span data-ttu-id="c185e-224">Byte</span><span class="sxs-lookup"><span data-stu-id="c185e-224">Byte</span></span>|<span data-ttu-id="c185e-225">Char</span><span class="sxs-lookup"><span data-stu-id="c185e-225">Char</span></span>|<span data-ttu-id="c185e-226">DateTime</span><span class="sxs-lookup"><span data-stu-id="c185e-226">DateTime</span></span>|  
|<span data-ttu-id="c185e-227">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="c185e-227">DateTimeOffset</span></span>|<span data-ttu-id="c185e-228">Decimal</span><span class="sxs-lookup"><span data-stu-id="c185e-228">Decimal</span></span>|<span data-ttu-id="c185e-229">Double</span><span class="sxs-lookup"><span data-stu-id="c185e-229">Double</span></span>|<span data-ttu-id="c185e-230">Float</span><span class="sxs-lookup"><span data-stu-id="c185e-230">Float</span></span>|  
|<span data-ttu-id="c185e-231">GUID</span><span class="sxs-lookup"><span data-stu-id="c185e-231">Guid</span></span>|<span data-ttu-id="c185e-232">Int16</span><span class="sxs-lookup"><span data-stu-id="c185e-232">Int16</span></span>|<span data-ttu-id="c185e-233">Int32</span><span class="sxs-lookup"><span data-stu-id="c185e-233">Int32</span></span>|<span data-ttu-id="c185e-234">Int64</span><span class="sxs-lookup"><span data-stu-id="c185e-234">Int64</span></span>|  
|<span data-ttu-id="c185e-235">Cha√Æne</span><span class="sxs-lookup"><span data-stu-id="c185e-235">String</span></span>||||  
  
 <span data-ttu-id="c185e-236">Pour plus d‚Äôinformations, consultez [prise en charge de la diffusion en continu SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-236">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c185e-237">La connexion est perdue ou est ferm√©e pendant la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-237">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-238">Fermeture de <see cref="T:System.Data.Common.DbDataReader" /> au cours de la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-238">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-239">Il n'existe aucune donn√©e pr√™te √† √™tre lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas √©t√© appel√© ou retourn√© comme false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-239">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="c185e-240">Tentative de lecture d'une colonne pr√©c√©demment lue en mode s√©quentiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-240">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="c185e-241">Il y avait une op√©ration asynchrone en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-241">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="c185e-242">Cela s'applique √† toutes les m√©thodes¬†Get\* ex√©cut√©es en mode s√©quentiel, car elles peuvent √™tre appel√©es pendant la lecture d'un flux de donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-242">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="c185e-243">Tentative de lecture d'une colonne qui n'existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-243">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-244">
            <paramref name="T" /> ne correspond pas au type retourn√© par la source de donn√©es ou ne peut pas faire l‚Äôobjet d‚Äôun cast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-244">
              <paramref name="T" /> doesn‚Äôt match the type returned by the data source  or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int ordinal, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 ordinal, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int ordinal, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValueAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;&#xA;override this.GetFieldValueAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="dbDataReader.GetFieldValueAsync (ordinal, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="c185e-245">Type de la valeur √† retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-245">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="ordinal">
          <span data-ttu-id="c185e-246">Type de la valeur √† retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-246">The type of the value to be returned.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c185e-247">Instruction d'annulation, qui propage une notification que les op√©rations doivent √™tre annul√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-247">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="c185e-248">Cela ne garantit pas l'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-248">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="c185e-249">Un param√®tre <see langword="CancellationToken.None" /> rend cette m√©thode √©quivalente √† <see cref="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-249">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="c185e-250">La t√¢che retourn√©e doit √™tre marqu√©e comme annul√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-250">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-251">Obtient, de mani√®re asynchrone, la valeur de la colonne sp√©cifi√©e sous la forme d'un type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-251">Asynchronously gets the value of the specified column as a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-252">Type de la valeur √† retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-252">The type of the value to be returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-253">`T` peut √™tre un des types suivants¬†:</span><span class="sxs-lookup"><span data-stu-id="c185e-253">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="c185e-254">Bool√©en</span><span class="sxs-lookup"><span data-stu-id="c185e-254">Boolean</span></span>|<span data-ttu-id="c185e-255">Byte</span><span class="sxs-lookup"><span data-stu-id="c185e-255">Byte</span></span>|<span data-ttu-id="c185e-256">Char</span><span class="sxs-lookup"><span data-stu-id="c185e-256">Char</span></span>|<span data-ttu-id="c185e-257">DateTime</span><span class="sxs-lookup"><span data-stu-id="c185e-257">DateTime</span></span>|  
|<span data-ttu-id="c185e-258">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="c185e-258">DateTimeOffset</span></span>|<span data-ttu-id="c185e-259">Decimal</span><span class="sxs-lookup"><span data-stu-id="c185e-259">Decimal</span></span>|<span data-ttu-id="c185e-260">Double</span><span class="sxs-lookup"><span data-stu-id="c185e-260">Double</span></span>|<span data-ttu-id="c185e-261">Float</span><span class="sxs-lookup"><span data-stu-id="c185e-261">Float</span></span>|  
|<span data-ttu-id="c185e-262">GUID</span><span class="sxs-lookup"><span data-stu-id="c185e-262">Guid</span></span>|<span data-ttu-id="c185e-263">Int16</span><span class="sxs-lookup"><span data-stu-id="c185e-263">Int16</span></span>|<span data-ttu-id="c185e-264">Int32</span><span class="sxs-lookup"><span data-stu-id="c185e-264">Int32</span></span>|<span data-ttu-id="c185e-265">Int64</span><span class="sxs-lookup"><span data-stu-id="c185e-265">Int64</span></span>|  
|<span data-ttu-id="c185e-266">Cha√Æne</span><span class="sxs-lookup"><span data-stu-id="c185e-266">String</span></span>||||  
  
 <span data-ttu-id="c185e-267">Pour plus d‚Äôinformations, consultez [prise en charge de la diffusion en continu SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-267">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c185e-268">La connexion est perdue ou est ferm√©e pendant la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-268">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-269">Fermeture de <see cref="T:System.Data.Common.DbDataReader" /> au cours de la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-269">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-270">Il n'existe aucune donn√©e pr√™te √† √™tre lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas √©t√© appel√© ou retourn√© comme false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-270">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="c185e-271">Tentative de lecture d'une colonne pr√©c√©demment lue en mode s√©quentiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-271">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="c185e-272">Il y avait une op√©ration asynchrone en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-272">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="c185e-273">Cela s'applique √† toutes les m√©thodes¬†Get\* ex√©cut√©es en mode s√©quentiel, car elles peuvent √™tre appel√©es pendant la lecture d'un flux de donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-273">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="c185e-274">Tentative de lecture d'une colonne qui n'existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-274">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-275">
            <paramref name="T" /> ne correspond pas au type retourn√© par la source de donn√©es ou ne peut pas √™tre cast√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-275">
              <paramref name="T" /> doesn‚Äôt match the type returned by the data source or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public abstract float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetFloat : int -&gt; single" Usage="dbDataReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFloat(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-276">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-276">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-277">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'un nombre √† virgule flottante simple pr√©cision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-277">Gets the value of the specified column as a single-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-278">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-278">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-279">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-279">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-280">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-280">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public abstract Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetGuid : int -&gt; Guid" Usage="dbDataReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetGuid(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-281">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-281">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-282">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'un identificateur global unique (GUID, Globally Unique IDentifier).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-282">Gets the value of the specified column as a globally-unique identifier (GUID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-283">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-283">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-284">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-284">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-285">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-285">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public abstract short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetInt16 : int -&gt; int16" Usage="dbDataReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt16(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-286">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-286">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-287">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'un entier sign√© 16¬†bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-287">Gets the value of the specified column as a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-288">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-288">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-289">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-289">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-290">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-290">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public abstract int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetInt32 : int -&gt; int" Usage="dbDataReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt32(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-291">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-291">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-292">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d‚Äôun entier sign√© 32¬†bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-292">Gets the value of the specified column as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-293">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-293">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetCredits(String connectiongString) {  
   using (SqlConnection conn = new SqlConnection(connectiongString)) {  
      String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]";   
      using (DbCommand command = new SqlCommand(queryString, conn)) {  
         conn.Open();   
         using (DbDataReader reader = command.ExecuteReader()) {  
            while (reader.Read()) {  
               // Credits column is the integer column, and you can use the GetInt32 method                        
               // to return a 32-bit signed integer.                       
               Console.WriteLine("Course:{0,-15} Credits:{1}",reader[1],reader.GetInt32(2));   
            }  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-294">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-294">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-295">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-295">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public abstract long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetInt64 : int -&gt; int64" Usage="dbDataReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt64(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-296">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-296">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-297">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'un entier sign√© 64¬†bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-297">Gets the value of the specified column as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-298">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-298">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-299">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-299">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-300">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-300">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public abstract string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetName : int -&gt; string" Usage="dbDataReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-301">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-301">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-302">Obtient le nom de la colonne, en fonction du num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-302">Gets the name of the column, given the zero-based column ordinal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-303">Nom de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-303">The name of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-304">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-304">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public abstract int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetOrdinal : string -&gt; int" Usage="dbDataReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetOrdinal(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c185e-305">Nom de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-305">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-306">Obtient l'ordinal de colonne, en fonction du nom de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-306">Gets the column ordinal given the name of the column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-307">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-307">The zero-based column ordinal.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="c185e-308">Le nom sp√©cifi√© n'est pas un nom de colonne valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-308">The name specified is not a valid column name.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-309">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-309">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public virtual Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderSpecificFieldType : int -&gt; Type&#xA;override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dbDataReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-310">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-310">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-311">Retourne le type de champ sp√©cifique au fournisseur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-311">Returns the provider-specific field type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-312">Objet <see cref="T:System.Type" /> qui d√©crit le type de donn√©es de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-312">The <see cref="T:System.Type" /> object that describes the data type of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-313">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-313">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public virtual object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderSpecificValue : int -&gt; obj&#xA;override this.GetProviderSpecificValue : int -&gt; obj" Usage="dbDataReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-314">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-314">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-315">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'une instance de l'objet <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-315">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-316">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-316">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-317">Pour d√©terminer le type sp√©cifique de l‚Äôobjet retourn√©, utilisez <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.</span><span class="sxs-lookup"><span data-stu-id="c185e-317">To determine the specific type of the object returned, use <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-318">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-318">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public virtual int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderSpecificValues : obj[] -&gt; int&#xA;override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dbDataReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="c185e-319">Tableau d'objets <see cref="T:System.Object" /> dans lequel copier les colonnes d'attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-319">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-320">Obtient toutes les colonnes d‚Äôattributs sp√©cifiques au fournisseur figurant dans la collection de la ligne actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-320">Gets all provider-specific attribute columns in the collection for the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-321">Nombre d'instances de l'objet <see cref="T:System.Object" /> dans le tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-321">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-322">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-322">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : unit -&gt; System.Data.DataTable&#xA;override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dbDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c185e-323">Retourne un <see cref="T:System.Data.DataTable" /> qui d√©crit les m√©tadonn√©es de colonne de <see cref="T:System.Data.Common.DbDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-323">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.Common.DbDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-324">
            <see cref="T:System.Data.DataTable" /> qui d√©crit les m√©tadonn√©es de colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-324">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c185e-325">Le <see cref="T:System.Data.SqlClient.SqlDataReader" /> est ferm√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-325">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-326">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-326">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetStream (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetStream(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStream (ordinal As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetStream(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetStream : int -&gt; System.IO.Stream&#xA;override this.GetStream : int -&gt; System.IO.Stream" Usage="dbDataReader.GetStream ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-327">R√©cup√®re les donn√©es sous forme de <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-327">Retrieves data as a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-328">R√©cup√®re les donn√©es sous forme de <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-328">Retrieves data as a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-329">Objet retourn√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-329">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-330"><xref:System.Data.Common.DbDataReader.GetStream%2A> prend uniquement en charge la r√©cup√©ration des valeurs qui peuvent √™tre converties en tableaux d‚Äôoctets.</span><span class="sxs-lookup"><span data-stu-id="c185e-330"><xref:System.Data.Common.DbDataReader.GetStream%2A> only supports the retrieval of values that can be converted to byte arrays.</span></span>  
  
 <span data-ttu-id="c185e-331">Pour plus d‚Äôinformations, consultez [prise en charge de la diffusion en continu SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-331">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c185e-332">La connexion est perdue ou est ferm√©e pendant la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-332">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-333">Fermeture de <see cref="T:System.Data.Common.DbDataReader" /> au cours de la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-333">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-334">Il n'existe aucune donn√©e pr√™te √† √™tre lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas √©t√© appel√© ou retourn√© comme false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-334">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="c185e-335">Tentative de lecture d'une colonne pr√©c√©demment lue en mode s√©quentiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-335">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="c185e-336">Il y avait une op√©ration asynchrone en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-336">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="c185e-337">Cela s'applique √† toutes les m√©thodes¬†Get\* ex√©cut√©es en mode s√©quentiel, car elles peuvent √™tre appel√©es pendant la lecture d'un flux de donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-337">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="c185e-338">Tentative de lecture d'une colonne qui n'existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-338">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-339">Le type retourn√© n'√©tait pas l'un des types suivants¬†:</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-339">The returned type was not one of the types below:</span>
          </span>
          <span data-ttu-id="c185e-340">- binary</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-340">-   binary</span>
          </span>
          <span data-ttu-id="c185e-341">- image</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-341">-   image</span>
          </span>
          <span data-ttu-id="c185e-342">- varbinary</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-342">-   varbinary</span>
          </span>
          <span data-ttu-id="c185e-343">- udt</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-343">-   udt</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public abstract string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetString : int -&gt; string" Usage="dbDataReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetString(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-344">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-344">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-345">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'une instance de l'objet <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-345">Gets the value of the specified column as an instance of <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-346">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-346">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-347">Le cast sp√©cifi√© n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-347">The specified cast is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-348">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-348">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetTextReader">
      <MemberSignature Language="C#" Value="public virtual System.IO.TextReader GetTextReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.TextReader GetTextReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTextReader (ordinal As Integer) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::TextReader ^ GetTextReader(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetTextReader : int -&gt; System.IO.TextReader&#xA;override this.GetTextReader : int -&gt; System.IO.TextReader" Usage="dbDataReader.GetTextReader ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-349">R√©cup√®re les donn√©es sous forme de <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-349">Retrieves data as a <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-350">R√©cup√®re les donn√©es sous forme de <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-350">Retrieves data as a <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-351">Objet retourn√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-351">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-352"><xref:System.Data.Common.DbDataReader.GetTextReader%2A> prend uniquement en charge la r√©cup√©ration des valeurs qui peuvent √™tre converties dans les tableaux de caract√®res (cha√Ænes).</span><span class="sxs-lookup"><span data-stu-id="c185e-352"><xref:System.Data.Common.DbDataReader.GetTextReader%2A> only supports the retrieval of values that can be converted to character arrays (strings).</span></span>  
  
 <span data-ttu-id="c185e-353">Pour plus d‚Äôinformations, consultez [prise en charge de la diffusion en continu SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-353">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c185e-354">La connexion est perdue ou est ferm√©e pendant la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-354">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-355">Fermeture de <see cref="T:System.Data.Common.DbDataReader" /> au cours de la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-355">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-356">Il n'existe aucune donn√©e pr√™te √† √™tre lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas √©t√© appel√© ou retourn√© comme false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-356">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="c185e-357">Tentative de lecture d'une colonne pr√©c√©demment lue en mode s√©quentiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-357">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="c185e-358">Il y avait une op√©ration asynchrone en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-358">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="c185e-359">Cela s'applique √† toutes les m√©thodes¬†Get\* ex√©cut√©es en mode s√©quentiel, car elles peuvent √™tre appel√©es pendant la lecture d'un flux de donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-359">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="c185e-360">Tentative de lecture d'une colonne qui n'existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-360">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c185e-361">Le type retourn√© n'√©tait pas l'un des types suivants¬†:</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-361">The returned type was not one of the types below:</span>
          </span>
          <span data-ttu-id="c185e-362">- char</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-362">-   char</span>
          </span>
          <span data-ttu-id="c185e-363">- nchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-363">-   nchar</span>
          </span>
          <span data-ttu-id="c185e-364">- ntext</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-364">-   ntext</span>
          </span>
          <span data-ttu-id="c185e-365">- nvarchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-365">-   nvarchar</span>
          </span>
          <span data-ttu-id="c185e-366">- text</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-366">-   text</span>
          </span>
          <span data-ttu-id="c185e-367">- varchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-367">-   varchar</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : int -&gt; obj" Usage="dbDataReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValue(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-368">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-368">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-369">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'une instance de l'objet <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-369">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-370">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-370">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-371">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-371">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : obj[] -&gt; int" Usage="dbDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValues(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="c185e-372">Tableau d'objets <see cref="T:System.Object" /> dans lequel copier les colonnes d'attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-372">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-373">Remplit un tableau d'objets avec les valeurs de colonne de la ligne en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-373">Populates an array of objects with the column values of the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-374">Nombre d'instances de l'objet <see cref="T:System.Object" /> dans le tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-374">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-375">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-375">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public abstract bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.Common.DbDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c185e-376">Obtient une valeur qui indique si cet objet <see cref="T:System.Data.Common.DbDataReader" /> contient une ou plusieurs lignes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-376">Gets a value that indicates whether this <see cref="T:System.Data.Common.DbDataReader" /> contains one or more rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c185e-377">
            <see langword="true" /> si le <see cref="T:System.Data.Common.DbDataReader" /> contient une ou plusieurs lignes¬†; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-377">
              <see langword="true" /> if the <see cref="T:System.Data.Common.DbDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-378">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-378">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public abstract bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.Common.DbDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.IsClosed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c185e-379">Obtient une valeur indiquant si l'objet <see cref="T:System.Data.Common.DbDataReader" /> est ferm√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-379">Gets a value indicating whether the <see cref="T:System.Data.Common.DbDataReader" /> is closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c185e-380">
            <see langword="true" /> si <see cref="T:System.Data.Common.DbDataReader" /> est ferm√©¬†; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-380">
              <see langword="true" /> if the <see cref="T:System.Data.Common.DbDataReader" /> is closed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c185e-381">Le <see cref="T:System.Data.SqlClient.SqlDataReader" /> est ferm√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-381">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c185e-382">Cette propri√©t√© et <see cref="P:System.Data.Common.DbDataReader.RecordsAffected" /> doit √™tre impl√©ment√©e pour retourner une valeur lorsque le lecteur est ferm√©.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c185e-382">This property and <see cref="P:System.Data.Common.DbDataReader.RecordsAffected" /> should be implemented to return a value when the reader is closed.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-383">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-383">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public abstract bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member IsDBNull : int -&gt; bool" Usage="dbDataReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.IsDBNull(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-384">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-384">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-385">Obtient une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-385">Gets a value that indicates whether the column contains nonexistent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-386">
            <see langword="true" /> si la colonne sp√©cifi√©e √©quivaut √† <see cref="T:System.DBNull" />, sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-386">
              <see langword="true" /> if the specified column is equivalent to <see cref="T:System.DBNull" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-387">Appelez cette m√©thode pour v√©rifier des valeurs de colonne null avant d‚Äôappeler typ√©e des m√©thodes get (par exemple, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, et ainsi de suite) pour √©viter de lever une erreur.</span><span class="sxs-lookup"><span data-stu-id="c185e-387">Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-388">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-388">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDBNullAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c185e-389">Version asynchrone de <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, qui obtient une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-389">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNullAsync (ordinal As Integer) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.IsDBNullAsync : int -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.IsDBNullAsync ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-390">Colonne de base z√©ro √† r√©cup√©rer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-390">The zero-based column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-391">Version asynchrone de <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, qui obtient une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-391">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-392">
            <see langword="true" /> si la valeur de colonne sp√©cifi√©e √©quivaut √† <see langword="DBNull" />¬†; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-392">
              <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-393">Pour plus d‚Äôinformations, consultez [prise en charge de la diffusion en continu SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-393">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c185e-394">La connexion est perdue ou est ferm√©e pendant la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-394">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-395">Fermeture de <see cref="T:System.Data.Common.DbDataReader" /> au cours de la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-395">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-396">Il n'existe aucune donn√©e pr√™te √† √™tre lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas √©t√© appel√© ou retourn√© comme false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-396">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="c185e-397">Tentative de lecture en cours d'une colonne pr√©c√©demment lue en mode s√©quentiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-397">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="c185e-398">Il y avait une op√©ration asynchrone en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-398">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="c185e-399">Cela s'applique √† toutes les m√©thodes¬†Get\* ex√©cut√©es en mode s√©quentiel, car elles peuvent √™tre appel√©es pendant la lecture d'un flux de donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-399">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="c185e-400">Tentative de lecture d'une colonne qui n'existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-400">Trying to read a column that does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int ordinal, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 ordinal, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int ordinal, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member IsDBNullAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.IsDBNullAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.IsDBNullAsync (ordinal, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-401">Colonne de base z√©ro √† r√©cup√©rer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-401">The zero-based column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c185e-402">Instruction d'annulation, qui propage une notification que les op√©rations doivent √™tre annul√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-402">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="c185e-403">Cela ne garantit pas l'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-403">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="c185e-404">Un param√®tre <see langword="CancellationToken.None" /> rend cette m√©thode √©quivalente √† <see cref="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-404">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="c185e-405">La t√¢che retourn√©e doit √™tre marqu√©e comme annul√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-405">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-406">Version asynchrone de <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, qui obtient une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-406">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
          <span data-ttu-id="c185e-407">Envoie √©ventuellement une notification selon laquelle les op√©rations doivent √™tre annul√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-407">Optionally, sends a notification that operations should be cancelled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-408">
            <see langword="true" /> si la valeur de colonne sp√©cifi√©e √©quivaut √† <see langword="DBNull" />¬†; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-408">
              <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-409">Pour plus d‚Äôinformations, consultez [prise en charge de la diffusion en continu SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-409">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c185e-410">La connexion est perdue ou est ferm√©e pendant la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-410">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-411">Fermeture de <see cref="T:System.Data.Common.DbDataReader" /> au cours de la r√©cup√©ration des donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-411">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="c185e-412">Il n'existe aucune donn√©e pr√™te √† √™tre lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas √©t√© appel√© ou retourn√© comme false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-412">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="c185e-413">Tentative de lecture en cours d'une colonne pr√©c√©demment lue en mode s√©quentiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-413">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="c185e-414">Il y avait une op√©ration asynchrone en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-414">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="c185e-415">Cela s'applique √† toutes les m√©thodes¬†Get\* ex√©cut√©es en mode s√©quentiel, car elles peuvent √™tre appel√©es pendant la lecture d'un flux de donn√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-415">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="c185e-416">Tentative de lecture d'une colonne qui n'existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-416">Trying to read a column that does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c185e-417">Obtient la valeur d'une colonne sp√©cifi√©e sous la forme d'une instance de l'objet <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-417">Gets the value of a specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-418">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-418">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.Common.DbDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-419">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-419">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-420">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'une instance de l'objet <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-420">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c185e-421">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-421">The value of the specified column.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="c185e-422">L‚Äôindex pass√© √©tait en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-422">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-423">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-423">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.Common.DbDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c185e-424">Nom de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-424">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-425">Obtient la valeur de la colonne sp√©cifi√©e sous la forme d'une instance de l'objet <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-425">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c185e-426">Valeur de la colonne sp√©cifi√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-426">The value of the specified column.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="c185e-427">Aucune colonne portant le nom sp√©cifi√© n‚Äôa √©t√© trouv√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-427">No column with the specified name was found.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-428">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-428">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public abstract bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool NextResult();" />
      <MemberSignature Language="F#" Value="abstract member NextResult : unit -&gt; bool" Usage="dbDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.NextResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c185e-429">Avance le lecteur jusqu'au r√©sultat suivant lors de la lecture des r√©sultats d'un lot d'instructions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-429">Advances the reader to the next result when reading the results of a batch of statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-430">
            <see langword="true" /> s'il existe des jeux de r√©sultats suppl√©mentaires¬†; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-430">
              <see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-431">Cette m√©thode vous permet de traiter plusieurs jeux de r√©sultats retourn√©s lorsqu'un lot est soumis au fournisseur de donn√©es.</span><span class="sxs-lookup"><span data-stu-id="c185e-431">This method allows you to process multiple result sets returned when a batch is submitted to the data provider.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-432">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-432">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="NextResultAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c185e-433">Impl√©mente la version asynchrone de la m√©thode <see cref="M:System.Data.Common.DbDataReader.NextResult" />, mais retourne une t√¢che de fa√ßon synchrone, bloquant le thread appelant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-433">Implements the asynchronous version of <see cref="M:System.Data.Common.DbDataReader.NextResult" />, but returns a Task synchronously, blocking the calling thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-434">Pour plus d‚Äôinformations sur la programmation asynchrone, consultez [programmation asynchrone](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-434">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-435">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-435">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.NextResultAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function NextResultAsync () As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync();" />
      <MemberSignature Language="F#" Value="member this.NextResultAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.NextResultAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c185e-436">Version asynchrone de <see cref="M:System.Data.Common.DbDataReader.NextResult" />, qui avance le lecteur jusqu'au prochain r√©sultat lors de la lecture des r√©sultats d'un lot d'instructions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-436">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.NextResult" />, which advances the reader to the next result when reading the results of a batch of statements.</span>
          </span>
          <span data-ttu-id="c185e-437">Appelle <see cref="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" /> avec CancellationToken.None.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-437">Invokes <see cref="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" /> with CancellationToken.None.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-438">T√¢che repr√©sentant l‚Äôop√©ration asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-438">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-439">Pour plus d‚Äôinformations sur la programmation asynchrone, consultez [programmation asynchrone](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-439">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException">
          <span data-ttu-id="c185e-440">Erreur qui s'est produite lors de l'ex√©cution du texte de la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-440">An error occurred while executing the command text.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-441">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-441">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member NextResultAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.NextResultAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.NextResultAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="c185e-442">Instruction d'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-442">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-443">Il s'agit de la version asynchrone de <see cref="M:System.Data.Common.DbDataReader.NextResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-443">This is the asynchronous version of <see cref="M:System.Data.Common.DbDataReader.NextResult" />.</span>
          </span>
          <span data-ttu-id="c185e-444">Les fournisseurs doivent effectuer le remplacement avec une impl√©mentation appropri√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-444">Providers should override with an appropriate implementation.</span>
          </span>
          <span data-ttu-id="c185e-445">Le <paramref name="cancellationToken" /> peut √©ventuellement √™tre ignor√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-445">The <paramref name="cancellationToken" /> may optionally be ignored.</span>
          </span>
          <span data-ttu-id="c185e-446">L'impl√©mentation par d√©faut appelle la m√©thode <see cref="M:System.Data.Common.DbDataReader.NextResult" /> synchrone et retourne une t√¢che termin√©e, bloquant ainsi le thread appelant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-446">The default implementation invokes the synchronous <see cref="M:System.Data.Common.DbDataReader.NextResult" /> method and returns a completed task, blocking the calling thread.</span>
          </span>
          <span data-ttu-id="c185e-447">L'impl√©mentation par d√©faut retourne une t√¢che annul√©e si un <paramref name="cancellationToken" /> d√©j√† annul√© est pass√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-447">The default implementation will return a cancelled task if passed an already cancelled <paramref name="cancellationToken" />.</span>
          </span>
          <span data-ttu-id="c185e-448">Les exceptions lev√©es par <see cref="M:System.Data.Common.DbDataReader.NextResult" /> sont communiqu√©es via la propri√©t√© d'exception de t√¢che retourn√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-448">Exceptions thrown by <see cref="M:System.Data.Common.DbDataReader.NextResult" /> will be communicated via the returned Task Exception property.</span>
          </span>
          <span data-ttu-id="c185e-449">Les autres m√©thodes et propri√©t√©s de l'objet DbDataReader ne doivent pas √™tre appel√©es tant que la t√¢che retourn√©e n'est pas termin√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-449">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-450">T√¢che repr√©sentant l‚Äôop√©ration asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-450">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-451">Pour plus d‚Äôinformations sur la programmation asynchrone, consultez [programmation asynchrone](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-451">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException">
          <span data-ttu-id="c185e-452">Erreur qui s'est produite lors de l'ex√©cution du texte de la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-452">An error occurred while executing the command text.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-453">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-453">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="dbDataReader.Read " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Read</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c185e-454">Avance le lecteur jusqu'√† l'enregistrement suivant d'un jeu de r√©sultats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-454">Advances the reader to the next record in a result set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-455">
            <see langword="true" /> s‚Äôil existe des lignes suppl√©mentaires¬†; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-455">
              <see langword="true" /> if there are more rows; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-456">La position par d√©faut d'un lecteur de donn√©es est avant le premier enregistrement.</span><span class="sxs-lookup"><span data-stu-id="c185e-456">The default position of a data reader is before the first record.</span></span> <span data-ttu-id="c185e-457">Par cons√©quent, vous devez appeler <xref:System.Data.Common.DbDataReader.Read%2A> pour commencer √† acc√©der aux donn√©es.</span><span class="sxs-lookup"><span data-stu-id="c185e-457">Therefore, you must call <xref:System.Data.Common.DbDataReader.Read%2A> to begin accessing data.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-458">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-458">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c185e-459">Impl√©mente la version asynchrone de la m√©thode <see cref="M:System.Data.Common.DbDataReader.Read" />, mais retourne une t√¢che de fa√ßon synchrone, bloquant le thread appelant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-459">Implements the asynchronous version of <see cref="M:System.Data.Common.DbDataReader.Read" />, but returns a Task synchronously, blocking the calling thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-460">Pour plus d‚Äôinformations sur la programmation asynchrone, consultez [programmation asynchrone](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-460">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-461">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-461">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; ReadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.ReadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync () As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync();" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.ReadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c185e-462">Version asynchrone de <see cref="M:System.Data.Common.DbDataReader.Read" />, qui avance le lecteur jusqu'√† l'enregistrement suivant dans un jeu de r√©sultats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-462">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.Read" />, which advances the reader to the next record in a result set.</span>
          </span>
          <span data-ttu-id="c185e-463">Cette m√©thode appelle <see cref="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" /> avec CancellationToken.None.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-463">This method invokes <see cref="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" /> with CancellationToken.None.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-464">T√¢che repr√©sentant l‚Äôop√©ration asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-464">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-465">Pour plus d‚Äôinformations sur la programmation asynchrone, consultez [programmation asynchrone](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-465">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException">
          <span data-ttu-id="c185e-466">Erreur qui s'est produite lors de l'ex√©cution du texte de la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-466">An error occurred while executing the command text.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-467">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-467">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ReadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.ReadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="c185e-468">Instruction d'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-468">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-469">Il s'agit de la version asynchrone de <see cref="M:System.Data.Common.DbDataReader.Read" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-469">This is the asynchronous version of <see cref="M:System.Data.Common.DbDataReader.Read" />.</span>
          </span>
          <span data-ttu-id="c185e-470">Les fournisseurs doivent effectuer le remplacement avec une impl√©mentation appropri√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-470">Providers should override with an appropriate implementation.</span>
          </span>
          <span data-ttu-id="c185e-471">CancellationToken peut √©ventuellement √™tre ignor√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-471">The cancellationToken may optionally be ignored.</span>
          </span>
          <span data-ttu-id="c185e-472">L'impl√©mentation par d√©faut appelle la m√©thode <see cref="M:System.Data.Common.DbDataReader.Read" /> synchrone et retourne une t√¢che termin√©e, bloquant ainsi le thread appelant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-472">The default implementation invokes the synchronous <see cref="M:System.Data.Common.DbDataReader.Read" /> method and returns a completed task, blocking the calling thread.</span>
          </span>
          <span data-ttu-id="c185e-473">L'impl√©mentation par d√©faut retourne une t√¢che annul√©e si un cancellationToken d√©j√† annul√© est pass√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-473">The default implementation will return a cancelled task if passed an already cancelled cancellationToken.</span>
          </span>
          <span data-ttu-id="c185e-474">Les exceptions lev√©es par Read sont communiqu√©es via la propri√©t√© d'exception de t√¢che retourn√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-474">Exceptions thrown by Read will be communicated via the returned Task Exception property.</span>
          </span>
          <span data-ttu-id="c185e-475">N'appelle pas d'autres m√©thodes et propri√©t√©s de l'objet <see langword="DbDataReader" /> jusqu'√† ce que la t√¢che retourn√©e soit termin√©e.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-475">Do not invoke other methods and properties of the <see langword="DbDataReader" /> object until the returned Task is complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-476">T√¢che repr√©sentant l‚Äôop√©ration asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-476">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-477">Pour plus d‚Äôinformations sur la programmation asynchrone, consultez [programmation asynchrone](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="c185e-477">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException">
          <span data-ttu-id="c185e-478">Erreur qui s'est produite lors de l'ex√©cution du texte de la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-478">An error occurred while executing the command text.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-479">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-479">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public abstract int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.Common.DbDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.RecordsAffected</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c185e-480">Obtient le nombre de lignes modifi√©es, ins√©r√©es ou supprim√©es par l'ex√©cution de l'instruction SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-480">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c185e-481">Nombre de lignes modifi√©es, ins√©r√©es ou supprim√©es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-481">The number of rows changed, inserted, or deleted.</span>
          </span>
          <span data-ttu-id="c185e-482">-1¬†pour les instructions SELECT¬†; 0 si aucune ligne n'a √©t√© affect√©e ou si l'instruction a √©chou√©.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-482">-1 for SELECT statements; 0 if no rows were affected or the statement failed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-483">Le `RecordsAffected` propri√©t√© n‚Äôest pas d√©finie tant que toutes les lignes sont lues et que vous fermez le `DataReader`.</span><span class="sxs-lookup"><span data-stu-id="c185e-483">The `RecordsAffected` property is not set until all rows are read and you close the `DataReader`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c185e-484">Cette propri√©t√© et <see cref="P:System.Data.Common.DbDataReader.IsClosed" /> doit √™tre impl√©ment√©e pour retourner une valeur lorsque le lecteur est ferm√©.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c185e-484">This property and <see cref="P:System.Data.Common.DbDataReader.IsClosed" /> should be implemented to return a value when the reader is closed.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-485">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-485">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataReader.Close">
      <MemberSignature Language="C#" Value="void IDataReader.Close ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.IDataReader.Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.System#Data#IDataReader#Close" />
      <MemberSignature Language="VB.NET" Value="Sub Close () Implements IDataReader.Close" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.IDataReader.Close() = System::Data::IDataReader::Close;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataReader.GetSchemaTable">
      <MemberSignature Language="C#" Value="System.Data.DataTable IDataReader.GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.DataTable System.Data.IDataReader.GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.System#Data#IDataReader#GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Function GetSchemaTable () As DataTable Implements IDataReader.GetSchemaTable" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::DataTable ^ System.Data.IDataReader.GetSchemaTable() = System::Data::IDataReader::GetSchemaTable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (ordinal As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int ordinal) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="c185e-486">Num√©ro de colonne de base z√©ro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-486">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c185e-487">Pour obtenir une description de ce membre, consultez <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-487">For a description of this member, see <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c185e-488">Instance de <see cref="T:System.Data.IDataReader" /> √† utiliser lorsque le champ pointe vers des donn√©es structur√©es plus distantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-488">An instance of <see cref="T:System.Data.IDataReader" /> to be used when the field points to more remote structured data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-489">Ce membre est une impl√©mentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="c185e-489">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c185e-490">Il peut uniquement √™tre utilis√© lorsque l'instance de <xref:System.Data.Common.DbDataReader> est cast√©e en interface <xref:System.Data.IDataRecord>.</span><span class="sxs-lookup"><span data-stu-id="c185e-490">It can be used only when the <xref:System.Data.Common.DbDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-491">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-491">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public virtual int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleFieldCount : int" Usage="System.Data.Common.DbDataReader.VisibleFieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c185e-492">Obtient le nombre de champs dans <see cref="T:System.Data.Common.DbDataReader" /> qui ne sont pas masqu√©s.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-492">Gets the number of fields in the <see cref="T:System.Data.Common.DbDataReader" /> that are not hidden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c185e-493">Nombre de champs qui ne sont pas masqu√©s.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-493">The number of fields that are not hidden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c185e-494">Cette valeur est utilis√©e pour d√©terminer combien de champs dans <xref:System.Data.Common.DbDataReader> sont visibles.</span><span class="sxs-lookup"><span data-stu-id="c185e-494">This value is used to determine how many fields in the <xref:System.Data.Common.DbDataReader> are visible.</span></span> <span data-ttu-id="c185e-495">Par exemple, un SELECT sur une cl√© primaire partielle retourne les parties restantes de la cl√© sous la forme de champs masqu√©s.</span><span class="sxs-lookup"><span data-stu-id="c185e-495">For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</span></span> <span data-ttu-id="c185e-496">Les champs masqu√©s sont toujours ajout√©s derri√®re les champs visibles.</span><span class="sxs-lookup"><span data-stu-id="c185e-496">The hidden fields are always appended behind the visible fields.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="c185e-497">Vue d'ensemble d'ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="c185e-497">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>