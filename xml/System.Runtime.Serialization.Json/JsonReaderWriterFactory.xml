<Type Name="JsonReaderWriterFactory" FullName="System.Runtime.Serialization.Json.JsonReaderWriterFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0092286e389e04d7f227b072971845d72f42e71" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class JsonReaderWriterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderWriterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonReaderWriterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderWriterFactory abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0bed9-101">Produit des instances de <see cref="T:System.Xml.XmlDictionaryReader" /> permettant de lire des données encodées en JSON (JavaScript Object Notation) d'un flux ou d'une mémoire tampon et de les mapper sur un Infoset XML et sur les instances de <see cref="T:System.Xml.XmlDictionaryWriter" /> capables de mapper un Infoset XML à sa contrepartie JSON et d'écrire des données encodées en JSON dans un flux de données.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bed9-101">Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<span data-ttu-id="0bed9-102"> traite les messages JSON à l'aide d'un mappage entre les données JSON et l'Infoset XML.</span><span class="sxs-lookup"><span data-stu-id="0bed9-102"> processes JSON messages using a mapping between JSON data and the XML Infoset.</span></span> <span data-ttu-id="0bed9-103">Normalement, ce mappage est masqué.</span><span class="sxs-lookup"><span data-stu-id="0bed9-103">Normally, this mapping is hidden from view.</span></span> <span data-ttu-id="0bed9-104">Toutefois, dans certains scénarios avancés, il peut être nécessaire de convertir manuellement entre JSON et XML.</span><span class="sxs-lookup"><span data-stu-id="0bed9-104">However, in some advanced scenarios it may be necessary to manually convert between JSON and XML.</span></span> <span data-ttu-id="0bed9-105">Dans ce cas, la classe <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> peut être utilisée pour créer les lecteurs et générateurs XML nécessaires.</span><span class="sxs-lookup"><span data-stu-id="0bed9-105">In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers.</span></span> <span data-ttu-id="0bed9-106">Notez que chaque élément de l'Infoset XML ne peut pas être mappé à JSON.</span><span class="sxs-lookup"><span data-stu-id="0bed9-106">Note that not every XML Infoset element can be mapped to JSON.</span></span> [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="0bed9-107"> mappage, consultez [Comment : sérialiser et désérialiser des données JSON](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span><span class="sxs-lookup"><span data-stu-id="0bed9-107"> mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateJsonReader">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0bed9-108">Crée un objet <see cref="T:System.Xml.XmlDictionaryReader" /> capable de mapper des flux ou des mémoires tampons encodés en JSON (JavaScript Object Notation) à un Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-108">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map - streams or buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bed9-109">Chacune des surcharges utilise un <xref:System.Xml.XmlDictionaryReaderQuotas> pour empêcher les attaques par déni de service pendant la lecture de données non fiables.</span><span class="sxs-lookup"><span data-stu-id="0bed9-109">Each of the overloads uses a <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service (DoS) attacks when reading untrusted data.</span></span> [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="0bed9-110"> à l’aide de <xref:System.Xml.XmlDictionaryReaderQuotas> pour empêcher les attaques par déni de Service lors de la lecture des données non fiables, consultez [considérations de sécurité pour les données](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="0bed9-110"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0bed9-111">Tableau de mémoire tampon <see cref="T:System.Byte" /> d'entrée dans lequel lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-111">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="0bed9-112">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilisé pour empêcher les attaques par déni de service lors de la lecture de données non fiables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-112">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bed9-113">Crée un objet <see cref="T:System.Xml.XmlDictionaryReader" /> capable de mapper des mémoires tampons encodées en JSON (JavaScript Object Notation) à un Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-113">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bed9-114">
            <see cref="T:System.Xml.XmlDictionaryReader" /> capable de traiter les données JSON (JavaScript Objet Notation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-114">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bed9-115">Cette surcharge n'accepte pas de paramètre <xref:System.Text.Encoding>.</span><span class="sxs-lookup"><span data-stu-id="0bed9-115">This overload does not accept an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="0bed9-116">Le codage de caractères (UTF-8, Unicode ou Big-Endian Unicode) est détecté automatiquement lors de la lecture des données.</span><span class="sxs-lookup"><span data-stu-id="0bed9-116">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="0bed9-117"> à l’aide de <xref:System.Xml.XmlDictionaryReaderQuotas> pour empêcher les attaques par déni de Service lors de la lecture des données non fiables, consultez [considérations de sécurité pour les données](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="0bed9-117"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0bed9-118">
            <see cref="T:System.IO.Stream" /> d'entrée à partir duquel effectuer la lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-118">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="0bed9-119">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilisé pour empêcher les attaques par déni de service lors de la lecture de données non fiables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-119">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bed9-120">Crée un objet <see cref="T:System.Xml.XmlDictionaryReader" /> capable de mapper des flux encodés en JSON (JavaScript Object Notation) à un Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-120">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bed9-121">
            <see cref="T:System.Xml.XmlDictionaryReader" /> capable de lire des données JSON (JavaScript Object Notation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-121">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bed9-122">Cette surcharge n'accepte pas de paramètre <xref:System.Text.Encoding>.</span><span class="sxs-lookup"><span data-stu-id="0bed9-122">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="0bed9-123">Le codage de caractères (UTF-8, Unicode ou Big-Endian Unicode) est détecté automatiquement lors de la lecture des données.</span><span class="sxs-lookup"><span data-stu-id="0bed9-123">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="0bed9-124"> à l’aide de <xref:System.Xml.XmlDictionaryReaderQuotas> pour empêcher les attaques par déni de Service lors de la lecture des données non fiables, consultez [considérations de sécurité pour les données](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="0bed9-124"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0bed9-125">Tableau de mémoire tampon <see cref="T:System.Byte" /> d'entrée dans lequel lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-125">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="0bed9-126">Position de départ à partir de laquelle effectuer la lecture dans <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-126">Starting position from which to read in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0bed9-127">Nombre d’octets pouvant être lus à partir de <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-127">Number of bytes that can be read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="0bed9-128">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilisé pour empêcher les attaques par déni de service lors de la lecture de données non fiables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-128">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bed9-129">Crée un objet <see cref="T:System.Xml.XmlDictionaryReader" /> capable de mapper des mémoires tampons encodées en JSON (JavaScript Object Notation), dont la taille et le décalage sont précisés, à un Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-129">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bed9-130">
            <see cref="T:System.Xml.XmlDictionaryReader" /> capable de lire des données JSON (JavaScript Object Notation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-130">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bed9-131">Cette surcharge n'accepte pas de paramètre <xref:System.Text.Encoding>.</span><span class="sxs-lookup"><span data-stu-id="0bed9-131">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="0bed9-132">Le codage de caractères (UTF-8, Unicode ou Big-Endian Unicode) est détecté automatiquement lors de la lecture des données.</span><span class="sxs-lookup"><span data-stu-id="0bed9-132">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="0bed9-133"> à l’aide de <xref:System.Xml.XmlDictionaryReaderQuotas> pour empêcher les attaques par déni de Service lors de la lecture des données non fiables, consultez [considérations de sécurité pour les données](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="0bed9-133"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0bed9-134">
            <see cref="T:System.IO.Stream" /> d'entrée à partir duquel effectuer la lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-134">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="0bed9-135">
            <see cref="T:System.Text.Encoding" /> qui spécifie l'encodage de caractère utilisé par le lecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-135">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span>
          </span>
          <span data-ttu-id="0bed9-136">Si <see langword="null" /> est spécifié comme valeur, le lecteur essaie de détecter automatiquement l'encodage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-136">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="0bed9-137">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilisé pour empêcher les attaques par déni de service lors de la lecture de données non fiables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-137">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <param name="onClose">
          <span data-ttu-id="0bed9-138">Délégué <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> à appeler lorsque le lecteur est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-138">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bed9-139">Crée un objet <see cref="T:System.Xml.XmlDictionaryReader" /> capable de mapper des flux encodés en JSON (JavaScript Object Notation), dont la taille et le décalage sont précisés, à un Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-139">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bed9-140">
            <see cref="T:System.Xml.XmlDictionaryReader" /> capable de lire des données JSON (JavaScript Object Notation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-140">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="0bed9-141"> à l’aide de <xref:System.Xml.XmlDictionaryReaderQuotas> pour empêcher les attaques par déni de Service lors de la lecture des données non fiables, consultez [considérations de sécurité pour les données](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="0bed9-141"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0bed9-142">Tableau de mémoire tampon <see cref="T:System.Byte" /> d'entrée dans lequel lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-142">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="0bed9-143">Position de départ à partir de laquelle effectuer la lecture dans <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-143">Starting position from which to read in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0bed9-144">Nombre d’octets pouvant être lus à partir de <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-144">Number of bytes that can be read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="0bed9-145">
            <see cref="T:System.Text.Encoding" /> qui spécifie l'encodage de caractère utilisé par le lecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-145">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span>
          </span>
          <span data-ttu-id="0bed9-146">Si <see langword="null" /> est spécifié comme valeur, le lecteur essaie de détecter automatiquement l'encodage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-146">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="0bed9-147">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilisé pour empêcher les attaques par déni de service lors de la lecture de données non fiables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-147">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <param name="onClose">
          <span data-ttu-id="0bed9-148">Délégué <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> à appeler lorsque le lecteur est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-148">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          </span>
          <span data-ttu-id="0bed9-149">La valeur par défaut est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-149">The default value is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bed9-150">Crée un objet <see cref="T:System.Xml.XmlDictionaryReader" /> capable de mapper des mémoires tampons encodées en JSON (JavaScript Object Notation), dont la taille, le décalage et le codage de caractères sont précisés, à un Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-150">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bed9-151">
            <see cref="T:System.Xml.XmlDictionaryReader" /> capable de lire des données JSON (JavaScript Object Notation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-151">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="0bed9-152"> à l’aide de <xref:System.Xml.XmlDictionaryReaderQuotas> pour empêcher les attaques par déni de Service lors de la lecture des données non fiables, consultez [considérations de sécurité pour les données](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="0bed9-152"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateJsonWriter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0bed9-153">Crée un objet <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit des données encodées par JSON dans un flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-153">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bed9-154">La méthode statique <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> retourne une instance de <xref:System.Xml.XmlDictionaryWriter> capable de mapper un Infoset XML à un flux JSON.</span><span class="sxs-lookup"><span data-stu-id="0bed9-154">The <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> static method returns an instance of an <xref:System.Xml.XmlDictionaryWriter> that can map an XML Infoset to a JSON stream.</span></span> <span data-ttu-id="0bed9-155">Il n'est pas garanti que <xref:System.Xml.XmlDictionaryWriter> produise des données JSON valides.</span><span class="sxs-lookup"><span data-stu-id="0bed9-155">The <xref:System.Xml.XmlDictionaryWriter> is not guaranteed to produce valid JSON.</span></span> <span data-ttu-id="0bed9-156">S'il est utilisé d'une manière non prise en charge par le mappage JSON-XML, il peut lever une exception ou écrire un document JSON non valide.</span><span class="sxs-lookup"><span data-stu-id="0bed9-156">If it is used in a way not supported by the JSON-XML mapping, it may either throw an exception or write an invalid JSON document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0bed9-157">
            <see cref="T:System.IO.Stream" /> de sortie pour le générateur JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-157">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bed9-158">Crée un objet <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit des données encodées par JSON dans un flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-158">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bed9-159">
            <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit des données encodées par JSON dans un flux s'appuyant sur un Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-159">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bed9-160">L'encodage de caractères par défaut est UTF-8.</span><span class="sxs-lookup"><span data-stu-id="0bed9-160">The default character encoding is UTF-8.</span></span> <span data-ttu-id="0bed9-161">Lorsque le générateur est fermé, le flux est également fermé.</span><span class="sxs-lookup"><span data-stu-id="0bed9-161">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0bed9-162">
            <see cref="T:System.IO.Stream" /> de sortie pour le générateur JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-162">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="0bed9-163">
            <see cref="T:System.Text.Encoding" /> qui spécifie l'encodage de caractères utilisé par le générateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-163">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="0bed9-164">L'encodage par défaut est UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-164">The default encoding is UTF-8.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bed9-165">Crée un objet <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit des données encodées par JSON dans un flux d'après un codage de caractères indiqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-165">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bed9-166">
            <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit des données encodées par JSON dans un flux s'appuyant sur un Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-166">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bed9-167">Lorsque le générateur est fermé, le flux est également fermé.</span><span class="sxs-lookup"><span data-stu-id="0bed9-167">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0bed9-168">
            <see cref="T:System.IO.Stream" /> de sortie pour le générateur JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-168">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="0bed9-169">
            <see cref="T:System.Text.Encoding" /> qui spécifie l'encodage de caractères utilisé par le générateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-169">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="0bed9-170">L'encodage par défaut est UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-170">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="0bed9-171">Si la valeur est <see langword="true" />, le flux de sortie est fermé par le writer lorsqu'il est terminé ; sinon, la valeur est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-171">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0bed9-172">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-172">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bed9-173">Crée un objet <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit des données encodées par JSON dans un flux d'après un codage de caractères indiqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-173">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bed9-174">
            <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit des données encodées par JSON dans un flux s'appuyant sur un Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-174">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0bed9-175">
            <see cref="T:System.IO.Stream" /> de sortie pour le générateur JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-175">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="0bed9-176">
            <see cref="T:System.Text.Encoding" /> qui spécifie l'encodage de caractères utilisé par le générateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-176">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="0bed9-177">L'encodage par défaut est UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-177">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="0bed9-178">Si la valeur est <see langword="true" />, le flux de sortie est fermé par le writer lorsqu'il est terminé ; sinon, la valeur est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-178">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0bed9-179">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-179">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="indent">
          <span data-ttu-id="0bed9-180">Si la valeur est <see langword="true" />, la sortie utilise le format multiligne, mettant en retrait chaque niveau correctement ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-180">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bed9-181">Crée un objet <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit des données encodées par JSON dans un flux d'après un caractère spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-181">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bed9-182">
            <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit des données encodées par JSON dans un flux s'appuyant sur un Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-182">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent, System::String ^ indentChars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
        <Parameter Name="indentChars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0bed9-183">
            <see cref="T:System.IO.Stream" /> de sortie pour le générateur JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-183">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="0bed9-184">
            <see cref="T:System.Text.Encoding" /> qui spécifie l'encodage de caractères utilisé par le générateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-184">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="0bed9-185">L'encodage par défaut est UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-185">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="0bed9-186">Si la valeur est <see langword="true" />, le flux de sortie est fermé par le writer lorsqu'il est terminé ; sinon, la valeur est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-186">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0bed9-187">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-187">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="indent">
          <span data-ttu-id="0bed9-188">Si la valeur est <see langword="true" />, la sortie utilise le format multiligne, mettant en retrait chaque niveau correctement ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-188">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="indentChars">
          <span data-ttu-id="0bed9-189">Chaîne utilisée pour mettre en retrait chaque niveau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-189">The string used to indent each level.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bed9-190">Crée un objet <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit des données encodées par JSON dans un flux d'après un caractère spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-190">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bed9-191">
            <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit des données encodées par JSON dans un flux s'appuyant sur un Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bed9-191">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>