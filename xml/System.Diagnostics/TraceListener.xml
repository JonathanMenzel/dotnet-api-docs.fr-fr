<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TraceListener.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb72c5f0a19ff3ffa188a78d242d3faa1ccf78e99fc7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5f0a19ff3ffa188a78d242d3faa1ccf78e99fc7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Provides the <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> base class for the listeners who monitor trace and debug output.</source>
          <target state="translated">Fournit la classe de base <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> pour les écouteurs qui surveillent la sortie de trace et de débogage.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>For examples of how to implement a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>, see the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> and the <ph id="ph4">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> classes.</source>
          <target state="translated">Pour obtenir des exemples montrant comment implémenter un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>, consultez la <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> et <ph id="ph4">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">Vous devez activer le traçage ou de débogage pour utiliser un écouteur de suivi.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">La syntaxe suivante est spécifique au compilateur.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">Si vous utilisez des compilateurs autres que c# ou Visual Basic, reportez-vous à la documentation de votre compilateur.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or you can add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">Pour activer le débogage en c#, ajoutez le <ph id="ph1">`/d:DEBUG`</ph> indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou vous pouvez ajouter <ph id="ph2">`#define DEBUG`</ph> vers le haut de votre fichier.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">Dans Visual Basic, ajoutez le <ph id="ph1">`/d:DEBUG=True`</ph> indicateur pour la ligne de commande du compilateur.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">Pour activer le traçage en c#, ajoutez le <ph id="ph1">`/d:TRACE`</ph> indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou ajoutez <ph id="ph2">`#define TRACE`</ph> vers le haut de votre fichier.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">Dans Visual Basic, ajoutez le <ph id="ph1">`/d:TRACE=True`</ph> indicateur pour la ligne de commande du compilateur.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>To add a trace listener, edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">Pour ajouter un écouteur de trace, modifiez le fichier de configuration qui correspond au nom de votre application.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">Dans ce fichier, vous pouvez ajouter un écouteur, définissez son type et ses paramètres, supprimer un écouteur ou effacer tous les écouteurs définis précédemment par l’application.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>The configuration file should be formatted similar to the following example.</source>
          <target state="translated">Le fichier de configuration doit être mis en forme comme dans l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>For more information on using configuration files for tracing, see <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.diagnostics<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’utilisation de fichiers de configuration pour le traçage, consultez <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>system.diagnostics<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>This type is thread safe.</source>
          <target state="translated">Ce type est thread-safe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>Inherit from this class to implement a custom listener for the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Debug" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Diagnostics.Trace" /&gt;</ph> classes.</source>
          <target state="translated">Hériter de cette classe pour implémenter un écouteur personnalisé pour le <ph id="ph1">&lt;see cref="T:System.Diagnostics.Debug" /&gt;</ph> et <ph id="ph2">&lt;see cref="T:System.Diagnostics.Trace" /&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>At a minimum, you must implement the <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /&gt;</ph> methods.</source>
          <target state="translated">Au minimum, vous devez implémenter la <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /&gt;</ph> et <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>Additionally, you can implement the <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.Close" /&gt;</ph> and <ph id="ph3">&lt;see cref="M:System.Diagnostics.TraceListener.Flush" /&gt;</ph> methods.</source>
          <target state="translated">En outre, vous pouvez implémenter la <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.Close" /&gt;</ph> et <ph id="ph3">&lt;see cref="M:System.Diagnostics.TraceListener.Flush" /&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Default Value</source>
          <target state="translated">Valeur par défaut</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Name</source>
          <target state="translated">Name</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>The empty string ("").</source>
          <target state="translated">La chaîne vide (« »).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Indent</source>
          <target state="translated">Retrait</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Zero.</source>
          <target state="translated">Zéro.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>IndentSize</source>
          <target state="translated">IndentSize</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Four spaces.</source>
          <target state="translated">Quatre espaces.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.#ctor(System.String)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">Nom du <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class using the specified name as the listener.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> avec le nom spécifié pour l'écouteur.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>Gets the custom trace listener attributes defined in the application configuration file.</source>
          <target state="translated">Obtient les attributs d'écouteur de trace personnalisés définis dans le fichier de configuration de l'application.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringDictionary" /&gt;</ph> containing the custom attributes for the trace listener.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringDictionary" /&gt;</ph> qui contient les attributs personnalisés pour l'écouteur de trace.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> class can add custom attributes by overriding the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> method and returning a string array of custom attribute names.</source>
          <target state="translated">Les classes qui héritent de la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> classe peut ajouter des attributs personnalisés en substituant la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> (méthode) et en retournant un tableau de chaînes de noms d’attributs personnalisés.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Attributes%2A&gt;</ph> property identifies the custom attributes that are referenced in the application's configuration file.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Attributes%2A&gt;</ph> propriété identifie les attributs personnalisés qui sont référencés dans le fichier de configuration de l’application.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>For example, in the following configuration file excerpt the <ph id="ph1">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> custom attribute "delimiter" is referenced.</source>
          <target state="translated">Par exemple, dans l’extrait de fichier de configuration suivant le <ph id="ph1">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> attribut personnalisé « délimiteur » est référencée.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Attributes%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Collections.Specialized.StringDictionary&gt;</ph> containing the string "delimiter".</source>
          <target state="translated">Dans ce cas, le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Attributes%2A&gt;</ph> propriété retourne un <ph id="ph2">&lt;xref:System.Collections.Specialized.StringDictionary&gt;</ph> qui contient la chaîne « délimiteur ».</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>Unreferenced custom attributes are not enumerated.</source>
          <target state="translated">Attributs personnalisés non référencés ne sont pas énumérées.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Pour plus d'informations, voir la méthode <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Close">
          <source>When overridden in a derived class, closes the output stream so it no longer receives tracing or debugging output.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, ferme le flux de sortie pour qu'il ne reçoive plus la sortie de trace ou de débogage.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Close">
          <source>Use this method when the output is going to a file, such as to the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">Utilisez cette méthode lorsque la sortie va vers un fichier, telles que le <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Close">
          <source>After a call to this method, you must reinitialize the object.</source>
          <target state="translated">Après un appel à cette méthode, vous devez réinitialiser l’objet.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">Libère les ressources utilisées par le <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">Libère toutes les ressources utilisées par <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Appel de <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> autorise les ressources utilisées par le <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> à être réaffectés à d’autres fins.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode est appelée par le public <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> appelle la méthode protégée <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> méthode avec la <ph id="ph3">`disposing`</ph> paramètre la valeur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> appelle <ph id="ph2">`Dispose`</ph> avec <ph id="ph3">`disposing`</ph> la valeur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> references.</source>
          <target state="translated">Si le paramètre <ph id="ph1">`disposing`</ph> a la valeur <ph id="ph2">`true`</ph>, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Cette méthode appelle la méthode <ph id="ph1">`Dispose`</ph> de chaque objet référencé.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> peut être appelée plusieurs fois par d'autres objets.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Lorsque vous substituez cette méthode, veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’implémentation <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, consultez <bpt id="p1">[</bpt>implémentant une méthode de suppression<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> et <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Emits error messages to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Émet des messages d'erreur à l'écouteur que vous créez lors de l'implémentation de la classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>A message to emit.</source>
          <target state="translated">Message à émettre.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>Emits an error message to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Émet un message d'erreur à l'écouteur que vous créez lors de l'implémentation de la classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>The default behavior is to display the specified message in a message box when the application is running in a user-interface mode, and to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in a <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection.</source>
          <target state="translated">Le comportement par défaut consiste à afficher le message spécifié dans une boîte de message lors de l’application s’exécute en mode interface utilisateur et en le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> les instances en un <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection has an instance of a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Par défaut, le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection comporte une instance d’un <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to or removing one from the collection.</source>
          <target state="translated">Vous pouvez personnaliser ce comportement en ajoutant un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> à ou en le supprimant de la collection.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>A message to emit.</source>
          <target state="translated">Message à émettre.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>A detailed message to emit.</source>
          <target state="translated">Message détaillé à émettre.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>Emits an error message and a detailed error message to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Émet un message d'erreur, ainsi qu'un message d'erreur détaillé, à l'écouteur que vous créez lors de l'implémentation de la classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>The default behavior is to display the message and detailed message in a message box when the application is running in a user-interface mode, and to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in a <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection.</source>
          <target state="translated">Le comportement par défaut consiste à afficher le message et le message détaillé dans une boîte de message lors de l’application s’exécute en mode interface utilisateur et en le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> les instances en un <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection has an instance of a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Par défaut, le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection comporte une instance d’un <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to or removing one from the collection.</source>
          <target state="translated">Vous pouvez personnaliser ce comportement en ajoutant un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> à ou en le supprimant de la collection.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>Gets and sets the trace filter for the trace listener.</source>
          <target state="translated">Obtient et définit le filtre de trace pour l'écouteur de trace.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceFilter" /&gt;</ph> base class.</source>
          <target state="translated">Objet dérivé de la classe de base <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceFilter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>A trace filter can be added to a trace listener to provide a layer of screening beyond that provided to the trace source by switches.</source>
          <target state="translated">Un filtre de trace peut être ajouté à un écouteur de trace pour fournir une couche de détection au-delà de celle fournie à la source de trace par les commutateurs.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Diagnostics.EventTypeFilter&gt;</ph> can be added to a trace listener to control the event types that are output by the listener.</source>
          <target state="translated">Par exemple, le <ph id="ph1">&lt;xref:System.Diagnostics.EventTypeFilter&gt;</ph> peut être ajouté à un écouteur de trace pour contrôler les types d’événements qui sont générés par l’écouteur.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>Listeners that are called because the switch criteria are met can query their filter, if present, to determine if a trace is to be sent to output.</source>
          <target state="translated">Les écouteurs qui sont appelées, car le commutateur critères peuvent interroger leur filtre, le cas échéant, pour déterminer si une trace doit être envoyés à la sortie.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> property to add a source filter to a console trace listener.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> propriété à ajouter un filtre source à un écouteur de trace de console.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Flush">
          <source>When overridden in a derived class, flushes the output buffer.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, vide la mémoire tampon de sortie.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>Gets the custom attributes supported by the trace listener.</source>
          <target state="translated">Obtient les attributs personnalisés pris en charge par l'écouteur de trace.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>A string array naming the custom attributes supported by the trace listener, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there are no custom attributes.</source>
          <target state="translated">Tableau de chaînes qui nomme les attributs personnalisés pris en charge par l'écouteur de trace, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> s'il n'y a pas d'attributs personnalisés.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>The default implementation for <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">L’implémentation par défaut pour <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> retourne <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>The following code sample shows an override of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> method for a custom trace listener.</source>
          <target state="translated">L’exemple de code suivant illustre une substitution de la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> méthode pour un écouteur de suivi personnalisé.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>When inheriting from the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class or a derived class, you can override the <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /&gt;</ph> method to provide custom attributes for your class.</source>
          <target state="translated">Lorsque vous héritez à partir de la <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> classe ou une classe dérivée, vous pouvez remplacer le <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /&gt;</ph> méthode pour fournir des attributs personnalisés pour votre classe.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>Gets or sets the indent level.</source>
          <target state="translated">Obtient ou définit le niveau de retrait.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>The indent level.</source>
          <target state="translated">Niveau de retrait.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>The default is zero.</source>
          <target state="translated">La valeur par défaut est zéro.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> property represents the number of times that the indent specified by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> property is applied.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> propriété représente le nombre de fois où le retrait spécifié par le <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> propriété est appliquée.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>This property is stored on per-thread/per-request basis.</source>
          <target state="translated">Cette propriété est stockée par thread/par demande.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>Gets or sets the number of spaces in an indent.</source>
          <target state="translated">Obtient ou définit le nombre d'espaces dans un retrait.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>The number of spaces in an indent.</source>
          <target state="translated">Nombre d'espaces dans un retrait.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>The default is four spaces.</source>
          <target state="translated">La valeur par défaut est quatre espaces.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>The property is stored on per-thread/per-request basis.</source>
          <target state="translated">La propriété est stockée par thread/par demande.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>Set operation failed because the value is less than zero.</source>
          <target state="translated">L'opération ensembliste a échoué car la valeur est inférieure à zéro.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>Gets a value indicating whether the trace listener is thread safe.</source>
          <target state="translated">Obtient une valeur qui indique si l'écouteur de trace est thread-safe.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the trace listener is thread safe; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'écouteur de trace est thread-safe ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>The value of <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> is used to determine whether to use a global lock when writing to the listener.</source>
          <target state="translated">La valeur de <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> est utilisé pour déterminer s’il faut utiliser un verrouillage global lors de l’écriture dans l’écouteur.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>If the value of <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the global lock is used regardless of the value of <ph id="ph3">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph>.</source>
          <target state="translated">Si la valeur de <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> est <ph id="ph2">`false`</ph>, le verrouillage global est utilisé quel que soit la valeur de <ph id="ph3">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>The global lock is not used only if the value of <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the value of <ph id="ph3">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Le verrouillage global n’est pas utilisé uniquement si la valeur de <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> est <ph id="ph2">`true`</ph> et la valeur de <ph id="ph3">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph> est <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>The default behavior is to use the global lock whenever writing to the listener.</source>
          <target state="translated">Le comportement par défaut consiste à utiliser le verrouillage à chaque écriture dans l’écouteur.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.Name">
          <source>Gets or sets a name for this <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit un nom pour ce <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Name">
          <source>A name for this <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">Nom pour ce <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Name">
          <source>The default is an empty string ("").</source>
          <target state="translated">La valeur par défaut est une chaîne vide ("").</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Name">
          <source>The name can be used to organize and access listeners in a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection.</source>
          <target state="translated">Le nom peut être utilisé pour organiser et accéder aux écouteurs dans un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.NeedIndent">
          <source>Gets or sets a value indicating whether to indent the output.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si la sortie doit être mise en retrait.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.NeedIndent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the output should be indented; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la sortie doit être mise en retrait ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.NeedIndent">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt;</ph> method, called by the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes, sets the <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property value to <ph id="ph5">`false`</ph> to prevent later, unnecessary indents.</source>
          <target state="translated"><bpt id="p1">**</bpt>Remarque<ept id="p1">**</ept> le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt;</ph> méthode, appelée par le <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> et <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> , des jeux de classes le <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> valeur de la propriété <ph id="ph5">`false`</ph> afin d’éviter une version ultérieure, les tirets inutiles.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.NeedIndent">
          <source>You must set the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property to <ph id="ph2">`true`</ph> each time you wish to indent trace output.</source>
          <target state="translated">Vous devez définir le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> propriété <ph id="ph2">`true`</ph> chaque fois que vous souhaitez mettre en retrait la sortie de trace.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Writes trace data to the listener specific output.</source>
          <target state="translated">Écrit les données de trace dans la sortie spécifique de l'écouteur.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> spécifiant le type d'événement qui a déclenché la trace.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificateur numérique pour l'événement.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The trace data to emit.</source>
          <target state="translated">Données de trace à émettre.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes trace information, a data object and event information to the listener specific output.</source>
          <target state="translated">Écrit les informations sur la trace, un objet de données et les informations sur les événements dans la sortie spécifique de l'écouteur.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Cette méthode n’est pas destinée à être appelée directement par le code d’application, mais par des membres de la <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, et <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes pour écrire des données de trace en sortie.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The default implementation writes the <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph> and <ph id="ph4">`id`</ph> parameters in the header and footer of the trace.</source>
          <target state="translated">L’implémentation par défaut écrit le <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph> et <ph id="ph4">`id`</ph> paramètres dans l’en-tête et le pied de page de la trace.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">`data`</ph> parameter is written as the body of the trace message.</source>
          <target state="translated">Le <ph id="ph1">`data`</ph> paramètre est écrit dans le corps du message de trace.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">`ToString`</ph> method of the data object is used to convert the object to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`ToString`</ph> méthode de l’objet de données est utilisée pour convertir l’objet en un <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> spécifiant le type d'événement qui a déclenché la trace.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificateur numérique pour l'événement.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>An array of objects to emit as data.</source>
          <target state="translated">Tableau d'objets à émettre comme données.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes trace information, an array of data objects and event information to the listener specific output.</source>
          <target state="translated">Écrit les informations sur la trace, un tableau d'objets de données et les informations sur les événements dans la sortie spécifique de l'écouteur.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Cette méthode n’est pas destinée à être appelée directement par le code d’application, mais par des membres de la <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, et <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes pour écrire des données de trace en sortie.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">L’implémentation par défaut écrit les valeurs de la <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> et <ph id="ph3">`id`</ph> paramètres en tant qu’en-tête.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The data objects are converted to strings using the <ph id="ph1">`ToString`</ph> method of each object.</source>
          <target state="translated">Les objets de données sont convertis en chaînes à l’aide de la <ph id="ph1">`ToString`</ph> méthode de chaque objet.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Le <ph id="ph1">`eventCache`</ph> les données sont écrites dans un pied de page, la nature des données de sortie étant dépendante de la valeur de la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Writes trace and event information to the listener specific output.</source>
          <target state="translated">Écrit les informations sur la trace et les événements dans la sortie spécifique de l'écouteur.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> spécifiant le type d'événement qui a déclenché la trace.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificateur numérique pour l'événement.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Writes trace and event information to the listener specific output.</source>
          <target state="translated">Écrit les informations sur la trace et les événements dans la sortie spécifique de l'écouteur.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Cette méthode n’est pas destinée à être appelée directement par le code d’application, mais par des membres de la <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, et <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes pour écrire des données de trace en sortie.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">L’implémentation par défaut écrit les valeurs de la <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> et <ph id="ph3">`id`</ph> paramètres en tant qu’en-tête.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Le <ph id="ph1">`eventCache`</ph> les données sont écrites dans un pied de page, la nature des données de sortie étant dépendante de la valeur de la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> spécifiant le type d'événement qui a déclenché la trace.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificateur numérique pour l'événement.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A message to write.</source>
          <target state="translated">Message à écrire.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes trace information, a message, and event information to the listener specific output.</source>
          <target state="translated">Écrit les informations sur la trace, un message et les informations sur les événements dans la sortie spécifique de l'écouteur.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Cette méthode n’est pas destinée à être appelée directement par le code d’application, mais par des membres de la <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, et <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes pour écrire des données de trace en sortie.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header, followed by the <ph id="ph4">`message`</ph> data.</source>
          <target state="translated">L’implémentation par défaut écrit les valeurs de la <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> et <ph id="ph3">`id`</ph> paramètres comme un en-tête, suivi par le <ph id="ph4">`message`</ph> données.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Le <ph id="ph1">`eventCache`</ph> les données sont écrites dans un pied de page, la nature des données de sortie étant dépendante de la valeur de la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> spécifiant le type d'événement qui a déclenché la trace.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificateur numérique pour l'événement.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see langword="object" /&gt;</ph> array containing zero or more objects to format.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="object" /&gt;</ph> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes trace information, a formatted array of objects and event information to the listener specific output.</source>
          <target state="translated">Écrit les informations sur la trace, un tableau d'objets mis en forme et les informations sur les événements dans la sortie spécifique de l'écouteur.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Cette méthode n’est pas destinée à être appelée directement par le code d’application, mais par des membres de la <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, et <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes pour écrire des données de trace en sortie.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">L’implémentation par défaut écrit les valeurs de la <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> et <ph id="ph3">`id`</ph> paramètres en tant qu’en-tête.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">`args`</ph> object array is converted to a string using the <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph> method, passing the <ph id="ph3">`format`</ph> string and <ph id="ph4">`args`</ph> array to format the string as the message portion of the trace.</source>
          <target state="translated">Le <ph id="ph1">`args`</ph> tableau d’objets est converti en une chaîne à l’aide de la <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph> méthode, en passant le <ph id="ph3">`format`</ph> chaîne et <ph id="ph4">`args`</ph> tableau à la chaîne de format de la partie de message de la trace.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Le <ph id="ph1">`eventCache`</ph> les données sont écrites dans un pied de page, la nature des données de sortie étant dépendante de la valeur de la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>Gets or sets the trace output options.</source>
          <target state="translated">Obtient ou définit les options de sortie de trace.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>A bitwise combination of the enumeration values.</source>
          <target state="translated">Combinaison d'opérations de bits des valeurs d'énumération.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Diagnostics.TraceOptions.None" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="F:System.Diagnostics.TraceOptions.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property determines the optional content of trace output.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriété détermine le contenu facultatif de la sortie de trace.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The property can be set in the configuration file or programmatically during execution to include additional data specifically for a section of code.</source>
          <target state="translated">La propriété peut être définie dans le fichier de configuration ou par programme lors de l’exécution pour inclure davantage de données en particulier pour une section de code.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>For example, you can set the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property for the console trace listener to <ph id="ph2">&lt;xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType&gt;</ph> to add call stack information to the trace output.</source>
          <target state="translated">Par exemple, vous pouvez définir le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriété pour l’écouteur de trace console <ph id="ph2">&lt;xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType&gt;</ph> pour ajouter des informations de pile des appels à la sortie de trace.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions&gt;</ph> enumeration is not used by the following classes and methods:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions&gt;</ph> énumération n’est pas utilisée par les méthodes et les classes suivantes :</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> class, because it can cause a large volume of data to be written to the log.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> de classe, car il peut provoquer un gros volume de données à écrire dans le journal.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> methods of the <ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, and <ph id="ph5">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes.</source>
          <target state="translated">Le <ph id="ph1">`Write`</ph> et <ph id="ph2">`WriteLine`</ph> méthodes de la <ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, et <ph id="ph5">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> class when they are not overridden in a derived class.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> méthodes de la <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> lorsqu’ils ne sont pas substitués dans une classe dérivée de la classe.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The following example shows the setting of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property for a console trace listener.</source>
          <target state="translated">L’exemple suivant affiche le paramètre de la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriété pour un écouteur de trace de console.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The console trace listener is one of the listeners enumerated in the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> property of a trace source.</source>
          <target state="translated">L’écouteur de suivi de console est un des écouteurs énumérés dans le <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> propriété d’une source de trace.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>Set operation failed because the value is invalid.</source>
          <target state="translated">L'opération ensembliste a échoué car la valeur n'est pas valide.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificateur numérique pour l'événement.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A message to write.</source>
          <target state="translated">Message à écrire.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> object identifying a related activity.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> qui identifie une activité connexe.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>Writes trace information, a message, a related activity identity and event information to the listener specific output.</source>
          <target state="translated">Écrit les informations sur la trace, un message, une identité d'activité connexe et les informations sur les événements dans la sortie spécifique de l'écouteur.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Cette méthode n’est pas destinée à être appelée directement par le code d’application, mais par des membres de la <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, et <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes pour écrire des données de trace en sortie.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;</ph> method is used for the correlation of related traces.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;</ph> méthode est utilisée pour la corrélation de traces connexes.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceTransfer%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;</ph> method to process the call, with the eventType level set to <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph> and the <ph id="ph4">`relatedActivityId`</ph><ph id="ph5">&lt;xref:System.Guid&gt;</ph> as a string appended to the message.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceTransfer%2A&gt;</ph> les appels de méthode le <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;</ph> méthode pour traiter l’appel, avec le niveau de type d’événement <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph> et <ph id="ph4">`relatedActivityId`</ph> <ph id="ph5">&lt;xref:System.Guid&gt;</ph> sous forme de chaîne ajoutée au message.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Writes a message, category name, or the value of an object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Écrit un message, un nom de catégorie ou la valeur de la méthode <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> d'un objet dans l'écouteur que vous créez lors de l'implémentation de la classe <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose fully qualified class name you want to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> dont vous voulez écrire le nom de classe complet.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Écrit la valeur de la méthode <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> de l'objet dans l'écouteur que vous créez lors de l'implémentation de la classe <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>A message to write.</source>
          <target state="translated">Message à écrire.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>When overridden in a derived class, writes the specified message to the listener you create in the derived class.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, écrit le message spécifié dans l'écouteur que vous créez dans la classe dérivée.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>When inheriting from this class, you must implement this method.</source>
          <target state="translated">Lorsque vous héritez de cette classe, vous devez implémenter cette méthode.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>To support an indentation, you should call <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.WriteIndent" /&gt;</ph> if <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour prendre en charge une mise en retrait, vous devez appeler <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.WriteIndent" /&gt;</ph> si <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> est <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>If you need to indent the following line, you must reset <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Si vous avez besoin mettre en retrait de la ligne suivante, vous devez réinitialiser <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> à <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose fully qualified class name you want to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> dont vous voulez écrire le nom de classe complet.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nom de catégorie utilisé pour organiser la sortie.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Écrit un nom de catégorie ou la valeur de la méthode <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> de l'objet dans l'écouteur que vous créez lors de l'implémentation de la classe <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">Message à écrire.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nom de catégorie utilisé pour organiser la sortie.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
          <source>Writes a category name and a message to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Écrit un nom de catégorie et un message dans l'écouteur que vous créez lors de l'implémentation de la classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>Writes the indent to the listener you create when you implement this class, and resets the <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> property to <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Écrit la mise en retrait dans l'écouteur que vous créez lors de l'implémentation de cette classe et rétablit la valeur <ph id="ph2">&lt;see langword="false" /&gt;</ph> à la propriété <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>This method writes the indent and resets the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Cette méthode écrit le retrait et réinitialise le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> propriété <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>Call this method if <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> is <ph id="ph2">`true`</ph> when you are overriding the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">Appelez cette méthode si <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> est <ph id="ph2">`true`</ph> lorsque vous substituez la <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>By default, this method uses blank spaces for indentation.</source>
          <target state="translated">Par défaut, cette méthode utilise des espaces vides pour la mise en retrait.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>The size of the indent is determined by the values of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> properties.</source>
          <target state="translated">La taille du retrait est déterminée par les valeurs de la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> property represents the number of times the indent of the size specified by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> property is applied.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> propriété représente le nombre de fois où le retrait de la taille spécifiée par la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> propriété est appliquée.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes.</source>
          <target state="translated">Cette méthode est appelée par le <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> et <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Writes a message, category name, or the value of an object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class, followed by a line terminator.</source>
          <target state="translated">Écrit un message, un nom de catégorie ou la valeur de la méthode <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> d'un objet dans l'écouteur que vous créez lors de l'implémentation de la classe <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>, suivis d'une marque de fin de ligne.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose fully qualified class name you want to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> dont vous voulez écrire le nom de classe complet.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class, followed by a line terminator.</source>
          <target state="translated">Écrit la valeur de la méthode <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> de l'objet dans l'écouteur que vous créez lors de l'implémentation de la classe <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>, suivie d'une marque de fin de ligne.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">Le terminateur de ligne par défaut que vous pouvez implémenter est un retour chariot suivi d’un saut de ligne (\r\n).</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>A message to write.</source>
          <target state="translated">Message à écrire.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, écrit un message dans l'écouteur que vous créez dans la classe dérivée, suivi d'une marque de fin de ligne.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">Le terminateur de ligne par défaut que vous pouvez implémenter est un retour chariot suivi d’un saut de ligne (\r\n).</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>When inheriting from this class, you must implement this method.</source>
          <target state="translated">Lorsque vous héritez de cette classe, vous devez implémenter cette méthode.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>To support an indentation, call <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.WriteIndent" /&gt;</ph> if <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour prendre en charge une mise en retrait, appelez <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.WriteIndent" /&gt;</ph> si <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> est <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>To indent the following line, you must reset <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour mettre en retrait de la ligne suivante, vous devez réinitialiser <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> à <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose fully qualified class name you want to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> dont vous voulez écrire le nom de classe complet.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nom de catégorie utilisé pour organiser la sortie.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class, followed by a line terminator.</source>
          <target state="translated">Écrit un nom de catégorie ou la valeur de la méthode <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> de l'objet dans l'écouteur que vous créez lors de l'implémentation de la classe <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>, suivis d'une marque de fin de ligne.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">Le terminateur de ligne par défaut que vous pouvez implémenter est un retour chariot suivi d’un saut de ligne (\r\n).</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">Message à écrire.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nom de catégorie utilisé pour organiser la sortie.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <source>Writes a category name and a message to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class, followed by a line terminator.</source>
          <target state="translated">Écrit un nom de catégorie ou un message dans l'écouteur que vous créez lors de l'implémentation de la classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>, suivis d'une marque de fin de ligne.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">Le terminateur de ligne par défaut que vous pouvez implémenter est un retour chariot suivi d’un saut de ligne (\r\n).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>