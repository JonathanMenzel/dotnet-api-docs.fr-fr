<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StackFrameExtensions.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac522079cdce8cad18d0736a22314a081bfa1580bbb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22079cdce8cad18d0736a22314a081bfa1580bbb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.7.1,netstandard-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.StackFrameExtensions">
          <source>Provides extension methods for the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class, which represents a function call on the call stack for the current thread.</source>
          <target state="translated">Fournit des méthodes d’extension pour la classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph>, qui représente un appel de fonction sur la pile des appels du thread actuel.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">Frame de pile.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
          <source>Returns a pointer to the base address of the native image that this stack frame is executing.</source>
          <target state="translated">Retourne un pointeur vers l’adresse de base de l’image native exécutée par ce frame de pile.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
          <source>A pointer to the base address of the native image or <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> if you're targeting the .NET Framework.</source>
          <target state="translated">Pointeur vers l’adresse de base de l’image native ou <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> si vous ciblez le .NET Framework.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">Frame de pile.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
          <source>Gets an interface pointer to the start of the native code for the method that is being executed.</source>
          <target state="translated">Obtient un pointeur d’interface vers le début du code natif pour la méthode en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
          <source>An interface pointer to the start of the native code for the method that is being executed or <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> if you're targeting the .NET Framework.</source>
          <target state="translated">Pointeur d’interface vers le début du code natif pour la méthode à exécuter ou <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> si vous ciblez le .NET Framework.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">Frame de pile.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
          <source>Indicates whether an offset from the start of the IL code for the method that is executing is available.</source>
          <target state="translated">Indique si un offset par rapport au début du code MSIL pour la méthode en cours d’exécution est disponible.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the offset is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l’offset est disponible ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">Frame de pile.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
          <source>Indicates whether information about the method in which the specified frame is executing is available.</source>
          <target state="translated">Indique si les informations sur la méthode dans laquelle s’exécute le frame spécifié sont disponibles.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if information about the method in which the current frame is executing is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les informations sur la méthode dans laquelle le frame actuel s’exécute sont disponibles ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">Frame de pile.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
          <source>Indicates whether the native image is available for the specified stack frame.</source>
          <target state="translated">Indique si l’image native est disponible pour le frame de pile spécifié.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a native image is available for this stack frame; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si une image native est disponible pour ce frame de pile ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">Frame de pile.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
          <source>Indicates whether the file that contains the code that the specified stack frame is executing is available.</source>
          <target state="translated">Indique si le fichier qui contient le code exécuté par le frame de pile spécifié est disponible.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the code that the specified stack frame is executing is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le code exécuté par le frame de pile spécifié est disponible ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>