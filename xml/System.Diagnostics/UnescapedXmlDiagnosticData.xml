<Type Name="UnescapedXmlDiagnosticData" FullName="System.Diagnostics.UnescapedXmlDiagnosticData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80881a7c611101638d91f5151e2058beb99d813d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36341825" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UnescapedXmlDiagnosticData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UnescapedXmlDiagnosticData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
  <TypeSignature Language="VB.NET" Value="Public Class UnescapedXmlDiagnosticData" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnescapedXmlDiagnosticData" />
  <TypeSignature Language="F#" Value="type UnescapedXmlDiagnosticData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit les données XML sans séquence d'échappement pour l'enregistrement de données de trace fournies par l'utilisateur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe est utilisée par le <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> méthodes. Il peut également être utilisé pour passer des données XML à le <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> méthodes.  
  
> [!NOTE]
>  Les données fournies par l’utilisateur ne sont pas activées pour la validation du schéma.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser <xref:System.Diagnostics.UnescapedXmlDiagnosticData> classe. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.EventSchemaTraceListener> classe.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#11)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnescapedXmlDiagnosticData (string xmlPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.UnescapedXmlDiagnosticData.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlPayload As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnescapedXmlDiagnosticData(System::String ^ xmlPayload);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.UnescapedXmlDiagnosticData : string -&gt; System.Diagnostics.UnescapedXmlDiagnosticData" Usage="new System.Diagnostics.UnescapedXmlDiagnosticData xmlPayload" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlPayload">Les données XML à enregistrer dans le nœud <see langword="UserData" /> du schéma d'événement.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> en utilisant la chaîne de données XML spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous souhaitez que votre code soit de bout en bout conformes au schéma, le `xmlPayload` le paramètre doit être un fragment XML qui peut être validé par rapport au schéma d’événement de bout en bout. Si `xmlPayload` est `null`, le <xref:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml%2A> propriété est une chaîne vide.  
  
> [!NOTE]
>  `xmlPayload` n’est pas activée pour la validité XML.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Diagnostics.UnescapedXmlDiagnosticData.%23ctor%2A> constructeur. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.EventSchemaTraceListener> classe.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#11)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="unescapedXmlDiagnosticData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une représentation sous forme de chaîne de l'objet <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" />.</summary>
        <returns>Représentation sous forme de chaîne de l'objet <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" />. Si l'objet a la valeur <see langword="null" />, cette méthode retourne une chaîne vide.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnescapedXml">
      <MemberSignature Language="C#" Value="public string UnescapedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnescapedXml" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml" />
      <MemberSignature Language="VB.NET" Value="Public Property UnescapedXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnescapedXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UnescapedXml : string with get, set" Usage="System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne des données XML sans séquence d'échappement.</summary>
        <value>Chaîne XML sans séquence d'échappement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous souhaitez que votre code soit de bout en bout conformes au schéma, la <xref:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml%2A> la valeur de propriété doit être un fragment XML qui peut être validé par rapport au schéma d’événement de bout en bout.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>