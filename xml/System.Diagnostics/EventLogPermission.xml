<Type Name="EventLogPermission" FullName="System.Diagnostics.EventLogPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dae7c5f35f64f9948484a3183f01ecabd4cb3ddd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36674249" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventLogPermission : System.Security.Permissions.ResourcePermissionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EventLogPermission extends System.Security.Permissions.ResourcePermissionBase" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventLogPermission&#xA;Inherits ResourcePermissionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogPermission sealed : System::Security::Permissions::ResourcePermissionBase" />
  <TypeSignature Language="F#" Value="type EventLogPermission = class&#xA;    inherit ResourcePermissionBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.ResourcePermissionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contrôle les autorisations d'accès du code pour le journal des événements.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 N’accordez pas <xref:System.Diagnostics.EventLogPermission> à du code partiellement fiable. La possibilité de lire et écrire le journal des événements permet au code effectuer des actions telles que l’émission de messages du journal des événements dans le nom d’une autre application.  
  
> [!NOTE]
>  Si la source de l’événement qui est spécifié par le <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> propriété pour le journal des événements n’existe pas, une nouvelle source d’événements est créée. Pour créer une source d’événements dans Windows Vista et versions ultérieures de Windows ou Windows Server 2003, vous devez disposer des privilèges d’administrateur.  
>   
>  La raison de cette exigence est que tous les journaux des événements, y compris la sécurité, doivent être recherchés pour déterminer si la source d’événements est unique. À compter de Windows Vista, les utilisateurs n’êtes pas autorisé à accéder au journal de sécurité ; Par conséquent, un <xref:System.Security.SecurityException> est levée.  
>   
>  À compter de Windows Vista, le contrôle de compte d’utilisateur (UAC) détermine les privilèges d’un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède au journal de sécurité, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="T:System.Diagnostics.EventLogPermissionAccess" />
    <altmember cref="T:System.Diagnostics.EventLogPermissionAttribute" />
    <altmember cref="T:System.Diagnostics.EventLogPermissionEntry" />
    <altmember cref="T:System.Diagnostics.EventLogPermissionEntryCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventLogPermission" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventLogPermission" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogPermission (System.Diagnostics.EventLogPermissionEntry[] permissionAccessEntries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.EventLogPermissionEntry[] permissionAccessEntries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (permissionAccessEntries As EventLogPermissionEntry())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogPermission(cli::array &lt;System::Diagnostics::EventLogPermissionEntry ^&gt; ^ permissionAccessEntries);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLogPermission : System.Diagnostics.EventLogPermissionEntry[] -&gt; System.Diagnostics.EventLogPermission" Usage="new System.Diagnostics.EventLogPermission permissionAccessEntries" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permissionAccessEntries" Type="System.Diagnostics.EventLogPermissionEntry[]" />
      </Parameters>
      <Docs>
        <param name="permissionAccessEntries">Tableau d’objets qui représentent des entrées d’autorisation. Cette valeur est affectée à la propriété <see cref="P:System.Diagnostics.EventLogPermission.PermissionEntries" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventLogPermission" /> avec les entrées d'autorisation spécifiées.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="permissionAccessEntries" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLogPermission : System.Security.Permissions.PermissionState -&gt; System.Diagnostics.EventLogPermission" Usage="new System.Diagnostics.EventLogPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">L'une des valeurs d'énumération qui spécifie l'état d'autorisation (accès complet ou aucun accès à ces ressources).</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventLogPermission" /> avec l’état d’autorisation spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        <altmember cref="T:System.Security.Permissions.PermissionState" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogPermission (System.Diagnostics.EventLogPermissionAccess permissionAccess, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.EventLogPermissionAccess permissionAccess, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (permissionAccess As EventLogPermissionAccess, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogPermission(System::Diagnostics::EventLogPermissionAccess permissionAccess, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLogPermission : System.Diagnostics.EventLogPermissionAccess * string -&gt; System.Diagnostics.EventLogPermission" Usage="new System.Diagnostics.EventLogPermission (permissionAccess, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permissionAccess" Type="System.Diagnostics.EventLogPermissionAccess" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permissionAccess">L'une des valeurs d'énumération qui spécifie une niveau d'accès.</param>
        <param name="machineName">Nom de l'ordinateur à utiliser pour lire ou écrire les événements.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventLogPermission" /> avec les niveaux d'accès spécifiés et le nom de l'ordinateur à utiliser.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionEntries">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogPermissionEntryCollection PermissionEntries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLogPermissionEntryCollection PermissionEntries" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogPermission.PermissionEntries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PermissionEntries As EventLogPermissionEntryCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogPermissionEntryCollection ^ PermissionEntries { System::Diagnostics::EventLogPermissionEntryCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PermissionEntries : System.Diagnostics.EventLogPermissionEntryCollection" Usage="System.Diagnostics.EventLogPermission.PermissionEntries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogPermissionEntryCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection d'entrées d'autorisation pour cette demande d'autorisation.</summary>
        <value>Collection qui contient les entrées d'autorisation pour cette demande d'autorisation.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>