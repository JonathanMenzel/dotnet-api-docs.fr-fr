<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConsoleTraceListener.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb7226e860522f09c9efe6d62180c32e0bd6eb702da5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">26e860522f09c9efe6d62180c32e0bd6eb702da5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Directs tracing or debugging output to either the standard output or the standard error stream.</source>
          <target state="translated">Dirige la sortie de traçage ou de débogage vers la sortie standard ou le flux d'erreurs standard.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> class to write trace and debugging messages to the console.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> classe permettant d’écrire la trace et débogage des messages sur la console.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>You can initialize a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to write trace messages to the <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> stream or to the <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> stream.</source>
          <target state="translated">Vous pouvez initialiser un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> objet à écrire des messages de suivi pour le <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> flux ou à la <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> flux.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source><ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Lorsque vous avez fini d’utiliser le type, vous devez la supprimer directement ou indirectement.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a<ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Pour supprimer le type directement, vous devez appeler sa <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> méthode dans un<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloc.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Pour la supprimer indirectement, utiliser une construction de langage telles que <ph id="ph1">`using`</ph> (en c#) ou <ph id="ph2">`Using`</ph> (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> rubrique de l’interface.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>When trace and debugging output is enabled, the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> messages are written to the specified <ph id="ph2">&lt;xref:System.Console?displayProperty=nameWithType&gt;</ph> stream, which is similar to the way messages are written with the <ph id="ph3">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Lorsque le suivi et la sortie de débogage est activé, le <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> les messages sont écrits spécifié <ph id="ph2">&lt;xref:System.Console?displayProperty=nameWithType&gt;</ph> flux, qui est similaire à la façon dont les messages sont écrits avec le <ph id="ph3">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph4">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In a console application, the <ph id="ph1">&lt;xref:System.Console?displayProperty=nameWithType&gt;</ph> output and error streams write messages to the existing console window, or you can redirect the streams to write to a <ph id="ph2">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> instance.</source>
          <target state="translated">Dans une application console, le <ph id="ph1">&lt;xref:System.Console?displayProperty=nameWithType&gt;</ph> les flux de sortie et l’erreur écrivent des messages dans la fenêtre de console existante, ou vous pouvez rediriger les flux pour écrire dans un <ph id="ph2">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>If the console does not exist, as in a Windows-based application, messages written to the console are not displayed.</source>
          <target state="translated">Si la console n’existe pas, comme dans une application Windows, les messages écrits dans la console ne sont pas affichés.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Add a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the appropriate <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection if you want messages written through <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>, or <ph id="ph5">&lt;xref:System.Diagnostics.Debug&gt;</ph> to be written to the console.</source>
          <target state="translated">Ajouter un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> objet approprié <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection si vous souhaitez que les messages écrits via <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>, ou <ph id="ph5">&lt;xref:System.Diagnostics.Debug&gt;</ph> à écrire dans la console.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In addition, you can write messages directly to the console using the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">En outre, vous pouvez écrire des messages directement à la console à l’aide de la <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes share the same <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection, accessed through their respective <ph id="ph4">`Listeners`</ph> properties.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> et <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes partagent le même <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection, accédée via respectives <ph id="ph4">`Listeners`</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>If you add a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the collection using one of these classes, the other class automatically uses the same listener.</source>
          <target state="translated">Si vous ajoutez un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> de l’objet à la collection à l’aide d’une de ces classes, l’autre classe utilise automatiquement le même écouteur.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Most compilers enable trace and debug output through conditional compilation flags.</source>
          <target state="translated">La plupart des compilateurs activer le suivi et la sortie par le biais des indicateurs de compilation conditionnelle du débogage.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>If you do not enable tracing or debugging, the messages written through the <ph id="ph1">&lt;xref:System.Diagnostics.Debug?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> classes are effectively ignored.</source>
          <target state="translated">Si vous n’activez pas le traçage ou le débogage, les messages écrits via la <ph id="ph1">&lt;xref:System.Diagnostics.Debug?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> classes sont effectivement ignorés.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The syntax to enable trace and debug output is compiler specific; if you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">La syntaxe pour activer le suivi et la sortie de débogage est spécifique au compilateur ; Si vous utilisez des compilateurs autres que c# ou Visual Basic, reportez-vous à la documentation de votre compilateur.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To enable debugging in C#, add the <bpt id="p1">**</bpt>/d:DEBUG<ept id="p1">**</ept>flag to the compiler command line when you compile your code, or you can add <bpt id="p2">**</bpt>#define DEBUG<ept id="p2">**</ept> to the top of your file.</source>
          <target state="translated">Pour activer le débogage en c#, ajoutez le <bpt id="p1">**</bpt>/d : Debug<ept id="p1">**</ept>indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou vous pouvez ajouter <bpt id="p2">**</bpt>#define DEBUG<ept id="p2">**</ept> vers le haut de votre fichier.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In Visual Basic, add the <bpt id="p1">**</bpt>/d:DEBUG=True<ept id="p1">**</ept> flag to the compiler command line.</source>
          <target state="translated">Dans Visual Basic, ajoutez le <bpt id="p1">**</bpt>/d : DEBUG = True<ept id="p1">**</ept> indicateur pour la ligne de commande du compilateur.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To enable tracing in C#, add the <bpt id="p1">**</bpt>/d:TRACE<ept id="p1">**</ept> flag to the compiler command line when you compile your code, or add <bpt id="p2">**</bpt>#define TRACE<ept id="p2">**</ept> to the top of your file.</source>
          <target state="translated">Pour activer le traçage en c#, ajoutez le <bpt id="p1">**</bpt>r<ept id="p1">**</ept> indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou ajoutez <bpt id="p2">**</bpt>#define TRACE<ept id="p2">**</ept> vers le haut de votre fichier.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In Visual Basic, add the <bpt id="p1">**</bpt>/d:TRACE=True<ept id="p1">**</ept> flag to the compiler command line.</source>
          <target state="translated">Dans Visual Basic, ajoutez le <bpt id="p1">**</bpt>/d : trace = True<ept id="p1">**</ept> indicateur pour la ligne de commande du compilateur.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>You can add a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection in your code, or you can add a <ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection through the application configuration file.</source>
          <target state="translated">Vous pouvez ajouter un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> de l’objet à la <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection dans votre code, ou vous pouvez ajouter un <ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> de l’objet à le <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection via le fichier de configuration d’application.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Add the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object in your code to write messages for a specific code section or execution path.</source>
          <target state="translated">Ajouter le <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> objet dans votre code pour écrire des messages pour un chemin de section ou de l’exécution de code spécifique.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Add the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object in your application configuration file to direct all trace and debug messages to the console while the application executes.</source>
          <target state="translated">Ajouter le <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> objet dans votre fichier de configuration d’application pour diriger tous les trace et debug des messages à la console pendant que l’application s’exécute.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To write trace and debug messages to the console for a specific section of code, initialize a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object and add it to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Pour écrire trace et debug des messages sur la console pour une section spécifique de code, vous devez initialiser un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> de l’objet et l’ajouter à la <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Instrument the section of code that contains messages using the <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> classes.</source>
          <target state="translated">Instrumentez la section de code qui contient des messages à l’aide de la <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> ou <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>At the end of the code section, remove the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object from the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, and call the <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph> method on the <ph id="ph4">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</source>
          <target state="translated">À la fin de la section de code, supprimez le <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> à partir de l’objet le <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, puis appelez le <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph> méthode sur le <ph id="ph4">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To direct all trace and debug messages to the console while the application executes, add a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the application configuration file.</source>
          <target state="translated">Pour diriger la trace de tous les messages et de débogage dans la console pendant que l’application s’exécute, ajoutez un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> objet dans le fichier de configuration d’application.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Edit the configuration file that corresponds to the name of your application, or the app.config file in a <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> project.</source>
          <target state="translated">Modifiez le fichier de configuration qui correspond au nom de votre application, ou le fichier app.config dans un <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> projet.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In this file, insert an element for a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</source>
          <target state="translated">Dans ce fichier, insérez un élément pour un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object named <ph id="ph2">`configConsoleListener`</ph> to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">L’exemple suivant ajoute un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> objet nommé <ph id="ph2">`configConsoleListener`</ph> à la <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>For details about adding trace listeners in the application configuration file, see <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>listeners<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’ajout d’écouteurs de la trace dans le fichier de configuration d’application, consultez <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>écouteurs<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The following code example implements a console application consisting of a class with two public methods.</source>
          <target state="translated">L’exemple de code suivant implémente une application console qui se compose d’une classe avec deux méthodes publiques.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The <ph id="ph1">`Main`</ph> method examines the command-line arguments and determines if trace output should be directed to the standard error stream or the standard output stream.</source>
          <target state="translated">Le <ph id="ph1">`Main`</ph> méthode examine les arguments de ligne de commande et détermine si la sortie de trace doit être dirigée vers le flux d’erreurs standard ou le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source><ph id="ph1">`Main`</ph> creates and initializes a <ph id="ph2">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object for the specified <ph id="ph3">&lt;xref:System.Console&gt;</ph> output stream, and adds this object to the trace listener collection.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> Crée et initialise un <ph id="ph2">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> objet spécifié <ph id="ph3">&lt;xref:System.Console&gt;</ph> flux de sortie et ajoute cet objet à la collection d’écouteurs de suivi.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>It then calls the <ph id="ph1">`WriteEnvironmentInfoToTrace`</ph> method, which writes details about the executing environment and the trace listener configuration to the trace output.</source>
          <target state="translated">Il appelle ensuite la <ph id="ph1">`WriteEnvironmentInfoToTrace`</ph> (méthode), qui écrit les informations sur l’environnement d’exécution et la configuration d’écouteur de suivi pour la sortie de trace.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>When the example application runs, the environment and trace configuration details are written to the specified console output stream through the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object.</source>
          <target state="translated">Lorsque l’exemple d’application s’exécute, les détails de configuration d’environnement et de trace sont écrits dans le flux de sortie de console spécifié via le <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> class with trace output written to the standard output stream.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> avec une sortie de trace écrite dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>This constructor initializes a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to write messages to the <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> stream.</source>
          <target state="translated">Ce constructeur initialise un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> objet à écrire des messages dans la <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> flux.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>Its <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is initialized to an empty string ("").</source>
          <target state="translated">Son <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> propriété est initialisée avec une chaîne vide (« »).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>The following code example initializes a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object for the specified <ph id="ph2">&lt;xref:System.Console&gt;</ph> output stream and adds it to the trace listener collection.</source>
          <target state="translated">Le code suivant initialise de l’exemple un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> objet spécifié <ph id="ph2">&lt;xref:System.Console&gt;</ph> flux de sortie et l’ajoute à la collection d’écouteurs de suivi.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to write tracing and debugging output to the standard error stream; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to write tracing and debugging output to the standard output stream.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour écrire la sortie de trace ou de débogage dans le flux d'erreurs standard ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour écrire la sortie de trace ou de débogage dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> class with an option to write trace output to the standard output stream or the standard error stream.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> avec une option pour écrire la sortie de trace dans le flux de sortie standard ou le flux d'erreurs standard.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>This constructor initializes a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to write messages to either the <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> or the <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> stream.</source>
          <target state="translated">Ce constructeur initialise un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> objet à écrire des messages dans la <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> flux.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>Its <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is initialized to an empty string ("").</source>
          <target state="translated">Son <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> propriété est initialisée avec une chaîne vide (« »).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>The following code example initializes a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object for the specified <ph id="ph2">&lt;xref:System.Console&gt;</ph> output stream and adds it to the trace listener collection.</source>
          <target state="translated">Le code suivant initialise de l’exemple un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> objet spécifié <ph id="ph2">&lt;xref:System.Console&gt;</ph> flux de sortie et l’ajoute à la collection d’écouteurs de suivi.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.ConsoleTraceListener.Close">
          <source>Closes the output to the stream specified for this trace listener.</source>
          <target state="translated">Ferme la sortie au flux spécifié pour cet écouteur de suivi.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.Close">
          <source>The stream specified for this <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> instance (either the <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> stream or the <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> stream) is closed.</source>
          <target state="translated">Le flux de données spécifié pour ce <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> instance (soit la <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> flux ou le <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> flux) est fermé.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>