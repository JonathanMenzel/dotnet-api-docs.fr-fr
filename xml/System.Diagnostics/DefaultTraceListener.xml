<Type Name="DefaultTraceListener" FullName="System.Diagnostics.DefaultTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="912a741dba576b47759bb87c2a600e3541175cc2" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39887257" /></Metadata><TypeSignature Language="C#" Value="public class DefaultTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DefaultTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DefaultTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type DefaultTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d5406-101">Fournit les méthodes de sortie par défaut et le comportement de suivi.</span><span class="sxs-lookup"><span data-stu-id="d5406-101">Provides the default output methods and behavior for tracing.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5406-102">Une instance de cette classe est automatiquement ajoutée à la <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> et <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections.</span><span class="sxs-lookup"><span data-stu-id="d5406-102">An instance of this class is automatically added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections.</span></span> <span data-ttu-id="d5406-103">Ajout d’un second explicitement <xref:System.Diagnostics.DefaultTraceListener> causes dupliquer des messages dans la fenêtre de sortie du débogueur et des zones de message en double pour les assertions.</span><span class="sxs-lookup"><span data-stu-id="d5406-103">Explicitly adding a second <xref:System.Diagnostics.DefaultTraceListener> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.</span></span>  
  
 <span data-ttu-id="d5406-104">Par défaut, le <xref:System.Diagnostics.DefaultTraceListener.Write%2A> et <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> méthodes émettent le message à Win32 `OutputDebugString` (fonction) et à la <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d5406-104">By default, the <xref:System.Diagnostics.DefaultTraceListener.Write%2A> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods emit the message to the Win32 `OutputDebugString` function and to the <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d5406-105">Pour plus d’informations sur la `OutputDebugString` de fonction, consultez le SDK de plateforme ou MSDN.</span><span class="sxs-lookup"><span data-stu-id="d5406-105">For information about the `OutputDebugString` function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="d5406-106">Le <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> (méthode), par défaut, affiche un message lorsque l’application s’exécute en mode interface utilisateur ; il émet également le message à l’aide <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5406-106">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5406-107">L’affichage de la boîte de message pour <xref:System.Diagnostics.Debug.Assert%2A> et <xref:System.Diagnostics.Debug.Fail%2A> les appels de méthode dépend de la présence de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d5406-107">The display of the message box for <xref:System.Diagnostics.Debug.Assert%2A> and <xref:System.Diagnostics.Debug.Fail%2A> method calls depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="d5406-108">Si le <xref:System.Diagnostics.DefaultTraceListener> n’est pas dans le <xref:System.Diagnostics.Trace.Listeners%2A> ensemble, la boîte de message n’est pas affiché.</span><span class="sxs-lookup"><span data-stu-id="d5406-108">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="d5406-109">Le <xref:System.Diagnostics.DefaultTraceListener> peuvent être supprimés par le [ \<Effacer > élément](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), par le [ \<Supprimer > élément](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou en appelant le <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> méthode sur le <xref:System.Diagnostics.Trace.Listeners%2A> propriété (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="d5406-109">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\<clear> element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), by the [\<remove> element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="d5406-110">Vous devez activer le traçage ou de débogage pour utiliser un écouteur de suivi.</span><span class="sxs-lookup"><span data-stu-id="d5406-110">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="d5406-111">La syntaxe suivante est spécifique au compilateur.</span><span class="sxs-lookup"><span data-stu-id="d5406-111">The following syntax is compiler specific.</span></span> <span data-ttu-id="d5406-112">Si vous utilisez des compilateurs autres que c# ou Visual Basic, consultez la documentation de votre compilateur.</span><span class="sxs-lookup"><span data-stu-id="d5406-112">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="d5406-113">Pour activer le débogage en c#, ajoutez le `/d:DEBUG` indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou ajoutez `#define DEBUG` vers le haut de votre fichier.</span><span class="sxs-lookup"><span data-stu-id="d5406-113">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="d5406-114">Dans Visual Basic, ajoutez le `/d:DEBUG=True` indicateur pour la ligne de commande du compilateur.</span><span class="sxs-lookup"><span data-stu-id="d5406-114">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="d5406-115">Pour activer le traçage en c#, ajoutez le `/d:TRACE` indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou ajoutez `#define TRACE` vers le haut de votre fichier.</span><span class="sxs-lookup"><span data-stu-id="d5406-115">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="d5406-116">Dans Visual Basic, ajoutez le `/d:TRACE=True` indicateur pour la ligne de commande du compilateur.</span><span class="sxs-lookup"><span data-stu-id="d5406-116">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="d5406-117">Pour ajouter un écouteur de trace, modifiez le fichier de configuration qui correspond au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="d5406-117">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="d5406-118">Dans ce fichier, vous pouvez ajouter un écouteur, définissez son type et ses paramètres, supprimer un écouteur ou effacer tous les écouteurs définis précédemment par l’application.</span><span class="sxs-lookup"><span data-stu-id="d5406-118">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="d5406-119">Le fichier de configuration doit être mis en forme similaire à l’exemple suivant :</span><span class="sxs-lookup"><span data-stu-id="d5406-119">The configuration file should be formatted similar to the following example:</span></span>  
  
```xml  
<configuration>  
<system.diagnostics>  
  <trace autoflush="false" indentsize="4">  
    <listeners>  
      <remove name="Default" />  
      <add name="myListener"  type="System.Diagnostics.TextWriterTraceListener"    initializeData="c:\myListener.log" />  
    </listeners>  
  </trace>  
</system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d5406-120">L’exemple de code suivant calcule des coefficients binomiale, qui sont des valeurs utilisées dans les statistiques et de probabilité.</span><span class="sxs-lookup"><span data-stu-id="d5406-120">The following code example calculates binomial coefficients, which are values used in probability and statistics.</span></span> <span data-ttu-id="d5406-121">Cet exemple utilise un <xref:System.Diagnostics.DefaultTraceListener> effectuer le suivi des résultats et consigner les erreurs.</span><span class="sxs-lookup"><span data-stu-id="d5406-121">This example uses a <xref:System.Diagnostics.DefaultTraceListener> to trace results and log errors.</span></span> <span data-ttu-id="d5406-122">Il crée un nouveau <xref:System.Diagnostics.DefaultTraceListener>, ajoute à la <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection et définit le <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> propriété dans le fichier journal spécifié dans les arguments de ligne de commande.</span><span class="sxs-lookup"><span data-stu-id="d5406-122">It creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 <span data-ttu-id="d5406-123">Si une erreur est détectée lors du traitement du paramètre d’entrée, ou si le `CalcBinomial` fonction lève une exception, le <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> méthode ouvre et affiche un message d’erreur.</span><span class="sxs-lookup"><span data-stu-id="d5406-123">If an error is detected while processing the input parameter, or if the `CalcBinomial` function throws an exception, the <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method logs and displays an error message.</span></span> <span data-ttu-id="d5406-124">Si le <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> propriété est `false`, le message d’erreur est également écrite dans la console.</span><span class="sxs-lookup"><span data-stu-id="d5406-124">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the error message is also written to the console.</span></span> <span data-ttu-id="d5406-125">Lorsque le résultat est calculé, le <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> et <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> méthodes écrivent les résultats dans le fichier journal.</span><span class="sxs-lookup"><span data-stu-id="d5406-125">When the result is calculated successfully, the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> methods write the results to the log file.</span></span>  
  
 <span data-ttu-id="d5406-126">Le <xref:System.Diagnostics.DefaultTraceListener.Fail%2A>, <xref:System.Diagnostics.DefaultTraceListener.Write%2A>, et <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> méthodes entraînent des informations de trace écrit uniquement dans le <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d5406-126">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A>, <xref:System.Diagnostics.DefaultTraceListener.Write%2A>, and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods cause trace information to be written only to the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="d5406-127">Pour écrire des informations de trace à tous les écouteurs dans le <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, utilisez la <xref:System.Diagnostics.Trace.Fail%2A>, <xref:System.Diagnostics.Trace.Write%2A>, et <xref:System.Diagnostics.Trace.WriteLine%2A> méthodes de la <xref:System.Diagnostics.Trace> classe.</span><span class="sxs-lookup"><span data-stu-id="d5406-127">To write trace information to all listeners in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, use the <xref:System.Diagnostics.Trace.Fail%2A>, <xref:System.Diagnostics.Trace.Write%2A>, and <xref:System.Diagnostics.Trace.WriteLine%2A> methods of the <xref:System.Diagnostics.Trace> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#11)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#11)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="d5406-128">Cette classe est thread-safe.</span><span class="sxs-lookup"><span data-stu-id="d5406-128">This class is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5406-129">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DefaultTraceListener" /> en assignant "Default" comme valeur de la propriété <see cref="P:System.Diagnostics.TraceListener.Name" />.</span><span class="sxs-lookup"><span data-stu-id="d5406-129">Initializes a new instance of the <see cref="T:System.Diagnostics.DefaultTraceListener" /> class with "Default" as its <see cref="P:System.Diagnostics.TraceListener.Name" /> property value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d5406-130">Le code suivant exemple supprime la <xref:System.Diagnostics.DefaultTraceListener> fournie par l’application à partir de la <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection et crée ensuite un nouveau <xref:System.Diagnostics.DefaultTraceListener> et l’ajoute à la <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span><span class="sxs-lookup"><span data-stu-id="d5406-130">The following code example removes the <xref:System.Diagnostics.DefaultTraceListener> provided by the application from the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection and then creates a new <xref:System.Diagnostics.DefaultTraceListener> and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#3)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="AssertUiEnabled">
      <MemberSignature Language="C#" Value="public bool AssertUiEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AssertUiEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AssertUiEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AssertUiEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AssertUiEnabled : bool with get, set" Usage="System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("AssertUiEnabled defaults to False; should follow Environment.UserInteractive.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5406-131">Obtient ou définit une valeur indiquant si l'application est exécutée en mode interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d5406-131">Gets or sets a value indicating whether the application is running in user-interface mode.</span></span></summary>
        <value><span data-ttu-id="d5406-132"><see langword="true" /> si le mode interface utilisateur est activé ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5406-132"><see langword="true" /> if user-interface mode is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d5406-133">L’exemple de code suivant appelle une fonction qui appelle la <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> méthode pour se connecter à un message d’erreur si la fonction lève une exception.</span><span class="sxs-lookup"><span data-stu-id="d5406-133">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log an error message if the function throws an exception.</span></span> <span data-ttu-id="d5406-134">Si le <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> propriété est `false`, la méthode écrit également le message d’erreur dans la console.</span><span class="sxs-lookup"><span data-stu-id="d5406-134">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the method also writes the error message to the console.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5406-135">Émet ou affiche un message et une trace de la pile pour une assertion qui échoue toujours.</span><span class="sxs-lookup"><span data-stu-id="d5406-135">Emits or displays a message and a stack trace for an assertion that always fails.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Fail : string -&gt; unit" Usage="defaultTraceListener.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="d5406-136">Message à envoyer ou afficher.</span><span class="sxs-lookup"><span data-stu-id="d5406-136">The message to emit or display.</span></span></param>
        <summary><span data-ttu-id="d5406-137">Émet ou affiche un message et une trace de la pile pour une assertion qui échoue toujours.</span><span class="sxs-lookup"><span data-stu-id="d5406-137">Emits or displays a message and a stack trace for an assertion that always fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5406-138">Par défaut, cette méthode envoie le `message` paramètre et une trace de pile pour une boîte de message (lors de l’application s’exécute en mode interface utilisateur) et en le <xref:System.Diagnostics.DefaultTraceListener> instance.</span><span class="sxs-lookup"><span data-stu-id="d5406-138">By default, this method sends the `message` parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5406-139">L’exemple de code suivant écrit un message d’erreur pour un <xref:System.Diagnostics.DefaultTraceListener> à l’aide de la <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d5406-139">The following code example writes an error message to a <xref:System.Diagnostics.DefaultTraceListener> using the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> method.</span></span> <span data-ttu-id="d5406-140">La méthode écrit également le message dans la console si une interface utilisateur n’est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="d5406-140">The method also writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#6)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="defaultTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="d5406-141">Message à envoyer ou afficher.</span><span class="sxs-lookup"><span data-stu-id="d5406-141">The message to emit or display.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="d5406-142">Message détaillé à envoyer ou afficher.</span><span class="sxs-lookup"><span data-stu-id="d5406-142">The detailed message to emit or display.</span></span></param>
        <summary><span data-ttu-id="d5406-143">Émet ou affiche des messages détaillés et une trace de la pile pour une assertion qui échoue toujours.</span><span class="sxs-lookup"><span data-stu-id="d5406-143">Emits or displays detailed messages and a stack trace for an assertion that always fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5406-144">Par défaut, cette méthode envoie le `message` paramètre, le `detailMessage` paramètre et une trace de pile pour une boîte de message (lors de l’application s’exécute en mode interface utilisateur) et en le <xref:System.Diagnostics.DefaultTraceListener> instance.</span><span class="sxs-lookup"><span data-stu-id="d5406-144">By default, this method sends the `message` parameter, the `detailMessage` parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5406-145">L’exemple de code suivant appelle une fonction qui appelle la <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> méthode pour se connecter à un message d’erreur détaillé si la fonction lève une exception.</span><span class="sxs-lookup"><span data-stu-id="d5406-145">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log a detailed error message if the function throws an exception.</span></span> <span data-ttu-id="d5406-146">La méthode écrit le message dans la console si une interface utilisateur n’est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="d5406-146">The method writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="LogFileName">
      <MemberSignature Language="C#" Value="public string LogFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.LogFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileName : string with get, set" Usage="System.Diagnostics.DefaultTraceListener.LogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5406-147">Obtient ou définit le nom d'un fichier journal dans lequel les messages de traçage ou de débogage doivent être écrits.</span><span class="sxs-lookup"><span data-stu-id="d5406-147">Gets or sets the name of a log file to write trace or debug messages to.</span></span></summary>
        <value><span data-ttu-id="d5406-148">Nom d'un fichier journal dans lequel les messages de traçage ou de débogage doivent être écrits.</span><span class="sxs-lookup"><span data-stu-id="d5406-148">The name of a log file to write trace or debug messages to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d5406-149">L’exemple de code suivant crée un nouveau <xref:System.Diagnostics.DefaultTraceListener>, ajoute à la <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection et définit le <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> propriété dans le fichier journal spécifié dans les arguments de ligne de commande.</span><span class="sxs-lookup"><span data-stu-id="d5406-149">The following code example creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="defaultTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="d5406-150">Message à écrire vers <see langword="OutputDebugString" /> et <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="d5406-150">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span></span></param>
        <summary><span data-ttu-id="d5406-151">Écrit la sortie vers la fonction <see langword="OutputDebugString" /> et la méthode <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="d5406-151">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5406-152">Pour plus d’informations sur Win32 `OutputDebugString` débogage (fonction), consultez « OutputDebugString » dans le SDK de plateforme ou MSDN.</span><span class="sxs-lookup"><span data-stu-id="d5406-152">For information about the Win32 `OutputDebugString` debugging function, see "OutputDebugString" in the Platform SDK or MSDN.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5406-153">L’exemple de code suivant met en forme les résultats d’une fonction et utilise le <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> méthode pour écrire la première partie du message à un <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d5406-153">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> method to write the first part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="defaultTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="d5406-154">Message à écrire vers <see langword="OutputDebugString" /> et <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="d5406-154">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span></span></param>
        <summary><span data-ttu-id="d5406-155">Écrit la sortie vers la fonction <see langword="OutputDebugString" /> et la méthode <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> suivie d'un retour chariot et d'un changement de ligne (\r\n).</span><span class="sxs-lookup"><span data-stu-id="d5406-155">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method, followed by a carriage return and line feed (\r\n).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5406-156">La ligne se termine par défaut par un retour chariot suivi d'un changement de ligne (\r\n).</span><span class="sxs-lookup"><span data-stu-id="d5406-156">The default line terminator is a carriage return followed by a line feed (\r\n).</span></span>  
  
 <span data-ttu-id="d5406-157">Pour plus d’informations sur Win32 `OutputDebugString` débogage (fonction), consultez le SDK de plateforme ou MSDN.</span><span class="sxs-lookup"><span data-stu-id="d5406-157">For information about the Win32 `OutputDebugString` debugging function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="d5406-158">Cette méthode définit le <xref:System.Diagnostics.TraceListener.NeedIndent%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="d5406-158">This method sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5406-159">L’exemple de code suivant met en forme les résultats d’une fonction et utilise le <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> méthode pour écrire la dernière partie du message à un <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d5406-159">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> method to write the last part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>