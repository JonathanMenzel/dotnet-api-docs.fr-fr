<Type Name="DataReceivedEventArgs" FullName="System.Diagnostics.DataReceivedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="749fbb44fcdc61ae4fa510fadf2275772c4abd56" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58703880" /></Metadata><TypeSignature Language="C#" Value="public class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReceivedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReceivedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DataReceivedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour les événements <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> et <see cref="E:System.Diagnostics.Process.ErrorDataReceived" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour collecter de manière asynchrone le redirigé <xref:System.Diagnostics.Process.StandardOutput%2A> ou <xref:System.Diagnostics.Process.StandardError%2A> flux de sortie d’un processus, vous devez créer une méthode qui gère les événements de sortie de flux redirigés. La méthode de gestionnaire d’événements est appelée lorsque le processus est écrit dans le flux redirigé. Le délégué d’événement appelle votre gestionnaire d’événements avec une instance de <xref:System.Diagnostics.DataReceivedEventArgs>. Le <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propriété contient la ligne de texte que le processus a écrit dans le flux redirigé.  
  
   
  
## Examples  
 L’exemple de code suivant illustre comment effectuer des opérations de lecture asynchrones sur le redirigé <xref:System.Diagnostics.Process.StandardOutput%2A> flux de la `sort` commande. Le `sort` commande est une application console qui lit et trie les entrées de texte.  
  
 L’exemple crée un délégué d’événement pour le `SortOutputHandler` Gestionnaire d’événements et l’associe le <xref:System.Diagnostics.Process.OutputDataReceived> événement. Le Gestionnaire d’événements reçoit des lignes de texte à partir de la redirection <xref:System.Diagnostics.Process.StandardOutput%2A> stream, met en forme le texte et écrit le texte dans l’écran.  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : string" Usage="System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la ligne de caractères qui a été écrite dans un flux de sortie <see cref="T:System.Diagnostics.Process" /> redirigé.</summary>
        <value>Ligne qui a été écrite par un <see cref="T:System.Diagnostics.Process" /> associé à son <see cref="P:System.Diagnostics.Process.StandardOutput" /> redirigé ou à son flux <see cref="P:System.Diagnostics.Process.StandardError" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous redirigez le <xref:System.Diagnostics.Process.StandardOutput%2A> ou <xref:System.Diagnostics.Process.StandardError%2A> flux de données d’un <xref:System.Diagnostics.Process> à votre gestionnaire d’événements, un événement est déclenché chaque fois que le processus écrit une ligne dans le flux redirigé. Le <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propriété est la ligne qui le <xref:System.Diagnostics.Process> a écrit dans le flux de sortie redirigé. Votre gestionnaire d’événements peut utiliser le <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propriété à filtrer la sortie de processus ou écrire la sortie vers un autre emplacement. Par exemple, vous pouvez créer un gestionnaire d’événements qui stocke toutes les lignes de sortie d’erreur dans un fichier de journal des erreurs désigné.  
  
 Une ligne est définie comme une séquence de caractères suivi d’un retour chariot (« \n ») ou un retour chariot immédiatement suivi d’une ligne du flux (« \r\n »). Les caractères de ligne sont encodés à l’aide de la page de codes ANSI par défaut système. Le <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propriété ne pas inclure le retour de chariot fin ou saut de ligne.  
  
 Lorsque le flux redirigé est fermé, une ligne null est envoyée au gestionnaire d’événements. Vérifiez vos vérifications de gestionnaire d’événements le <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propriété correctement avant d’y accéder. Par exemple, vous pouvez utiliser la méthode statique <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> pour valider le <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propriété dans votre gestionnaire d’événements.  
  
   
  
## Examples  
 L’exemple de code suivant illustre un gestionnaire d’événements simple associé à la <xref:System.Diagnostics.Process.OutputDataReceived> événement. Le Gestionnaire d’événements reçoit des lignes de texte à partir de la redirection <xref:System.Diagnostics.Process.StandardOutput%2A> stream, met en forme le texte et écrit le texte dans l’écran.  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>