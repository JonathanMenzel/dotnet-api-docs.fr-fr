<Type Name="Switch" FullName="System.Diagnostics.Switch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e7aa12a9abfb72a34693d5fc819f82cc793ba8d" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061061" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Switch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Switch" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Switch abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une classe de base abstraite pour créer des commutateurs de débogage et de traçage.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un commutateur fournit un mécanisme efficace pour contrôler la sortie de traçage et de débogage en cours d’exécution à l’aide des paramètres de sécurité externes. La <xref:System.Diagnostics.Switch> classe implémente le comportement par défaut pour les commutateurs, ce qui vous permet de modifier le niveau de commutateur au moment de l’exécution.  
  
 Cette classe est la classe de base pour le <xref:System.Diagnostics.BooleanSwitch>, <xref:System.Diagnostics.SourceSwitch> et <xref:System.Diagnostics.TraceSwitch> classes. Ces commutateurs de respectent le traçage des besoins et débogage de la plupart des. Pour plus d’informations sur les commutateurs de trace, consultez [commutateurs de traçage](~/docs/framework/debug-trace-profile/trace-switches.md).  
  
 Vous devez activer le traçage ou de débogage pour utiliser un commutateur. La syntaxe suivante est spécifique au compilateur. Si vous utilisez des compilateurs autres que c# ou Visual Basic, reportez-vous à la documentation de votre compilateur.  
  
-   Pour activer le débogage en c#, ajoutez le `/d:DEBUG` indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou vous pouvez ajouter `#define DEBUG` vers le haut de votre fichier. Dans Visual Basic, ajoutez le `/d:DEBUG=True` indicateur pour la ligne de commande du compilateur.  
  
-   Pour activer le traçage en c#, ajoutez le `/d:TRACE` indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou ajoutez `#define TRACE` vers le haut de votre fichier. Dans Visual Basic, ajoutez le `/d:TRACE=True` indicateur pour la ligne de commande du compilateur.  
  
 Pour définir le niveau de votre commutateur, modifiez le fichier de configuration qui correspond au nom de votre application. Dans ce fichier, vous pouvez ajouter un commutateur et définir sa valeur, supprimer ou effacer tous les commutateurs précédemment définis par l’application. Le fichier de configuration doit être mis en forme à l’exemple suivant :  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="true" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 Cet exemple de section de configuration définit un <xref:System.Diagnostics.BooleanSwitch> avec la <xref:System.Diagnostics.Switch.DisplayName%2A> propriété la valeur `mySwitch` et <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> la valeur `true`. Dans votre application, vous pouvez utiliser la valeur du commutateur configuré en créant un <xref:System.Diagnostics.BooleanSwitch> portant le même nom, comme indiqué dans l’exemple de code suivant.  
  
 [!code-cpp[Classic Switch Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/remarks.cpp#4)]
 [!code-csharp[Classic Switch Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/remarks.cs#4)]  
  
   
  
## Examples  
 L’exemple suivant montre comment définir une nouvelle <xref:System.Diagnostics.Switch> classe avec quatre niveaux de trace qui peut être utilisé pour suivre la pile des appels. Vous pouvez utiliser le commutateur pour instrumenter votre application pour vous connecter à chaque fois que la méthode est entrée ou de sortie.  
  
 Le premier exemple crée l’énumération utilisée pour définir le niveau du commutateur.  
  
 [!code-cpp[Classic Switch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Switch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/source.cs#1)]
 [!code-vb[Classic Switch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Switch Example/VB/source.vb#1)]  
  
 L’exemple suivant crée un nouveau commutateur. Le code implémente une `Level` propriété pour définir la valeur du nouveau commutateur. `Level` appelle la propriété protégée <xref:System.Diagnostics.Switch.SwitchSetting%2A> qui assigne la valeur au nouveau commutateur. Cet exemple implémente également deux propriétés assesseur pour obtenir la valeur assignée du commutateur.  
  
 [!code-cpp[Classic Switch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Switch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/source.cs#2)]
 [!code-vb[Classic Switch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Switch Example/VB/source.vb#2)]  
  
 L’exemple suivant crée un nouveau commutateur dans `Main`. Il crée un nouveau commutateur et lui assigne une valeur. Puis, selon les paramètres de commutateur, il génère des messages de débogage pour entrer et quitter la méthode.  
  
 [!code-cpp[Classic Switch Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/source.cpp#3)]
 [!code-csharp[Classic Switch Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/source.cs#3)]
 [!code-vb[Classic Switch Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Switch Example/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Si vous avez besoin de niveaux de trace ou de mécanismes de réglage des niveaux différents de ceux fournis par du commutateur <see cref="T:System.Diagnostics.BooleanSwitch" />, <see cref="T:System.Diagnostics.SourceSwitch" /> et <see cref="T:System.Diagnostics.TraceSwitch" />, vous pouvez hériter de <see cref="T:System.Diagnostics.Switch" />. Lorsque vous héritez de cette classe, vous devez implémenter le <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> (méthode).</para>
    </block>
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Switch" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Switch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Switch(System::String ^ displayName, System::String ^ description);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Nom du commutateur.</param>
        <param name="description">Description pour le commutateur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Switch" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous créez un nouveau <xref:System.Diagnostics.Switch> objet, la valeur de le `displayName` paramètre est utilisé pour trouver les paramètres initiaux de commutateur. La valeur par défaut est une chaîne vide ("").  
  
 Dans le fichier de configuration XML, vous pouvez ajouter un commutateur et définir sa valeur, supprimer ou effacer tous les commutateurs précédemment définis par l’application. Les modifications dynamiques dans le fichier de configuration ne sont pas détectées pendant l’exécution de l’application. Vous devez arrêter et redémarrer une application avant que les modifications apportées au fichier de configuration prennent effet. Le fichier de configuration doit être mis en forme à l’exemple suivant :  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="10" />  
      <add name="myNewSwitch" value="20" />  
      <remove name="mySwitch" />  
      <clear/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Pour définir la valeur du commutateur, définissez la <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> propriété dans le constructeur.</para>
        </block>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.SourceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Switch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Switch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="defaultSwitchValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Nom du commutateur.</param>
        <param name="description">Description du commutateur.</param>
        <param name="defaultSwitchValue">Valeur par défaut du commutateur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Switch" /> et spécifie le nom complet, la description et la valeur par défaut pour le commutateur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `displayName` paramètre est utilisé pour définir la valeur de la <xref:System.Diagnostics.Switch.DisplayName%2A> propriété et le `description` paramètre est utilisé pour définir la valeur de la <xref:System.Diagnostics.Switch.Description%2A> propriété. Le `defaultSwitchValue` paramètre est la valeur pour le commutateur si le <xref:System.Diagnostics.Switch.Value%2A> propriété n’est pas définie par code ou par l’attribut de fichier de configuration. Consultez le <xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29> de surcharge pour plus d’informations.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les attributs de commutateur personnalisés définis dans le fichier de configuration de l'application.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.StringDictionary" /> qui contient les attributs personnalisés non sensibles à la casse pour le commutateur de trace.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Diagnostics.Switch.Attributes%2A> propriété identifie les attributs personnalisés référencés dans le fichier de configuration de l’application. Attributs personnalisés non référencés ne sont pas énumérées. Les classes qui héritent de la <xref:System.Diagnostics.Switch> classe peut ajouter des attributs personnalisés en substituant la <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> (méthode) et en retournant un tableau de chaînes de noms d’attributs personnalisés.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher les attributs non reconnus pour un commutateur personnalisé.  
  
 [!code-csharp[System.Diagnostics.TraceSource#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#15)]
 [!code-vb[System.Diagnostics.TraceSource#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une description du commutateur.</summary>
        <value>Description du commutateur. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété doit indiquer la fonction du commutateur ; par exemple, « Active le traçage pour un composant Observateur de répertoire. » La valeur est définie par le `descriptor` paramètre dans le <xref:System.Diagnostics.Switch.%23ctor%2A> constructeur.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un nom utilisé pour identifier le commutateur.</summary>
        <value>Nom utilisé pour identifier le commutateur. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous créez un nouveau <xref:System.Diagnostics.Switch> objet, le <xref:System.Diagnostics.Switch.DisplayName%2A> recherche les paramètres initiaux de commutateur. Pour plus d’informations, consultez la <xref:System.Diagnostics.Switch.%23ctor%2A> constructeur et [Comment : créer, initialiser et configurer des commutateurs de Trace](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) dans la documentation de Visual Studio.  
  
   
  
## Examples  
 L’exemple de code suivant affiche le nom complet pour le commutateur utilisé par une source de trace.  Cet exemple de code fait partie d’un exemple plus complet qui se trouvent dans le <xref:System.Diagnostics.TraceSource> résumé de la classe.  
  
 [!code-csharp[System.Diagnostics.TraceSource#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#10)]
 [!code-vb[System.Diagnostics.TraceSource#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient les attributs personnalisés pris en charge par le commutateur.</summary>
        <returns>Tableau de chaînes qui contient les noms des attributs personnalisés pris en charge par le commutateur, ou <see langword="null" /> en l'absence de prise en charge d'un attribut personnalisé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut pour le <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> méthode renvoie `null`. Si un commutateur est ajouté dans un fichier de configuration et les attributs personnalisés sont spécifiés qui ne sont pas inclus dans le tableau de chaînes retourné par <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>, un <xref:System.Configuration.ConfigurationException> est levée lorsque le commutateur est chargé.  
  
   
  
## Examples  
 L’exemple de code suivant illustre une substitution de la <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> méthode pour un commutateur personnalisé.  
  
 [!code-csharp[System.Diagnostics.TraceSource#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#34)]
 [!code-vb[System.Diagnostics.TraceSource#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#34)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez à partir de la <see cref="T:System.Diagnostics.Switch" /> classe ou une classe dérivée, vous pouvez remplacer le <see cref="M:System.Diagnostics.Switch.GetSupportedAttributes" /> méthode pour fournir des attributs personnalisés pour votre classe.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSwitchSettingChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSwitchSettingChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSwitchSettingChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.OnSwitchSettingChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSwitchSettingChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSwitchSettingChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Appelé lorsque la propriété <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> a été modifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.Switch.OnSwitchSettingChanged%2A> est appelé la première fois qu’un commutateur lit la <xref:System.Diagnostics.Switch.SwitchSetting%2A> valeur à partir du fichier de configuration et est appelé à chaque changement de la valeur du commutateur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Appelé lorsque la propriété <see cref="P:System.Diagnostics.Switch.Value" /> a été modifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut analyse la nouvelle valeur de la <xref:System.Diagnostics.Switch.Value%2A> propriété à une valeur entière qui est utilisée pour définir le <xref:System.Diagnostics.Switch.SwitchSetting%2A> propriété.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Vous devez substituer cette méthode et utiliser une conversion qui définit les <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> valeur pour votre commutateur.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SwitchSetting">
      <MemberSignature Language="C#" Value="protected int SwitchSetting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SwitchSetting" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.SwitchSetting" />
      <MemberSignature Language="VB.NET" Value="Protected Property SwitchSetting As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int SwitchSetting { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le paramètre en cours pour ce commutateur.</summary>
        <value>Paramètre en cours pour ce commutateur. La valeur par défaut est zéro.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="protected string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.Value" />
      <MemberSignature Language="VB.NET" Value="Protected Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du commutateur.</summary>
        <value>Chaîne qui représente la valeur du commutateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Diagnostics.Switch.OnValueChanged%2A> méthode est appelée lorsque la valeur de la <xref:System.Diagnostics.Switch.Value%2A> propriété est modifiée. Le <xref:System.Diagnostics.Switch.OnValueChanged%2A> méthode analyse la valeur de cette propriété et la convertit en une valeur entière, qui est ensuite utilisée pour définir le <xref:System.Diagnostics.Switch.SwitchSetting%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur est <see langword="null" />.  
  
 - ou -  
  
 Valeur qui ne consiste pas uniquement d'un signe négatif facultatif suivi d'une séquence de chiffres comprise entre 0 et 9.  
  
 - ou -  
  
 La valeur représente un nombre inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
        <block subset="none" type="overrides">
          <para>Vous devez substituer la <see cref="M:System.Diagnostics.Switch.OnValueChanged" /> méthode et fournir une opération de conversion qui définit les <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> valeur pour votre commutateur.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>