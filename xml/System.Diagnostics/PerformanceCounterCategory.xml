<Type Name="PerformanceCounterCategory" FullName="System.Diagnostics.PerformanceCounterCategory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf3581fcfcda06d44d445a28270c0adf5dc7d608" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56790547" /></Metadata><TypeSignature Language="C#" Value="public sealed class PerformanceCounterCategory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounterCategory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterCategory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PerformanceCounterCategory" />
  <TypeSignature Language="C++ CLI" Value="public ref class PerformanceCounterCategory sealed" />
  <TypeSignature Language="F#" Value="type PerformanceCounterCategory = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un objet de performance qui définit une catégorie de compteurs de performance.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Création ou la suppression d’un compteur de performance requiert la synchronisation du code sous-jacent à l’aide d’un mutex nommé. Si une application à privilèges élevés verrouille le mutex nommé, tente de créer ou supprimer un compteur de performance entraîne l’application cesse de répondre jusqu'à ce que le verrou est libéré. Afin d’éviter ce problème, n’accordez jamais <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> autorisation au code non fiable. En outre, <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> autorisation permet d’ignorer d’autres autorisations potentiellement et doit uniquement être accordée à du code hautement fiable.  
  
 Le <xref:System.Diagnostics.PerformanceCounterCategory> l’instance <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propriété s’affiche dans le champ objet de Performance de la boîte de dialogue Ajouter un compteur de l’application de l’Observateur de performances.  
  
 Le <xref:System.Diagnostics.PerformanceCounterCategory> classe fournit plusieurs méthodes permettant d’interagir avec les compteurs et les catégories sur l’ordinateur. Le <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> méthodes permettent de définir des catégories personnalisées. Le <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> méthode fournit un moyen de supprimer des catégories de l’ordinateur. Le <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> méthode vous permet d’afficher la liste des catégories, tandis que <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> récupère toutes les données de compteur et instance associées à une catégorie.  
  
 Un compteur de performance publie des données de performances relatives à une application. Catégories incluent les composants physiques (par exemple, les processeurs, les disques et mémoire) et les objets système (tels que les processus et les threads). Compteurs de système qui sont liés au même objet de performance sont regroupés dans une catégorie qui indique leurs points communs. Lorsque vous créez une instance de la <xref:System.Diagnostics.PerformanceCounter> classe, vous indiquez d’abord la catégorie avec laquelle le composant va interagir, puis vous sélectionnez un compteur dans cette catégorie.  
  
 Par exemple, une catégorie de compteur de Windows est la catégorie de la mémoire. Compteurs de système dans cette catégorie suivent les données de mémoire telles que le nombre d’octets disponibles et le nombre d’octets mis en cache. Si vous souhaitez utiliser les octets mis en cache dans votre application, vous créeriez une instance de la <xref:System.Diagnostics.PerformanceCounter> composant, connectez-le à la catégorie mémoire, puis sélectionnez le compteur approprié (dans ce cas, les octets mis en cache) à partir de cette catégorie.  
  
 Bien que votre système met de nombreuses autres catégories disponibles, les catégories que vous allez interagir plus fréquemment sont les catégories du Cache mémoire, objets, PhysicalDisk, processus, processeur, Server, System et Thread.  
  
> [!IMPORTANT]
>  Le <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> méthode dans la <xref:System.Diagnostics.PerformanceCounter> classe publiera le compteur et, si l’option de réutilisation est sélectionnée pour cette catégorie, l’instance du compteur sera réutilisé. Cela peut entraîner une condition de concurrence si un autre processus ou même une autre partie du code essaie d’écrire l’instance de compteur.  
  
> [!NOTE]
>  Il est fortement recommandé de créer les nouvelles catégories de compteur de performances pendant l’installation de l’application et non pendant l’exécution de l’application. Cela laisse le temps au système d’exploitation à actualiser sa liste de catégories de compteurs de performance inscrites. Si la liste n’a pas été actualisée, la tentative d’utilisation de la catégorie échoue.  
  
> [!NOTE]
>  Catégories de compteur de performance installés avec le [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] utilisent une mémoire partagée distincte, chaque catégorie de compteur de performance possédant sa propre mémoire. Vous pouvez spécifier la taille de mémoire partagée séparée en créant un DWORD nommé FileMappingSize dans la clé de Registre HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<nom de catégorie >* \ Performances. La valeur FileMappingSize est définie à la taille de mémoire partagée de la catégorie. La taille par défaut est 131072 au format décimal. Si la valeur FileMappingSize n’est pas présente, le `fileMappingSize` attribut de valeur pour le `performanceCounters` élément spécifié dans le fichier Machine.config est utilisé, provoque une surcharge supplémentaire pour le traitement de fichier de configuration. Vous pouvez réaliser une amélioration des performances pour le démarrage de l’application en définissant la taille du mappage de fichier dans le Registre. Pour plus d’informations sur la taille du mappage de fichier, consultez [ &lt;performanceCounters&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/performancecounters-element.md).  
  
   
  
## Examples  
 L’exemple de code suivant détermine si un <xref:System.Diagnostics.PerformanceCounter> et son <xref:System.Diagnostics.PerformanceCounterCategory> existe sur l’ordinateur local ou sur un autre ordinateur. Si ces objets n’existent pas sur l’ordinateur local, l’exemple les crée éventuellement. Il utilise le <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> méthode pour déterminer si le <xref:System.Diagnostics.PerformanceCounterCategory> existe.  Si le <xref:System.Diagnostics.PerformanceCounterCategory> n’existe pas et aucun nom de compteur est spécifié, ou si l’ordinateur est un ordinateur distant, l’exemple se termine.  
  
 Si un <xref:System.Diagnostics.PerformanceCounter> nom est fourni, l’exemple utilise le <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> (méthode) et affiche le résultat à l’utilisateur. Si le <xref:System.Diagnostics.PerformanceCounter> n’existe pas, l’utilisateur peut supprimer et recréer la <xref:System.Diagnostics.PerformanceCounterCategory> avec le nouveau <xref:System.Diagnostics.PerformanceCounter>. Si l’utilisateur fait, la catégorie est supprimée à l’aide de la <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> (méthode).  
  
 Si nécessaire, l’exemple crée désormais le nouveau <xref:System.Diagnostics.PerformanceCounterCategory> et <xref:System.Diagnostics.PerformanceCounter> à l’aide de la <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> (méthode). Si un nom d’instance est spécifié, l’exemple utilise le <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> (méthode) et affiche le résultat.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/CS/perfcountercatcreateexist.cs#27)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/VB/perfcountercatcreateexist.vb#27)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, laisse la propriété <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> vide et affecte l'ordinateur local comme valeur de la propriété <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propriété doit être définie avant d’associer cette <xref:System.Diagnostics.PerformanceCounterCategory> instance avec un objet de performance sur le serveur. Sinon, une exception est levée.  
  
   
  
## Examples  
 L’exemple de code suivant accepte une <xref:System.Diagnostics.PerformanceCounterCategory> nom et un nom d’ordinateur à partir de la ligne de commande.  Il crée un <xref:System.Diagnostics.PerformanceCounterCategory> à l’aide de la surcharge du constructeur appropriée pour le nombre de paramètres fourni, puis affiche ses propriétés.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory categoryName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nom de la catégorie de compteurs de performance (objet de performance) à laquelle associer cette instance de <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, affecte à la propriété <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> la valeur spécifiée et affecte l'ordinateur local comme valeur de la propriété <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant accepte une <xref:System.Diagnostics.PerformanceCounterCategory> nom et un nom d’ordinateur à partir de la ligne de commande. Il crée un <xref:System.Diagnostics.PerformanceCounterCategory> à l’aide de la surcharge du constructeur approprié pour le nombre de paramètres fourni, puis affiche ses propriétés.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> est une chaîne vide ("").</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> a la valeur <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les informations de catégorie, telles que le nom de catégorie. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory (categoryName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nom de la catégorie de compteurs de performance (objet de performance) à laquelle associer cette instance de <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</param>
        <param name="machineName">Ordinateur sur lequel résident la catégorie de compteurs de performance et les compteurs qui lui sont associés.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> et affecte aux propriétés <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> et <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> les valeurs spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant accepte une <xref:System.Diagnostics.PerformanceCounterCategory> nom et un nom d’ordinateur à partir de la ligne de commande. Il crée un <xref:System.Diagnostics.PerformanceCounterCategory> à l’aide de la surcharge du constructeur approprié pour le nombre de paramètres fourni, puis affiche ses propriétés.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> est une chaîne vide ("").  
  
ou 
La syntaxe <paramref name="machineName" /> n'est pas valide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> a la valeur <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les informations de catégorie, telles que le nom d’ordinateur et de catégorie. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryHelp">
      <MemberSignature Language="C#" Value="public string CategoryHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryHelp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryHelp { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryHelp : string" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le texte d'aide de la catégorie.</summary>
        <value>Description de l'objet de performance mesuré par cette catégorie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Diagnostics.PerformanceCounterCategory> avec le <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. Il invite l’utilisateur pour le <xref:System.Diagnostics.PerformanceCounterCategory> et noms d’ordinateur, puis définit la <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> et <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> propriétés à partir des valeurs entrées. Il affiche ensuite les valeurs de la <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, et <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> propriétés, ou il affiche un message d’erreur si le <xref:System.Diagnostics.PerformanceCounterCategory> n’est pas accessible.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> est <see langword="null" />. Le nom de la catégorie doit être défini avant d'obtenir de l'aide à son sujet.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'objet de performance qui définit cette catégorie.</summary>
        <value>Nom de la catégorie de compteurs de performance (objet de performance) à laquelle associer cette instance de <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Diagnostics.PerformanceCounterCategory> avec le <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. Il invite l’utilisateur pour le <xref:System.Diagnostics.PerformanceCounterCategory> et noms d’ordinateur, puis définit la <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> et <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> propriétés à partir des valeurs entrées. Il affiche ensuite les valeurs de la <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, et <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> propriétés, ou il affiche un message d’erreur si le <xref:System.Diagnostics.PerformanceCounterCategory> n’est pas accessible.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> est une chaîne vide ("").</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> a la valeur <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterCategoryType CategoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterCategoryType CategoryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryType As PerformanceCounterCategoryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterCategoryType CategoryType { System::Diagnostics::PerformanceCounterCategoryType get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryType : System.Diagnostics.PerformanceCounterCategoryType" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type de catégorie du compteur de performance.</summary>
        <value>Une des valeurs de <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Diagnostics.PerformanceCounterCategory.CategoryType%2A> propriété indique si le <xref:System.Diagnostics.PerformanceCounterCategory> objet peut avoir plusieurs instances. Les valeurs possibles sont <xref:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance>, <xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>, ou <xref:System.Diagnostics.PerformanceCounterCategoryType.Unknown>.  
  
 Il existe deux types de catégories de compteurs de performances : multi-instance et à instance unique. Par défaut, une catégorie est à instance unique lorsqu’il est créé et devient multi-instance lors de l’ajout d’une autre instance. Les catégories sont créées lorsqu’une application est configurée et instances sont ajoutées au moment de l’exécution. Dans les versions 1.0 et 1.1 du .NET Framework, il n’est pas nécessaire de savoir si une catégorie de compteur de performance est à instances multiples ou à instance unique. Dans le [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], le <xref:System.Diagnostics.PerformanceCounterCategoryType> énumération est utilisée pour indiquer si un compteur de performance peut avoir plusieurs instances.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CounterExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Détermine si un compteur spécifié est inscrit dans une catégorie particulière.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public bool CounterExists (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CounterExists(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CounterExists (counterName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CounterExists(System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="member this.CounterExists : string -&gt; bool" Usage="performanceCounterCategory.CounterExists counterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Nom du compteur de performance à rechercher.</param>
        <summary>Détermine si le compteur spécifié est inscrit dans cette catégorie, qui est indiquée par les propriétés <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> et <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />.</summary>
        <returns><see langword="true" /> si le compteur est inscrit dans la catégorie spécifiée par les propriétés <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> et <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez définir le <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propriété avant d’appeler cette méthode. Sinon, une exception est levée.  
  
 Si vous n’avez pas défini la <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> propriété, cette méthode utilise l’ordinateur local («. »).  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant détermine si un <xref:System.Diagnostics.PerformanceCounter> existe. Il obtient un nom de catégorie, le nom du compteur et le nom de l’ordinateur à partir de la ligne de commande, si elles sont fournies. Il crée un <xref:System.Diagnostics.PerformanceCounterCategory> de l’objet en utilisant la <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor%2A>. Il utilise ensuite le <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%28System.String%29> méthode pour déterminer si le texte spécifié <xref:System.Diagnostics.PerformanceCounter> existe, et informe l’utilisateur.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatobjexists.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjcountexists.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="counterName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> n'a pas été définie.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Nom du compteur de performance à rechercher.</param>
        <param name="categoryName">Nom de la catégorie de compteurs de performance (objet de performance) à laquelle le compteur de performance spécifié est associé.</param>
        <summary>Détermine si le compteur spécifié est inscrit dans la catégorie donnée de l'ordinateur local.</summary>
        <returns><see langword="true" /> si le compteur est inscrit dans la catégorie spécifiée de l'ordinateur local ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant détermine si un <xref:System.Diagnostics.PerformanceCounter> existe. Il obtient un nom de catégorie, le nom du compteur et le nom de l’ordinateur à partir de la ligne de commande, si elles sont fournies. Il utilise les surcharges statiques de la <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> méthode pour déterminer si spécifié <xref:System.Diagnostics.PerformanceCounter> nom existe dans le <xref:System.Diagnostics.PerformanceCounterCategory>. La surcharge est sélectionnée si un nom d’ordinateur est fourni.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> a la valeur <see langword="null" />.  
  
ou 
<paramref name="counterName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> est une chaîne vide ("").</exception>
        <exception cref="T:System.InvalidOperationException">Le nom de la catégorie spécifiée n'existe pas.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Nom du compteur de performance à rechercher.</param>
        <param name="categoryName">Nom de la catégorie de compteurs de performance (objet de performance) à laquelle le compteur de performance spécifié est associé.</param>
        <param name="machineName">Nom de l'ordinateur sur lequel résident la catégorie de compteurs de performance et les compteurs qui lui sont associés.</param>
        <summary>Détermine si le compteur spécifié est inscrit dans la catégorie donnée d'un ordinateur distant.</summary>
        <returns><see langword="true" /> si le compteur est inscrit dans la catégorie spécifiée de l'ordinateur donné ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant détermine si un <xref:System.Diagnostics.PerformanceCounter> existe. Il obtient un nom de catégorie, le nom du compteur et le nom de l’ordinateur à partir de la ligne de commande, si elles sont fournies. Il utilise les surcharges statiques de la <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> méthode pour déterminer si spécifié <xref:System.Diagnostics.PerformanceCounter> nom existe dans le <xref:System.Diagnostics.PerformanceCounterCategory>. La surcharge est sélectionnée si un nom d’ordinateur est fourni.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> a la valeur <see langword="null" />.  
  
ou 
<paramref name="counterName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> est une chaîne vide ("").  
  
ou 
<paramref name="machineName" /> n'est pas valide.</exception>
        <exception cref="T:System.InvalidOperationException">Le nom de la catégorie spécifiée n'existe pas.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inscrit une catégorie de compteurs de performance personnalisée, ainsi qu'un ou plusieurs compteurs sur le système.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nom de la catégorie de compteurs de performance personnalisée (objet de performance) à créer et inscrire sur le système.</param>
        <param name="categoryHelp">Description de la catégorie personnalisée.</param>
        <param name="counterData"><see cref="T:System.Diagnostics.CounterCreationDataCollection" /> spécifiant les compteurs à créer en tant que composants de la nouvelle catégorie.</param>
        <summary>Inscrit la catégorie de compteurs de performance personnalisée qui contient les compteurs spécifiés de l'ordinateur local.</summary>
        <returns><see cref="T:System.Diagnostics.PerformanceCounterCategory" /> associé à la nouvelle catégorie personnalisée, ou objet de performance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant détermine si un <xref:System.Diagnostics.PerformanceCounterCategory> objet nommé « orders » existe. Si non, il crée le <xref:System.Diagnostics.PerformanceCounterCategory> objet en utilisant un <xref:System.Diagnostics.CounterCreationDataCollection> objet qui contient deux compteurs de performances.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Un nom de compteur spécifié dans la collection <paramref name="counterData" /> est <see langword="null" /> ou une chaîne vide ("").  
  
ou 
Un compteur spécifié dans la collection <paramref name="counterData" /> existe déjà.  
  
ou 
La syntaxe du paramètre <paramref name="counterName" /> n'est pas valide. Il contient peut-être des barres obliques inverses (« \\ ») ou plus de 80 caractères.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="categoryName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La catégorie existe déjà sur l'ordinateur local.  
  
ou 
La disposition de la collection <paramref name="counterData" /> est incorrecte pour les compteurs de base. Un compteur du type <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> ou <see langword="SampleCounter" /> doit être immédiatement suivi d’un des types de compteurs de base (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> ou <see langword="SampleBase" />).</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Pour effectuer des tâches d’administration sur les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="categoryHelp" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nom de la catégorie de compteurs de performance personnalisée (objet de performance) à créer et inscrire sur le système.</param>
        <param name="categoryHelp">Description de la catégorie personnalisée.</param>
        <param name="categoryType">Une des valeurs de <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</param>
        <param name="counterData"><see cref="T:System.Diagnostics.CounterCreationDataCollection" /> spécifiant les compteurs à créer en tant que composants de la nouvelle catégorie.</param>
        <summary>Inscrit la catégorie de compteurs de performance personnalisée qui contient les compteurs spécifiés de l'ordinateur local.</summary>
        <returns><see cref="T:System.Diagnostics.PerformanceCounterCategory" /> associé à la nouvelle catégorie personnalisée, ou objet de performance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `categoryType` paramètre spécifie si la catégorie de compteur de performance est à instance unique ou plusieurs instances. Par défaut, une catégorie est à instance unique lorsqu’il est créé et devient multi-instance lors de l’ajout d’une autre instance. Les catégories sont créées lorsqu’une application est configurée et instances sont ajoutées au moment de l’exécution. Dans les versions 1.0 et 1.1 du .NET Framework, il n’est pas nécessaire de savoir si une catégorie de compteur de performance est à instances multiples ou à instance unique. Dans le [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], le <xref:System.Diagnostics.PerformanceCounterCategoryType> énumération est utilisée pour indiquer si un compteur de performance peut avoir plusieurs instances.  
  
 Catégories de compteur de performance installés avec le [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] utilisent une mémoire partagée distincte, chaque catégorie de compteur de performance possédant sa propre mémoire.  Vous pouvez spécifier la taille de mémoire partagée séparée en créant un DWORD nommé FileMappingSize dans la clé de Registre HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<nom de catégorie >* \ Performances. La valeur FileMappingSize est définie à la taille de mémoire partagée de la catégorie. La taille par défaut est 131072 au format décimal. Si la valeur FileMappingSize n’est pas présente, le `fileMappingSize` attribut de valeur pour le `performanceCounters` élément spécifié dans le fichier Machine.config est utilisé, provoque une surcharge supplémentaire pour le traitement de fichier de configuration. Vous pouvez réaliser une amélioration des performances pour le démarrage de l’application en définissant la taille du mappage de fichier dans le Registre.  
  
> [!NOTE]
>  Il est fortement recommandé de créer les nouvelles catégories de compteur de performances pendant l’installation de l’application et non pendant l’exécution de l’application. Cela laisse le temps au système d’exploitation à actualiser sa liste de catégories de compteurs de performance inscrites. Si la liste n’a pas été actualisée, la tentative d’utilisation de la catégorie échoue.  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> (méthode). L’exemple montre comment créer un personnalisé, la catégorie de compteur de performances de plusieurs instances pour le nombre de commandes par seconde.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Un nom de compteur spécifié dans la collection <paramref name="counterData" /> est <see langword="null" /> ou une chaîne vide ("").  
  
ou 
Un compteur spécifié dans la collection <paramref name="counterData" /> existe déjà.  
  
ou 
 <paramref name="counterName" /> contient une syntaxe non valide. Il contient peut-être des barres obliques inverses (« \\ ») ou plus de 80 caractères.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="counterData" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur <paramref name="categoryType" />ne figure pas dans la plage des valeurs suivantes : <see langword="MultiInstance" />, <see langword="SingleInstance" /> ou <see langword="Unknown" />.</exception>
        <exception cref="T:System.InvalidOperationException">La catégorie existe déjà sur l'ordinateur local.  
  
ou 
La disposition de la collection <paramref name="counterData" /> est incorrecte pour les compteurs de base. Un compteur du type <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> ou <see langword="SampleCounter" /> doit être immédiatement suivi d’un des types de compteurs de base (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> ou <see langword="SampleBase" />).</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Pour effectuer des tâches d’administration sur les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nom de la catégorie de compteurs de performance personnalisée (objet de performance) à créer et inscrire sur le système.</param>
        <param name="categoryHelp">Description de la catégorie personnalisée.</param>
        <param name="counterName">Nom d'un nouveau compteur de type <see langword="NumberOfItems32" /> à créer en tant que composant de la nouvelle catégorie.</param>
        <param name="counterHelp">Description du compteur associé à la nouvelle catégorie personnalisée.</param>
        <summary>Inscrit une catégorie de compteurs de performance personnalisée contenant un seul compteur de type <see langword="NumberOfItems32" /> situé sur l'ordinateur local.</summary>
        <returns><see cref="T:System.Diagnostics.PerformanceCounterCategory" /> associé à la nouvelle catégorie système, ou objet de performance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Diagnostics.PerformanceCounterCategory> et unique <xref:System.Diagnostics.PerformanceCounter> au texte d’aide pour chacun, à l’aide de la <xref:System.Diagnostics.PerformanceCounterCategory.Create%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> (méthode).  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatcreate.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatcreate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="counterName" /> a la valeur <see langword="null" /> ou est une chaîne vide ("").  
  
ou 
Le compteur spécifié par <paramref name="counterName" /> existe déjà.  
  
ou 
 <paramref name="counterName" /> contient une syntaxe non valide. Il contient peut-être des barres obliques inverses (« \\ ») ou plus de 80 caractères.</exception>
        <exception cref="T:System.InvalidOperationException">La catégorie existe déjà sur l'ordinateur local.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="counterHelp" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Pour effectuer des tâches d’administration sur les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="categoryHelp" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="counterName" Type="System.String" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="counterHelp" Type="System.String" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nom de la catégorie de compteurs de performance personnalisée (objet de performance) à créer et inscrire sur le système.</param>
        <param name="categoryHelp">Description de la catégorie personnalisée.</param>
        <param name="categoryType">L'une des valeurs <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> qui spécifie si la catégorie est <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />, <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" /> ou <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" />.</param>
        <param name="counterName">Nom d'un nouveau compteur à créer en tant que composant de la nouvelle catégorie.</param>
        <param name="counterHelp">Description du compteur associé à la nouvelle catégorie personnalisée.</param>
        <summary>Inscrit la catégorie de compteurs de performance personnalisée contenant un seul compteur de type <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" /> situé sur l'ordinateur local.</summary>
        <returns><see cref="T:System.Diagnostics.PerformanceCounterCategory" /> associé à la nouvelle catégorie système, ou objet de performance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `categoryType` paramètre spécifie si la catégorie de compteur de performance est à instance unique ou plusieurs instances. Par défaut, une catégorie est à instance unique lorsqu’il est créé et devient multi-instance lors de l’ajout d’une autre instance. Les catégories sont créées lorsqu’une application est configurée et instances sont ajoutées au moment de l’exécution. Dans les versions 1.0 et 1.1 du .NET Framework, il n’est pas nécessaire de savoir si une catégorie de compteur de performance est à instances multiples ou à instance unique. Dans le [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], le <xref:System.Diagnostics.PerformanceCounterCategoryType> énumération est utilisée pour indiquer si un compteur de performance peut avoir plusieurs instances.  
  
 Catégories de compteur de performance installés avec le [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] utilisent une mémoire partagée distincte, chaque catégorie de compteur de performance possédant sa propre mémoire. Vous pouvez spécifier la taille de mémoire partagée séparée en créant un DWORD nommé FileMappingSize dans la clé de Registre HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<nom de catégorie >* \ Performances. La valeur FileMappingSize est définie à la taille de mémoire partagée de la catégorie. La taille par défaut est 131072 au format décimal. Si la valeur FileMappingSize n’est pas présente, le `fileMappingSize` attribut de valeur pour le `performanceCounters` élément spécifié dans le fichier Machine.config est utilisé, provoque une surcharge supplémentaire pour le traitement de fichier de configuration. Vous pouvez réaliser une amélioration des performances pour le démarrage de l’application en définissant la taille du mappage de fichier dans le Registre.  
  
> [!NOTE]
>  Il est fortement recommandé de créer les nouvelles catégories de compteur de performances pendant l’installation de l’application et non pendant l’exécution de l’application. Cela laisse le temps au système d’exploitation à actualiser sa liste de catégories de compteurs de performance inscrites. Si la liste n’a pas été actualisée, la tentative d’utilisation de la catégorie échoue.  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> (méthode). L’exemple montre comment créer une catégorie de compteur de performances personnalisé, la seule instance.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="counterName" /> a la valeur <see langword="null" /> ou est une chaîne vide ("").  
  
ou 
Le compteur spécifié par <paramref name="counterName" /> existe déjà.  
  
ou 
 <paramref name="counterName" /> contient une syntaxe non valide. Il contient peut-être des barres obliques inverses (« \\ ») ou plus de 80 caractères.</exception>
        <exception cref="T:System.InvalidOperationException">La catégorie existe déjà sur l'ordinateur local.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="counterHelp" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Pour effectuer des tâches d’administration sur les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Diagnostics.PerformanceCounterCategory.Delete categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nom de la catégorie de compteurs de performance personnalisée à supprimer.</param>
        <summary>Supprime de l'ordinateur local la catégorie et les compteurs qui lui sont associés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez supprimer uniquement les catégories de compteurs de performance personnalisés à partir du système. Vous ne pouvez pas supprimer un compteur à partir d’une catégorie. Pour ce faire, supprimez la catégorie et recréez-la avec les compteurs que vous souhaitez conserver. Pour éviter une exception, vérifiez que la catégorie existe avant d’essayer de le supprimer.  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> méthode pour supprimer un <xref:System.Diagnostics.PerformanceCounterCategory> et <xref:System.Diagnostics.PerformanceCounter> objets qu’il contient.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatDelete.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatdelete.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="categoryName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La syntaxe du paramètre <paramref name="categoryName" /> n'est pas valide. Il contient peut-être des barres obliques inverses (« \\ ») ou plus de 80 caractères.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.InvalidOperationException">La catégorie ne peut pas être supprimée, car il ne s'agit pas d'une catégorie personnalisée.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Détermine si la catégorie est inscrite sur le système.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nom de la catégorie de compteur de performance à rechercher.</param>
        <summary>Détermine si la catégorie est inscrite sur l'ordinateur local.</summary>
        <returns><see langword="true" /> si la catégorie est inscrite ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisation de la <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> méthode peut provoquer considérablement les performances lors de la vérification de la disponibilité tous les compteurs de performances sur l’ordinateur. Si vous écrivez uniquement dans un compteur de performance, vous pouvez éviter la recherche globale des compteurs de performances en créant le compteur de performances lors de l’application est installée et en supposant que la catégorie existe lors de l’accès du compteur. Il n’existe aucun moyen d’éviter la recherche de compteur de performances lors de la lecture des compteurs de performances.  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant détermine si un <xref:System.Diagnostics.PerformanceCounterCategory> objet nommé « orders » existe. Si non, il crée le <xref:System.Diagnostics.PerformanceCounterCategory> objet en utilisant un <xref:System.Diagnostics.CounterCreationDataCollection> objet qui contient deux compteurs de performances.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="categoryName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="categoryName" /> est une chaîne vide ("").</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Exists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists (categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nom de la catégorie de compteur de performance à rechercher.</param>
        <param name="machineName">Nom de l'ordinateur à examiner pour la catégorie.</param>
        <summary>Détermine si la catégorie est inscrite sur l'ordinateur spécifié.</summary>
        <returns><see langword="true" /> si la catégorie est inscrite ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisation de la <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> méthode peut provoquer considérablement les performances lors de la vérification de la disponibilité tous les compteurs de performances sur l’ordinateur. Si vous écrivez uniquement dans un compteur de performance, vous pouvez éviter la recherche globale des compteurs de performances en créant le compteur de performances lors de l’application est installée et en supposant que la catégorie existe lors de l’accès du compteur. Il n’existe aucun moyen d’éviter la recherche de compteur de performances lors de la lecture des compteurs de performances.  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple suivant détermine si un <xref:System.Diagnostics.PerformanceCounterCategory> objet nommé `Orders` existe. Si elle n’existe pas, l’exemple crée le <xref:System.Diagnostics.PerformanceCounterCategory> objet en utilisant un <xref:System.Diagnostics.CounterCreationDataCollection> objet qui contient deux compteurs de performances.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="categoryName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="categoryName" /> est une chaîne vide ("").  
  
ou 
Le paramètre <paramref name="machineName" /> n'est pas valide.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.IO.IOException">Le chemin d'accès réseau est introuvable.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'appelant n'a pas l'autorisation requise.  
  
ou 
Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCategories">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère la liste des catégories de compteurs de performance inscrites sur un ordinateur.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories () As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories();" />
      <MemberSignature Language="F#" Value="static member GetCategories : unit -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère la liste des catégories de compteurs de performance inscrites sur l'ordinateur local.</summary>
        <returns>Tableau d'objets <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> indiquant les catégories inscrites sur l'ordinateur local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> méthode pour retourner un tableau de <xref:System.Diagnostics.PerformanceCounterCategory> objets à partir de l’ordinateur local ou un ordinateur spécifié. Il convertit le <xref:System.Diagnostics.PerformanceCounterCategory> tableau dans un tableau de noms de catégories, qu’il trie et affiche pour l’utilisateur. Le <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> surcharge est sélectionnée si un nom d’ordinateur a été spécifié.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories (machineName As String) As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetCategories : string -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">Ordinateur sur lequel effectuer la recherche.</param>
        <summary>Récupère la liste des catégories de compteurs de performance inscrites sur l'ordinateur spécifié.</summary>
        <returns>Tableau d'objets <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> indiquant les catégories inscrites sur l'ordinateur spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour récupérer les catégories sur l’ordinateur local, utilisez une autre surcharge ou passez «. » comme le `machineName` paramètre.  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> méthode pour retourner un tableau de <xref:System.Diagnostics.PerformanceCounterCategory> objets à partir de l’ordinateur local ou un ordinateur spécifié. Il convertit le <xref:System.Diagnostics.PerformanceCounterCategory> tableau dans un tableau de noms de catégories, qu’il trie et affiche pour l’utilisateur. Le <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> surcharge est sélectionnée si un nom d’ordinateur a été spécifié.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="machineName" /> n'est pas valide.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCounters">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère la liste des compteurs de la catégorie de compteurs de performance.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters () As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters();" />
      <MemberSignature Language="F#" Value="member this.GetCounters : unit -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère la liste des compteurs d'une catégorie de compteurs de performance qui contient exactement une seule instance.</summary>
        <returns>Tableau d'objets <see cref="T:System.Diagnostics.PerformanceCounter" /> indiquant les compteurs associés à cette catégorie de compteurs de performance à instance unique.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur les instances d’objet de performance, consultez le <xref:System.Diagnostics.PerformanceCounter> vue d’ensemble de la classe.  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant obtient une liste de la <xref:System.Diagnostics.PerformanceCounter> des objets dans un <xref:System.Diagnostics.PerformanceCounterCategory>. Il crée tout d’abord un <xref:System.Diagnostics.PerformanceCounterCategory> avec le constructeur approprié, selon si un nom d’ordinateur a été spécifié. Il utilise ensuite le <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> méthode pour retourner un tableau de <xref:System.Diagnostics.PerformanceCounter> objets, en sélectionnant le <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> en fonction de surcharge si un nom d’instance a été spécifié.  
  
 Cela <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters> surcharge échoue, sauf si elle est utilisée avec une catégorie à instance unique.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La catégorie n'est pas une instance unique.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.InvalidOperationException">La catégorie n'a pas d'instance associée.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters (instanceName As String) As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.GetCounters : string -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Instance de l'objet de performance pour laquelle récupérer la liste des compteurs associés.</param>
        <summary>Récupère la liste des compteurs d'une catégorie de compteurs de performance qui contient une ou plusieurs instances.</summary>
        <returns>Tableau d'objets <see cref="T:System.Diagnostics.PerformanceCounter" /> indiquant les compteurs associés à l'instance d'objet spécifiée de cette catégorie de compteurs de performance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour représenter une catégorie à instance unique, passez une chaîne vide (" ») pour le `instanceName` paramètre.  
  
 Pour plus d’informations sur les instances d’objet de performance, consultez le <xref:System.Diagnostics.PerformanceCounter> vue d’ensemble de la classe.  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant obtient une liste de la <xref:System.Diagnostics.PerformanceCounter> des objets dans un <xref:System.Diagnostics.PerformanceCounterCategory>. Il crée tout d’abord un <xref:System.Diagnostics.PerformanceCounterCategory> avec le constructeur approprié, selon si un nom d’ordinateur a été spécifié. Il utilise ensuite le <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> méthode pour retourner un tableau de <xref:System.Diagnostics.PerformanceCounter> objets, en sélectionnant le <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> en fonction de surcharge si un nom d’instance a été spécifié.  
  
 Cela <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%28System.String%29> surcharge échoue, sauf si elle est utilisée avec une catégorie qui contient des instances.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="instanceName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> de cette instance de <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> n'est pas définie.  
  
ou 
La catégorie ne contient pas l'instance spécifiée par le paramètre <paramref name="instanceName" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetInstanceNames">
      <MemberSignature Language="C#" Value="public string[] GetInstanceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetInstanceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstanceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetInstanceNames();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceNames : unit -&gt; string[]" Usage="performanceCounterCategory.GetInstanceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère la liste des instances de l'objet de performance associées à cette catégorie.</summary>
        <returns>Tableau de chaînes représentant les noms des instances de l'objet de performance associées à cette catégorie ou, si la catégorie ne contient qu'une instance d'objet de performance, tableau à une seule entrée qui contient une chaîne vide ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant obtient une liste de la <xref:System.Diagnostics.PerformanceCounter> des objets dans un <xref:System.Diagnostics.PerformanceCounterCategory>. Il crée tout d’abord un <xref:System.Diagnostics.PerformanceCounterCategory> de l’objet, à l’aide du constructeur approprié si un nom d’ordinateur a été spécifié. Il utilise ensuite <xref:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames%2A> pour retourner les noms d’instance sous forme de tableau de <xref:System.String>, qu’il trie et affiche.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetinst.cpp#6)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetinst.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetinst.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> est <see langword="null" />. Il se peut que la propriété ne soit pas définie.  
  
ou 
La catégorie n'a pas d'instance associée.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InstanceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Détermine si la catégorie contient l'instance spécifiée de l'objet de performance.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public bool InstanceExists (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InstanceExists(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InstanceExists (instanceName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InstanceExists(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.InstanceExists : string -&gt; bool" Usage="performanceCounterCategory.InstanceExists instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Instance de l'objet de performance à rechercher dans cette catégorie de compteurs de performance.</param>
        <summary>Détermine si l'instance spécifiée de l'objet de performance existe dans la catégorie identifiée par la propriété <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> de cet objet <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />.</summary>
        <returns><see langword="true" /> si la catégorie contient l'instance spécifiée de l'objet de performance ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette surcharge de <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> n’est pas `static`. Il vous oblige à créer un <xref:System.Diagnostics.PerformanceCounterCategory> objet et pour définir le <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propriété.  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant détermine si un <xref:System.Diagnostics.PerformanceCounter> instance existe dans un <xref:System.Diagnostics.PerformanceCounterCategory>. Il crée tout d’abord un <xref:System.Diagnostics.PerformanceCounterCategory> de l’objet, à l’aide du constructeur approprié si un nom d’ordinateur a été spécifié. Il utilise ensuite <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%28System.String%29> pour déterminer si l’instance spécifiée existe, puis informe l’utilisateur. Si aucun nom d’instance est spécifié, l’exemple utilise le nom d’instance unique par défaut.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcounterobjinstexists.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjinstexists.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> est <see langword="null" />. Il se peut que la propriété ne soit pas définie.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="instanceName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Instance de l'objet de performance à rechercher.</param>
        <param name="categoryName">Catégorie du compteur de performance dans laquelle effectuer la recherche.</param>
        <summary>Détermine si une catégorie spécifiée de l'ordinateur local contient l'instance donnée de l'objet de performance.</summary>
        <returns><see langword="true" /> si la catégorie contient l'instance spécifiée de l'objet de performance ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il n’est pas possible de déterminer si une instance d’objet de performance existe sur un ordinateur sans spécifier une catégorie spécifique à rechercher.  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant utilise les surcharges statiques de <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> pour déterminer si la donnée <xref:System.Diagnostics.PerformanceCounter> instance existe dans le <xref:System.Diagnostics.PerformanceCounterCategory>. La surcharge est sélectionnée si un nom d’ordinateur est spécifié. Si aucun nom d’instance est spécifié, l’exemple utilise le nom d’instance unique par défaut.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="instanceName" /> a la valeur <see langword="null" />.  
  
ou 
Le paramètre <paramref name="categoryName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="categoryName" /> est une chaîne vide ("").</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Instance de l'objet de performance à rechercher.</param>
        <param name="categoryName">Catégorie du compteur de performance dans laquelle effectuer la recherche.</param>
        <param name="machineName">Nom de l'ordinateur sur lequel rechercher la paire d'instances de la catégorie.</param>
        <summary>Détermine si une catégorie spécifiée d'un ordinateur donné contient l'instance déterminée de l'objet de performance.</summary>
        <returns><see langword="true" /> si la catégorie contient l'instance spécifiée de l'objet de performance ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il n’est pas possible de déterminer si une instance d’objet de performance existe sur un ordinateur sans spécifier une catégorie spécifique à rechercher.  
  
 Vous pouvez utiliser «. » pour spécifier l’ordinateur local.  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant utilise les surcharges statiques de <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> pour déterminer si la donnée <xref:System.Diagnostics.PerformanceCounter> instance existe dans le <xref:System.Diagnostics.PerformanceCounterCategory>. La surcharge est sélectionnée si un nom d’ordinateur est spécifié. Si aucun nom d’instance est spécifié, l’exemple utilise le nom d’instance unique par défaut.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="instanceName" /> a la valeur <see langword="null" />.  
  
ou 
Le paramètre <paramref name="categoryName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="categoryName" /> est une chaîne vide ("").  
  
ou 
Le paramètre <paramref name="machineName" /> n'est pas valide.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'ordinateur sur lequel réside cette catégorie.</summary>
        <value>Nom de l'ordinateur sur lequel résident la catégorie de compteurs de performance et les compteurs qui lui sont associés.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Diagnostics.PerformanceCounterCategory> avec la <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor> constructeur. Il invite l’utilisateur pour le <xref:System.Diagnostics.PerformanceCounterCategory> et les noms d’ordinateur, puis définit la <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> et <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> propriétés à partir des valeurs entrées. Il affiche ensuite les valeurs de la <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, et <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> propriétés, ou il affiche un message d’erreur si le <xref:System.Diagnostics.PerformanceCounterCategory> n’est pas accessible.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La syntaxe <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> n'est pas valide.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">pour lire les catégories de compteurs de performances. Énumération associée : <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="ReadCategory">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceDataCollectionCollection ReadCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.InstanceDataCollectionCollection ReadCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadCategory () As InstanceDataCollectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::InstanceDataCollectionCollection ^ ReadCategory();" />
      <MemberSignature Language="F#" Value="member this.ReadCategory : unit -&gt; System.Diagnostics.InstanceDataCollectionCollection" Usage="performanceCounterCategory.ReadCategory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceDataCollectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lit toutes les données de l'instance de l'objet de compteur et de performance associées à cette catégorie de compteurs de performance.</summary>
        <returns><see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> contenant les données de l'instance de l'objet de compteur et de performance pour cette catégorie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez définir le <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propriété avant d’appeler <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A>.  
  
 Lecture de l’ensemble de la catégorie à la fois peut être aussi efficace que la lecture d’un seul compteur en raison de la façon que le système fournit les données.  
  
> [!NOTE]
>  Pour lire les compteurs de performances dans Windows Vista et versions ultérieures, Windows XP Professionnel x64 64 ou Windows Server 2003, vous devez être membre du groupe utilisateurs de moniteur de performances ou disposer de privilèges administratifs.  
>   
>  Pour éviter d’avoir à élever vos privilèges pour accéder aux compteurs de performances dans Windows Vista et versions ultérieures, ajoutez-vous au groupe utilisateurs de moniteur de performances.  
>   
>  Dans Windows Vista et version ultérieure, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur. Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur. Par défaut, vous êtes dans le rôle d'utilisateur standard. Pour exécuter le code qui accède aux compteurs de performances, vous devez d’abord élever vos privilèges d’utilisateur standard à administrateur. Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.  
  
   
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Diagnostics.PerformanceCounterCategory> spécifié <xref:System.Diagnostics.PerformanceCounterCategory> nom. Il utilise ensuite <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> pour retourner un <xref:System.Diagnostics.InstanceDataCollectionCollection> qui contient les données d’instance pour toutes les instances de la <xref:System.Diagnostics.PerformanceCounter> d’objets dans le <xref:System.Diagnostics.PerformanceCounterCategory>.  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#6)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> est <see langword="null" />. Il se peut que la propriété ne soit pas définie.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Échec de l'appel à une API système sous-jacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code s'exécutant sans privilèges d'administrateur, destiné à lire un compteur de performance.</exception>
        <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
        <altmember cref="T:System.Diagnostics.InstanceDataCollection" />
        <altmember cref="T:System.Diagnostics.InstanceData" />
      </Docs>
    </Member>
  </Members>
</Type>