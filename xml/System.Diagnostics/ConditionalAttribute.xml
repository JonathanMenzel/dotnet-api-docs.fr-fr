<Type Name="ConditionalAttribute" FullName="System.Diagnostics.ConditionalAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="52d16acc2fc86862af9bda2108dce8bd399b5141" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37664461" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConditionalAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConditionalAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConditionalAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ConditionalAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indique aux compilateurs qu'un appel ou un attribut de méthode doit être ignoré, sauf si un symbole de compilation conditionnelle spécifié est défini.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez appliquer le <xref:System.Diagnostics.ConditionalAttribute> aux méthodes et classes d’attributs. Toutefois, son utilisation sur les classes est valide uniquement pour les types qui sont dérivés de <xref:System.Attribute>. <xref:System.Diagnostics.ConditionalAttribute> sera ignoré ou produit un avertissement du compilateur ou un message d’erreur si vous l’appliquez à un autre type.  
  
 Application <xref:System.Diagnostics.ConditionalAttribute> à une méthode indique aux compilateurs qu’un appel à la méthode ne doit pas être compilé dans le Microsoft intermediate language (MSIL), sauf si le symbole de la compilation conditionnelle est associé à <xref:System.Diagnostics.ConditionalAttribute> est défini. Vous obtiendrez une erreur de compilation dans Visual Studio si vous appliquez cet attribut à une méthode qui ne retourne pas void. Application <xref:System.Diagnostics.ConditionalAttribute> à un attribut indique que l’attribut ne doit pas être émis aux métadonnées, sauf si le symbole de compilation conditionnelle est défini. Tous les arguments passés à la méthode ou d’attribut sont toujours type contrôlé par le compilateur.  
  
 Vous pouvez utiliser les techniques suivantes pour définir les symboles de compilation conditionnelle :  
  
-   Utilisez les options de ligne de commande du compilateur ; par exemple, **/ define : DEBUG**.  
  
-   Utiliser des variables d’environnement dans l’interpréteur de commandes du système d’exploitation ; par exemple, **définir DEBUG = 1**.  
  
-   Utilisez des pragmas dans le code source ; par exemple, définissez la variable de compilation comme suit :  
  
    ```csharp  
    #define DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=True  
    ```  
  
     Pour supprimer la définition de la variable, procédez comme suit :  
  
    ```csharp  
    #undef DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=False  
    ```  
  
 Les compilateurs avec le Common Language Specification (CLS) sont autorisés à ignorer <xref:System.Diagnostics.ConditionalAttribute>. Les compilateurs c#, Visual Basic et C++ prennent en charge <xref:System.Diagnostics.ConditionalAttribute>; le compilateur JScript ne prend pas en charge l’attribut.  
  
> [!NOTE]
>  En Visual Basic, le `AddressOf` opérateur n’est pas affecté par cet attribut. Par exemple, `Call CType(AddressOf delegate, Action)` appelle toujours `delegate`, bien que `Call delegate()` ne peut-être pas.  
  
 <xref:System.Diagnostics.ConditionalAttribute> est appliqué aux méthodes qui sont définies dans le <xref:System.Diagnostics.Debug> et <xref:System.Diagnostics.Trace> classes.  
  
 Pour plus d’informations sur l’utilisation des attributs, consultez [attributs](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 L'exemple suivant montre l'utilisation de <xref:System.Diagnostics.ConditionalAttribute>. L’exemple suppose que la condition est définie avec la **/ define** option du compilateur. Vous pouvez obtenir des résultats différents en modifiant l’option du compilateur. Vous pouvez éventuellement définir les conditions à l’aide des pragmas dans l’exemple de code au lieu de les identifier en tant qu’options du compilateur.  
  
 [!code-csharp[ConditionalAttributeSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#7)]
 [!code-vb[ConditionalAttributeSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalAttribute (string conditionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string conditionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalAttribute(System::String ^ conditionString);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConditionalAttribute : string -&gt; System.Diagnostics.ConditionalAttribute" Usage="new System.Diagnostics.ConditionalAttribute conditionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionString">Chaîne qui spécifie le symbole de compilation conditionnelle respectant la casse et associé à l'attribut.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.ConditionalAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A> constructeur. Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.ConditionalAttribute> classe.  
  
 [!code-csharp[ConditionalAttributeSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#8)]
 [!code-vb[ConditionalAttributeSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionString">
      <MemberSignature Language="C#" Value="public string ConditionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConditionString" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConditionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionString : string" Usage="System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le symbole de compilation conditionnelle associé à l'attribut <see cref="T:System.Diagnostics.ConditionalAttribute" />.</summary>
        <value>Chaîne qui spécifie le symbole de compilation conditionnelle respectant la casse et associé à l'attribut <see cref="T:System.Diagnostics.ConditionalAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est en lecture seule.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>