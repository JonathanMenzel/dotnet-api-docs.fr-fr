<Type Name="InstanceDataCollection" FullName="System.Diagnostics.InstanceDataCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3782f648b256d4773b245968a157f12b5106f44b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37663366" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InstanceDataCollection : System.Collections.DictionaryBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstanceDataCollection extends System.Collections.DictionaryBase" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.InstanceDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class InstanceDataCollection&#xA;Inherits DictionaryBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceDataCollection : System::Collections::DictionaryBase" />
  <TypeSignature Language="F#" Value="type InstanceDataCollection = class&#xA;    inherit DictionaryBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.DictionaryBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une collection fortement typée d’objets <see cref="T:System.Diagnostics.InstanceData" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Diagnostics.InstanceDataCollection> classe représente une collection contenant toutes les données d’instance d’un compteur. Cette collection est contenue dans le <xref:System.Diagnostics.InstanceDataCollectionCollection> lorsque vous utilisez le <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant affiche les données d’instance pour un particulier <xref:System.Diagnostics.PerformanceCounterCategory> sur l’ordinateur local. Il affiche tout d’abord une liste numérotée de <xref:System.Diagnostics.PerformanceCounterCategory> noms. Une fois que l’utilisateur entre le nombre d’une des catégories, l’exemple récupère le <xref:System.Diagnostics.InstanceDataCollectionCollection> pour qui <xref:System.Diagnostics.PerformanceCounterCategory>. Il convertit ensuite la collection retournée par <xref:System.Diagnostics.InstanceDataCollectionCollection.Values%2A> vers un tableau de <xref:System.Diagnostics.InstanceDataCollection> objets. L’exemple affiche également les données d’instance associées à chaque <xref:System.Diagnostics.InstanceData> de chaque <xref:System.Diagnostics.InstanceDataCollection>.  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#1)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
    <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
    <altmember cref="T:System.Diagnostics.InstanceData" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstanceDataCollection (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (counterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstanceDataCollection(System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.InstanceDataCollection : string -&gt; System.Diagnostics.InstanceDataCollection" Usage="new System.Diagnostics.InstanceDataCollection counterName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use InstanceDataCollectionCollection indexer instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Nom du compteur, décrivant généralement la quantité prise en compte.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.InstanceDataCollection" /> à l'aide du compteur de performance spécifié (qui définit une instance de performance).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="counterName" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (instanceName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="instanceDataCollection.Contains instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Nom de l'instance à rechercher dans cette collection.</param>
        <summary>Détermine si une instance de performance portant un nom spécifié (identifié par un des objets <see cref="T:System.Diagnostics.InstanceData" /> indexés) existe dans la collection.</summary>
        <returns>
          <see langword="true" /> si l'instance existe dans la collection ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `instanceName` paramètre respecte la casse.  
  
   
  
## Examples  
 L’exemple de code suivant accepte une <xref:System.Diagnostics.PerformanceCounter> nom de catégorie, nom du compteur et nom de l’instance à partir de la ligne de commande. Il obtient le <xref:System.Diagnostics.InstanceDataCollectionCollection> pour la catégorie, qui est une collection de <xref:System.Diagnostics.InstanceDataCollection> objets. À partir de là, il obtient le particulier <xref:System.Diagnostics.InstanceDataCollection> pour le compteur spécifié. Il utilise ensuite la <xref:System.Diagnostics.InstanceDataCollection.Contains%2A> méthode pour déterminer si l’instance spécifiée existe, à l’aide du nom d’instance unique par défaut si aucun n’est entré.  
  
 [!code-csharp[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/CS/instdatacolitemcontains.cs#2)]
 [!code-vb[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/VB/instdatacolitemcontains.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="instanceName" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Diagnostics.InstanceData[] instances, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Diagnostics.InstanceData[] instances, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (instances As InstanceData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Diagnostics::InstanceData ^&gt; ^ instances, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Diagnostics.InstanceData[] * int -&gt; unit" Usage="instanceDataCollection.CopyTo (instances, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instances" Type="System.Diagnostics.InstanceData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instances">
          <see cref="T:System.Array" /> unidimensionnel qui représente la destination des valeurs copiées à partir de la collection.</param>
        <param name="index">Valeur d'index de base zéro au niveau de laquelle insérer les nouvelles instances.</param>
        <summary>Copie les éléments de la collection dans le tableau unidimensionnel spécifié à l'index déterminé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Diagnostics.InstanceDataCollection.CopyTo%2A> méthode pour convertir un <xref:System.Diagnostics.InstanceDataCollection> dans un tableau de <xref:System.Diagnostics.InstanceData> objets. Les valeurs de la <xref:System.Diagnostics.InstanceData.InstanceName%2A> et <xref:System.Diagnostics.InstanceData.Sample%2A> propriétés de chaque élément du tableau sont passées à une fonction pour un traitement ultérieur.  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#4)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterName">
      <MemberSignature Language="C#" Value="public string CounterName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.CounterName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CounterName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterName : string" Usage="System.Diagnostics.InstanceDataCollection.CounterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du compteur de performance dont vous souhaitez obtenir les données d'instance.</summary>
        <value>Nom du compteur de performance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple affiche le <xref:System.Diagnostics.InstanceDataCollection.CounterName%2A> propriété d’un <xref:System.Diagnostics.InstanceDataCollection>.  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#4)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceData this[string instanceName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.InstanceData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(instanceName As String) As InstanceData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::InstanceData ^ default[System::String ^] { System::Diagnostics::InstanceData ^ get(System::String ^ instanceName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Diagnostics.InstanceData" Usage="System.Diagnostics.InstanceDataCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Nom de l'instance de la catégorie du compteur de performance, ou chaîne vide (« ») si la catégorie ne contient qu'une seule instance.</param>
        <summary>Obtient les données d'instance associées à ce compteur. Il s'agit généralement d'un jeu de valeurs de compteur brutes.</summary>
        <value>Élément <see cref="T:System.Diagnostics.InstanceData" /> par lequel l'objet <see cref="T:System.Diagnostics.InstanceDataCollection" /> est indexé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `instanceName` paramètre respecte la casse.  
  
   
  
## Examples  
 L’exemple de code suivant accepte une <xref:System.Diagnostics.PerformanceCounter> nom de catégorie, nom du compteur et nom de l’instance à partir de la ligne de commande. Il obtient le <xref:System.Diagnostics.InstanceDataCollectionCollection> pour la catégorie, qui est une collection de <xref:System.Diagnostics.InstanceDataCollection> objets. À partir de là, il obtient le particulier <xref:System.Diagnostics.InstanceDataCollection> pour le compteur spécifié. Ensuite, si l’instance existe, l’exemple utilise le <xref:System.Diagnostics.InstanceDataCollection.Item%2A> propriété (référencée en tant qu’indexeur) pour obtenir le texte associé <xref:System.Diagnostics.InstanceData> objet.  
  
 [!code-csharp[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/CS/instdatacolitemcontains.cs#2)]
 [!code-vb[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/VB/instdatacolitemcontains.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="instanceName" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Diagnostics.InstanceDataCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les clés de Registre de l'objet et du compteur pour les objets associés à ces données d'instance.</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> qui représente un jeu de clés de Registre propres à l'objet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque composant logiciel crée des clés pour ses objets et compteurs lorsqu’il est installé et écrit des données de compteur pendant son exécution. Vous pouvez accéder à ces données comme vous accéderiez à toutes les autres données de Registre. Toutefois, même si vous utilisez le Registre pour collecter des données de performances, les données ne sont pas stockées dans la base de données de Registre. Au lieu de cela, le système collecte les données à partir des gestionnaires d’objet système appropriés.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Diagnostics.InstanceDataCollection.Keys%2A> propriété d’un <xref:System.Diagnostics.InstanceDataCollection> pour retourner une collection de noms d’instance, qu’il convertit en un tableau de <xref:System.String>. Il génère un tableau de <xref:System.Diagnostics.InstanceData> objets à l’aide de la <xref:System.Diagnostics.InstanceDataCollection.Values%2A> propriété. Pour chaque élément dans le tableau des noms d’instance, il affiche le nom et appelle une fonction pour traiter associé <xref:System.Diagnostics.InstanceData> objet.  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#3)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Diagnostics.InstanceDataCollection.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les valeurs de compteur brutes comprenant les données d'instance du compteur.</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> qui représente les valeurs de données brutes du compteur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Diagnostics.InstanceDataCollection.Values%2A> propriété d’un <xref:System.Diagnostics.InstanceDataCollection> pour retourner une collection de <xref:System.Diagnostics.InstanceData> objets qu’il convertit en un tableau. Il génère un tableau de noms d’instance à l’aide de la <xref:System.Diagnostics.InstanceDataCollection.Keys%2A> propriété. Pour chaque élément du tableau de <xref:System.Diagnostics.InstanceData> objets, il affiche le nom d’instance associé et appelle une fonction pour traiter le <xref:System.Diagnostics.InstanceData> objet.  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#3)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>