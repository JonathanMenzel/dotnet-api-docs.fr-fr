<Type Name="Stopwatch" FullName="System.Diagnostics.Stopwatch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca3ac66cc8f9855372aa92b45a2715f31c5e689c" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="04/17/2019" /><Meta Name="ms.locfileid" Value="59676531" /></Metadata><TypeSignature Language="C#" Value="public class Stopwatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Stopwatch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Stopwatch" />
  <TypeSignature Language="VB.NET" Value="Public Class Stopwatch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stopwatch" />
  <TypeSignature Language="F#" Value="type Stopwatch = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="69426-101">Fournit un jeu de méthodes et de propriétés que vous pouvez utiliser pour mesurer le temps écoulé précisément.</span><span class="sxs-lookup"><span data-stu-id="69426-101">Provides a set of methods and properties that you can use to accurately measure elapsed time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-102">Un <xref:System.Diagnostics.Stopwatch> instance peut mesurer le temps écoulé pour un intervalle ou le total du temps écoulé sur plusieurs intervalles.</span><span class="sxs-lookup"><span data-stu-id="69426-102">A <xref:System.Diagnostics.Stopwatch> instance can measure elapsed time for one interval, or the total of elapsed time across multiple intervals.</span></span> <span data-ttu-id="69426-103">Dans un type <xref:System.Diagnostics.Stopwatch> scénario, vous appelez le <xref:System.Diagnostics.Stopwatch.Start%2A> (méthode), puis finira par appeler la <xref:System.Diagnostics.Stopwatch.Stop%2A> (méthode), puis vérifiez le temps écoulé à l’aide la <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="69426-103">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="69426-104">Un <xref:System.Diagnostics.Stopwatch> instance est en cours d’exécution ou arrêté ; utilisez <xref:System.Diagnostics.Stopwatch.IsRunning%2A> pour déterminer l’état actuel d’un <xref:System.Diagnostics.Stopwatch>.</span><span class="sxs-lookup"><span data-stu-id="69426-104">A <xref:System.Diagnostics.Stopwatch> instance is either running or stopped; use <xref:System.Diagnostics.Stopwatch.IsRunning%2A> to determine the current state of a <xref:System.Diagnostics.Stopwatch>.</span></span> <span data-ttu-id="69426-105">Utilisez <xref:System.Diagnostics.Stopwatch.Start%2A> pour commencer à mesurer le temps écoulé ; utiliser <xref:System.Diagnostics.Stopwatch.Stop%2A> pour arrêter de mesurer le temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-105">Use <xref:System.Diagnostics.Stopwatch.Start%2A> to begin measuring elapsed time; use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop measuring elapsed time.</span></span> <span data-ttu-id="69426-106">Interroger la valeur de temps écoulé via les propriétés <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, ou <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>.</span><span class="sxs-lookup"><span data-stu-id="69426-106">Query the elapsed time value through the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>.</span></span> <span data-ttu-id="69426-107">Vous pouvez interroger les propriétés de temps écoulé pendant que l’instance est en cours d’exécution ou arrêté.</span><span class="sxs-lookup"><span data-stu-id="69426-107">You can query the elapsed time properties while the instance is running or stopped.</span></span> <span data-ttu-id="69426-108">Le temps écoulé propriétés régulièrement augmentent tandis que le <xref:System.Diagnostics.Stopwatch> est en cours d’exécution ; ils restent constants lorsque l’instance est arrêtée.</span><span class="sxs-lookup"><span data-stu-id="69426-108">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="69426-109">Par défaut, la valeur de temps écoulé d’un <xref:System.Diagnostics.Stopwatch> instance équivaut au total de tous les intervalles de temps mesuré.</span><span class="sxs-lookup"><span data-stu-id="69426-109">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="69426-110">Chaque appel à <xref:System.Diagnostics.Stopwatch.Start%2A> commence à compter au temps total passé ; chaque appel à <xref:System.Diagnostics.Stopwatch.Stop%2A> met fin à la mesure l’intervalle actuel et se fige la valeur du temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-110">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="69426-111">Utilisez le <xref:System.Diagnostics.Stopwatch.Reset%2A> méthode pour effacer le temps total passé dans une existante <xref:System.Diagnostics.Stopwatch> instance.</span><span class="sxs-lookup"><span data-stu-id="69426-111">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
 <span data-ttu-id="69426-112">Le <xref:System.Diagnostics.Stopwatch> mesure le temps écoulé en comptant les graduations de minuterie dans le mécanisme de minuterie sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="69426-112">The <xref:System.Diagnostics.Stopwatch> measures elapsed time by counting timer ticks in the underlying timer mechanism.</span></span> <span data-ttu-id="69426-113">Si le matériel installé et le système d’exploitation prend en charge un compteur de performance haute résolution, puis la <xref:System.Diagnostics.Stopwatch> classe utilise ce compteur pour mesurer le temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-113">If the installed hardware and operating system support a high-resolution performance counter, then the <xref:System.Diagnostics.Stopwatch> class uses that counter to measure elapsed time.</span></span> <span data-ttu-id="69426-114">Sinon, la <xref:System.Diagnostics.Stopwatch> classe utilise l’horloge système pour mesurer le temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-114">Otherwise, the <xref:System.Diagnostics.Stopwatch> class uses the system timer to measure elapsed time.</span></span> <span data-ttu-id="69426-115">Utilisez le <xref:System.Diagnostics.Stopwatch.Frequency> et <xref:System.Diagnostics.Stopwatch.IsHighResolution> champs pour déterminer la précision et la résolution de la <xref:System.Diagnostics.Stopwatch> implémentation de minutage.</span><span class="sxs-lookup"><span data-stu-id="69426-115">Use the <xref:System.Diagnostics.Stopwatch.Frequency> and <xref:System.Diagnostics.Stopwatch.IsHighResolution> fields to determine the precision and resolution of the <xref:System.Diagnostics.Stopwatch> timing implementation.</span></span>  
  
 <span data-ttu-id="69426-116">Le <xref:System.Diagnostics.Stopwatch> classe aide à la manipulation des compteurs de performance liés à la minuterie dans du code géré.</span><span class="sxs-lookup"><span data-stu-id="69426-116">The <xref:System.Diagnostics.Stopwatch> class assists the manipulation of timing-related performance counters within managed code.</span></span> <span data-ttu-id="69426-117">Plus précisément, le <xref:System.Diagnostics.Stopwatch.Frequency> champ et <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> méthode peut être utilisée à la place de l’API Windows non managées `QueryPerformanceFrequency` et `QueryPerformanceCounter`.</span><span class="sxs-lookup"><span data-stu-id="69426-117">Specifically, the <xref:System.Diagnostics.Stopwatch.Frequency> field and <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> method can be used in place of the unmanaged Windows APIs `QueryPerformanceFrequency` and `QueryPerformanceCounter`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69426-118">Sur un ordinateur multiprocesseur, peu importe le processeur sur lequel le thread s’exécute sur.</span><span class="sxs-lookup"><span data-stu-id="69426-118">On a multiprocessor computer, it does not matter which processor the thread runs on.</span></span> <span data-ttu-id="69426-119">Toutefois, en raison de bogues dans le BIOS ou de la couche d’Abstraction matérielle (HAL), vous pouvez obtenir des résultats de minutage différents sur différents processeurs.</span><span class="sxs-lookup"><span data-stu-id="69426-119">However, because of bugs in the BIOS or the Hardware Abstraction Layer (HAL), you can get different timing results on different processors.</span></span> <span data-ttu-id="69426-120">Pour spécifier l’affinité du processeur pour un thread, utilisez la <xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="69426-120">To specify processor affinity for a thread, use the <xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69426-121">L’exemple suivant montre comment utiliser le <xref:System.Diagnostics.Stopwatch> classe pour déterminer la durée d’exécution pour une application.</span><span class="sxs-lookup"><span data-stu-id="69426-121">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch> class to determine the execution time for an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 <span data-ttu-id="69426-122">L’exemple suivant illustre l’utilisation de la <xref:System.Diagnostics.Stopwatch> classe pour calculer les données de performances.</span><span class="sxs-lookup"><span data-stu-id="69426-122">The following example demonstrates the use of the <xref:System.Diagnostics.Stopwatch> class to calculate performance data.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#1)]
 [!code-csharp[StopWatchPerfSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#1)]
 [!code-vb[StopWatchPerfSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stopwatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stopwatch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69426-123">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Stopwatch" />.</span><span class="sxs-lookup"><span data-stu-id="69426-123">Initializes a new instance of the <see cref="T:System.Diagnostics.Stopwatch" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-124">Retourné <xref:System.Diagnostics.Stopwatch> instance est arrêtée, et la propriété de temps écoulé de l’instance est égale à zéro.</span><span class="sxs-lookup"><span data-stu-id="69426-124">The returned <xref:System.Diagnostics.Stopwatch> instance is stopped, and the elapsed time property of the instance is zero.</span></span>  
  
 <span data-ttu-id="69426-125">Utilisez le <xref:System.Diagnostics.Stopwatch.Start%2A> méthode pour commencer à mesurer le temps écoulé avec la nouvelle <xref:System.Diagnostics.Stopwatch> instance.</span><span class="sxs-lookup"><span data-stu-id="69426-125">Use the <xref:System.Diagnostics.Stopwatch.Start%2A> method to begin measuring elapsed time with the new <xref:System.Diagnostics.Stopwatch> instance.</span></span> <span data-ttu-id="69426-126">Utilisez le <xref:System.Diagnostics.Stopwatch.StartNew%2A> méthode pour initialiser un nouveau <xref:System.Diagnostics.Stopwatch> d’instance et la démarrer immédiatement.</span><span class="sxs-lookup"><span data-stu-id="69426-126">Use the <xref:System.Diagnostics.Stopwatch.StartNew%2A> method to initialize a new <xref:System.Diagnostics.Stopwatch> instance and immediately start it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69426-127">L’exemple suivant initialise un <xref:System.Diagnostics.Stopwatch> instance à l’aide d’un constructeur de classe simple.</span><span class="sxs-lookup"><span data-stu-id="69426-127">The following example initializes a <xref:System.Diagnostics.Stopwatch> instance by using a simple class constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public TimeSpan Elapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Elapsed" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elapsed As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Elapsed { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Elapsed : TimeSpan" Usage="System.Diagnostics.Stopwatch.Elapsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69426-128">Obtient le temps total écoulé mesuré par l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="69426-128">Gets the total elapsed time measured by the current instance.</span></span></summary>
        <value><span data-ttu-id="69426-129"><see cref="T:System.TimeSpan" /> en lecture seule qui représente le temps total écoulé mesuré par l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="69426-129">A read-only <see cref="T:System.TimeSpan" /> representing the total elapsed time measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-130">Dans un type <xref:System.Diagnostics.Stopwatch> scénario, vous appelez le <xref:System.Diagnostics.Stopwatch.Start%2A> (méthode), puis finira par appeler la <xref:System.Diagnostics.Stopwatch.Stop%2A> (méthode), puis vérifiez le temps écoulé à l’aide la <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="69426-130">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="69426-131">Utilisez le <xref:System.Diagnostics.Stopwatch.Elapsed%2A> à l’aide de valeur de propriété pour récupérer le temps écoulé <xref:System.TimeSpan> méthodes et propriétés.</span><span class="sxs-lookup"><span data-stu-id="69426-131">Use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to retrieve the elapsed time value using <xref:System.TimeSpan> methods and properties.</span></span> <span data-ttu-id="69426-132">Par exemple, vous pouvez mettre en forme le texte retourné <xref:System.TimeSpan> de l’instance dans une représentation sous forme de texte, ou passer à une autre classe qui requiert un <xref:System.TimeSpan> paramètre.</span><span class="sxs-lookup"><span data-stu-id="69426-132">For example, you can format the returned <xref:System.TimeSpan> instance into a text representation, or pass it to another class that requires a <xref:System.TimeSpan> parameter.</span></span>  
  
 <span data-ttu-id="69426-133">Vous pouvez interroger les propriétés <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, et <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> tandis que le <xref:System.Diagnostics.Stopwatch> instance est en cours d’exécution ou arrêté.</span><span class="sxs-lookup"><span data-stu-id="69426-133">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="69426-134">Le temps écoulé propriétés régulièrement augmentent tandis que le <xref:System.Diagnostics.Stopwatch> est en cours d’exécution ; ils restent constants lorsque l’instance est arrêtée.</span><span class="sxs-lookup"><span data-stu-id="69426-134">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="69426-135">Par défaut, la valeur de temps écoulé d’un <xref:System.Diagnostics.Stopwatch> instance équivaut au total de tous les intervalles de temps mesuré.</span><span class="sxs-lookup"><span data-stu-id="69426-135">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="69426-136">Chaque appel à <xref:System.Diagnostics.Stopwatch.Start%2A> commence à compter au temps total passé ; chaque appel à <xref:System.Diagnostics.Stopwatch.Stop%2A> met fin à la mesure l’intervalle actuel et se fige la valeur du temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-136">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="69426-137">Utilisez le <xref:System.Diagnostics.Stopwatch.Reset%2A> méthode pour effacer le temps total passé dans une existante <xref:System.Diagnostics.Stopwatch> instance.</span><span class="sxs-lookup"><span data-stu-id="69426-137">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69426-138">L’exemple suivant montre comment utiliser le <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propriété afin de déterminer la durée d’exécution pour une application.</span><span class="sxs-lookup"><span data-stu-id="69426-138">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to determine the execution time for an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedMilliseconds">
      <MemberSignature Language="C#" Value="public long ElapsedMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedMilliseconds As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedMilliseconds { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedMilliseconds : int64" Usage="System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69426-139">Obtient le temps total écoulé mesuré par l'instance actuelle, en millisecondes.</span><span class="sxs-lookup"><span data-stu-id="69426-139">Gets the total elapsed time measured by the current instance, in milliseconds.</span></span></summary>
        <value><span data-ttu-id="69426-140">Entier long en lecture seule qui représente le nombre total de millisecondes mesuré par l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="69426-140">A read-only long integer representing the total number of milliseconds measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-141">Cette propriété représente le temps écoulé arrondi à la valeur entière de milliseconde la plus proche.</span><span class="sxs-lookup"><span data-stu-id="69426-141">This property represents elapsed time rounded down to the nearest whole millisecond value.</span></span> <span data-ttu-id="69426-142">Pour les mesures de précision plus élevées, utilisez le <xref:System.Diagnostics.Stopwatch.Elapsed%2A> ou <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="69426-142">For higher precision measurements, use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> properties.</span></span>  
  
 <span data-ttu-id="69426-143">Vous pouvez interroger les propriétés <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, et <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> tandis que le <xref:System.Diagnostics.Stopwatch> instance est en cours d’exécution ou arrêté.</span><span class="sxs-lookup"><span data-stu-id="69426-143">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="69426-144">Le temps écoulé propriétés régulièrement augmentent tandis que le <xref:System.Diagnostics.Stopwatch> est en cours d’exécution ; ils restent constants lorsque l’instance est arrêtée.</span><span class="sxs-lookup"><span data-stu-id="69426-144">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="69426-145">Par défaut, la valeur de temps écoulé d’un <xref:System.Diagnostics.Stopwatch> instance équivaut au total de tous les intervalles de temps mesuré.</span><span class="sxs-lookup"><span data-stu-id="69426-145">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="69426-146">Chaque appel à <xref:System.Diagnostics.Stopwatch.Start%2A> commence à compter au temps total passé ; chaque appel à <xref:System.Diagnostics.Stopwatch.Stop%2A> met fin à la mesure l’intervalle actuel et se fige la valeur du temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-146">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="69426-147">Utilisez le <xref:System.Diagnostics.Stopwatch.Reset%2A> méthode pour effacer le temps total passé dans une existante <xref:System.Diagnostics.Stopwatch> instance.</span><span class="sxs-lookup"><span data-stu-id="69426-147">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69426-148">L’exemple suivant utilise la <xref:System.Diagnostics.Stopwatch> classe pour mesurer les performances de quatre implémentations différentes pour l’analyse d’un entier à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="69426-148">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="69426-149">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.Stopwatch> classe.</span><span class="sxs-lookup"><span data-stu-id="69426-149">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#3](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#3)]
 [!code-csharp[StopWatchPerfSample#3](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#3)]
 [!code-vb[StopWatchPerfSample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedTicks">
      <MemberSignature Language="C#" Value="public long ElapsedTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedTicks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedTicks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedTicks : int64" Usage="System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69426-150">Obtient le temps total écoulé mesuré par l'instance actuelle, en graduations de minuterie.</span><span class="sxs-lookup"><span data-stu-id="69426-150">Gets the total elapsed time measured by the current instance, in timer ticks.</span></span></summary>
        <value><span data-ttu-id="69426-151">Entier long en lecture seule qui représente le nombre total de graduations de minuterie mesuré par l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="69426-151">A read-only long integer representing the total number of timer ticks measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-152">Cette propriété représente le nombre de graduations écoulées dans le mécanisme de minuterie sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="69426-152">This property represents the number of elapsed ticks in the underlying timer mechanism.</span></span> <span data-ttu-id="69426-153">Une graduation est la plus petite unité de temps que le <xref:System.Diagnostics.Stopwatch> minuteur peut mesurer.</span><span class="sxs-lookup"><span data-stu-id="69426-153">A tick is the smallest unit of time that the <xref:System.Diagnostics.Stopwatch> timer can measure.</span></span> <span data-ttu-id="69426-154">Utilisez le <xref:System.Diagnostics.Stopwatch.Frequency> champ pour convertir le <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> valeur en un nombre de secondes.</span><span class="sxs-lookup"><span data-stu-id="69426-154">Use the <xref:System.Diagnostics.Stopwatch.Frequency> field to convert the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value into a number of seconds.</span></span>  
  
 <span data-ttu-id="69426-155">Vous pouvez interroger les propriétés <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, et <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> tandis que le <xref:System.Diagnostics.Stopwatch> instance est en cours d’exécution ou arrêté.</span><span class="sxs-lookup"><span data-stu-id="69426-155">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="69426-156">Le temps écoulé propriétés régulièrement augmentent tandis que le <xref:System.Diagnostics.Stopwatch> est en cours d’exécution ; ils restent constants lorsque l’instance est arrêtée.</span><span class="sxs-lookup"><span data-stu-id="69426-156">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="69426-157">Par défaut, la valeur de temps écoulé d’un <xref:System.Diagnostics.Stopwatch> instance équivaut au total de tous les intervalles de temps mesuré.</span><span class="sxs-lookup"><span data-stu-id="69426-157">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="69426-158">Chaque appel à <xref:System.Diagnostics.Stopwatch.Start%2A> commence à compter au temps total passé ; chaque appel à <xref:System.Diagnostics.Stopwatch.Stop%2A> met fin à la mesure l’intervalle actuel et se fige la valeur du temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-158">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="69426-159">Utilisez le <xref:System.Diagnostics.Stopwatch.Reset%2A> méthode pour effacer le temps total passé dans une existante <xref:System.Diagnostics.Stopwatch> instance.</span><span class="sxs-lookup"><span data-stu-id="69426-159">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69426-160"><xref:System.Diagnostics.Stopwatch> graduations diffèrent des <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="69426-160"><xref:System.Diagnostics.Stopwatch> ticks are different from <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="69426-161">Chaque graduation dans la <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> valeur représente un intervalle de 100 nanosecondes.</span><span class="sxs-lookup"><span data-stu-id="69426-161">Each tick in the <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> value represents one 100-nanosecond interval.</span></span> <span data-ttu-id="69426-162">Chaque graduation dans le <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> valeur représente l’intervalle de temps égal à 1 seconde divisée par le <xref:System.Diagnostics.Stopwatch.Frequency>.</span><span class="sxs-lookup"><span data-stu-id="69426-162">Each tick in the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value represents the time interval equal to 1 second divided by the <xref:System.Diagnostics.Stopwatch.Frequency>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69426-163">L’exemple suivant utilise la <xref:System.Diagnostics.Stopwatch> classe pour mesurer les performances de quatre implémentations différentes pour l’analyse d’un entier à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="69426-163">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="69426-164">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.Stopwatch> classe.</span><span class="sxs-lookup"><span data-stu-id="69426-164">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public static readonly long Frequency;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 Frequency" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.Frequency" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Frequency As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long Frequency;" />
      <MemberSignature Language="F#" Value=" staticval mutable Frequency : int64" Usage="System.Diagnostics.Stopwatch.Frequency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69426-165">Obtient la fréquence de la minuterie en nombre de graduations par seconde.</span><span class="sxs-lookup"><span data-stu-id="69426-165">Gets the frequency of the timer as the number of ticks per second.</span></span> <span data-ttu-id="69426-166">Ce champ est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="69426-166">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-167">La fréquence de minuterie indique la précision de la minuterie et la résolution.</span><span class="sxs-lookup"><span data-stu-id="69426-167">The timer frequency indicates the timer precision and resolution.</span></span> <span data-ttu-id="69426-168">Par exemple, une fréquence de minuterie de 2 millions de graduations par seconde équivaut à une résolution du chronomètre de 500 nanosecondes par graduation.</span><span class="sxs-lookup"><span data-stu-id="69426-168">For example, a timer frequency of 2 million ticks per second equals a timer resolution of 500 nanoseconds per tick.</span></span> <span data-ttu-id="69426-169">En d’autres termes, comme une seconde est égale à 1 milliard de nanosecondes, une fréquence de minuterie de 2 millions de graduations par seconde équivaut à 2 millions de graduations par 1 milliard de nanosecondes, ce qui peut être simplifié en 1 graduation pour 500 nanosecondes.</span><span class="sxs-lookup"><span data-stu-id="69426-169">In other words, because one second equals 1 billion nanoseconds, a timer frequency of 2 million ticks per second is equivalent to 2 million ticks per 1 billion nanoseconds, which can be further simplified to 1 tick per 500 nanoseconds.</span></span>  
  
 <span data-ttu-id="69426-170">Le <xref:System.Diagnostics.Stopwatch.Frequency> valeur dépend de la résolution du mécanisme de minuterie sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="69426-170">The <xref:System.Diagnostics.Stopwatch.Frequency> value depends on the resolution of the underlying timing mechanism.</span></span> <span data-ttu-id="69426-171">Si le matériel installé et le système d’exploitation prend en charge un compteur de performance haute résolution, puis le <xref:System.Diagnostics.Stopwatch.Frequency> valeur reflète la fréquence de ce compteur.</span><span class="sxs-lookup"><span data-stu-id="69426-171">If the installed hardware and operating system support a high-resolution performance counter, then the <xref:System.Diagnostics.Stopwatch.Frequency> value reflects the frequency of that counter.</span></span> <span data-ttu-id="69426-172">Sinon, le <xref:System.Diagnostics.Stopwatch.Frequency> valeur est basée sur la fréquence de l’horloge système.</span><span class="sxs-lookup"><span data-stu-id="69426-172">Otherwise, the <xref:System.Diagnostics.Stopwatch.Frequency> value is based on the system timer frequency.</span></span>  
  
 <span data-ttu-id="69426-173">Étant donné que le <xref:System.Diagnostics.Stopwatch> fréquence varie selon le matériel installé et le système d’exploitation, le <xref:System.Diagnostics.Stopwatch.Frequency> valeur reste constante pendant que le système est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="69426-173">Because the <xref:System.Diagnostics.Stopwatch> frequency depends on the installed hardware and operating system, the <xref:System.Diagnostics.Stopwatch.Frequency> value remains constant while the system is running.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69426-174">L’exemple suivant affiche la fréquence et la résolution d’un <xref:System.Diagnostics.Stopwatch> minuteur.</span><span class="sxs-lookup"><span data-stu-id="69426-174">The following example displays the frequency and resolution of a <xref:System.Diagnostics.Stopwatch> timer.</span></span> <span data-ttu-id="69426-175">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.Stopwatch> classe.</span><span class="sxs-lookup"><span data-stu-id="69426-175">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="C#" Value="public static long GetTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTimestamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.GetTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTimestamp () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetTimestamp();" />
      <MemberSignature Language="F#" Value="static member GetTimestamp : unit -&gt; int64" Usage="System.Diagnostics.Stopwatch.GetTimestamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69426-176">Obtient le nombre actuel de graduations dans le mécanisme de minuterie.</span><span class="sxs-lookup"><span data-stu-id="69426-176">Gets the current number of ticks in the timer mechanism.</span></span></summary>
        <returns><span data-ttu-id="69426-177">Entier long qui représente la valeur du compteur de graduations du mécanisme de minuterie sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="69426-177">A long integer representing the tick counter value of the underlying timer mechanism.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-178">Si le <xref:System.Diagnostics.Stopwatch> classe utilise un compteur de performance haute résolution, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> retourne la valeur actuelle de ce compteur.</span><span class="sxs-lookup"><span data-stu-id="69426-178">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="69426-179">Si le <xref:System.Diagnostics.Stopwatch> classe utilise l’horloge système, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> retourne actuel <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> propriété de la <xref:System.DateTime.Now%2A?displayProperty=nameWithType> instance.</span><span class="sxs-lookup"><span data-stu-id="69426-179">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> property of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69426-180">L’exemple suivant illustre l’utilisation de la <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> méthode pour mettre à jour un compteur de performance.</span><span class="sxs-lookup"><span data-stu-id="69426-180">The following example illustrates the use of the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> method to update a performance counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="IsHighResolution">
      <MemberSignature Language="C#" Value="public static readonly bool IsHighResolution;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsHighResolution" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighResolution As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsHighResolution;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighResolution : bool" Usage="System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69426-181">Indique si la minuterie est basée sur un compteur de performance haute résolution.</span><span class="sxs-lookup"><span data-stu-id="69426-181">Indicates whether the timer is based on a high-resolution performance counter.</span></span> <span data-ttu-id="69426-182">Ce champ est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="69426-182">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-183">La minuterie utilisée par la <xref:System.Diagnostics.Stopwatch> classe dépend de la configuration matérielle du système et le système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="69426-183">The timer used by the <xref:System.Diagnostics.Stopwatch> class depends on the system hardware and operating system.</span></span> <span data-ttu-id="69426-184"><xref:System.Diagnostics.Stopwatch.IsHighResolution> est `true` si le <xref:System.Diagnostics.Stopwatch> minuterie est basée sur un compteur de performance haute résolution.</span><span class="sxs-lookup"><span data-stu-id="69426-184"><xref:System.Diagnostics.Stopwatch.IsHighResolution> is `true` if the <xref:System.Diagnostics.Stopwatch> timer is based on a high-resolution performance counter.</span></span> <span data-ttu-id="69426-185">Sinon, <xref:System.Diagnostics.Stopwatch.IsHighResolution> est `false`, ce qui indique que le <xref:System.Diagnostics.Stopwatch> minuterie est basée sur l’horloge système.</span><span class="sxs-lookup"><span data-stu-id="69426-185">Otherwise, <xref:System.Diagnostics.Stopwatch.IsHighResolution> is `false`, which indicates that the <xref:System.Diagnostics.Stopwatch> timer is based on the system timer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69426-186">L’exemple suivant affiche la fréquence et la résolution d’un <xref:System.Diagnostics.Stopwatch> minuteur.</span><span class="sxs-lookup"><span data-stu-id="69426-186">The following example displays the frequency and resolution of a <xref:System.Diagnostics.Stopwatch> timer.</span></span> <span data-ttu-id="69426-187">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.Stopwatch> classe.</span><span class="sxs-lookup"><span data-stu-id="69426-187">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="System.Diagnostics.Stopwatch.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69426-188">Obtient une valeur indiquant si la minuterie <see cref="T:System.Diagnostics.Stopwatch" /> s'exécute.</span><span class="sxs-lookup"><span data-stu-id="69426-188">Gets a value indicating whether the <see cref="T:System.Diagnostics.Stopwatch" /> timer is running.</span></span></summary>
        <value><span data-ttu-id="69426-189"><see langword="true" /> si l'instance <see cref="T:System.Diagnostics.Stopwatch" /> est en cours d'exécution et en train de mesurer le temps écoulé pour un intervalle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69426-189"><see langword="true" /> if the <see cref="T:System.Diagnostics.Stopwatch" /> instance is currently running and measuring elapsed time for an interval; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-190">Un <xref:System.Diagnostics.Stopwatch> instance commence à s’exécuter avec un appel à <xref:System.Diagnostics.Stopwatch.Start%2A> ou <xref:System.Diagnostics.Stopwatch.StartNew%2A>.</span><span class="sxs-lookup"><span data-stu-id="69426-190">A <xref:System.Diagnostics.Stopwatch> instance begins running with a call to <xref:System.Diagnostics.Stopwatch.Start%2A> or <xref:System.Diagnostics.Stopwatch.StartNew%2A>.</span></span> <span data-ttu-id="69426-191">L’instance cesse de s’exécuter avec un appel à <xref:System.Diagnostics.Stopwatch.Stop%2A> ou <xref:System.Diagnostics.Stopwatch.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="69426-191">The instance stops running with a call to <xref:System.Diagnostics.Stopwatch.Stop%2A> or <xref:System.Diagnostics.Stopwatch.Reset%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="stopwatch.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69426-192">Arrête la mesure d'intervalle de temps et remet le temps écoulé à zéro.</span><span class="sxs-lookup"><span data-stu-id="69426-192">Stops time interval measurement and resets the elapsed time to zero.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-193">Un <xref:System.Diagnostics.Stopwatch> instance calcule et conserve le temps total passé sur plusieurs intervalles de temps, jusqu'à ce que l’instance est réinitialisé.</span><span class="sxs-lookup"><span data-stu-id="69426-193">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</span></span> <span data-ttu-id="69426-194">Utilisez <xref:System.Diagnostics.Stopwatch.Stop%2A> pour arrêter la mesure l’intervalle actuel et de conserver la valeur du temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-194">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop the current interval measurement and retain the cumulative elapsed time value.</span></span> <span data-ttu-id="69426-195">Utilisez <xref:System.Diagnostics.Stopwatch.Reset%2A> pour arrêter toute mesure d’intervalle en cours et effacez la valeur de temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-195">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> to stop any interval measurement in progress and clear the elapsed time value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="member this.Restart : unit -&gt; unit" Usage="stopwatch.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69426-196">Arrête la mesure d'intervalle de temps, réinitialise le temps écoulé sur zéro puis commence à le mesurer.</span><span class="sxs-lookup"><span data-stu-id="69426-196">Stops time interval measurement, resets the elapsed time to zero, and starts measuring elapsed time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-197">Un <xref:System.Diagnostics.Stopwatch> instance calcule et conserve le temps total passé sur plusieurs intervalles de temps, jusqu'à ce que l’instance est réinitialisée ou redémarrée.</span><span class="sxs-lookup"><span data-stu-id="69426-197">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset or restarted.</span></span> <span data-ttu-id="69426-198">Utilisez <xref:System.Diagnostics.Stopwatch.Stop%2A> pour arrêter la mesure l’intervalle actuel et de conserver la valeur du temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-198">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop the current interval measurement and retain the cumulative elapsed time value.</span></span> <span data-ttu-id="69426-199">Utilisez <xref:System.Diagnostics.Stopwatch.Reset%2A> pour arrêter toute mesure d’intervalle en cours et effacez la valeur de temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-199">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> to stop any interval measurement in progress and clear the elapsed time value.</span></span> <span data-ttu-id="69426-200">Utilisez <xref:System.Diagnostics.Stopwatch.Restart%2A> pour arrêter la mesure d’intervalle actuelle et démarrer une nouvelle mesure d’intervalle.</span><span class="sxs-lookup"><span data-stu-id="69426-200">Use <xref:System.Diagnostics.Stopwatch.Restart%2A> to stop current interval measurement and start a new interval measurement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="stopwatch.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69426-201">Démarre ou reprend la mesure du temps écoulé pour un intervalle.</span><span class="sxs-lookup"><span data-stu-id="69426-201">Starts, or resumes, measuring elapsed time for an interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-202">Dans un type <xref:System.Diagnostics.Stopwatch> scénario, vous appelez le <xref:System.Diagnostics.Stopwatch.Start%2A> (méthode), puis finira par appeler la <xref:System.Diagnostics.Stopwatch.Stop%2A> (méthode), puis vérifiez le temps écoulé à l’aide la <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="69426-202">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="69426-203">Une fois démarrée, un <xref:System.Diagnostics.Stopwatch> minuteur mesure l’intervalle actuel, en graduations de minuterie écoulées, jusqu'à ce que l’instance est arrêtée ou réinitialisée.</span><span class="sxs-lookup"><span data-stu-id="69426-203">Once started, a <xref:System.Diagnostics.Stopwatch> timer measures the current interval, in elapsed timer ticks, until the instance is stopped or reset.</span></span> <span data-ttu-id="69426-204">En commençant un <xref:System.Diagnostics.Stopwatch> qui est déjà en cours d’exécution ne pas modifier l’état de la minuterie ou réinitialiser les propriétés de temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-204">Starting a <xref:System.Diagnostics.Stopwatch> that is already running does not change the timer state or reset the elapsed time properties.</span></span>  
  
 <span data-ttu-id="69426-205">Quand un <xref:System.Diagnostics.Stopwatch> instance mesure plusieurs intervalles, la <xref:System.Diagnostics.Stopwatch.Start%2A> méthode reprend la mesure du temps à partir de la valeur de temps écoulé actuel.</span><span class="sxs-lookup"><span data-stu-id="69426-205">When a <xref:System.Diagnostics.Stopwatch> instance measures more than one interval, the <xref:System.Diagnostics.Stopwatch.Start%2A> method resumes measuring time from the current elapsed time value.</span></span> <span data-ttu-id="69426-206">Un <xref:System.Diagnostics.Stopwatch> instance calcule et conserve le temps total passé sur plusieurs intervalles de temps, jusqu'à ce que l’instance est réinitialisé.</span><span class="sxs-lookup"><span data-stu-id="69426-206">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</span></span> <span data-ttu-id="69426-207">Utilisez le <xref:System.Diagnostics.Stopwatch.Reset%2A> méthode avant d’appeler <xref:System.Diagnostics.Stopwatch.Start%2A> pour effacer le temps total passé dans une <xref:System.Diagnostics.Stopwatch> instance.</span><span class="sxs-lookup"><span data-stu-id="69426-207">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method before calling <xref:System.Diagnostics.Stopwatch.Start%2A> to clear the cumulative elapsed time in a <xref:System.Diagnostics.Stopwatch> instance.</span></span> <span data-ttu-id="69426-208">Utilisez le <xref:System.Diagnostics.Stopwatch.Restart%2A> méthode <xref:System.Diagnostics.Stopwatch.Reset%2A> et <xref:System.Diagnostics.Stopwatch.Start%2A> le <xref:System.Diagnostics.Stopwatch> avec une seule commande.</span><span class="sxs-lookup"><span data-stu-id="69426-208">Use the <xref:System.Diagnostics.Stopwatch.Restart%2A> method to <xref:System.Diagnostics.Stopwatch.Reset%2A> and <xref:System.Diagnostics.Stopwatch.Start%2A> the <xref:System.Diagnostics.Stopwatch> with a single command.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69426-209">L’exemple suivant montre comment utiliser le <xref:System.Diagnostics.Stopwatch.Start%2A> méthode pour démarrer une minuterie qui mesure la durée d’exécution d’une application.</span><span class="sxs-lookup"><span data-stu-id="69426-209">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Start%2A> method to start a timer that measures the execution time of an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Stopwatch StartNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Stopwatch StartNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.StartNew" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartNew () As Stopwatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Stopwatch ^ StartNew();" />
      <MemberSignature Language="F#" Value="static member StartNew : unit -&gt; System.Diagnostics.Stopwatch" Usage="System.Diagnostics.Stopwatch.StartNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Stopwatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69426-210">Initialise une nouvelle instance <see cref="T:System.Diagnostics.Stopwatch" />, affecte une valeur de zéro à la propriété de temps écoulé et commence à mesurer le temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-210">Initializes a new <see cref="T:System.Diagnostics.Stopwatch" /> instance, sets the elapsed time property to zero, and starts measuring elapsed time.</span></span></summary>
        <returns><span data-ttu-id="69426-211"><see cref="T:System.Diagnostics.Stopwatch" /> qui vient de commencer à mesurer le temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-211">A <see cref="T:System.Diagnostics.Stopwatch" /> that has just begun measuring elapsed time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-212">Cette méthode équivaut à appeler le <xref:System.Diagnostics.Stopwatch> constructeur, puis en appelant <xref:System.Diagnostics.Stopwatch.Start%2A> sur la nouvelle instance.</span><span class="sxs-lookup"><span data-stu-id="69426-212">This method is equivalent to calling the <xref:System.Diagnostics.Stopwatch> constructor and then calling <xref:System.Diagnostics.Stopwatch.Start%2A> on the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69426-213">L’exemple suivant utilise la <xref:System.Diagnostics.Stopwatch> classe pour mesurer les performances de quatre implémentations différentes pour l’analyse d’un entier à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="69426-213">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="69426-214">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.Stopwatch> classe.</span><span class="sxs-lookup"><span data-stu-id="69426-214">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="stopwatch.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69426-215">Cesse de mesurer le temps écoulé pour un intervalle.</span><span class="sxs-lookup"><span data-stu-id="69426-215">Stops measuring elapsed time for an interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69426-216">Dans un type <xref:System.Diagnostics.Stopwatch> scénario, vous appelez le <xref:System.Diagnostics.Stopwatch.Start%2A> (méthode), puis finira par appeler la <xref:System.Diagnostics.Stopwatch.Stop%2A> (méthode), puis vérifiez le temps écoulé à l’aide la <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="69426-216">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="69426-217">Le <xref:System.Diagnostics.Stopwatch.Stop%2A> méthode termine la mesure d’intervalle de temps actuelle.</span><span class="sxs-lookup"><span data-stu-id="69426-217">The <xref:System.Diagnostics.Stopwatch.Stop%2A> method ends the current time interval measurement.</span></span> <span data-ttu-id="69426-218">L’arrêt d’un <xref:System.Diagnostics.Stopwatch> qui est ne pas en cours d’exécution ne pas modifier l’état de la minuterie ou réinitialiser les propriétés de temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-218">Stopping a <xref:System.Diagnostics.Stopwatch> that is not running does not change the timer state or reset the elapsed time properties.</span></span>  
  
 <span data-ttu-id="69426-219">Quand un <xref:System.Diagnostics.Stopwatch> instance mesure plusieurs intervalles, la <xref:System.Diagnostics.Stopwatch.Stop%2A> méthode équivaut à suspendre la mesure de temps écoulé.</span><span class="sxs-lookup"><span data-stu-id="69426-219">When a <xref:System.Diagnostics.Stopwatch> instance measures more than one interval, the <xref:System.Diagnostics.Stopwatch.Stop%2A> method is equivalent to pausing the elapsed time measurement.</span></span> <span data-ttu-id="69426-220">Un appel ultérieur à <xref:System.Diagnostics.Stopwatch.Start%2A> reprend la mesure du temps à partir de la valeur de temps écoulé actuel.</span><span class="sxs-lookup"><span data-stu-id="69426-220">A subsequent call to <xref:System.Diagnostics.Stopwatch.Start%2A> resumes measuring time from the current elapsed time value.</span></span> <span data-ttu-id="69426-221">Utilisez le <xref:System.Diagnostics.Stopwatch.Reset%2A> méthode pour effacer le temps total passé dans une <xref:System.Diagnostics.Stopwatch> instance.</span><span class="sxs-lookup"><span data-stu-id="69426-221">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in a <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69426-222">L’exemple suivant montre comment utiliser le <xref:System.Diagnostics.Stopwatch.Stop%2A> méthode pour arrêter une minuterie qui mesure la durée d’exécution d’une application.</span><span class="sxs-lookup"><span data-stu-id="69426-222">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Stop%2A> method to stop a timer that measures the execution time of an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>