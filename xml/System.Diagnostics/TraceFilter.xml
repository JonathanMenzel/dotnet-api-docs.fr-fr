<Type Name="TraceFilter" FullName="System.Diagnostics.TraceFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="229beefa9804702b3269f698ec402819dd67dc85" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37662771" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TraceFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TraceFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TraceFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceFilter abstract" />
  <TypeSignature Language="F#" Value="type TraceFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0a991-101">Fournit la classe de base pour les implémentations du filtre de la trace.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a991-101">Provides the base class for trace filter implementations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a991-102">Filtres de trace peuvent être utilisés par les écouteurs de trace pour fournir une couche supplémentaire de filtrage au-delà de celles fournies par les commutateurs de trace.</span><span class="sxs-lookup"><span data-stu-id="0a991-102">Trace filters can be used by trace listeners to provide an extra layer of filtering beyond that provided by trace switches.</span></span> <span data-ttu-id="0a991-103">Vous trouverez le filtre de trace pour un écouteur de suivi dans l’écouteur <xref:System.Diagnostics.TraceListener.Filter%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0a991-103">The trace filter for a trace listener can be found in the listener's <xref:System.Diagnostics.TraceListener.Filter%2A> property.</span></span> <span data-ttu-id="0a991-104">Commutateurs de trace déterminent si une trace doit être envoyée aux écouteurs de suivi.</span><span class="sxs-lookup"><span data-stu-id="0a991-104">Trace switches determine if a trace is to be sent to the trace listeners.</span></span> <span data-ttu-id="0a991-105">Filtres de trace autorisent les écouteurs de trace individuels déterminer si la trace doit être écrite sur le support de sortie associé.</span><span class="sxs-lookup"><span data-stu-id="0a991-105">Trace filters allow the individual trace listeners to determine whether or not the trace is to be written to the associated output medium.</span></span> <span data-ttu-id="0a991-106">Par exemple, comme déterminé par chaque filtre de trace, une trace peut être écrite dans la console par une <xref:System.Diagnostics.ConsoleTraceListener>, mais pas dans le journal des événements par un <xref:System.Diagnostics.EventLogTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="0a991-106">For example, as determined by each trace filter, a trace may be written to the console by a <xref:System.Diagnostics.ConsoleTraceListener>, but not to the event log by a <xref:System.Diagnostics.EventLogTraceListener>.</span></span>  
  
 <span data-ttu-id="0a991-107">Les filtres qui héritent de la <xref:System.Diagnostics.TraceFilter> classe peut être utilisée par les écouteurs de trace qui héritent de la <xref:System.Diagnostics.TraceListener> classe pour effectuer le filtrage des événements suivis.</span><span class="sxs-lookup"><span data-stu-id="0a991-107">Filters that inherit from the <xref:System.Diagnostics.TraceFilter> class can be used by trace listeners that inherit from the <xref:System.Diagnostics.TraceListener> class to perform filtering of events being traced.</span></span> <span data-ttu-id="0a991-108"><xref:System.Diagnostics.TraceFilter> contient une méthode unique, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, qui prend les données d’événement et retourne un indicateur spécifiant si l’événement doit être suivi.</span><span class="sxs-lookup"><span data-stu-id="0a991-108"><xref:System.Diagnostics.TraceFilter> contains a single method, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, which takes event data and returns a flag indicating whether the event should be traced.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a991-109">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a991-109">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceFilter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldTrace">
      <MemberSignature Language="C#" Value="public abstract bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldTrace (cache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, formatOrMessage As String, args As Object(), data1 As Object, data As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldTrace(System::Diagnostics::TraceEventCache ^ cache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ formatOrMessage, cli::array &lt;System::Object ^&gt; ^ args, System::Object ^ data1, cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member ShouldTrace : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] * obj * obj[] -&gt; bool" Usage="traceFilter.ShouldTrace (cache, source, eventType, id, formatOrMessage, args, data1, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="formatOrMessage" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="cache">
          <span data-ttu-id="0a991-110">
            <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient des informations pour l'événement de trace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a991-110">The <see cref="T:System.Diagnostics.TraceEventCache" /> that contains information for the trace event.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="0a991-111">Nom de la source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a991-111">The name of the source.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="0a991-112">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a991-112">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="0a991-113">Numéro d'identification de trace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a991-113">A trace identifier number.</span>
          </span>
        </param>
        <param name="formatOrMessage">
          <span data-ttu-id="0a991-114">Format à utiliser pour écrire un tableau d’arguments spécifié par le paramètre <c>args</c>, ou un message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a991-114">Either the format to use for writing an array of arguments specified by the <c>args</c> parameter, or a message to write.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="0a991-115">Tableau d'objets d'argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a991-115">An array of argument objects.</span>
          </span>
        </param>
        <param name="data1">
          <span data-ttu-id="0a991-116">Objet des données de trace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a991-116">A trace data object.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="0a991-117">Tableau des objets de données de trace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a991-117">An array of trace data objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a991-118">En cas de substitution dans une classe dérivée, détermine si l'écouteur doit tracer l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a991-118">When overridden in a derived class, determines whether the trace listener should trace the event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a991-119">
            <see langword="true" /> pour tracer l'événement spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a991-119">
              <see langword="true" /> to trace the specified event; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a991-120">L’exemple de code suivant montre comment substituer la <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> méthode pour indiquer le traçage doit se produire lorsque le type d’événement de trace de l’événement est égal à <xref:System.Diagnostics.TraceEventType.Error?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0a991-120">The following code example shows how to override the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method to indicate tracing should occur when the trace event type of the event is equal to <xref:System.Diagnostics.TraceEventType.Error?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[System.Diagnostics.TraceFilter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.diagnostics.tracefilter/cpp/source.cpp#2)]
 [!code-csharp[System.Diagnostics.TraceFilter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.tracefilter/cs/source.cs#2)]
 [!code-vb[System.Diagnostics.TraceFilter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.tracefilter/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a991-121">
            <para>Les implémentations de cette méthode doivent retourner <see langword="true" /> si l’événement spécifié par les paramètres passés doit être suivi. Sinon, la méthode doit retourner <see langword="false" />. Par exemple, un filtre qui autorise uniquement les événements erreur à passer à l’écouteur doit inspecter le <paramref name="eventType" /> paramètre et retour <see langword="true" /> si le niveau de type d’événement trace est défini sur <see cref="F:System.Diagnostics.TraceEventType.Error" /> ou supérieure ; sinon, elle doit retourner <see langword="false" />.  Les implémentations de la méthode doivent être prête à gérer <see langword="null" /> dans les paramètres suivants : <paramref name="args" />, <paramref name="data1" />, <paramref name="data" />, <paramref name="formatOrMessage" />, et <paramref name="cache" />. Si la valeur du paramètre est <see langword="null" />, le paramètre ne fait pas partie de l’événement. Par exemple, si le <paramref name="args" /> paramètre est <see langword="null" />, cela signifie que l’événement n’a pas d’arguments. Si le <paramref name="data" /> paramètre est <see langword="null" />, il existe un ou aucun des objets de données. S’il existe un objet de données, il se trouve dans le <paramref name="data1" /> paramètre. La raison de la distinction entre un objet de données unique et un tableau d’objets de données concerne les performances. Il n’existe aucune raison de créer un tableau d’objets si seul un objet qui est tracé, comme c’est normalement le cas. Si le <paramref name="data" /> paramètre n’est pas <see langword="null" />, le <paramref name="data1" /> paramètre ne doit pas également être <see langword="null" />.  Il est garanti que la <paramref name="source" /> paramètre n’est pas <see langword="null" /> et pas une chaîne vide ( » »).  Les implémentations de la méthode peuvent éventuellement lever les exceptions suivantes :- <see cref="T:System.ArgumentNullException" /> si <paramref name="source" /> est <see langword="null" />.  - <see cref="T:System.ArgumentException" /> si <paramref name="eventType" /> ne fait pas partie de la <see cref="T:System.Diagnostics.TraceEventType" /> valeurs.  -Les exceptions non liées à l’implémentation de la méthode. Par exemple, un <see cref="T:System.Threading.ThreadAbortException" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a991-121">
              <para>Implementations of this method should return <see langword="true" /> if the event specified by the passed parameters should be traced. Otherwise the method should return <see langword="false" />. For example, a filter that allows only error events to pass through to the listener should inspect the <paramref name="eventType" /> parameter and return <see langword="true" /> if the trace event type level is set to <see cref="F:System.Diagnostics.TraceEventType.Error" /> or greater; otherwise, it should return <see langword="false" />.  Implementations of the method should be prepared to handle <see langword="null" /> in the following parameters: <paramref name="args" />, <paramref name="data1" />, <paramref name="data" />, <paramref name="formatOrMessage" />, and <paramref name="cache" />. If the parameter value is <see langword="null" />, the parameter is not part of the event. For example, if the <paramref name="args" /> parameter is <see langword="null" />, it means that the event does not have any arguments. If the <paramref name="data" /> parameter is <see langword="null" />, then there are either one or no data objects. If there is one data object, it will be found in the <paramref name="data1" /> parameter. The reason for the distinction between a single data object and an array of data objects is for performance. There is no reason to create an object array if only one object is traced, as is normally the case. If the <paramref name="data" /> parameter is not <see langword="null" />, the <paramref name="data1" /> parameter must also not be <see langword="null" />.  It is guaranteed that the <paramref name="source" /> parameter is not <see langword="null" /> and not an empty string ("").  Implementations of the method can optionally throw the following exceptions:  -   <see cref="T:System.ArgumentNullException" /> if <paramref name="source" /> is <see langword="null" />.  -   <see cref="T:System.ArgumentException" /> if <paramref name="eventType" /> is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> values.  -   Exceptions unrelated to the implementation of the method. For example, a <see cref="T:System.Threading.ThreadAbortException" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>