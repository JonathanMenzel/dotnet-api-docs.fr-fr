<Type Name="Trace" FullName="System.Diagnostics.Trace">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e42fd94386357117b180964fe8e0ea782e8fcab0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36674302" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Trace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Trace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Trace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Trace" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trace sealed" />
  <TypeSignature Language="F#" Value="type Trace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b974c-101">Fournit un ensemble de méthodes et de propriétés qui vous permettent de tracer l'exécution de votre code.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b974c-101">Provides a set of methods and properties that help you trace the execution of your code.</span>
      </span>
      <span data-ttu-id="b974c-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b974c-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-103">Vous pouvez utiliser les propriétés et méthodes de la <xref:System.Diagnostics.Trace> classe à la version des informations relatives aux builds.</span><span class="sxs-lookup"><span data-stu-id="b974c-103">You can use the properties and methods in the <xref:System.Diagnostics.Trace> class to instrument release builds.</span></span> <span data-ttu-id="b974c-104">Instrumentation vous permet d’analyser l’intégrité de votre application en cours d’exécution dans les paramètres de la vie réelle.</span><span class="sxs-lookup"><span data-stu-id="b974c-104">Instrumentation allows you to monitor the health of your application running in real-life settings.</span></span> <span data-ttu-id="b974c-105">Le traçage vous aide à isoler les problèmes et les résoudre sans porter atteinte à un système en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="b974c-105">Tracing helps you isolate problems and fix them without disturbing a running system.</span></span>  
  
 <span data-ttu-id="b974c-106">Cette classe fournit des méthodes pour afficher une <xref:System.Diagnostics.Trace.Assert%2A> boîte de dialogue et permet d’envoyer une assertion qui sera toujours <xref:System.Diagnostics.Trace.Fail%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-106">This class provides methods to display an <xref:System.Diagnostics.Trace.Assert%2A> dialog box, and to emit an assertion that will always <xref:System.Diagnostics.Trace.Fail%2A>.</span></span> <span data-ttu-id="b974c-107">Cette classe fournit des méthodes d’écriture avec les variations suivantes : <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, et <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-107">This class provides write methods in the following variations: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, and <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="b974c-108">Le <xref:System.Diagnostics.BooleanSwitch> et <xref:System.Diagnostics.TraceSwitch> classes fournissent des moyens de contrôler de manière dynamique la sortie de traçage.</span><span class="sxs-lookup"><span data-stu-id="b974c-108">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="b974c-109">Vous pouvez modifier les valeurs de ces commutateurs sans recompiler votre application.</span><span class="sxs-lookup"><span data-stu-id="b974c-109">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="b974c-110">Pour plus d’informations sur l’utilisation du fichier de configuration pour définir un commutateur, consultez la <xref:System.Diagnostics.Switch> classe et le [Comment : créer, initialiser et configurer des commutateurs de Trace](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="b974c-110">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="b974c-111">Vous pouvez personnaliser la cible de la sortie du traçage en ajoutant <xref:System.Diagnostics.TraceListener> instances à ou la suppression d’instances à partir de la <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="b974c-111">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="b974c-112">Le <xref:System.Diagnostics.Trace.Listeners%2A> collection est partagée par les deux le <xref:System.Diagnostics.Debug> et <xref:System.Diagnostics.Trace> classes ; Ajout d’un écouteur de suivi à chaque classe ajoute l’écouteur à la fois.</span><span class="sxs-lookup"><span data-stu-id="b974c-112">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="b974c-113">Par défaut, la sortie de trace est émise à l’aide de la <xref:System.Diagnostics.DefaultTraceListener> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-113">By default, trace output is emitted using the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-114">Ajout d’un écouteur de trace à le <xref:System.Diagnostics.Trace.Listeners%2A> collection peut provoquer une exception levée lors du traçage, si une ressource utilisée par l’écouteur de suivi n’est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="b974c-114">Adding a trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="b974c-115">Les conditions et l’exception levée dépendent de l’écouteur de suivi et ne peut pas être énumérés dans cette rubrique.</span><span class="sxs-lookup"><span data-stu-id="b974c-115">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="b974c-116">Il peut être utile de placer des appels à la <xref:System.Diagnostics.Trace> méthodes dans `try` / `catch` blocs pour détecter et gérer toutes les exceptions dans les écouteurs de la trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-116">It may be useful to place calls to the <xref:System.Diagnostics.Trace> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-117">Si vous ajoutez des écouteurs de traçage au code partiellement fiable, vous obtiendrez un <xref:System.Security.SecurityException> nécessite l’exception, car l’ajout d’écouteurs de traçage <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> autorisation.</span><span class="sxs-lookup"><span data-stu-id="b974c-117">If you add trace listeners to partially trusted code, you will get a <xref:System.Security.SecurityException> exception, because adding trace listeners requires <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission.</span></span> <span data-ttu-id="b974c-118">Pour tracer le code partiellement fiable qui est en cours d’exécution dans un bac à sable dans Visual Studio, n’ajoutez pas d’écouteurs de la trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-118">To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners.</span></span> <span data-ttu-id="b974c-119">Au lieu de cela, afficher le <xref:System.Diagnostics.Trace> et <xref:System.Diagnostics.Debug> des messages dans la **sortie** fenêtre.</span><span class="sxs-lookup"><span data-stu-id="b974c-119">Instead, view the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> messages in the **Output** window.</span></span>  
  
 <span data-ttu-id="b974c-120">Le <xref:System.Diagnostics.Trace> classe fournit des propriétés pour obtenir ou définir le niveau de <xref:System.Diagnostics.Trace.Indent%2A>, le <xref:System.Diagnostics.Trace.IndentSize%2A>et s’il faut <xref:System.Diagnostics.Trace.AutoFlush%2A> après chaque écriture.</span><span class="sxs-lookup"><span data-stu-id="b974c-120">The <xref:System.Diagnostics.Trace> class provides properties to get or set the level of <xref:System.Diagnostics.Trace.Indent%2A>, the <xref:System.Diagnostics.Trace.IndentSize%2A>, and whether to <xref:System.Diagnostics.Trace.AutoFlush%2A> after each write.</span></span>  
  
 <span data-ttu-id="b974c-121">Pour définir le <xref:System.Diagnostics.Trace.AutoFlush%2A> et <xref:System.Diagnostics.Trace.IndentSize%2A> pour <xref:System.Diagnostics.Trace>, vous pouvez modifier le fichier de configuration qui correspond au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="b974c-121">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b974c-122">Le fichier de configuration doit être mis en forme à l’exemple suivant :</span><span class="sxs-lookup"><span data-stu-id="b974c-122">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="b974c-123">Le <xref:System.Diagnostics.ConditionalAttribute> attribut est appliqué aux méthodes de <xref:System.Diagnostics.Trace>.</span><span class="sxs-lookup"><span data-stu-id="b974c-123">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Trace>.</span></span> <span data-ttu-id="b974c-124">Les compilateurs qui prennent en charge <xref:System.Diagnostics.ConditionalAttribute> ignorent les appels à ces méthodes, sauf si « TRACE » est défini comme un symbole de compilation conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="b974c-124">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "TRACE" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="b974c-125">Reportez-vous à la documentation d’un compilateur pour déterminer si <xref:System.Diagnostics.ConditionalAttribute> est pris en charge et la syntaxe permettant de définir un symbole de compilation conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="b974c-125">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-126">Dans les projets Visual Studio, par défaut, le symbole de compilation conditionnelle « DEBUG » est défini pour les versions debug, et le symbole « TRACE » est défini pour les deux de débogage et les versions release.</span><span class="sxs-lookup"><span data-stu-id="b974c-126">In Visual Studio projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="b974c-127">Pour plus d’informations sur la manière de désactiver ce comportement, consultez la documentation de Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="b974c-127">For information about how to disable this behavior, see the Visual Studio documentation.</span></span>  
  
 <span data-ttu-id="b974c-128">Pour définir le symbole de compilation conditionnelle « TRACE » en c#, ajoutez le `/d:TRACE` option à la ligne de commande du compilateur lorsque vous compilez votre code à l’aide d’une ligne de commande, ou ajoutez `#define TRACE` vers le haut de votre fichier.</span><span class="sxs-lookup"><span data-stu-id="b974c-128">To define the "TRACE" conditional compilation symbol in C#, add the `/d:TRACE` option to the compiler command line when you compile your code using a command line, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="b974c-129">Dans Visual Basic, ajoutez le `/d:TRACE=True` option à la ligne de commande du compilateur ou ajoutez `#Const TRACE=True` au fichier.</span><span class="sxs-lookup"><span data-stu-id="b974c-129">In Visual Basic, add the `/d:TRACE=True` option to the compiler command line or add `#Const TRACE=True` to the file.</span></span>  
  
 <span data-ttu-id="b974c-130"><xref:System.Diagnostics.ConditionalAttribute> n’est pas pris en charge par le compilateur C++.</span><span class="sxs-lookup"><span data-stu-id="b974c-130"><xref:System.Diagnostics.ConditionalAttribute> is not supported by the C++ compiler.</span></span> <span data-ttu-id="b974c-131">Pour fournir des fonctionnalités équivalentes, vous devez englober les appels aux méthodes de <xref:System.Diagnostics.Trace> dans un `#if defined(TRACE) ... #endif` bloquer, puis ajoutez le `/DTRACE` option à la ligne de commande du compilateur ou ajoutez `#define TRACE` au fichier.</span><span class="sxs-lookup"><span data-stu-id="b974c-131">To provide equivalent functionality, you must enclose calls to the methods of <xref:System.Diagnostics.Trace> in an `#if defined(TRACE) ... #endif` block, and add the `/DTRACE` option to the compiler command line or add `#define TRACE` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-132">L’exemple suivant utilise <xref:System.Diagnostics.Trace> pour indiquer le début et la fin de l’exécution d’un programme.</span><span class="sxs-lookup"><span data-stu-id="b974c-132">The following example uses <xref:System.Diagnostics.Trace> to indicate the beginning and the end of a program's execution.</span></span> <span data-ttu-id="b974c-133">L’exemple utilise également la <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> et <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> méthodes pour distinguer la sortie de traçage.</span><span class="sxs-lookup"><span data-stu-id="b974c-133">The example also uses the <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> methods to distinguish the tracing output.</span></span> <span data-ttu-id="b974c-134">Pour obtenir un exemple plus complet de l’utilisation de <xref:System.Diagnostics.Trace>, consultez [Comment : ajouter des instructions de traçage au Code d’Application](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span><span class="sxs-lookup"><span data-stu-id="b974c-134">For a more complete example of the use of <xref:System.Diagnostics.Trace>, see [How to: Add Trace Statements to Application Code](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span></span>  
  
 [!code-cpp[Classic Trace Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace Example/CS/source.cs#1)]
 [!code-vb[Classic Trace Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="b974c-135">Pour opérer avec du code non managé.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b974c-135">for operating with unmanaged code.</span>
      </span>
      <span data-ttu-id="b974c-136">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b974c-136">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
      </span>
      <span data-ttu-id="b974c-137">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="b974c-137">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
    <threadsafe>
      <span data-ttu-id="b974c-138">Ce type est thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b974c-138">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-139">Vérifie une condition ; si la condition est <see langword="false" />, affiche des messages et une boîte de message qui montre la pile des appels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-139">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="System.Diagnostics.Trace.Assert condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b974c-140">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-140">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b974c-141">Si la condition est <see langword="true" />, aucun message d’échec n’est envoyé et la boîte de message ne s’affiche pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-141">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-142">Vérifie une condition ; si la condition est <see langword="false" />, affiche une boîte de message qui montre la pile des appels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-142">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-143">Utilisez le <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> génère de méthode si vous souhaitez faire des assertions dans la mise en production.</span><span class="sxs-lookup"><span data-stu-id="b974c-143">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="b974c-144">Le <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> méthode fonctionne uniquement dans les versions debug.</span><span class="sxs-lookup"><span data-stu-id="b974c-144">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="b974c-145">Pour plus d’informations, consultez [Assertions dans du Code managé](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="b974c-145">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="b974c-146">En règle générale, le <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> méthode est utilisée pour identifier des erreurs de logique pendant le développement de programme.</span><span class="sxs-lookup"><span data-stu-id="b974c-146">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="b974c-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> évalue la condition.</span><span class="sxs-lookup"><span data-stu-id="b974c-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> evaluates the condition.</span></span> <span data-ttu-id="b974c-148">Si le résultat est `false`, il envoie un message d’échec pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="b974c-148">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="b974c-149">Vous pouvez personnaliser ce comportement en ajoutant un <xref:System.Diagnostics.TraceListener> , ou en le supprimant, le <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="b974c-149">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="b974c-150">Lorsque l’application s’exécute en mode interface utilisateur, il affiche un message qui montre la pile des appels avec des numéros de fichier et de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-150">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="b974c-151">La boîte de message contient trois boutons : **abandonner**, **réessayer**, et **ignorer**.</span><span class="sxs-lookup"><span data-stu-id="b974c-151">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="b974c-152">En cliquant sur le **abandonner** bouton met fin à l’application.</span><span class="sxs-lookup"><span data-stu-id="b974c-152">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="b974c-153">En cliquant sur **réessayer** vous renvoie vers le code dans le débogueur si votre application s’exécute dans un débogueur ou vous propose d’ouvrir un débogueur si ce n’est pas.</span><span class="sxs-lookup"><span data-stu-id="b974c-153">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="b974c-154">En cliquant sur **ignorer** se poursuit avec l’instruction suivante dans le code.</span><span class="sxs-lookup"><span data-stu-id="b974c-154">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-155">L’affichage de la boîte de message dépend de la présence de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-155">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b974c-156">Si le <xref:System.Diagnostics.DefaultTraceListener> ne figure pas dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection, la boîte de message n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="b974c-156">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="b974c-157">Le <xref:System.Diagnostics.DefaultTraceListener> peuvent être supprimés par le [ &lt;effacer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), le [ &lt;supprimer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou en appelant le <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sur le (méthode)<xref:System.Diagnostics.Trace.Listeners%2A> propriété (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="b974c-157">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="b974c-158">Vous pouvez modifier le comportement de la <xref:System.Diagnostics.DefaultTraceListener> dans le fichier de configuration qui correspond au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="b974c-158">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b974c-159">Dans ce fichier, vous pouvez activer et désactiver la boîte de message d’assertion ou définir le <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="b974c-159">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b974c-160">Le fichier de configuration doit être mis en forme comme suit :</span><span class="sxs-lookup"><span data-stu-id="b974c-160">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b974c-161">L’exemple suivant crée un index pour un tableau.</span><span class="sxs-lookup"><span data-stu-id="b974c-161">The following example creates an index for an array.</span></span> <span data-ttu-id="b974c-162">Une action est effectuée qui définit la valeur de l’index.</span><span class="sxs-lookup"><span data-stu-id="b974c-162">Then some action is performed that sets the value of the index.</span></span> <span data-ttu-id="b974c-163">Le code appelle ensuite <xref:System.Diagnostics.Trace.Assert%2A> pour vérifier l’index de valeur n’est valide.</span><span class="sxs-lookup"><span data-stu-id="b974c-163">Next the code calls <xref:System.Diagnostics.Trace.Assert%2A> to verify the index value is valid.</span></span> <span data-ttu-id="b974c-164">S’il n’est pas valide, le <xref:System.Diagnostics.Trace.Assert%2A> génère la pile des appels.</span><span class="sxs-lookup"><span data-stu-id="b974c-164">If it is not valid, the <xref:System.Diagnostics.Trace.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Trace.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b974c-165">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-165">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b974c-166">Si la condition a la valeur <see langword="true" />, le message spécifié n’est pas envoyé et la boîte de message ne s’affiche pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-166">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b974c-167">Message à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-167">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-168">Vérifie une condition ; si la condition a la valeur <see langword="false" />, affiche un message spécifié et une boîte de message qui montre la pile des appels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-168">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-169">Utilisez le <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> génère de méthode si vous souhaitez faire des assertions dans la mise en production.</span><span class="sxs-lookup"><span data-stu-id="b974c-169">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="b974c-170">Le <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> méthode fonctionne uniquement dans les versions debug.</span><span class="sxs-lookup"><span data-stu-id="b974c-170">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="b974c-171">Pour plus d’informations, consultez [Assertions dans du Code managé](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="b974c-171">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="b974c-172">En règle générale, le <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> méthode est utilisée pour identifier des erreurs de logique pendant le développement de programme.</span><span class="sxs-lookup"><span data-stu-id="b974c-172">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="b974c-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> évalue la condition.</span><span class="sxs-lookup"><span data-stu-id="b974c-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> evaluates the condition.</span></span> <span data-ttu-id="b974c-174">Si le résultat est `false`, il envoie le message de diagnostic spécifié à la <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="b974c-174">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="b974c-175">Vous pouvez personnaliser ce comportement en ajoutant un <xref:System.Diagnostics.TraceListener> , ou en le supprimant, le <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="b974c-175">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="b974c-176">Lorsque l’application s’exécute en mode interface utilisateur, il affiche un message qui montre la pile des appels avec des numéros de fichier et de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-176">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="b974c-177">La boîte de message contient trois boutons : **abandonner**, **réessayer**, et **ignorer**.</span><span class="sxs-lookup"><span data-stu-id="b974c-177">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="b974c-178">En cliquant sur le **abandonner** bouton met fin à l’application.</span><span class="sxs-lookup"><span data-stu-id="b974c-178">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="b974c-179">En cliquant sur **réessayer** vous renvoie vers le code dans le débogueur si votre application s’exécute dans un débogueur ou vous propose d’ouvrir un débogueur si ce n’est pas.</span><span class="sxs-lookup"><span data-stu-id="b974c-179">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="b974c-180">En cliquant sur **ignorer** se poursuit avec l’instruction suivante dans le code.</span><span class="sxs-lookup"><span data-stu-id="b974c-180">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-181">L’affichage de la boîte de message dépend de la présence de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-181">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b974c-182">Si le <xref:System.Diagnostics.DefaultTraceListener> ne figure pas dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection, la boîte de message n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="b974c-182">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="b974c-183">Le <xref:System.Diagnostics.DefaultTraceListener> peuvent être supprimés par le [ &lt;effacer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), le [ &lt;supprimer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou en appelant le <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sur le (méthode)<xref:System.Diagnostics.Trace.Listeners%2A> propriété (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="b974c-183">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="b974c-184">Vous pouvez modifier le comportement de la <xref:System.Diagnostics.DefaultTraceListener> dans le fichier de configuration qui correspond au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="b974c-184">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b974c-185">Dans ce fichier, vous pouvez activer et désactiver la boîte de message d’assertion ou définir le <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="b974c-185">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b974c-186">Le fichier de configuration doit être mis en forme comme suit :</span><span class="sxs-lookup"><span data-stu-id="b974c-186">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b974c-187">L’exemple suivant vérifie que le `type` paramètre n’est valide.</span><span class="sxs-lookup"><span data-stu-id="b974c-187">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="b974c-188">Si le `type` passé est `null`, le <xref:System.Diagnostics.Trace.Assert%2A> , un message s’affiche.</span><span class="sxs-lookup"><span data-stu-id="b974c-188">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b974c-189">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-189">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b974c-190">Si la condition est <see langword="true" />, les messages spécifiés ne sont pas envoyés et la boîte de message ne s’affiche pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-190">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b974c-191">Message à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-191">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="b974c-192">Message détaillé à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-192">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-193">Vérifie une condition ; si la condition est <see langword="false" />, affiche deux messages spécifiés et une boîte de message qui montre la pile des appels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-193">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-194">Utilisez le <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> génère de méthode si vous souhaitez faire des assertions dans la mise en production.</span><span class="sxs-lookup"><span data-stu-id="b974c-194">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="b974c-195">Le <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> méthode fonctionne uniquement dans les versions debug.</span><span class="sxs-lookup"><span data-stu-id="b974c-195">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="b974c-196">Pour plus d’informations, consultez [Assertions dans du Code managé](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="b974c-196">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="b974c-197">En règle générale, le <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> méthode est utilisée pour identifier des erreurs de logique pendant le développement de programme.</span><span class="sxs-lookup"><span data-stu-id="b974c-197">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="b974c-198"><xref:System.Diagnostics.Trace.Assert%2A> évalue la condition.</span><span class="sxs-lookup"><span data-stu-id="b974c-198"><xref:System.Diagnostics.Trace.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="b974c-199">Si le résultat est `false`, il envoie le message de diagnostic spécifié et le message détaillé à la <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="b974c-199">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="b974c-200">Vous pouvez personnaliser ce comportement en ajoutant un <xref:System.Diagnostics.TraceListener> , ou en le supprimant, le <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="b974c-200">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="b974c-201">Lorsque l’application s’exécute en mode interface utilisateur, il affiche un message qui montre la pile des appels avec des numéros de fichier et de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-201">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="b974c-202">La boîte de message contient trois boutons : **abandonner**, **réessayer**, et **ignorer**.</span><span class="sxs-lookup"><span data-stu-id="b974c-202">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="b974c-203">En cliquant sur le **abandonner** bouton met fin à l’application.</span><span class="sxs-lookup"><span data-stu-id="b974c-203">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="b974c-204">En cliquant sur **réessayer** vous renvoie vers le code dans le débogueur si votre application s’exécute dans un débogueur ou vous propose d’ouvrir un débogueur si ce n’est pas.</span><span class="sxs-lookup"><span data-stu-id="b974c-204">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="b974c-205">En cliquant sur **ignorer** se poursuit avec l’instruction suivante dans le code.</span><span class="sxs-lookup"><span data-stu-id="b974c-205">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-206">L’affichage de la boîte de message dépend de la présence de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-206">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b974c-207">Si le <xref:System.Diagnostics.DefaultTraceListener> ne figure pas dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection, la boîte de message n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="b974c-207">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="b974c-208">Le <xref:System.Diagnostics.DefaultTraceListener> peuvent être supprimés par le [ &lt;effacer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), le [ &lt;supprimer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou en appelant le <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sur le (méthode)<xref:System.Diagnostics.Trace.Listeners%2A> propriété (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="b974c-208">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="b974c-209">Vous pouvez modifier le comportement de la <xref:System.Diagnostics.DefaultTraceListener> dans le fichier de configuration qui correspond au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="b974c-209">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b974c-210">Dans ce fichier, vous pouvez activer et désactiver la boîte de message d’assertion ou définir le <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="b974c-210">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b974c-211">Le fichier de configuration doit être mis en forme comme suit :</span><span class="sxs-lookup"><span data-stu-id="b974c-211">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b974c-212">L’exemple suivant vérifie que le `type` paramètre n’est valide.</span><span class="sxs-lookup"><span data-stu-id="b974c-212">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="b974c-213">Si le `type` passé est `null`, le <xref:System.Diagnostics.Trace.Assert%2A> , un message s’affiche.</span><span class="sxs-lookup"><span data-stu-id="b974c-213">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Diagnostics.Trace.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-214">Obtient ou définit une valeur indiquant si <see cref="M:System.Diagnostics.Trace.Flush" /> doit être appelé sur <see cref="P:System.Diagnostics.Trace.Listeners" /> après chaque écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-214">Gets or sets whether <see cref="M:System.Diagnostics.Trace.Flush" /> should be called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b974c-215">
            <see langword="true" /> si <see cref="M:System.Diagnostics.Trace.Flush" /> est appelé sur <see cref="P:System.Diagnostics.Trace.Listeners" /> après chaque écriture ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-215">
              <see langword="true" /> if <see cref="M:System.Diagnostics.Trace.Flush" /> is called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-216">La valeur par défaut est `false`.</span><span class="sxs-lookup"><span data-stu-id="b974c-216">The default is `false`.</span></span>  
  
 <span data-ttu-id="b974c-217">Vider le flux n’effacera pas son encodeur sous-jacent sauf si vous appelez explicitement <xref:System.Diagnostics.Trace.Flush%2A> ou <xref:System.Diagnostics.Trace.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-217">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="b974c-218">Paramètre <xref:System.Diagnostics.Trace.AutoFlush%2A> à `true` signifie que les données sont supprimées de la mémoire tampon dans le flux, mais l’état de l’encodeur n’est pas vidé.</span><span class="sxs-lookup"><span data-stu-id="b974c-218">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="b974c-219">Cela permet à l’encodeur de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</span><span class="sxs-lookup"><span data-stu-id="b974c-219">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="b974c-220">Ce scénario affecte UTF8 et UTF7 où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</span><span class="sxs-lookup"><span data-stu-id="b974c-220">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="b974c-221">Pour définir le <xref:System.Diagnostics.Trace.AutoFlush%2A> et <xref:System.Diagnostics.Trace.IndentSize%2A> pour <xref:System.Diagnostics.Trace>, vous pouvez également modifier le fichier de configuration qui correspond au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="b974c-221">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b974c-222">Le fichier de configuration doit être mis en forme à l’exemple suivant :</span><span class="sxs-lookup"><span data-stu-id="b974c-222">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b974c-223">Pour opérer avec du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-223">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="b974c-224">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-224">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="b974c-225">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberSignature Language="F#" Value="static member Close : unit -&gt; unit" Usage="System.Diagnostics.Trace.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b974c-226">Vide la mémoire tampon de sortie, puis ferme <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-226">Flushes the output buffer, and then closes the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-227">Utilisez cette méthode lorsque la sortie va vers un fichier, telles que le <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-227">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-228">Vider le flux n’effacera pas son encodeur sous-jacent sauf si vous appelez explicitement <xref:System.Diagnostics.Trace.Flush%2A> ou <xref:System.Diagnostics.Trace.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-228">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="b974c-229">Paramètre <xref:System.Diagnostics.Trace.AutoFlush%2A> à `true` signifie que les données sont supprimées de la mémoire tampon dans le flux, mais l’état de l’encodeur n’est pas vidé.</span><span class="sxs-lookup"><span data-stu-id="b974c-229">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="b974c-230">Cela permet à l’encodeur de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</span><span class="sxs-lookup"><span data-stu-id="b974c-230">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="b974c-231">Ce scénario affecte UTF8 et UTF7 où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</span><span class="sxs-lookup"><span data-stu-id="b974c-231">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-232">L’exemple suivant crée un <xref:System.Diagnostics.TextWriterTraceListener> nommé `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="b974c-232">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="b974c-233">`myTextListener` utilise un <xref:System.IO.StreamWriter> appelé `myOutputWriter` à écrire dans un fichier nommé `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="b974c-233">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="b974c-234">L’exemple crée le fichier, le flux et TextWriter, écrit une ligne de texte dans le fichier, puis vide et ferme la sortie.</span><span class="sxs-lookup"><span data-stu-id="b974c-234">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b974c-235">Pour opérer avec du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-235">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="b974c-236">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-236">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="b974c-237">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationManager">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.CorrelationManager CorrelationManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.CorrelationManager CorrelationManager" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.CorrelationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrelationManager As CorrelationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::CorrelationManager ^ CorrelationManager { System::Diagnostics::CorrelationManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationManager : System.Diagnostics.CorrelationManager" Usage="System.Diagnostics.Trace.CorrelationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CorrelationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-238">Obtient le gestionnaire de corrélation pour le thread de ce suivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-238">Gets the correlation manager for the thread for this trace.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b974c-239">Objet <see cref="T:System.Diagnostics.CorrelationManager" /> associé au thread de ce suivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-239">The <see cref="T:System.Diagnostics.CorrelationManager" /> object associated with the thread for this trace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b974c-240">Il s’agit d’une propriété avancée que la plupart des applications ne doit pas avoir à utiliser.</span><span class="sxs-lookup"><span data-stu-id="b974c-240">This is an advanced property that most applications should not have occasion to use.</span></span>  
  
 <span data-ttu-id="b974c-241">La <xref:System.Diagnostics.CorrelationManager> classe fournit des méthodes utilisées pour stocker une identité d’opération logique dans un contexte lié par thread et baliser automatiquement chaque événement de trace généré par le thread dont l’identité est stockée.</span><span class="sxs-lookup"><span data-stu-id="b974c-241">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b974c-242">Pour opérer avec du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-242">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="b974c-243">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-243">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="b974c-244">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-244">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.CorrelationManager" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-245">Émet un message d'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-245">Emits an error message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Fail : string -&gt; unit" Usage="System.Diagnostics.Trace.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b974c-246">Message à émettre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-246">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-247">Émet le message d’erreur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-247">Emits the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-248">Le comportement par défaut pour l’écouteur de trace par défaut consiste à la sortie le `message` paramètre à une boîte de message lors de l’application s’exécute en mode interface utilisateur et vers le <xref:System.Diagnostics.TraceListener> instances dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="b974c-248">The default behavior for the default trace listener is to output the `message` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-249">L’affichage de la boîte de message est dépendante de la présence de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-249">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b974c-250">Si le <xref:System.Diagnostics.DefaultTraceListener> ne figure pas dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection, la boîte de message n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="b974c-250">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="b974c-251">Le <xref:System.Diagnostics.DefaultTraceListener> peuvent être supprimés par le [ &lt;effacer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), le [ &lt;supprimer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou en appelant le <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sur le (méthode)<xref:System.Diagnostics.Trace.Listeners%2A> propriété (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="b974c-251">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="b974c-252">Vous pouvez personnaliser ce comportement en ajoutant un <xref:System.Diagnostics.TraceListener> à, ou en supprimant le <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="b974c-252">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-253">L’exemple suivant utilise la <xref:System.Diagnostics.Trace.Fail%2A> méthode pour imprimer un message lors de la gestion des exceptions.</span><span class="sxs-lookup"><span data-stu-id="b974c-253">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b974c-254">Vous pouvez également utiliser le <xref:System.Diagnostics.Trace.Fail%2A> méthode dans une instruction switch.</span><span class="sxs-lookup"><span data-stu-id="b974c-254">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Fail : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b974c-255">Message à émettre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-255">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="b974c-256">Message détaillé à émettre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-256">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-257">Émet un message d’erreur et un message d’erreur détaillé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-257">Emits an error message, and a detailed error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-258">Le comportement par défaut est de l’écouteur de trace par défaut vers la sortie le `message` paramètre et le `detailedMessage` paramètre à une boîte de message lors de l’application s’exécute en mode interface utilisateur et vers le <xref:System.Diagnostics.TraceListener> instances dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection .</span><span class="sxs-lookup"><span data-stu-id="b974c-258">The default behavior is for the default trace listener to output the `message` parameter and the `detailedMessage` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-259">L’affichage de la boîte de message est dépendante de la présence de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-259">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b974c-260">Si le <xref:System.Diagnostics.DefaultTraceListener> ne figure pas dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection, la boîte de message n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="b974c-260">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="b974c-261">Le <xref:System.Diagnostics.DefaultTraceListener> peuvent être supprimés par le [ &lt;effacer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), le [ &lt;supprimer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou en appelant le <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sur le (méthode)<xref:System.Diagnostics.Trace.Listeners%2A> propriété (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="b974c-261">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="b974c-262">Vous pouvez personnaliser ce comportement en ajoutant un <xref:System.Diagnostics.TraceListener> à, ou en supprimant le <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="b974c-262">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-263">L’exemple suivant utilise la <xref:System.Diagnostics.Trace.Fail%2A> méthode pour imprimer un message lors de la gestion des exceptions.</span><span class="sxs-lookup"><span data-stu-id="b974c-263">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b974c-264">Vous pouvez également utiliser le <xref:System.Diagnostics.Trace.Fail%2A> méthode dans une instruction switch.</span><span class="sxs-lookup"><span data-stu-id="b974c-264">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Diagnostics.Trace.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b974c-265">Vide la mémoire tampon de sortie et entraîne l’écriture des données mises en mémoire dans <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-265">Flushes the output buffer, and causes buffered data to be written to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-266">Vider le flux n’effacera pas son encodeur sous-jacent sauf si vous appelez explicitement <xref:System.Diagnostics.Trace.Flush%2A> ou <xref:System.Diagnostics.Trace.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-266">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="b974c-267">Paramètre <xref:System.Diagnostics.Trace.AutoFlush%2A> à `true` signifie que les données sont supprimées de la mémoire tampon dans le flux, mais l’état de l’encodeur n’est pas vidé.</span><span class="sxs-lookup"><span data-stu-id="b974c-267">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="b974c-268">Cela permet à l’encodeur de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</span><span class="sxs-lookup"><span data-stu-id="b974c-268">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="b974c-269">Ce scénario affecte UTF8 et UTF7 où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</span><span class="sxs-lookup"><span data-stu-id="b974c-269">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-270">L’exemple suivant crée un <xref:System.Diagnostics.TextWriterTraceListener> nommé `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="b974c-270">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="b974c-271">`myTextListener` utilise un <xref:System.IO.StreamWriter> appelé `myOutputWriter` à écrire dans un fichier nommé `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="b974c-271">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="b974c-272">L’exemple crée le fichier, le flux et TextWriter, écrit une ligne de texte dans le fichier, puis vide et ferme la sortie.</span><span class="sxs-lookup"><span data-stu-id="b974c-272">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberSignature Language="F#" Value="static member Indent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Indent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b974c-273">Augmente le <see cref="P:System.Diagnostics.Trace.IndentLevel" /> actuel d’une unité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-273">Increases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b974c-274">L’exemple suivant incrémente et décrémente le niveau de retrait et envoie des messages de traçage.</span><span class="sxs-lookup"><span data-stu-id="b974c-274">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b974c-275">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="b974c-275">This example produces the following output:</span></span>  
  
```  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Unindent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.Trace.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-276">Obtient ou définit le niveau de retrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-276">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b974c-277">Niveau de retrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-277">The indent level.</span>
          </span>
          <span data-ttu-id="b974c-278">La valeur par défaut est zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-278">The default is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-279">Le <xref:System.Diagnostics.Trace.IndentLevel%2A> propriété représente le nombre de fois où le retrait de taille <xref:System.Diagnostics.Trace.IndentSize%2A> est appliqué.</span><span class="sxs-lookup"><span data-stu-id="b974c-279">The <xref:System.Diagnostics.Trace.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Trace.IndentSize%2A> is applied.</span></span> <span data-ttu-id="b974c-280">Cette propriété est stockée par thread/par demande.</span><span class="sxs-lookup"><span data-stu-id="b974c-280">This property is stored on per-thread/per-request basis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-281">L’exemple suivant incrémente et décrémente le niveau de retrait et envoie des messages de traçage.</span><span class="sxs-lookup"><span data-stu-id="b974c-281">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b974c-282">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="b974c-282">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.Trace.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-283">Obtient ou définit le nombre d'espaces dans un retrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-283">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b974c-284">Nombre d'espaces dans un retrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-284">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="b974c-285">La valeur par défaut est quatre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-285">The default is four.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-286">A <xref:System.Diagnostics.TextWriterTraceListener> interprète ce nombre comme des espaces.</span><span class="sxs-lookup"><span data-stu-id="b974c-286">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="b974c-287">Un <xref:System.Diagnostics.EventLogTraceListener> ignore cette valeur.</span><span class="sxs-lookup"><span data-stu-id="b974c-287">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="b974c-288">Cette propriété est stockée par thread/par demande.</span><span class="sxs-lookup"><span data-stu-id="b974c-288">This property is stored on per-thread/per-request basis.</span></span>  
  
 <span data-ttu-id="b974c-289">Pour définir le <xref:System.Diagnostics.Trace.AutoFlush%2A> et <xref:System.Diagnostics.Trace.IndentSize%2A> pour <xref:System.Diagnostics.Trace>, vous pouvez également modifier le fichier de configuration qui correspond au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="b974c-289">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b974c-290">Le fichier de configuration doit être mis en forme à l’exemple suivant :</span><span class="sxs-lookup"><span data-stu-id="b974c-290">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.Trace.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-291">Obtient la collection d’écouteurs qui surveillent la sortie de suivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-291">Gets the collection of listeners that is monitoring the trace output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b974c-292">
            <see cref="T:System.Diagnostics.TraceListenerCollection" /> qui représente une collection de types <see cref="T:System.Diagnostics.TraceListener" /> qui surveillent la sortie de suivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-292">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> that represents a collection of type <see cref="T:System.Diagnostics.TraceListener" /> monitoring the trace output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-293">Les écouteurs produisent une sortie mise en forme à partir de la sortie de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-293">The listeners produce formatted output from the trace output.</span></span> <span data-ttu-id="b974c-294">Par défaut, la collection contient une instance de la <xref:System.Diagnostics.DefaultTraceListener> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-294">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="b974c-295">Si vous souhaitez supprimer l’écouteur par défaut, appelez le <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> (méthode) et le passer à l’instance de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-295">If you want to remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b974c-296">Pour rediriger la sortie vers la fenêtre de console, ajoutez une instance de la <xref:System.Diagnostics.ConsoleTraceListener> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-296">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-297">Le <xref:System.Diagnostics.Trace.Listeners%2A> collection est partagée par les deux le <xref:System.Diagnostics.Debug> et <xref:System.Diagnostics.Trace> classes ; Ajout d’un écouteur de suivi à chaque classe ajoute l’écouteur à la fois.</span><span class="sxs-lookup"><span data-stu-id="b974c-297">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-298">L’exemple suivant crée un <xref:System.Diagnostics.ConsoleTraceListener> qui renvoie à l’écran de la console.</span><span class="sxs-lookup"><span data-stu-id="b974c-298">The following example creates a <xref:System.Diagnostics.ConsoleTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="b974c-299">Le code ajoute ensuite le nouvel écouteur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-299">The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Trace.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b974c-300">Pour opérer avec du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-300">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="b974c-301">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="b974c-302">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh();" />
      <MemberSignature Language="F#" Value="static member Refresh : unit -&gt; unit" Usage="System.Diagnostics.Trace.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b974c-303">Actualise les données de configuration de suivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-303">Refreshes the trace configuration data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-304">Configuration de la capture des données au démarrage de l’application de la trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-304">Trace configuration data is captured when the application is started.</span></span> <span data-ttu-id="b974c-305">Si les données de configuration sont modifiées après le démarrage de l’application, appelez le <xref:System.Diagnostics.Trace.Refresh%2A> pour mettre à jour les données de configuration de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-305">If the configuration data is changed after the application is started, call the <xref:System.Diagnostics.Trace.Refresh%2A> method to update the trace configuration data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceError">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-306">Écrit des informations d'erreur dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-306">Writes error information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceError : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b974c-307">Message d'information à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-307">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-308">Écrit un message d’erreur dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du message spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-308">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-309"><xref:System.Diagnostics.Trace.TraceError%2A> appelle le `TraceEvent` méthode pour chaque écouteur de trace, avec le type d’événement de trace <xref:System.Diagnostics.TraceEventType.Error>, en passant le message d’information comme chaîne de message.</span><span class="sxs-lookup"><span data-stu-id="b974c-309"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceError : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceError (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="b974c-310">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-310">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="b974c-311">
            <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-311">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-312">Écrit un message d’erreur dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du tableau d’objets et des informations de mise en forme spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-312">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-313"><xref:System.Diagnostics.Trace.TraceError%2A> appelle le `TraceEvent` méthodes dans les écouteurs de suivi avec le type d’événement de trace <xref:System.Diagnostics.TraceEventType.Error>, en passant le contenu du message en tant que tableau d’objets avec les informations de mise en forme.</span><span class="sxs-lookup"><span data-stu-id="b974c-313"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="b974c-314">Consultez le <xref:System.String.Format%2A> méthode pour plus d’informations sur la `format` et `args` paramètres.</span><span class="sxs-lookup"><span data-stu-id="b974c-314">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-315">Écrit un message d'information dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-315">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b974c-316">Message d'information à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-316">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-317">Écrit un message d'information dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l'aide du message spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-317">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> appelle le `TraceEvent` méthode pour chaque écouteur de trace, avec le type d’événement de trace <xref:System.Diagnostics.TraceEventType.Information>, en passant le message d’information comme chaîne de message.</span><span class="sxs-lookup"><span data-stu-id="b974c-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="b974c-319">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-319">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="b974c-320">
            <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-320">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-321">Écrit un message d’information dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du tableau d’objets et des informations de mise en forme spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-321">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> appelle le `TraceEvent` méthodes dans les écouteurs de suivi avec le type d’événement de trace <xref:System.Diagnostics.TraceEventType.Information>, en passant le contenu du message en tant que tableau d’objets avec les informations de mise en forme.</span><span class="sxs-lookup"><span data-stu-id="b974c-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="b974c-323">Consultez le <xref:System.String.Format%2A> méthode pour plus d’informations sur la `format` et `args` paramètres.</span><span class="sxs-lookup"><span data-stu-id="b974c-323">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceWarning">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-324">Écrit des informations d'avertissement dans les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-324">Writes warning information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b974c-325">Message d'information à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-325">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-326">Écrit un message d’avertissement dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du message spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-326">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> appelle le `TraceEvent` méthode pour chaque écouteur de trace avec le type d’événement de trace <xref:System.Diagnostics.TraceEventType.Warning>, en passant le message d’information comme chaîne de message.</span><span class="sxs-lookup"><span data-stu-id="b974c-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` method for each trace listener with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="b974c-328">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-328">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="b974c-329">
            <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-329">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-330">Écrit un message d’avertissement dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du tableau d’objets et des informations de mise en forme spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-330">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> appelle le `TraceEvent` méthodes dans les écouteurs de suivi avec le type d’événement de trace <xref:System.Diagnostics.TraceEventType.Warning>, en passant le contenu du message en tant que tableau d’objets avec les informations de mise en forme.</span><span class="sxs-lookup"><span data-stu-id="b974c-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="b974c-332">Consultez le <xref:System.String.Format%2A> méthode pour plus d’informations sur la `format` et `args` paramètres.</span><span class="sxs-lookup"><span data-stu-id="b974c-332">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberSignature Language="F#" Value="static member Unindent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Unindent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b974c-333">Réduit la propriété <see cref="P:System.Diagnostics.Trace.IndentLevel" /> actuelle d’une unité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-333">Decreases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b974c-334">L’exemple suivant incrémente et décrémente le niveau de retrait et envoie des messages de traçage.</span><span class="sxs-lookup"><span data-stu-id="b974c-334">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b974c-335">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="b974c-335">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Indent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="UseGlobalLock">
      <MemberSignature Language="C#" Value="public static bool UseGlobalLock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseGlobalLock" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.UseGlobalLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseGlobalLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseGlobalLock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseGlobalLock : bool with get, set" Usage="System.Diagnostics.Trace.UseGlobalLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-336">Obtient ou définit une valeur indiquant si le verrouillage global doit être utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-336">Gets or sets a value indicating whether the global lock should be used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b974c-337">
            <see langword="true" /> si le verrouillage global est utilisé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-337">
              <see langword="true" /> if the global lock is to be used; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b974c-338">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-338">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-339">Le verrouillage global est toujours utilisé si l’écouteur de suivi n’est pas thread-safe, quelle que soit la valeur de <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-339">The global lock is always used if the trace listener is not thread safe, regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="b974c-340">Le <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> propriété est utilisée pour déterminer si l’écouteur est thread-safe.</span><span class="sxs-lookup"><span data-stu-id="b974c-340">The <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> property is used to determine if the listener is thread safe.</span></span> <span data-ttu-id="b974c-341">Le verrouillage global n’est pas utilisé uniquement si la valeur de <xref:System.Diagnostics.Trace.UseGlobalLock%2A> est `false` et la valeur de <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> est `true`.</span><span class="sxs-lookup"><span data-stu-id="b974c-341">The global lock is not used only if the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false` and the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true`.</span></span> <span data-ttu-id="b974c-342">Le comportement par défaut est d’utiliser le verrouillage global.</span><span class="sxs-lookup"><span data-stu-id="b974c-342">The default behavior is to use the global lock.</span></span>  
  
 <span data-ttu-id="b974c-343">Pour définir le <xref:System.Diagnostics.Trace.UseGlobalLock%2A> pour <xref:System.Diagnostics.Trace>, vous pouvez également modifier le fichier de configuration qui correspond au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="b974c-343">To set the <xref:System.Diagnostics.Trace.UseGlobalLock%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b974c-344">Le fichier de configuration doit être mis en forme à l’exemple suivant :</span><span class="sxs-lookup"><span data-stu-id="b974c-344">The configuration file should be formatted like the following example:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace useGlobalLock="false" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b974c-345">Pour opérer avec du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-345">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="b974c-346">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-346">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="b974c-347">Énumération associée :  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-347">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-348">Écrit des informations sur le traçage vers les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-348">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Diagnostics.Trace.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b974c-349">
            <see cref="T:System.Object" /> dont le nom est envoyé au <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-349">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-350">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-350">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-351">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-351">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-352">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-352">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-353">ASP.NET fournit des fonctionnalités de traçage adaptées aux pages Web.</span><span class="sxs-lookup"><span data-stu-id="b974c-353">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="b974c-354">Pour écrire des messages de trace dans les pages ASP.NET, utilisez le <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="b974c-354">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b974c-355">Par défaut, dans le code associé à une page Web ASP.NET, l’instruction `Trace.Write("...")` est un appel à la <xref:System.Web.TraceContext.Write%2A> méthode de la <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="b974c-355">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b974c-356">Pour utiliser le <xref:System.Diagnostics.Trace?displayProperty=nameWithType> classe dans des pages Web, vous devez inclure l’espace de noms, par exemple, `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="b974c-356">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-357">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-357">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-358">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-358">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-359">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier nom de la `value` paramètre à la <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-359">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the `value` parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-360">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-360">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-361">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie un message sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-361">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="b974c-362">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-362">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Diagnostics.Trace.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b974c-363">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-363">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-364">Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-364">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-365">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-366">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-366">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-367">ASP.NET fournit des fonctionnalités de traçage adaptées aux pages Web.</span><span class="sxs-lookup"><span data-stu-id="b974c-367">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="b974c-368">Pour écrire des messages de trace dans les pages ASP.NET, utilisez le <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="b974c-368">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b974c-369">Par défaut, dans le code associé à une page Web ASP.NET, l’instruction `Trace.Write("...")` est un appel à la <xref:System.Web.TraceContext.Write%2A> méthode de la <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="b974c-369">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b974c-370">Pour utiliser le <xref:System.Diagnostics.Trace?displayProperty=nameWithType> classe dans des pages Web, vous devez inclure l’espace de noms, par exemple, `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="b974c-370">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-371">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-371">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-372">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-372">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-373">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-373">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-374">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-374">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-375">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-375">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b974c-376">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="b974c-376">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b974c-377">Un nom <see cref="T:System.Object" /> est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-377">An <see cref="T:System.Object" /> name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b974c-378">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-378">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-379">Écrit le nom de la catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs Trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-379">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-380">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-380">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-381">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="b974c-381">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b974c-382">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-382">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-383">ASP.NET fournit des fonctionnalités de traçage adaptées aux pages Web.</span><span class="sxs-lookup"><span data-stu-id="b974c-383">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="b974c-384">Pour écrire des messages de trace dans les pages ASP.NET, utilisez le <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="b974c-384">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b974c-385">Par défaut, dans le code associé à une page Web ASP.NET, l’instruction `Trace.Write("...")` est un appel à la <xref:System.Web.TraceContext.Write%2A> méthode de la <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="b974c-385">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b974c-386">Pour utiliser le <xref:System.Diagnostics.Trace?displayProperty=nameWithType> classe dans des pages Web, vous devez inclure l’espace de noms, par exemple, `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="b974c-386">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-387">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-387">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-388">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-388">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-389">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Verbose`, l’exemple renvoie le nom de la `myObject` et `category` à la <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-389">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-390">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-390">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-391">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Error` ou une version ultérieure, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-391">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b974c-392">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-392">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b974c-393">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-393">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b974c-394">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-394">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-395">Écrit un nom de catégorie et un message dans les écouteurs Trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-395">Writes a category name and a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-396">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-396">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-397">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="b974c-397">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b974c-398">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-398">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b974c-399">ASP.NET fournit des fonctionnalités de traçage adaptées aux pages Web.</span><span class="sxs-lookup"><span data-stu-id="b974c-399">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="b974c-400">Pour écrire des messages de trace dans les pages ASP.NET, utilisez le <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="b974c-400">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b974c-401">Par défaut, dans le code associé à une page Web ASP.NET, l’instruction `Trace.Write("...")` est un appel à la <xref:System.Web.TraceContext.Write%2A> méthode de la <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="b974c-401">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b974c-402">Pour utiliser le <xref:System.Diagnostics.Trace?displayProperty=nameWithType> classe dans des pages Web, vous devez inclure l’espace de noms, par exemple, `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="b974c-402">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-403">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-403">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-404">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-404">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-405">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Verbose`, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-405">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-406">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-406">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-407">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Error` ou une version ultérieure, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-407">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b974c-408">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-408">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-409">Écrit des informations sur le traçage vers les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition a la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-409">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b974c-410">
            <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-410">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b974c-411">
            <see cref="T:System.Object" /> dont le nom est envoyé au <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-411">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-412">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-412">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-413">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-413">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-414">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-414">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-415">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-415">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-416">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-416">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-417">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier nom du paramètre de valeur pour le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-417">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-418">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-418">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-419">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie un message sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-419">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="b974c-420">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-420">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="b974c-421">
            <para>Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> instructions. Les exemples suivants de deux fichiers de code envoient le même message de débogage. Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" /> vous n’appelez pas <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré. Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.  \*\* Le premier exemple \*\* ''' if(mySwitch.TraceError) Trace.Write (« un nombre = « + un nombre + « hors limites ») ; ''' \*\* Deuxième exemple \*\* ''' Trace.WriteIf (mySwitch.TraceError, « un nombre = « + un nombre + « hors limites ») ; \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-421">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b974c-422">
            <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-422">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b974c-423">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-423">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-424">Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-424">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-425">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-425">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-426">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-426">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-427">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-427">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-428">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-428">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-429">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-429">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-430">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-430">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-431">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-431">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b974c-432">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-432">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="b974c-433">
            <para>Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> instructions. Les exemples suivants de deux fichiers de code envoient le même message de débogage. Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" /> vous n’appelez pas <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré. Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.  \*\* Le premier exemple \*\* ''' if(mySwitch.TraceError) Trace.Write (« un nombre = « + un nombre + « hors limites ») ; ''' \*\* Deuxième exemple \*\* ''' Trace.WriteIf (mySwitch.TraceError, « un nombre = « + un nombre + « hors limites ») ; \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-433">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b974c-434">
            <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-434">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b974c-435">
            <see cref="T:System.Object" /> dont le nom est envoyé au <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-435">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b974c-436">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-436">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-437">Écrit un nom de catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />, si une condition a la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-437">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-438">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-438">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-439">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="b974c-439">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b974c-440">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-440">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-441">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-441">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-442">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-442">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-443">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Verbose`, l’exemple renvoie le nom de la `myObject` et `category` à la <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-443">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-444">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-444">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-445">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Error` ou une version ultérieure, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-445">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b974c-446">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-446">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="b974c-447">
            <para>Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> instructions. Les exemples suivants de deux fichiers de code envoient le même message de débogage. Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" /> vous n’appelez pas <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré. Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.  \*\* Le premier exemple \*\* ''' if(mySwitch.TraceError) Trace.Write (« un nombre = « + un nombre + « hors limites ») ; ''' \*\* Deuxième exemple \*\* ''' Trace.WriteIf (mySwitch.TraceError, « un nombre = « + un nombre + « hors limites ») ; \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-447">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b974c-448">
            <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-448">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b974c-449">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-449">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b974c-450">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-450">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-451">Écrit un nom de catégorie et un message dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-451">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-452">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-452">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-453">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="b974c-453">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b974c-454">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-454">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-455">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-455">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-456">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-456">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-457">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Verbose`, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-457">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-458">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-458">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-459">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Error` ou une version ultérieure, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-459">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b974c-460">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-460">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="b974c-461">
            <para>Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> instructions. Les exemples suivants de deux fichiers de code envoient le même message de débogage. Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" /> vous n’appelez pas <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré. Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.  \*\* Le premier exemple \*\* ''' if(mySwitch.TraceError) Trace.Write (« un nombre = « + un nombre + « hors limites ») ; ''' \*\* Deuxième exemple \*\* ''' Trace.WriteIf (mySwitch.TraceError, « un nombre = « + un nombre + « hors limites ») ; \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-461">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-462">Écrit des informations sur le traçage vers les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-462">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b974c-463">
            <see cref="T:System.Object" /> dont le nom est envoyé au <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-463">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-464">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-464">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-465">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-465">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-466">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-466">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-467">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-467">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-468">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-468">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-469">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-469">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-470">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-470">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-471">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le nom de l’objet sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-471">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="b974c-472">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-472">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b974c-473">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-473">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-474">Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-474">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-475">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-475">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-476">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-476">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-477">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-477">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-478">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-478">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-479">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-479">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-480">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-480">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-481">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-481">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b974c-482">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-482">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b974c-483">
            <see cref="T:System.Object" /> dont le nom est envoyé au <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-483">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b974c-484">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-484">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-485">Écrit le nom de la catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs Trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-485">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-486">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-486">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-487">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="b974c-487">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b974c-488">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-488">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-489">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-489">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-490">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-490">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-491">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-491">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-492">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-492">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-493">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-493">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b974c-494">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-494">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b974c-495">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-495">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b974c-496">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-496">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-497">Écrit un nom de catégorie et un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-497">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-498">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-498">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-499">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="b974c-499">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b974c-500">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-500">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-501">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-501">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-502">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-502">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-503">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-503">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-504">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-504">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-505">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur et le `category` sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-505">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="b974c-506">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-506">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b974c-507">Écrit des informations sur le traçage vers les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition a la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-507">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b974c-508">
            <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-508">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b974c-509">
            <see cref="T:System.Object" /> dont le nom est envoyé au <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-509">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-510">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-510">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-511">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-511">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-512">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-512">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-513">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-513">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-514">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-514">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-515">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-515">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-516">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-516">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-517">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le nom de l’objet sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-517">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="b974c-518">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-518">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="b974c-519">
            <para>Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> instructions. Les exemples suivants de deux fichiers de code envoient le même message de débogage. Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" /> vous n’appelez pas <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré. Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.  \*\* Le premier exemple \*\* ''' if(mySwitch.TraceError) Trace.WriteLine (« un nombre = « + un nombre + « hors limites ») ; ''' \*\* Deuxième exemple \*\* ''' Trace.WriteLineIf (mySwitch.TraceError, « un nombre = « + un nombre + « hors limites ») ; \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-519">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b974c-520">
            <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-520">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b974c-521">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-521">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-522">Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-522">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-523">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-523">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-524">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-524">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-525">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-525">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-526">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-526">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-527">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-527">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-528">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-528">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-529">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-529">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b974c-530">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-530">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="b974c-531">
            <para>Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> instructions. Les exemples suivants de deux fichiers de code envoient le même message de débogage. Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" /> vous n’appelez pas <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré. Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.  \*\* Le premier exemple \*\* ''' if(mySwitch.TraceError) Trace.WriteLine (« un nombre = « + un nombre + « hors limites ») ; ''' \*\* Deuxième exemple \*\* ''' Trace.WriteLineIf (mySwitch.TraceError, « un nombre = « + un nombre + « hors limites ») ; \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-531">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b974c-532">
            <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-532">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b974c-533">
            <see cref="T:System.Object" /> dont le nom est envoyé au <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-533">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b974c-534">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-534">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-535">Écrit un nom de catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />, si une condition a la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-535">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-536">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-536">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-537">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="b974c-537">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b974c-538">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-538">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-539">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-539">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-540">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-540">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-541">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-541">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-542">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-542">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-543">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-543">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b974c-544">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-544">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="b974c-545">
            <para>Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> instructions. Les exemples suivants de deux fichiers de code envoient le même message de débogage. Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" /> vous n’appelez pas <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré. Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.  \*\* Le premier exemple \*\* ''' if(mySwitch.TraceError) Trace.WriteLine (« un nombre = « + un nombre + « hors limites ») ; ''' \*\* Deuxième exemple \*\* ''' Trace.WriteLineIf (mySwitch.TraceError, « un nombre = « + un nombre + « hors limites ») ; \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-545">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b974c-546">
            <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-546">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b974c-547">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-547">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b974c-548">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-548">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b974c-549">Écrit un nom de catégorie et un message dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-549">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b974c-550">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b974c-550">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b974c-551">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="b974c-551">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b974c-552">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="b974c-552">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b974c-553">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="b974c-553">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b974c-554">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="b974c-554">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="b974c-555">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="b974c-555">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="b974c-556">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Trace.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="b974c-556">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b974c-557">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur et le `category` sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="b974c-557">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="b974c-558">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="b974c-558">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="b974c-559">
            <para>Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> instructions. Les exemples suivants de deux fichiers de code envoient le même message de débogage. Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" /> vous n’appelez pas <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré. Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.  \*\* Le premier exemple \*\* ''' if(mySwitch.TraceError) Trace.WriteLine (« un nombre = « + un nombre + « hors limites ») ; ''' \*\* Deuxième exemple \*\* ''' Trace.WriteLineIf (mySwitch.TraceError, « un nombre = « + un nombre + « hors limites ») ; \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b974c-559">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>