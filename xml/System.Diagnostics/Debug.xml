<Type Name="Debug" FullName="System.Diagnostics.Debug">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="331d1e20f17d7065dd117481b3458a017c3f98b4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Debug" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Debug extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Debug" />
  <TypeSignature Language="VB.NET" Value="Public Class Debug" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debug abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d563b-101">Fournit un ensemble de méthodes et propriétés qui permettent de déboguer votre code.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d563b-101">Provides a set of methods and properties that help debug your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-102">Si vous utilisez les méthodes dans la <xref:System.Diagnostics.Debug> classe pour imprimer les informations de débogage et vérifier votre logique avec des assertions, vous pouvez renforcer votre code sans affecter la taille de performances et le code de votre produit d’envoi.</span><span class="sxs-lookup"><span data-stu-id="d563b-102">If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</span></span>  
  
 <span data-ttu-id="d563b-103">Cette classe fournit des méthodes pour afficher une <xref:System.Diagnostics.Debug.Assert%2A> boîte de dialogue et permet d’envoyer une assertion qui échouera toujours.</span><span class="sxs-lookup"><span data-stu-id="d563b-103">This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail.</span></span> <span data-ttu-id="d563b-104">Cette classe fournit des méthodes d’écriture avec les variations suivantes : <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> et <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-104">This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="d563b-105">Le <xref:System.Diagnostics.BooleanSwitch> et <xref:System.Diagnostics.TraceSwitch> classes fournissent des moyens de contrôler de manière dynamique la sortie de traçage.</span><span class="sxs-lookup"><span data-stu-id="d563b-105">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="d563b-106">Vous pouvez modifier les valeurs de ces commutateurs sans recompiler votre application.</span><span class="sxs-lookup"><span data-stu-id="d563b-106">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="d563b-107">Pour plus d’informations sur l’utilisation du fichier de configuration pour définir un commutateur, consultez la <xref:System.Diagnostics.Switch> classe et le [commutateurs de Trace](~/docs/framework/debug-trace-profile/trace-switches.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="d563b-107">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="d563b-108">Vous pouvez personnaliser la cible de la sortie du traçage en ajoutant <xref:System.Diagnostics.TraceListener> instances à ou la suppression d’instances à partir de la <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-108">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="d563b-109">Le <xref:System.Diagnostics.Debug.Listeners%2A> collection est partagée par les deux le <xref:System.Diagnostics.Debug> et <xref:System.Diagnostics.Trace> classes ; Ajout d’un écouteur de suivi à chaque classe ajoute l’écouteur à la fois.</span><span class="sxs-lookup"><span data-stu-id="d563b-109">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="d563b-110">Par défaut, la <xref:System.Diagnostics.DefaultTraceListener> classe émet une sortie de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-110">By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d563b-111">Ajout d’un écouteur de trace à le <xref:System.Diagnostics.Debug.Listeners%2A> collection peut provoquer une exception levée lors du traçage, si une ressource utilisée par l’écouteur de suivi n’est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="d563b-111">Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="d563b-112">Les conditions et l’exception levée dépendent de l’écouteur de suivi et ne peut pas être énumérés dans cette rubrique.</span><span class="sxs-lookup"><span data-stu-id="d563b-112">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="d563b-113">Il peut être utile de placer des appels à la <xref:System.Diagnostics.Debug> méthodes dans `try` / `catch` blocs pour détecter et gérer toutes les exceptions dans les écouteurs de la trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-113">It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
 <span data-ttu-id="d563b-114">Vous pouvez modifier le niveau de mise en retrait à l’aide de la <xref:System.Diagnostics.Debug.Indent%2A> méthode ou le <xref:System.Diagnostics.Debug.IndentLevel%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d563b-114">You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property.</span></span> <span data-ttu-id="d563b-115">Pour modifier l’espacement de la mise en retrait, utilisez la <xref:System.Diagnostics.Debug.IndentSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d563b-115">To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property.</span></span> <span data-ttu-id="d563b-116">Vous pouvez spécifier s’il faut automatiquement vider le tampon de sortie après chaque écriture en définissant le <xref:System.Diagnostics.Debug.AutoFlush%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="d563b-116">You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="d563b-117">Pour définir le <xref:System.Diagnostics.Debug.AutoFlush%2A> et <xref:System.Diagnostics.Debug.IndentSize%2A> pour <xref:System.Diagnostics.Debug>, vous pouvez modifier le fichier de configuration correspondant au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="d563b-117">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="d563b-118">Le fichier de configuration doit être mis en forme comme illustré dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="d563b-118">The configuration file should be formatted as shown in the following example.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="d563b-119">Le <xref:System.Diagnostics.ConditionalAttribute> attribut est appliqué aux méthodes de <xref:System.Diagnostics.Debug>.</span><span class="sxs-lookup"><span data-stu-id="d563b-119">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>.</span></span> <span data-ttu-id="d563b-120">Les compilateurs qui prennent en charge <xref:System.Diagnostics.ConditionalAttribute> ignorent les appels à ces méthodes, sauf si « DEBUG » est défini comme un symbole de compilation conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="d563b-120">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="d563b-121">Reportez-vous à la documentation d’un compilateur pour déterminer si <xref:System.Diagnostics.ConditionalAttribute> est pris en charge et la syntaxe permettant de définir un symbole de compilation conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="d563b-121">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="d563b-122">Dans les projets Visual Studio c# et Visual Basic, par défaut, le symbole de compilation conditionnelle « DEBUG » est défini pour les versions debug, et le symbole « TRACE » est défini pour les deux de débogage et les versions release.</span><span class="sxs-lookup"><span data-stu-id="d563b-122">In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="d563b-123">Pour plus d’informations sur la manière de désactiver ce comportement, consultez la documentation de Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="d563b-123">For information about how to disable this behavior, see the Visual Studio documentation.</span></span> <span data-ttu-id="d563b-124">Pour plus d’informations sur le débogage conditionnel dans Visual C++, consultez [Debug, classe (C + c++ / CLI)](/cpp/dotnet/debug-class-cpp-cli).</span><span class="sxs-lookup"><span data-stu-id="d563b-124">For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](/cpp/dotnet/debug-class-cpp-cli).</span></span>
  
 <span data-ttu-id="d563b-125">Pour définir le symbole de compilation conditionnelle « DEBUG » en c#, ajoutez le `/d:DEBUG` option à la ligne de commande du compilateur lorsque vous compilez votre code à l’aide d’une ligne de commande, ou ajoutez `#define DEBUG` vers le haut de votre fichier.</span><span class="sxs-lookup"><span data-stu-id="d563b-125">To define the "DEBUG" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="d563b-126">Dans Visual Basic, ajoutez le `/d:DEBUG=True` option à la ligne de commande du compilateur ou ajoutez `#Const DEBUG=True` au fichier.</span><span class="sxs-lookup"><span data-stu-id="d563b-126">In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-127">L’exemple suivant utilise <xref:System.Diagnostics.Debug> pour indiquer le début et la fin de l’exécution d’un programme.</span><span class="sxs-lookup"><span data-stu-id="d563b-127">The following example uses <xref:System.Diagnostics.Debug> to indicate the beginning and end of a program's execution.</span></span> <span data-ttu-id="d563b-128">L’exemple utilise également <xref:System.Diagnostics.Debug.Indent%2A> et <xref:System.Diagnostics.Debug.Unindent%2A> pour distinguer la sortie de traçage.</span><span class="sxs-lookup"><span data-stu-id="d563b-128">The example also uses <xref:System.Diagnostics.Debug.Indent%2A> and <xref:System.Diagnostics.Debug.Unindent%2A> to distinguish the tracing output.</span></span>  
  
 [!code-cpp[Classic Debug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug Example/CS/source.cs#1)]
 [!code-vb[Classic Debug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="d563b-129">Ce type est thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d563b-129">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d563b-130">Vérifie une condition ; si la condition est <see langword="false" />, affiche des messages et une boîte de message qui montre la pile des appels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-130">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="d563b-131">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-131">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="d563b-132">Si la condition est <see langword="true" />, aucun message d’échec n’est envoyé et la boîte de message ne s’affiche pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-132">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-133">Vérifie une condition ; si la condition est <see langword="false" />, affiche une boîte de message qui montre la pile des appels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-133">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-134">Par défaut, le <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> méthode fonctionne uniquement dans les versions debug.</span><span class="sxs-lookup"><span data-stu-id="d563b-134">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="d563b-135">Utilisez le <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> génère de méthode si vous souhaitez faire des assertions dans la mise en production.</span><span class="sxs-lookup"><span data-stu-id="d563b-135">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="d563b-136">Pour plus d’informations, consultez [Assertions dans du Code managé](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="d563b-136">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d563b-137">Le `Assert` méthodes ne sont pas disponibles pour [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] applications.</span><span class="sxs-lookup"><span data-stu-id="d563b-137">The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps.</span></span>  
  
 <span data-ttu-id="d563b-138">En règle générale, le <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> méthode est utilisée pour identifier des erreurs de logique pendant le développement de programme.</span><span class="sxs-lookup"><span data-stu-id="d563b-138">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="d563b-139"><xref:System.Diagnostics.Debug.Assert%2A> évalue la condition.</span><span class="sxs-lookup"><span data-stu-id="d563b-139"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="d563b-140">Si le résultat est `false`, il envoie un message d’échec pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-140">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="d563b-141">Vous pouvez personnaliser ce comportement en ajoutant un <xref:System.Diagnostics.TraceListener> , ou en le supprimant, le <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-141">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="d563b-142">Lorsque l’application s’exécute en mode d’interface utilisateur, il affiche un message qui montre la pile des appels avec des numéros de fichier et de ligne.</span><span class="sxs-lookup"><span data-stu-id="d563b-142">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="d563b-143">La boîte de message contient trois boutons : **abandonner**, **réessayer**, et **ignorer**.</span><span class="sxs-lookup"><span data-stu-id="d563b-143">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="d563b-144">En cliquant sur le **abandonner** bouton met fin à l’application.</span><span class="sxs-lookup"><span data-stu-id="d563b-144">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="d563b-145">En cliquant sur **réessayer** vous renvoie vers le code dans le débogueur si votre application s’exécute dans un débogueur ou vous propose d’ouvrir un débogueur si ce n’est pas.</span><span class="sxs-lookup"><span data-stu-id="d563b-145">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="d563b-146">En cliquant sur **ignorer** se poursuit avec l’instruction suivante dans le code.</span><span class="sxs-lookup"><span data-stu-id="d563b-146">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]<span data-ttu-id="d563b-147"> les applications ne gèrent pas les boîtes de dialogue modales, afin qu’ils comportent de la même en mode d’interface utilisateur et en mode interface utilisateur non.</span><span class="sxs-lookup"><span data-stu-id="d563b-147"> apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</span></span> <span data-ttu-id="d563b-148">Le message est écrit dans les écouteurs de la trace active en mode débogage, ou aucun message n’est écrit en mode release.</span><span class="sxs-lookup"><span data-stu-id="d563b-148">The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d563b-149">L’affichage de la boîte de message dépend de la présence de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-149">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="d563b-150">Si le <xref:System.Diagnostics.DefaultTraceListener> ne figure pas dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection, la boîte de message n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="d563b-150">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="d563b-151">Le <xref:System.Diagnostics.DefaultTraceListener> peuvent être supprimés par le [ &lt;effacer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), le [ &lt;supprimer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou en appelant le <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sur le (méthode)<xref:System.Diagnostics.Trace.Listeners%2A> propriété (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="d563b-151">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="d563b-152">Vous pouvez modifier le comportement de la <xref:System.Diagnostics.DefaultTraceListener> dans le fichier de configuration qui correspond au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="d563b-152">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="d563b-153">Dans ce fichier, vous pouvez activer et désactiver la boîte de message d’assertion ou définir le <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="d563b-153">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d563b-154">Le fichier de configuration doit être mis en forme comme suit :</span><span class="sxs-lookup"><span data-stu-id="d563b-154">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d563b-155">L’exemple suivant crée un index pour un tableau, effectue une action pour définir la valeur de l’index, puis appelle <xref:System.Diagnostics.Debug.Assert%2A> pour confirmer que la valeur d’index est valide.</span><span class="sxs-lookup"><span data-stu-id="d563b-155">The following example creates an index for an array, performs some action to set the value of the index, and then calls <xref:System.Diagnostics.Debug.Assert%2A> to confirm that the index value is valid.</span></span> <span data-ttu-id="d563b-156">S’il n’est pas valide, <xref:System.Diagnostics.Debug.Assert%2A> génère la pile des appels.</span><span class="sxs-lookup"><span data-stu-id="d563b-156">If it is not valid, <xref:System.Diagnostics.Debug.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Debug.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="d563b-157">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-157">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="d563b-158">Si la condition a la valeur <see langword="true" />, le message spécifié n’est pas envoyé et la boîte de message ne s’affiche pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-158">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="d563b-159">Message à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-159">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-160">Vérifie une condition ; si la condition a la valeur <see langword="false" />, affiche un message spécifié et une boîte de message qui montre la pile des appels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-160">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-161">Par défaut, le <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> méthode fonctionne uniquement dans les versions debug.</span><span class="sxs-lookup"><span data-stu-id="d563b-161">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="d563b-162">Utilisez le <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> génère de méthode si vous souhaitez faire des assertions dans la mise en production.</span><span class="sxs-lookup"><span data-stu-id="d563b-162">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="d563b-163">Pour plus d’informations, consultez [Assertions dans du Code managé](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="d563b-163">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="d563b-164">En règle générale, le <xref:System.Diagnostics.Debug.Assert%2A> méthode est utilisée pour identifier des erreurs de logique pendant le développement de programme.</span><span class="sxs-lookup"><span data-stu-id="d563b-164">Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="d563b-165"><xref:System.Diagnostics.Debug.Assert%2A> évalue la condition.</span><span class="sxs-lookup"><span data-stu-id="d563b-165"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="d563b-166">Si le résultat est `false`, il envoie le message de diagnostic spécifié à la <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-166">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="d563b-167">Vous pouvez personnaliser ce comportement en ajoutant un <xref:System.Diagnostics.TraceListener> , ou en le supprimant, le <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-167">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="d563b-168">Lorsque l’application s’exécute en mode d’interface utilisateur, il affiche un message qui montre la pile des appels avec des numéros de fichier et de ligne.</span><span class="sxs-lookup"><span data-stu-id="d563b-168">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="d563b-169">La boîte de message contient trois boutons : **abandonner**, **réessayer**, et **ignorer**.</span><span class="sxs-lookup"><span data-stu-id="d563b-169">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="d563b-170">En cliquant sur le **abandonner** bouton met fin à l’application.</span><span class="sxs-lookup"><span data-stu-id="d563b-170">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="d563b-171">En cliquant sur **réessayer** vous renvoie vers le code dans le débogueur si votre application s’exécute dans un débogueur ou vous propose d’ouvrir un débogueur si ce n’est pas.</span><span class="sxs-lookup"><span data-stu-id="d563b-171">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="d563b-172">En cliquant sur **ignorer** se poursuit avec l’instruction suivante dans le code.</span><span class="sxs-lookup"><span data-stu-id="d563b-172">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d563b-173">L’affichage de la boîte de message dépend de la présence de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-173">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="d563b-174">Si le <xref:System.Diagnostics.DefaultTraceListener> ne figure pas dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection, la boîte de message n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="d563b-174">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="d563b-175">Le <xref:System.Diagnostics.DefaultTraceListener> peuvent être supprimés par le [ &lt;effacer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), le [ &lt;supprimer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou en appelant le <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sur le (méthode)<xref:System.Diagnostics.Trace.Listeners%2A> propriété (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="d563b-175">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="d563b-176">Vous pouvez modifier le comportement de la <xref:System.Diagnostics.DefaultTraceListener> dans le fichier de configuration qui correspond au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="d563b-176">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="d563b-177">Dans ce fichier, vous pouvez activer et désactiver la boîte de message d’assertion ou définir le <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="d563b-177">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d563b-178">Le fichier de configuration doit être mis en forme comme suit :</span><span class="sxs-lookup"><span data-stu-id="d563b-178">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d563b-179">L’exemple suivant vérifie si le `type` paramètre n’est valide.</span><span class="sxs-lookup"><span data-stu-id="d563b-179">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="d563b-180">Si `type` est `null`, <xref:System.Diagnostics.Trace.Assert%2A> , un message s’affiche.</span><span class="sxs-lookup"><span data-stu-id="d563b-180">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Debug.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="d563b-181">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-181">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="d563b-182">Si la condition est <see langword="true" />, les messages spécifiés ne sont pas envoyés et la boîte de message ne s’affiche pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-182">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="d563b-183">Message à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-183">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="d563b-184">Message détaillé à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-184">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-185">Vérifie une condition ; si la condition est <see langword="false" />, affiche deux messages spécifiés et une boîte de message qui montre la pile des appels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-185">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-186">Par défaut, le <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> méthode fonctionne uniquement dans les versions debug.</span><span class="sxs-lookup"><span data-stu-id="d563b-186">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="d563b-187">Utilisez le <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> génère de méthode si vous souhaitez faire des assertions dans la mise en production.</span><span class="sxs-lookup"><span data-stu-id="d563b-187">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="d563b-188">Pour plus d’informations, consultez [Assertions dans du Code managé](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="d563b-188">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="d563b-189">En règle générale, le <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> méthode est utilisée pour identifier des erreurs de logique pendant le développement de programme.</span><span class="sxs-lookup"><span data-stu-id="d563b-189">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="d563b-190"><xref:System.Diagnostics.Debug.Assert%2A> évalue la condition.</span><span class="sxs-lookup"><span data-stu-id="d563b-190"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="d563b-191">Si le résultat est `false`, il envoie le message de diagnostic spécifié et le message détaillé à la <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-191">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="d563b-192">Vous pouvez personnaliser ce comportement en ajoutant un <xref:System.Diagnostics.TraceListener> , ou en le supprimant, le <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-192">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="d563b-193">Lorsque l’application s’exécute en mode d’interface utilisateur, il affiche un message qui montre la pile des appels avec des numéros de fichier et de ligne.</span><span class="sxs-lookup"><span data-stu-id="d563b-193">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="d563b-194">La boîte de message contient trois boutons : **abandonner**, **réessayer**, et **ignorer**.</span><span class="sxs-lookup"><span data-stu-id="d563b-194">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="d563b-195">En cliquant sur le **abandonner** bouton met fin à l’application.</span><span class="sxs-lookup"><span data-stu-id="d563b-195">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="d563b-196">En cliquant sur **réessayer** vous renvoie vers le code dans le débogueur si votre application s’exécute dans un débogueur ou vous propose d’ouvrir un débogueur si ce n’est pas.</span><span class="sxs-lookup"><span data-stu-id="d563b-196">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="d563b-197">En cliquant sur **ignorer** se poursuit avec l’instruction suivante dans le code.</span><span class="sxs-lookup"><span data-stu-id="d563b-197">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d563b-198">L’affichage de la boîte de message dépend de la présence de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-198">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="d563b-199">Si le <xref:System.Diagnostics.DefaultTraceListener> ne figure pas dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection, la boîte de message n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="d563b-199">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="d563b-200">Le <xref:System.Diagnostics.DefaultTraceListener> peuvent être supprimés par le [ &lt;effacer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), le [ &lt;supprimer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou en appelant le <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sur le (méthode)<xref:System.Diagnostics.Trace.Listeners%2A> propriété (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="d563b-200">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="d563b-201">Vous pouvez modifier le comportement de la <xref:System.Diagnostics.DefaultTraceListener> dans le fichier de configuration qui correspond au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="d563b-201">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="d563b-202">Dans ce fichier, vous pouvez activer et désactiver la boîte de message d’assertion ou définir le <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="d563b-202">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d563b-203">Le fichier de configuration doit être mis en forme comme suit :</span><span class="sxs-lookup"><span data-stu-id="d563b-203">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d563b-204">L’exemple suivant vérifie si le `type` paramètre n’est valide.</span><span class="sxs-lookup"><span data-stu-id="d563b-204">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="d563b-205">Si `type` est `null`, <xref:System.Diagnostics.Trace.Assert%2A> affiche deux messages.</span><span class="sxs-lookup"><span data-stu-id="d563b-205">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs two messages.</span></span>  
  
 [!code-cpp[Classic Debug.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessageFormat, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessageFormat, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessageFormat As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessageFormat, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessageFormat" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="d563b-206">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-206">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="d563b-207">Si la condition est <see langword="true" />, les messages spécifiés ne sont pas envoyés et la boîte de message ne s’affiche pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-207">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="d563b-208">Message à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-208">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessageFormat">
          <span data-ttu-id="d563b-209">Chaîne de format composite à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-209">The composite format string to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
          <span data-ttu-id="d563b-210">Ce message contient du texte avec aucun ou plusieurs éléments de mise en forme qui correspondent à des objets dans le tableau <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-210">This message contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="d563b-211">Tableau d'objets contenant aucun ou plusieurs objets à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-211">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-212">Vérifie une condition ; si la condition est <see langword="false" />, affiche deux messages (simples et mis en forme) et une boîte de message qui mentionne la pile des appels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-212">Checks for a condition; if the condition is <see langword="false" />, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-213">Cette méthode utilise du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="d563b-213">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="d563b-214">La chaîne résultante est envoyée à la <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-214">The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="d563b-215">Par défaut, le <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> méthode fonctionne uniquement dans les versions debug.</span><span class="sxs-lookup"><span data-stu-id="d563b-215">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="d563b-216">Utilisez le <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> génère de méthode si vous souhaitez faire des assertions dans la mise en production.</span><span class="sxs-lookup"><span data-stu-id="d563b-216">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="d563b-217">Pour plus d’informations, consultez [Assertions dans du Code managé](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="d563b-217">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="d563b-218">En règle générale, le <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> méthode est utilisée pour identifier des erreurs de logique pendant le développement de programme.</span><span class="sxs-lookup"><span data-stu-id="d563b-218">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="d563b-219"><xref:System.Diagnostics.Debug.Assert%2A> évalue la condition.</span><span class="sxs-lookup"><span data-stu-id="d563b-219"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="d563b-220">Si le résultat est `false`, le <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> méthode est appelée et la `detailMessageFormat` chaîne et `args` tableau sont passés comme paramètres.</span><span class="sxs-lookup"><span data-stu-id="d563b-220">If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters.</span></span> <span data-ttu-id="d563b-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> envoie ensuite le message texte spécifié et le message de texte mis en forme à le <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="d563b-222">Vous pouvez personnaliser ce comportement en ajoutant un <xref:System.Diagnostics.TraceListener> , ou en le supprimant, le <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-222">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="d563b-223">Lorsque l’application s’exécute en mode d’interface utilisateur, il affiche un message qui montre la pile des appels avec des numéros de fichier et de ligne.</span><span class="sxs-lookup"><span data-stu-id="d563b-223">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="d563b-224">La boîte de message contient trois boutons : **abandonner**, **réessayer**, et **ignorer**.</span><span class="sxs-lookup"><span data-stu-id="d563b-224">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="d563b-225">En cliquant sur le **abandonner** bouton met fin à l’application.</span><span class="sxs-lookup"><span data-stu-id="d563b-225">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="d563b-226">En cliquant sur **réessayer** vous renvoie vers le code dans le débogueur si votre application s’exécute dans un débogueur ou vous propose d’ouvrir un débogueur si ce n’est pas.</span><span class="sxs-lookup"><span data-stu-id="d563b-226">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="d563b-227">En cliquant sur **ignorer** se poursuit avec l’instruction suivante dans le code.</span><span class="sxs-lookup"><span data-stu-id="d563b-227">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d563b-228">L’affichage de la boîte de message est dépendante de la présence de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-228">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="d563b-229">Si le <xref:System.Diagnostics.DefaultTraceListener> ne figure pas dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection, la boîte de message n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="d563b-229">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="d563b-230">Le <xref:System.Diagnostics.DefaultTraceListener> peuvent être supprimés par le [ &lt;effacer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), le [ &lt;supprimer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou en appelant le <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sur le (méthode)<xref:System.Diagnostics.Trace.Listeners%2A> propriété (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="d563b-230">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="d563b-231">Vous pouvez modifier le comportement de la <xref:System.Diagnostics.DefaultTraceListener> dans le fichier de configuration qui correspond au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="d563b-231">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="d563b-232">Dans ce fichier, vous pouvez activer et désactiver la boîte de message d’assertion ou définir le <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="d563b-232">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d563b-233">Le fichier de configuration doit être mis en forme comme suit :</span><span class="sxs-lookup"><span data-stu-id="d563b-233">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d563b-234">Obtient ou définit une valeur permettant de savoir si <see cref="M:System.Diagnostics.Debug.Flush" /> doit être appelé sur les <see cref="P:System.Diagnostics.Debug.Listeners" /> après chaque écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-234">Gets or sets a value indicating whether <see cref="M:System.Diagnostics.Debug.Flush" /> should be called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d563b-235">
            <see langword="true" /> si <see cref="M:System.Diagnostics.Debug.Flush" /> est appelé sur <see cref="P:System.Diagnostics.Debug.Listeners" /> après chaque écriture ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-235">
              <see langword="true" /> if <see cref="M:System.Diagnostics.Debug.Flush" /> is called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-236">La valeur par défaut est `false`.</span><span class="sxs-lookup"><span data-stu-id="d563b-236">The default is `false`.</span></span>  
  
 <span data-ttu-id="d563b-237">Vider le flux n’effacera pas son encodeur sous-jacent sauf si vous appelez explicitement <xref:System.Diagnostics.Debug.Flush%2A> ou <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-237">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="d563b-238">Paramètre <xref:System.Diagnostics.Debug.AutoFlush%2A> à `true` signifie que les données sont supprimées de la mémoire tampon dans le flux, mais l’état de l’encodeur n’est pas vidé.</span><span class="sxs-lookup"><span data-stu-id="d563b-238">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="d563b-239">Cela permet à l’encodeur de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</span><span class="sxs-lookup"><span data-stu-id="d563b-239">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="d563b-240">Ce scénario affecte UTF8 et UTF7 où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</span><span class="sxs-lookup"><span data-stu-id="d563b-240">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="d563b-241">Pour définir le <xref:System.Diagnostics.Debug.AutoFlush%2A> et <xref:System.Diagnostics.Debug.IndentSize%2A> pour <xref:System.Diagnostics.Debug>, vous pouvez également modifier le fichier de configuration correspondant au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="d563b-241">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="d563b-242">Le fichier de configuration doit être mis en forme comme illustré dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="d563b-242">The configuration file should be formatted as shown in the following example.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d563b-243">Pour opérer avec du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-243">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="d563b-244">Valeur de la demande <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-244">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d563b-245">Vide la mémoire tampon de sortie, puis appelle la méthode <see langword="Close" /> sur chaque <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-245">Flushes the output buffer and then calls the <see langword="Close" /> method on each of the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-246">Utilisez cette méthode lorsque la sortie doit être dirigée vers un fichier, par exemple le <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-246">Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-247">Vider le flux n’effacera pas son encodeur sous-jacent sauf si vous appelez explicitement <xref:System.Diagnostics.Debug.Flush%2A> ou <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-247">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="d563b-248">Paramètre <xref:System.Diagnostics.Debug.AutoFlush%2A> à `true` signifie que les données sont supprimées de la mémoire tampon dans le flux, mais l’état de l’encodeur n’est pas vidé.</span><span class="sxs-lookup"><span data-stu-id="d563b-248">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="d563b-249">Cela permet à l’encodeur de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</span><span class="sxs-lookup"><span data-stu-id="d563b-249">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="d563b-250">Ce scénario affecte UTF8 et UTF7 où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</span><span class="sxs-lookup"><span data-stu-id="d563b-250">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-251">L’exemple suivant crée un <xref:System.Diagnostics.TextWriterTraceListener> nommé `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="d563b-251">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="d563b-252">`myTextListener` utilise un <xref:System.IO.StreamWriter> appelé `myOutputWriter` à écrire dans un fichier nommé `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="d563b-252">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="d563b-253">L’exemple crée le fichier, le flux et le writer, écrit une ligne de texte dans le fichier, puis vide et ferme la sortie.</span><span class="sxs-lookup"><span data-stu-id="d563b-253">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d563b-254">Pour opérer avec du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-254">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="d563b-255">Valeur de la demande <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-255">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d563b-256">Émet un message d'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-256">Emits an error message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="d563b-257">Message à émettre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-257">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-258">Émet le message d’erreur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-258">Emits the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-259">Le comportement par défaut est que le <xref:System.Diagnostics.DefaultTraceListener> génère le message à une boîte de message lors de l’application s’exécute en mode d’interface utilisateur et en le <xref:System.Diagnostics.TraceListener> instances dans le <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-259">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d563b-260">L’affichage de la boîte de message est dépendante de la présence de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-260">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="d563b-261">Si le <xref:System.Diagnostics.DefaultTraceListener> ne figure pas dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection, la boîte de message n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="d563b-261">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="d563b-262">Le <xref:System.Diagnostics.DefaultTraceListener> peuvent être supprimés par le [ &lt;effacer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), le [ &lt;supprimer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou en appelant le <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sur le (méthode)<xref:System.Diagnostics.Trace.Listeners%2A> propriété (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="d563b-262">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="d563b-263">Vous pouvez personnaliser ce comportement en ajoutant un <xref:System.Diagnostics.TraceListener> , ou en le supprimant, le <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-263">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-264">L’exemple suivant utilise la <xref:System.Diagnostics.Debug.Fail%2A> méthode pour imprimer un message lors de la gestion des exceptions.</span><span class="sxs-lookup"><span data-stu-id="d563b-264">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d563b-265">Vous pouvez également utiliser le <xref:System.Diagnostics.Debug.Fail%2A> méthode dans une instruction switch.</span><span class="sxs-lookup"><span data-stu-id="d563b-265">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="d563b-266">Message à émettre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-266">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="d563b-267">Message détaillé à émettre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-267">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-268">Envoie un message d'erreur ainsi qu'un message d'erreur détaillé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-268">Emits an error message and a detailed error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-269">Le comportement par défaut est que le <xref:System.Diagnostics.DefaultTraceListener> génère le message à une boîte de message lors de l’application s’exécute en mode d’interface utilisateur et en le <xref:System.Diagnostics.TraceListener> instances dans le <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-269">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d563b-270">L’affichage de la boîte de message est dépendante de la présence de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-270">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="d563b-271">Si le <xref:System.Diagnostics.DefaultTraceListener> ne figure pas dans le <xref:System.Diagnostics.Trace.Listeners%2A> collection, la boîte de message n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="d563b-271">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="d563b-272">Le <xref:System.Diagnostics.DefaultTraceListener> peuvent être supprimés par le [ &lt;effacer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), le [ &lt;supprimer&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou en appelant le <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sur le (méthode)<xref:System.Diagnostics.Trace.Listeners%2A> propriété (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="d563b-272">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="d563b-273">Vous pouvez personnaliser ce comportement en ajoutant un <xref:System.Diagnostics.TraceListener> , ou en le supprimant, le <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d563b-273">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-274">L’exemple suivant utilise la <xref:System.Diagnostics.Debug.Fail%2A> méthode pour imprimer un message lors de la gestion des exceptions.</span><span class="sxs-lookup"><span data-stu-id="d563b-274">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d563b-275">Vous pouvez également utiliser le <xref:System.Diagnostics.Debug.Fail%2A> méthode dans une instruction switch.</span><span class="sxs-lookup"><span data-stu-id="d563b-275">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d563b-276">Vide la mémoire tampon de sortie et entraîne l'écriture des données de la mémoire tampon dans la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-276">Flushes the output buffer and causes buffered data to write to the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-277">Vider le flux n’effacera pas son encodeur sous-jacent sauf si vous appelez explicitement <xref:System.Diagnostics.Debug.Flush%2A> ou <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-277">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="d563b-278">Paramètre <xref:System.Diagnostics.Debug.AutoFlush%2A> à `true` signifie que les données sont supprimées de la mémoire tampon dans le flux, mais l’état de l’encodeur n’est pas vidé.</span><span class="sxs-lookup"><span data-stu-id="d563b-278">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="d563b-279">Cela permet à l’encodeur de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</span><span class="sxs-lookup"><span data-stu-id="d563b-279">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="d563b-280">Ce scénario affecte UTF8 et UTF7 où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</span><span class="sxs-lookup"><span data-stu-id="d563b-280">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-281">L’exemple suivant crée un <xref:System.Diagnostics.TextWriterTraceListener> nommé `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="d563b-281">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="d563b-282">`myTextListener` utilise un <xref:System.IO.FileStream> appelé `myFileStream` à écrire dans un fichier nommé `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="d563b-282">`myTextListener` uses a <xref:System.IO.FileStream> called `myFileStream` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="d563b-283">L’exemple crée le flux, ouvre le fichier si elle existe ou crée un nouveau, écrit une ligne de texte dans le fichier, puis vide et ferme la sortie.</span><span class="sxs-lookup"><span data-stu-id="d563b-283">The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d563b-284">Augmente le <see cref="P:System.Diagnostics.Debug.IndentLevel" /> actuel d’une unité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-284">Increases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d563b-285">L’exemple suivant définit le niveau de retrait et émet des messages de débogage.</span><span class="sxs-lookup"><span data-stu-id="d563b-285">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d563b-286">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="d563b-286">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Unindent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d563b-287">Obtient ou définit le niveau de retrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-287">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d563b-288">Niveau de retrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-288">The indent level.</span>
          </span>
          <span data-ttu-id="d563b-289">La valeur par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-289">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-290">Le <xref:System.Diagnostics.Debug.IndentLevel%2A> propriété représente le nombre de fois où le retrait de taille <xref:System.Diagnostics.Debug.IndentSize%2A> est appliqué.</span><span class="sxs-lookup"><span data-stu-id="d563b-290">The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-291">L’exemple suivant définit le niveau de retrait et émet des messages de débogage.</span><span class="sxs-lookup"><span data-stu-id="d563b-291">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d563b-292">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="d563b-292">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d563b-293">Obtient ou définit le nombre d'espaces dans un retrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-293">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d563b-294">Nombre d'espaces dans un retrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-294">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="d563b-295">La valeur par défaut est quatre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-295">The default is four.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-296">A <xref:System.Diagnostics.TextWriterTraceListener> interprète ce nombre comme des espaces.</span><span class="sxs-lookup"><span data-stu-id="d563b-296">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="d563b-297">Un <xref:System.Diagnostics.EventLogTraceListener> ignore cette valeur.</span><span class="sxs-lookup"><span data-stu-id="d563b-297">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="d563b-298">Pour définir le <xref:System.Diagnostics.Debug.AutoFlush%2A> et <xref:System.Diagnostics.Debug.IndentSize%2A> pour <xref:System.Diagnostics.Debug>, vous pouvez également modifier le fichier de configuration correspondant au nom de votre application.</span><span class="sxs-lookup"><span data-stu-id="d563b-298">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="d563b-299">Le fichier de configuration doit être mis en forme comme illustré dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="d563b-299">The configuration file should be formatted as shown in the following example.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d563b-300">Obtient la collection des écouteurs qui surveillent la sortie de débogage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-300">Gets the collection of listeners that is monitoring the debug output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d563b-301">
            <see cref="T:System.Diagnostics.TraceListenerCollection" /> représentant une collection du type <see cref="T:System.Diagnostics.TraceListener" /> qui surveille la sortie de débogage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-301">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> representing a collection of type <see cref="T:System.Diagnostics.TraceListener" /> that monitors the debug output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-302">Les écouteurs produisent une sortie mise en forme à partir de la sortie de débogage.</span><span class="sxs-lookup"><span data-stu-id="d563b-302">The listeners produce formatted output from the debug output.</span></span> <span data-ttu-id="d563b-303">Par défaut, la collection contient une instance de la <xref:System.Diagnostics.DefaultTraceListener> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-303">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="d563b-304">Pour supprimer l’écouteur par défaut, appelez le <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> (méthode) et le passer à l’instance de la <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-304">To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="d563b-305">Pour rediriger la sortie vers la fenêtre de console, ajoutez une instance de la <xref:System.Diagnostics.ConsoleTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-305">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span> <span data-ttu-id="d563b-306">Pour rediriger la sortie vers un fichier ou un flux, ajoutez une instance de la <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-306">To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d563b-307">Le <xref:System.Diagnostics.Debug.Listeners%2A> collection est partagée par les deux le <xref:System.Diagnostics.Debug> et <xref:System.Diagnostics.Trace> classes ; Ajout d’un écouteur de suivi à chaque classe ajoute l’écouteur à la fois.</span><span class="sxs-lookup"><span data-stu-id="d563b-307">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-308">L’exemple suivant crée un <xref:System.Diagnostics.TextWriterTraceListener> qui renvoie à l’écran de la console.</span><span class="sxs-lookup"><span data-stu-id="d563b-308">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="d563b-309">Le code ajoute ensuite le nouvel écouteur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-309">The code then adds the new listener to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Debug.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d563b-310">Pour opérer avec du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-310">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="d563b-311">Valeur de la demande <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-311">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Print">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d563b-312">Écrit un message suivi d'un terminateur de ligne sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-312">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="d563b-313">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-313">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-314">Écrit un message suivi d'un terminateur de ligne sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-314">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-315">Le terminateur de ligne par défaut est un retour chariot suivi d’un saut de ligne.</span><span class="sxs-lookup"><span data-stu-id="d563b-315">The default line terminator is a carriage return followed by a line feed.</span></span> <span data-ttu-id="d563b-316">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-316">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="d563b-317">Chaîne de format composite qui contient du texte avec aucun ou plusieurs éléments de mise en forme qui correspondent à des objets dans le tableau <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-317">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="d563b-318">Tableau d'objets qui contient zéro ou plusieurs objets à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-318">An object array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-319">Écrit une chaîne mise en forme, suivie d'un terminateur de ligne sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-319">Writes a formatted string followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-320">Cette méthode utilise du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="d563b-320">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="d563b-321">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-321">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d563b-322">
            <paramref name="format" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-322">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d563b-323">
            <paramref name="format" /> n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-323">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="d563b-324">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-324">-or-</span>
          </span>
          <span data-ttu-id="d563b-325">Le nombre qui indique un argument à mettre en forme est inférieur à zéro ou supérieur ou égal au nombre d'objets spécifiés à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-325">The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d563b-326">Réduit la propriété <see cref="P:System.Diagnostics.Debug.IndentLevel" /> actuelle d’une unité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-326">Decreases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d563b-327">L’exemple suivant définit le niveau de retrait et émet des messages de débogage.</span><span class="sxs-lookup"><span data-stu-id="d563b-327">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d563b-328">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="d563b-328">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Indent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d563b-329">Écrit les informations sur la version déboguée sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-329">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d563b-330">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-330">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-331">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-331">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-332">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-332">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-333">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-333">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-334">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-334">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-335">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-335">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-336">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-336">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-337">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-337">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-338">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-338">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="d563b-339">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-339">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="d563b-340">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-340">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-341">Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-341">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-342">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-342">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-343">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-343">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-344">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-344">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-345">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-345">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-346">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-346">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-347">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-347">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-348">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-348">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="d563b-349">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-349">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d563b-350">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-350">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="d563b-351">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-351">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-352">Écrit le nom de la catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs Trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-352">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-353">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-353">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-354">Utilisez le `category` paramètre au groupe de messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="d563b-354">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="d563b-355">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-355">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-356">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-356">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-357">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-357">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-358">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-358">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-359">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-359">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-360">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-360">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="d563b-361">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-361">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="d563b-362">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-362">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="d563b-363">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-363">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-364">Écrit un nom de catégorie et un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-364">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-365">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-366">Utilisez le `category` paramètre au groupe de messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="d563b-366">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="d563b-367">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-367">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-368">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-368">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-369">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-369">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-370">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-370">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-371">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-371">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-372">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-372">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="d563b-373">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-373">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d563b-374">Écrit les informations sur la version déboguée sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition a la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-374">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="d563b-375">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-375">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="d563b-376">Si la condition est <see langword="true" />, la valeur est écrite dans les écouteurs de la trace de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-376">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d563b-377">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-377">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-378">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-378">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-379">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-379">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-380">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-380">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-381">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-381">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-382">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-382">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-383">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier nom du paramètre de valeur pour le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-383">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-384">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-384">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-385">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie un message sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-385">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="d563b-386">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-386">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d563b-387">Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instructions.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-387">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="d563b-388">Les exemples suivants de deux fichiers de code envoient le même message de débogage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-388">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="d563b-389">Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" />, vous n’appelez pas <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-389">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="d563b-390">Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-390">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="d563b-391">Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-391">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="d563b-392">Premier exemple :</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-392">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="d563b-393">Deuxième exemple :</span><span class="sxs-lookup"><span data-stu-id="d563b-393">Second example:</span></span>  
  
```  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="d563b-394">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-394">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="d563b-395">Si la condition est <see langword="true" />, le message est écrit dans les écouteurs de la trace de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-395">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="d563b-396">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-396">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-397">Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-397">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-398">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-398">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-399">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-399">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-400">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-400">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-401">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-401">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-402">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-402">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-403">Pour plus d’informations sur l’ajout d’un écouteur à la <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-403">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-404">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-404">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="d563b-405">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-405">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d563b-406">Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instructions.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-406">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="d563b-407">Les exemples suivants de deux fichiers de code envoient le même message de débogage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-407">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="d563b-408">Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" />, vous n’appelez pas <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-408">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="d563b-409">Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-409">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="d563b-410">Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-410">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="d563b-411">Premier exemple :</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-411">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="d563b-412">Deuxième exemple :</span><span class="sxs-lookup"><span data-stu-id="d563b-412">Second example:</span></span>  
  
```  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="d563b-413">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-413">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="d563b-414">Si la condition est <see langword="true" />, le nom de catégorie et la valeur sont écrits dans les écouteurs de la trace de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-414">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d563b-415">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-415">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="d563b-416">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-416">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-417">Écrit un nom de catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />, si une condition a la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-417">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-418">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-418">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-419">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="d563b-419">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="d563b-420">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-420">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-421">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-421">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-422">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-422">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-423">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Verbose`, l’exemple renvoie le nom de la `myObject` et `category` à la <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-423">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-424">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-424">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-425">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Error` ou une version ultérieure, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-425">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="d563b-426">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-426">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d563b-427">Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instructions.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-427">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="d563b-428">Les exemples suivants de deux fichiers de code envoient le même message de débogage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-428">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="d563b-429">Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" />, vous n’appelez pas <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-429">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="d563b-430">Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-430">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="d563b-431">Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-431">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="d563b-432">Premier exemple :</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-432">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="d563b-433">Deuxième exemple :</span><span class="sxs-lookup"><span data-stu-id="d563b-433">Second example:</span></span>  
  
```  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="d563b-434">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-434">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="d563b-435">Si la condition est <see langword="true" />, le nom de catégorie et le message sont écrits dans les écouteurs de la trace de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-435">If the condition is <see langword="true" />, the category name and message are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="d563b-436">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-436">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="d563b-437">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-437">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-438">Écrit un nom de catégorie et un message dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-438">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-439">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-439">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-440">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="d563b-440">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="d563b-441">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-441">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-442">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-442">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-443">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-443">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-444">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Verbose`, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-444">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-445">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-445">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-446">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Error` ou une version ultérieure, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-446">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="d563b-447">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-447">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d563b-448">Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instructions.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-448">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="d563b-449">Les exemples suivants de deux fichiers de code envoient le même message de débogage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-449">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="d563b-450">Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" />, vous n’appelez pas <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-450">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="d563b-451">Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-451">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="d563b-452">Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-452">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="d563b-453">Premier exemple :</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-453">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="d563b-454">Deuxième exemple :</span><span class="sxs-lookup"><span data-stu-id="d563b-454">Second example:</span></span>  
  
```  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d563b-455">Écrit les informations sur la version déboguée sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-455">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d563b-456">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-456">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-457">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-457">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-458">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-458">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-459">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-459">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-460">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-460">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-461">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-461">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-462">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-462">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-463">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-463">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-464">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le nom de l’objet sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-464">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="d563b-465">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-465">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="d563b-466">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-466">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-467">Écrit un message suivi d'un terminateur de ligne sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-467">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-468">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-468">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-469">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-469">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-470">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-470">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-471">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-471">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-472">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-472">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-473">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-473">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-474">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-474">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="d563b-475">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-475">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d563b-476">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-476">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="d563b-477">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-477">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-478">Écrit le nom de la catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs Trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-478">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-479">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-479">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-480">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="d563b-480">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="d563b-481">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-481">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-482">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-482">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-483">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-483">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-484">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-484">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-485">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-485">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-486">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-486">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="d563b-487">Le deuxième message est suivi d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="d563b-487">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="d563b-488">Chaîne de format composite qui contient du texte avec aucun ou plusieurs éléments de mise en forme qui correspondent à des objets dans le tableau <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-488">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="d563b-489">Tableau d'objets contenant aucun ou plusieurs objets à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-489">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-490">Écrit un message mis en forme suivi d'un terminateur de ligne dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-490">Writes a formatted message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-491">Cette méthode utilise du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="d563b-491">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span>  
  
 <span data-ttu-id="d563b-492">Le mot clé dans la syntaxe de cette méthode implique que le tableau d’objets peut être une valeur unique.</span><span class="sxs-lookup"><span data-stu-id="d563b-492">The  keyword in the syntax for this method implies that the object array can be a single value.</span></span> <span data-ttu-id="d563b-493">L’exception concerne le <xref:System.String> objet.</span><span class="sxs-lookup"><span data-stu-id="d563b-493">The exception to this is the <xref:System.String> object.</span></span> <span data-ttu-id="d563b-494">Les surcharges explicites sont prioritaires, de sorte qu’une `arg` par défaut la valeur d’une chaîne unique sera le <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="d563b-494">Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> overload.</span></span>  
  
 <span data-ttu-id="d563b-495">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-495">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-496">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-496">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="d563b-497">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-497">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="d563b-498">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-498">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-499">Écrit un nom de catégorie et un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-499">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-500">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-500">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-501">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="d563b-501">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="d563b-502">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-502">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-503">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-503">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-504">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-504">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-505">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-505">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-506">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-506">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-507">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur et le `category` sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-507">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="d563b-508">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-508">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d563b-509">Écrit les informations sur la version déboguée sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition a la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-509">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="d563b-510">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-510">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="d563b-511">Si la condition est <see langword="true" />, la valeur est écrite dans les écouteurs de la trace de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-511">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d563b-512">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-512">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-513">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-513">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-514">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-514">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-515">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-515">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-516">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-516">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-517">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-517">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-518">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-518">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-519">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-519">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-520">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le nom de l’objet sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-520">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="d563b-521">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-521">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d563b-522">Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instructions.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-522">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="d563b-523">Les exemples suivants de deux fichiers de code envoient le même message de débogage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-523">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="d563b-524">Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" />, vous n’appelez pas <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-524">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="d563b-525">Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-525">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="d563b-526">Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-526">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="d563b-527">Premier exemple :</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-527">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="d563b-528">Deuxième exemple :</span><span class="sxs-lookup"><span data-stu-id="d563b-528">Second example:</span></span>  
  
```  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="d563b-529">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-529">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="d563b-530">Si la condition est <see langword="true" />, le message est écrit dans les écouteurs de la trace de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-530">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="d563b-531">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-531">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-532">Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-532">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-533">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-533">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-534">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-534">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-535">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-535">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-536">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-536">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-537">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-537">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-538">Pour plus d’informations sur l’ajout d’un écouteur à la <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-538">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-539">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-539">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="d563b-540">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-540">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d563b-541">Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instructions.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-541">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="d563b-542">Les exemples suivants de deux fichiers de code envoient le même message de débogage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-542">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="d563b-543">Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" />, vous n’appelez pas <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-543">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="d563b-544">Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-544">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="d563b-545">Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-545">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="d563b-546">Premier exemple :</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-546">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="d563b-547">Deuxième exemple :</span><span class="sxs-lookup"><span data-stu-id="d563b-547">Second example:</span></span>  
  
```  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="d563b-548">Expression conditionnelle à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-548">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="d563b-549">Si la condition est <see langword="true" />, le nom de catégorie et la valeur sont écrits dans les écouteurs de la trace de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-549">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d563b-550">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-550">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="d563b-551">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-551">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-552">Écrit un nom de catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />, si une condition a la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-552">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-553">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-553">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-554">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="d563b-554">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="d563b-555">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-555">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-556">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-556">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-557">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-557">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-558">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-558">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-559">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-559">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-560">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-560">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="d563b-561">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-561">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d563b-562">Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instructions.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-562">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="d563b-563">Les exemples suivants de deux fichiers de code envoient le même message de débogage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-563">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="d563b-564">Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" />, vous n’appelez pas <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-564">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="d563b-565">Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-565">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="d563b-566">Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-566">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="d563b-567">Premier exemple :</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-567">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="d563b-568">Deuxième exemple :</span><span class="sxs-lookup"><span data-stu-id="d563b-568">Second example:</span></span>  
  
```  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="d563b-569">
            <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-569">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="d563b-570">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-570">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="d563b-571">Nom de catégorie utilisé pour organiser la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-571">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d563b-572">Écrit un nom de catégorie et un message dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d563b-572">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d563b-573">Par défaut, la sortie est écrite dans une instance de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="d563b-573">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="d563b-574">Le `category` paramètre peut être utilisé pour regrouper les messages de sortie.</span><span class="sxs-lookup"><span data-stu-id="d563b-574">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="d563b-575">Cette méthode appelle la <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> méthode de l’écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="d563b-575">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d563b-576">L’exemple suivant crée un <xref:System.Diagnostics.TraceSwitch> nommé `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="d563b-576">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="d563b-577">Ce commutateur est défini en dehors de l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="d563b-577">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="d563b-578">Si le commutateur est défini sur le <xref:System.Diagnostics.TraceLevel> `Error` ou une version ultérieure, l’exemple renvoie le premier message d’erreur à le <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="d563b-578">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="d563b-579">Pour plus d’informations sur l’ajout d’un écouteur pour le <xref:System.Diagnostics.Debug.Listeners%2A> collection, consultez la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d563b-579">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="d563b-580">Ensuite, si le <xref:System.Diagnostics.TraceLevel> a la valeur `Verbose`, l’exemple renvoie le deuxième message d’erreur et le `category` sur la même ligne que le premier message.</span><span class="sxs-lookup"><span data-stu-id="d563b-580">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="d563b-581">Un terminateur de ligne suit le deuxième message.</span><span class="sxs-lookup"><span data-stu-id="d563b-581">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d563b-582">Vous pouvez limiter la baisse des performances de l’instrumentation de votre application à l’aide de <see langword="If...Then" /> au lieu d’utiliser les instructions <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instructions.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-582">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="d563b-583">Les exemples suivants de deux fichiers de code envoient le même message de débogage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-583">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="d563b-584">Toutefois, le premier exemple est beaucoup plus rapide lorsque le traçage est désactivé, car si <c>mySwitch.TraceError</c> prend la valeur de <see langword="false" />, vous n’appelez pas <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-584">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="d563b-585">Le deuxième exemple appelle toujours <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, même quand <c>mySwitch.TraceError</c> est <see langword="false" /> et aucune sortie de traçage n’est généré.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-585">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="d563b-586">Cela peut entraîner l’exécution inutile d’un code arbitrairement complexe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-586">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="d563b-587">Premier exemple :</span>
            <span class="sxs-lookup">
              <span data-stu-id="d563b-587">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="d563b-588">Deuxième exemple :</span><span class="sxs-lookup"><span data-stu-id="d563b-588">Second example:</span></span>  
  
```  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>