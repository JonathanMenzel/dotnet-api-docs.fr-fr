<Type Name="TraceSwitch" FullName="System.Diagnostics.TraceSwitch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32fcf693d234719f0e19223203ec63d7fc5527dc" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53391936" /></Metadata><TypeSignature Language="C#" Value="public class TraceSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type TraceSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Diagnostics.TraceLevel))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit un commutateur à plusieurs niveaux pour contrôler la sortie de traçage et de débogage sans recompiler votre code.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser un commutateur de trace pour filtrer les messages en fonction de leur importance. Le <xref:System.Diagnostics.TraceSwitch> classe fournit le <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, et <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propriétés pour tester le niveau du commutateur. Le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété obtient ou définit le commutateur <xref:System.Diagnostics.TraceLevel>.  
  
 Vous pouvez définir le niveau d’un <xref:System.Diagnostics.TraceSwitch> via le fichier de configuration d’application et utiliser ensuite configuré <xref:System.Diagnostics.TraceSwitch> niveau dans votre application. Vous pouvez également créer un <xref:System.Diagnostics.TraceSwitch> dans votre code et définir le niveau directement pour instrumenter une section spécifique de code.  
  
 Pour configurer un <xref:System.Diagnostics.TraceSwitch>, modifier la pour votre application. Dans ce fichier, vous pouvez ajouter ou supprimer un commutateur, définir la valeur d’un commutateur ou effacer tous les commutateurs précédemment définis par l’application. Le fichier de configuration doit être mis en forme comme dans l’exemple suivant :  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 Cette section de configuration définit un <xref:System.Diagnostics.TraceSwitch> avec la <xref:System.Diagnostics.Switch.DisplayName%2A> définie sur `mySwitch`et le <xref:System.Diagnostics.TraceSwitch.Level%2A> définie sur 1, ce qui correspond à la valeur d’énumération <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Dans .NET Framework 2.0, vous pouvez spécifier la valeur d'un commutateur avec du texte. Par exemple, `true` pour un <xref:System.Diagnostics.BooleanSwitch> ou le texte représentant une valeur d’énumération, tels que `Error` pour un <xref:System.Diagnostics.TraceSwitch>. La ligne `<add name="mySwitch" value="Error" />` équivaut à `<add name="mySwitch" value="1" />`.  
  
 Dans votre application, vous pouvez utiliser le niveau de commutateur configuré en créant un <xref:System.Diagnostics.TraceSwitch> portant le même nom, comme indiqué dans l’exemple suivant :  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/remarks.cpp#3)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/remarks.cs#3)]
 [!code-vb[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/remarks.vb#3)]  
  
 Par défaut, le commutateur <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété est définie à l’aide de la valeur spécifiée dans le fichier de configuration. Si le <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructeur ne peut pas trouver les paramètres initiaux de commutateur dans le fichier de configuration, le <xref:System.Diagnostics.TraceSwitch.Level%2A> du nouveau commutateur par défaut, <xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType>.  
  
 Vous devez activer le traçage ou de débogage pour utiliser un commutateur. La syntaxe suivante est spécifique au compilateur. Si vous utilisez des compilateurs autres que c# ou Visual Basic, consultez la documentation de votre compilateur.  
  
-   Pour activer le débogage en c#, ajoutez le `/d:DEBUG` indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou ajoutez `#define DEBUG` vers le haut de votre fichier. Dans Visual Basic, ajoutez le `/d:DEBUG=True` indicateur pour la ligne de commande du compilateur.  
  
-   Pour activer le traçage en c#, ajoutez le `/d:TRACE` indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou ajoutez `#define TRACE` vers le haut de votre fichier. Dans Visual Basic, ajoutez le `/d:TRACE=True` indicateur pour la ligne de commande du compilateur.  
  
> [!NOTE]
>  Ces debug et trace les commutateurs du compilateur ne sont pas requis lorsque vous utilisez la <xref:System.Diagnostics.TraceSwitch> classe de manière isolée. Ils sont requis uniquement en association avec <xref:System.Diagnostics.Trace> ou <xref:System.Diagnostics.Debug> les méthodes qui sont compilées de façon conditionnelle.  
  
 Pour plus d’informations sur l’instrumentation de votre application, consultez <xref:System.Diagnostics.Debug> et <xref:System.Diagnostics.Trace>. Pour plus d’informations sur la configuration et à l’aide de commutateurs de trace, consultez [commutateurs de Trace](~/docs/framework/debug-trace-profile/trace-switches.md).  
  
> [!NOTE]
>  Pour améliorer les performances, vous pouvez rendre <xref:System.Diagnostics.TraceSwitch> membres `static` dans votre classe.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouveau <xref:System.Diagnostics.TraceSwitch> et l’utilise pour déterminer s’il faut imprimer les messages d’erreur. Le commutateur est créé au niveau de la classe. `MyMethod` écrit le premier message d’erreur si le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété est définie sur <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> ou une version ultérieure. Toutefois, `MyMethod` n’écrit pas le deuxième message d’erreur si le <xref:System.Diagnostics.TraceSwitch.Level%2A> est inférieure à <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceLevel" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceSwitch" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSwitch : string * string -&gt; System.Diagnostics.TraceSwitch" Usage="new System.Diagnostics.TraceSwitch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Nom à afficher dans l’interface utilisateur.</param>
        <param name="description">Description du commutateur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceSwitch" /> à l'aide du nom complet et de la description spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour définir le niveau de votre <xref:System.Diagnostics.TraceSwitch>, modifiez le fichier de configuration qui correspond au nom de votre application. Dans ce fichier, vous pouvez ajouter un commutateur et définir sa valeur, supprimer un commutateur ou effacer tous les commutateurs précédemment définis par l’application. Le fichier de configuration doit être mis en forme comme dans l’exemple suivant :  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  Dans .NET Framework 2.0, vous pouvez spécifier la valeur d'un commutateur avec du texte. Par exemple, `true` pour un <xref:System.Diagnostics.BooleanSwitch> ou le texte représentant une valeur d’énumération, tels que `Error` pour un <xref:System.Diagnostics.TraceSwitch>. La ligne `<add name="mySwitch" value="Error" />` équivaut à `<add name="mySwitch" value="1" />`.  
  
 Dans votre application, vous pouvez utiliser le niveau de commutateur configuré en créant un <xref:System.Diagnostics.TraceSwitch> portant le même nom, comme indiqué dans l’exemple suivant :  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/remarks.cpp#3)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/remarks.cs#3)]
 [!code-vb[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/remarks.vb#3)]  
  
 Lorsque le <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructeur ne peut pas trouver les paramètres initiaux de commutateur dans le fichier de configuration, le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété du nouveau commutateur a la valeur <xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType>.  
  
 Le <xref:System.Diagnostics.TraceSwitch> classe fournit le <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, et <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propriétés pour tester le <xref:System.Diagnostics.TraceSwitch.Level%2A> du commutateur. Le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété obtient ou définit le commutateur <xref:System.Diagnostics.TraceLevel>.  
  
> [!NOTE]
>  Pour améliorer les performances, vous pouvez rendre <xref:System.Diagnostics.TraceSwitch> membres `static` dans votre classe.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouveau <xref:System.Diagnostics.TraceSwitch> et l’utilise pour déterminer s’il faut imprimer les messages d’erreur. Le commutateur est créé au niveau de la classe. `MyMethod` écrit le premier message d’erreur si le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété est définie sur <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> ou une version ultérieure. Toutefois, `MyMethod` n’écrit pas le deuxième message d’erreur si le <xref:System.Diagnostics.TraceSwitch.Level%2A> est inférieure à <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSwitch : string * string * string -&gt; System.Diagnostics.TraceSwitch" Usage="new System.Diagnostics.TraceSwitch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="defaultSwitchValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Nom à afficher dans l’interface utilisateur.</param>
        <param name="description">Description du commutateur.</param>
        <param name="defaultSwitchValue">Valeur par défaut du commutateur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceSwitch" />, à l'aide du nom complet, de la description et de la valeur par défaut spécifiés pour le commutateur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `displayName` paramètre est utilisé pour définir la valeur de la <xref:System.Diagnostics.Switch.DisplayName%2A> propriété, le `description` paramètre permet de définir la valeur de la <xref:System.Diagnostics.Switch.Description%2A> propriété et le `defaultSwitchValue` paramètre est enregistré en tant que champ et utilisé pour initialiser le <xref:System.Diagnostics.Switch.Value%2A>propriété à la première référence. Consultez le <xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29> constructeur pour plus d’informations et un exemple de code.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceLevel Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.Level" />
      <MemberSignature Language="VB.NET" Value="Public Property Level As TraceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceLevel Level { System::Diagnostics::TraceLevel get(); void set(System::Diagnostics::TraceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Diagnostics.TraceLevel with get, set" Usage="System.Diagnostics.TraceSwitch.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le niveau de trace qui détermine les messages que le commutateur autorise.</summary>
        <value>Parmi les <see cref="T:System.Diagnostics.TraceLevel" /> valeurs qui spécifie le niveau des messages qui sont autorisés par le commutateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour définir le niveau de votre <xref:System.Diagnostics.TraceSwitch>, modifiez le fichier de configuration qui correspond au nom de votre application. Dans ce fichier, vous pouvez ajouter un commutateur et définir sa valeur, supprimer un commutateur ou effacer tous les commutateurs précédemment définis par l’application. Le fichier de configuration doit être mis en forme comme dans l’exemple suivant :  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="0" />  
      <add name="myNewSwitch" value="3" />  
      <remove name="mySwitch" />  
      <clear/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  Dans .NET Framework 2.0, vous pouvez spécifier la valeur d'un commutateur avec du texte. Par exemple, `true` pour un <xref:System.Diagnostics.BooleanSwitch> ou le texte représentant une valeur d’énumération, tels que `Error` pour un <xref:System.Diagnostics.TraceSwitch>. La ligne `<add name="mySwitch" value="Error" />` équivaut à `<add name="mySwitch" value="1" />`.  
  
 Lorsque le <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructeur ne peut pas trouver les paramètres initiaux de commutateur dans le fichier de configuration, le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété du nouveau commutateur a la valeur <xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType>.  
  
 Paramètre de cette propriété met à jour le <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, et <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propriétés afin de refléter la nouvelle valeur.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouveau <xref:System.Diagnostics.TraceSwitch> et l’utilise pour déterminer s’il faut imprimer les messages d’erreur. Le commutateur est créé au niveau de la classe. `MyMethod` écrit le premier message d’erreur si le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété est définie sur <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> ou une version ultérieure. Toutefois, `MyMethod` n’écrit pas le deuxième message d’erreur si le <xref:System.Diagnostics.TraceSwitch.Level%2A> est inférieure à <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.Level Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.Level Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.Level Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Une valeur ne faisant pas partie des valeurs <see cref="P:System.Diagnostics.TraceSwitch.Level" /> est affectée à <see cref="T:System.Diagnostics.TraceLevel" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec du code non managé. Énumération associée :  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnSwitchSettingChanged">
      <MemberSignature Language="C#" Value="protected override void OnSwitchSettingChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSwitchSettingChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSwitchSettingChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSwitchSettingChanged();" />
      <MemberSignature Language="F#" Value="override this.OnSwitchSettingChanged : unit -&gt; unit" Usage="traceSwitch.OnSwitchSettingChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Met à jour et corrige le niveau de ce commutateur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged%2A> méthode est utilisée par le .NET framework pour valider et corriger la valeur d’un commutateur initialisé via un fichier de configuration. Un message est écrit dans tous les écouteurs de trace si la valeur de commutateur spécifiée dans le fichier de configuration n’est pas définie par le <xref:System.Diagnostics.TraceLevel> énumération et le commutateur est défini sur une valeur définie.  
  
 Si vous essayez dans votre code pour définir le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété une valeur qui n’est pas définie par le <xref:System.Diagnostics.TraceLevel> énumération, un <xref:System.ArgumentException> exception est levée.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="traceSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Affecte l'entier équivalent de la propriété <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> à la propriété <see cref="P:System.Diagnostics.Switch.Value" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée en interne lorsque le <xref:System.Diagnostics.Switch.Value%2A> propriété du commutateur est modifiée. La méthode garantit que les propriétés relatives à la valeur du commutateur reflètent la nouvelle valeur.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Pour substituer cette propriété, convertissez la valeur de chaîne de la <see cref="P:System.Diagnostics.Switch.Value" /> propriété binaire, puis définissez le <see cref="P:System.Diagnostics.TraceSwitch.Level" /> propriété.</para></block>
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public bool TraceError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceError" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceError : bool" Usage="System.Diagnostics.TraceSwitch.TraceError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le commutateur autorise des messages de gestion des erreurs.</summary>
        <value><see langword="true" /> si la propriété <see cref="P:System.Diagnostics.TraceSwitch.Level" /> a la valeur <see cref="F:System.Diagnostics.TraceLevel.Error" />, <see cref="F:System.Diagnostics.TraceLevel.Warning" />, <see cref="F:System.Diagnostics.TraceLevel.Info" /> ou <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, et <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propriétés conjointement avec le <xref:System.Diagnostics.Debug> et <xref:System.Diagnostics.Trace> classes pour émettre tous les messages d’une importance spécifiée ou supérieure. Lorsque le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété a la valeur la plus grande importance, <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType>, <xref:System.Diagnostics.TraceLevel.Error> , seuls les messages de gestion des erreurs sont émis.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouveau <xref:System.Diagnostics.TraceSwitch> et l’utilise pour déterminer s’il faut émettre des messages d’erreur. Le commutateur est créé au niveau de la classe. `MyMethod` écrit le premier message d’erreur si le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété est définie sur <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> ou une version ultérieure. Toutefois, `MyMethod` n’écrit pas le deuxième message d’erreur si le <xref:System.Diagnostics.TraceSwitch.Level%2A> est inférieure à <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceInfo">
      <MemberSignature Language="C#" Value="public bool TraceInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceInfo" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceInfo : bool" Usage="System.Diagnostics.TraceSwitch.TraceInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le commutateur autorise des messages d'information.</summary>
        <value><see langword="true" /> si la propriété <see cref="P:System.Diagnostics.TraceSwitch.Level" /> a la valeur <see cref="F:System.Diagnostics.TraceLevel.Info" /> ou <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, et <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propriétés conjointement avec le <xref:System.Diagnostics.Debug> et <xref:System.Diagnostics.Trace> classes pour émettre tous les messages d’une importance spécifiée ou supérieure. Lorsque le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété est définie sur <xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType>, messages d’information, les avertissements et les messages de gestion des erreurs sont émis.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouveau <xref:System.Diagnostics.TraceSwitch> et l’utilise pour déterminer s’il faut émettre des messages d’erreur. Le commutateur est créé au niveau de la classe. `MyMethod` écrit le premier message d’erreur si le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété est définie sur <xref:System.Diagnostics.TraceLevel.Info?displayProperty=nameWithType> ou une version ultérieure. Toutefois, `MyMethod` n’écrit pas le deuxième message d’erreur si le <xref:System.Diagnostics.TraceSwitch.Level%2A> est inférieure à <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceVerbose">
      <MemberSignature Language="C#" Value="public bool TraceVerbose { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceVerbose" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceVerbose" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceVerbose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceVerbose { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceVerbose : bool" Usage="System.Diagnostics.TraceSwitch.TraceVerbose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le commutateur autorise tous les messages.</summary>
        <value><see langword="true" /> si la propriété <see cref="P:System.Diagnostics.TraceSwitch.Level" /> a la valeur <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, et <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propriétés conjointement avec le <xref:System.Diagnostics.Debug> et <xref:System.Diagnostics.Trace> classes pour émettre tous les messages d’une importance spécifiée ou supérieure. Lorsque le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété est définie sur <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>, tous les messages de traçage et de débogage sont transmis.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouveau <xref:System.Diagnostics.TraceSwitch> et l’utilise pour déterminer s’il faut émettre des messages d’erreur. Le commutateur est créé au niveau de la classe. `MyMethod` écrit les deux messages d’erreur lorsque le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété est définie sur <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public bool TraceWarning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceWarning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceWarning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceWarning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceWarning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceWarning : bool" Usage="System.Diagnostics.TraceSwitch.TraceWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le commutateur autorise les messages d'avertissement.</summary>
        <value><see langword="true" /> si la propriété <see cref="P:System.Diagnostics.TraceSwitch.Level" /> a la valeur <see cref="F:System.Diagnostics.TraceLevel.Warning" />, <see cref="F:System.Diagnostics.TraceLevel.Info" /> ou <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, et <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propriétés conjointement avec le <xref:System.Diagnostics.Debug> et <xref:System.Diagnostics.Trace> classes pour émettre tous les messages d’une importance spécifiée ou supérieure. Lorsque le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété est définie sur <xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType>, avertissements et messages de gestion des erreurs sont émis.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouveau <xref:System.Diagnostics.TraceSwitch> et l’utilise pour déterminer s’il faut émettre des messages d’erreur. Le commutateur est créé au niveau de la classe. `MyMethod` écrit le premier message d’erreur si le <xref:System.Diagnostics.TraceSwitch.Level%2A> propriété est définie sur <xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType> ou une version ultérieure. Toutefois, `MyMethod` n’écrit pas le deuxième message d’erreur lorsque le <xref:System.Diagnostics.TraceSwitch.Level%2A> est inférieure à <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>