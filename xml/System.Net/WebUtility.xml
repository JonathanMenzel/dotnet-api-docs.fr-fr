<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="897921efe400b6b55c24d5ca77b0f8414c09c181" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51912782" /></Metadata><TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5d120-101">Fournit des méthodes de codage et décodage d'URL pendant le traitement des requêtes web.</span><span class="sxs-lookup"><span data-stu-id="5d120-101">Provides methods for encoding and decoding URLs when processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d120-102">Le <xref:System.Web.HttpUtility> classe contient l’encodage et décodage des méthodes utilitaires pour une utilisation avec des chaînes encodées au format HTML.</span><span class="sxs-lookup"><span data-stu-id="5d120-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="5d120-103">Le <xref:System.Uri?displayProperty=nameWithType> classe contient également des méthodes et propriétés qui peuvent être utilisées pour des raisons similaires.</span><span class="sxs-lookup"><span data-stu-id="5d120-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="5d120-104">Comment : protéger contre les attaques de Script dans une Application Web en appliquant le codage HTML</span><span class="sxs-lookup"><span data-stu-id="5d120-104">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d120-105">Convertit une chaîne qui a été encodée en HTML en vue d’une transmission HTML dans une chaîne décodée.</span><span class="sxs-lookup"><span data-stu-id="5d120-105">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5d120-106">Chaîne à décoder.</span><span class="sxs-lookup"><span data-stu-id="5d120-106">The string to decode.</span></span></param>
        <summary><span data-ttu-id="5d120-107">Convertit une chaîne qui a été encodée en HTML en vue d’une transmission HTML dans une chaîne décodée.</span><span class="sxs-lookup"><span data-stu-id="5d120-107">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="5d120-108">Chaîne décodée.</span><span class="sxs-lookup"><span data-stu-id="5d120-108">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d120-109">Si des caractères tels que des espaces et des signes de ponctuation sont passés dans un flux HTTP, il peuvent être mal interprétées à l’extrémité de réception.</span><span class="sxs-lookup"><span data-stu-id="5d120-109">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="5d120-110">L’encodage HTML convertit les caractères qui ne sont pas autorisés dans HTML en entités de caractères équivalentes ; Le décodage HTML inverse l’encodage.</span><span class="sxs-lookup"><span data-stu-id="5d120-110">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="5d120-111">Par exemple, lorsqu’il est incorporé dans un bloc de texte, les caractères `<` et `>` sont encodés en tant que `&lt;` et `&gt;` pour une transmission HTTP.</span><span class="sxs-lookup"><span data-stu-id="5d120-111">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="5d120-112">Si le `value` paramètre est `null`, alors la chaîne décodée retournée est `null`.</span><span class="sxs-lookup"><span data-stu-id="5d120-112">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="5d120-113">Si le `value` paramètre est une chaîne vide, la chaîne décodée retournée est une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="5d120-113">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5d120-114">Chaîne à décoder.</span><span class="sxs-lookup"><span data-stu-id="5d120-114">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="5d120-115">Flux <see cref="T:System.IO.TextWriter" /> de sortie.</span><span class="sxs-lookup"><span data-stu-id="5d120-115">A <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></param>
        <summary><span data-ttu-id="5d120-116">Convertit une chaîne qui a été encodée en HTML en chaîne décodée et envoie la chaîne décodée à un flux de sortie <see cref="T:System.IO.TextWriter" /> .</span><span class="sxs-lookup"><span data-stu-id="5d120-116">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d120-117">Si des caractères tels que des espaces et des signes de ponctuation sont passés dans un flux HTTP, il peuvent être mal interprétées à l’extrémité de réception.</span><span class="sxs-lookup"><span data-stu-id="5d120-117">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="5d120-118">L’encodage HTML convertit les caractères qui ne sont pas autorisés dans HTML en entités de caractères équivalentes ; Le décodage HTML inverse l’encodage.</span><span class="sxs-lookup"><span data-stu-id="5d120-118">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="5d120-119">Par exemple, lorsqu’il est incorporé dans un bloc de texte, les caractères `<` et `>` sont encodés en tant que `&lt;` et `&gt;` pour une transmission HTTP.</span><span class="sxs-lookup"><span data-stu-id="5d120-119">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5d120-120">Le paramètre <paramref name="output" /> ne peut pas être <see langword="null" /> si le paramètre <paramref name="value" /> n'est pas  <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5d120-120">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d120-121">Convertit une chaîne en une chaîne encodée au format HTML.</span><span class="sxs-lookup"><span data-stu-id="5d120-121">Converts a string to an HTML-encoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5d120-122">Chaîne à encoder.</span><span class="sxs-lookup"><span data-stu-id="5d120-122">The string to encode.</span></span></param>
        <summary><span data-ttu-id="5d120-123">Convertit une chaîne en une chaîne encodée au format HTML.</span><span class="sxs-lookup"><span data-stu-id="5d120-123">Converts a string to an HTML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="5d120-124">Chaîne encodée.</span><span class="sxs-lookup"><span data-stu-id="5d120-124">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d120-125">Si des caractères tels que des espaces et des signes de ponctuation sont passés dans un flux HTTP, il peuvent être mal interprétées à l’extrémité de réception.</span><span class="sxs-lookup"><span data-stu-id="5d120-125">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="5d120-126">L’encodage HTML convertit les caractères qui ne sont pas autorisés dans HTML en entités de caractères équivalentes ; Le décodage HTML inverse l’encodage.</span><span class="sxs-lookup"><span data-stu-id="5d120-126">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="5d120-127">Par exemple, lorsqu’il est incorporé dans un bloc de texte, les caractères `<` et `>` sont encodés en tant que `&lt;` et `&gt;` pour une transmission HTTP.</span><span class="sxs-lookup"><span data-stu-id="5d120-127">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="5d120-128">Si le `value` paramètre est `null`, alors la chaîne encodée retournée est `null`.</span><span class="sxs-lookup"><span data-stu-id="5d120-128">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="5d120-129">Si le `value` paramètre est une chaîne vide, la chaîne encodée retournée est une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="5d120-129">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="5d120-130">Comment : protéger contre les attaques de Script dans une Application Web en appliquant le codage HTML</span><span class="sxs-lookup"><span data-stu-id="5d120-130">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5d120-131">Chaîne à encoder.</span><span class="sxs-lookup"><span data-stu-id="5d120-131">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="5d120-132">Flux de sortie <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="5d120-132">A <see cref="T:System.IO.TextWriter" /> output stream.</span></span></param>
        <summary><span data-ttu-id="5d120-133">Convertit une chaîne en une chaîne encodée au format HTML, et retourne la sortie en tant que flux de sortie <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="5d120-133">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d120-134">Si des caractères tels que des espaces et des signes de ponctuation sont passés dans un flux HTTP, il peuvent être mal interprétées à l’extrémité de réception.</span><span class="sxs-lookup"><span data-stu-id="5d120-134">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="5d120-135">L’encodage HTML convertit les caractères qui ne sont pas autorisés dans HTML en entités de caractères équivalentes ; Le décodage HTML inverse l’encodage.</span><span class="sxs-lookup"><span data-stu-id="5d120-135">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="5d120-136">Par exemple, lorsqu’il est incorporé dans un bloc de texte, les caractères `<` et `>` sont encodés en tant que `&lt;` et `&gt;` pour une transmission HTTP.</span><span class="sxs-lookup"><span data-stu-id="5d120-136">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5d120-137">Le paramètre <paramref name="output" /> ne peut pas être <see langword="null" /> si le paramètre <paramref name="value" /> n'est pas  <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5d120-137">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="5d120-138">Comment : protéger contre les attaques de Script dans une Application Web en appliquant le codage HTML</span><span class="sxs-lookup"><span data-stu-id="5d120-138">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="5d120-139">Chaîne encodée en URL à décoder.</span><span class="sxs-lookup"><span data-stu-id="5d120-139">A URL-encoded string to decode.</span></span></param>
        <summary><span data-ttu-id="5d120-140">Convertit une chaîne qui a été encodée pour une transmission dans une URL en chaîne décodée.</span><span class="sxs-lookup"><span data-stu-id="5d120-140">Converts a string that has been encoded for transmission in a URL into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="5d120-141">Chaîne décodée.</span><span class="sxs-lookup"><span data-stu-id="5d120-141">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d120-142">Si des caractères tels que des espaces et des signes de ponctuation sont passés dans un flux HTTP, il peuvent être mal interprétées à l’extrémité de réception.</span><span class="sxs-lookup"><span data-stu-id="5d120-142">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="5d120-143">Encodage d’URL convertit des caractères qui ne sont pas autorisés dans une URL en séquences d’échappement hexadécimale équivalente.</span><span class="sxs-lookup"><span data-stu-id="5d120-143">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="5d120-144">Le <xref:System.Net.WebUtility.UrlEncode%2A> méthode crée une chaîne codée URL.</span><span class="sxs-lookup"><span data-stu-id="5d120-144">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="5d120-145">Décodage d’URL remplace les séquences d’échappement hexadécimales avec équivalents de caractère ASCII correspondants.</span><span class="sxs-lookup"><span data-stu-id="5d120-145">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="5d120-146">Par exemple, lorsqu’il est incorporé dans un bloc de texte encodé en URL, les séquences d’échappement `%3c` et `%3e` sont décodées en caractères `<` et `>`.</span><span class="sxs-lookup"><span data-stu-id="5d120-146">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="5d120-147">Tableau <see cref="T:System.Byte" /> encodé en URL à décoder.</span><span class="sxs-lookup"><span data-stu-id="5d120-147">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="offset"><span data-ttu-id="5d120-148">Offset, en octets, depuis le début du tableau <see cref="T:System.Byte" /> à décoder.</span><span class="sxs-lookup"><span data-stu-id="5d120-148">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="count"><span data-ttu-id="5d120-149">Nombre, en octets, à décoder depuis le tableau <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="5d120-149">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="5d120-150">Convertit un tableau d'octets encodé qui a été encodé pour être transmis dans une URL dans un tableau d'octets décodé.</span><span class="sxs-lookup"><span data-stu-id="5d120-150">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span></span></summary>
        <returns><span data-ttu-id="5d120-151">Tableau décodé <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="5d120-151">A decoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d120-152">Si des caractères tels que des espaces et des signes de ponctuation sont passés dans un flux HTTP, il peuvent être mal interprétées à l’extrémité de réception.</span><span class="sxs-lookup"><span data-stu-id="5d120-152">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="5d120-153">Encodage d’URL convertit des caractères qui ne sont pas autorisés dans une URL en séquences d’échappement hexadécimale équivalente.</span><span class="sxs-lookup"><span data-stu-id="5d120-153">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="5d120-154">Le <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> méthode crée un tableau d’octets encodé URL.</span><span class="sxs-lookup"><span data-stu-id="5d120-154">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="5d120-155">Décodage d’URL remplace les séquences d’échappement hexadécimales avec équivalents de caractère ASCII correspondants.</span><span class="sxs-lookup"><span data-stu-id="5d120-155">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="5d120-156">Par exemple, lorsqu’il est incorporé dans un bloc de texte encodé en URL, les séquences d’échappement `%3c` et `%3e` sont décodées en caractères `<` et `>`.</span><span class="sxs-lookup"><span data-stu-id="5d120-156">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5d120-157">Texte à encoder en URL.</span><span class="sxs-lookup"><span data-stu-id="5d120-157">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="5d120-158">Convertit une chaîne de texte en chaîne encodée en URL.</span><span class="sxs-lookup"><span data-stu-id="5d120-158">Converts a text string into a URL-encoded string.</span></span></summary>
        <returns><span data-ttu-id="5d120-159">Chaîne encodée en URL.</span><span class="sxs-lookup"><span data-stu-id="5d120-159">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d120-160">Si des caractères tels que des espaces et des signes de ponctuation sont passés dans un flux HTTP, il peuvent être mal interprétées à l’extrémité de réception.</span><span class="sxs-lookup"><span data-stu-id="5d120-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="5d120-161">L’encodage des URL remplace les caractères qui ne sont pas autorisés dans une URL avec des entités de caractères équivalentes consistant en séquences d’échappement hexadécimales.</span><span class="sxs-lookup"><span data-stu-id="5d120-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="5d120-162">La chaîne convertie est supposée se conformer au format UTF-8.</span><span class="sxs-lookup"><span data-stu-id="5d120-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="5d120-163">L’encodage des URL remplace tous les codes de caractère à l’exception des lettres, des chiffres et des caractères de ponctuation suivants :</span><span class="sxs-lookup"><span data-stu-id="5d120-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="5d120-164">`-` (signe moins)</span><span class="sxs-lookup"><span data-stu-id="5d120-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="5d120-165">`_` (trait de soulignement)</span><span class="sxs-lookup"><span data-stu-id="5d120-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="5d120-166">`.` (période)</span><span class="sxs-lookup"><span data-stu-id="5d120-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="5d120-167">`!` (point d’exclamation)</span><span class="sxs-lookup"><span data-stu-id="5d120-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="5d120-168">`*` (astérisque)</span><span class="sxs-lookup"><span data-stu-id="5d120-168">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="5d120-169">`(` et `)` (parenthèses ouvrantes et fermantes)</span><span class="sxs-lookup"><span data-stu-id="5d120-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="5d120-170">Par exemple, lorsqu’il est incorporé dans un bloc de texte à transmettre dans une URL, les caractères `<` et `>` sont encodés en tant que `%3c` et `%3e`.</span><span class="sxs-lookup"><span data-stu-id="5d120-170">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="5d120-171">Le <xref:System.Net.WebUtility.UrlDecode%2A> méthode inverse l’encodage.</span><span class="sxs-lookup"><span data-stu-id="5d120-171">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5d120-172">Tableau <see cref="T:System.Byte" /> à encoder au format URL.</span><span class="sxs-lookup"><span data-stu-id="5d120-172">The <see cref="T:System.Byte" /> array to URL-encode.</span></span></param>
        <param name="offset"><span data-ttu-id="5d120-173">Offset, en octets, depuis le début du tableau <see cref="T:System.Byte" /> à encoder.</span><span class="sxs-lookup"><span data-stu-id="5d120-173">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span></span></param>
        <param name="count"><span data-ttu-id="5d120-174">Nombre, en octets, à encoder depuis le tableau <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="5d120-174">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="5d120-175">Convertit un tableau d'octets en tableau d'octets encodé URL.</span><span class="sxs-lookup"><span data-stu-id="5d120-175">Converts a byte array into a URL-encoded byte array.</span></span></summary>
        <returns><span data-ttu-id="5d120-176">Tableau <see cref="T:System.Byte" /> encodé.</span><span class="sxs-lookup"><span data-stu-id="5d120-176">An encoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d120-177">Si des caractères tels que des espaces et des signes de ponctuation sont passés dans un flux HTTP, il peuvent être mal interprétées à l’extrémité de réception.</span><span class="sxs-lookup"><span data-stu-id="5d120-177">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="5d120-178">L’encodage des URL remplace les caractères qui ne sont pas autorisés dans une URL avec des entités de caractères équivalentes consistant en séquences d’échappement hexadécimales.</span><span class="sxs-lookup"><span data-stu-id="5d120-178">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="5d120-179">La chaîne convertie est supposée se conformer au format UTF-8.</span><span class="sxs-lookup"><span data-stu-id="5d120-179">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="5d120-180">L’encodage des URL remplace tous les codes de caractère à l’exception des lettres, des chiffres et des caractères de ponctuation suivants :</span><span class="sxs-lookup"><span data-stu-id="5d120-180">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="5d120-181">`-` (signe moins)</span><span class="sxs-lookup"><span data-stu-id="5d120-181">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="5d120-182">`_` (trait de soulignement)</span><span class="sxs-lookup"><span data-stu-id="5d120-182">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="5d120-183">`.` (période)</span><span class="sxs-lookup"><span data-stu-id="5d120-183">`.` (period)</span></span>  
  
-   <span data-ttu-id="5d120-184">`!` (point d’exclamation)</span><span class="sxs-lookup"><span data-stu-id="5d120-184">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="5d120-185">`*` (astérisque)</span><span class="sxs-lookup"><span data-stu-id="5d120-185">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="5d120-186">`'` (guillemet-apostrophe)</span><span class="sxs-lookup"><span data-stu-id="5d120-186">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="5d120-187">`(` et `)` (parenthèses ouvrantes et fermantes)</span><span class="sxs-lookup"><span data-stu-id="5d120-187">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="5d120-188">Par exemple, lorsqu’il est incorporé dans un bloc de texte à transmettre dans une URL, les caractères `<` et `>` sont encodés en tant que `%3c` et `%3e`.</span><span class="sxs-lookup"><span data-stu-id="5d120-188">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="5d120-189">Le <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> méthode inverse l’encodage.</span><span class="sxs-lookup"><span data-stu-id="5d120-189">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>