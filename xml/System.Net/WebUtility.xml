<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c196e-101">Fournit des méthodes de codage et décodage d'URL pendant le traitement des requêtes web.</span><span class="sxs-lookup"><span data-stu-id="c196e-101">Provides methods for encoding and decoding URLs when processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c196e-102">La <xref:System.Web.HttpUtility> classe contient le codage et décodage des méthodes utilitaires pour une utilisation avec les chaînes encodées en HTML.</span><span class="sxs-lookup"><span data-stu-id="c196e-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="c196e-103">La <xref:System.Uri?displayProperty=nameWithType> classe contient également des méthodes et propriétés qui peuvent être utilisées pour des raisons similaires.</span><span class="sxs-lookup"><span data-stu-id="c196e-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c196e-104">Convertit une chaîne qui a été encodée en HTML en vue d’une transmission HTML dans une chaîne décodée.</span><span class="sxs-lookup"><span data-stu-id="c196e-104">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c196e-105">Chaîne à décoder.</span><span class="sxs-lookup"><span data-stu-id="c196e-105">The string to decode.</span></span></param>
        <summary><span data-ttu-id="c196e-106">Convertit une chaîne qui a été encodée en HTML en vue d’une transmission HTML dans une chaîne décodée.</span><span class="sxs-lookup"><span data-stu-id="c196e-106">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="c196e-107">Chaîne décodée.</span><span class="sxs-lookup"><span data-stu-id="c196e-107">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c196e-108">Si des caractères tels que des espaces blancs et signes de ponctuation sont passés dans un flux HTTP, ils peuvent être mal interprétés à la fin de réception.</span><span class="sxs-lookup"><span data-stu-id="c196e-108">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c196e-109">L’encodage HTML convertit des caractères qui ne sont pas autorisés dans le code HTML en équivalents d’entités de caractères ; Le décodage HTML inverse l’encodage.</span><span class="sxs-lookup"><span data-stu-id="c196e-109">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="c196e-110">Par exemple, lorsqu’il est incorporé dans un bloc de texte, les caractères \< et > sont encodés sous &lt; et &gt; pour une transmission HTTP.</span><span class="sxs-lookup"><span data-stu-id="c196e-110">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 <span data-ttu-id="c196e-111">Si le `value` paramètre est `null`, alors la chaîne décodée retournée est `null`.</span><span class="sxs-lookup"><span data-stu-id="c196e-111">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="c196e-112">Si le `value` paramètre est une chaîne vide, la chaîne décodée retournée est une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="c196e-112">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c196e-113">Chaîne à décoder.</span><span class="sxs-lookup"><span data-stu-id="c196e-113">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="c196e-114">Flux <see cref="T:System.IO.TextWriter" /> de sortie.</span><span class="sxs-lookup"><span data-stu-id="c196e-114">A <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></param>
        <summary><span data-ttu-id="c196e-115">Convertit une chaîne qui a été encodée en HTML en chaîne décodée et envoie la chaîne décodée à un flux de sortie <see cref="T:System.IO.TextWriter" /> .</span><span class="sxs-lookup"><span data-stu-id="c196e-115">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c196e-116">Si des caractères tels que des espaces blancs et signes de ponctuation sont passés dans un flux HTTP, ils peuvent être mal interprétés à la fin de réception.</span><span class="sxs-lookup"><span data-stu-id="c196e-116">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c196e-117">L’encodage HTML convertit des caractères qui ne sont pas autorisés dans le code HTML en équivalents d’entités de caractères ; Le décodage HTML inverse l’encodage.</span><span class="sxs-lookup"><span data-stu-id="c196e-117">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="c196e-118">Par exemple, lorsqu’il est incorporé dans un bloc de texte, les caractères \< et > sont encodés sous &lt; et &gt; pour une transmission HTTP.</span><span class="sxs-lookup"><span data-stu-id="c196e-118">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c196e-119">Le paramètre <paramref name="output" /> ne peut pas être <see langword="null" /> si le paramètre <paramref name="value" /> n'est pas  <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c196e-119">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c196e-120">Convertit une chaîne en une chaîne encodée au format HTML.</span><span class="sxs-lookup"><span data-stu-id="c196e-120">Converts a string to an HTML-encoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c196e-121">Chaîne à encoder.</span><span class="sxs-lookup"><span data-stu-id="c196e-121">The string to encode.</span></span></param>
        <summary><span data-ttu-id="c196e-122">Convertit une chaîne en une chaîne encodée au format HTML.</span><span class="sxs-lookup"><span data-stu-id="c196e-122">Converts a string to an HTML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="c196e-123">Chaîne encodée.</span><span class="sxs-lookup"><span data-stu-id="c196e-123">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c196e-124">Si des caractères tels que des espaces blancs et signes de ponctuation sont passés dans un flux HTTP, ils peuvent être mal interprétés à la fin de réception.</span><span class="sxs-lookup"><span data-stu-id="c196e-124">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c196e-125">L’encodage HTML convertit des caractères qui ne sont pas autorisés dans le code HTML en équivalents d’entités de caractères ; Le décodage HTML inverse l’encodage.</span><span class="sxs-lookup"><span data-stu-id="c196e-125">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="c196e-126">Par exemple, lorsqu’il est incorporé dans un bloc de texte, les caractères \< et > sont encodés sous &lt; et &gt; pour une transmission HTTP.</span><span class="sxs-lookup"><span data-stu-id="c196e-126">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 <span data-ttu-id="c196e-127">Si le `value` paramètre est `null`, alors la chaîne encodée retournée est `null`.</span><span class="sxs-lookup"><span data-stu-id="c196e-127">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="c196e-128">Si le `value` paramètre est une chaîne vide, la chaîne encodée retournée est une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="c196e-128">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c196e-129">Chaîne à encoder.</span><span class="sxs-lookup"><span data-stu-id="c196e-129">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="c196e-130">Flux de sortie <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="c196e-130">A <see cref="T:System.IO.TextWriter" /> output stream.</span></span></param>
        <summary><span data-ttu-id="c196e-131">Convertit une chaîne en une chaîne encodée au format HTML, et retourne la sortie en tant que flux de sortie <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="c196e-131">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c196e-132">Si des caractères tels que des espaces blancs et signes de ponctuation sont passés dans un flux HTTP, ils peuvent être mal interprétés à la fin de réception.</span><span class="sxs-lookup"><span data-stu-id="c196e-132">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c196e-133">L’encodage HTML convertit des caractères qui ne sont pas autorisés dans le code HTML en équivalents d’entités de caractères ; Le décodage HTML inverse l’encodage.</span><span class="sxs-lookup"><span data-stu-id="c196e-133">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="c196e-134">Par exemple, lorsqu’il est incorporé dans un bloc de texte, les caractères \< et >, sont encodés sous &lt; et &gt; pour une transmission HTTP.</span><span class="sxs-lookup"><span data-stu-id="c196e-134">For example, when embedded in a block of text, the characters \< and >, are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c196e-135">Le paramètre <paramref name="output" /> ne peut pas être <see langword="null" /> si le paramètre <paramref name="value" /> n'est pas  <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c196e-135">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="c196e-136">Chaîne encodée en URL à décoder.</span><span class="sxs-lookup"><span data-stu-id="c196e-136">A URL-encoded string to decode.</span></span></param>
        <summary><span data-ttu-id="c196e-137">Convertit une chaîne qui a été encodée pour une transmission dans une URL en chaîne décodée.</span><span class="sxs-lookup"><span data-stu-id="c196e-137">Converts a string that has been encoded for transmission in a URL into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="c196e-138">Retourne <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="c196e-138">Returns <see cref="T:System.String" />.</span></span>  
  
 <span data-ttu-id="c196e-139">Chaîne décodée.</span><span class="sxs-lookup"><span data-stu-id="c196e-139">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c196e-140">Si des caractères tels que des espaces blancs et signes de ponctuation sont passés dans un flux HTTP, ils peuvent être mal interprétés à la fin de réception.</span><span class="sxs-lookup"><span data-stu-id="c196e-140">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c196e-141">L’encodage d’URL convertit des caractères qui ne sont pas autorisés dans une URL en séquences d’échappement hexadécimales équivalentes.</span><span class="sxs-lookup"><span data-stu-id="c196e-141">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="c196e-142">Le <xref:System.Net.WebUtility.UrlEncode%2A> méthode crée une chaîne codée URL.</span><span class="sxs-lookup"><span data-stu-id="c196e-142">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="c196e-143">Le décodage d’URL remplace les séquences d’échappement hexadécimales avec les équivalents de caractère ASCII correspondants.</span><span class="sxs-lookup"><span data-stu-id="c196e-143">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="c196e-144">Par exemple, lorsqu’il est incorporé dans un bloc de texte encodé en URL, les séquences d’échappement `%3c` et `%3e` sont décodées en caractères `<` et `>`.</span><span class="sxs-lookup"><span data-stu-id="c196e-144">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="c196e-145">Tableau <see cref="T:System.Byte" /> encodé en URL à décoder.</span><span class="sxs-lookup"><span data-stu-id="c196e-145">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="offset"><span data-ttu-id="c196e-146">Offset, en octets, depuis le début du tableau <see cref="T:System.Byte" /> à décoder.</span><span class="sxs-lookup"><span data-stu-id="c196e-146">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="count"><span data-ttu-id="c196e-147">Nombre, en octets, à décoder depuis le tableau <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="c196e-147">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="c196e-148">Convertit un tableau d'octets encodé qui a été encodé pour être transmis dans une URL dans un tableau d'octets décodé.</span><span class="sxs-lookup"><span data-stu-id="c196e-148">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span></span></summary>
        <returns><span data-ttu-id="c196e-149">Retourne <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="c196e-149">Returns <see cref="T:System.Byte" />.</span></span>  
  
 <span data-ttu-id="c196e-150">Tableau décodé <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="c196e-150">A decoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c196e-151">Si des caractères tels que des espaces blancs et signes de ponctuation sont passés dans un flux HTTP, ils peuvent être mal interprétés à la fin de réception.</span><span class="sxs-lookup"><span data-stu-id="c196e-151">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c196e-152">L’encodage d’URL convertit des caractères qui ne sont pas autorisés dans une URL en séquences d’échappement hexadécimales équivalentes.</span><span class="sxs-lookup"><span data-stu-id="c196e-152">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="c196e-153">Le <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> méthode crée un tableau d’octets encodé en URL.</span><span class="sxs-lookup"><span data-stu-id="c196e-153">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="c196e-154">Le décodage d’URL remplace les séquences d’échappement hexadécimales avec les équivalents de caractère ASCII correspondants.</span><span class="sxs-lookup"><span data-stu-id="c196e-154">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="c196e-155">Par exemple, lorsqu’il est incorporé dans un bloc de texte encodé en URL, les séquences d’échappement `%3c` et `%3e` sont décodées en caractères `<` et `>`.</span><span class="sxs-lookup"><span data-stu-id="c196e-155">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c196e-156">Texte à encoder en URL.</span><span class="sxs-lookup"><span data-stu-id="c196e-156">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="c196e-157">Convertit une chaîne de texte en chaîne encodée en URL.</span><span class="sxs-lookup"><span data-stu-id="c196e-157">Converts a text string into a URL-encoded string.</span></span></summary>
        <returns><span data-ttu-id="c196e-158">Retourne <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="c196e-158">Returns <see cref="T:System.String" />.</span></span>  
  
 <span data-ttu-id="c196e-159">Chaîne encodée en URL.</span><span class="sxs-lookup"><span data-stu-id="c196e-159">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c196e-160">Si des caractères tels que des espaces blancs et signes de ponctuation sont passés dans un flux HTTP, ils peuvent être mal interprétés à la fin de réception.</span><span class="sxs-lookup"><span data-stu-id="c196e-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c196e-161">L’encodage d’URL remplace les caractères qui ne sont pas autorisés dans une URL avec des entités de caractères équivalentes consistant en séquences d’échappement hexadécimales.</span><span class="sxs-lookup"><span data-stu-id="c196e-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="c196e-162">La chaîne convertie est censée être conforme au format UTF-8.</span><span class="sxs-lookup"><span data-stu-id="c196e-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="c196e-163">L’encodage d’URL remplace tous les codes de caractère à l’exception des lettres, des chiffres et caractères de ponctuation suivants :</span><span class="sxs-lookup"><span data-stu-id="c196e-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="c196e-164">`-` (signe moins)</span><span class="sxs-lookup"><span data-stu-id="c196e-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="c196e-165">`_` (caractère de soulignement)</span><span class="sxs-lookup"><span data-stu-id="c196e-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="c196e-166">`.` (point)</span><span class="sxs-lookup"><span data-stu-id="c196e-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="c196e-167">`!` (point d’exclamation)</span><span class="sxs-lookup"><span data-stu-id="c196e-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="c196e-168">\* (astérisque)</span><span class="sxs-lookup"><span data-stu-id="c196e-168">\* (asterisk)</span></span>  
  
-   <span data-ttu-id="c196e-169">`(` et `)` (parenthèses ouvrante et fermante)</span><span class="sxs-lookup"><span data-stu-id="c196e-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="c196e-170">Par exemple, lorsqu’il est incorporé dans un bloc de texte à transmettre dans une URL, les caractères `<` et `>` sont encodés sous `%3c` et `%3e`.</span><span class="sxs-lookup"><span data-stu-id="c196e-170">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="c196e-171">Le <xref:System.Net.WebUtility.UrlDecode%2A> méthode inverse l’encodage.</span><span class="sxs-lookup"><span data-stu-id="c196e-171">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c196e-172">Tableau <see cref="T:System.Byte" /> à encoder au format URL.</span><span class="sxs-lookup"><span data-stu-id="c196e-172">The <see cref="T:System.Byte" /> array to URL-encode.</span></span></param>
        <param name="offset"><span data-ttu-id="c196e-173">Offset, en octets, depuis le début du tableau <see cref="T:System.Byte" /> à encoder.</span><span class="sxs-lookup"><span data-stu-id="c196e-173">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span></span></param>
        <param name="count"><span data-ttu-id="c196e-174">Nombre, en octets, à encoder depuis le tableau <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="c196e-174">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="c196e-175">Convertit un tableau d'octets en tableau d'octets encodé URL.</span><span class="sxs-lookup"><span data-stu-id="c196e-175">Converts a byte array into a URL-encoded byte array.</span></span></summary>
        <returns><span data-ttu-id="c196e-176">Retourne <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="c196e-176">Returns <see cref="T:System.Byte" />.</span></span>  
  
 <span data-ttu-id="c196e-177">Tableau <see cref="T:System.Byte" /> encodé.</span><span class="sxs-lookup"><span data-stu-id="c196e-177">An encoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c196e-178">Si des caractères tels que des espaces blancs et signes de ponctuation sont passés dans un flux HTTP, ils peuvent être mal interprétés à la fin de réception.</span><span class="sxs-lookup"><span data-stu-id="c196e-178">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c196e-179">L’encodage d’URL remplace les caractères qui ne sont pas autorisés dans une URL avec des entités de caractères équivalentes consistant en séquences d’échappement hexadécimales.</span><span class="sxs-lookup"><span data-stu-id="c196e-179">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="c196e-180">La chaîne convertie est censée être conforme au format UTF-8.</span><span class="sxs-lookup"><span data-stu-id="c196e-180">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="c196e-181">L’encodage d’URL remplace tous les codes de caractère à l’exception des lettres, des chiffres et caractères de ponctuation suivants :</span><span class="sxs-lookup"><span data-stu-id="c196e-181">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="c196e-182">`-` (signe moins)</span><span class="sxs-lookup"><span data-stu-id="c196e-182">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="c196e-183">`_` (caractère de soulignement)</span><span class="sxs-lookup"><span data-stu-id="c196e-183">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="c196e-184">`.` (point)</span><span class="sxs-lookup"><span data-stu-id="c196e-184">`.` (period)</span></span>  
  
-   <span data-ttu-id="c196e-185">`!` (point d’exclamation)</span><span class="sxs-lookup"><span data-stu-id="c196e-185">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="c196e-186">« \* » (astérisque)</span><span class="sxs-lookup"><span data-stu-id="c196e-186">'\*' (asterisk)</span></span>  
  
-   <span data-ttu-id="c196e-187">`'` (guillemet-apostrophe)</span><span class="sxs-lookup"><span data-stu-id="c196e-187">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="c196e-188">`(` et `)` (parenthèses ouvrante et fermante)</span><span class="sxs-lookup"><span data-stu-id="c196e-188">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="c196e-189">Par exemple, lorsqu’il est incorporé dans un bloc de texte à transmettre dans une URL, les caractères `<` et `>` sont encodés sous `%3c` et `%3e`.</span><span class="sxs-lookup"><span data-stu-id="c196e-189">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="c196e-190">Le <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> méthode inverse l’encodage.</span><span class="sxs-lookup"><span data-stu-id="c196e-190">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>