<Type Name="IAuthenticationModule" FullName="System.Net.IAuthenticationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d54d19e127f46c16df84529790dcfaf0f6146e95" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36472290" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAuthenticationModule" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthenticationModule" />
  <TypeSignature Language="DocId" Value="T:System.Net.IAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthenticationModule" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthenticationModule" />
  <TypeSignature Language="F#" Value="type IAuthenticationModule = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fournit l'interface d'authentification de base pour les modules d'authentification de clients Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.IAuthenticationModule> interface définit les propriétés et les méthodes qui utilisent des modules d’authentification personnalisés.  
  
 Modules d’authentification exécutent le processus d’authentification avec un serveur de répondre à une stimulation d’authentification comme il convient. Ce processus peut se composer de demandes à un serveur d’authentification distinct à partir du serveur de ressources, ainsi que toutes les autres activités requises pour authentifier correctement une demande pour un URI.  
  
 Modules d’authentification personnalisés doivent implémenter le <xref:System.Net.IAuthenticationModule> de l’interface, puis enregistrer avec le <xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType> (méthode). Modules d’authentification sont également inscrits à l’initialisation du programme en lisant le fichier de configuration.  
  
   
  
## Examples  
 L’exemple suivant crée crée une classe d’authentification personnalisée en implémentant la <xref:System.Net.IAuthenticationModule> interface. Pour obtenir un exemple complet, consultez la <xref:System.Net.AuthenticationManager> classe.  
  
 [!code-cpp[System.Net.Authentication#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#6)]
 [!code-csharp[System.Net.Authentication#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#6)]
 [!code-vb[System.Net.Authentication#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.AuthenticationManager" />
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="abstract member Authenticate : string * System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="iAuthenticationModule.Authenticate (challenge, request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge">Stimulation d'authentification émanant du serveur.</param>
        <param name="request">Instance de <see cref="T:System.Net.WebRequest" /> associée à la stimulation.</param>
        <param name="credentials">Informations d'identification associées à la stimulation.</param>
        <summary>Retourne une instance de la classe <see cref="T:System.Net.Authorization" /> suite à une stimulation d'authentification émanant d'un serveur.</summary>
        <returns>Une instance de <see cref="T:System.Net.Authorization" /> qui contient le message d'autorisation pour la demande, ou <see langword="null" /> si la stimulation ne peut pas être traitée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.IAuthenticationModule.Authenticate%2A> méthode exécute le processus d’authentification avec le serveur et retourne un <xref:System.Net.Authorization> d’instance pour le <xref:System.Net.AuthenticationManager>.  
  
   
  
## Examples  
 L'exemple suivant illustre l'utilisation de la méthode <xref:System.Net.IAuthenticationModule.Authenticate%2A>. Pour obtenir un exemple complet, consultez la <xref:System.Net.AuthenticationManager> classe.  
  
 [!code-cpp[System.Net.Authentication#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#3)]
 [!code-csharp[System.Net.Authentication#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#3)]
 [!code-vb[System.Net.Authentication#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le <see cref="T:System.Net.AuthenticationManager" /> appelle la <see cref="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" /> méthode sur les modules d’authentification inscrits pour déterminer quel module traite la demande. Si le module d’authentification ne peut pas traiter la demande, le <see cref="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" /> méthode doit retourner <see langword="null" />. Si le module d’authentification rencontre une erreur pendant le processus d’authentification, <see cref="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" /> doit lever une exception.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Net.IAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Net.IAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type d'authentification fourni par ce module d'authentification.</summary>
        <value>Chaîne indiquant le type d'authentification fourni par ce module d'authentification.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> propriété identifie le type d’authentification implémenté par ce module d’authentification. Le <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> propriété est utilisée par le <xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType> méthode pour déterminer si le module d’authentification a été inscrit et par la <xref:System.Net.AuthenticationManager.Unregister%2A?displayProperty=nameWithType> méthode pour supprimer un module d’authentification inscrit.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Net.IAuthenticationModule.AuthenticationType%2A>. Pour obtenir un exemple complet, consultez la <xref:System.Net.AuthenticationManager> classe.  
  
 [!code-cpp[System.Net.Authentication#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#7)]
 [!code-csharp[System.Net.Authentication#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#7)]
 [!code-vb[System.Net.Authentication#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPreAuthenticate">
      <MemberSignature Language="C#" Value="public bool CanPreAuthenticate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.IAuthenticationModule.CanPreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPreAuthenticate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPreAuthenticate : bool" Usage="System.Net.IAuthenticationModule.CanPreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le module d'authentification prend en charge la pré-authentification.</summary>
        <value>
          <see langword="true" /> si le module d'authentification prend en charge la pré-authentification ; sinon <see langword="false" /> .</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A> est définie sur `true` pour indiquer que le module d’authentification peut répondre avec valide <xref:System.Net.Authorization> instance lorsque la <xref:System.Net.IAuthenticationModule.PreAuthenticate%2A> méthode est appelée.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A>. Pour obtenir un exemple complet, consultez la <xref:System.Net.AuthenticationManager> classe.  
  
 [!code-cpp[System.Net.Authentication#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#7)]
 [!code-csharp[System.Net.Authentication#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#7)]
 [!code-vb[System.Net.Authentication#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Il s’agit généralement d’une valeur fixe ; le module d’authentification peut effectuer la pré-authentification, soit il ne peut pas.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="abstract member PreAuthenticate : System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="iAuthenticationModule.PreAuthenticate (request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request">Instance de <see cref="T:System.Net.WebRequest" /> associée à la demande d'authentification.</param>
        <param name="credentials">Informations d'identification associées à la demande d'authentification.</param>
        <summary>Retourne une instance de la classe <see cref="T:System.Net.Authorization" /> pour une demande d'authentification adressée à un serveur.</summary>
        <returns>Instance de <see cref="T:System.Net.Authorization" /> contenant le message d'autorisation lié à la demande.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A> propriété est `true`, le <xref:System.Net.IAuthenticationModule.PreAuthenticate%2A> méthode retourne une instance de la <xref:System.Net.Authorization> classe contenant un message d’authentification.  
  
   
  
## Examples  
 L'exemple suivant illustre l'utilisation de la méthode <xref:System.Net.IAuthenticationModule.PreAuthenticate%2A>. Pour obtenir un exemple complet, consultez la <xref:System.Net.AuthenticationManager> classe.  
  
 [!code-cpp[System.Net.Authentication#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#4)]
 [!code-csharp[System.Net.Authentication#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#4)]
 [!code-vb[System.Net.Authentication#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>