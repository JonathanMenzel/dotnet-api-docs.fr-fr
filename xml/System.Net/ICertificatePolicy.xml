<Type Name="ICertificatePolicy" FullName="System.Net.ICertificatePolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e22ececec19ee5a1e71dac9a71f6d12a4ac55b3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37643062" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICertificatePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICertificatePolicy" />
  <TypeSignature Language="DocId" Value="T:System.Net.ICertificatePolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICertificatePolicy" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICertificatePolicy" />
  <TypeSignature Language="F#" Value="type ICertificatePolicy = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Valide un certificat de serveur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.ICertificatePolicy> interface est utilisée pour fournir la validation de certificat de sécurité personnalisé pour une application. La stratégie par défaut consiste à autoriser les certificats valides, ainsi que les certificats valides qui ont expiré. Pour modifier cette stratégie, vous devez implémenter le <xref:System.Net.ICertificatePolicy> créent une interface avec une stratégie différente et ensuite affecter cette stratégie à <xref:System.Net.ServicePointManager.CertificatePolicy%2A?displayProperty=nameWithType>.  
  
 <xref:System.Net.ICertificatePolicy> utilise la prise en charge Interface SSPI (Security Provider). Pour plus d’informations, consultez la documentation de SSPI sur MSDN.  
  
   
  
## Examples  
 L’exemple suivant crée une stratégie de certificat qui retourne `false` pour tout problème de certificat et imprime un message qui indique le problème dans la console. L’enum CertificateProblem définit les constantes SSPI pour les problèmes de certificat, et la méthode GetProblemMessage privée crée un message sur le problème.  
  
 [!code-cpp[Classic ICertificatePolicy Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic ICertificatePolicy Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ICertificatePolicy Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic ICertificatePolicy Example/CS/source.cs#1)]
 [!code-vb[Classic ICertificatePolicy Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic ICertificatePolicy Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckValidationResult">
      <MemberSignature Language="C#" Value="public bool CheckValidationResult (System.Net.ServicePoint srvPoint, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Net.WebRequest request, int certificateProblem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckValidationResult(class System.Net.ServicePoint srvPoint, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Net.WebRequest request, int32 certificateProblem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ICertificatePolicy.CheckValidationResult(System.Net.ServicePoint,System.Security.Cryptography.X509Certificates.X509Certificate,System.Net.WebRequest,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckValidationResult (srvPoint As ServicePoint, certificate As X509Certificate, request As WebRequest, certificateProblem As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckValidationResult(System::Net::ServicePoint ^ srvPoint, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Net::WebRequest ^ request, int certificateProblem);" />
      <MemberSignature Language="F#" Value="abstract member CheckValidationResult : System.Net.ServicePoint * System.Security.Cryptography.X509Certificates.X509Certificate * System.Net.WebRequest * int -&gt; bool" Usage="iCertificatePolicy.CheckValidationResult (srvPoint, certificate, request, certificateProblem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srvPoint" Type="System.Net.ServicePoint" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="certificateProblem" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="srvPoint">
          <see cref="T:System.Net.ServicePoint" /> qui utilisera le certificat.</param>
        <param name="certificate">Certificat à valider.</param>
        <param name="request">Demande qui a reçu le certificat.</param>
        <param name="certificateProblem">Problème qui a été rencontré lors de l'utilisation du certificat.</param>
        <summary>Valide un certificat de serveur.</summary>
        <returns>
          <see langword="true" /> si le certificat doit être respecté ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.ICertificatePolicy.CheckValidationResult%2A> méthode implémente la stratégie de validation de certificat application. Cette méthode peut examiner le `srvPoint`, `certificate`, `request`, et `certificateProblem` paramètres pour déterminer si le certificat doit être respecté.  
  
 Le `certificateProblem` paramètre est un code d’état de prise en charge Interface SSPI (Security Provider). Pour plus d’informations, consultez la documentation de SSPI sur MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>