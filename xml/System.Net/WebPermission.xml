<Type Name="WebPermission" FullName="System.Net.WebPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="055b074e37f1c8571744282bc05d47a7300a6c16" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52379742" /></Metadata><TypeSignature Language="C#" Value="public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit WebPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type WebPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contrôle les droits d'accès à des ressources Internet HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission> fournit un ensemble de méthodes et propriétés pour contrôler l’accès aux ressources Internet. Vous pouvez utiliser un <xref:System.Net.WebPermission> pour fournir un accès restreint ou sans restriction à votre ressource, selon le <xref:System.Security.Permissions.PermissionState> qui est définie lorsque le <xref:System.Net.WebPermission> est créé.  
  
 Créer un <xref:System.Net.WebPermission> instance en appelant son constructeur à l’aide d’une de ces ensembles de paramètres :  
  
-   Aucun paramètre. Le <xref:System.Security.Permissions.PermissionState> par défaut correspond à <xref:System.Security.Permissions.PermissionState.None>.  
  
-   <xref:System.Security.Permissions.PermissionState> Spécifiez soit <xref:System.Security.Permissions.PermissionState.Unrestricted> pour autoriser n’importe quel URI à utiliser dans la classe cible, ou <xref:System.Security.Permissions.PermissionState.None> pour autoriser l’accès uniquement aux URI que vous spécifiez à l’aide de la <xref:System.Net.WebPermission.AddPermission%2A> (méthode).  
  
-   Un <xref:System.Net.NetworkAccess> valeur et une chaîne URI. L’URI spécifié a des autorisations accordées par le <xref:System.Net.NetworkAccess> valeur.  
  
-   Un <xref:System.Net.NetworkAccess> spécificateur et expression régulière d’URI.  
  
 Le <xref:System.Net.WebPermission.ConnectList%2A> et <xref:System.Net.WebPermission.AcceptList%2A> contiennent les URI pour lesquels vous avez accordé l’autorisation d’accès. Pour ajouter un URI à une de ces listes, utilisez <xref:System.Net.WebPermission.AddPermission%2A>. Si vous transmettez <xref:System.Net.NetworkAccess.Accept> en tant que le <xref:System.Net.NetworkAccess> paramètre, l’URI sera ajouté à la <xref:System.Net.WebPermission.AcceptList%2A>. <xref:System.Net.WebPermission> autorise les connexions à votre classe cible avec des URI correspondant à la <xref:System.Net.WebPermission.AcceptList%2A>.  
  
> [!CAUTION]
>  Pour refuser l’accès à une ressource Internet, vous devez refuser l’accès à tous les chemins d’accès possibles à cette ressource. Cela nécessite l’appel <xref:System.Net.WebPermission.%23ctor%2A?displayProperty=nameWithType> avec le paramètre d’état la valeur <xref:System.Security.CodeAccessPermission.Deny%2A>. Une meilleure approche consiste à autoriser l’accès à la ressource spécifique uniquement. Pour plus d’informations sur ce sujet, reportez-vous à la [NIB : à l’aide de la méthode Deny](https://msdn.microsoft.com/library/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25) rubrique.  
  
> [!NOTE]
>  Vous devez refuser l’accès à l’aide uniquement la ressource chemin d’accès canonique. Il est inutile d’utiliser les variantes syntaxiques de tous le chemin d’accès.  
  
> [!NOTE]
>  Informations de port par défaut et le nom d’utilisateur sont supprimées de la <xref:System.Uri> avant la comparaison avec l’argument d’expression régulière qui est fourni à la <xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> constructeur. Si l’expression régulière contient des informations utilisateur ou le numéro de port par défaut, puis toutes les entrant <xref:System.Uri>s ne parviendra pas à correspondre à l’expression régulière.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer une nouvelle instance de <xref:System.Net.WebPermission> à l’aide un <xref:System.Text.RegularExpressions.Regex>. Des hôtes supplémentaires sont ajoutées pour vous connecter et accepter la liste des <xref:System.Net.WebPermission>. Enfin, la connexion et accepter la liste sont affichés dans la console.  
  
 [!code-cpp[WebPermission_Regex#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Regex/CPP/regex.cpp#1)]
 [!code-csharp[WebPermission_Regex#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Regex/CS/regex.cs#1)]
 [!code-vb[WebPermission_Regex#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Regex/VB/regex.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.CodeAccessPermission" />
    <altmember cref="T:System.Security.Permissions.PermissionState" />
    <altmember cref="T:System.Net.NetworkAccess" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée une instance de la classe <see cref="T:System.Net.WebPermission" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crée une instance de la classe <see cref="T:System.Net.WebPermission" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crée une instance de la classe <xref:System.Net.WebPermission>. Ce constructeur crée une autorisation vide qui n’accorde aucun droit.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.IsUnrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Security.Permissions.PermissionState -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Valeur <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        <summary>Crée une nouvelle instance de la classe <see cref="T:System.Net.WebPermission" /> qui fait aboutir ou échouer toutes les demandes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la `state` paramètre est soit <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType> ou <xref:System.Security.Permissions.PermissionState.Unrestricted?displayProperty=nameWithType>respectivement cédant complètement restreint ou entièrement un accès non restreint à toutes les variables de sécurité. Si vous spécifiez <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>, puis vous pouvez donner accès à des URI à l’aide de <xref:System.Net.WebPermission.AddPermission%2A>.  
  
   
  
## Examples  
 L’exemple suivant crée une instance de <xref:System.Net.WebPermission> et permet de droits d’accès à des URL spécifiques.  
  
 [!code-cpp[WebPermission_Copy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#1)]
 [!code-csharp[WebPermission_Copy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#1)]
 [!code-vb[WebPermission_Copy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.PermissionState.Unrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (access As NetworkAccess, uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Net::NetworkAccess access, System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Net.NetworkAccess * string -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission (access, uriString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">Valeur NetworkAccess qui indique le type d'accès à accorder à l'URI spécifié. <see cref="F:System.Net.NetworkAccess.Accept" /> indique que l'application est autorisée à accepter les connexions provenant d'Internet sur une ressource locale. <see cref="F:System.Net.NetworkAccess.Connect" /> indique que l'application est autorisée à se connecter à des ressources spécifiques sur Internet.</param>
        <param name="uriString">Chaîne d'URI à laquelle des droits d'accès sont accordés.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebPermission" /> avec les droits d'accès spécifiés pour l'URI spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise un <xref:System.Net.WebPermission> et accorde son autorisation cible pour établir un référentiel distant connexion d’hôte ou d’accepter une connexion d’hôte distant à l’aide de l’URI décrit par le `uriString` paramètre.  
  
   
  
## Examples  
 L’exemple suivant crée une nouvelle instance de <xref:System.Net.WebPermission> avec des droits de connexion pour l’URI spécifié.  
  
 [!code-cpp[WebPermission_Union#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#1)]
 [!code-csharp[WebPermission_Union#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#1)]
 [!code-vb[WebPermission_Union#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uriString" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (access As NetworkAccess, uriRegex As Regex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Net::NetworkAccess access, System::Text::RegularExpressions::Regex ^ uriRegex);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Net.NetworkAccess * System.Text.RegularExpressions.Regex -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission (access, uriRegex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">Valeur <see cref="T:System.Net.NetworkAccess" /> qui indique le type d'accès à accorder à l'URI spécifié. <see cref="F:System.Net.NetworkAccess.Accept" /> indique que l'application est autorisée à accepter les connexions provenant d'Internet sur une ressource locale. <see cref="F:System.Net.NetworkAccess.Connect" /> indique que l'application est autorisée à se connecter à des ressources spécifiques sur Internet.</param>
        <param name="uriRegex">Expression régulière qui décrit l'URI auquel un accès doit être accordé.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebPermission" /> avec les droits d'accès spécifiés pour l'expression régulière d'URI spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise un <xref:System.Net.WebPermission> et accorde son autorisation cible pour établir un référentiel distant connexion d’hôte ou d’accepter une connexion d’hôte distant à l’aide de l’URI décrit par le `uriRegex` paramètre.  
  
> [!NOTE]
>  Il est recommandé de créer `uriRegex` à l’aide de la <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>, <xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType>, et <xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType> indicateurs.  
  
> [!NOTE]
>  Une chaîne d’URI candidat est vérifiée par rapport à la liste d’expressions régulières pertinentes (<xref:System.Net.WebPermission.AcceptList%2A> ou <xref:System.Net.WebPermission.ConnectList%2A>) de deux manières. Tout d’abord, la chaîne d’URI candidat est comparée à la liste appropriée ; Ensuite, si aucune correspondance n’est, la chaîne d’URI candidat est converti en un <xref:System.Uri> et vérifiée par rapport à la liste appropriée.  
  
   
  
## Examples  
 L’exemple suivant crée une nouvelle instance de <xref:System.Net.WebPermission> avec des droits de connexion pour le texte spécifié <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType>.  
  
 [!code-cpp[WebPermission_Constructor4#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Constructor4/CPP/webpermission_constructor4.cpp#1)]
 [!code-csharp[WebPermission_Constructor4#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Constructor4/CS/webpermission_constructor4.cs#1)]
 [!code-vb[WebPermission_Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Constructor4/VB/webpermission_constructor4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="AcceptList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator AcceptList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator AcceptList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.AcceptList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptList As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ AcceptList { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptList : System.Collections.IEnumerator" Usage="System.Net.WebPermission.AcceptList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété retourne une énumération d'une autorisation d'acceptation unique détenue par <see cref="T:System.Net.WebPermission" />. Les types d'objets pouvant être contenus dans l'énumération retournée sont <see cref="T:System.String" /> et <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
        <value>Interface <see cref="T:System.Collections.IEnumerator" /> qui contient des autorisations d'acceptation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété obtient une liste des ressources locales autorisées par ce <xref:System.Net.WebPermission>. La classe à laquelle vous avez appliqué <xref:System.Net.WebPermission> n’est autorisé à recevoir une connexion entrante aux ressources locales figurant dans cette liste.  
  
> [!NOTE]
>  Vous pouvez ajouter des URI à cette liste à l’aide <xref:System.Net.WebPermission.AddPermission%2A>.  
  
> [!NOTE]
>  Une chaîne d’URI candidat est vérifiée par rapport à la liste d’expressions régulières pertinentes (<xref:System.Net.WebPermission.AcceptList%2A> ou <xref:System.Net.WebPermission.ConnectList%2A>) de deux manières. Tout d’abord, la chaîne d’URI candidat est comparée à la liste appropriée ; Ensuite, si aucune correspondance n’est, la chaîne d’URI candidat est converti en un <xref:System.Uri> et vérifiée par rapport à la liste appropriée.  
  
   
  
## Examples  
 L’exemple suivant imprime les URL dans le <xref:System.Net.WebPermission.AcceptList%2A> à la console.  
  
 [!code-cpp[WebPermission_AcceptConnectList#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#2)]
 [!code-csharp[WebPermission_AcceptConnectList#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#2)]
 [!code-vb[WebPermission_AcceptConnectList#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPermission">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute l'URI spécifié avec les droits d'accès spécifiés au <see cref="T:System.Net.WebPermission" /> en cours.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPermission (access As NetworkAccess, uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPermission(System::Net::NetworkAccess access, System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Net.NetworkAccess * string -&gt; unit" Usage="webPermission.AddPermission (access, uriString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access"><see cref="T:System.Net.NetworkAccess" /> qui spécifie les droits d'accès accordés à l'URI.</param>
        <param name="uriString">Chaîne qui décrit l'URI auquel des droits d'accès sont accordés.</param>
        <summary>Ajoute la chaîne d'URI spécifiée avec les droits d'accès spécifiés au <see cref="T:System.Net.WebPermission" /> actuel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous avez spécifié <xref:System.Security.Permissions.PermissionState.None> en tant que le <xref:System.Security.Permissions.PermissionState>, utilisez <xref:System.Net.WebPermission.AddPermission%2A> pour permettre l’utilisation de `uriString` dans la classe cible. La façon dont `uriString` peut être utilisé par la cible est spécifié par `access`. Spécifiez <xref:System.Net.NetworkAccess.Accept> comme paramètre d’accès pour ajouter l’URI spécifié par le `uriString` paramètre à la liste des URI acceptent des chaînes, ou spécifiez <xref:System.Net.NetworkAccess.Connect> en tant que l’accès des chaînes de connexion paramètre à ajouter l’URI à la liste des URI.  
  
> [!NOTE]
>  Appel <xref:System.Net.WebPermission.AddPermission%2A> sur <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Net.WebPermission> n’aura aucun effet, car l’autorisation est accordée à tous les URI.  
  
> [!NOTE]
>  Une chaîne d’URI candidat est vérifiée par rapport à la liste d’expressions régulières pertinentes (<xref:System.Net.WebPermission.AcceptList%2A> ou <xref:System.Net.WebPermission.ConnectList%2A>) de deux manières. Tout d’abord, la chaîne d’URI candidat est comparée à la liste appropriée ; Ensuite, si aucune correspondance n’est, la chaîne d’URI candidat est converti en un <xref:System.Uri> et vérifiée par rapport à la liste appropriée.  
  
   
  
## Examples  
 L’exemple suivant montre comment ajouter des droits d’accès à des chaînes d’URL particulières.  
  
 [!code-cpp[WebPermission_Intersect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#2)]
 [!code-csharp[WebPermission_Intersect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#2)]
 [!code-vb[WebPermission_Intersect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uriString" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPermission (access As NetworkAccess, uriRegex As Regex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPermission(System::Net::NetworkAccess access, System::Text::RegularExpressions::Regex ^ uriRegex);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Net.NetworkAccess * System.Text.RegularExpressions.Regex -&gt; unit" Usage="webPermission.AddPermission (access, uriRegex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">NetworkAccess qui spécifie les droits d'accès accordés à l'URI.</param>
        <param name="uriRegex">Expression régulière qui décrit l'ensemble d'URI auquel des droits d'accès sont accordés.</param>
        <summary>Ajoute l'URI spécifié avec les droits d'accès spécifiés au <see cref="T:System.Net.WebPermission" /> en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous avez spécifié <xref:System.Security.Permissions.PermissionState.None> en tant que le <xref:System.Security.Permissions.PermissionState>, utilisez <xref:System.Net.WebPermission.AddPermission%2A> pour autoriser l’utilisation de `uriRegex` dans la classe cible. Spécifiez <xref:System.Net.NetworkAccess.Accept> en tant que le `access` paramètre à ajouter l’URI spécifié par le `uriRegex` paramètre à la liste des URI acceptent des chaînes, ou spécifiez <xref:System.Net.NetworkAccess.Connect> en tant que l’accès des chaînes de connexion paramètre à ajouter l’URI à la liste des URI.  
  
> [!NOTE]
>  Appel <xref:System.Net.WebPermission.AddPermission%2A> sur un <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Net.WebPermission> instance n’a aucun effet car l’autorisation est accordée à tous les URI.  
  
> [!NOTE]
>  Il est recommandé de créer `uriRegex` à l’aide de la <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>, <xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType>, et <xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType> indicateurs.  
  
> [!NOTE]
>  Une chaîne d’URI candidat est vérifiée par rapport à la liste d’expressions régulières pertinentes (<xref:System.Net.WebPermission.AcceptList%2A> ou <xref:System.Net.WebPermission.ConnectList%2A>) de deux manières. Tout d’abord, la chaîne d’URI candidat est comparée à la liste appropriée ; Ensuite, si aucune correspondance n’est, la chaîne d’URI candidat est converti en un <xref:System.Uri> et vérifiée par rapport à la liste appropriée.  
  
   
  
## Examples  
 L’exemple suivant utilise <xref:System.Net.WebPermission.AddPermission%2A> pour accorder des droits d’accès pour l’URI spécifié.  
  
 [!code-cpp[WebPermission_IsSubset#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset/CPP/webpermission_issubset.cpp#1)]
 [!code-csharp[WebPermission_IsSubset#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset/CS/webpermission_issubset.cs#1)]
 [!code-vb[WebPermission_IsSubset#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset/VB/webpermission_issubset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="uriRegex" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="ConnectList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator ConnectList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator ConnectList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.ConnectList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectList As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ ConnectList { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectList : System.Collections.IEnumerator" Usage="System.Net.WebPermission.ConnectList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété retourne une énumération d'une autorisation de connexion unique détenue par <see cref="T:System.Net.WebPermission" />. Les types d'objets pouvant être contenus dans l'énumération retournée sont <see cref="T:System.String" /> et <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
        <value>Interface <see cref="T:System.Collections.IEnumerator" /> qui contient des autorisations de connexion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété obtient une liste des ressources distantes qui sont autorisées par <xref:System.Net.WebPermission>. La classe à laquelle vous avez appliqué <xref:System.Net.WebPermission> n’est autorisé à se connecter aux ressources figurant dans cette liste.  
  
> [!NOTE]
>  Vous pouvez ajouter des URI à cette liste à l’aide <xref:System.Net.WebPermission.AddPermission%2A>.  
  
> [!NOTE]
>  Une chaîne d’URI candidat est vérifiée par rapport à la liste d’expressions régulières pertinentes (<xref:System.Net.WebPermission.AcceptList%2A> ou <xref:System.Net.WebPermission.ConnectList%2A>) de deux manières. Tout d’abord, la chaîne d’URI candidat est comparée à la liste appropriée ; Ensuite, si aucune correspondance n’est, la chaîne d’URI candidat est converti en un <xref:System.Uri> et vérifiée par rapport à la liste appropriée.  
  
   
  
## Examples  
 L’exemple suivant imprime les URL dans le <xref:System.Net.WebPermission.ConnectList%2A> à la console.  
  
 [!code-cpp[WebPermission_AcceptConnectList#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#1)]
 [!code-csharp[WebPermission_AcceptConnectList#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#1)]
 [!code-vb[WebPermission_AcceptConnectList#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="webPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une copie de <see cref="T:System.Net.WebPermission" />.</summary>
        <returns>Nouvelle instance de la classe <see cref="T:System.Net.WebPermission" /> ayant les mêmes valeurs que la classe d'origine.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.IPermission> retourné par le même accès aux ressources en tant que la version d’origine que représente cette méthode <xref:System.Net.WebPermission>. Cette méthode remplace <xref:System.Security.CodeAccessPermission.Copy%2A> et est implémentée pour prendre en charge la <xref:System.Security.IPermission> interface.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer une deuxième instance de <xref:System.Net.WebPermission> à l’aide de <xref:System.Net.WebPermission.Copy%2A>. Cette deuxième instance est identique à la première.  
  
 [!code-cpp[WebPermission_Copy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#2)]
 [!code-csharp[WebPermission_Copy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#2)]
 [!code-vb[WebPermission_Copy#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="webPermission.FromXml securityElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">Encodage XML à partir duquel reconstruire <see cref="T:System.Net.WebPermission" />.</param>
        <summary>Reconstruit <see cref="T:System.Net.WebPermission" /> à partir d'un encodage XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebPermission.FromXml%2A> méthode reconstruit un <xref:System.Net.WebPermission> à partir d’un document XML, encodage défini par le <xref:System.Security.SecurityElement> classe.  
  
 Utilisez le <xref:System.Net.WebPermission.ToXml%2A> méthode pour encoder en XML la <xref:System.Net.WebPermission>, y compris les informations d’état.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Security.SecurityElement?displayProperty=nameWithType>, remplit ses attributs et utilise <xref:System.Net.WebPermission.FromXml%2A> pour transférer ces informations à une instance de <xref:System.Net.WebPermission>.  
  
 [!code-cpp[WebPermission_FromToXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission_FromToXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission_FromToXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="securityElement" /> est <see langword="null." />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="securityElement" /> n'est pas un élément d'autorisation pour ce type.</exception>
        <altmember cref="M:System.Net.WebPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="webPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><see cref="T:System.Net.WebPermission" /> à comparer à l'instance actuelle.</param>
        <summary>Retourne l'intersection logique de deux instances de <see cref="T:System.Net.WebPermission" />.</summary>
        <returns>Nouveau <see cref="T:System.Net.WebPermission" /> qui représente l'intersection de l'instance en cours et du paramètre <paramref name="target" />. Si l'intersection est vide, la méthode retourne <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.Intersect%2A> Retourne un <xref:System.Net.WebPermission> qui contient les autorisations qui sont communes à la fois dans `target` et l’instance actuelle.  
  
 Cette méthode remplace <xref:System.Security.CodeAccessPermission.Intersect%2A> et est implémentée pour prendre en charge la <xref:System.Security.IPermission> interface.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer une instance de <xref:System.Net.WebPermission> à l’aide de l’intersection logique de deux existant <xref:System.Net.WebPermission> instances.  
  
 [!code-cpp[WebPermission_Intersect#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#3)]
 [!code-csharp[WebPermission_Intersect#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#3)]
 [!code-vb[WebPermission_Intersect#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> n'est pas <see langword="null" /> ou du type <see cref="T:System.Net.WebPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="webPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><see cref="T:System.Net.WebPermission" /> à comparer à l'objet <see cref="T:System.Net.WebPermission" /> actuel.</param>
        <summary>Détermine si le <see cref="T:System.Net.WebPermission" /> actuel est un sous-ensemble de l'objet spécifié.</summary>
        <returns><see langword="true" /> si l'instance en cours est un sous-ensemble du paramètre <paramref name="target" /> ; sinon <see langword="false" />. Si la cible est <see langword="null" />, la méthode retourne <see langword="true" /> pour une autorisation actuelle vide qui n'est pas sans restriction et <see langword="false" /> dans les autres cas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si actuel <xref:System.Net.WebPermission> spécifie un ensemble de ressources associées qui est entièrement contenu par le `target` paramètre, puis actuel <xref:System.Net.WebPermission> est un sous-ensemble de `target`. Cette méthode remplace <xref:System.Net.WebPermission.IsSubsetOf%2A> et est implémentée pour prendre en charge la <xref:System.Security.IPermission> interface.  
  
   
  
## Examples  
 L’exemple suivant utilise <xref:System.Net.WebPermission.IsSubsetOf%2A> pour déterminer si les droits d’accès trouvé dans une seule instance de <xref:System.Net.WebPermission> se trouvent dans une autre instance de <xref:System.Net.WebPermission>.  
  
 [!code-cpp[WebPermission_IsSubset2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset2/CPP/source.cpp#1)]
 [!code-csharp[WebPermission_IsSubset2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset2/CS/source.cs#1)]
 [!code-vb[WebPermission_IsSubset2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le paramètre cible n'est pas une instance de <see cref="T:System.Net.WebPermission" />.</exception>
        <exception cref="T:System.NotSupportedException">L'instance en cours contient un droit d'accès encodé Regex et l'instance cible ne comporte pas exactement le même droit d'accès.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="webPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Vérifie l'état d'autorisation global de <see cref="T:System.Net.WebPermission" />.</summary>
        <returns><see langword="true" /> si <see cref="T:System.Net.WebPermission" /> a été créé avec <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Net.WebPermission> est <xref:System.Security.Permissions.PermissionState.Unrestricted>, la classe cible peut utiliser tous les URI. Sinon, une autorisation spécifique doit être donnée pour n’importe quel URI que vous souhaitez utiliser avec la classe cible.  
  
> [!NOTE]
>  Utilisez <xref:System.Net.WebPermission.AddPermission%2A> pour ajouter un URI et spécifier ses autorisations.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="webPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un encodage XML d'un <see cref="T:System.Net.WebPermission" /> et son état actuel.</summary>
        <returns><see cref="T:System.Security.SecurityElement" /> qui contient une représentation encodée XML de <see cref="T:System.Net.WebPermission" /> incluant notamment des informations d'état.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Net.WebPermission.FromXml%2A> méthode pour restaurer les informations d’état à partir d’un <xref:System.Security.SecurityElement>.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Net.WebPermission.ToXml%2A> pour créer un <xref:System.Security.SecurityElement?displayProperty=nameWithType> et imprimer ses attributs dans la console.  
  
 [!code-cpp[WebPermission_FromToXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission_FromToXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission_FromToXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="webPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><see cref="T:System.Net.WebPermission" /> à combiner au <see cref="T:System.Net.WebPermission" /> actuel.</param>
        <summary>Retourne l'union logique entre deux instances de la classe <see cref="T:System.Net.WebPermission" />.</summary>
        <returns><see cref="T:System.Net.WebPermission" /> qui représente l'union de l'instance en cours et du paramètre <paramref name="target" />. Si <see langword="WebPermission" /> est <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />, la méthode retourne un <see cref="T:System.Net.WebPermission" /> qui est <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Si la cible est <see langword="null" />, la méthode retourne une copie du <see cref="T:System.Net.WebPermission" /> actuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.Union%2A> Retourne un <xref:System.Net.WebPermission> qui contient toutes les autorisations dans les deux `target` et l’instance actuelle.  
  
   
  
## Examples  
 L’exemple suivant prend l’union logique de deux <xref:System.Net.WebPermission> instances à créer une troisième instance de <xref:System.Net.WebPermission>.  
  
 [!code-cpp[WebPermission_Union#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#2)]
 [!code-csharp[WebPermission_Union#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#2)]
 [!code-vb[WebPermission_Union#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">target n'est pas <see langword="null" /> ou du type <see cref="T:System.Net.WebPermission" />.</exception>
        <altmember cref="T:System.Security.Permissions.PermissionState" />
      </Docs>
    </Member>
  </Members>
</Type>