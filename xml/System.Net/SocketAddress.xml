<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SocketAddress.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59450cb79ab5f58542387491b72545105e08e82b0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9450cb79ab5f58542387491b72545105e08e82b0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.SocketAddress">
          <source>Stores serialized information from <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> derived classes.</source>
          <target state="translated">Stocke des informations sérialisées provenant des classes dérivées <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>The first 2 bytes of the underlying buffer are reserved for the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> enumerated value.</source>
          <target state="translated">Les 2 premiers octets de la mémoire tampon sous-jacente sont réservés pour le <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> valeur énumérée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>When the <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> is used to store a serialized <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>, the third and fourth bytes are used to store port number information.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> est utilisé pour stocker un sérialisé <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>, les troisième et quatrième octets sont utilisés pour stocker les informations de numéro de port.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>The next bytes are used to store the IP address.</source>
          <target state="translated">Les octets sont utilisés pour stocker l’adresse IP.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>You can access any information within this underlying byte buffer by referring to its index position; the byte buffer uses zero-based indexing.</source>
          <target state="translated">Vous pouvez accéder à toutes les informations dans cette mémoire tampon d’octets sous-jacente en faisant référence à sa position d’index ; la mémoire tampon d’octets utilise une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Net.SocketAddress.Family%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.SocketAddress.Size%2A&gt;</ph> properties to get the <ph id="ph3">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> value and the buffer size, respectively.</source>
          <target state="translated">Vous pouvez également utiliser le <ph id="ph1">&lt;xref:System.Net.SocketAddress.Family%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.SocketAddress.Size%2A&gt;</ph> propriétés pour obtenir le <ph id="ph3">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> valeur et la mémoire tampon de taille, respectivement.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>To view any of this information as a string, use the <ph id="ph1">&lt;xref:System.Net.SocketAddress.ToString%2A&gt;</ph> method.</source>
          <target state="translated">Pour afficher ces informations sous forme de chaîne, utilisez la <ph id="ph1">&lt;xref:System.Net.SocketAddress.ToString%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>The following example demonstrates how to use <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> to serialize an instance of the <ph id="ph2">&lt;xref:System.Net.EndPoint&gt;</ph> class.</source>
          <target state="translated">L’exemple suivant montre comment utiliser <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> pour sérialiser une instance de la <ph id="ph2">&lt;xref:System.Net.EndPoint&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>After serialization, the underlying byte buffer of the <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> contains all of the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> state information.</source>
          <target state="translated">Après la sérialisation, la mémoire tampon d’octets sous-jacente de la <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> contient tous les <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> des informations d’état.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Net.SocketAddress">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph> class.</source>
          <target state="translated">Crée une instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> enumerated value.</source>
          <target state="translated">Valeur énumérée <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph> class for the given address family.</source>
          <target state="translated">Crée une instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph> pour la famille d'adresses donnée.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
          <source>This overload sets the underlying buffer size to 32 bytes.</source>
          <target state="translated">Cette surcharge définit la taille de mémoire tampon sous-jacente à 32 octets.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> enumerated value.</source>
          <target state="translated">Valeur énumérée <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
          <source>The number of bytes to allocate for the underlying buffer.</source>
          <target state="translated">Nombre d'octets à allouer à la mémoire tampon sous-jacente.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph> class using the specified address family and buffer size.</source>
          <target state="translated">Crée une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph> en utilisant la famille d'adresses et la taille de mémoire tampon spécifiées.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
          <source>Use this overload to create a new instance of the <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> class with a particular underlying buffer size.</source>
          <target state="translated">Utilisez cette surcharge pour créer une nouvelle instance de la <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> classe avec une taille de mémoire tampon sous-jacente particulière.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="size" /&gt;</ph> is less than 2.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="size" /&gt;</ph> est inférieur à 2.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
          <source>These 2 bytes are needed to store <ph id="ph1">&lt;paramref name="family" /&gt;</ph>.</source>
          <target state="translated">Ces 2 octets sont nécessaires pour stocker <ph id="ph1">&lt;paramref name="family" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see langword="Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à comparer avec l'objet <ph id="ph2">&lt;see langword="Object" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see langword="Object" /&gt;</ph> is equal to the current <ph id="ph2">&lt;see langword="Object" /&gt;</ph>.</source>
          <target state="translated">Détermine si l'objet <ph id="ph1">&lt;see langword="Object" /&gt;</ph> spécifié est égal à l'objet <ph id="ph2">&lt;see langword="Object" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see langword="Object" /&gt;</ph> is equal to the current <ph id="ph3">&lt;see langword="Object" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le <ph id="ph2">&lt;see langword="Object" /&gt;</ph> spécifié est égal au <ph id="ph3">&lt;see langword="Object" /&gt;</ph> actuel ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Net.SocketAddress.Family">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> enumerated value of the current <ph id="ph2">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</source>
          <target state="translated">Obtient la valeur énumérée <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> du <ph id="ph2">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Family">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> enumerated values.</source>
          <target state="translated">Une des valeurs énumérées <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Family">
          <source>This method gets the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> enumerated value that represents the addressing scheme of the current <ph id="ph2">&lt;xref:System.Net.SocketAddress&gt;</ph>.</source>
          <target state="translated">Cette méthode obtient le <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> valeur énumérée qui représente le modèle d’adressage d’actuel <ph id="ph2">&lt;xref:System.Net.SocketAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Family">
          <source>If you want to view the corresponding string representation of <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Net.SocketAddress.ToString%2A&gt;</ph> method.</source>
          <target state="translated">Si vous souhaitez afficher la représentation de chaîne correspondante de <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph>, utilisez le <ph id="ph2">&lt;xref:System.Net.SocketAddress.ToString%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.GetHashCode">
          <source>Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</source>
          <target state="translated">Sert de fonction de hachage pour un type particulier et convient à une utilisation dans des algorithmes de hachage et des structures de données telles qu’une table de hachage.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Code de hachage du <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>The array index element of the desired information.</source>
          <target state="translated">Élément d'index de tableau des informations désirées.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>Gets or sets the specified index element in the underlying buffer.</source>
          <target state="translated">Obtient ou définit l'élément d'index spécifié dans la mémoire tampon sous-jacente.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>The value of the specified index element in the underlying buffer.</source>
          <target state="translated">Valeur de l'élément d'index spécifié dans la mémoire tampon sous-jacente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>This property gets or sets the specified byte position in the underlying buffer.</source>
          <target state="translated">Cette propriété obtient ou définit la position d’octet spécifiée dans la mémoire tampon sous-jacente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>Be sure to call <ph id="ph1">&lt;xref:System.Net.SocketAddress.Size%2A&gt;</ph> before referring to elements in the underlying buffer.</source>
          <target state="translated">Veillez à appeler <ph id="ph1">&lt;xref:System.Net.SocketAddress.Size%2A&gt;</ph> avant de faire référence aux éléments dans la mémoire tampon sous-jacente.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>Referring to an index that does not exist will cause the <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> to throw an <ph id="ph2">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</source>
          <target state="translated">Qui fait référence à un index qui n’existe pas provoque la <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> pour lever une <ph id="ph2">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>The specified index does not exist in the buffer.</source>
          <target state="translated">L'index spécifié n'existe pas dans la mémoire tampon.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Net.SocketAddress.Size">
          <source>Gets the underlying buffer size of the <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</source>
          <target state="translated">Obtient la taille de la mémoire tampon sous-jacente de <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Size">
          <source>The underlying buffer size of the <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</source>
          <target state="translated">Taille de la mémoire tampon sous-jacente de <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Size">
          <source>This property gets the underlying buffer size of the <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> in bytes.</source>
          <target state="translated">Cette propriété obtient la taille de la mémoire tampon sous-jacente de la <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> en octets.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.ToString">
          <source>Returns information about the socket address.</source>
          <target state="translated">Retourne des informations sur l'adresse du socket.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.ToString">
          <source>A string that contains information about the <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</source>
          <target state="translated">Chaîne qui contient des informations sur la structure <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketAddress.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Net.SocketAddress.ToString%2A&gt;</ph> method returns a string that contains the <ph id="ph2">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> enumerated value, the size of the underlying buffer of the <ph id="ph3">&lt;xref:System.Net.SocketAddress&gt;</ph> structure, and the remaining contents of the buffer.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.SocketAddress.ToString%2A&gt;</ph> méthode retourne une chaîne qui contient le <ph id="ph2">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> valeur énumérée, la taille de la mémoire tampon sous-jacente de la <ph id="ph3">&lt;xref:System.Net.SocketAddress&gt;</ph> structure et le contenu restant de la mémoire tampon.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>