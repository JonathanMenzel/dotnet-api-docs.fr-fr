<Type Name="SocketAddress" FullName="System.Net.SocketAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="25e3d76548718587b248698f1bd2c413db7ee4d5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39871710" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SocketAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SocketAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.SocketAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class SocketAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketAddress" />
  <TypeSignature Language="F#" Value="type SocketAddress = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="70813-101">Stocke des informations sérialisées provenant des classes dérivées <see cref="T:System.Net.EndPoint" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="70813-101">Stores serialized information from <see cref="T:System.Net.EndPoint" /> derived classes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70813-102">Les 2 premiers octets de la mémoire tampon sous-jacente sont réservés pour le <xref:System.Net.Sockets.AddressFamily> valeur énumérée.</span><span class="sxs-lookup"><span data-stu-id="70813-102">The first 2 bytes of the underlying buffer are reserved for the <xref:System.Net.Sockets.AddressFamily> enumerated value.</span></span> <span data-ttu-id="70813-103">Lorsque le <xref:System.Net.SocketAddress> est utilisé pour stocker un sérialisée <xref:System.Net.IPEndPoint>, les troisième et quatrième octets sont utilisés pour stocker les informations de numéro de port.</span><span class="sxs-lookup"><span data-stu-id="70813-103">When the <xref:System.Net.SocketAddress> is used to store a serialized <xref:System.Net.IPEndPoint>, the third and fourth bytes are used to store port number information.</span></span> <span data-ttu-id="70813-104">Les octets sont utilisés pour stocker l’adresse IP.</span><span class="sxs-lookup"><span data-stu-id="70813-104">The next bytes are used to store the IP address.</span></span> <span data-ttu-id="70813-105">Vous pouvez accéder à toutes les informations au sein de cette mémoire tampon d’octets sous-jacente en faisant référence à sa position d’index ; la mémoire tampon d’octets utilise une indexation de base zéro.</span><span class="sxs-lookup"><span data-stu-id="70813-105">You can access any information within this underlying byte buffer by referring to its index position; the byte buffer uses zero-based indexing.</span></span> <span data-ttu-id="70813-106">Vous pouvez également utiliser le <xref:System.Net.SocketAddress.Family%2A> et <xref:System.Net.SocketAddress.Size%2A> propriétés permettant d’obtenir le <xref:System.Net.Sockets.AddressFamily> valeur et la mémoire tampon de taille, respectivement.</span><span class="sxs-lookup"><span data-stu-id="70813-106">You can also use the <xref:System.Net.SocketAddress.Family%2A> and <xref:System.Net.SocketAddress.Size%2A> properties to get the <xref:System.Net.Sockets.AddressFamily> value and the buffer size, respectively.</span></span> <span data-ttu-id="70813-107">Pour afficher ces informations sous forme de chaîne, utilisez la <xref:System.Net.SocketAddress.ToString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="70813-107">To view any of this information as a string, use the <xref:System.Net.SocketAddress.ToString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70813-108">L’exemple suivant montre comment utiliser <xref:System.Net.SocketAddress> pour sérialiser une instance de la <xref:System.Net.EndPoint> classe.</span><span class="sxs-lookup"><span data-stu-id="70813-108">The following example demonstrates how to use <xref:System.Net.SocketAddress> to serialize an instance of the <xref:System.Net.EndPoint> class.</span></span> <span data-ttu-id="70813-109">Après la sérialisation, la mémoire tampon d’octets sous-jacente de la <xref:System.Net.SocketAddress> contient tous les <xref:System.Net.IPEndPoint> des informations d’état.</span><span class="sxs-lookup"><span data-stu-id="70813-109">After serialization, the underlying byte buffer of the <xref:System.Net.SocketAddress> contains all of the <xref:System.Net.IPEndPoint> state information.</span></span>  
  
 [!code-cpp[Classic SocketAddressExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SocketAddressExample/CPP/source.cpp#1)]
 [!code-csharp[Classic SocketAddressExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SocketAddressExample/CS/source.cs#1)]
 [!code-vb[Classic SocketAddressExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SocketAddressExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="70813-110">Crée une instance de la classe <see cref="T:System.Net.SocketAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-110">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAddress (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAddress(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.SocketAddress : System.Net.Sockets.AddressFamily -&gt; System.Net.SocketAddress" Usage="new System.Net.SocketAddress family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="70813-111">Valeur énumérée <see cref="T:System.Net.Sockets.AddressFamily" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-111">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70813-112">Crée une instance de la classe <see cref="T:System.Net.SocketAddress" /> pour la famille d'adresses donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-112">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class for the given address family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70813-113">Cette surcharge définit la taille de mémoire tampon sous-jacente à 32 octets.</span><span class="sxs-lookup"><span data-stu-id="70813-113">This overload sets the underlying buffer size to 32 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAddress (System.Net.Sockets.AddressFamily family, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAddress(System::Net::Sockets::AddressFamily family, int size);" />
      <MemberSignature Language="F#" Value="new System.Net.SocketAddress : System.Net.Sockets.AddressFamily * int -&gt; System.Net.SocketAddress" Usage="new System.Net.SocketAddress (family, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="70813-114">Valeur énumérée <see cref="T:System.Net.Sockets.AddressFamily" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-114">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="70813-115">Nombre d'octets à allouer à la mémoire tampon sous-jacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-115">The number of bytes to allocate for the underlying buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70813-116">Crée une nouvelle instance de la classe <see cref="T:System.Net.SocketAddress" /> en utilisant la famille d'adresses et la taille de mémoire tampon spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-116">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class using the specified address family and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70813-117">Utilisez cette surcharge pour créer une nouvelle instance de la <xref:System.Net.SocketAddress> classe avec une taille de mémoire tampon sous-jacente particulière.</span><span class="sxs-lookup"><span data-stu-id="70813-117">Use this overload to create a new instance of the <xref:System.Net.SocketAddress> class with a particular underlying buffer size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="70813-118">
            <paramref name="size" /> est inférieur à 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-118">
              <paramref name="size" /> is less than 2.</span>
          </span>
          <span data-ttu-id="70813-119">Ces 2 octets sont nécessaires pour stocker <paramref name="family" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-119">These 2 bytes are needed to store <paramref name="family" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (comparand As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ comparand);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="socketAddress.Equals comparand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand">
          <span data-ttu-id="70813-120">
            <see cref="T:System.Object" /> à comparer avec l'objet <see langword="Object" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-120">The <see cref="T:System.Object" /> to compare with the current <see langword="Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70813-121">Détermine si l'objet <see langword="Object" /> spécifié est égal à l'objet <see langword="Object" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-121">Determines whether the specified <see langword="Object" /> is equal to the current <see langword="Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70813-122">
            <see langword="true" /> si le <see langword="Object" /> spécifié est égal au <see langword="Object" /> actuel ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-122">
              <see langword="true" /> if the specified <see langword="Object" /> is equal to the current <see langword="Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Family">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.AddressFamily Family { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.AddressFamily Family" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Family" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Family As AddressFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::AddressFamily Family { System::Net::Sockets::AddressFamily get(); };" />
      <MemberSignature Language="F#" Value="member this.Family : System.Net.Sockets.AddressFamily" Usage="System.Net.SocketAddress.Family" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.AddressFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70813-123">Obtient la valeur énumérée <see cref="T:System.Net.Sockets.AddressFamily" /> du <see cref="T:System.Net.SocketAddress" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-123">Gets the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value of the current <see cref="T:System.Net.SocketAddress" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70813-124">Une des valeurs énumérées <see cref="T:System.Net.Sockets.AddressFamily" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-124">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70813-125">Cette méthode obtient le <xref:System.Net.Sockets.AddressFamily> valeur énumérée qui représente le modèle d’adressage d’actuel <xref:System.Net.SocketAddress>.</span><span class="sxs-lookup"><span data-stu-id="70813-125">This method gets the <xref:System.Net.Sockets.AddressFamily> enumerated value that represents the addressing scheme of the current <xref:System.Net.SocketAddress>.</span></span> <span data-ttu-id="70813-126">Si vous souhaitez afficher la représentation de chaîne correspondante de <xref:System.Net.Sockets.AddressFamily>, utilisez le <xref:System.Net.SocketAddress.ToString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="70813-126">If you want to view the corresponding string representation of <xref:System.Net.Sockets.AddressFamily>, use the <xref:System.Net.SocketAddress.ToString%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.AddressFamily" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="socketAddress.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70813-127">Sert de fonction de hachage pour un type particulier et convient à une utilisation dans des algorithmes de hachage et des structures de données telles qu’une table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-127">Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70813-128">Code de hachage du <see cref="T:System.Object" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-128">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public byte this[int offset] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(offset As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte default[int] { System::Byte get(int offset); void set(int offset, System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : byte with get, set" Usage="System.Net.SocketAddress.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="70813-129">Élément d'index de tableau des informations désirées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-129">The array index element of the desired information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70813-130">Obtient ou définit l'élément d'index spécifié dans la mémoire tampon sous-jacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-130">Gets or sets the specified index element in the underlying buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70813-131">Valeur de l'élément d'index spécifié dans la mémoire tampon sous-jacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-131">The value of the specified index element in the underlying buffer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70813-132">Cette propriété obtient ou définit la position d’octet spécifiée dans la mémoire tampon sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="70813-132">This property gets or sets the specified byte position in the underlying buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70813-133">Veillez à appeler <xref:System.Net.SocketAddress.Size%2A> avant de faire référence aux éléments dans la mémoire tampon sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="70813-133">Be sure to call <xref:System.Net.SocketAddress.Size%2A> before referring to elements in the underlying buffer.</span></span> <span data-ttu-id="70813-134">Qui fait référence à un index qui n’existe pas entraînera la <xref:System.Net.SocketAddress> pour lever une <xref:System.IndexOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="70813-134">Referring to an index that does not exist will cause the <xref:System.Net.SocketAddress> to throw an <xref:System.IndexOutOfRangeException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="70813-135">L'index spécifié n'existe pas dans la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-135">The specified index does not exist in the buffer.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.SocketAddress.Size" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : int" Usage="System.Net.SocketAddress.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70813-136">Obtient la taille de la mémoire tampon sous-jacente de <see cref="T:System.Net.SocketAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-136">Gets the underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70813-137">Taille de la mémoire tampon sous-jacente de <see cref="T:System.Net.SocketAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-137">The underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70813-138">Cette propriété obtient la taille de mémoire tampon sous-jacente de la <xref:System.Net.SocketAddress> en octets.</span><span class="sxs-lookup"><span data-stu-id="70813-138">This property gets the underlying buffer size of the <xref:System.Net.SocketAddress> in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="socketAddress.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70813-139">Retourne des informations sur l'adresse du socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-139">Returns information about the socket address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70813-140">Chaîne qui contient des informations sur la structure <see cref="T:System.Net.SocketAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70813-140">A string that contains information about the <see cref="T:System.Net.SocketAddress" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70813-141">Le <xref:System.Net.SocketAddress.ToString%2A> méthode retourne une chaîne qui contient le <xref:System.Net.Sockets.AddressFamily> valeur énumérée, la taille de la mémoire tampon sous-jacente de la <xref:System.Net.SocketAddress> structure et le contenu restant de la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="70813-141">The <xref:System.Net.SocketAddress.ToString%2A> method returns a string that contains the <xref:System.Net.Sockets.AddressFamily> enumerated value, the size of the underlying buffer of the <xref:System.Net.SocketAddress> structure, and the remaining contents of the buffer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>