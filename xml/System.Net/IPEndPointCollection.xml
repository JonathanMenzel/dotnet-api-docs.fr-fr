<Type Name="IPEndPointCollection" FullName="System.Net.IPEndPointCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c8484a29ae21d5686a7b56ce563de82c9d99c30" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37475873" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class IPEndPointCollection : System.Collections.ObjectModel.Collection&lt;System.Net.IPEndPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IPEndPointCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Net.IPEndPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Net.IPEndPointCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class IPEndPointCollection&#xA;Inherits Collection(Of IPEndPoint)" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPEndPointCollection : System::Collections::ObjectModel::Collection&lt;System::Net::IPEndPoint ^&gt;" />
  <TypeSignature Language="F#" Value="type IPEndPointCollection = class&#xA;    inherit Collection&lt;IPEndPoint&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Net.IPEndPoint&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Net.IPEndPoint</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6a0e1-101">Represents a collection used to store network endpoints as <see cref="T:System.Net.IPEndPoint" /> objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0e1-101">Represents a collection used to store network endpoints as <see cref="T:System.Net.IPEndPoint" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a0e1-102">Le <xref:System.Net.IPEndPointCollection> classe est dérivée de la <xref:System.Collections.ObjectModel.Collection%601?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="6a0e1-102">The <xref:System.Net.IPEndPointCollection> class is derived from the <xref:System.Collections.ObjectModel.Collection%601?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="6a0e1-103">Le <xref:System.Net.IPEndPoint> classe contient l’hôte et les informations de port local ou distant requis par une application pour se connecter à un service sur un ordinateur hôte.</span><span class="sxs-lookup"><span data-stu-id="6a0e1-103">The <xref:System.Net.IPEndPoint> class contains the host and local or remote port information needed by an application to connect to a service on a host.</span></span> <span data-ttu-id="6a0e1-104">En combinant l’adresse IP de l’hôte et le numéro de port d’un service, le <xref:System.Net.IPEndPoint> forms classe une connexion point à un service.</span><span class="sxs-lookup"><span data-stu-id="6a0e1-104">By combining the host's IP address and port number of a service, the <xref:System.Net.IPEndPoint> class forms a connection point to a service.</span></span>  
  
 <span data-ttu-id="6a0e1-105">Le <xref:System.Net.IPEndPointCollection> classe est utilisée par les classes dans le <xref:System.Net.PeerToPeer?displayProperty=nameWithType> espace de noms.</span><span class="sxs-lookup"><span data-stu-id="6a0e1-105">The <xref:System.Net.IPEndPointCollection> class is used by classes in the <xref:System.Net.PeerToPeer?displayProperty=nameWithType> namespace.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="6a0e1-106">Statique public (<see langword="Shared" /> en Visual Basic) de ce type sont thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0e1-106">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="6a0e1-107">Il n'est pas garanti que les membres d'instance soient thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0e1-107">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="6a0e1-108">Un <see cref="T:System.Net.IPEndPointCollection" /> peut prendre en charge plusieurs lecteurs simultanément, tant que la collection n’est pas modifiée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0e1-108">A <see cref="T:System.Net.IPEndPointCollection" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="6a0e1-109">Même dans ce cas, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0e1-109">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="6a0e1-110">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0e1-110">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span>
      </span>
      <span data-ttu-id="6a0e1-111">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0e1-111">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPEndPointCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPointCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IPEndPointCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a0e1-112">Initializes a new instance of the <see cref="T:System.Net.IPEndPointCollection" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-112">Initializes a new instance of the <see cref="T:System.Net.IPEndPointCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, System.Net.IPEndPoint item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Net.IPEndPoint item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Net::IPEndPoint ^ item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * System.Net.IPEndPoint -&gt; unit" Usage="iPEndPointCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="6a0e1-113">The zero-based index at which <c>item</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-113">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="6a0e1-114">The <see cref="T:System.Net.IPEndPoint" /> object to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-114">The <see cref="T:System.Net.IPEndPoint" /> object to insert.</span>
          </span>
          <span data-ttu-id="6a0e1-115">The value can be <see langword="null" /> for reference types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-115">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a0e1-116">Inserts an <see cref="T:System.Net.IPEndPoint" /> element into the <see cref="T:System.Net.IPEndPointCollection" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-116">Inserts an <see cref="T:System.Net.IPEndPoint" /> element into the <see cref="T:System.Net.IPEndPointCollection" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a0e1-117"><xref:System.Net.IPEndPointCollection> n’accepte pas `null` comme une valeur valide.</span><span class="sxs-lookup"><span data-stu-id="6a0e1-117"><xref:System.Net.IPEndPointCollection> does not accept `null` as a valid value.</span></span> <span data-ttu-id="6a0e1-118"><xref:System.Net.IPEndPointCollection> permet aux éléments en double.</span><span class="sxs-lookup"><span data-stu-id="6a0e1-118"><xref:System.Net.IPEndPointCollection> allows duplicate elements.</span></span>  
  
 <span data-ttu-id="6a0e1-119">Si `index` est égal au nombre actuel d’éléments dans le <xref:System.Net.IPEndPointCollection> , puis le `item` est ajouté à la fin de <xref:System.Net.IPEndPointCollection>.</span><span class="sxs-lookup"><span data-stu-id="6a0e1-119">If `index` is equal to current count of items in the <xref:System.Net.IPEndPointCollection> , then the `item` is added to the end of <xref:System.Net.IPEndPointCollection>.</span></span>  
  
 <span data-ttu-id="6a0e1-120">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ObjectModel.Collection%601.Count%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a0e1-120">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a0e1-121">The <paramref name="index" /> parameter is less than zero  -or-  the <paramref name="index" /> parameter is greater than the current count of items in the <see cref="T:System.Net.IPEndPointCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-121">The <paramref name="index" /> parameter is less than zero  -or-  the <paramref name="index" /> parameter is greater than the current count of items in the <see cref="T:System.Net.IPEndPointCollection" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a0e1-122">The <paramref name="item" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-122">The <paramref name="item" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, System.Net.IPEndPoint item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Net.IPEndPoint item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Net::IPEndPoint ^ item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * System.Net.IPEndPoint -&gt; unit" Usage="iPEndPointCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="6a0e1-123">The zero-based index of the element to replace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-123">The zero-based index of the element to replace.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="6a0e1-124">The new <see cref="T:System.Net.IPEndPoint" /> value for the element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-124">The new <see cref="T:System.Net.IPEndPoint" /> value for the element at the specified index.</span>
          </span>
          <span data-ttu-id="6a0e1-125">The value can be <see langword="null" /> for reference types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-125">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a0e1-126">Replaces the <see cref="T:System.Net.IPEndPoint" /> element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-126">Replaces the <see cref="T:System.Net.IPEndPoint" /> element at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a0e1-127"><xref:System.Net.IPEndPointCollection> n’accepte pas `null` comme une valeur valide.</span><span class="sxs-lookup"><span data-stu-id="6a0e1-127"><xref:System.Net.IPEndPointCollection> does not accept `null` as a valid value.</span></span> <span data-ttu-id="6a0e1-128"><xref:System.Net.IPEndPointCollection> permet aux éléments en double.</span><span class="sxs-lookup"><span data-stu-id="6a0e1-128"><xref:System.Net.IPEndPointCollection> allows duplicate elements.</span></span>  
  
 <span data-ttu-id="6a0e1-129">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="6a0e1-129">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a0e1-130">The <paramref name="index" /> parameter is less than zero  -or-  the <paramref name="index" /> parameter is greater than the current count of items in the <see cref="T:System.Net.IPEndPointCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-130">The <paramref name="index" /> parameter is less than zero  -or-  the <paramref name="index" /> parameter is greater than the current count of items in the <see cref="T:System.Net.IPEndPointCollection" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a0e1-131">The <paramref name="item" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0e1-131">The <paramref name="item" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>