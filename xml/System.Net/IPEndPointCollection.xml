<Type Name="IPEndPointCollection" FullName="System.Net.IPEndPointCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7256c11f6275484438669240f8cfcfe21bf99b33" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30465793" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class IPEndPointCollection : System.Collections.ObjectModel.Collection&lt;System.Net.IPEndPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IPEndPointCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Net.IPEndPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Net.IPEndPointCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class IPEndPointCollection&#xA;Inherits Collection(Of IPEndPoint)" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPEndPointCollection : System::Collections::ObjectModel::Collection&lt;System::Net::IPEndPoint ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Net.IPEndPoint&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Net.IPEndPoint</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une collection utilisée pour stocker des points de terminaison réseau comme des objets <see cref="T:System.Net.IPEndPoint" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.IPEndPointCollection> classe est dérivée de la <xref:System.Collections.ObjectModel.Collection%601?displayProperty=nameWithType> classe.  
  
 La <xref:System.Net.IPEndPoint> classe contient l’hôte et les informations de port local ou distant requis par une application pour se connecter à un service sur un ordinateur hôte. En combinant l’adresse IP de l’ordinateur hôte et le numéro de port d’un service, le <xref:System.Net.IPEndPoint> forms classe une connexion point à un service.  
  
 Le <xref:System.Net.IPEndPointCollection> classe est utilisée par les classes dans le <xref:System.Net.PeerToPeer?displayProperty=nameWithType> espace de noms.  
  
 ]]></format>
    </remarks>
    <threadsafe>Statique public (<see langword="Shared" /> en Visual Basic) de ce type sont thread-safe. Il n'est pas garanti que les membres d'instance soient thread-safe.  
  
 Un <see cref="T:System.Net.IPEndPointCollection" /> peut prendre en charge plusieurs lecteurs simultanément, tant que la collection n’est pas modifiée. Même dans ce cas, l’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe. Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération. Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPEndPointCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPointCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IPEndPointCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.IPEndPointCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, System.Net.IPEndPoint item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Net.IPEndPoint item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Net::IPEndPoint ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro auquel <c>l’élément</c> doit être inséré.</param>
        <param name="item">Objet <see cref="T:System.Net.IPEndPoint" /> à insérer. La valeur peut être <see langword="null" /> pour les types référence.</param>
        <summary>Insère un élément <see cref="T:System.Net.IPEndPoint" /> dans le <see cref="T:System.Net.IPEndPointCollection" />, à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.IPEndPointCollection> n’accepte pas les `null` comme une valeur valide. <xref:System.Net.IPEndPointCollection> autorise les éléments en double.  
  
 Si `index` est égal au nombre actuel d’éléments dans le <xref:System.Net.IPEndPointCollection> , puis le `item` est ajouté à la fin de <xref:System.Net.IPEndPointCollection>.  
  
 Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ObjectModel.Collection%601.Count%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à zéro.  
  
 - ou -  
  
 le paramètre <paramref name="index" /> est supérieur au nombre actuel d'éléments dans <see cref="T:System.Net.IPEndPointCollection" />.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="item" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, System.Net.IPEndPoint item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Net.IPEndPoint item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Net::IPEndPoint ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l'élément à remplacer.</param>
        <param name="item">Nouvelle valeur <see cref="T:System.Net.IPEndPoint" /> de l'élément à l'index spécifié. La valeur peut être <see langword="null" /> pour les types référence.</param>
        <summary>Remplace l'élément <see cref="T:System.Net.IPEndPoint" /> au niveau de l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.IPEndPointCollection> n’accepte pas les `null` comme une valeur valide. <xref:System.Net.IPEndPointCollection> autorise les éléments en double.  
  
 Cette méthode est une opération o (1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à zéro.  
  
 - ou -  
  
 le paramètre <paramref name="index" /> est supérieur au nombre actuel d'éléments dans <see cref="T:System.Net.IPEndPointCollection" />.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="item" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>