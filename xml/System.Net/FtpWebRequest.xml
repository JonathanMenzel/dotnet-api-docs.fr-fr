<Type Name="FtpWebRequest" FullName="System.Net.FtpWebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="922ec20b220ec4db496adc3636bb647975076cb9" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52614994" /></Metadata><TypeSignature Language="C#" Value="public sealed class FtpWebRequest : System.Net.WebRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FtpWebRequest extends System.Net.WebRequest" />
  <TypeSignature Language="DocId" Value="T:System.Net.FtpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FtpWebRequest&#xA;Inherits WebRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class FtpWebRequest sealed : System::Net::WebRequest" />
  <TypeSignature Language="F#" Value="type FtpWebRequest = class&#xA;    inherit WebRequest" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implémente un client FTP (File Transfer Protocol).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
>  Nous ne vous recommandons d’utiliser la `FtpWebRequest` classe pour tout nouveau développement. Pour plus d’informations et alternatives à `FtpWebRequest`, consultez [WebRequest ne doit pas être utilisé](https://github.com/dotnet/platform-compat/blob/master/docs/DE0003.md) sur GitHub.

 Pour obtenir une instance de <xref:System.Net.FtpWebRequest>, utilisez le <xref:System.Net.WebRequest.Create%2A> (méthode). Vous pouvez également utiliser le <xref:System.Net.WebClient> classe pour charger et télécharger des informations à partir d’un serveur FTP. À l’aide d’une des ces approches, lorsque vous spécifiez une ressource réseau qui utilise le schéma FTP (par exemple, `"ftp://contoso.com"`) la <xref:System.Net.FtpWebRequest> classe offre la possibilité d’interagir par programmation avec les serveurs FTP.  
  
 L’URI peut être relatif ou absolu. Si l’URI est au format `"ftp://contoso.com/%2fpath"` (% 2f est une séquence d’échappement '/'), l’URI est absolu, et le répertoire actif est `/path`. Si, toutefois, l’URI est au format `"ftp://contoso.com/path"`, tout d’abord le .NET Framework se connecte au serveur FTP (à l’aide du nom d’utilisateur et mot de passe défini par le <xref:System.Net.FtpWebRequest.Credentials%2A> propriété), le répertoire actif est défini sur `<UserLoginDirectory>/path`.  
  
 Vous devez disposer d’un nom d’utilisateur valide et un mot de passe pour le serveur ou le serveur doit autoriser l’ouverture de session anonyme. Vous pouvez spécifier les informations d’identification utilisées pour se connecter au serveur en définissant le <xref:System.Net.FtpWebRequest.Credentials%2A> propriété, ou vous pouvez les inclure dans le <xref:System.Uri.UserInfo%2A> partie de l’URI passé à la <xref:System.Net.WebRequest.Create%2A> (méthode). Si vous incluez <xref:System.Uri.UserInfo%2A> informations contenues dans l’URI, le <xref:System.Net.FtpWebRequest.Credentials%2A> propriété est définie sur une nouvelles informations d’identification de réseau avec les informations de nom et mot de passe utilisateur spécifié.  
  
> [!CAUTION]
>  À moins que le <xref:System.Net.FtpWebRequest.EnableSsl%2A> propriété est `true`, toutes les données et commandes, y compris vos informations de nom et mot de passe utilisateur, sont envoyées au serveur en texte clair. N’importe qui surveillent le trafic réseau peut afficher vos informations d’identification et les utiliser pour se connecter au serveur. Si vous vous connectez à un serveur FTP qui requiert des informations d’identification et prend en charge de la couche SSL (Secure Sockets), vous devez définir <xref:System.Net.FtpWebRequest.EnableSsl%2A> à `true`.  
  
 Vous devez avoir <xref:System.Net.WebPermission> accéder à la ressource FTP ; sinon, un <xref:System.Security.SecurityException> exception est levée.  
  
 Spécifiez la commande FTP à envoyer au serveur en définissant le <xref:System.Net.FtpWebRequest.Method%2A> propriété à une valeur définie dans le <xref:System.Net.WebRequestMethods.Ftp> structure. Pour transmettre des données texte, remplacez le <xref:System.Net.FtpWebRequest.UseBinary%2A> valeur de la propriété par défaut (`true`) à `false`. Pour plus d’informations et les restrictions, consultez <xref:System.Net.FtpWebRequest.Method%2A>.  
  
 Lorsque vous utilisez un <xref:System.Net.FtpWebRequest> objet pour charger un fichier à un serveur, vous devez écrire le contenu du fichier dans le flux de demande obtenu en appelant le <xref:System.Net.FtpWebRequest.GetRequestStream%2A> méthode ou ses équivalents asynchrones, le <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> et <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> méthodes. Vous devez écrire dans le flux et fermer le flux avant d’envoyer la demande.  
  
 Les demandes sont envoyées au serveur en appelant le <xref:System.Net.FtpWebRequest.GetResponse%2A> méthode ou ses équivalents asynchrones, le <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> et <xref:System.Net.FtpWebRequest.EndGetResponse%2A> méthodes. Lorsque l’opération demandée est terminée, un <xref:System.Net.FtpWebResponse> est retourné. Le <xref:System.Net.FtpWebResponse> objet fournit l’état de l’opération et toutes les données téléchargées depuis le serveur.  
  
 Vous pouvez définir une valeur de délai d’attente pour lire ou écrire sur le serveur à l’aide de la <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> propriété. Si le délai d’attente est dépassé, la méthode d’appel lève une <xref:System.Net.WebException> avec <xref:System.Net.WebExceptionStatus> défini sur <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Lorsque vous téléchargez un fichier à partir d’un serveur FTP, si la commande a réussi, le contenu du fichier demandé est disponible dans le flux de l’objet de réponse. Vous pouvez accéder à ce flux en appelant le <xref:System.Net.FtpWebResponse.GetResponseStream%2A> (méthode). Pour plus d'informations, consultez <xref:System.Net.FtpWebResponse>.  
  
 Si le <xref:System.Net.FtpWebRequest.Proxy%2A> propriété est définie, directement ou dans un fichier de configuration, les communications avec le serveur FTP s’effectuent via le proxy spécifié. Si le proxy spécifié est un proxy HTTP, seules les <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, et <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commandes sont prises en charge.  
  
 Seul le contenu binaire téléchargé est mis en cache ; Autrement dit, le contenu reçu à l’aide de la <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> commande avec le <xref:System.Net.FtpWebRequest.UseBinary%2A> propriété définie sur `true`.  
  
 Plusieurs <xref:System.Net.FtpWebRequest>réutilisent des connexions existantes, si possible.  
  
 Pour plus d’informations sur le protocole FTP, consultez [RFC 959 : File Transfer Protocol](https://www.ietf.org/rfc/rfc959.txt).  
  
   
  
## Examples  
 L’exemple de code suivant illustre la suppression d’un fichier à partir d’un serveur FTP.  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 L’exemple de code suivant illustre le téléchargement d’un fichier à partir d’un serveur FTP à l’aide de la <xref:System.Net.WebClient> classe.  
  
 [!code-cpp[NCLFtpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#5)]
 [!code-csharp[NCLFtpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#5)]  
  
 L’exemple de code suivant montre à l’aide des opérations asynchrones pour charger un fichier à un serveur FTP.  
  
 [!code-cpp[NCLFtpAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#1)]
 [!code-csharp[NCLFtpAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">Pour accéder à la ressource référencée par cette demande. Énumération associée : <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <altmember cref="T:System.Net.FtpWebResponse" />
    <altmember cref="T:System.Net.FtpStatusCode" />
    <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.WebClient" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="ftpWebRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Met fin à une opération FTP asynchrone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 S’il n’existe aucune opération en cours d’exécution, cette méthode ne fait rien. Si un transfert de fichiers est en cours, cette méthode termine le transfert.  
  
> [!NOTE]
>  Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment l’utilisateur peut mettre fin à un transfert asynchrone d’un fichier à partir du répertoire local sur le serveur.  
  
 [!code-cpp[NCLFtpClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#10)]
 [!code-csharp[NCLFtpClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
        <param name="state">Objet défini par l'utilisateur qui comporte des informations sur l'opération. Cet objet est passé au délégué <paramref name="callback" /> quand l'opération se termine.</param>
        <summary>Commence l'ouverture asynchrone du flux de contenu d'une demande en vue de l'écriture.</summary>
        <returns>Instance de <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez effectuer l’opération asynchrone en appelant le <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> (méthode). En règle générale, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> est appelée par la méthode référencée par `callback`. Pour déterminer l’état de l’opération, vérifiez les propriétés le <xref:System.IAsyncResult> objet retourné par cette méthode.  
  
 Cette méthode ne bloque pas le flux. Pour bloquer, appelez <xref:System.Net.FtpWebRequest.GetRequestStream%2A> à la place de cette méthode.  
  
 Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre le début d’une opération asynchrone pour obtenir le flux d’une demande. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Net.FtpWebRequest> vue d’ensemble de la classe.  
  
 [!code-cpp[NCLFtpAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#4)]
 [!code-csharp[NCLFtpAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Un appel précédent à cette méthode ou à <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> n'est pas encore terminé.</exception>
        <exception cref="T:System.Net.WebException">Une connexion au serveur FTP n'a pas pu être établie.</exception>
        <exception cref="T:System.Net.ProtocolViolationException">La propriété <see cref="P:System.Net.FtpWebRequest.Method" /> n'a pas la valeur <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" />.</exception>
        <block subset="none" type="usage"><para>Cette méthode génère un trafic réseau.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
        <param name="state">Objet défini par l'utilisateur qui comporte des informations sur l'opération. Cet objet est passé au délégué <paramref name="callback" /> quand l'opération se termine.</param>
        <summary>Commence à envoyer une demande et à recevoir une réponse d'un serveur FTP de façon asynchrone.</summary>
        <returns>Instance de <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez effectuer l’opération asynchrone en appelant le <xref:System.Net.FtpWebRequest.EndGetResponse%2A> (méthode). En règle générale, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> est appelée par la méthode référencée par `callback`. Pour déterminer l’état de l’opération, vérifiez les propriétés le <xref:System.IAsyncResult> objet retourné par la <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> (méthode).  
  
 Si le <xref:System.Net.FtpWebRequest.Proxy%2A> propriété est définie, directement ou dans un fichier de configuration, les communications avec le serveur FTP s’effectuent via le proxy spécifié.  
  
 <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> ne bloque pas en attendant la réponse du serveur. Pour bloquer, appelez le <xref:System.Net.FtpWebRequest.GetResponse%2A> méthode à la place de <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>.  
  
 Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
> [!NOTE]
>  Si un <xref:System.Net.WebException> est levée, utilisez la <xref:System.Net.WebException.Response%2A> et <xref:System.Net.WebException.Status%2A> propriétés de l’exception pour déterminer la réponse à partir du serveur.  
  
   
  
## Examples  
 L’exemple de code suivant montre une opération asynchrone pour obtenir le flux d’une demande de fin et démarrez ensuite une demande d’obtention de la réponse. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Net.FtpWebRequest> vue d’ensemble de la classe.  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> ou <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> a déjà été appelé pour cette instance.</exception>
        <block subset="none" type="usage"><para>Cette méthode génère un trafic réseau.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection with get, set" Usage="System.Net.FtpWebRequest.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les certificats utilisés pour établir une connexion chiffrée au serveur FTP.</summary>
        <value>Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> qui contient les certificats clients.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les certificats de client sont utilisés pour authentifier le client pendant la négociation de connexion SSL initiale. Pour plus d'informations, consultez <xref:System.Net.FtpWebRequest.EnableSsl%2A>.  
  
> [!NOTE]
>  Le .NET Framework met en cache les sessions SSL lors de leur création et tente de réutiliser une session de mise en cache pour une nouvelle demande, si possible. Lorsque vous tentez de réutiliser une session SSL, le .NET Framework utilise le premier élément du <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (s’il en existe un), ou tente de réutiliser une session anonyme si <xref:System.Net.HttpWebRequest.ClientCertificates%2A> est vide.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La valeur spécifiée pour une opération set est <see langword="null" />.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du groupe de connexions contenant le point de service utilisé pour envoyer la demande actuelle.</summary>
        <value>Valeur <see cref="T:System.String" /> contenant un nom de groupe de connexions.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Groupes de connexions associent un ensemble de requêtes avec une connexion particulière ou un ensemble de connexions. Les connexions dans un groupe de connexions peuvent être réutilisées uniquement par les demandes d’origine dans le même domaine d’application, lorsque les informations d’identification sur la demande sont identiques et que la demande spécifie le nom de groupe de connexion. Lorsqu’une demande ne spécifie pas un nom de groupe de connexion, toute connexion existante sur le serveur demandé n’est pas associé à un groupe de connexions peut être utilisée. Lorsque les informations d’identification ne sont pas identiques, la connexion existante est fermée et la nouvelle demande doit s’authentifier à nouveau.  
  
 À l’aide de groupes de connexions peut améliorer les performances, car cela permet à toutes les demandes pour un utilisateur de réutiliser la connexion authentifiée avec les informations d’identification de l’utilisateur.  
  
 Modification de la <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> propriété après avoir appelé la <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> causes de la méthode un <xref:System.InvalidOperationException> exception.  
  
   
  
## Examples  
 L’exemple de code suivant récupère la valeur de cette propriété.  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md">Gestion des connexions</related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur ignorée par la classe <see cref="T:System.Net.FtpWebRequest" />.</summary>
        <value>Valeur <see cref="T:System.Int64" /> qui doit être ignorée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.FtpWebRequest.ContentLength%2A> propriété est fournie uniquement pour la compatibilité avec d’autres implémentations de la <xref:System.Net.WebRequest> et <xref:System.Net.WebResponse> classes. Il est inutile d’utiliser <xref:System.Net.FtpWebRequest.ContentLength%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentOffset">
      <MemberSignature Language="C#" Value="public long ContentOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentOffset" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentOffset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentOffset { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentOffset : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un décalage d'octet dans le fichier actuellement téléchargé par cette demande.</summary>
        <value>Instance de <see cref="T:System.Int64" /> qui spécifie le décalage du fichier, en octets. La valeur par défaut est 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définir le <xref:System.Net.FtpWebRequest.ContentOffset%2A> propriété lors du téléchargement d’un fichier à partir d’un serveur FTP. Ce décalage indique la position dans le fichier du serveur qui marque le début des données à télécharger. L’offset est spécifié en tant que le nombre d’octets à partir du début du fichier. le décalage du premier octet est égale à zéro.  
  
 Paramètre <xref:System.Net.FtpWebRequest.ContentOffset%2A> provoque la <xref:System.Net.FtpWebRequest> pour envoyer un redémarrage (`REST`) commande sur le serveur. Cette commande est ignorée par la plupart des implémentations de serveurs FTP si vous transférez des données vers le serveur.  
  
 Modification <xref:System.Net.FtpWebRequest.ContentOffset%2A> après avoir appelé la <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> méthode entraîne un <xref:System.InvalidOperationException> exception.  
  
   
  
## Examples  
 L’exemple de code suivant illustre le téléchargement d’une partie d’un fichier à partir d’un serveur et en ajoutant les données téléchargées dans un fichier local.  
  
 [!code-cpp[NclFtpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#7)]
 [!code-csharp[NclFtpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour cette propriété est inférieure à zéro.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.FtpWebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lève toujours une exception <see cref="T:System.NotSupportedException" />.</summary>
        <value>Lève toujours une exception <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.FtpWebRequest.ContentType%2A> propriété est fournie uniquement pour la compatibilité avec d’autres implémentations de la <xref:System.Net.WebRequest> et <xref:System.Net.WebResponse> classes. Il est inutile d’utiliser <xref:System.Net.FtpWebRequest.ContentType%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Les informations de type de contenu ne sont pas prises en charge pour FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.FtpWebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les informations d'identification utilisées pour communiquer avec le serveur FTP.</summary>
        <value>Instance de <see cref="T:System.Net.ICredentials" /> ; sinon, <see langword="null" /> si la propriété n'a pas été définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous n'êtes pas obligé de spécifier les informations d’identification lors de la connexion à l’aide d’ouverture de session anonyme. Vous devez définir le <xref:System.Net.FtpWebRequest.Credentials%2A> propriété à l’aide des informations d’identification de type <xref:System.Net.NetworkCredential>; Cela garantit que le nom d’utilisateur et le mot de passe peuvent être lu et envoyés au serveur.  
  
> [!CAUTION]
>  Informations d’identification ne sont pas chiffrées lors de la transmission au serveur, sauf si le <xref:System.Net.FtpWebRequest.EnableSsl%2A> propriété est définie sur `true`.  
  
 Modification <xref:System.Net.FtpWebRequest.Credentials%2A> après avoir appelé la <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> méthode entraîne un <xref:System.InvalidOperationException> exception.  
  
   
  
## Examples  
 L’exemple de code suivant récupère la valeur de cette propriété et l’utilise pour afficher le nom d’utilisateur.  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La valeur spécifiée pour une opération set est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Un <see cref="T:System.Net.ICredentials" /> d'un type autre que <see cref="T:System.Net.NetworkCredential" /> a été spécifié pour une opération ensembliste.</exception>
        <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Définit la stratégie de cache par défaut pour toutes les demandes FTP.</summary>
        <value>Élément <see cref="T:System.Net.Cache.RequestCachePolicy" /> qui définit la stratégie de cache pour les demandes FTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seul le contenu reçu à l’aide de la <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> commande est mise en cache.  
  
 Le tableau suivant décrit les effets de mise en cache des stratégies sur FTP <xref:System.Net.FtpWebRequest>.  
  
|Stratégie|Effet|  
|------------|------------|  
|<xref:System.Net.Cache.RequestCacheLevel.Default>|Retourne la ressource mise en cache si la ressource est actualisée, la longueur du contenu est précise, et l’expiration, la modification et attributs de la longueur du contenu sont présents.|  
|<xref:System.Net.Cache.RequestCacheLevel.BypassCache>|Retourne la ressource à partir du serveur.|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>|Retourne la ressource mise en cache si la longueur du contenu est présente et qu’il correspond à la taille d’entrée ; Sinon, lève un <xref:System.Net.WebException>.|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>|Retourne la ressource mise en cache si la longueur du contenu est fournie et correspond à la taille d’entrée ; Sinon, la ressource est téléchargée à partir du serveur et est retournée à l’appelant.|  
|<xref:System.Net.Cache.RequestCacheLevel.Revalidate>|Retourne la ressource mise en cache si l’horodatage de la ressource mise en cache est le même que l’horodatage de la ressource sur le serveur ; Sinon, la ressource est téléchargée à partir du serveur, stockée dans le cache et retournée à l’appelant.|  
|<xref:System.Net.Cache.RequestCacheLevel.Reload>|Télécharge la ressource à partir du serveur, il stocke dans le cache et retourne la ressource à l’appelant.|  
|<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>|Si une ressource mise en cache existe, elle est supprimée. La ressource est téléchargée à partir du serveur et est retournée à l’appelant.|  
  
> [!NOTE]
>  Paramètre <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> remplace tout paramètre de configuration.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'appelant a essayé d'affecter à cette propriété la valeur <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/0eb0c5cb-dd97-484d-8614-785e88877abb">defaultFtpCachePolicy (paramètres réseau)</related>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.FtpWebRequest.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un élément <see cref="T:System.Boolean" /> qui spécifie qu'il faut utiliser une connexion SSL.</summary>
        <value><see langword="true" /> si le contrôle et les transmissions de données sont chiffrés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  À moins que le <xref:System.Net.FtpWebRequest.EnableSsl%2A> propriété est `true`, toutes les données et commandes, y compris vos informations de nom et mot de passe utilisateur, sont envoyées au serveur en texte clair. N’importe qui surveillent le trafic réseau peut afficher vos informations d’identification et les utiliser pour se connecter au serveur. Si vous vous connectez à un serveur FTP qui requiert des informations d’identification et prend en charge SSL, vous devez définir <xref:System.Net.FtpWebRequest.EnableSsl%2A> à `true`.  
  
 Le `"AUTH TLS"` commande est envoyée au serveur pour demander une session chiffrée. Si le serveur ne reconnaît pas cette commande, vous recevez un <xref:System.Net.WebException> exception.  
  
   
  
## Examples  
 L’exemple de code suivant utilise une connexion chiffrée pour télécharger la liste de répertoires dans un serveur FTP.  
  
 [!code-cpp[NCLFtpClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#8)]
 [!code-csharp[NCLFtpClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connexion au serveur FTP a déjà été établie.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="ftpWebRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Objet <see cref="T:System.IAsyncResult" /> retourné lors du démarrage de l'opération.</param>
        <summary>Met fin à une opération asynchrone en attente démarrée avec <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</summary>
        <returns>Instance de <see cref="T:System.IO.Stream" /> accessible en écriture associée à cette instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’opération n’est pas terminée, le <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> méthode se bloque jusqu'à ce que l’opération se termine. Pour déterminer si l’opération est terminée, vérifiez le <xref:System.IAsyncResult.IsCompleted%2A> propriété avant d’appeler <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>.  
  
 Outre les exceptions notées dans « Exceptions », <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> lève à nouveau les exceptions levées lors de l’ouverture du flux en écriture.  
  
> [!NOTE]
>  Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’arrêt d’une opération asynchrone pour obtenir le flux d’une demande. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Net.FtpWebRequest> vue d’ensemble de la classe.  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> n'a pas été obtenu en appelant <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</exception>
        <exception cref="T:System.InvalidOperationException">Cette méthode a déjà été appelée pour l'opération identifiée par <paramref name="asyncResult" />.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="ftpWebRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Élément <see cref="T:System.IAsyncResult" /> retourné lors du démarrage de l'opération.</param>
        <summary>Met fin à une opération asynchrone en attente démarrée avec <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</summary>
        <returns>Référence <see cref="T:System.Net.WebResponse" /> qui contient une instance de <see cref="T:System.Net.FtpWebResponse" />. Cet objet contient la réponse du serveur FTP à la demande.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’opération n’est pas terminée au moment où le <xref:System.Net.FtpWebRequest.EndGetResponse%2A> méthode est appelée, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> bloque jusqu'à ce que l’opération se termine. Pour éviter un blocage, vérifiez la <xref:System.IAsyncResult.IsCompleted%2A> propriété avant d’appeler <xref:System.Net.FtpWebRequest.EndGetResponse%2A>.  
  
 Outre les exceptions notées dans « Exceptions », <xref:System.Net.FtpWebRequest.EndGetResponse%2A> lève à nouveau les exceptions levées lors de la communication avec le serveur.  
  
> [!NOTE]
>  Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’arrêt d’une opération asynchrone pour obtenir une réponse. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Net.FtpWebRequest> vue d’ensemble de la classe.  
  
 [!code-cpp[NCLFtpAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#6)]
 [!code-csharp[NCLFtpAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> n'a pas été obtenu en appelant <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
        <exception cref="T:System.InvalidOperationException">Cette méthode a déjà été appelée pour l'opération identifiée par <paramref name="asyncResult" />.</exception>
        <exception cref="T:System.Net.WebException">Une erreur s'est produite lors de l'utilisation d'un proxy HTTP.</exception>
        <block subset="none" type="usage"><para>Cette méthode génère un trafic réseau.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="M:System.Net.FtpWebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="ftpWebRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère le flux utilisé pour télécharger des données vers un serveur FTP.</summary>
        <returns>Instance de <see cref="T:System.IO.Stream" /> accessible en écriture utilisée pour stocker les données que la demande actuelle doit envoyer au serveur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définir les propriétés de la demande avant d’appeler le <xref:System.Net.FtpWebRequest.GetRequestStream%2A> (méthode). Après avoir écrit les données dans le flux de données, vous devez fermer le flux avant d’envoyer la demande.  
  
 Si vous n’avez pas défini la <xref:System.Net.FtpWebRequest.Method%2A> propriété <xref:System.Net.WebRequestMethods.Ftp.UploadFile> ou <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, vous ne pouvez pas obtenir le flux.  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A> se bloque en attendant le flux. Pour éviter cela, appelez le <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> méthode à la place de <xref:System.Net.FtpWebRequest.GetRequestStream%2A>.  
  
> [!NOTE]
>  Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre la copie d’un fichier de flux de données d’une demande et envoi d’une demande au serveur pour charger les données et les ajoute à un fichier.  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> a été appelé et n'est pas terminé.  
  
\- ou - 
Un proxy HTTP est activé, et vous avez tenté d'utiliser une commande FTP autre que <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> ou <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
        <exception cref="T:System.Net.WebException">Une connexion au serveur FTP n'a pas pu être établie.</exception>
        <exception cref="T:System.Net.ProtocolViolationException">La propriété <see cref="P:System.Net.FtpWebRequest.Method" /> n'a pas la valeur <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> ou <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" />.</exception>
        <block subset="none" type="usage"><para>Cette méthode génère un trafic réseau.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="ftpWebRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne la réponse du serveur FTP.</summary>
        <returns>Référence <see cref="T:System.Net.WebResponse" /> qui contient une instance de <see cref="T:System.Net.FtpWebResponse" />. Cet objet contient la réponse du serveur FTP à la demande.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour accéder aux propriétés spécifiques à FTP, vous devez caster la <xref:System.Net.WebResponse> objet retourné par cette méthode à <xref:System.Net.FtpWebResponse>.  
  
 <xref:System.Net.FtpWebRequest.GetResponse%2A> provoque une connexion de contrôle soit établie et peut également créer une connexion de données. <xref:System.Net.FtpWebRequest.GetResponse%2A> bloque jusqu'à ce que la réponse est reçue. Pour éviter ce problème, vous pouvez effectuer cette opération de façon asynchrone en appelant le <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> et <xref:System.Net.FtpWebRequest.EndGetResponse%2A> méthodes à la place de <xref:System.Net.FtpWebRequest.GetResponse%2A>.  
  
 Si le <xref:System.Net.FtpWebRequest.Proxy%2A> propriété est définie, directement ou dans un fichier de configuration, les communications avec le serveur FTP s’effectuent via le proxy.  
  
 Si un <xref:System.Net.WebException> est levée, utilisez la <xref:System.Net.WebException.Response%2A> et <xref:System.Net.WebException.Status%2A> propriétés de l’exception pour déterminer la réponse à partir du serveur.  
  
 Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
> [!NOTE]
>  Appels multiples à <xref:System.Net.FtpWebRequest.GetResponse%2A> retournent le même objet de réponse ; la demande n’est pas relancée.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la copie d’un fichier de flux de données d’une demande et envoi d’une demande pour ajouter des données dans un fichier sur le serveur. L’exemple appelle <xref:System.Net.FtpWebRequest.GetResponse%2A> pour envoyer la demande et de bloquer jusqu'à ce que la réponse est renvoyée par le serveur.  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> ou <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> a déjà été appelé pour cette instance.  
  
\- ou - 
Un proxy HTTP est activé, et vous avez tenté d'utiliser une commande FTP autre que <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> ou <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
        <exception cref="T:System.Net.WebException"><see cref="P:System.Net.FtpWebRequest.EnableSsl" /> a la valeur <see langword="true" />, mais le serveur ne prend pas en charge cette fonctionnalité.  
  
\- ou - 
Un <see cref="P:System.Net.FtpWebRequest.Timeout" /> a été spécifié et le délai d'attente a expiré.</exception>
        <block subset="none" type="usage"><para>Cette méthode génère un trafic réseau.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.FtpWebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet <see cref="T:System.Net.WebHeaderCollection" /> vide.</summary>
        <value>Objet <see cref="T:System.Net.WebHeaderCollection" /> vide</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.FtpWebRequest.Headers%2A> propriété est fournie uniquement pour la compatibilité avec d’autres implémentations de la <xref:System.Net.WebRequest> et <xref:System.Net.WebResponse> classes. Il est inutile d’utiliser <xref:System.Net.FtpWebRequest.Headers%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Net.FtpWebRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("We don't support KeepAlive = true")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si la connexion de contrôle au serveur FTP doit être fermée une fois la demande terminée.</summary>
        <value><see langword="true" /> si la connexion au serveur ne doit pas être détruite ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Net.FtpWebRequest.KeepAlive%2A> propriété est définie sur `false`, la connexion de contrôle est fermée lorsque vous appelez le <xref:System.Net.FtpWebResponse.Close%2A> (méthode).  
  
 Modification <xref:System.Net.FtpWebRequest.KeepAlive%2A> après avoir appelé la <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> méthode entraîne un <xref:System.InvalidOperationException> exception.  
  
   
  
## Examples  
 L’exemple de code suivant récupère et affiche les valeurs de propriété spécifié <xref:System.Net.FtpWebRequest> objet.  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.FtpWebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la commande à envoyer au serveur FTP.</summary>
        <value>Valeur <see cref="T:System.String" /> qui contient la commande FTP à envoyer au serveur. La valeur par défaut est <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.FtpWebRequest.Method%2A> propriété détermine la commande à envoyer au serveur. Vous définissez le <xref:System.Net.FtpWebRequest.Method%2A> à l’aide des chaînes définies dans les membres de champ public de la <xref:System.Net.WebRequestMethods.Ftp> classe. Notez que les chaînes définies dans le <xref:System.Net.WebRequestMethods.Ftp> classe sont les seules options prises en charge pour le <xref:System.Net.FtpWebRequest.Method%2A> propriété. Définition de la <xref:System.Net.FtpWebRequest.Method%2A> propriété à toute autre valeur entraîne une <xref:System.ArgumentException> exception.  
  
 Lors de la définition <xref:System.Net.FtpWebRequest.Method%2A> à <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, vous devez le faire avant d’appeler le <xref:System.Net.FtpWebRequest.GetRequestStream%2A> (méthode). Faute d’appeler ces membres dans le bon ordre provoque une <xref:System.Net.ProtocolViolationException> exception lorsque vous tentez d’obtenir le flux de demande.  
  
 Les informations d’identification fournies pour le <xref:System.Net.FtpWebRequest> objet doit avoir l’autorisation d’exécuter la méthode spécifiée. Si ce n’est pas le cas, la commande FTP échoue.  
  
 Pour déterminer la réussite ou l’échec d’une commande, vérifiez le <xref:System.Net.FtpWebResponse.StatusCode%2A> et <xref:System.Net.FtpWebResponse.StatusDescription%2A> propriétés.  
  
   
  
## Examples  
 L’exemple de code suivant définit cette propriété sur <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
        <exception cref="T:System.ArgumentException">La méthode n'est pas valide.  
  
\- ou - 
La méthode n'est pas prise en charge.  
  
\- ou - 
Plusieurs méthodes ont été spécifiées.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lève toujours une exception <see cref="T:System.NotSupportedException" />.</summary>
        <value>Lève toujours une exception <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.FtpWebRequest.PreAuthenticate%2A> propriété est fournie uniquement pour la compatibilité avec d’autres implémentations de la <xref:System.Net.WebRequest> et <xref:System.Net.WebResponse> classes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La pré-authentification n'est pas prise en charge pour FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.FtpWebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le proxy utilisé pour communiquer avec le serveur FTP.</summary>
        <value>Instance de <see cref="T:System.Net.IWebProxy" /> responsable de la communication avec le serveur FTP. Sur .NET Core, sa valeur est<see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

### <a name="on-net-framework"></a>Sur .NET Framework

 Le <xref:System.Net.FtpWebRequest.Proxy%2A> propriété identifie le <xref:System.Net.IWebProxy> instance qui communique avec le serveur FTP. Le proxy est défini par le système à l’aide de fichiers de configuration et les paramètres de réseau Local d’Internet Explorer. Pour spécifier qu’aucun proxy doit être utilisé, définissez <xref:System.Net.FtpWebRequest.Proxy%2A> à l’instance de proxy retournée par la <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur la détection automatique du proxy, consultez [détection automatique de Proxy](~/docs/framework/network-programming/automatic-proxy-detection.md).  
  
 Vous devez définir <xref:System.Net.FtpWebRequest.Proxy%2A> avant l’écriture de données dans le flux de données de la demande ou d’obtenir la réponse. Modification <xref:System.Net.FtpWebRequest.Proxy%2A> après avoir appelé la <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> méthode entraîne un <xref:System.InvalidOperationException> exception.  
  
 Le <xref:System.Net.FtpWebRequest> classe prend en charge les proxys HTTP et le Client de pare-feu ISA.  
  
 Si le proxy spécifié est un proxy HTTP, seules les <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, et <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commandes sont prises en charge.  
  
### <a name="on-net-core"></a>Sur .NET Core   

Le `FtpWebRequest.Proxy` propriété n’est pas prise en charge. Définition de la propriété n’a aucun effet. Obtention de la propriété valeur retourne `null`. 


## Examples  
 L’exemple de code suivant affiche la valeur de cette propriété.  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Cette propriété ne peut pas avoir la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadWriteTimeout : int with get, set" Usage="System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un délai d'expiration lors de la lecture ou de l'écriture d'un flux.</summary>
        <value>Nombre de millisecondes avant l'expiration de la lecture ou de l'écriture. La valeur par défaut est 300 000 millisecondes (5 minutes).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> est utilisé lors de l’écriture dans le flux retourné par la <xref:System.Net.FtpWebRequest.GetRequestStream%2A> méthode ou lecture du flux retourné par la <xref:System.Net.FtpWebResponse.GetResponseStream%2A> (méthode).  
  
 Plus précisément, le <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> propriété détermine le délai d’attente pour le <xref:System.IO.Stream.Read%2A> (méthode), qui est utilisé pour lire le flux retourné par la <xref:System.Net.FtpWebResponse.GetResponseStream%2A> (méthode) et pour le <xref:System.IO.Stream.Write%2A> (méthode), qui est utilisé pour écrire dans le flux retourné par la <xref:System.Net.FtpWebRequest.GetRequestStream%2A>(méthode). Si le délai d’attente est dépassé, la méthode d’appel lève une <xref:System.Net.WebException> avec <xref:System.Net.WebExceptionStatus> défini sur <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Pour spécifier la quantité de temps à attendre la fin de demande, utilisez le <xref:System.Net.FtpWebRequest.Timeout%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La requête a déjà été envoyée.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération ensembliste est inférieure ou égale à zéro et n'équivaut pas à <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RenameTo">
      <MemberSignature Language="C#" Value="public string RenameTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RenameTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RenameTo" />
      <MemberSignature Language="VB.NET" Value="Public Property RenameTo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RenameTo { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenameTo : string with get, set" Usage="System.Net.FtpWebRequest.RenameTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nouveau nom d'un fichier qui est renommé.</summary>
        <value>Nouveau nom du fichier qui est renommé.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">La valeur spécifiée pour une opération ensembliste est <see langword="null" /> ou une chaîne vide.</exception>
        <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.FtpWebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'URI demandé par cette instance.</summary>
        <value>Instance de <see cref="T:System.Uri" /> qui identifie une ressource accessible à l'aide de FTP (File Transfer Protocol).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Net.FtpWebRequest.RequestUri%2A> propriété est l’URI spécifié lorsque la <xref:System.Net.WebRequest.Create%2A> méthode a été appelée pour obtenir cette instance.  
  
   
  
## Examples  
 L’exemple de code suivant affiche la valeur de cette propriété.  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.FtpWebRequest.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Net.ServicePoint" /> utilisé pour la connexion au serveur FTP.</summary>
        <value>Objet <see cref="T:System.Net.ServicePoint" /> qui peut être utilisé pour personnaliser le comportement de connexion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si aucun <xref:System.Net.ServicePoint> objet existe, un est créé pour le serveur FTP. Pour définir le nombre maximal de connexions qui peuvent être ouverts pour un serveur FTP, définissez la <xref:System.Net.ServicePoint.ConnectionLimit%2A> propriété de la <xref:System.Net.ServicePoint> instance retournée par cette propriété.  
  
   
  
## Examples  
 L’exemple de code suivant récupère le point de service à partir d’une demande et définit le nombre maximal de connexions à un.  
  
 [!code-cpp[NCLFtpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#1)]
 [!code-csharp[NCLFtpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.FtpWebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre de millisecondes d'attente d'une demande.</summary>
        <value>Valeur <see cref="T:System.Int32" /> qui contient le nombre de millisecondes à attendre avant l'expiration d'une demande. La valeur par défaut est <see cref="F:System.Threading.Timeout.Infinite" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour spécifier une valeur infinie, définissez le <xref:System.Net.FtpWebRequest.Timeout%2A> propriété <xref:System.Threading.Timeout.Infinite> (-1). Valeur par défaut.  
  
 <xref:System.Net.FtpWebRequest.Timeout%2A> est le nombre de millisecondes qu’une demande synchrone faite avec la <xref:System.Net.FtpWebRequest.GetResponse%2A> méthode attend une réponse et que le <xref:System.Net.FtpWebRequest.GetRequestStream%2A> méthode attend un flux de données. Si une ressource ne répond pas dans le délai d’attente, la demande lève un <xref:System.Net.WebException> avec la <xref:System.Net.WebException.Status%2A> propriété définie sur <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Modification <xref:System.Net.FtpWebRequest.Timeout%2A> après avoir appelé la <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> méthode entraîne un <xref:System.InvalidOperationException> exception.  
  
 Une requête de nom de domaine (DNS) peut prendre jusqu'à 15 secondes à retourner ou délai d’attente. Si votre requête contient un nom d’hôte qui requiert une résolution et que vous définissez <xref:System.Net.FtpWebRequest.Timeout%2A> sur une valeur inférieure à 15 secondes, il peut prendre 15 secondes ou plus avant une <xref:System.Net.WebException> est levée pour indiquer un délai d’expiration de votre demande.  
  
   
  
## Examples  
 L’exemple de code suivant définit cette propriété.  
  
 [!code-cpp[NCLFtpClient#23](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#23)]
 [!code-csharp[NCLFtpClient#23](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée est inférieure à zéro et n’est pas <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseBinary">
      <MemberSignature Language="C#" Value="public bool UseBinary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseBinary" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseBinary" />
      <MemberSignature Language="VB.NET" Value="Public Property UseBinary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseBinary { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseBinary : bool with get, set" Usage="System.Net.FtpWebRequest.UseBinary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie le type de données pour les transferts de fichiers.</summary>
        <value><see langword="true" /> pour indiquer au serveur que les données à transférer sont binaires ; <see langword="false" /> pour indiquer qu'il s'agit de données texte. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous envoyez binaire les données, tel qu’une image, définissez cette propriété sur `true`. Si vous envoyez du texte, définissez la propriété sur `false`. Spécification `true` provoque la <xref:System.Net.FtpWebRequest> pour envoyer un `"TYPE I"` commande sur le serveur. Spécification `false` provoque la <xref:System.Net.FtpWebRequest> pour envoyer un `"Type A"` commande sur le serveur. Serveurs FTP peuvent ignorer ces commandes.  
  
 Modification <xref:System.Net.FtpWebRequest.UseBinary%2A> après avoir appelé la <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> méthode entraîne un <xref:System.InvalidOperationException> exception.  
  
   
  
## Examples  
 L’exemple de code suivant récupère et affiche les valeurs de propriété spécifié <xref:System.Net.FtpWebRequest> objet.  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lève toujours une exception <see cref="T:System.NotSupportedException" />.</summary>
        <value>Lève toujours une exception <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> propriété est fournie uniquement pour la compatibilité avec d’autres implémentations de la <xref:System.Net.WebRequest> et <xref:System.Net.WebResponse> classes. Il est inutile d’utiliser <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Les informations d'identification par défaut ne sont pas prises en charge pour FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePassive">
      <MemberSignature Language="C#" Value="public bool UsePassive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePassive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UsePassive" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePassive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePassive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePassive : bool with get, set" Usage="System.Net.FtpWebRequest.UsePassive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le comportement du processus de transfert de données d'une application cliente.</summary>
        <value><see langword="false" /> si le processus de transfert de données de l'application cliente est à l'écoute d'une connexion sur le port de données ; sinon, <see langword="true" /> si le client doit initialiser une connexion sur le port de données. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définissant le <xref:System.Net.FtpWebRequest.UsePassive%2A> propriété `true` envoie le «`PASV"` commande sur le serveur. Cette commande demande au serveur pour écouter sur un port de données et à attendre pour qu’une connexion au lieu de lancer une lors de la réception d’une commande de transfert.  
  
 Pour obtenir une description des comportements qui sont spécifiés à l’aide de <xref:System.Net.FtpWebRequest.UsePassive%2A>, consultez [RFC 959 : « File Transfer Protocol », Section 3.2 : « L’établissement des connexions de données » et la Section 4.1.2 : « Transférer les commandes de paramètre »](https://www.ietf.org/rfc/rfc959.txt).  
  
 Modification <xref:System.Net.FtpWebRequest.UsePassive%2A> après avoir appelé la <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> méthode entraîne un <xref:System.InvalidOperationException> exception.  
  
 Si <xref:System.Net.FtpWebRequest.UsePassive%2A> est défini sur `true`, le serveur FTP peut ne pas envoyer de la taille du fichier et la progression du téléchargement peut toujours être égal à zéro. Si <xref:System.Net.FtpWebRequest.UsePassive%2A> est défini sur `false`, un pare-feu peut déclencher une alerte et bloquer le téléchargement du fichier.  
  
   
  
## Examples  
 L’exemple de code suivant récupère et affiche les valeurs de propriété spécifié <xref:System.Net.FtpWebRequest> objet.  
  
 [!code-cpp[NCLFtpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#6)]
 [!code-csharp[NCLFtpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
  </Members>
</Type>