<Type Name="ServicePoint" FullName="System.Net.ServicePoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3a675cc93f75ebd7462a2679bc072e59694b049" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780502" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServicePoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServicePoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.ServicePoint" />
  <TypeSignature Language="VB.NET" Value="Public Class ServicePoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicePoint" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.ServicePoint</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Assure la gestion des connexions HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Net.ServicePoint> classe gère les connexions à une ressource Internet selon les informations d’hôte passées dans la ressource identificateur URI (Uniform Resource). La connexion initiale à la ressource détermine les informations qui le <xref:System.Net.ServicePoint> gère l’objet, qui est ensuite partagé par toutes les demandes ultérieures à cette ressource.  
  
 <xref:System.Net.ServicePoint> objets gérés par le <xref:System.Net.ServicePointManager> classe et sont créés, si nécessaire, par le <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=nameWithType> (méthode). <xref:System.Net.ServicePoint> les objets ne sont jamais créés directement, mais sont toujours créés et gérés par la <xref:System.Net.ServicePointManager> classe. Le nombre maximal de <xref:System.Net.ServicePoint> objets qui peuvent être créés est défini par le <xref:System.Net.ServicePointManager.MaxServicePoints?displayProperty=nameWithType> propriété.  
  
 Chaque <xref:System.Net.ServicePoint> objet conserve sa connexion à une ressource Internet jusqu'à ce qu’il a été inactif pendant plus de la durée spécifiée dans le <xref:System.Net.ServicePoint.MaxIdleTime> propriété. Lorsqu’un <xref:System.Net.ServicePoint> dépasse la <xref:System.Net.ServicePoint.MaxIdleTime> valeur, il peut être recyclé dans une autre connexion. La valeur par défaut <xref:System.Net.ServicePoint.MaxIdleTime> est définie par le <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> propriété.  
  
 Lorsque le <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> est définie sur une valeur autre que-1 et après le délai spécifié écoulé, actif <xref:System.Net.ServicePoint> connexion est fermée lorsqu’elle a fourni la demande suivante. Cela est utile pour les applications qui ne nécessitent pas de connexions actives ouvertes indéfiniment, comme ils le sont par défaut.  
  
> [!NOTE]
>  Dans les conditions de charge élevée, certaines applications peuvent manquer de threads libres dans le pool de threads, ce qui peut aboutir à faibles performances du système (par exemple, le temps de transaction élevés et variables). Consultez [ http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) pendant un nombre de modifications de configuration que vous pouvez apporter pour résoudre ce problème.  
  
   
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Net.ServicePoint> objet qui se connecte à l’URI www.contoso.com.  
  
 [!code-cpp[System.Net.ServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Address { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'URI (Uniform Resource Identifier) du serveur auquel cet objet <see cref="T:System.Net.ServicePoint" /> se connecte.</summary>
        <value>Instance de la classe <see cref="T:System.Uri" /> contenant l'URI du serveur Internet auquel cet objet <see cref="T:System.Net.ServicePoint" /> se connecte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant affiche la valeur de cette propriété.  
  
 [!code-cpp[System.Net.ServicePoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Net.ServicePoint" /> est en mode hôte.</exception>
        <permission cref="T:System.Net.WebPermission">Pour l’utilisation de <see cref="P:System.Net.ServicePoint.Address" /> si le <see cref="T:System.Net.ServicePoint" /> se connecte via un serveur proxy.</permission>
      </Docs>
    </Member>
    <Member MemberName="BindIPEndPointDelegate">
      <MemberSignature Language="C#" Value="public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.BindIPEndPoint BindIPEndPointDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.BindIPEndPointDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property BindIPEndPointDelegate As BindIPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::BindIPEndPoint ^ BindIPEndPointDelegate { System::Net::BindIPEndPoint ^ get(); void set(System::Net::BindIPEndPoint ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.BindIPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Spécifie le délégué pour associer un <see cref="T:System.Net.IPEndPoint" /> local à <see cref="T:System.Net.ServicePoint" />.</summary>
        <value>Délégué qui force <see cref="T:System.Net.ServicePoint" /> à utiliser une adresse IP (Internet Protocol) locale et un numéro de port particuliers. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines techniques d’équilibrage de charge nécessitent un client à utiliser un locale IP adresse et le port numéro spécifiques, plutôt que <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> (ou <xref:System.Net.IPAddress.IPv6Any?displayProperty=nameWithType> pour Internet Protocol Version 6) et un port éphémère. Votre <xref:System.Net.ServicePoint.BindIPEndPointDelegate> peut satisfaire cette exigence.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour la liaison à un port local. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate Certificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le certificat reçu pour cet objet <see cref="T:System.Net.ServicePoint" />.</summary>
        <value>Instance de la classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> contenant le certificat de sécurité reçu pour cet objet <see cref="T:System.Net.ServicePoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bien qu’un <xref:System.Net.ServicePoint> objet peut établir plusieurs connexions à une ressource Internet, il ne peut gérer qu’un seul certificat.  
  
   
  
## Examples  
 L’exemple de code suivant affiche la valeur de cette propriété.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ ClientCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le dernier certificat client envoyé au serveur.</summary>
        <value>Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> contenant les valeurs publiques du dernier certificat client envoyé au serveur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant affiche la valeur de cette propriété.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConnectionGroup">
      <MemberSignature Language="C#" Value="public bool CloseConnectionGroup (string connectionGroupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CloseConnectionGroup(string connectionGroupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.CloseConnectionGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CloseConnectionGroup (connectionGroupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CloseConnectionGroup(System::String ^ connectionGroupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionGroupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionGroupName">Nom du groupe de connexions qui contient les connexions à fermer et à supprimer de ce point de service.</param>
        <summary>Supprime le groupe de connexions spécifié de cet objet <see cref="T:System.Net.ServicePoint" />.</summary>
        <returns>Valeur <see cref="T:System.Boolean" /> qui indique si le groupe de connexions a été fermé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Groupes de connexions associer un ensemble de requêtes avec une connexion particulière ou un ensemble de connexions. Cette méthode supprime et ferme toutes les connexions qui appartiennent au groupe de connexions spécifié.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionLeaseTimeout">
      <MemberSignature Language="C#" Value="public int ConnectionLeaseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLeaseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLeaseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLeaseTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionLeaseTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre de millisecondes après lequel une connexion <see cref="T:System.Net.ServicePoint" /> active doit être fermée.</summary>
        <value>
          <see cref="T:System.Int32" /> qui spécifie le nombre de millisecondes pendant lequel une connexion <see cref="T:System.Net.ServicePoint" /> active doit rester ouverte. La valeur par défaut est -1, ce qui permet à une connexion <see cref="T:System.Net.ServicePoint" /> active de rester connectée indéfiniment. Affectez à cette propriété la valeur 0 pour forcer la fermeture des connexions <see cref="T:System.Net.ServicePoint" /> quand elles ont fourni une demande.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette propriété pour s’assurer qu’un <xref:System.Net.ServicePoint> connexions actives de l’objet ne restent pas ouvertes indéfiniment. Cette propriété est conçue pour des scénarios où les connexions supprimées, puis rétablies périodiquement, telles que les scénarios d’équilibrage de charge.  
  
 Par défaut, lorsque <xref:System.Net.HttpWebRequest.KeepAlive> est `true` pour une demande, le <xref:System.Net.ServicePoint.MaxIdleTime> propriété définit le délai d’attente de fermeture <xref:System.Net.ServicePoint> connexions en cas d’inactivité. Si le <xref:System.Net.ServicePoint> a des connexions actives, <xref:System.Net.ServicePoint.MaxIdleTime> n’a aucun effet et les connexions restent ouvertes indéfiniment.  
  
 Lorsque le <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> est définie sur une valeur autre que-1 et après le délai spécifié écoulé, actif <xref:System.Net.ServicePoint> connexion est fermée une fois la maintenance d’une demande en définissant <xref:System.Net.HttpWebRequest.KeepAlive> à `false` dans cette demande.  
  
 La définition de cette valeur affecte toutes les connexions gérées par le <xref:System.Net.ServicePoint> objet.  
  
   
  
## Examples  
 L’exemple de code suivant définit la valeur de cette propriété.  
  
 [!code-cpp[NCLServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération ensembliste est un nombre négatif inférieur à -1.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.FtpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.HttpListenerRequest.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionLimit">
      <MemberSignature Language="C#" Value="public int ConnectionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre maximal de connexions autorisé sur cet objet <see cref="T:System.Net.ServicePoint" />.</summary>
        <value>Nombre maximal de connexions autorisé sur cet objet <see cref="T:System.Net.ServicePoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.ServicePoint.ConnectionLimit> propriété définit le nombre maximal de connexions que le <xref:System.Net.ServicePoint> objet permettre apporter à une ressource Internet. La valeur de la <xref:System.Net.ServicePoint.ConnectionLimit> est définie sur la valeur de la <xref:System.Net.ServicePointManager.DefaultConnectionLimit?displayProperty=nameWithType> propriété lorsque le <xref:System.Net.ServicePoint> objet est créé, ou ultérieure devient <xref:System.Net.ServicePointManager.DefaultConnectionLimit> n’ont aucun effet sur existant <xref:System.Net.ServicePoint> objets.  
  
   
  
## Examples  
 Le de code suivant montre comment utiliser le <xref:System.Net.ServicePoint.ConnectionLimit> pour vérifier le nombre maximal de connexions qui le <xref:System.Net.ServicePoint> objet peut rendre à l’identificateur de ressource uniforme (URI) spécifié.  
  
 [!code-cpp[System.Net.ServicePoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La limite de connexions est égale ou inférieure à 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionName">
      <MemberSignature Language="C#" Value="public string ConnectionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionName" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de la connexion.</summary>
        <value>
          <see cref="T:System.String" /> qui représente le nom de la connexion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Net.ServicePoint> objet a été construit en appelant un <xref:System.Net.ServicePointManager.FindServicePoint%2A> surcharge avec un <xref:System.Uri> argument, le <xref:System.Net.ServicePoint.ConnectionName> propriété représente le <xref:System.Uri.Scheme> propriété de la <xref:System.Uri> objet utilisé.  
  
 Si le <xref:System.Net.ServicePoint> objet a été construit à partir d’un hôte réseau et le port, le <xref:System.Net.ServicePoint.ConnectionName> propriété contient une chaîne qui représente l’hôte et le port réseau. Si le <xref:System.Net.ServicePoint.ConnectionName> propriété est définie lorsque construit à partir d’un ordinateur hôte et le port, uniquement <xref:System.Net.WebRequest> objets avec le même <xref:System.Net.WebRequest.ConnectionGroupName> valeur peut utiliser cette <xref:System.Net.ServicePoint> objet.  
  
   
  
## Examples  
 [!code-cpp[System.Net.ServicePoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConnections">
      <MemberSignature Language="C#" Value="public int CurrentConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentConnections" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.CurrentConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConnections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentConnections { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de connexions ouvertes associées à cet objet <see cref="T:System.Net.ServicePoint" />.</summary>
        <value>Nombre de connexions ouvertes associées à cet objet <see cref="T:System.Net.ServicePoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.ServicePoint.CurrentConnections> propriété contient le nombre de connexions Internet ouvertes associées à cet <xref:System.Net.ServicePoint> objet. La valeur de <xref:System.Net.ServicePoint.CurrentConnections> ne peut pas dépasser celui du <xref:System.Net.ServicePoint.ConnectionLimit>.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Net.ServicePoint.CurrentConnections> propriété pour déterminer le nombre de connexions Internet ouvertes associées à cet <xref:System.Net.ServicePoint> objet.  
  
 [!code-cpp[System.Net.ServicePoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect100Continue">
      <MemberSignature Language="C#" Value="public bool Expect100Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expect100Continue" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Expect100Continue" />
      <MemberSignature Language="VB.NET" Value="Public Property Expect100Continue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expect100Continue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui détermine si le comportement 100-Continue doit être utilisé.</summary>
        <value>
          <see langword="true" /> si des réponses 100-Continue sont attendues pour les demandes <see langword="POST" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque cette propriété a la valeur `true`, les demandes de clients qui utilisent la `POST` méthode s’attendre à recevoir un 100-continuer la réponse du serveur pour indiquer que le client doit envoyer les données à valider. Ce mécanisme permet aux clients d’envoyer de grandes quantités de données sur le réseau lorsque le serveur, selon les en-têtes de demande, point de rejeter la demande.  
  
 Par exemple, supposons que la <xref:System.Net.ServicePoint.Expect100Continue> propriété est `false`. Lorsque la demande est envoyée au serveur, elle inclut les données. Si, après avoir lu les en-têtes de demande, le serveur requiert l’authentification et envoie une réponse 401, le client doit renvoyer les données avec les en-têtes d’authentification appropriés.  
  
 Si le <xref:System.Net.ServicePoint.Expect100Continue> propriété est `true`, les en-têtes de demande sont envoyés au serveur. Si le serveur n’a pas a rejeté la demande, il envoie un 100-continuer réponse signalant que les données peuvent être transmises. Si, comme dans l’exemple précédent, le serveur requiert une authentification, il envoie la réponse 401 et le client n’a pas transmis inutilement les données.  
  
 Modification de la valeur de cette propriété n’affecte pas les connexions existantes. Uniquement les nouvelles connexions créées après la modification sont affectées.  
  
 Le Expect 100-continuer le comportement est décrite en détail dans le document IETF RFC 2616, Section 10.1.1.  
  
   
  
## Examples  
 L’exemple de code suivant affiche la valeur de cette propriété.  
  
 [!code-cpp[System.Net.ServicePoint#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdleSince">
      <MemberSignature Language="C#" Value="public DateTime IdleSince { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IdleSince" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.IdleSince" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdleSince As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IdleSince { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la date et l'heure de la dernière connexion de l'objet <see cref="T:System.Net.ServicePoint" /> à un hôte.</summary>
        <value>Objet <see cref="T:System.DateTime" /> contenant la date et l'heure de la dernière connexion de l'objet <see cref="T:System.Net.ServicePoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.ServicePoint.IdleSince> propriété enregistre les dernières date et heure auxquelles un point de service a été déconnecté à partir d’un ordinateur hôte. Lorsque la différence entre l’heure actuelle et <xref:System.Net.ServicePoint.IdleSince> dépasse la valeur de <xref:System.Net.ServicePoint.MaxIdleTime>, le <xref:System.Net.ServicePoint> objet n’est disponible pour être recyclé dans une autre connexion.  
  
   
  
## Examples  
 Le de code suivant montre comment utiliser le <xref:System.Net.ServicePoint.IdleSince> propriété à définir et récupérer la date et l’heure qui le <xref:System.Net.ServicePoint> dernière connexion de l’objet vers un ordinateur hôte.  
  
 [!code-cpp[System.Net.ServicePoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIdleTime">
      <MemberSignature Language="C#" Value="public int MaxIdleTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIdleTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.MaxIdleTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIdleTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIdleTime { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée pendant laquelle une connexion associée à l'objet <see cref="T:System.Net.ServicePoint" /> peut rester inactive avant la fermeture de la connexion.</summary>
        <value>Durée, en millisecondes, pendant laquelle une connexion associée à l'objet <see cref="T:System.Net.ServicePoint" /> peut rester inactive avant d'être fermée et réutilisée pour une autre connexion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez définir <xref:System.Net.ServicePoint.MaxIdleTime> à <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> pour indiquer qu’une connexion associée à la <xref:System.Net.ServicePoint> objet ne doit jamais expirer.  
  
 La valeur par défaut de la <xref:System.Net.ServicePoint.MaxIdleTime> propriété est la valeur de la <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> propriété lorsque le <xref:System.Net.ServicePoint> objet est créé. Les modifications ultérieures apportées à la <xref:System.Net.ServicePointManager.MaxServicePointIdleTime> propriété n’ont aucun effet sur existant <xref:System.Net.ServicePoint> objets.  
  
 Lorsque le <xref:System.Net.ServicePoint.MaxIdleTime> pour une connexion associée à un <xref:System.Net.ServicePoint> est dépassé, la connexion reste ouverte jusqu'à ce que l’application tente d’utiliser la connexion. À ce stade, le Framework ferme la connexion et crée une connexion à l’hôte distant.  
  
   
  
## Examples  
 Le de code suivant montre comment utiliser le <xref:System.Net.ServicePoint.MaxIdleTime> propriété pour définir et récupérer le <xref:System.Net.ServicePoint> de temps d’inactivité.  
  
 [!code-cpp[System.Net.ServicePoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          La propriété <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> a une valeur inférieure à celle du champ <see cref="F:System.Threading.Timeout.Infinite" /> ou supérieure à celle du champ <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public virtual Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la version du protocole HTTP utilisée par l'objet <see cref="T:System.Net.ServicePoint" />.</summary>
        <value>Objet <see cref="T:System.Version" /> contenant la version du protocole HTTP utilisée par l'objet <see cref="T:System.Net.ServicePoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les versions du protocole HTTP sont HTTP/1.0 et HTTP/1.1.  
  
   
  
## Examples  
 L’exemple de code suivant affiche la valeur de cette propriété.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la taille de la mémoire tampon de réception pour le socket utilisé par ce <see cref="T:System.Net.ServicePoint" />.</summary>
        <value>
          <see cref="T:System.Int32" /> contenant la taille de la mémoire tampon de réception en octets. La valeur par défaut est 8192.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations, consultez <xref:System.Net.Sockets.Socket.ReceiveBufferSize>.  
  
   
  
## Examples  
 L’exemple de code suivant définit la valeur de cette propriété.  
  
 [!code-cpp[NCLServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération ensembliste est supérieure à <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTcpKeepAlive">
      <MemberSignature Language="C#" Value="public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTcpKeepAlive(bool enabled, int32 keepAliveTime, int32 keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTcpKeepAlive (enabled As Boolean, keepAliveTime As Integer, keepAliveInterval As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTcpKeepAlive(bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
        <Parameter Name="keepAliveTime" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enabled">Si la valeur est true, l’option de persistance (KeepAlive) du TCP sur une connexion TCP sera activée à l’aide des valeurs <c>keepAliveTime</c> et <c>keepAliveInterval</c> spécifiées.  
  
 Si la valeur est false, l'option de persistance du TCP est désactivée et les paramètres restants sont ignorés.  
  
 La valeur par défaut est false.</param>
        <param name="keepAliveTime">Spécifie le délai d'attente, en millisecondes, sans activité jusqu'à l'envoi du premier paquet persistant.  
  
 La valeur doit être supérieure à 0.  Si une valeur inférieure ou égale à zéro est passée, une exception <see cref="T:System.ArgumentOutOfRangeException" /> est levée.</param>
        <param name="keepAliveInterval">Spécifie l'intervalle, en millisecondes, entre les envois des paquets persistants si aucun accusé de réception n'est reçu.  
  
 La valeur doit être supérieure à 0.  Si une valeur inférieure ou égale à zéro est passée, une exception <see cref="T:System.ArgumentOutOfRangeException" /> est levée.</param>
        <summary>Active ou désactive l'option permettant de maintenir une connexion TCP active.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une application peut demander qu’un fournisseur TCP/IP permettent d’utiliser des paquets persistants sur une connexion TCP. La valeur par défaut est que l’utilisation de paquets de maintien d’une connexion TCP est désactivée.  
  
 Les paramètres par défaut lorsqu’un socket TCP est initialisé le délai d’attente définit le maintien à 2 heures et l’intervalle de conservation à 1 seconde. Le `keepAliveTime` paramètre spécifie le délai d’attente, en millisecondes, sans activité jusqu'à l’envoi du premier paquet persistant. Le `keepAliveInterval` paramètre spécifie l’intervalle, en millisecondes, entre lors de l’envoi des paquets persistants successives si aucun accusé de réception. Le nombre de tests keep-alive ne peut pas être modifié et est défini sur 10.  
  
 Si une connexion TCP est supprimée comme résultat de connexions persistantes, une <xref:System.Net.Sockets.SocketError> de <xref:System.Net.Sockets.SocketError.NetworkReset> est retournée pour tous les appels en cours d’exécution sur le socket, et tous les appels suivants échoueront avec un <xref:System.Net.Sockets.SocketError> de <xref:System.Net.Sockets.SocketError.NotConnected>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour le paramètre <paramref name="keepAliveTime" /> ou <paramref name="keepAliveInterval" /> est inférieure ou égale à 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsPipelining">
      <MemberSignature Language="C#" Value="public bool SupportsPipelining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPipelining" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.SupportsPipelining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsPipelining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsPipelining { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si l'objet <see cref="T:System.Net.ServicePoint" /> prend en charge les connexions canalisées en rafale.</summary>
        <value>
          <see langword="true" /> si l'objet <see cref="T:System.Net.ServicePoint" /> prend en charge les connexions canalisées en rafale ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Traitement en pipeline permet aux clients d’envoyer plusieurs demandes via une connexion persistante sans attendre que chaque réponse à partir du serveur. Le serveur envoie les réponses dans le même ordre que les requêtes ont été reçues.  
  
 Traitement « pipeline » est décrite en détail dans IETF RFC 2616, section 8.1.2.2.  
  
   
  
## Examples  
 L’exemple de code suivant affiche la valeur de cette propriété.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseNagleAlgorithm">
      <MemberSignature Language="C#" Value="public bool UseNagleAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNagleAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.UseNagleAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property UseNagleAlgorithm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseNagleAlgorithm { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui détermine si l'algorithme Nagle est utilisé sur les connexions gérées par l'objet <see cref="T:System.Net.ServicePoint" />.</summary>
        <value>
          <see langword="true" /> pour utiliser l'algorithme Nagle ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’algorithme Nagle est utilisé pour mettre en mémoire tampon petits paquets de données et de les transmettre en tant qu’un seul paquet. Ce processus, appelé « nagling », est largement utilisé, car il réduit le nombre de paquets transmis et réduit la surcharge par paquet.  
  
 Modification de la valeur de cette propriété n’affecte pas les connexions existantes. Uniquement les nouvelles connexions créées après la modification sont affectées.  
  
 L’algorithme Nagle est décrite en détail dans IETF RFC 896.  
  
   
  
## Examples  
 L’exemple de code suivant affiche la valeur de cette propriété.  
  
 [!code-cpp[System.Net.ServicePoint#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>