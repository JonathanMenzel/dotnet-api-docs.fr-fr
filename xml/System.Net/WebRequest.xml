<Type Name="WebRequest" FullName="System.Net.WebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26377e0b2446b25a78eb39b45254d0eed1720ec6" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57928566" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebRequest : MarshalByRefObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit WebRequest extends System.MarshalByRefObject implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebRequest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebRequest&#xA;Inherits MarshalByRefObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebRequest abstract : MarshalByRefObject, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WebRequest = class&#xA;    inherit MarshalByRefObject&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Effectue une demande à un URI (Uniform Resource Identifier). Il s'agit d'une classe <see langword="abstract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  Nous ne vous recommandons d’utiliser `WebRequest` ou ses classes dérivées pour tout nouveau développement. Au lieu de cela, utilisez la <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> classe.

 <xref:System.Net.WebRequest> est le `abstract` classe de base pour. Modèle de demande/réponse de NET pour accéder aux données à partir d’Internet. Une application qui utilise le modèle demande/réponse peut demander des données à partir d’Internet de manière agnostique du protocole, dans lequel l’application fonctionne avec des instances de la <xref:System.Net.WebRequest> classe tandis que les classes descendantes propres au protocole exécutent les détails de la demande.  
  
 Demandes sont envoyées à partir d’une application vers un URI donné, par exemple une page Web sur un serveur. L’URI détermine la classe descendante appropriée à créer à partir d’une liste de <xref:System.Net.WebRequest> descendants inscrite pour l’application. <xref:System.Net.WebRequest> descendants sont généralement inscrits pour gérer un protocole spécifique, tel que HTTP ou FTP, mais peuvent être inscrits pour gérer une demande à un serveur spécifique ou un chemin d’accès sur un serveur.  
  
 Le <xref:System.Net.WebRequest> classe lève un <xref:System.Net.WebException> lorsque des erreurs se produisent pendant l’accès à une ressource Internet. Le <xref:System.Net.WebException.Status%2A> propriété est un de la <xref:System.Net.WebExceptionStatus> valeurs qui indique la source de l’erreur. Lorsque <xref:System.Net.WebException.Status%2A> est <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>, le <xref:System.Net.WebException.Response%2A> propriété contient le <xref:System.Net.WebResponse> reçu à partir de la ressource Internet.  
  
 Étant donné que le <xref:System.Net.WebRequest> classe est un `abstract` classe, le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par <xref:System.Net.WebRequest.Create%2A> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Utilisez le <xref:System.Net.WebRequest.Create%2A> méthode pour initialiser de nouveaux <xref:System.Net.WebRequest> instances. N’utilisez pas le <xref:System.Net.WebRequest> constructeur.  
  
> [!NOTE]
>  Si l’application qui crée l’objet WebRequest s’exécute avec les informations d’identification d’un utilisateur Normal, il se peut que l’application ne sera pas en mesure d’accéder aux certificats installés dans le magasin ordinateur local, sauf si l’autorisation a été explicitement accordée à l’utilisateur à le faire.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Net.WebRequest> de l’instance et de retourner la réponse.  
  
 [!code-cpp[NclWebRequestSimple#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#1)]
 [!code-csharp[NclWebRequestSimple#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#1)]
 [!code-vb[NclWebRequestSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">Pour accéder à l’URI demandé ou n’importe quel URI de la requête est redirigée vers. Énumération associée : <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <block subset="none" type="overrides"><para>Lorsque vous héritez de <see cref="T:System.Net.WebRequest" />, vous devez substituer les membres suivants : <see cref="P:System.Net.WebRequest.Method" />, <see cref="P:System.Net.WebRequest.RequestUri" />, <see cref="P:System.Net.WebRequest.Headers" />, <see cref="P:System.Net.WebRequest.ContentLength" />, <see cref="P:System.Net.WebRequest.ContentType" />, <see cref="P:System.Net.WebRequest.Credentials" />, <see cref="P:System.Net.WebRequest.PreAuthenticate" />, <see cref="M:System.Net.WebRequest.GetRequestStream" />, <see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" /> , <see cref="M:System.Net.WebRequest.GetResponse" />, <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />, et <see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />. En outre, vous devez fournir une implémentation de la <see cref="T:System.Net.IWebRequestCreate" /> interface qui définit le <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> méthode utilisée lorsque vous appelez <see cref="M:System.Net.WebRequest.Create(System.Uri)" />. Vous devez inscrire la classe qui implémente le <see cref="T:System.Net.IWebRequestCreate" /> interface, à l’aide de la <see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" /> méthode ou le fichier de configuration.</para></block>
    <altmember cref="T:System.Net.HttpWebRequest" />
    <related type="Article" href="~/docs/framework/network-programming/requesting-data.md">Demande de données</related>
    <related type="Article" href="~/docs/framework/network-programming/programming-pluggable-protocols.md">programmation de protocoles enfichables</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebRequest" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebRequest" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Net.WebRequest.Create%2A> méthode pour initialiser de nouveaux <xref:System.Net.WebRequest> instances. N’utilisez pas le constructeur.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Net.WebRequest> instance en appelant le <xref:System.Net.WebRequest.Create%2A> méthode sur le <xref:System.Net.WebRequest> classe.  
  
 [!code-cpp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CS/source.cs#1)]
 [!code-vb[Classic WebRequest.WebRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.WebRequest : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.WebRequest" Usage="new System.Net.WebRequest (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations requises pour sérialiser la nouvelle instance de <see cref="T:System.Net.WebRequest" />.</param>
        <param name="streamingContext"><see cref="T:System.Runtime.Serialization.StreamingContext" /> qui indique la source du flux sérialisé associé à la nouvelle instance de <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebRequest" /> à partir des instances spécifiées des classes <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En cas d’implémentation par une classe descendante, ce constructeur implémente le <xref:System.Runtime.Serialization.ISerializable> interface pour le <xref:System.Net.WebRequest> descendants.  
  
 Notez qu’une application doit s’exécuter en mode confiance totale lors de l’utilisation de sérialisation.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder au constructeur si celui-ci n’est pas substitué dans une classe descendante.</exception>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">Sérialisation XML et SOAP</related>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="webRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abandonne la demande.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.Abort%2A> méthode annule des demandes asynchrones aux ressources Internet en main le <xref:System.Net.WebRequest.BeginGetResponse%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.AuthenticationLevel AuthenticationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.AuthenticationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationLevel As AuthenticationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::AuthenticationLevel AuthenticationLevel { System::Net::Security::AuthenticationLevel get(); void set(System::Net::Security::AuthenticationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationLevel : System.Net.Security.AuthenticationLevel with get, set" Usage="System.Net.WebRequest.AuthenticationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.AuthenticationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit des valeurs indiquant les niveaux d'authentification et d'emprunt d'identité utilisés pour cette demande.</summary>
        <value>Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Security.AuthenticationLevel" />. La valeur par défaut est <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.  
  
Lors d'une authentification mutuelle, le client et le serveur doivent tous les deux fournir des informations d'identification pour établir leur identité. Les valeurs <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> et <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> sont pertinentes pour l'authentification Kerberos. L'authentification Kerberos peut être prise en charge directement ou être employée si le protocole Négocier la sécurité est utilisé afin de sélectionner le protocole de sécurité réel. Pour plus d’informations sur les protocoles d’authentification, consultez [authentification Internet](https://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a).  
  
Pour déterminer si l'authentification mutuelle s'est produite, vérifiez la propriété <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" />.  
  
Si vous spécifiez la valeur de l'indicateur d'authentification <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> et que l'authentification mutuelle ne se produit pas, votre application reçoit une exception <see cref="T:System.IO.IOException" /> avec une exception interne <see cref="T:System.Net.ProtocolViolationException" /> qui indique que l'authentification mutuelle a échoué.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant définit la valeur de cette propriété.  
  
 [!code-cpp[NclCredPolicy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#1)]
 [!code-csharp[NclCredPolicy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">Objet contenant les informations d'état de cette demande asynchrone.</param>
        <summary>En cas de substitution dans une classe descendante, fournit une version asynchrone de la méthode <see cref="M:System.Net.WebRequest.GetRequestStream" />.</summary>
        <returns>Élément <see cref="T:System.IAsyncResult" /> qui référence la demande asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.BeginGetRequestStream%2A> méthode démarre une demande asynchrone d’un flux utilisé pour envoyer des données à une ressource Internet. La méthode de rappel qui implémente le <xref:System.AsyncCallback> délégué utilise la <xref:System.Net.WebRequest.EndGetRequestStream%2A> méthode pour retourner le flux de demande.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Net.WebRequest.BeginGetRequestStream%2A> pour obtenir de manière asynchrone le flux de demande.  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <altmember cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md">Requêtes asynchrones</related>
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">Objet contenant les informations d'état de cette demande asynchrone.</param>
        <summary>En cas de substitution dans une classe descendante, démarre une demande asynchrone pour une ressource Internet.</summary>
        <returns>Élément <see cref="T:System.IAsyncResult" /> qui référence la demande asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.BeginGetResponse%2A> méthode démarre une demande asynchrone d’une réponse. La méthode de rappel qui implémente le <xref:System.AsyncCallback> délégué utilise la <xref:System.Net.WebRequest.EndGetResponse%2A> méthode pour retourner le <xref:System.Net.WebResponse> à partir de la ressource Internet.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Si une exception WebException est levée, utilisez la <xref:System.Net.WebException.Response%2A> et <xref:System.Net.WebException.Status%2A> propriétés de l’exception pour déterminer la réponse à partir du serveur.  
  
   
  
## Examples  
 L’exemple suivant utilise <xref:System.Net.WebRequest.BeginGetResponse%2A> pour demander de façon asynchrone la ressource cible. Lorsque la ressource a été obtenue, la méthode de rappel spécifiée sera exécutée.  
  
 [!code-cpp[WebRequest_BeginGetResponse#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#2)]
 [!code-csharp[WebRequest_BeginGetResponse#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#2)]
 [!code-vb[WebRequest_BeginGetResponse#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <altmember cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
        <altmember cref="M:System.Net.WebRequest.GetResponse" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md">Requêtes asynchrones</related>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public virtual System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebRequest.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la stratégie de cache de cette demande.</summary>
        <value>Objet <see cref="T:System.Net.Cache.RequestCachePolicy" /> qui définit une stratégie de cache.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La stratégie de cache actuelle et la présence de la ressource demandée dans le cache de déterminent si une réponse peut être récupérée à partir du cache. À l’aide généralement des réponses mises en cache améliore les performances de l’application, mais il existe un risque que la réponse dans le cache ne correspond pas à la réponse sur le serveur.  
  
 Stratégie de cache par défaut peut être spécifié dans le fichier de configuration Machine.config ou en définissant le <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> propriété pour les demandes qui utilisent le schéma d’URI de protocole HTTP (Hypertext Transfer) ou Secure Hypertext Transfer Protocol (HTTPS).  
  
 Une copie d’une ressource est ajoutée uniquement au cache si le flux de réponse pour la ressource est récupéré et que vous lire jusqu'à la fin du flux. Une autre demande pour la même ressource pourrait utiliser une copie mise en cache, en fonction du niveau de stratégie de cache pour cette demande.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la définition de la stratégie de cache pour une demande Web.  
  
 [!code-cpp[NCLSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NCLSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.DefaultCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public virtual string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.WebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe descendante, obtient ou définit le nom du groupe de connexions pour la demande.</summary>
        <value>Nom du groupe de connexions pour la demande.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.ConnectionGroupName%2A> propriété associe des demandes spécifiques au sein d’une application à un ou plusieurs pools de connexions.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <block subset="none" type="overrides"><para>Le <see cref="P:System.Net.WebRequest.ConnectionGroupName" /> propriété associe généralement un groupe de requêtes qui partagent un ensemble d’informations d’identification avec une connexion à une ressource Internet pour éviter les défaillances de sécurité potentielles.</para></block>
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
        <related type="Article" href="~/docs/framework/network-programming/connection-grouping.md">Regroupement de connexions</related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public virtual long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.WebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe descendante, obtient ou définit la longueur des données de demande envoyées.</summary>
        <value>Nombre d'octets de données de demande envoyé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.ContentLength%2A> propriété contient le nombre d’octets de données envoyées à la ressource Internet par le <xref:System.Net.WebRequest> instance.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant définit le <xref:System.Net.WebRequest.ContentLength%2A> propriété à la quantité d’octets dans la mémoire tampon d’octets sortants.  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.WebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe descendante, obtient ou définit le type de contenu des données de demande envoyées.</summary>
        <value>Type de contenu des données de demande.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.ContentType%2A> propriété contient le type de média de la demande. Il s’agit généralement du MIME encodage du contenu.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant définit le <xref:System.Net.WebRequest.ContentType%2A> propriété pour le type de média approprié.  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise un nouveau <see cref="T:System.Net.WebRequest" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUriString As String) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(System::String ^ requestUriString);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.Create requestUriString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUriString">URI qui identifie la ressource Internet.</param>
        <summary>Initialise une nouvelle instance de <see cref="T:System.Net.WebRequest" /> pour le modèle d'URI spécifié.</summary>
        <returns>Descendant de <see cref="T:System.Net.WebRequest" /> pour le modèle d'URI spécifique.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.Create%2A> méthode retourne un descendant de la <xref:System.Net.WebRequest> classe déterminée au moment de l’exécution en tant que la correspondance la plus proche inscrite pour `requestUri`.  
  
 Par exemple, si un URI commençant par `http://` ou `https://` est passé dans `requestUri`, un <xref:System.Net.HttpWebRequest> est retourné par <xref:System.Net.WebRequest.Create%2A>. Si un URI commençant par `ftp://` est passé à la place, le <xref:System.Net.WebRequest.Create%2A> méthode retournera un <xref:System.Net.FtpWebRequest> instance. Si un URI commençant par `file://` est passé à la place, le <xref:System.Net.WebRequest.Create%2A> méthode retournera un <xref:System.Net.FileWebRequest> instance.  
  
 Les types de réserve pré-enregistré déjà inscrits sont les suivantes :  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 .NET prend en charge la `http://`, `https://`, `ftp://`, et `file://` schémas d’URI. Custom <xref:System.Net.WebRequest> descendants pour gérer les autres demandes sont inscrits avec le <xref:System.Net.WebRequest.RegisterPrefix%2A> (méthode).  
  
 Le <xref:System.Net.WebRequest.Create%2A> méthode utilise le `requestUriString` paramètre pour créer un <xref:System.Uri> instance qu’il transmet au nouveau <xref:System.Net.WebRequest>.  
  
> [!NOTE]
>  Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).
  
   
  
## Examples  
 L’exemple suivant utilise <xref:System.Net.WebRequest.Create%2A> pour instancier un <xref:System.Net.HttpWebRequest> instance. Chaîne représentant l’URL cible est utilisée comme paramètre de constructeur.  
  
 [!code-cpp[WebResponse_ResponseUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_ResponseUri/CPP/webresponse_responseuri.cpp#1)]
 [!code-csharp[WebResponse_ResponseUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_ResponseUri/CS/webresponse_responseuri.cs#1)]
 [!code-vb[WebResponse_ResponseUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_ResponseUri/VB/webresponse_responseuri.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUriString" /> n’a pas été enregistré.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUriString" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation <see cref="T:System.Net.WebPermissionAttribute" /> de se connecter à l’URI demandé ou à un URI vers lequel la demande est redirigée.</exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para>  
 Dans <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET pour les applications du Windows Store</see> ou la <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Bibliothèque de classes portable</see>, interceptez l’exception de la classe de base, <see cref="T:System.FormatException" />, à la place.  
  
</para>
          </block>  
  
 L’URI spécifié dans <paramref name="requestUriString" /> n’est pas un URI valide.</exception>
        <related type="Article" href="~/docs/framework/network-programming/programming-pluggable-protocols.md">programmation de protocoles enfichables</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.Create requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUri"><see cref="T:System.Uri" /> contenant l'URI de la ressource demandée.</param>
        <summary>Initialise une nouvelle instance de <see cref="T:System.Net.WebRequest" /> pour le modèle d'URI spécifié.</summary>
        <returns>Descendant <see cref="T:System.Net.WebRequest" /> pour le modèle URI spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.Create%2A> méthode retourne un descendant de la <xref:System.Net.WebRequest> classe déterminée au moment de l’exécution en tant que la correspondance la plus proche inscrite pour `requestUri`.  
  
 Par exemple, si vous créez un <xref:System.Net.WebRequest> descendant, Handler1, pour gérer les demandes à `http://www.contoso.com/text/` et un autre nommé Handler2 pour gérer les demandes à `http://www.contoso.com/code/`, vous pouvez utiliser <xref:System.Net.WebRequest.Create%2A> méthode pour retourner le descendant WebRequest associé à le URI spécifié.  
  
 Pour retourner un descendant de la <xref:System.Net.WebRequest> classe basée uniquement sur la partie modèle d’un URI, utilisez la <xref:System.Net.WebRequest.CreateDefault%2A> (méthode).  
  
 Par exemple, si un URI commençant par `http://` ou `https://` est passé dans `requestUri`, un <xref:System.Net.HttpWebRequest> est retourné par <xref:System.Net.WebRequest.Create%2A>. Si un URI commençant par `ftp://` est passé à la place, le <xref:System.Net.WebRequest.Create%2A> méthode retournera un <xref:System.Net.FileWebRequest> instance. Si un URI commençant par `file://` est passé à la place, le <xref:System.Net.WebRequest.Create%2A> méthode retournera un <xref:System.Net.FileWebRequest> instance.  
  
 Les types de réserve pré-enregistré déjà inscrits sont les suivantes :  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 .NET prend en charge la `http://`, `https://`, `ftp://`, et `file://` schémas d’URI. Custom <xref:System.Net.WebRequest> descendants pour gérer les autres demandes sont inscrits avec le <xref:System.Net.WebRequest.RegisterPrefix%2A> (méthode).  
  
> [!NOTE]
>  Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 L’exemple suivant utilise <xref:System.Net.WebRequest.Create%2A> pour instancier un <xref:System.Net.HttpWebRequest> instance. Un Uri représentant l’URL cible est utilisé comme paramètre de constructeur.  
  
 [!code-cpp[WebRequest_Create#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Create/CPP/webrequest_create.cpp#1)]
 [!code-csharp[WebRequest_Create#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Create/CS/webrequest_create.cs#1)]
 [!code-vb[WebRequest_Create#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Create/VB/webrequest_create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUri" /> n'est pas inscrit.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation <see cref="T:System.Net.WebPermissionAttribute" /> de se connecter à l’URI demandé ou à un URI vers lequel la demande est redirigée.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest CreateDefault (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest CreateDefault(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateDefault(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ CreateDefault(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateDefault : Uri -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.CreateDefault requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUri"><see cref="T:System.Uri" /> contenant l'URI de la ressource demandée.</param>
        <summary>Initialise une nouvelle instance de <see cref="T:System.Net.WebRequest" /> pour le modèle d'URI spécifié.</summary>
        <returns>Descendant <see cref="T:System.Net.WebRequest" /> pour le modèle URI spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.CreateDefault%2A> méthode retourne un <xref:System.Net.WebRequest> instance descendant basée uniquement sur la partie modèle d’un URI.  
  
 Par exemple, si un URI commençant par `http://` est passé dans `requestUri`, un <xref:System.Net.HttpWebRequest> est retourné par <xref:System.Net.WebRequest.CreateDefault%2A>. Si un URI commençant par `file://` est passé à la place, le <xref:System.Net.WebRequest.CreateDefault%2A> méthode retournera un <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau dans .NET](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUri" /> n'est pas inscrit.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation <see cref="T:System.Net.WebPermissionAttribute" /> de se connecter à l’URI demandé ou à un URI vers lequel la demande est redirigée.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateHttp">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de <see cref="T:System.Net.HttpWebRequest" /> pour l'URI spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUriString As String) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(System::String ^ requestUriString);" />
      <MemberSignature Language="F#" Value="static member CreateHttp : string -&gt; System.Net.HttpWebRequest" Usage="System.Net.WebRequest.CreateHttp requestUriString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUriString">Chaîne URI qui identifie la ressource Internet.</param>
        <summary>Initialise une nouvelle instance de <see cref="T:System.Net.HttpWebRequest" /> pour la chaîne URI spécifiée.</summary>
        <returns>Instance de <see cref="T:System.Net.HttpWebRequest" /> pour la chaîne d’URI spécifique.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.CreateHttp%28System.String%29> méthode retourne une instance de la <xref:System.Net.HttpWebRequest> classe pour le `requestUriString`.  
  
 Lorsqu’un URI qui commence par `http://` ou `http://` est passé dans le `requestUriString` paramètre, un <xref:System.Net.HttpWebRequest> est retourné par <xref:System.Net.WebRequest.CreateHttp%28System.String%29>. Un autre jeu lèvera une <xref:System.NotSupportedException>.  
  
 Le <xref:System.Net.WebRequest.CreateHttp%28System.String%29> méthode utilise le `requestUriString` paramètre pour créer un <xref:System.Uri> instance qu’il transmet au nouveau <xref:System.Net.HttpWebRequest>. Si la méthode réussite, le <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> propriété sur retourné <xref:System.Net.HttpWebRequest> instance est définie sur `false`.  
  
 .NET prend en charge la `http://` et `https://` schémas d’URI. Custom <xref:System.Net.WebRequest> descendants pour gérer les autres demandes sont inscrits avec le <xref:System.Net.WebRequest.RegisterPrefix%2A> (méthode). Le <xref:System.Net.WebRequest.Create%28System.String%29> méthode peut être utilisée pour créer un descendant de la <xref:System.Net.WebRequest> classe pour les autres schémas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUriString" /> est le schéma http ou https.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUriString" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation <see cref="T:System.Net.WebPermissionAttribute" /> de se connecter à l’URI demandé ou à un URI vers lequel la demande est redirigée.</exception>
        <exception cref="T:System.UriFormatException">L’URI spécifié dans <paramref name="requestUriString" /> n’est pas un URI valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUri As Uri) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateHttp : Uri -&gt; System.Net.HttpWebRequest" Usage="System.Net.WebRequest.CreateHttp requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="requestUri">URI qui identifie la ressource Internet.</param>
        <summary>Initialise une nouvelle instance de <see cref="T:System.Net.HttpWebRequest" /> pour l'URI spécifié.</summary>
        <returns>Instance de <see cref="T:System.Net.HttpWebRequest" /> pour la chaîne d’URI spécifique.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> méthode retourne une instance de la <xref:System.Net.HttpWebRequest> classe pour le `requestUri`.  
  
 Lorsqu’un URI qui commence par `http://` ou `http://` est passé dans le `requestUri` paramètre, un <xref:System.Net.HttpWebRequest> est retourné par <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>. Un autre jeu lèvera une <xref:System.NotSupportedException>.  
  
 Le <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> méthode utilise le `requestUri` paramètre pour créer un nouveau <xref:System.Net.HttpWebRequest> instance. Si la méthode réussite, le <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> propriété sur retourné <xref:System.Net.HttpWebRequest> instance est définie sur `false`.  
  
 .NET prend en charge la `http://` et `https://` schémas d’URI. Custom <xref:System.Net.WebRequest> descendants pour gérer les autres demandes sont inscrits avec le <xref:System.Net.WebRequest.RegisterPrefix%2A> (méthode). Le <xref:System.Net.WebRequest.Create%28System.Uri%29> méthode peut être utilisée pour créer un descendant de la <xref:System.Net.WebRequest> classe pour les autres schémas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUri" /> est le schéma http ou https.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation <see cref="T:System.Net.WebPermissionAttribute" /> de se connecter à l’URI demandé ou à un URI vers lequel la demande est redirigée.</exception>
        <exception cref="T:System.UriFormatException">L’URI spécifié dans <paramref name="requestUri" /> n’est pas un URI valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatorInstance">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebRequestCreate CreatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebRequestCreate CreatorInstance" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CreatorInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CreatorInstance As IWebRequestCreate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebRequestCreate ^ CreatorInstance { System::Net::IWebRequestCreate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreatorInstance : System.Net.IWebRequestCreate" Usage="System.Net.WebRequest.CreatorInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebRequestCreate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de remplacement dans une classe descendante, obtient l'objet de fabrique dérivé de la classe <see cref="T:System.Net.IWebRequestCreate" /> utilisé pour créer l'élément <see cref="T:System.Net.WebRequest" /> instancié pour créer la demande à l'URI spécifié.</summary>
        <value>Type <see cref="T:System.Net.WebRequest" /> dérivé retourné par la méthode <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Cette propriété permet à une application déterminer quelle <xref:System.Net.IWebRequestCreate> objet de fabrique dérivé a été utilisé pour créer la demande. Cet objet peut être [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) ou [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)), mais il peut également être une instance personnalisée dérivée de <xref:System.Net.IWebRequestCreate>. Cela permet à une application déterminer si l’hébergement de navigateur [!INCLUDE[silverlight](~/includes/silverlight-md.md)], le [!INCLUDE[silverlight](~/includes/silverlight-md.md)] client, ou un objet personnalisé gère les requêtes HTTP et les réponses pour le <xref:System.Net.WebRequest> instance. Le <xref:System.Net.WebRequest.RegisterPrefix%2A> méthode permet à une application à configurer qui dérivée <xref:System.Net.WebRequest> type est instancié lors d’une demande à un URI spécifique. <xref:System.Net.WebRequest> créateurs sont généralement inscrits pour gérer un protocole spécifique, tel que HTTP ou HTTPS, mais peuvent être inscrits pour gérer une demande à un serveur spécifique ou un chemin d’accès sur un serveur. Cela est utile lorsque plusieurs dérivée <xref:System.Net.WebRequest> type puisse traiter les demandes pour le même protocole. Le [!INCLUDE[sil3_first](~/includes/sil3-first-md.md)] et runtime ultérieure prend en charge plusieurs gestionnaires HTTP chacun possédant des fonctionnalités différentes. Par exemple, un service web qui utilise Representational State Transfer (REST) peut nécessiter le [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)) gestionnaire pendant un service web SOAP peut être en mesure d’utiliser la valeur par défaut [ System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) gestionnaire.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe descendante, obtient ou définit les informations d'identification réseau utilisées pour authentifier la demande auprès de la ressource Internet.</summary>
        <value><see cref="T:System.Net.ICredentials" /> contenant les informations d'authentification associées à la demande. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.Credentials%2A> propriété contient les informations d’identification d’authentification requises pour accéder à la ressource Internet.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant définit le <xref:System.Net.WebRequest.Credentials%2A> propriété en utilisant les informations d’identification par défaut de l’utilisateur actuel. Lorsque la demande est faite, les informations d’identification stockées dans cette propriété sont utilisées pour valider le client. Cela revient à affecter à la <xref:System.Net.WebRequest.UseDefaultCredentials%2A> propriété `true`.  
  
 [!code-cpp[NclWebRequestSimple#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#2)]
 [!code-csharp[NclWebRequestSimple#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#2)]
 [!code-vb[NclWebRequestSimple#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.HttpWebRequest.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la stratégie de cache par défaut de cette requête.</summary>
        <value><see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> spécifiant la stratégie de cache en vigueur pour cette requête lorsque aucune autre stratégie n'est applicable.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette stratégie est utilisée pour cette demande si les conditions suivantes sont réunies :  
  
-   Il existe aucune <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> propriété spécifiée pour cette demande.  
  
-   La configuration de l’ordinateur et application fichiers ne spécifient pas une stratégie de cache qui n’est applicable à l’identificateur URI (Uniform Resource) utilisé pour créer cette demande.  
  
 La stratégie de cache détermine si la ressource demandée peut être extraite d’un cache au lieu d’envoyer la demande à l’ordinateur hôte de ressources.  
  
 Une copie d’une ressource est ajoutée uniquement au cache si le flux de réponse pour la ressource est récupéré et que vous lire jusqu'à la fin du flux. Une autre demande pour la même ressource pourrait utiliser une copie mise en cache, en fonction du niveau de stratégie de cache pour cette demande.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la définition de la stratégie de cache par défaut pour les demandes Web.  
  
 [!code-cpp[NCLSimpleCache#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#15)]
 [!code-csharp[NCLSimpleCache#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">pour un accès illimité aux ressources réseau. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="DefaultWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy DefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.IWebProxy DefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultWebProxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::IWebProxy ^ DefaultWebProxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultWebProxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebRequest.DefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le proxy HTTP global.</summary>
        <value><see cref="T:System.Net.IWebProxy" /> utilisé par chaque appel aux instances de <see cref="T:System.Net.WebRequest" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.DefaultWebProxy%2A> propriété obtient ou définit le proxy global. Le <xref:System.Net.WebRequest.DefaultWebProxy%2A> propriété détermine le proxy par défaut que tous les <xref:System.Net.WebRequest> instances utilisent si la demande prend en charge les proxies et si aucun proxy n’est défini explicitement à l’aide de la <xref:System.Net.HttpWebRequest.Proxy%2A> propriété. Proxies sont actuellement pris en charge par <xref:System.Net.FtpWebRequest> et <xref:System.Net.HttpWebRequest>.  
  
 Le <xref:System.Net.WebRequest.DefaultWebProxy%2A> propriété lit les paramètres de proxy à partir du fichier app.config. S’il n’existe aucun fichier de configuration, paramètres de proxy Internet Explorer (IE) de l’utilisateur actuel sont utilisés.  
  
 Si le <xref:System.Net.WebRequest.DefaultWebProxy%2A> propriété est définie sur null, toutes les instances de la <xref:System.Net.WebRequest> classe créée par le <xref:System.Net.WebRequest.Create%2A> ou <xref:System.Net.WebRequest.CreateDefault%2A> méthodes n’ont pas de proxy.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">Pour obtenir ou définir le proxy HTTP global. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream&#xA;override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="webRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> qui fait référence à une demande d'un flux en attente.</param>
        <summary>En cas de substitution dans une classe descendante, retourne <see cref="T:System.IO.Stream" /> pour l'écriture de données dans la ressource Internet.</summary>
        <returns><see cref="T:System.IO.Stream" /> dans lequel écrire les données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.EndGetRequestStream%2A> méthode effectue une demande de flux asynchrone qui a été démarrée par le <xref:System.Net.WebRequest.BeginGetRequestStream%2A> (méthode).  
  
> [!NOTE]
>  Pour éviter les problèmes de synchronisation avec le garbage collection, veillez à fermer le flux de réponse en appelant le <xref:System.IO.Stream.Close%2A> méthode sur le flux retourné par <xref:System.Net.WebResponse.GetResponseStream%2A> après avoir appelé <xref:System.Net.WebRequest.EndGetResponse%2A>.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant obtient et utilise le flux de demande en appelant le <xref:System.Net.WebRequest.EndGetRequestStream%2A>. Le <xref:System.Net.WebRequest.EndGetRequestStream%2A> méthode termine l’appel asynchrone à <xref:System.Net.WebRequest.BeginGetRequestStream%2A>.  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md">Requêtes asynchrones</related>
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="webRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> qui fait référence à une demande de réponse en attente.</param>
        <summary>En cas de substitution dans une classe descendante, retourne <see cref="T:System.Net.WebResponse" />.</summary>
        <returns><see cref="T:System.Net.WebResponse" /> qui contient une réponse à la demande Internet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.EndGetResponse%2A> méthode effectue une demande asynchrone d’une ressource Internet qui a été démarrée avec le <xref:System.Net.WebRequest.BeginGetResponse%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant appelle la <xref:System.Net.WebRequest.EndGetResponse%2A> pour récupérer la ressource cible.  
  
 [!code-cpp[WebRequest_BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#1)]
 [!code-csharp[WebRequest_BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#1)]
 [!code-vb[WebRequest_BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/making-asynchronous-requests.md">Requêtes asynchrones</related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="webRequest.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
        <param name="streamingContext"><see cref="T:System.Runtime.Serialization.StreamingContext" /> qui spécifie la destination de cette sérialisation.</param>
        <summary>Remplit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tous les objets inclus dans le <xref:System.Runtime.Serialization.SerializationInfo> sont automatiquement suivies et sérialisé par le formateur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestStream : unit -&gt; System.IO.Stream&#xA;override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="webRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe descendante, retourne <see cref="T:System.IO.Stream" /> pour l'écriture de données dans la ressource Internet.</summary>
        <returns><see cref="T:System.IO.Stream" /> pour l'écriture de données dans la ressource Internet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.GetRequestStream%2A> méthode initie une demande à envoyer des données à la ressource Internet et retourne un <xref:System.IO.Stream> instance pour envoyer des données à la ressource Internet.  
  
 Le <xref:System.Net.WebRequest.GetRequestStream%2A> méthode fournit un accès synchrone à le <xref:System.IO.Stream>. Pour l’accès asynchrone, utilisez la <xref:System.Net.WebRequest.BeginGetRequestStream%2A> et <xref:System.Net.WebRequest.EndGetRequestStream%2A> méthodes.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant utilise la <xref:System.Net.WebRequest.GetRequestStream%2A> méthode pour obtenir un flux, puis écrit des données de ce flux de données.  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md">Utilisation de flux sur le réseau</related>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetRequestStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetRequestStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetRequestStreamAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetRequestStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webRequest.GetRequestStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe descendante, retourne un <see cref="T:System.IO.Stream" /> pour l'écriture de données vers la ressource Internet en tant qu'opération asynchrone.</summary>
        <returns>Objet de tâche représentant l'opération asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette opération ne bloque pas. Retourné <xref:System.Threading.Tasks.Task%601> objet s’achève quand le <xref:System.IO.Stream> ressource pour l’écriture des données à Internet n’est disponible.  
  
 Après avoir appelé <xref:System.Net.WebRequest.GetRequestStreamAsync%2A>, prenez soin de fermer le flux de demande avant d’appeler <xref:System.Net.WebRequest.GetResponseAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="abstract member GetResponse : unit -&gt; System.Net.WebResponse&#xA;override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="webRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe descendante, retourne une réponse à une demande Internet.</summary>
        <returns><see cref="T:System.Net.WebResponse" /> contenant la réponse à la demande Internet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.GetResponse%2A> méthode envoie une demande à une ressource Internet et retourne un <xref:System.Net.WebResponse> instance. Si la demande a déjà été initialisée par un appel à <xref:System.Net.WebRequest.GetRequestStream%2A>, le <xref:System.Net.WebRequest.GetResponse%2A> méthode termine la requête et retourne une réponse.  
  
 Le <xref:System.Net.WebRequest.GetResponse%2A> méthode fournit un accès synchrone à le <xref:System.Net.WebResponse>. Pour l’accès asynchrone, utilisez la <xref:System.Net.WebRequest.BeginGetResponse%2A> et <xref:System.Net.WebRequest.EndGetResponse%2A> méthodes.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Si une exception WebException est levée, utilisez la <xref:System.Net.WebException.Response%2A> et <xref:System.Net.WebException.Status%2A> propriétés de l’exception pour déterminer la réponse à partir du serveur.  
  
   
  
## Examples  
 L’exemple suivant définit le <xref:System.Net.WebRequest.Timeout%2A> propriété à 10 000 millisecondes. Si le délai expire avant que la ressource peut être retournée, un <xref:System.Net.WebException> est levée.  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Net.WebResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetResponseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt; GetResponseAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebResponse&gt; GetResponseAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponseAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponseAsync () As Task(Of WebResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::WebResponse ^&gt; ^ GetResponseAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetResponseAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;&#xA;override this.GetResponseAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;" Usage="webRequest.GetResponseAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe descendante, retourne une réponse à une demande Internet en tant qu'opération asynchrone.</summary>
        <returns>Objet de tâche représentant l'opération asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette opération ne bloque pas. Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après une réponse à une demande Internet est disponible.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy GetSystemWebProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IWebProxy GetSystemWebProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetSystemWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemWebProxy () As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IWebProxy ^ GetSystemWebProxy();" />
      <MemberSignature Language="F#" Value="static member GetSystemWebProxy : unit -&gt; System.Net.IWebProxy" Usage="System.Net.WebRequest.GetSystemWebProxy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un proxy configuré avec les paramètres Internet Explorer de l'utilisateur actuellement représenté.</summary>
        <returns><see cref="T:System.Net.IWebProxy" /> utilisé par chaque appel aux instances de <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.GetSystemWebProxy%2A> méthode lit les paramètres de proxy Internet Explorer (IE) de l’utilisateur actuel. Ce processus inclut les options IE automatiquement détecter les paramètres du proxy, utilisez un script de configuration automatique, paramètres du serveur proxy manuel et les paramètres de serveur avancés manuelle du proxy.  
  
 Si votre application emprunte plusieurs utilisateurs, vous pouvez utiliser la <xref:System.Net.WebRequest.GetSystemWebProxy%2A> méthode pour récupérer un proxy pour chaque utilisateur avec emprunt d’identité.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">Pour obtenir ou définir le proxy HTTP global. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.WebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe descendante, obtient ou définit la collection de paires nom/valeur d'en-tête associées à la demande.</summary>
        <value><see cref="T:System.Net.WebHeaderCollection" /> contenant des paires nom/valeur d'en-tête associées à cette demande.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.Headers%2A> propriété contient un <xref:System.Net.WebHeaderCollection> instance qui contient les informations d’en-tête à envoyer à la ressource Internet.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant affiche les paires de nom/valeur d’en-tête associées à cette demande.  
  
 [!code-cpp[WebRequest_Headers#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Headers/CPP/webrequest_headers.cpp#1)]
 [!code-csharp[WebRequest_Headers#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Headers/CS/webrequest_headers.cs#1)]
 [!code-vb[WebRequest_Headers#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Headers/VB/webrequest_headers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <altmember cref="T:System.Net.WebHeaderCollection" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.Net.WebRequest.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le niveau d'emprunt d'identité pour la demande en cours.</summary>
        <value>Valeur <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le niveau d’emprunt d’identité détermine comment le serveur peut utiliser les informations d’identification du client.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public virtual string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.WebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe descendante, obtient ou définit la méthode de protocole à utiliser dans cette demande.</summary>
        <value>Méthode de protocole utilisée dans cette demande.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En cas de substitution dans une classe descendante, la <xref:System.Net.WebRequest.Method%2A> propriété contient la méthode de demande à utiliser dans cette demande.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant définit le <xref:System.Net.WebRequest.Method%2A> propriété à valider pour indiquer que la demande publiera les données sur l’ordinateur hôte cible.  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si elle n'est pas substituée dans une classe descendante.</exception>
        <block subset="none" type="overrides"><para>Le <see cref="P:System.Net.WebRequest.Method" /> propriété peut contenir n’importe quelle méthode de demande valide pour le protocole implémenté. La valeur par défaut doit fournir une transaction de demande/réponse par défaut qui ne nécessite pas de propriétés spécifiques au protocole à définir.</para></block>
        <altmember cref="P:System.Net.HttpWebRequest.Method" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public virtual bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.WebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe descendante, indique si la demande doit être pré-authentifiée.</summary>
        <value><see langword="true" /> pour effectuer la pré-authentification ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 À l’exception de la première demande, le <xref:System.Net.WebRequest.PreAuthenticate%2A> propriété indique s’il faut envoyer des informations d’authentification avec les demandes suivantes sans attendre d’être envoyées par le serveur. Lorsque <xref:System.Net.WebRequest.PreAuthenticate%2A> est `false`, le <xref:System.Net.WebRequest> attend une stimulation d’authentification avant d’envoyer des informations d’authentification.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant définit la <xref:System.Net.WebRequest.PreAuthenticate%2A> propriété `true` afin que le <xref:System.Net.NetworkCredential> stockés dans le <xref:System.Net.WebRequest.Credentials%2A> propriété sera envoyée à avec la demande de ressource.  
  
 [!code-cpp[WebRequest_PreAuthenticate#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CPP/webrequest_preauthenticate.cpp#1)]
 [!code-csharp[WebRequest_PreAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CS/webrequest_preauthenticate.cs#1)]
 [!code-vb[WebRequest_PreAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_PreAuthenticate/VB/webrequest_preauthenticate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe descendante, obtient ou définit le proxy réseau à utiliser pour accéder à cette ressource Internet.</summary>
        <value><see cref="T:System.Net.IWebProxy" /> à utiliser pour accéder à la ressource Internet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.Proxy%2A> propriété identifie le proxy réseau utilisé par la demande à accéder à la ressource Internet. La demande est effectuée via le serveur proxy plutôt que directement à la ressource Internet.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant affiche l’adresse de proxy réseau actuelle et permet à l’utilisateur attribuer un nouveau proxy réseau adresse et numéro de port.  
  
 [!code-cpp[WebRequest_Proxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Proxy/CPP/webrequest_proxy.cpp#1)]
 [!code-csharp[WebRequest_Proxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Proxy/CS/webrequest_proxy.cs#1)]
 [!code-vb[WebRequest_Proxy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Proxy/VB/webrequest_proxy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <altmember cref="T:System.Net.IWebProxy" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="P:System.Net.HttpWebRequest.Proxy" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPortableWebRequestCreator">
      <MemberSignature Language="C#" Value="public static void RegisterPortableWebRequestCreator (System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterPortableWebRequestCreator(class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPortableWebRequestCreator(System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterPortableWebRequestCreator (creator As IWebRequestCreate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterPortableWebRequestCreator(System::Net::IWebRequestCreate ^ creator);" />
      <MemberSignature Language="F#" Value="static member RegisterPortableWebRequestCreator : System.Net.IWebRequestCreate -&gt; unit" Usage="System.Net.WebRequest.RegisterPortableWebRequestCreator creator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="creator">Objet <see cref="T:System.Net.IWebRequestCreate" /> à inscrire.</param>
        <summary>Inscrit un objet <see cref="T:System.Net.IWebRequestCreate" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPrefix">
      <MemberSignature Language="C#" Value="public static bool RegisterPrefix (string prefix, System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RegisterPrefix(string prefix, class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RegisterPrefix (prefix As String, creator As IWebRequestCreate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RegisterPrefix(System::String ^ prefix, System::Net::IWebRequestCreate ^ creator);" />
      <MemberSignature Language="F#" Value="static member RegisterPrefix : string * System.Net.IWebRequestCreate -&gt; bool" Usage="System.Net.WebRequest.RegisterPrefix (prefix, creator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix">URI complet ou préfixe URI pris en charge par le descendant <see cref="T:System.Net.WebRequest" />.</param>
        <param name="creator">Méthode de création appelée par <see cref="T:System.Net.WebRequest" /> pour créer le descendant <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Inscrit un descendant <see cref="T:System.Net.WebRequest" /> pour l'URI spécifié.</summary>
        <returns><see langword="true" /> si l'inscription a réussi ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.RegisterPrefix%2A> méthode registres <xref:System.Net.WebRequest> descendants pour traiter les demandes. <xref:System.Net.WebRequest> descendants sont généralement inscrits pour gérer un protocole spécifique, tel que HTTP ou FTP, mais peuvent être inscrits pour gérer une demande à un serveur spécifique ou un chemin d’accès sur un serveur.  
  
 Les types de réserve pré-enregistré déjà inscrits sont les suivantes :  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 Pour plus d’informations, consultez le <xref:System.Net.WebRequest.Create%28System.String%29> et <xref:System.Net.WebRequest.Create%28System.Uri%29> méthodes.  
  
 Les préfixes en double ne sont pas autorisés. <xref:System.Net.WebRequest.RegisterPrefix%2A> Retourne `false` si une tentative est faite pour enregistrer un préfixe en double.  
  
> [!NOTE]
>  Le <xref:System.Net.HttpWebRequest> classe est inscrit pour traiter les demandes pour les schémas HTTP et HTTPS par défaut. Tente de s’inscrire à un autre <xref:System.Net.WebRequest> descendant pour ces schémas échoue.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="prefix" /> a la valeur <see langword="null" />.  
  
ou 
 <paramref name="creator" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public virtual Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.WebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe descendante, obtient l'URI de la ressource Internet associée à la demande.</summary>
        <value><see cref="T:System.Uri" /> représentant la ressource associée à la demande.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En cas de substitution dans une classe descendante, la <xref:System.Net.WebRequest.RequestUri%2A> propriété contient le <xref:System.Uri> instance <xref:System.Net.WebRequest.Create%2A> méthode utilise pour créer la demande.  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant vérifie le <xref:System.Net.WebRequest.RequestUri%2A> propriété afin de déterminer le site initialement demandé.  
  
 [!code-cpp[WebRequest_RequestUri1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_RequestUri1/CPP/webrequest_requesturi.cpp#1)]
 [!code-csharp[WebRequest_RequestUri1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_RequestUri1/CS/webrequest_requesturi.cs#1)]
 [!code-vb[WebRequest_RequestUri1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_RequestUri1/VB/webrequest_requesturi.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <block subset="none" type="overrides"><para>
            <see cref="P:System.Net.WebRequest.RequestUri" /> doit contenir la version d’origine <see cref="T:System.Uri" /> instance passée à la <see cref="M:System.Net.WebRequest.Create(System.Uri)" /> (méthode). Si le protocole est capable de rediriger la demande vers un autre URI de la demande de service, le descendant doit fournir une propriété contenant l’URI qui traite effectivement la demande</para></block>
        <altmember cref="P:System.Net.HttpWebRequest.RequestUri" />
        <altmember cref="P:System.Net.HttpWebRequest.Address" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Élément <see cref="T:System.Runtime.Serialization.SerializationInfo" />, qui contient les données sérialisées pour l'élément <see cref="T:System.Net.WebRequest" />.</param>
        <param name="streamingContext">Élément <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la destination du flux sérialisé associé au nouvel élément <see cref="T:System.Net.WebRequest" />.</param>
        <summary>En cas de substitution dans une classe descendante, remplit une instance de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaire à la sérialisation de <see cref="T:System.Net.WebRequest" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Toute tentative possible est effectuée pour sérialiser l'objet si l'interface n'est pas substituée dans une classe descendante.</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.WebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le délai d'expiration des demandes en millisecondes.</summary>
        <value>Durée en millisecondes jusqu'à l'expiration de la demande, ou valeur <see cref="F:System.Threading.Timeout.Infinite" /> pour indiquer que la demande n'expire pas. La valeur par défaut est définie par la classe descendante.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.WebRequest.Timeout%2A> propriété indique la durée, en millisecondes, jusqu'à ce que la demande expire et lève un <xref:System.Net.WebException>. Le <xref:System.Net.WebRequest.Timeout%2A> propriété affecte uniquement les demandes synchrones effectuées avec la <xref:System.Net.WebRequest.GetResponse%2A> (méthode). Pour le délai d’expiration des requêtes asynchrones, utilisez le <xref:System.Net.WebRequest.Abort%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Net.WebRequest> classe est un `abstract` classe. Le comportement réel de <xref:System.Net.WebRequest> instances en cours d’exécution est déterminé par la classe descendante retournée par la <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> (méthode). Pour plus d’informations sur les valeurs par défaut et les exceptions, consultez la documentation pour les classes descendantes, telles que <xref:System.Net.HttpWebRequest> et <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L’exemple suivant définit le <xref:System.Net.WebRequest.Timeout%2A> propriété à 10 000 millisecondes. Si le délai expire avant que la ressource peut être retournée, un <xref:System.Net.WebException> est levée.  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
        <block subset="none" type="overrides"><para>Les classes descendantes signalent un délai d’expiration en levant un <see cref="T:System.Net.WebException" /> avec la <see cref="P:System.Net.WebException.Status" /> champ la valeur <see cref="F:System.Net.WebExceptionStatus.Timeout" />. Lorsque <see cref="P:System.Net.WebRequest.Timeout" /> est défini sur <see cref="F:System.Threading.Timeout.Infinite" /> la classe descendante n’expire pas.</para></block>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public virtual bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe descendante, obtient ou définit une valeur <see cref="T:System.Boolean" /> qui contrôle si les <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> sont envoyés avec les demandes.</summary>
        <value><see langword="true" /> si les informations d'identification par défaut sont utilisées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définissez cette propriété sur `true` lorsque des requêtes effectuées par ce <xref:System.Net.WebRequest> objet doit, si requis par le serveur, être authentifié à l’aide les informations d’identification de l’utilisateur actuellement connecté. Pour les applications clientes, il s’agit du comportement souhaité dans la plupart des scénarios. Pour les applications de couche intermédiaire, telles que les applications ASP.NET, au lieu d’utiliser cette propriété, vous devez généralement définir la <xref:System.Net.WebRequest.Credentials%2A> propriété pour les informations d’identification du client au nom duquel la demande est effectuée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Vous avez essayé de définir cette propriété après l'envoi de la requête.</exception>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la propriété si celle-ci n'est pas substituée dans une classe descendante.</exception>
      </Docs>
    </Member>
  </Members>
</Type>