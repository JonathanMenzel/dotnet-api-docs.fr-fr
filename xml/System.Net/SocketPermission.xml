<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SocketPermission.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ac4c73bd39efe04be4531cc25c9b520ac59aa9bf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac4c73bd39efe04be4531cc25c9b520ac59aa9bf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.SocketPermission">
          <source>Controls rights to make or accept connections on a transport address.</source>
          <target state="translated">Contrôle les droits d'établissement ou d'acceptation de connexions à une adresse de transport.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketPermission">
          <source><ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> instances control permission to accept connections or initiate <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> connections.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> instances contrôlent l’autorisation d’accepter les connexions ou lancer <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> connexions.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketPermission">
          <source>A <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> permission can be established for a host name or IP address, a port number, and a transport protocol.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> autorisation peut être établie pour un nom d’hôte ou adresse IP, un numéro de port et un protocole de transport.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketPermission">
          <source>Avoid creating socket permissions using host names, as these names have to be resolved to IP addresses, and this might block the stack.</source>
          <target state="translated">Évitez de créer des autorisations de socket à l’aide de noms d’hôtes, car ces noms doivent être résolus en adresses IP, et cela pourrait bloquer la pile.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketPermission">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> class to set, change, and enforce various socket access restrictions.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> classe pour définir, modifier et appliquer diverses restrictions d’accès de Sockets.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Net.SocketPermission">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> class that allows unrestricted access to the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> or disallows access to the <ph id="ph3">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> qui autorise un accès illimité à <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> ou interdit tout accès à <ph id="ph3">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> instance is created with the <ph id="ph2">`Unrestricted`</ph> value from <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> then the <ph id="ph4">&lt;xref:System.Net.SocketPermission&gt;</ph> instance passes all demands.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> instance est créée avec le <ph id="ph2">`Unrestricted`</ph> valeur <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> le <ph id="ph4">&lt;xref:System.Net.SocketPermission&gt;</ph> instance passe toutes les demandes.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>Any other value for <ph id="ph1">`state`</ph> results in a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance that fails all demands unless a transport address permission is added with <ph id="ph3">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph>.</source>
          <target state="translated">Toute autre valeur pour <ph id="ph1">`state`</ph> entraîne une <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance échoue toutes les demandes, sauf si une autorisation d’adresse de transport est ajoutée avec <ph id="ph3">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> using a <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> enumerated value.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> à l’aide un <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> valeur énumérée.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.TransportType" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Net.TransportType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The host name for the transport address.</source>
          <target state="translated">Nom d'hôte de l'adresse de transport.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The port number for the transport address.</source>
          <target state="translated">Numéro de port de l'adresse de transport.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> class for the given transport address with the specified permission.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> pour l'adresse de transport donnée avec l'autorisation spécifiée.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> that controls access to the specified <ph id="ph2">`hostName`</ph> and <ph id="ph3">`portNumber`</ph> using the specified <ph id="ph4">`transport`</ph>.</source>
          <target state="translated">Ce constructeur crée un <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> qui contrôle l’accès à l’objet <ph id="ph2">`hostName`</ph> et <ph id="ph3">`portNumber`</ph> à l’aide du <ph id="ph4">`transport`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The <ph id="ph1">`hostName`</ph> can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.</source>
          <target state="translated">Le <ph id="ph1">`hostName`</ph> peut être un nom DNS, une adresse IP ou un sous-réseau IP spécifié, tel que 192.168.1.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The <ph id="ph1">`portNumber`</ph> can be any valid port number defined by the transport, or <ph id="ph2">&lt;xref:System.Net.SocketPermission.AllPorts?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`portNumber`</ph> peut être n’importe quel numéro de port valide défini par le transport, ou <ph id="ph2">&lt;xref:System.Net.SocketPermission.AllPorts?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> using a <ph id="ph2">&lt;xref:System.Net.NetworkAccess&gt;</ph> enumerated value, a <ph id="ph3">&lt;xref:System.Net.TransportType&gt;</ph> enumerated value, the hostname, and the port number.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> à l’aide un <ph id="ph2">&lt;xref:System.Net.NetworkAccess&gt;</ph> valeur, énumérée une <ph id="ph3">&lt;xref:System.Net.TransportType&gt;</ph> énumérée valeur, le nom d’hôte et le numéro de port.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="hostName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostName" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Net.SocketPermission.AcceptList">
          <source>Gets a list of <ph id="ph1">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instances that identifies the endpoints that can be accepted under this permission instance.</source>
          <target state="translated">Obtient une liste d'instances de <ph id="ph1">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> identifiant les points de terminaison qui peuvent être acceptés selon cette instance d'autorisation.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketPermission.AcceptList">
          <source>An instance that implements the <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface that contains <ph id="ph2">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instances.</source>
          <target state="translated">Instance implémentant l'interface <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> contenant des instances de <ph id="ph2">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketPermission.AcceptList">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.AcceptList%2A&gt;</ph> property to return a list of endpoints to which accept privileges are granted.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Net.SocketPermission.AcceptList%2A&gt;</ph> propriété pour retourner une liste de points de terminaison auxquels sont accordés des privilèges d’acceptation.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.TransportType" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Net.TransportType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The host name for the transport address.</source>
          <target state="translated">Nom d'hôte de l'adresse de transport.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The port number for the transport address.</source>
          <target state="translated">Numéro de port de l'adresse de transport.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>Adds a permission to the set of permissions for a transport address.</source>
          <target state="translated">Ajoute une autorisation au jeu d'autorisations pour une adresse de transport.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The <ph id="ph1">`hostName`</ph> can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.</source>
          <target state="translated">Le <ph id="ph1">`hostName`</ph> peut être un nom DNS, une adresse IP ou un sous-réseau IP spécifié, tel que 192.168.1.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph> method to add connection permissions to the specified host.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph> pour ajouter des autorisations de connexion à l’hôte spécifié.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="hostName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostName" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Net.SocketPermission.AllPorts">
          <source>Defines a constant that represents all ports.</source>
          <target state="translated">Définit une constante représentant tous les ports.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.SocketPermission.AllPorts">
          <source>This field is read-only.</source>
          <target state="translated">Ce champ est en lecture seule.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.SocketPermission.AllPorts">
          <source>The value of this field is -1.</source>
          <target state="translated">La valeur de ce champ est -1.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.SocketPermission.AllPorts">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.AllPorts&gt;</ph> property to provide connection permissions to all of the resources ports.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Net.SocketPermission.AllPorts&gt;</ph> propriété afin de fournir des autorisations de connexion à tous les ports de ressources.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Net.SocketPermission.ConnectList">
          <source>Gets a list of <ph id="ph1">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instances that identifies the endpoints that can be connected to under this permission instance.</source>
          <target state="translated">Obtient une liste d'instances de <ph id="ph1">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> identifiant les points de terminaison auxquels vous pouvez vous connecter selon cette instance d'autorisation.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketPermission.ConnectList">
          <source>An instance that implements the <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface that contains <ph id="ph2">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instances.</source>
          <target state="translated">Instance implémentant l'interface <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> contenant des instances de <ph id="ph2">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketPermission.ConnectList">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.ConnectList%2A&gt;</ph> property to return a list of endpoints to which connection privileges are granted.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Net.SocketPermission.ConnectList%2A&gt;</ph> propriété pour retourner une liste de points de terminaison pour les connexions sont accordés des privilèges.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Copy">
          <source>Creates a copy of a <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance.</source>
          <target state="translated">Crée une copie d'une instance <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Copy">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> class that is a copy of the current instance.</source>
          <target state="translated">Nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> qui est une copie de l'instance en cours.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Copy">
          <source>The object returned by this method represents the same level of access as the current instance.</source>
          <target state="translated">L’objet retourné par cette méthode représente le même niveau d’accès que l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Copy">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Copy%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
          <target state="translated">Cette méthode substitue <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Copy%2A&gt;</ph> et est implémentée pour prendre en charge la <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Copy">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> by taking a copy of an existing <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph>.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> en effectuant une copie d’un objet <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding used to reconstruct the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance.</source>
          <target state="translated">Encodage XML utilisé pour reconstruire l'instance de <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance for an XML encoding.</source>
          <target state="translated">Reconstruit une instance de <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> pour un encodage XML.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> method reconstructs a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance from an XML encoding defined by the <ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> méthode reconstruit un <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance à partir d’un encodage XML défini par la <ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> method to encode the <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance, including state information, in XML.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> méthode pour encoder le <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance, y compris des informations d’état, au format XML.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> method to convert XML encoded data to a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> méthode pour convertir le XML codé des données à un <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> is not a permission element for this type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> n'est pas un élément d'autorisation pour ce type.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance to intersect with the current instance.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> avec laquelle l’instance actuelle doit entrer en intersection.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>Returns the logical intersection between two <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instances.</source>
          <target state="translated">Retourne l'intersection logique entre deux instances de <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance that represents the intersection of two <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instances.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> qui représente l'intersection de deux instances de <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>If the intersection is empty, the method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si l'intersection est vide, la méthode retourne <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>If the <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is a null reference, the method returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si le paramètre <ph id="ph1">&lt;paramref name="target" /&gt;</ph> est une référence null, la méthode retourne <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The intersection of two permissions is a permission that helps to protect the resources and operations protected by both permissions.</source>
          <target state="translated">L’intersection de deux autorisations est une autorisation qui permet de protéger les ressources et opérations protégées par les deux autorisations.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>Specifically, it represents the minimum permission such that any demand that passes both permissions also passes their intersection.</source>
          <target state="translated">Plus précisément, elle représente les autorisations minimales telles que toute demande passant les deux autorisations passe également leur intersection.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Intersect%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
          <target state="translated">Cette méthode substitue <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Intersect%2A&gt;</ph> et est implémentée pour prendre en charge la <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.Intersect%2A&gt;</ph> method to obtain a logical intersection between two <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instances.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Net.SocketPermission.Intersect%2A&gt;</ph> méthode pour obtenir une intersection logique entre deux <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instances.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is not a <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="target" /&gt;</ph> n'est pas un <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.DnsPermission" /&gt;</ph> is not granted to the method caller.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.DnsPermission" /&gt;</ph> n'est pas accordé à l'appelant de la méthode.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> that is to be tested for the subset relationship.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> qui doit être testé pour la relation de sous-ensemble.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>Determines if the current permission is a subset of the specified permission.</source>
          <target state="translated">Détermine si l'autorisation actuelle est un sous-ensemble de l'autorisation spécifiée.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if the current instance defines no permissions; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="target" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>, cette méthode retourne <ph id="ph3">&lt;see langword="true" /&gt;</ph> si l'instance en cours ne définit aucune autorisation ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if the current instance defines a subset of <ph id="ph4">&lt;paramref name="target" /&gt;</ph> permissions; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="target" /&gt;</ph> n'est pas <ph id="ph2">&lt;see langword="null" /&gt;</ph>, cette méthode retourne <ph id="ph3">&lt;see langword="true" /&gt;</ph> si l'instance en cours définit un sous-ensemble d'autorisations <ph id="ph4">&lt;paramref name="target" /&gt;</ph> ; sinon <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</source>
          <target state="translated">L’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée si l’autorisation actuelle spécifie un ensemble d’opérations qui est entièrement contenu par l’autorisation spécifiée.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>For example, a permission that represents access to 192.168.1.1:80 is a subset of a permission that represents access to 192.168.1.1:Any.</source>
          <target state="translated">Par exemple, une autorisation qui représente l’accès à 192.168.1.1 : 80 est un sous-ensemble d’une autorisation qui représente l’accès à 192.168.1.1:Any.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.</source>
          <target state="translated">Si cette méthode retourne <ph id="ph1">`true`</ph>, l’autorisation en cours ne représente pas plus d’accès à la ressource protégée que l’autorisation spécifiée.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.IsSubsetOf%2A&gt;</ph> method to determine if one <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> is the subset of another.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Net.SocketPermission.IsSubsetOf%2A&gt;</ph> pour déterminer si une méthode <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> est le sous-ensemble d’un autre.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.SocketException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> n'est pas un <ph id="ph2">&lt;see cref="T:System.Net.Sockets.SocketException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.DnsPermission" /&gt;</ph> is not granted to the method caller.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.DnsPermission" /&gt;</ph> n'est pas accordé à l'appelant de la méthode.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsUnrestricted">
          <source>Checks the overall permission state of the object.</source>
          <target state="translated">Vérifie l’état d’autorisation général de l’objet.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsUnrestricted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance is created with the <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph> value from <ph id="ph4">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instance de <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> est créée avec la valeur <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph> à partir de <ph id="ph4">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> ; sinon, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsUnrestricted">
          <source>The following example checks the <ph id="ph1">&lt;xref:System.Net.SocketPermission.IsUnrestricted%2A&gt;</ph> property to determine if the specified <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> has any restrictions.</source>
          <target state="translated">L’exemple suivant vérifie le <ph id="ph1">&lt;xref:System.Net.SocketPermission.IsUnrestricted%2A&gt;</ph> propriété pour déterminer si le texte spécifié <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> possède des restrictions.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.ToXml">
          <source>Creates an XML encoding of a <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance and its current state.</source>
          <target state="translated">Crée un encodage XML d’une instance de <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> et de son état actuel.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.ToXml">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> instance that contains an XML-encoded representation of the <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance, including state information.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> contenant une représentation encodée XML de l'instance de <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>, informations d'état comprises</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.ToXml">
          <source>The <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> method creates a <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> instance to encode a representation of the <ph id="ph3">&lt;xref:System.Net.SocketPermission&gt;</ph> instance, including state information, in XML.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> méthode crée un <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> instance pour encoder une représentation de la <ph id="ph3">&lt;xref:System.Net.SocketPermission&gt;</ph> instance, y compris des informations d’état, au format XML.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.ToXml">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> method to restore the state information from a <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> instance.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> méthode pour restaurer les informations d’état d’un <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.ToXml">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> to XML.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> méthode pour convertir un <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> au format XML.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance to combine with the current instance.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> à combiner avec l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>Returns the logical union between two <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instances.</source>
          <target state="translated">Retourne l'union logique entre deux instances de <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance that represents the union of two <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instances.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> qui représente l'union de deux instances de <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, it returns a copy of the current instance.</source>
          <target state="translated">Si le paramètre <ph id="ph1">&lt;paramref name="target" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>, il retourne une copie de l'instance en cours.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> is a permission that represents all of the access to <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> connections represented by the current instance as well as the access represented by <ph id="ph3">`target`</ph>.</source>
          <target state="translated">Le résultat d’un appel à <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> est une autorisation qui représente l’ensemble de l’accès à <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> connexions représentées par l’instance actuelle, ainsi que l’accès représenté par <ph id="ph3">`target`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>Any demand that passes either the current instance or <ph id="ph1">`target`</ph> passes their union.</source>
          <target state="translated">Toute demande qui passe l’instance actuelle ou <ph id="ph1">`target`</ph> passent leur union.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Union%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
          <target state="translated">Cette méthode substitue <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Union%2A&gt;</ph> et est implémentée pour prendre en charge la <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> method to return the logical union of two existing <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instances.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> méthode pour retourner l’union logique existante deux <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instances.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> n'est pas un <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>