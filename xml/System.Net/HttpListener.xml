<Type Name="HttpListener" FullName="System.Net.HttpListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d338e721b028cce5bc0cb16416723f530a1ed165" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListener sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e4255-101">Fournit un écouteur de protocole HTTP simple, contrôlé par programme.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e4255-101">Provides a simple, programmatically controlled HTTP protocol listener.</span>
      </span>
      <span data-ttu-id="e4255-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e4255-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-103">À l’aide de la <xref:System.Net.HttpListener> (classe), vous pouvez créer un écouteur de protocole HTTP simple qui répond aux demandes HTTP.</span><span class="sxs-lookup"><span data-stu-id="e4255-103">Using the <xref:System.Net.HttpListener> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</span></span> <span data-ttu-id="e4255-104">L’écouteur est actif pendant la durée de vie de la <xref:System.Net.HttpListener> objet et s’exécute au sein de votre application avec ses autorisations.</span><span class="sxs-lookup"><span data-stu-id="e4255-104">The listener is active for the lifetime of the <xref:System.Net.HttpListener> object and runs within your application with its permissions.</span></span>
   
 <span data-ttu-id="e4255-105">À utiliser <xref:System.Net.HttpListener>, créer une nouvelle instance de la classe à l’aide de la <xref:System.Net.HttpListener> constructeur et utilisez la <xref:System.Net.HttpListener.Prefixes%2A> la depréfixesdepropriétépouraccéderàlacollectionquicontientleschaînesquispécifientlesidentificateurderessourceuniforme(URI)<xref:System.Net.HttpListener>doit traiter.</span><span class="sxs-lookup"><span data-stu-id="e4255-105">To use <xref:System.Net.HttpListener>, create a new instance of the class using the <xref:System.Net.HttpListener> constructor and use the <xref:System.Net.HttpListener.Prefixes%2A> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <xref:System.Net.HttpListener> should process.</span></span>
  
 <span data-ttu-id="e4255-106">Une chaîne de préfixe URI est composée d’un modèle (http ou https), un ordinateur hôte, un port facultatif et un chemin d’accès facultatif.</span><span class="sxs-lookup"><span data-stu-id="e4255-106">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</span></span> <span data-ttu-id="e4255-107">Est un exemple de chaîne de préfixe complète * http://www.contoso.com:8080/customerData/ *.</span><span class="sxs-lookup"><span data-stu-id="e4255-107">An example of a complete prefix string is *http://www.contoso.com:8080/customerData/*.</span></span> <span data-ttu-id="e4255-108">Les préfixes doivent se terminer par une barre oblique (« / »).</span><span class="sxs-lookup"><span data-stu-id="e4255-108">Prefixes must end in a forward slash ("/").</span></span> <span data-ttu-id="e4255-109">Le <xref:System.Net.HttpListener> objet avec le préfixe qui correspond le mieux à un URI demandé répond à la demande.</span><span class="sxs-lookup"><span data-stu-id="e4255-109">The <xref:System.Net.HttpListener> object with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="e4255-110">Plusieurs <xref:System.Net.HttpListener> objets ne peut pas ajouter le même préfixe ; un <xref:System.ComponentModel.Win32Exception> exception est levée si une <xref:System.Net.HttpListener> ajoute un préfixe qui est déjà en cours d’utilisation.</span><span class="sxs-lookup"><span data-stu-id="e4255-110">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix; a <xref:System.ComponentModel.Win32Exception> exception is thrown if a <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>
  
 <span data-ttu-id="e4255-111">Lorsqu’un port est spécifié, l’élément hôte peut être remplacé par «\*» pour indiquer que le <xref:System.Net.HttpListener> accepte les demandes envoyées au port si l’URI demandé ne correspond pas à un préfixe quelconque.</span><span class="sxs-lookup"><span data-stu-id="e4255-111">When a port is specified, the host element can be replaced with "\*" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="e4255-112">Par exemple, pour recevoir toutes les demandes envoyées au port 8080 lorsque l’URI demandé n’est pas géré par les <xref:System.Net.HttpListener>, le préfixe est *http://\*: 8080 /*.</span><span class="sxs-lookup"><span data-stu-id="e4255-112">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <xref:System.Net.HttpListener>, the prefix is *http://\*:8080/*.</span></span> <span data-ttu-id="e4255-113">De même, pour spécifier que le <xref:System.Net.HttpListener> accepte toutes les demandes envoyées à un port, remplacez l’élément hôte par le caractère « + ».</span><span class="sxs-lookup"><span data-stu-id="e4255-113">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "+" character.</span></span> <span data-ttu-id="e4255-114">Par exemple, * https://+:8080 *.</span><span class="sxs-lookup"><span data-stu-id="e4255-114">For example, *https://+:8080*.</span></span> <span data-ttu-id="e4255-115">Le «\*» et « + » caractères peuvent être présents dans les préfixes qui incluent des chemins d’accès.</span><span class="sxs-lookup"><span data-stu-id="e4255-115">The "\*" and "+" characters can be present in prefixes that include paths.</span></span>
  
 <span data-ttu-id="e4255-116">Depuis .NET Core 2.0 ou .NET Framework 4.6 sur Windows 10, les sous-domaines génériques sont prises en charge les préfixes URI qui sont gérés par un <xref:System.Net.HttpListener> objet.</span><span class="sxs-lookup"><span data-stu-id="e4255-116">Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="e4255-117">Pour spécifier un sous-domaine de caractère générique, utilisez le «\*« caractère en tant que partie du nom d’hôte dans un préfixe URI.</span><span class="sxs-lookup"><span data-stu-id="e4255-117">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix.</span></span> <span data-ttu-id="e4255-118">Par exemple, *http://\*.foo.com/*.</span><span class="sxs-lookup"><span data-stu-id="e4255-118">For example, *http://\*.foo.com/*.</span></span> <span data-ttu-id="e4255-119">Passer en tant qu’argument à la <xref:System.Net.HttpListenerPrefixCollection.Add%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e4255-119">Pass this as the argument to the <xref:System.Net.HttpListenerPrefixCollection.Add%2A> method.</span></span> <span data-ttu-id="e4255-120">Cela fonctionne à compter de .NET Core 2.0 ou .NET Framework 4.6 sur Windows 10 ; dans les versions antérieures, cette opération génère un <xref:System.Net.HttpListenerException>.</span><span class="sxs-lookup"><span data-stu-id="e4255-120">This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <xref:System.Net.HttpListenerException>.</span></span>

 > [!WARNING]
 > <span data-ttu-id="e4255-121">Les liaisons de niveau supérieur de caractère générique (*http://\*: 8080 /* et \* http://+:8080 \*) doit **pas** être utilisé.</span><span class="sxs-lookup"><span data-stu-id="e4255-121">Top-level wildcard bindings (*http://\*:8080/* and *http://+:8080*) should **not** be used.</span></span> <span data-ttu-id="e4255-122">Les liaisons génériques de niveau supérieur peuvent exposer votre application à des failles de sécurité.</span><span class="sxs-lookup"><span data-stu-id="e4255-122">Top-level wildcard bindings can open up your app to security vulnerabilities.</span></span> <span data-ttu-id="e4255-123">Cela s’applique aux caractères génériques forts et faibles.</span><span class="sxs-lookup"><span data-stu-id="e4255-123">This applies to both strong and weak wildcards.</span></span> <span data-ttu-id="e4255-124">Utilisez des noms d’hôte explicites plutôt que des caractères génériques.</span><span class="sxs-lookup"><span data-stu-id="e4255-124">Use explicit host names rather than wildcards.</span></span> <span data-ttu-id="e4255-125">Une liaison générique de sous-domaine (par exemple, `*.mysub.com`) ne présente pas ce risque de sécurité si vous contrôlez le domaine parent en entier (par opposition à `*.com`, qui est vulnérable).</span><span class="sxs-lookup"><span data-stu-id="e4255-125">Subdomain wildcard binding (for example, `*.mysub.com`) doesn't have this security risk if you control the entire parent domain (as opposed to `*.com`, which is vulnerable).</span></span> <span data-ttu-id="e4255-126">Consultez la [rfc7230 section-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="e4255-126">See [rfc7230 section-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) for more information.</span></span>
  
 <span data-ttu-id="e4255-127">Pour commencer à écouter les demandes des clients, ajoutez les préfixes URI à la collection et appelez le <xref:System.Net.HttpListener.Start%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e4255-127">To begin listening for requests from clients, add the URI prefixes to the collection and call the <xref:System.Net.HttpListener.Start%2A> method.</span></span> <span data-ttu-id="e4255-128"><xref:System.Net.HttpListener> propose des modèles synchrones et asynchrones pour traiter les demandes du client.</span><span class="sxs-lookup"><span data-stu-id="e4255-128"><xref:System.Net.HttpListener> offers both synchronous and asynchronous models for processing client requests.</span></span> <span data-ttu-id="e4255-129">Les demandes et leurs réponses associées sont accessibles à l’aide de la <xref:System.Net.HttpListenerContext> objet retourné par la <xref:System.Net.HttpListener.GetContext%2A> méthode ou ses équivalents asynchrones, les <xref:System.Net.HttpListener.BeginGetContext%2A> et <xref:System.Net.HttpListener.EndGetContext%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e4255-129">Requests and their associated responses are accessed using the <xref:System.Net.HttpListenerContext> object returned by the <xref:System.Net.HttpListener.GetContext%2A> method or its asynchronous counterparts, the <xref:System.Net.HttpListener.BeginGetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods.</span></span>
  
 <span data-ttu-id="e4255-130">Le modèle synchrone est approprié si votre application doit être bloquée en attendant une demande du client, et si vous souhaitez ne traiter qu’une seule demande à la fois.</span><span class="sxs-lookup"><span data-stu-id="e4255-130">The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</span></span> <span data-ttu-id="e4255-131">À l’aide du modèle synchrone, appelez le <xref:System.Net.HttpListener.GetContext%2A> (méthode), qui attend qu’un client envoie une demande.</span><span class="sxs-lookup"><span data-stu-id="e4255-131">Using the synchronous model, call the <xref:System.Net.HttpListener.GetContext%2A> method, which waits for a client to send a request.</span></span> <span data-ttu-id="e4255-132">La méthode retourne un <xref:System.Net.HttpListenerContext> de l’objet à vous pour le traitement lorsque l’une se produit.</span><span class="sxs-lookup"><span data-stu-id="e4255-132">The method returns an <xref:System.Net.HttpListenerContext> object to you for processing when one occurs.</span></span>
  
 <span data-ttu-id="e4255-133">Dans le modèle asynchrone plus complexe, votre application ne bloque pas lors de l’attente des demandes et chaque demande est traitée dans son propre thread d’exécution.</span><span class="sxs-lookup"><span data-stu-id="e4255-133">In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</span></span> <span data-ttu-id="e4255-134">Utilisez la <xref:System.Net.HttpListener.BeginGetContext%2A> méthode pour spécifier une méthode définie par l’application d’être appelée pour chaque demande entrante.</span><span class="sxs-lookup"><span data-stu-id="e4255-134">Use the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify an application-defined method to be called for each incoming request.</span></span> <span data-ttu-id="e4255-135">Dans cette méthode, appelez le <xref:System.Net.HttpListener.EndGetContext%2A> méthode pour obtenir la demande, de le traiter et de répondre.</span><span class="sxs-lookup"><span data-stu-id="e4255-135">Within that method, call the <xref:System.Net.HttpListener.EndGetContext%2A> method to obtain the request, process it, and respond.</span></span>
  
 <span data-ttu-id="e4255-136">Dans les deux modèles, les demandes entrantes sont accessibles à l’aide de la <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> propriété et sont représentées par <xref:System.Net.HttpListenerRequest> objets.</span><span class="sxs-lookup"><span data-stu-id="e4255-136">In either model, incoming requests are accessed using the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerRequest> objects.</span></span> <span data-ttu-id="e4255-137">De même, les réponses sont accessibles à l’aide de la <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> propriété et sont représentées par <xref:System.Net.HttpListenerResponse> objets.</span><span class="sxs-lookup"><span data-stu-id="e4255-137">Similarly, responses are accessed using the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerResponse> objects.</span></span> <span data-ttu-id="e4255-138">Ces objets partagent certaines fonctionnalités avec les <xref:System.Net.HttpWebRequest> et <xref:System.Net.HttpWebResponse> objets, mais ces derniers objets ne peut pas être utilisé conjointement avec <xref:System.Net.HttpListener> , car ils implémentent client, pas le serveur, les comportements.</span><span class="sxs-lookup"><span data-stu-id="e4255-138">These objects share some functionality with the <xref:System.Net.HttpWebRequest> and <xref:System.Net.HttpWebResponse> objects, but the latter objects cannot be used in conjunction with <xref:System.Net.HttpListener> because they implement client, not server, behaviors.</span></span>
  
 <span data-ttu-id="e4255-139">Un <xref:System.Net.HttpListener> peut exiger l’authentification du client.</span><span class="sxs-lookup"><span data-stu-id="e4255-139">An <xref:System.Net.HttpListener> can require client authentication.</span></span> <span data-ttu-id="e4255-140">Vous pouvez spécifier un schéma particulier à utiliser pour l’authentification, ou vous pouvez spécifier un délégué qui détermine le schéma à utiliser.</span><span class="sxs-lookup"><span data-stu-id="e4255-140">You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</span></span> <span data-ttu-id="e4255-141">Vous devez exiger une forme d’authentification pour obtenir des informations sur l’identité du client.</span><span class="sxs-lookup"><span data-stu-id="e4255-141">You must require some form of authentication to obtain information about the client's identity.</span></span> <span data-ttu-id="e4255-142">Pour plus d’informations, consultez la <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, et <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="e4255-142">For additional information, see the <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, and <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> properties.</span></span>
  
> [!NOTE]
> <span data-ttu-id="e4255-143">Si vous créez un <xref:System.Net.HttpListener> à l’aide de https, vous devez sélectionner un certificat de serveur pour cet écouteur.</span><span class="sxs-lookup"><span data-stu-id="e4255-143">If you create an <xref:System.Net.HttpListener> using https, you must select a Server Certificate for that listener.</span></span> <span data-ttu-id="e4255-144">Sinon, une <xref:System.Net.HttpWebRequest> requête de ce <xref:System.Net.HttpListener> échoue avec une fermeture inattendue de la connexion.</span><span class="sxs-lookup"><span data-stu-id="e4255-144">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span>
  
> [!NOTE]
> <span data-ttu-id="e4255-145">Vous pouvez configurer des certificats de serveur et d’autres options d’écouteur à l’aide de l’interface réseau (netsh.exe).</span><span class="sxs-lookup"><span data-stu-id="e4255-145">You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</span></span> <span data-ttu-id="e4255-146">Consultez [Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh) pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="e4255-146">See [Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh) for more details.</span></span> <span data-ttu-id="e4255-147">Le fichier exécutable est fourni avec Windows Server 2008 et Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="e4255-147">The executable began shipping with Windows Server 2008 and Windows Vista.</span></span>
  
> [!NOTE]
> <span data-ttu-id="e4255-148">Si vous spécifiez plusieurs schémas d’authentification pour le <xref:System.Net.HttpListener>, l’écouteur sélectionnera les clients dans l’ordre suivant : `Negotiate`, `NTLM`, `Digest`, puis `Basic`.</span><span class="sxs-lookup"><span data-stu-id="e4255-148">If you specify multiple authentication schemes for the <xref:System.Net.HttpListener>, the listener will challenge clients in the following order: `Negotiate`, `NTLM`, `Digest`, and then `Basic`.</span></span>
  
   
  
## Examples
 <span data-ttu-id="e4255-149">L’exemple de code suivant montre comment utiliser un <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="e4255-149">The following code example demonstrates using a <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4255-150">Initialise une nouvelle instance de la classe <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-150">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-151">Avant d’utiliser l’instance retournée par ce constructeur, vous devez appeler sa <xref:System.Net.HttpListener.Start%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e4255-151">Before using the instance returned by this constructor, you must invoke its <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-152">L’exemple de code suivant montre comment utiliser le <xref:System.Net.HttpListener> constructeur pour créer un nouveau <xref:System.Net.HttpListener> objet.</span><span class="sxs-lookup"><span data-stu-id="e4255-152">The following code example demonstrates using the <xref:System.Net.HttpListener> constructor to create a new <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="e4255-153">Pour obtenir un exemple complet, consultez la <xref:System.Net.HttpListener> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="e4255-153">For the complete example, see the <xref:System.Net.HttpListener> class topic.</span></span>  
  
 [!code-csharp[Net_listener_Basic#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e4255-154">Cette classe ne peut pas être utilisée sur le système d'exploitation actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-154">This class cannot be used on the current operating system.</span>
          </span>
          <span data-ttu-id="e4255-155">Windows Server 2003 ou Windows XP SP2 est requis pour utiliser des instances de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-155">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e4255-156">Remarque : Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-156">Note: This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e4255-157">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-157">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4255-158">Arrête immédiatement l'objet <see cref="T:System.Net.HttpListener" />, en ignorant toutes les demandes actuellement mises en file d'attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-158">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-159">Cette méthode libère toutes les ressources détenues par cet écouteur.</span><span class="sxs-lookup"><span data-stu-id="e4255-159">This method disposes of all resources held by this listener.</span></span> <span data-ttu-id="e4255-160">Toutes les demandes en attente ne peuvent pas effectuer.</span><span class="sxs-lookup"><span data-stu-id="e4255-160">Any pending requests are unable to complete.</span></span>  
  
 <span data-ttu-id="e4255-161">Après avoir appelé cette méthode, vous recevrez un <xref:System.ObjectDisposedException> si vous essayez d’utiliser cette <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="e4255-161">After calling this method, you will receive an <xref:System.ObjectDisposedException> if you attempt to use this <xref:System.Net.HttpListener>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-162">L’exemple de code suivant montre comment appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="e4255-162">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e4255-163">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-163">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e4255-164">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-164">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemes">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemes AuthenticationSchemes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.AuthenticationSchemes AuthenticationSchemes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemes" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemes As AuthenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemes AuthenticationSchemes { System::Net::AuthenticationSchemes get(); void set(System::Net::AuthenticationSchemes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4255-165">Obtient ou définit le schéma utilisé pour authentifier les clients.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-165">Gets or sets the scheme used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4255-166">Combinaison d'opérations de bits de valeurs d'énumération <see cref="T:System.Net.AuthenticationSchemes" /> qui indiquent la manière dont les clients doivent être authentifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-166">A bitwise combination of <see cref="T:System.Net.AuthenticationSchemes" /> enumeration values that indicates how clients are to be authenticated.</span>
          </span>
          <span data-ttu-id="e4255-167">La valeur par défaut est <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-167">The default value is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-168">Le <xref:System.Net.HttpListener> utilise le schéma spécifié pour authentifier toutes les demandes entrantes.</span><span class="sxs-lookup"><span data-stu-id="e4255-168">The <xref:System.Net.HttpListener> uses the specified scheme to authenticate all incoming requests.</span></span> <span data-ttu-id="e4255-169">Le <xref:System.Net.HttpListener.GetContext%2A> et <xref:System.Net.HttpListener.EndGetContext%2A> méthodes retournent une demande entrante du client uniquement si le <xref:System.Net.HttpListener> authentifie correctement la demande.</span><span class="sxs-lookup"><span data-stu-id="e4255-169">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming client request only if the <xref:System.Net.HttpListener> successfully authenticates the request.</span></span>  
  
 <span data-ttu-id="e4255-170">Vous pouvez interroger l’identité d’un client correctement authentifié à l’aide de la <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-170">You can interrogate the identity of a successfully authenticated client by using the <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="e4255-171">Si vous souhaitez un <xref:System.Net.HttpListener> objet à utiliser les mécanismes d’authentification différents selon les caractéristiques des demandes qu’il reçoit (par exemple, la demande <xref:System.Net.HttpListenerRequest.Url%2A> ou <xref:System.Net.HttpListenerRequest.UserHostName%2A> propriété), vous devez implémenter une méthode qui choisit le schéma d’authentification.</span><span class="sxs-lookup"><span data-stu-id="e4255-171">If you want an <xref:System.Net.HttpListener> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostName%2A> property), you must implement a method that chooses the authentication scheme.</span></span> <span data-ttu-id="e4255-172">Pour savoir comment procéder, consultez la <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> documentation de la propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-172">For instructions about how to do this, see the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4255-173">Pour définir cette propriété pour activer Digest, NTLM ou Negotiate nécessite le <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="e4255-173">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-174">L’exemple de code suivant montre comment utiliser le <xref:System.Net.HttpListener.AuthenticationSchemes%2A> propriété pour spécifier un schéma d’authentification.</span><span class="sxs-lookup"><span data-stu-id="e4255-174">The following code example demonstrates using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property to specify an authentication scheme.</span></span>  
  
 [!code-csharp[Net_listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-175">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-175">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemeSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemeSelectorDelegate As AuthenticationSchemeSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemeSelector ^ AuthenticationSchemeSelectorDelegate { System::Net::AuthenticationSchemeSelector ^ get(); void set(System::Net::AuthenticationSchemeSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemeSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4255-176">Obtient ou définit le délégué appelé pour déterminer le protocole utilisé pendant l'authentification des clients.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-176">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4255-177">Délégué <see cref="T:System.Net.AuthenticationSchemeSelector" /> qui appelle la méthode utilisée pour sélectionner un protocole d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-177">An <see cref="T:System.Net.AuthenticationSchemeSelector" /> delegate that invokes the method used to select an authentication protocol.</span>
          </span>
          <span data-ttu-id="e4255-178">La valeur par défaut est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-178">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e4255-179">Si vous souhaitez que le même protocole d’authentification à utiliser pour toutes les demandes gérées par une instance particulière de <xref:System.Net.HttpListener>, vous n’avez pas besoin de définir cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-179">If you want the same authentication protocol to be used for all requests handled by a particular instance of <xref:System.Net.HttpListener>, you do not need to set this property.</span></span> <span data-ttu-id="e4255-180">Pour spécifier un protocole à utiliser pour toutes les demandes de client, utilisez le <xref:System.Net.HttpListener.AuthenticationSchemes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-180">To specify a protocol to be used for all client requests, use the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property.</span></span>  
  
 <span data-ttu-id="e4255-181">Si le client n’a pas spécifié d’informations d’authentification dans ses en-têtes, le <xref:System.Net.HttpListener> appelle le délégué spécifié pour chaque demande entrante non authentifiée afin de déterminer qui, le cas échéant, protocole à utiliser pour authentifier le client.</span><span class="sxs-lookup"><span data-stu-id="e4255-181">If the client has not specified authentication information in its headers, the <xref:System.Net.HttpListener> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</span></span> <span data-ttu-id="e4255-182">Le <xref:System.Net.HttpListener.GetContext%2A> et <xref:System.Net.HttpListener.EndGetContext%2A> méthodes retournent un demande entrante que si le <xref:System.Net.HttpListener> authentifié avec succès la demande.</span><span class="sxs-lookup"><span data-stu-id="e4255-182">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming request only if the <xref:System.Net.HttpListener> successfully authenticated the request.</span></span> <span data-ttu-id="e4255-183">Si une demande ne peut pas être authentifiée, le <xref:System.Net.HttpListener> automatiquement renvoie une réponse 401.</span><span class="sxs-lookup"><span data-stu-id="e4255-183">If a request cannot be authenticated, the <xref:System.Net.HttpListener> automatically sends back a 401 response.</span></span> <span data-ttu-id="e4255-184">Vous pouvez obtenir l’identité d’un client correctement authentifié à l’aide de la <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-184">You can get the identity of a successfully authenticated client using the <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="e4255-185">La possibilité de déléguer le choix du protocole d’authentification à une méthode spécifique à l’application est utile si vous souhaitez qu’une instance de <xref:System.Net.HttpListener> à utiliser différents protocoles d’authentification selon les caractéristiques de demandes reçues (pour exemple, la demande <xref:System.Net.HttpListenerRequest.Url%2A> ou <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> propriété).</span><span class="sxs-lookup"><span data-stu-id="e4255-185">The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <xref:System.Net.HttpListener> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4255-186">Pour définir cette propriété pour activer Digest, NTLM ou Negotiate nécessite le <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="e4255-186">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-187">L’exemple de code suivant définit la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-187">The following code example sets the value of this property.</span></span>  
  
 [!code-csharp[NclListener#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#2)]
 [!code-vb[NclListener#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#2)]  
  
 <span data-ttu-id="e4255-188">L’exemple de code suivant fournit une implémentation d’une méthode appelée par un <xref:System.Net.AuthenticationSchemeSelector> déléguer.</span><span class="sxs-lookup"><span data-stu-id="e4255-188">The following code example provides an implementation of a method invoked by an <xref:System.Net.AuthenticationSchemeSelector> delegate.</span></span>  
  
 [!code-csharp[NclListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#1)]
 [!code-vb[NclListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-189">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-189">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetContext">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetContext (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetContext(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetContext (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetContext(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="e4255-190">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand une demande du client est disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-190">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e4255-191">Objet défini par l'utilisateur qui comporte des informations sur l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-191">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="e4255-192">Cet objet est passé au délégué <c>callback</c> quand l’opération se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-192">This object is passed to the <c>callback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4255-193">Commence à récupérer une demande entrante de façon asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-193">Begins asynchronously retrieving an incoming request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4255-194">Objet <see cref="T:System.IAsyncResult" /> qui indique l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-194">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-195">Le <xref:System.Net.HttpListener.BeginGetContext%2A> méthode commence un appel asynchrone (sans blocage) pour recevoir les demandes entrantes des clients.</span><span class="sxs-lookup"><span data-stu-id="e4255-195">The <xref:System.Net.HttpListener.BeginGetContext%2A> method begins an asynchronous (non-blocking) call to receive incoming client requests.</span></span> <span data-ttu-id="e4255-196">Avant d’appeler cette méthode, vous devez appeler la <xref:System.Net.HttpListener.Start%2A> (méthode) et ajoutez au moins un préfixe d’identificateur de ressource uniforme (URI) pour écouter en ajoutant les chaînes URI à la <xref:System.Net.HttpListenerPrefixCollection> retourné par le <xref:System.Net.HttpListener.Prefixes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-196">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="e4255-197">L’opération asynchrone doit être terminée en appelant le <xref:System.Net.HttpListener.EndGetContext%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e4255-197">The asynchronous operation must be completed by calling the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span> <span data-ttu-id="e4255-198">En règle générale, la méthode est appelée par le `callback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e4255-198">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="e4255-199">Cette méthode ne bloque pas pendant que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e4255-199">This method does not block while the operation completes.</span></span> <span data-ttu-id="e4255-200">Pour obtenir une demande entrante et le bloc jusqu'à ce que l’opération est terminée, appelez le <xref:System.Net.HttpListener.GetContext%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e4255-200">To get an incoming request and block until the operation completes, call the <xref:System.Net.HttpListener.GetContext%2A> method.</span></span>  
  
 <span data-ttu-id="e4255-201">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e4255-201">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-202">L’exemple de code suivant montre comment utiliser la <xref:System.Net.HttpListener.BeginGetContext%2A> méthode pour spécifier une méthode de rappel qui gère les demandes client entrantes.</span><span class="sxs-lookup"><span data-stu-id="e4255-202">The following code example demonstrates using the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify a callback method that will handle incoming client requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 <span data-ttu-id="e4255-203">L’exemple de code suivant implémente une méthode de rappel.</span><span class="sxs-lookup"><span data-stu-id="e4255-203">The following code example implements a callback method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="e4255-204">Un appel de fonction Win32 a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-204">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="e4255-205">Vérifiez la propriété <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de l’exception pour déterminer la cause de l’exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-205">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4255-206">Cet objet n'a pas été démarré ou été actuellement arrêté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-206">This object has not been started or is currently stopped.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-207">Cet objet est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-207">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e4255-208">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-208">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e4255-209">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-209">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4255-210">Arrête le <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-210">Shuts down the <see cref="T:System.Net.HttpListener" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-211">Après avoir appelé cette méthode, vous ne pouvez plus utiliser le <xref:System.Net.HttpListener> objet.</span><span class="sxs-lookup"><span data-stu-id="e4255-211">After calling this method, you can no longer use the <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="e4255-212">Pour interrompre temporairement une <xref:System.Net.HttpListener> de l’objet, utilisez le <xref:System.Net.HttpListener.Stop%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e4255-212">To temporarily pause an <xref:System.Net.HttpListener> object, use the <xref:System.Net.HttpListener.Stop%2A> method.</span></span>  
  
 <span data-ttu-id="e4255-213">Cette méthode ferme downloads le <xref:System.Net.HttpListener> objet sans traiter les demandes en file d’attente.</span><span class="sxs-lookup"><span data-stu-id="e4255-213">This method shut downs the <xref:System.Net.HttpListener> object without processing queued requests.</span></span> <span data-ttu-id="e4255-214">Toutes les demandes en attente ne peuvent pas effectuer.</span><span class="sxs-lookup"><span data-stu-id="e4255-214">Any pending requests are unable to complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-215">L’exemple de code suivant montre comment appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="e4255-215">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e4255-216">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-216">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e4255-217">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-217">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultServiceNames">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.DefaultServiceNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultServiceNames As ServiceNameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ DefaultServiceNames { System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ServiceNameCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4255-218">Obtient une liste par défaut des noms de fournisseurs de services (SPN) déterminée par les préfixes enregistrés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-218">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4255-219">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> qui contient une liste de SPN.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-219">A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains a list of SPNs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-220">Le <xref:System.Net.HttpListener.DefaultServiceNames%2A> propriété est utilisée avec l’authentification Windows intégrée pour fournir la protection étendue.</span><span class="sxs-lookup"><span data-stu-id="e4255-220">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="e4255-221">La liste des noms principaux de service est initialisée à partir de la <xref:System.Net.HttpListener.Prefixes%2A> propriété lors de l’accès et effacée lorsque de nouveaux préfixes sont ajoutés à la <xref:System.Net.HttpListener.Prefixes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-221">The list of SPNs is initialized from the <xref:System.Net.HttpListener.Prefixes%2A> property when accessed and cleared when new prefixes are added to the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="e4255-222">Le <xref:System.Net.HttpListener.DefaultServiceNames%2A> propriété est utilisée si une application ne définit pas le <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> propriété de sa stratégie de protection étendue.</span><span class="sxs-lookup"><span data-stu-id="e4255-222">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used if an application doesn't set the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> property on its extended protection policy.</span></span>  
  
 <span data-ttu-id="e4255-223">Le <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> extrait avec le <xref:System.Net.HttpListener.DefaultServiceNames%2A> propriété est construite à partir du <xref:System.Net.HttpListener.Prefixes%2A> propriété selon les règles suivantes :</span><span class="sxs-lookup"><span data-stu-id="e4255-223">The <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> that is retrieved with the <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is built from the <xref:System.Net.HttpListener.Prefixes%2A> property according to the following rules:</span></span>  
  
1.  <span data-ttu-id="e4255-224">Si le nom d’hôte est « + », « * », ou un littéral IPv4 ou IPv6 (équivalent à «\*» mais restreint à une interface locale spécifique), le SPN suivant est ajouté :</span><span class="sxs-lookup"><span data-stu-id="e4255-224">If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "\*" but restricted to a specific local interface), the following SPN is added:</span></span>  
  
 <span data-ttu-id="e4255-225">`"HTTP/"` plus le nom de domaine complet de l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="e4255-225">`"HTTP/"` plus the fully qualified domain name of the computer.</span></span>  
  
1.  <span data-ttu-id="e4255-226">Si le nom d’hôte ne contient aucun points (aucun domaine ou sous-domaines), une tentative est effectuée pour résoudre le nom de domaine complet à l’aide de DNS (le même comportement que celui utilisé par <xref:System.Net.HttpWebRequest>).</span><span class="sxs-lookup"><span data-stu-id="e4255-226">If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <xref:System.Net.HttpWebRequest>).</span></span> <span data-ttu-id="e4255-227">Si le nom de domaine complet peut être résolu, les SPN suivants sont ajoutés :</span><span class="sxs-lookup"><span data-stu-id="e4255-227">If the fully-qualified domain name can be resolved, the following SPNs are added:</span></span>  
  
 <span data-ttu-id="e4255-228">`"HTTP/"` plus le nom d’hôte (nom court).</span><span class="sxs-lookup"><span data-stu-id="e4255-228">`"HTTP/"` plus the hostname (the short name).</span></span>  
  
 <span data-ttu-id="e4255-229">`"HTTP/"` plus le nom de domaine complet pour le nom d’hôte.</span><span class="sxs-lookup"><span data-stu-id="e4255-229">`"HTTP/"` plus the fully qualified domain name for the hostname.</span></span>  
  
1.  <span data-ttu-id="e4255-230">Si le nom d’hôte ne contient pas de points (aucun domaine ou sous-domaines) et un nom de domaine complet ne peut pas être résolu, le SPN suivant est ajouté :</span><span class="sxs-lookup"><span data-stu-id="e4255-230">If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</span></span>  
  
 <span data-ttu-id="e4255-231">`"HTTP/"` plus le nom d’hôte.</span><span class="sxs-lookup"><span data-stu-id="e4255-231">`"HTTP/"` plus the hostname.</span></span>  
  
1.  <span data-ttu-id="e4255-232">Si le nom d’hôte contient des points (domaines ou sous-domaines), le SPN suivant est ajouté :</span><span class="sxs-lookup"><span data-stu-id="e4255-232">If the hostname contains dots (domains or subdomains), the following SPN is added:</span></span>  
  
 <span data-ttu-id="e4255-233">`"HTTP/"` plus le nom d’hôte.</span><span class="sxs-lookup"><span data-stu-id="e4255-233">`"HTTP/"` plus the hostname.</span></span>  
  
 <span data-ttu-id="e4255-234">Le <xref:System.Net.HttpListener.DefaultServiceNames%2A> propriété peut être utilisée par une application pour passer en revue la liste des noms principaux de service par défaut qui sera utilisé pour l’authentification si aucune liste personnalisée n’est fournie.</span><span class="sxs-lookup"><span data-stu-id="e4255-234">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</span></span> <span data-ttu-id="e4255-235">Si d’autres SPN est nécessaires, une application peut ajouter à l’aide de la <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e4255-235">If other SPNs are needed, an application can add them using one of the <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> methods.</span></span>  
  
 <span data-ttu-id="e4255-236">Il n’est pas sécurisé lors de l’utilisation de la protection étendue pour prendre des décisions de stratégie en fonction de l’URL demandée, car cela peut être usurpée.</span><span class="sxs-lookup"><span data-stu-id="e4255-236">It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</span></span> <span data-ttu-id="e4255-237">Au lieu de cela, les applications doivent s’appuyer sur le <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> ou <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> propriétés à prendre ces décisions de stratégie.</span><span class="sxs-lookup"><span data-stu-id="e4255-237">Rather, applications should rely on the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> or <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> properties to make such policy decisions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="EndGetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext EndGetContext (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext EndGetContext(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetContext (asyncResult As IAsyncResult) As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ EndGetContext(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="e4255-238">Objet <see cref="T:System.IAsyncResult" /> qui a été obtenu au moment du démarrage de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-238">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4255-239">Met fin à une opération asynchrone pour récupérer une demande du client entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-239">Completes an asynchronous operation to retrieve an incoming client request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4255-240">Objet <see cref="T:System.Net.HttpListenerContext" /> qui représente la demande du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-240">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-241">Le <xref:System.Net.HttpListener.EndGetContext%2A> méthode est généralement appelée dans une méthode de rappel défini par l’application appelée par un délégué, pour obtenir le <xref:System.Net.HttpListenerContext> objet qui contient une demande entrante du client et sa réponse associée.</span><span class="sxs-lookup"><span data-stu-id="e4255-241">The <xref:System.Net.HttpListener.EndGetContext%2A> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <xref:System.Net.HttpListenerContext> object that contains an incoming client request and its associated response.</span></span> <span data-ttu-id="e4255-242">Cette méthode termine une opération démarrée précédemment en appelant le <xref:System.Net.HttpListener.BeginGetContext%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e4255-242">This method completes an operation previously started by calling the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="e4255-243">Si l’opération n’est pas terminée, cette méthode est bloquée jusqu'à ce qu’il effectue.</span><span class="sxs-lookup"><span data-stu-id="e4255-243">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="e4255-244">Étant donné que l’appel le <xref:System.Net.HttpListener.EndGetContext%2A> méthode requiert le <xref:System.Net.HttpListener> de l’objet, cet objet est généralement passé dans une méthode de rappel par à l’aide de l’objet d’état passé dans le <xref:System.Net.HttpListener.BeginGetContext%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e4255-244">Because calling the <xref:System.Net.HttpListener.EndGetContext%2A> method requires the <xref:System.Net.HttpListener> object, this object is typically passed into a callback method by using the state object passed into the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="e4255-245">Vous pouvez obtenir cet objet d’état à l’aide de la <xref:System.IAsyncResult.AsyncState%2A> propriété de la `asyncResult` objet.</span><span class="sxs-lookup"><span data-stu-id="e4255-245">You can obtain this state object by using the <xref:System.IAsyncResult.AsyncState%2A> property of the `asyncResult` object.</span></span>  
  
 <span data-ttu-id="e4255-246">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e4255-246">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-247">L’exemple de code suivant montre l’implémentation d’une méthode de rappel qui appelle la <xref:System.Net.HttpListener.EndGetContext%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e4255-247">The following code example shows the implementation of a callback method that calls the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e4255-248">
            <paramref name="asyncResult" /> n'a pas été obtenu en appelant la méthode <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-248">
              <paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e4255-249">
            <paramref name="asyncResult" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-249">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4255-250">La méthode <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> a déjà été appelée pour l'objet <paramref name="asyncResult" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-250">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-251">Cet objet est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-251">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e4255-252">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-252">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e4255-253">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-253">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("not used anywhere in the implementation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4255-254">Obtient ou définit le <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> à utiliser pour la protection étendue d'une session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-254">Get or set the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4255-255">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui spécifie la stratégie à utiliser pour la protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-255">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-256">Le <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> propriété est utilisée avec l’authentification Windows intégrée pour fournir la protection étendue.</span><span class="sxs-lookup"><span data-stu-id="e4255-256">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="e4255-257">Le <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> propriété permet la configuration de la stratégie de protection étendue pour l’ensemble <xref:System.Net.HttpListener> session.</span><span class="sxs-lookup"><span data-stu-id="e4255-257">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="e4255-258">Le <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> propriété permet la configuration de la stratégie de protection étendue pour chaque demande individuelle.</span><span class="sxs-lookup"><span data-stu-id="e4255-258">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy for each individual request.</span></span>  
  
 <span data-ttu-id="e4255-259">La propriété <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> doit être `null`.</span><span class="sxs-lookup"><span data-stu-id="e4255-259">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="e4255-260">Le <xref:System.Net.HttpListener> instance Obtient le jeton de liaison de canal (CBT) directement à partir de sa propre session TLS si elle existe.</span><span class="sxs-lookup"><span data-stu-id="e4255-260">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e4255-261">Une tentative de définition de la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> a eu lieu, mais la propriété <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> n'était pas <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-261">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e4255-262">Une tentative d'attribution de la valeur <see langword="null" /> à la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> a eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-262">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4255-263">Une tentative de définition de la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> a eu lieu après l'appel de la méthode <see cref="M:System.Net.HttpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-263">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-264">Cet objet est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-264">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e4255-265">La propriété <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-265">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpListener.ExtendedProtectionSelector ExtendedProtectionSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListener/ExtendedProtectionSelector ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionSelectorDelegate As HttpListener.ExtendedProtectionSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListener::ExtendedProtectionSelector ^ ExtendedProtectionSelectorDelegate { System::Net::HttpListener::ExtendedProtectionSelector ^ get(); void set(System::Net::HttpListener::ExtendedProtectionSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListener+ExtendedProtectionSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4255-266">Obtient ou définit le délégué appelé pour déterminer le <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> à utiliser pour chaque demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-266">Get or set the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4255-267">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui spécifie la stratégie à utiliser pour la protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-267">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-268">Le <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> propriété est utilisée avec l’authentification Windows intégrée pour fournir la protection étendue.</span><span class="sxs-lookup"><span data-stu-id="e4255-268">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="e4255-269">Le <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> propriété permet la configuration de la stratégie de protection étendue pour l’ensemble <xref:System.Net.HttpListener> session.</span><span class="sxs-lookup"><span data-stu-id="e4255-269">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="e4255-270">Le <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> propriété permet la configuration de la stratégie de protection étendue par demande individuelle.</span><span class="sxs-lookup"><span data-stu-id="e4255-270">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy per individual request.</span></span>  
  
 <span data-ttu-id="e4255-271">La propriété <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> doit être `null`.</span><span class="sxs-lookup"><span data-stu-id="e4255-271">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="e4255-272">Le <xref:System.Net.HttpListener> instance Obtient le jeton de liaison de canal (CBT) directement à partir de sa propre session TLS si elle existe.</span><span class="sxs-lookup"><span data-stu-id="e4255-272">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 <span data-ttu-id="e4255-273">Pour chaque demande, le délégué peut choisir les paramètres qui le <xref:System.Net.HttpListener> instance utilisera pour fournir la protection étendue.</span><span class="sxs-lookup"><span data-stu-id="e4255-273">For each request, the delegate can choose the settings that the <xref:System.Net.HttpListener> instance will use to provide extended protection.</span></span>  
  
 <span data-ttu-id="e4255-274">Si un délégué retourne `null` pour cette propriété, cela représente un <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> qui le <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> propriété <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="e4255-274">If a delegate returns `null` for this property, this represents a <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> which the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> property set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e4255-275">Une tentative de définition de la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> a eu lieu, mais la propriété <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> doit avoir la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-275">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e4255-276">Une tentative d'attribution de la valeur <see langword="null" /> à la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> a eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-276">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4255-277">Une tentative de définition de la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> a eu lieu après l'appel de la méthode <see cref="M:System.Net.HttpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-277">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-278">Cet objet est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-278">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e4255-279">Il a été tenté de définir la propriété <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> sur une plateforme qui ne prend pas en charge la protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-279">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ GetContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4255-280">Attend une demande entrante et retourne les résultats quand elle est reçue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-280">Waits for an incoming request and returns when one is received.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4255-281">Objet <see cref="T:System.Net.HttpListenerContext" /> qui représente une demande du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-281">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-282">Avant d’appeler cette méthode, vous devez appeler la <xref:System.Net.HttpListener.Start%2A> (méthode) et ajoutez au moins un préfixe URI à écouter en ajoutant les chaînes d’URI pour le <xref:System.Net.HttpListenerPrefixCollection> retourné par le <xref:System.Net.HttpListener.Prefixes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-282">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="e4255-283">Pour obtenir une description détaillée des préfixes, consultez la <xref:System.Net.HttpListener> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="e4255-283">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 <span data-ttu-id="e4255-284">Cette méthode se bloque en attendant une demande entrante.</span><span class="sxs-lookup"><span data-stu-id="e4255-284">This method blocks while waiting for an incoming request.</span></span> <span data-ttu-id="e4255-285">Si vous souhaitez que le traitement asynchrone (sur des threads séparés) afin que votre application ne bloque pas les demandes entrantes, utilisez la <xref:System.Net.HttpListener.BeginGetContext%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e4255-285">If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-286">L’exemple de code suivant montre comment appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="e4255-286">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="e4255-287">Un appel de fonction Win32 a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-287">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="e4255-288">Vérifiez la propriété <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de l’exception pour déterminer la cause de l’exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-288">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4255-289">Cet objet n'a pas été démarré ou été actuellement arrêté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-289">This object has not been started or is currently stopped.</span>
          </span>
          <span data-ttu-id="e4255-290">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-290">-or-</span>
          </span>
          <span data-ttu-id="e4255-291">
            <see cref="T:System.Net.HttpListener" /> ne possède pas de préfixe URI (Uniform Resource Identifier) auquel répondre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-291">The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-292">Cet objet est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-292">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e4255-293">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-293">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e4255-294">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-294">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetContextAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt; GetContextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.HttpListenerContext&gt; GetContextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContextAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextAsync () As Task(Of HttpListenerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::HttpListenerContext ^&gt; ^ GetContextAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4255-295">Attend une demande entrante en tant qu'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-295">Waits for an incoming request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4255-296">Retourne <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-296">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="e4255-297">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-297">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="e4255-298">La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l'objet de tâche retourne un objet <see cref="T:System.Net.HttpListenerContext" /> qui représente une demande client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-298">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-299">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="e4255-299">This operation will not block.</span></span> <span data-ttu-id="e4255-300">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine lorsque la demande entrante a été reçue.</span><span class="sxs-lookup"><span data-stu-id="e4255-300">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the incoming request has been received.</span></span>  
  
 <span data-ttu-id="e4255-301">Avant d’appeler cette méthode, vous devez appeler la <xref:System.Net.HttpListener.Start%2A> (méthode) et ajoutez au moins un préfixe URI à écouter en ajoutant les chaînes d’URI pour le <xref:System.Net.HttpListenerPrefixCollection> retourné par le <xref:System.Net.HttpListener.Prefixes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-301">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="e4255-302">Pour obtenir une description détaillée des préfixes, consultez la <xref:System.Net.HttpListener> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="e4255-302">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListenerContext" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWriteExceptions">
      <MemberSignature Language="C#" Value="public bool IgnoreWriteExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWriteExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWriteExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWriteExceptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4255-303">Obtient ou définit une valeur <see cref="T:System.Boolean" /> spécifiant si votre application reçoit des exceptions qui se produisent quand <see cref="T:System.Net.HttpListener" /> envoie la réponse au client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-303">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4255-304">
            <see langword="true" /> si ce <see cref="T:System.Net.HttpListener" /> ne doit pas retourner les exceptions qui se produisent lors de l'envoi de la réponse au client ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-304">
              <see langword="true" /> if this <see cref="T:System.Net.HttpListener" /> should not return exceptions that occur when sending the response to the client; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4255-305">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-305">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-306">Définissez cette propriété sur `true` si votre application ne requiert pas qu’une réponse a été envoyée à chaque client.</span><span class="sxs-lookup"><span data-stu-id="e4255-306">Set this property to `true` if your application does not require that a response is successfully sent to each client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-307">L’exemple de code suivant montre comment définir cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-307">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-308">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-308">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsListening">
      <MemberSignature Language="C#" Value="public bool IsListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsListening" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsListening" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsListening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsListening { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4255-309">Obtient une valeur qui indique si <see cref="T:System.Net.HttpListener" /> a été démarré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-309">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4255-310">
            <see langword="true" /> si <see cref="T:System.Net.HttpListener" /> a été démarré ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-310">
              <see langword="true" /> if the <see cref="T:System.Net.HttpListener" /> was started; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-311">Pour démarrer un <xref:System.Net.HttpListener>, appelez le <xref:System.Net.HttpListener.Start%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e4255-311">To start an <xref:System.Net.HttpListener>, call the <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-312">L’exemple de code suivant illustre l’utilisation de cette propriété pour déterminer l’état d’une instance d’écoute.</span><span class="sxs-lookup"><span data-stu-id="e4255-312">The following code example demonstrates using this property to determine the listening state of an instance.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4255-313">Obtient une valeur qui indique si <see cref="T:System.Net.HttpListener" /> peut être utilisé avec le système d'exploitation actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-313">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4255-314">
            <see langword="true" /> si <see cref="T:System.Net.HttpListener" /> est pris en charge ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-314">
              <see langword="true" /> if <see cref="T:System.Net.HttpListener" /> is supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-315">Cette classe est disponible uniquement sur les ordinateurs exécutant les systèmes d’exploitation Windows XP SP2 ou Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="e4255-315">This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-316">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.HttpListener.IsSupported%2A> propriété pour détecter si un <xref:System.Net.HttpListener> objet peut être utilisé avec le système d’exploitation actuel.</span><span class="sxs-lookup"><span data-stu-id="e4255-316">The following code example demonstrates the use of the <xref:System.Net.HttpListener.IsSupported%2A> property to detect whether an <xref:System.Net.HttpListener> object can be used with the current operating system.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefixes">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerPrefixCollection Prefixes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerPrefixCollection Prefixes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Prefixes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefixes As HttpListenerPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerPrefixCollection ^ Prefixes { System::Net::HttpListenerPrefixCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4255-317">Obtient les préfixes URI (Uniform Resource Identifier) gérés par cet objet <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-317">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4255-318">
            <see cref="T:System.Net.HttpListenerPrefixCollection" /> contenant les préfixes URI que cet objet <see cref="T:System.Net.HttpListener" /> est configuré pour gérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-318">An <see cref="T:System.Net.HttpListenerPrefixCollection" /> that contains the URI prefixes that this <see cref="T:System.Net.HttpListener" /> object is configured to handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-319">Les préfixes sont au format canonique.</span><span class="sxs-lookup"><span data-stu-id="e4255-319">The prefixes are in canonical form.</span></span> <span data-ttu-id="e4255-320">Pour obtenir une description détaillée des préfixes, consultez la <xref:System.Net.HttpListener> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="e4255-320">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-321">L’exemple de code suivant montre comment utiliser le <xref:System.Net.HttpListener.Prefixes%2A> propriété pour obtenir et imprimer les préfixes URI qui sont gérés.</span><span class="sxs-lookup"><span data-stu-id="e4255-321">The following code example demonstrates using the <xref:System.Net.HttpListener.Prefixes%2A> property to obtain and print the URI prefixes that are handled.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-322">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-322">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4255-323">Obtient ou définit le domaine, ou partition de ressource, associé à cet objet <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-323">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4255-324">Valeur <see cref="T:System.String" /> contenant le nom du domaine associé à l'objet <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-324">A <see cref="T:System.String" /> value that contains the name of the realm associated with the <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-325">Les serveurs utilisent des domaines pour partitionner les ressources protégées ; chaque partition peut posséder sa propre base de données d’authentification schéma et/ou l’autorisation.</span><span class="sxs-lookup"><span data-stu-id="e4255-325">Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</span></span> <span data-ttu-id="e4255-326">Les domaines sont utilisés uniquement pour les authentifications Digest et de base.</span><span class="sxs-lookup"><span data-stu-id="e4255-326">Realms are used only for basic and digest authentication.</span></span> <span data-ttu-id="e4255-327">Lorsqu'un client est correctement authentifié, l'authentification est valide pour toutes les ressources contenues dans un domaine donné.</span><span class="sxs-lookup"><span data-stu-id="e4255-327">After a client successfully authenticates, the authentication is valid for all resources in a given realm.</span></span> <span data-ttu-id="e4255-328">Pour obtenir une description détaillée des domaines, consultez la RFC 2617 à [ http://www.ietf.org ](http://www.ietf.org).</span><span class="sxs-lookup"><span data-stu-id="e4255-328">For a detailed description of realms, see RFC 2617 at [http://www.ietf.org](http://www.ietf.org).</span></span>  
  
 <span data-ttu-id="e4255-329">Une instance de <xref:System.Net.HttpListener> qu’un seul domaine est associé.</span><span class="sxs-lookup"><span data-stu-id="e4255-329">An instance of <xref:System.Net.HttpListener> has only one associated realm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-330">L’exemple de code suivant illustre la définition du <xref:System.Net.HttpListener.Realm%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-330">The following code example demonstrates setting the <xref:System.Net.HttpListener.Realm%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-331">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-331">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4255-332">Permet à cette instance de recevoir des demandes entrantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-332">Allows this instance to receive incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-333">Cette méthode doit être appelée avant d’appeler le <xref:System.Net.HttpListener.GetContext%2A> ou <xref:System.Net.HttpListener.BeginGetContext%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e4255-333">This method must be called before you call the <xref:System.Net.HttpListener.GetContext%2A> or <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
 <span data-ttu-id="e4255-334">Après avoir démarré une <xref:System.Net.HttpListener> de l’objet, vous pouvez utiliser la <xref:System.Net.HttpListener.Stop%2A> méthode pour l’arrêter.</span><span class="sxs-lookup"><span data-stu-id="e4255-334">After you have started an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Stop%2A> method to stop it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4255-335">Si cette instance de l’écouteur utilise le protocole https, vous devez installer et sélectionner un certificat de serveur.</span><span class="sxs-lookup"><span data-stu-id="e4255-335">If this listener instance uses https, you must install and select a Server Certificate.</span></span> <span data-ttu-id="e4255-336">Sinon, une <xref:System.Net.HttpWebRequest> requête de ce <xref:System.Net.HttpListener> échoue avec une fermeture inattendue de la connexion.</span><span class="sxs-lookup"><span data-stu-id="e4255-336">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span> <span data-ttu-id="e4255-337">Vous pouvez configurer des certificats de serveur et d’autres options d’écouteur à l’aide de HttpCfg.exe.</span><span class="sxs-lookup"><span data-stu-id="e4255-337">You can configure Server Certificates and other listener options by using HttpCfg.exe.</span></span> <span data-ttu-id="e4255-338">Consultez [ http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="e4255-338">See [http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) for more details.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-339">L’exemple de code suivant montre comment utiliser la <xref:System.Net.HttpListener.Start%2A> méthode commence à traiter les demandes entrantes.</span><span class="sxs-lookup"><span data-stu-id="e4255-339">The following code example demonstrates using the <xref:System.Net.HttpListener.Start%2A> method to begin processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="e4255-340">Un appel de fonction Win32 a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-340">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="e4255-341">Vérifiez la propriété <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de l’exception pour déterminer la cause de l’exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-341">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-342">Cet objet est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-342">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e4255-343">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-343">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e4255-344">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-344">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4255-345">Entraîne l'arrêt de la réception des demandes entrantes par cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-345">Causes this instance to stop receiving incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-346">Si cette instance est déjà arrêtée, appel de cette méthode n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="e4255-346">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 <span data-ttu-id="e4255-347">Une fois que vous avez arrêté un <xref:System.Net.HttpListener> de l’objet, vous pouvez utiliser la <xref:System.Net.HttpListener.Start%2A> méthode pour le redémarrer.</span><span class="sxs-lookup"><span data-stu-id="e4255-347">After you have stopped an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Start%2A> method to restart it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-348">L’exemple de code suivant montre comment utiliser la <xref:System.Net.HttpListener.Stop%2A> méthode pour arrêter le traitement des demandes entrantes.</span><span class="sxs-lookup"><span data-stu-id="e4255-348">The following code example demonstrates using the <xref:System.Net.HttpListener.Stop%2A> method to stop processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-349">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-349">This object has been closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e4255-350">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-350">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e4255-351">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4255-351">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4255-352">Libère les ressources détenues par cet objet <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-352">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-353">Les applications doivent utiliser le <xref:System.Net.HttpListener.Close%2A> méthode au lieu d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="e4255-353">Applications should use the <xref:System.Net.HttpListener.Close%2A> method instead of calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutManager">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerTimeoutManager TimeoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerTimeoutManager TimeoutManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.TimeoutManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutManager As HttpListenerTimeoutManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerTimeoutManager ^ TimeoutManager { System::Net::HttpListenerTimeoutManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerTimeoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4255-354">Gestionnaire de délai d'attente pour cette instance <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-354">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4255-355">Retourne <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-355">Returns <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span>
          </span>
          <span data-ttu-id="e4255-356">Gestionnaire de délai d'attente pour cette instance <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-356">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-357">Le Gestionnaire de délai d’attente définit les limites de délai d’attente de connexion pour cette <xref:System.Net.HttpListener> instance.</span><span class="sxs-lookup"><span data-stu-id="e4255-357">The timeout manager defines the connection timeout limits for this <xref:System.Net.HttpListener> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeConnectionNtlmAuthentication">
      <MemberSignature Language="C#" Value="public bool UnsafeConnectionNtlmAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeConnectionNtlmAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeConnectionNtlmAuthentication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Support for NTLM needs some loving.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4255-358">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui contrôle si, quand NTLM est utilisé, les demandes supplémentaires utilisant la même connexion TCP (Transmission Control Protocol) doivent être authentifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-358">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4255-359">
            <see langword="true" /> si le <see cref="T:System.Security.Principal.IIdentity" /> de la première demande doit être utilisé pour les demandes suivantes sur la même connexion ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-359">
              <see langword="true" /> if the <see cref="T:System.Security.Principal.IIdentity" /> of the first request will be used for subsequent requests on the same connection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4255-360">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-360">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4255-361">Lorsque cette propriété a la valeur `true` et la première demande sur une connexion TCP particulière est authentifiée à l’aide de NTLM, les demandes suivantes sur la même connexion TCP sont traitées à l’aide des informations d’authentification (<xref:System.Security.Principal.IIdentity>) de l’initiale demande.</span><span class="sxs-lookup"><span data-stu-id="e4255-361">When this property is set to `true` and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<xref:System.Security.Principal.IIdentity>) of the initial request.</span></span>  
  
 <span data-ttu-id="e4255-362">Cette propriété n'a aucun effet si NTLM n'est pas le protocole d'authentification utilisé.</span><span class="sxs-lookup"><span data-stu-id="e4255-362">This property has no effect when NTLM is not the authentication protocol.</span></span> <span data-ttu-id="e4255-363">Lors de la négociation est spécifiée comme protocole d’authentification, cette propriété n’a d’effet que si NTLM est le protocole utilisé pour l’authentification.</span><span class="sxs-lookup"><span data-stu-id="e4255-363">When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4255-364">Lors de la définition de cette propriété `true` augmente les performances car le <xref:System.Net.HttpListener> pas envoyer d’authentification NTLM supplémentaire, il existe un risque de sécurité dans toutes les demandes pour fournir des informations d’authentification ne nécessitant ne pas.</span><span class="sxs-lookup"><span data-stu-id="e4255-364">While setting this property to `true` increases performance because the <xref:System.Net.HttpListener> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</span></span> <span data-ttu-id="e4255-365">Vous devez déterminer si l'augmentation des performances vaut la peine de prendre ce risque.</span><span class="sxs-lookup"><span data-stu-id="e4255-365">You must determine whether the increase in performance is worth this risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4255-366">L’exemple de code suivant montre comment définir cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e4255-366">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4255-367">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4255-367">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>