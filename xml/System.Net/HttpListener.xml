<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpListener.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe0782573ef12ea9f2297019f9e271a52a13621c873d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82573ef12ea9f2297019f9e271a52a13621c873d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListener">
          <source>Provides a simple, programmatically controlled HTTP protocol listener.</source>
          <target state="translated">Fournit un écouteur de protocole HTTP simple, contrôlé par programme.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListener">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</source>
          <target state="translated">À l’aide de la <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> (classe), vous pouvez créer un écouteur de protocole HTTP simple qui répond aux demandes HTTP.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The listener is active for the lifetime of the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object and runs within your application with its permissions.</source>
          <target state="translated">L’écouteur est actif pendant la durée de vie de la <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objet et s’exécute au sein de votre application avec ses autorisations.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To use <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, create a new instance of the class using the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> constructor and use the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <ph id="ph4">&lt;xref:System.Net.HttpListener&gt;</ph> should process.</source>
          <target state="translated">À utiliser <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, créer une nouvelle instance de la classe à l’aide de la <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> constructeur et utilisez la <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> la depréfixesdepropriétépouraccéderàlacollectionquicontientleschaînesquispécifientlesidentificateurderessourceuniforme(URI)<ph id="ph4">&lt;xref:System.Net.HttpListener&gt;</ph>doit traiter.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</source>
          <target state="translated">Une chaîne de préfixe URI est composée d’un modèle (http ou https), un ordinateur hôte, un port facultatif et un chemin d’accès facultatif.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>An example of a complete prefix string is <bpt id="p1">*</bpt><ph id="ph1">http://www.contoso.com:8080/customerData/</ph><ept id="p1">*</ept>.</source>
          <target state="translated">Est un exemple de chaîne de préfixe complète <bpt id="p1">*</bpt> <ph id="ph1">http://www.contoso.com:8080/customerData/</ph> <ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Prefixes must end in a forward slash ("/").</source>
          <target state="translated">Les préfixes doivent se terminer par une barre oblique (« / »).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object with the prefix that most closely matches a requested URI responds to the request.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objet avec le préfixe qui correspond le mieux à un URI demandé répond à la demande.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Multiple <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objects cannot add the same prefix; a <ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> exception is thrown if a <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> adds a prefix that is already in use.</source>
          <target state="translated">Plusieurs <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objets ne peut pas ajouter le même préfixe ; un <ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> exception est levée si une <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> ajoute un préfixe qui est déjà en cours d’utilisation.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>When a port is specified, the host element can be replaced with "<ph id="ph1">\*</ph>" to indicate that the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> accepts requests sent to the port if the requested URI does not match any other prefix.</source>
          <target state="translated">Lorsqu’un port est spécifié, l’élément hôte peut être remplacé par «<ph id="ph1">\*</ph>» pour indiquer que le <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> accepte les demandes envoyées au port si l’URI demandé ne correspond pas à un préfixe quelconque.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, the prefix is <bpt id="p1">*</bpt>http://<ph id="ph2">\*</ph>:8080/<ept id="p1">*</ept>.</source>
          <target state="translated">Par exemple, pour recevoir toutes les demandes envoyées au port 8080 lorsque l’URI demandé n’est pas géré par les <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, le préfixe est <bpt id="p1">*</bpt>http://<ph id="ph2">\*</ph>: 8080 /<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Similarly, to specify that the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> accepts all requests sent to a port, replace the host element with the "+" character.</source>
          <target state="translated">De même, pour spécifier que le <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> accepte toutes les demandes envoyées à un port, remplacez l’élément hôte par le caractère « + ».</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, <bpt id="p1">*</bpt><ph id="ph1">https://+:8080</ph><ept id="p1">*</ept>.</source>
          <target state="translated">Par exemple, <bpt id="p1">*</bpt> <ph id="ph1">https://+:8080</ph> <ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The "<ph id="ph1">\*</ph>" and "+" characters can be present in prefixes that include paths.</source>
          <target state="translated">Le «<ph id="ph1">\*</ph>» et « + » caractères peuvent être présents dans les préfixes qui incluent des chemins d’accès.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">Depuis .NET Core 2.0 ou .NET Framework 4.6 sur Windows 10, les sous-domaines génériques sont prises en charge les préfixes URI qui sont gérés par un <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To specify a wildcard subdomain, use the "<ph id="ph1">\*</ph>" character as part of the hostname in a URI prefix.</source>
          <target state="translated">Pour spécifier un sous-domaine de caractère générique, utilisez le «<ph id="ph1">\*</ph>« caractère en tant que partie du nom d’hôte dans un préfixe URI.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, <bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>.foo.com/<ept id="p1">*</ept>.</source>
          <target state="translated">Par exemple, <bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>.foo.com/<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Pass this as the argument to the <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection.Add%2A&gt;</ph> method.</source>
          <target state="translated">Passer en tant qu’argument à la <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection.Add%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph>.</source>
          <target state="translated">Cela fonctionne à compter de .NET Core 2.0 ou .NET Framework 4.6 sur Windows 10 ; dans les versions antérieures, cette opération génère un <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Top-level wildcard bindings (<bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>:8080/<ept id="p1">*</ept> and <bpt id="p2">*</bpt><ph id="ph2">http://+:8080</ph><ept id="p2">*</ept>) should <bpt id="p3">**</bpt>not<ept id="p3">**</ept> be used.</source>
          <target state="translated">Les liaisons de niveau supérieur de caractère générique (<bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>: 8080 /<ept id="p1">*</ept> et <bpt id="p2">*</bpt> <ph id="ph2">http://+:8080</ph> <ept id="p2">*</ept>) doit <bpt id="p3">**</bpt>pas<ept id="p3">**</ept> être utilisé.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Top-level wildcard bindings can open up your app to security vulnerabilities.</source>
          <target state="translated">Les liaisons génériques de niveau supérieur peuvent exposer votre application à des failles de sécurité.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>This applies to both strong and weak wildcards.</source>
          <target state="translated">Cela s’applique aux caractères génériques forts et faibles.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Use explicit host names rather than wildcards.</source>
          <target state="translated">Utilisez des noms d’hôte explicites plutôt que des caractères génériques.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Subdomain wildcard binding (for example, <ph id="ph1">`*.mysub.com`</ph>) doesn't have this security risk if you control the entire parent domain (as opposed to <ph id="ph2">`*.com`</ph>, which is vulnerable).</source>
          <target state="translated">Une liaison générique de sous-domaine (par exemple, <ph id="ph1">`*.mysub.com`</ph>) ne présente pas ce risque de sécurité si vous contrôlez le domaine parent en entier (par opposition à <ph id="ph2">`*.com`</ph>, qui est vulnérable).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>See <bpt id="p1">[</bpt>rfc7230 section-5.4<ept id="p1">](https://tools.ietf.org/html/rfc7230#section-5.4)</ept> for more information.</source>
          <target state="translated">Consultez la <bpt id="p1">[</bpt>rfc7230 section-5.4<ept id="p1">](https://tools.ietf.org/html/rfc7230#section-5.4)</ept> pour plus d’informations.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To begin listening for requests from clients, add the URI prefixes to the collection and call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">Pour commencer à écouter les demandes des clients, ajoutez les préfixes URI à la collection et appelez le <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> offers both synchronous and asynchronous models for processing client requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> propose des modèles synchrones et asynchrones pour traiter les demandes du client.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Requests and their associated responses are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method or its asynchronous counterparts, the <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods.</source>
          <target state="translated">Les demandes et leurs réponses associées sont accessibles à l’aide de la <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> objet retourné par la <ph id="ph2">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> méthode ou ses équivalents asynchrones, les <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</source>
          <target state="translated">Le modèle synchrone est approprié si votre application doit être bloquée en attendant une demande du client, et si vous souhaitez ne traiter qu’une seule demande à la fois.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Using the synchronous model, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method, which waits for a client to send a request.</source>
          <target state="translated">À l’aide du modèle synchrone, appelez le <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> (méthode), qui attend qu’un client envoie une demande.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The method returns an <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object to you for processing when one occurs.</source>
          <target state="translated">La méthode retourne un <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> de l’objet à vous pour le traitement lorsque l’une se produit.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</source>
          <target state="translated">Dans le modèle asynchrone plus complexe, votre application ne bloque pas lors de l’attente des demandes et chaque demande est traitée dans son propre thread d’exécution.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method to specify an application-defined method to be called for each incoming request.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> méthode pour spécifier une méthode définie par l’application d’être appelée pour chaque demande entrante.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Within that method, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method to obtain the request, process it, and respond.</source>
          <target state="translated">Dans cette méthode, appelez le <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> méthode pour obtenir la demande, de le traiter et de répondre.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>In either model, incoming requests are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph> property and are represented by <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> objects.</source>
          <target state="translated">Dans les deux modèles, les demandes entrantes sont accessibles à l’aide de la <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph> propriété et sont représentées par <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Similarly, responses are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType&gt;</ph> property and are represented by <ph id="ph2">&lt;xref:System.Net.HttpListenerResponse&gt;</ph> objects.</source>
          <target state="translated">De même, les réponses sont accessibles à l’aide de la <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType&gt;</ph> propriété et sont représentées par <ph id="ph2">&lt;xref:System.Net.HttpListenerResponse&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>These objects share some functionality with the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpWebResponse&gt;</ph> objects, but the latter objects cannot be used in conjunction with <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> because they implement client, not server, behaviors.</source>
          <target state="translated">Ces objets partagent certaines fonctionnalités avec les <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.HttpWebResponse&gt;</ph> objets, mais ces derniers objets ne peut pas être utilisé conjointement avec <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> , car ils implémentent client, pas le serveur, les comportements.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>An <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> can require client authentication.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> peut exiger l’authentification du client.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</source>
          <target state="translated">Vous pouvez spécifier un schéma particulier à utiliser pour l’authentification, ou vous pouvez spécifier un délégué qui détermine le schéma à utiliser.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You must require some form of authentication to obtain information about the client's identity.</source>
          <target state="translated">Vous devez exiger une forme d’authentification pour obtenir des informations sur l’identité du client.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For additional information, see the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> properties.</source>
          <target state="translated">Pour plus d’informations, consultez la <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>If you create an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> using https, you must select a Server Certificate for that listener.</source>
          <target state="translated">Si vous créez un <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> à l’aide de https, vous devez sélectionner un certificat de serveur pour cet écouteur.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> query of this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> will fail with an unexpected close of the connection.</source>
          <target state="translated">Sinon, une <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> requête de ce <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> échoue avec une fermeture inattendue de la connexion.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</source>
          <target state="translated">Vous pouvez configurer des certificats de serveur et d’autres options d’écouteur à l’aide de l’interface réseau (netsh.exe).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>See <bpt id="p1">[</bpt>Network Shell (Netsh)<ept id="p1">](/windows-server/networking/technologies/netsh/netsh)</ept> for more details.</source>
          <target state="translated">Consultez <bpt id="p1">[</bpt>Network Shell (Netsh)<ept id="p1">](/windows-server/networking/technologies/netsh/netsh)</ept> pour plus d’informations.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The executable began shipping with Windows Server 2008 and Windows Vista.</source>
          <target state="translated">Le fichier exécutable est fourni avec Windows Server 2008 et Windows Vista.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>If you specify multiple authentication schemes for the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, the listener will challenge clients in the following order: <ph id="ph2">`Negotiate`</ph>, <ph id="ph3">`NTLM`</ph>, <ph id="ph4">`Digest`</ph>, and then <ph id="ph5">`Basic`</ph>.</source>
          <target state="translated">Si vous spécifiez plusieurs schémas d’authentification pour le <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, l’écouteur sélectionnera les clients dans l’ordre suivant : <ph id="ph2">`Negotiate`</ph>, <ph id="ph3">`NTLM`</ph>, <ph id="ph4">`Digest`</ph>, puis <ph id="ph5">`Basic`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>Before using the instance returned by this constructor, you must invoke its <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">Avant d’utiliser l’instance retournée par ce constructeur, vous devez appeler sa <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> constructeur pour créer un nouveau <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>For the complete example, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class topic.</source>
          <target state="translated">Pour obtenir un exemple complet, consultez la <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> rubrique de la classe.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>This class cannot be used on the current operating system.</source>
          <target state="translated">Cette classe ne peut pas être utilisée sur le système d'exploitation actuel.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</source>
          <target state="translated">Windows Server 2003 ou Windows XP SP2 est requis pour utiliser des instances de cette classe.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>Note: This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Remarque : Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Abort">
          <source>Shuts down the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object immediately, discarding all currently queued requests.</source>
          <target state="translated">Arrête immédiatement l'objet <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>, en ignorant toutes les demandes actuellement mises en file d'attente.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>This method disposes of all resources held by this listener.</source>
          <target state="translated">Cette méthode libère toutes les ressources détenues par cet écouteur.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>Any pending requests are unable to complete.</source>
          <target state="translated">Toutes les demandes en attente ne peuvent pas effectuer.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>After calling this method, you will receive an <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> if you attempt to use this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>.</source>
          <target state="translated">Après avoir appelé cette méthode, vous recevrez un <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> si vous essayez d’utiliser cette <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler cette méthode.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>Gets or sets the scheme used to authenticate clients.</source>
          <target state="translated">Obtient ou définit le schéma utilisé pour authentifier les clients.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemes" /&gt;</ph> enumeration values that indicates how clients are to be authenticated.</source>
          <target state="translated">Combinaison d'opérations de bits de valeurs d'énumération <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemes" /&gt;</ph> qui indiquent la manière dont les clients doivent être authentifiés.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Net.AuthenticationSchemes.Anonymous" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="F:System.Net.AuthenticationSchemes.Anonymous" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> uses the specified scheme to authenticate all incoming requests.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> utilise le schéma spécifié pour authentifier toutes les demandes entrantes.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods return an incoming client request only if the <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> successfully authenticates the request.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> méthodes retournent une demande entrante du client uniquement si le <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> authentifie correctement la demande.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>You can interrogate the identity of a successfully authenticated client by using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Vous pouvez interroger l’identité d’un client correctement authentifié à l’aide de la <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>If you want an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostName%2A&gt;</ph> property), you must implement a method that chooses the authentication scheme.</source>
          <target state="translated">Si vous souhaitez un <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objet à utiliser les mécanismes d’authentification différents selon les caractéristiques des demandes qu’il reçoit (par exemple, la demande <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostName%2A&gt;</ph> propriété), vous devez implémenter une méthode qui choisit le schéma d’authentification.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>For instructions about how to do this, see the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> property documentation.</source>
          <target state="translated">Pour savoir comment procéder, consultez la <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> documentation de la propriété.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>To set this property to enable Digest, NTLM, or Negotiate requires the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</source>
          <target state="translated">Pour définir cette propriété pour activer Digest, NTLM ou Negotiate nécessite le <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> property to specify an authentication scheme.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> propriété pour spécifier un schéma d’authentification.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>Gets or sets the delegate called to determine the protocol used to authenticate clients.</source>
          <target state="translated">Obtient ou définit le délégué appelé pour déterminer le protocole utilisé pendant l'authentification des clients.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemeSelector" /&gt;</ph> delegate that invokes the method used to select an authentication protocol.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemeSelector" /&gt;</ph> qui appelle la méthode utilisée pour sélectionner un protocole d'authentification.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If you want the same authentication protocol to be used for all requests handled by a particular instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, you do not need to set this property.</source>
          <target state="translated">Si vous souhaitez que le même protocole d’authentification à utiliser pour toutes les demandes gérées par une instance particulière de <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, vous n’avez pas besoin de définir cette propriété.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>To specify a protocol to be used for all client requests, use the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> property.</source>
          <target state="translated">Pour spécifier un protocole à utiliser pour toutes les demandes de client, utilisez le <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If the client has not specified authentication information in its headers, the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</source>
          <target state="translated">Si le client n’a pas spécifié d’informations d’authentification dans ses en-têtes, le <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> appelle le délégué spécifié pour chaque demande entrante non authentifiée afin de déterminer qui, le cas échéant, protocole à utiliser pour authentifier le client.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods return an incoming request only if the <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> successfully authenticated the request.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> méthodes retournent un demande entrante que si le <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> authentifié avec succès la demande.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If a request cannot be authenticated, the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> automatically sends back a 401 response.</source>
          <target state="translated">Si une demande ne peut pas être authentifiée, le <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> automatiquement renvoie une réponse 401.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>You can get the identity of a successfully authenticated client using the <ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Vous pouvez obtenir l’identité d’un client correctement authentifié à l’aide de la <ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostAddress%2A&gt;</ph> property).</source>
          <target state="translated">La possibilité de déléguer le choix du protocole d’authentification à une méthode spécifique à l’application est utile si vous souhaitez qu’une instance de <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> à utiliser différents protocoles d’authentification selon les caractéristiques de demandes reçues (pour exemple, la demande <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostAddress%2A&gt;</ph> propriété).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>To set this property to enable Digest, NTLM, or Negotiate requires the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</source>
          <target state="translated">Pour définir cette propriété pour activer Digest, NTLM ou Negotiate nécessite le <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The following code example sets the value of this property.</source>
          <target state="translated">L’exemple de code suivant définit la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The following code example provides an implementation of a method invoked by an <ph id="ph1">&lt;xref:System.Net.AuthenticationSchemeSelector&gt;</ph> delegate.</source>
          <target state="translated">L’exemple de code suivant fournit une implémentation d’une méthode appelée par un <ph id="ph1">&lt;xref:System.Net.AuthenticationSchemeSelector&gt;</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when a client request is available.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui fait référence à la méthode à appeler quand une demande du client est disponible.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">Objet défini par l'utilisateur qui comporte des informations sur l'opération.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">Cet objet est passé au délégué <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> quand l’opération se termine.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Begins asynchronously retrieving an incoming request.</source>
          <target state="translated">Commence à récupérer une demande entrante de façon asynchrone.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that indicates the status of the asynchronous operation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui indique l'état de l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method begins an asynchronous (non-blocking) call to receive incoming client requests.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> méthode commence un appel asynchrone (sans blocage) pour recevoir les demandes entrantes des clients.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">Avant d’appeler cette méthode, vous devez appeler la <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> (méthode) et ajoutez au moins un préfixe d’identificateur de ressource uniforme (URI) pour écouter en ajoutant les chaînes URI à la <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> retourné par le <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The asynchronous operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method.</source>
          <target state="translated">L’opération asynchrone doit être terminée en appelant le <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`callback`</ph> delegate.</source>
          <target state="translated">En règle générale, la méthode est appelée par le <ph id="ph1">`callback`</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">Cette méthode ne bloque pas pendant que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>To get an incoming request and block until the operation completes, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method.</source>
          <target state="translated">Pour obtenir une demande entrante et le bloc jusqu'à ce que l’opération est terminée, appelez le <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez <bpt id="p1">[</bpt>appel asynchrone des méthodes synchrones<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method to specify a callback method that will handle incoming client requests.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> méthode pour spécifier une méthode de rappel qui gère les demandes client entrantes.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The following code example implements a callback method.</source>
          <target state="translated">L’exemple de code suivant implémente une méthode de rappel.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>A Win32 function call failed.</source>
          <target state="translated">Un appel de fonction Win32 a échoué.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">Vérifiez la propriété <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> de l’exception pour déterminer la cause de l’exception.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object has not been started or is currently stopped.</source>
          <target state="translated">Cet objet n'a pas été démarré ou été actuellement arrêté.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object is closed.</source>
          <target state="translated">Cet objet est fermé.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Close">
          <source>Shuts down the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</source>
          <target state="translated">Arrête le <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>After calling this method, you can no longer use the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">Après avoir appelé cette méthode, vous ne pouvez plus utiliser le <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>To temporarily pause an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method.</source>
          <target state="translated">Pour interrompre temporairement une <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> de l’objet, utilisez le <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>This method shut downs the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object without processing queued requests.</source>
          <target state="translated">Cette méthode ferme downloads le <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objet sans traiter les demandes en file d’attente.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>Any pending requests are unable to complete.</source>
          <target state="translated">Toutes les demandes en attente ne peuvent pas effectuer.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler cette méthode.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</source>
          <target state="translated">Obtient une liste par défaut des noms de fournisseurs de services (SPN) déterminée par les préfixes enregistrés.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /&gt;</ph> that contains a list of SPNs.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /&gt;</ph> qui contient une liste de SPN.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> propriété est utilisée avec l’authentification Windows intégrée pour fournir la protection étendue.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The list of SPNs is initialized from the <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property when accessed and cleared when new prefixes are added to the <ph id="ph2">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">La liste des noms principaux de service est initialisée à partir de la <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriété lors de l’accès et effacée lorsque de nouveaux préfixes sont ajoutés à la <ph id="ph2">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is used if an application doesn't set the <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A&gt;</ph> property on its extended protection policy.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> propriété est utilisée si une application ne définit pas le <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A&gt;</ph> propriété de sa stratégie de protection étendue.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&gt;</ph> that is retrieved with the <ph id="ph2">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is built from the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property according to the following rules:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&gt;</ph> extrait avec le <ph id="ph2">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> propriété est construite à partir du <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriété selon les règles suivantes :</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "<ph id="ph1">\*</ph>" but restricted to a specific local interface), the following SPN is added:</source>
          <target state="translated">Si le nom d’hôte est « + », « * », ou un littéral IPv4 ou IPv6 (équivalent à «<ph id="ph1">\*</ph>» mais restreint à une interface locale spécifique), le SPN suivant est ajouté :</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the fully qualified domain name of the computer.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> plus le nom de domaine complet de l’ordinateur.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>).</source>
          <target state="translated">Si le nom d’hôte ne contient aucun points (aucun domaine ou sous-domaines), une tentative est effectuée pour résoudre le nom de domaine complet à l’aide de DNS (le même comportement que celui utilisé par <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the fully-qualified domain name can be resolved, the following SPNs are added:</source>
          <target state="translated">Si le nom de domaine complet peut être résolu, les SPN suivants sont ajoutés :</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname (the short name).</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> plus le nom d’hôte (nom court).</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the fully qualified domain name for the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> plus le nom de domaine complet pour le nom d’hôte.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</source>
          <target state="translated">Si le nom d’hôte ne contient pas de points (aucun domaine ou sous-domaines) et un nom de domaine complet ne peut pas être résolu, le SPN suivant est ajouté :</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> plus le nom d’hôte.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains dots (domains or subdomains), the following SPN is added:</source>
          <target state="translated">Si le nom d’hôte contient des points (domaines ou sous-domaines), le SPN suivant est ajouté :</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> plus le nom d’hôte.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> propriété peut être utilisée par une application pour passer en revue la liste des noms principaux de service par défaut qui sera utilisé pour l’authentification si aucune liste personnalisée n’est fournie.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If other SPNs are needed, an application can add them using one of the <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A&gt;</ph> methods.</source>
          <target state="translated">Si d’autres SPN est nécessaires, une application peut ajouter à l’aide de la <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</source>
          <target state="translated">Il n’est pas sécurisé lors de l’utilisation de la protection étendue pour prendre des décisions de stratégie en fonction de l’URL demandée, car cela peut être usurpée.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>Rather, applications should rely on the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> properties to make such policy decisions.</source>
          <target state="translated">Au lieu de cela, les applications doivent s’appuyer sur le <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> propriétés à prendre ces décisions de stratégie.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that was obtained when the asynchronous operation was started.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui a été obtenu au moment du démarrage de l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>Completes an asynchronous operation to retrieve an incoming client request.</source>
          <target state="translated">Met fin à une opération asynchrone pour récupérer une demande du client entrante.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents the client request.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> qui représente la demande du client.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <ph id="ph2">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object that contains an incoming client request and its associated response.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> méthode est généralement appelée dans une méthode de rappel défini par l’application appelée par un délégué, pour obtenir le <ph id="ph2">&lt;xref:System.Net.HttpListenerContext&gt;</ph> objet qui contient une demande entrante du client et sa réponse associée.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This method completes an operation previously started by calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode termine une opération démarrée précédemment en appelant le <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">Si l’opération n’est pas terminée, cette méthode est bloquée jusqu'à ce qu’il effectue.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>Because calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method requires the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object, this object is typically passed into a callback method by using the state object passed into the <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">Étant donné que l’appel le <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> méthode requiert le <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> de l’objet, cet objet est généralement passé dans une méthode de rappel par à l’aide de l’objet d’état passé dans le <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>You can obtain this state object by using the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property of the <ph id="ph2">`asyncResult`</ph> object.</source>
          <target state="translated">Vous pouvez obtenir cet objet d’état à l’aide de la <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> propriété de la <ph id="ph2">`asyncResult`</ph> objet.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez <bpt id="p1">[</bpt>appel asynchrone des méthodes synchrones<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The following code example shows the implementation of a callback method that calls the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre l’implémentation d’une méthode de rappel qui appelle la <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not obtained by calling the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> n'a pas été obtenu en appelant la méthode <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /&gt;</ph> method was already called for the specified <ph id="ph2">&lt;paramref name="asyncResult" /&gt;</ph> object.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /&gt;</ph> a déjà été appelée pour l'objet <ph id="ph2">&lt;paramref name="asyncResult" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This object is closed.</source>
          <target state="translated">Cet objet est fermé.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>Get or set the <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> to use for extended protection for a session.</source>
          <target state="translated">Obtient ou définit le <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> à utiliser pour la protection étendue d'une session.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that specifies the policy to use for extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> qui spécifie la stratégie à utiliser pour la protection étendue.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> propriété est utilisée avec l’authentification Windows intégrée pour fournir la protection étendue.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property allows the configuration of the extended protection policy for the whole <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> session.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> propriété permet la configuration de la stratégie de protection étendue pour l’ensemble <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> session.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> property allows the configuration of the extended protection policy for each individual request.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> propriété permet la configuration de la stratégie de protection étendue pour chaque demande individuelle.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> property must be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> doit être <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance Obtient le jeton de liaison de canal (CBT) directement à partir de sa propre session TLS si elle existe.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property, but the <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> property was not <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Une tentative de définition de la propriété <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> a eu lieu, mais la propriété <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> n'était pas <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Une tentative d'attribution de la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph> à la propriété <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> a eu lieu.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property after the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> method was already called.</source>
          <target state="translated">Une tentative de définition de la propriété <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> a eu lieu après l'appel de la méthode <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>This object is closed.</source>
          <target state="translated">Cet objet est fermé.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /&gt;</ph> property was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /&gt;</ph> avait la valeur <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> sur une plateforme qui ne prend pas en charge protection étendue.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>Get or set the delegate called to determine the <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> to use for each request.</source>
          <target state="translated">Obtient ou définit le délégué appelé pour déterminer le <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> à utiliser pour chaque demande.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that specifies the policy to use for extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> qui spécifie la stratégie à utiliser pour la protection étendue.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> propriété est utilisée avec l’authentification Windows intégrée pour fournir la protection étendue.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property allows the configuration of the extended protection policy for the whole <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> session.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> propriété permet la configuration de la stratégie de protection étendue pour l’ensemble <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> session.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> property allows the configuration of the extended protection policy per individual request.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> propriété permet la configuration de la stratégie de protection étendue par demande individuelle.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> property must be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> doit être <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance Obtient le jeton de liaison de canal (CBT) directement à partir de sa propre session TLS si elle existe.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>For each request, the delegate can choose the settings that the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance will use to provide extended protection.</source>
          <target state="translated">Pour chaque demande, le délégué peut choisir les paramètres qui le <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance utilisera pour fournir la protection étendue.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>If a delegate returns <ph id="ph1">`null`</ph> for this property, this represents a <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&gt;</ph> which the <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> property set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">Si un délégué retourne <ph id="ph1">`null`</ph> pour cette propriété, cela représente un <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&gt;</ph> qui le <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> propriété <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property, but the <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> property must be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Une tentative de définition de la propriété <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> a eu lieu, mais la propriété <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> doit avoir la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Une tentative d'attribution de la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph> à la propriété <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> a eu lieu.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property after the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> method was already called.</source>
          <target state="translated">Une tentative de définition de la propriété <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> a eu lieu après l'appel de la méthode <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>This object is closed.</source>
          <target state="translated">Cet objet est fermé.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property on a platform that does not support extended protection.</source>
          <target state="translated">Il a été tenté de définir la propriété <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> sur une plateforme qui ne prend pas en charge la protection étendue.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>Waits for an incoming request and returns when one is received.</source>
          <target state="translated">Attend une demande entrante et retourne les résultats quand elle est reçue.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents a client request.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> qui représente une demande du client.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one URI prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">Avant d’appeler cette méthode, vous devez appeler la <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> (méthode) et ajoutez au moins un préfixe URI à écouter en ajoutant les chaînes d’URI pour le <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> retourné par le <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">Pour obtenir une description détaillée des préfixes, consultez la <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> vue d’ensemble de la classe.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>This method blocks while waiting for an incoming request.</source>
          <target state="translated">Cette méthode se bloque en attendant une demande entrante.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">Si vous souhaitez que le traitement asynchrone (sur des threads séparés) afin que votre application ne bloque pas les demandes entrantes, utilisez la <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler cette méthode.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>A Win32 function call failed.</source>
          <target state="translated">Un appel de fonction Win32 a échoué.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">Vérifiez la propriété <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> de l’exception pour déterminer la cause de l’exception.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>This object has not been started or is currently stopped.</source>
          <target state="translated">Cet objet n'a pas été démarré ou été actuellement arrêté.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> ne possède pas de préfixe URI (Uniform Resource Identifier) auquel répondre.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>This object is closed.</source>
          <target state="translated">Cet objet est fermé.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Waits for an incoming request as an asynchronous operation.</source>
          <target state="translated">Attend une demande entrante en tant qu'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objet de tâche représentant l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> property on the task object returns an <ph id="ph2">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents a client request.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> sur l'objet de tâche retourne un objet <ph id="ph2">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> qui représente une demande client.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>This operation will not block.</source>
          <target state="translated">Cette opération ne bloque pas.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete when the incoming request has been received.</source>
          <target state="translated">Retourné <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> objet se termine lorsque la demande entrante a été reçue.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one URI prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">Avant d’appeler cette méthode, vous devez appeler la <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> (méthode) et ajoutez au moins un préfixe URI à écouter en ajoutant les chaînes d’URI pour le <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> retourné par le <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">Pour obtenir une description détaillée des préfixes, consultez la <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> vue d’ensemble de la classe.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether your application receives exceptions that occur when an <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> sends the response to the client.</source>
          <target state="translated">Obtient ou définit une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> spécifiant si votre application reçoit des exceptions qui se produisent quand <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> envoie la réponse au client.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> should not return exceptions that occur when sending the response to the client; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si ce <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> ne doit pas retourner les exceptions qui se produisent lors de l'envoi de la réponse au client ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>Set this property to <ph id="ph1">`true`</ph> if your application does not require that a response is successfully sent to each client.</source>
          <target state="translated">Définissez cette propriété sur <ph id="ph1">`true`</ph> si votre application ne requiert pas qu’une réponse a été envoyée à chaque client.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>The following code example demonstrates setting this property.</source>
          <target state="translated">L’exemple de code suivant montre comment définir cette propriété.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IsListening">
          <source>Gets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> has been started.</source>
          <target state="translated">Obtient une valeur qui indique si <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> a été démarré.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> was started; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> a été démarré ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source>To start an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">Pour démarrer un <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, appelez le <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source>The following code example demonstrates using this property to determine the listening state of an instance.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de cette propriété pour déterminer l’état d’une instance d’écoute.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IsSupported">
          <source>Gets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> can be used with the current operating system.</source>
          <target state="translated">Obtient une valeur qui indique si <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> peut être utilisé avec le système d'exploitation actuel.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> is supported; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> est pris en charge ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source>This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</source>
          <target state="translated">Cette classe est disponible uniquement sur les ordinateurs exécutant les systèmes d’exploitation Windows XP SP2 ou Windows Server 2003.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.HttpListener.IsSupported%2A&gt;</ph> property to detect whether an <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object can be used with the current operating system.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Net.HttpListener.IsSupported%2A&gt;</ph> propriété pour détecter si un <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> objet peut être utilisé avec le système d’exploitation actuel.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Prefixes">
          <source>Gets the Uniform Resource Identifier (URI) prefixes handled by this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">Obtient les préfixes URI (Uniform Resource Identifier) gérés par cet objet <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> that contains the URI prefixes that this <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object is configured to handle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> contenant les préfixes URI que cet objet <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> est configuré pour gérer.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>The prefixes are in canonical form.</source>
          <target state="translated">Les préfixes sont au format canonique.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">Pour obtenir une description détaillée des préfixes, consultez la <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> vue d’ensemble de la classe.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property to obtain and print the URI prefixes that are handled.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriété pour obtenir et imprimer les préfixes URI qui sont gérés.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Prefixes">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Realm">
          <source>Gets or sets the realm, or resource partition, associated with this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">Obtient ou définit le domaine, ou partition de ressource, associé à cet objet <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value that contains the name of the realm associated with the <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenant le nom du domaine associé à l'objet <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</source>
          <target state="translated">Les serveurs utilisent des domaines pour partitionner les ressources protégées ; chaque partition peut posséder sa propre base de données d’authentification schéma et/ou l’autorisation.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>Realms are used only for basic and digest authentication.</source>
          <target state="translated">Les domaines sont utilisés uniquement pour les authentifications Digest et de base.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>After a client successfully authenticates, the authentication is valid for all resources in a given realm.</source>
          <target state="translated">Lorsqu'un client est correctement authentifié, l'authentification est valide pour toutes les ressources contenues dans un domaine donné.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>For a detailed description of realms, see RFC 2617 at <bpt id="p1">[</bpt><ph id="ph1">https://www.ietf.org/</ph><ept id="p1">](https://www.ietf.org/)</ept>.</source>
          <target state="translated">Pour obtenir une description détaillée des domaines, consultez la RFC 2617 à <bpt id="p1">[</bpt> <ph id="ph1">https://www.ietf.org/</ph> <ept id="p1">](https://www.ietf.org/)</ept>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>An instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> has only one associated realm.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> qu’un seul domaine est associé.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>The following code example demonstrates setting the <ph id="ph1">&lt;xref:System.Net.HttpListener.Realm%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple de code suivant illustre la définition du <ph id="ph1">&lt;xref:System.Net.HttpListener.Realm%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Realm">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>Allows this instance to receive incoming requests.</source>
          <target state="translated">Permet à cette instance de recevoir des demandes entrantes.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>This method must be called before you call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode doit être appelée avant d’appeler le <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>After you have started an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method to stop it.</source>
          <target state="translated">Après avoir démarré une <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> de l’objet, vous pouvez utiliser la <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> méthode pour l’arrêter.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>If this listener instance uses https, you must install and select a Server Certificate.</source>
          <target state="translated">Si cette instance de l’écouteur utilise le protocole https, vous devez installer et sélectionner un certificat de serveur.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> query of this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> will fail with an unexpected close of the connection.</source>
          <target state="translated">Sinon, une <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> requête de ce <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> échoue avec une fermeture inattendue de la connexion.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>You can configure Server Certificates and other listener options by using HttpCfg.exe.</source>
          <target state="translated">Vous pouvez configurer des certificats de serveur et d’autres options d’écouteur à l’aide de HttpCfg.exe.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>See <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp</ph><ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)</ept> for more details.</source>
          <target state="translated">Consultez <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp</ph> <ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)</ept> pour plus d’informations.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method to begin processing incoming requests.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> méthode commence à traiter les demandes entrantes.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>A Win32 function call failed.</source>
          <target state="translated">Un appel de fonction Win32 a échoué.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">Vérifiez la propriété <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> de l’exception pour déterminer la cause de l’exception.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>This object is closed.</source>
          <target state="translated">Cet objet est fermé.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Stop">
          <source>Causes this instance to stop receiving incoming requests.</source>
          <target state="translated">Entraîne l'arrêt de la réception des demandes entrantes par cette instance.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>If this instance is already stopped, calling this method has no effect.</source>
          <target state="translated">Si cette instance est déjà arrêtée, appel de cette méthode n’a aucun effet.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>After you have stopped an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method to restart it.</source>
          <target state="translated">Une fois que vous avez arrêté un <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> de l’objet, vous pouvez utiliser la <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> méthode pour le redémarrer.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method to stop processing incoming requests.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> méthode pour arrêter le traitement des demandes entrantes.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Stop">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.System#IDisposable#Dispose">
          <source>Releases the resources held by this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">Libère les ressources détenues par cet objet <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.System#IDisposable#Dispose">
          <source>Applications should use the <ph id="ph1">&lt;xref:System.Net.HttpListener.Close%2A&gt;</ph> method instead of calling this method.</source>
          <target state="translated">Les applications doivent utiliser le <ph id="ph1">&lt;xref:System.Net.HttpListener.Close%2A&gt;</ph> méthode au lieu d’appeler cette méthode.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager for this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> instance.</source>
          <target state="translated">Gestionnaire de délai d'attente pour cette instance <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerTimeoutManager" /&gt;</ph>.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerTimeoutManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager for this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> instance.</source>
          <target state="translated">Gestionnaire de délai d'attente pour cette instance <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager defines the connection timeout limits for this <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance.</source>
          <target state="translated">Le Gestionnaire de délai d’attente définit les limites de délai d’attente de connexion pour cette <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</source>
          <target state="translated">Obtient ou définit une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui contrôle si, quand NTLM est utilisé, les demandes supplémentaires utilisant la même connexion TCP (Transmission Control Protocol) doivent être authentifiées.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> of the first request will be used for subsequent requests on the same connection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le <ph id="ph2">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> de la première demande doit être utilisé pour les demandes suivantes sur la même connexion ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>When this property is set to <ph id="ph1">`true`</ph> and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph>) of the initial request.</source>
          <target state="translated">Lorsque cette propriété a la valeur <ph id="ph1">`true`</ph> et la première demande sur une connexion TCP particulière est authentifiée à l’aide de NTLM, les demandes suivantes sur la même connexion TCP sont traitées à l’aide des informations d’authentification (<ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph>) de l’initiale demande.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>This property has no effect when NTLM is not the authentication protocol.</source>
          <target state="translated">Cette propriété n'a aucun effet si NTLM n'est pas le protocole d'authentification utilisé.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</source>
          <target state="translated">Lors de la négociation est spécifiée comme protocole d’authentification, cette propriété n’a d’effet que si NTLM est le protocole utilisé pour l’authentification.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>While setting this property to <ph id="ph1">`true`</ph> increases performance because the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</source>
          <target state="translated">Lors de la définition de cette propriété <ph id="ph1">`true`</ph> augmente les performances car le <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> pas envoyer d’authentification NTLM supplémentaire, il existe un risque de sécurité dans toutes les demandes pour fournir des informations d’authentification ne nécessitant ne pas.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>You must determine whether the increase in performance is worth this risk.</source>
          <target state="translated">Vous devez déterminer si l'augmentation des performances vaut la peine de prendre ce risque.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>The following code example demonstrates setting this property.</source>
          <target state="translated">L’exemple de code suivant montre comment définir cette propriété.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>