<Type Name="BasicHttpBinding" FullName="System.ServiceModel.BasicHttpBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e2d9516434e0ee3ca3c8c77ee65d2b208e31cea2" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48658363" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BasicHttpBinding : System.ServiceModel.HttpBindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BasicHttpBinding extends System.ServiceModel.HttpBindingBase implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.BasicHttpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class BasicHttpBinding&#xA;Inherits HttpBindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasicHttpBinding : System::ServiceModel::HttpBindingBase" />
  <TypeSignature Language="F#" Value="type BasicHttpBinding = class&#xA;    inherit HttpBindingBase&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Http</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.HttpBindingBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-3.0">System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="773e4-101">Représente une liaison qu’un service Windows Communication Foundation (WCF) peut utiliser pour configurer et exposer des points de terminaison capables de communiquer avec des clients et services web basés sur ASMX, ainsi qu’avec d’autres services conformes au profil WS-I Basic Profile 1.1.</span>
      <span class="sxs-lookup">
        <span data-stu-id="773e4-101">Represents a binding that a Windows Communication Foundation (WCF) service can use to configure and expose endpoints that are able to communicate with ASMX-based Web services and clients and other services that conform to the WS-I Basic Profile 1.1.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="773e4-102">Le <xref:System.ServiceModel.BasicHttpBinding> utilise HTTP en guise de transport pour envoyer des messages SOAP 1.1.</span><span class="sxs-lookup"><span data-stu-id="773e4-102">The <xref:System.ServiceModel.BasicHttpBinding> uses HTTP as the transport for sending SOAP 1.1 messages.</span></span> <span data-ttu-id="773e4-103">Un service peut utiliser cette liaison pour exposer des points de terminaison qui se conforment à WS-I BP 1.1, tels que ceux auxquels les clients ASMX accèdent.</span><span class="sxs-lookup"><span data-stu-id="773e4-103">A service can use this binding to expose endpoints that conform to WS-I BP 1.1, such as those that ASMX clients access.</span></span> <span data-ttu-id="773e4-104">De même, un client peut utiliser le <xref:System.ServiceModel.BasicHttpBinding> pour communiquer avec les services qui exposent des points de terminaison qui se conforment à WS-I BP 1.1, tels que les services Web ASMX ou des services Windows Communication Foundation (WCF) configurés avec le <xref:System.ServiceModel.BasicHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="773e4-104">Similarly, a client can use the <xref:System.ServiceModel.BasicHttpBinding> to communicate with services exposing endpoints that conform to WS-I BP 1.1, such as ASMX Web services or Windows Communication Foundation (WCF) services configured with the <xref:System.ServiceModel.BasicHttpBinding>.</span></span>  
  
 <span data-ttu-id="773e4-105">La sécurité est désactivée par défaut, mais peut être ajoutée en affectant à <xref:System.ServiceModel.BasicHttpSecurityMode> une valeur autre que <xref:System.ServiceModel.BasicHttpSecurityMode.None> dans le constructeur <xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29>.</span><span class="sxs-lookup"><span data-stu-id="773e4-105">Security is turned off by default, but can be added setting the <xref:System.ServiceModel.BasicHttpSecurityMode> to a value other than <xref:System.ServiceModel.BasicHttpSecurityMode.None> in the <xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29> constructor.</span></span> <span data-ttu-id="773e4-106">Par défaut, il utilise un encodage de message "Texte" et un encodage texte UTF-8.</span><span class="sxs-lookup"><span data-stu-id="773e4-106">It uses a "Text" message encoding and UTF-8 text encoding by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="773e4-107">L'exemple suivant montre comment configurer le <xref:System.ServiceModel.BasicHttpBinding> dans un fichier de configuration de l'application.</span><span class="sxs-lookup"><span data-stu-id="773e4-107">The following example shows how to configure the <xref:System.ServiceModel.BasicHttpBinding> in an application configuration file.</span></span>  
  
  
  
 <span data-ttu-id="773e4-108">L'exemple suivant montre comment configurer par programme <xref:System.ServiceModel.BasicHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="773e4-108">The following example shows how to programmatically configure <xref:System.ServiceModel.BasicHttpBinding>.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/service.cs#1)]
 [!code-vb[S_UEBasicHttpBinding#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-109">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-109">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicHttpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BasicHttpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="773e4-110">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-110">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="773e4-111">La valeur par défaut utilisée pour <xref:System.ServiceModel.BasicHttpSecurityMode> est <xref:System.ServiceModel.BasicHttpSecurityMode.None>. Cette valeur indique que le message SOAP n'est pas sécurisé et que le client n'est pas authentifié.</span><span class="sxs-lookup"><span data-stu-id="773e4-111">The default value of <xref:System.ServiceModel.BasicHttpSecurityMode> used is <xref:System.ServiceModel.BasicHttpSecurityMode.None>, which specifies that the SOAP message is not secured and the client is not authenticated.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEBasicHttpBinding#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/service.cs#2)]
 [!code-vb[S_UEBasicHttpBinding#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/service.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicHttpBinding (System.ServiceModel.BasicHttpSecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.BasicHttpSecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityMode As BasicHttpSecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BasicHttpBinding(System::ServiceModel::BasicHttpSecurityMode securityMode);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.BasicHttpBinding : System.ServiceModel.BasicHttpSecurityMode -&gt; System.ServiceModel.BasicHttpBinding" Usage="new System.ServiceModel.BasicHttpBinding securityMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.BasicHttpSecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode">
          <span data-ttu-id="773e4-112">Valeur de <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> qui spécifie le type de sécurité utilisé avec le message SOAP et pour le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-112">The value of <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="773e4-113">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.BasicHttpBinding" /> avec un type spécifié de sécurité utilisé par la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-113">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class with a specified type of security used by the binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="773e4-114">La valeur par défaut utilisée pour <xref:System.ServiceModel.BasicHttpSecurityMode> est <xref:System.ServiceModel.BasicHttpSecurityMode.None>. Cette valeur indique que le message SOAP n'est pas sécurisé et que le client n'est pas authentifié.</span><span class="sxs-lookup"><span data-stu-id="773e4-114">The default value of <xref:System.ServiceModel.BasicHttpSecurityMode> used is <xref:System.ServiceModel.BasicHttpSecurityMode.None>, which specifies that the SOAP message is not secured and the client is not authenticated.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEBasicHttpBinding#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/snippets.cs#3)]
 [!code-vb[S_UEBasicHttpBinding#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicHttpBinding (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BasicHttpBinding(System::String ^ configurationName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.BasicHttpBinding : string -&gt; System.ServiceModel.BasicHttpBinding" Usage="new System.ServiceModel.BasicHttpBinding configurationName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName">
          <span data-ttu-id="773e4-115">Nom de configuration de liaison pour <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-115">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="773e4-116">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.BasicHttpBinding" /> avec une liaison spécifiée par son nom de configuration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-116">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class with a binding specified by its configuration name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="773e4-117">Cet exemple initialise une nouvelle classe <xref:System.ServiceModel.BasicHttpBinding> avec une liaison spécifiée par son nom de configuration "`BasicBinding`".</span><span class="sxs-lookup"><span data-stu-id="773e4-117">This example initializes a new <xref:System.ServiceModel.BasicHttpBinding> class with a binding specified by the configuration name `BasicBinding`.</span></span> <span data-ttu-id="773e4-118">Vous devez créer une section de liaisons dans le fichier de configuration du service.</span><span class="sxs-lookup"><span data-stu-id="773e4-118">You must create a bindings section in the service's configuration file.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/snippets.cs#5)]
 [!code-vb[S_UEBasicHttpBinding#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/snippets.vb#5)]  
  
 <span data-ttu-id="773e4-119">Vous devez ensuite spécifier le nom de la configuration de liaison dans l'appel au constructeur <xref:System.ServiceModel.BasicHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="773e4-119">Then the name of the binding configuration is specified in the call to the <xref:System.ServiceModel.BasicHttpBinding> constructor.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/snippets.cs#4)]
 [!code-vb[S_UEBasicHttpBinding#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="773e4-120">La liaison contenant le nom de configuration <paramref name="configurationName" /> est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-120">The binding with the configuration name <paramref name="configurationName" /> was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowCookies">
      <MemberSignature Language="C#" Value="public bool AllowCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCookies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.AllowCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCookies { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCookies : bool with get, set" Usage="System.ServiceModel.BasicHttpBinding.AllowCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-121">Obtient ou définit une valeur qui indique si le client accepte les cookies et les propage sur les requêtes ultérieures.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-121">Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-122">
            <see langword="true" /> si les cookies sont autorisés ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-122">
              <see langword="true" /> if cookies are allowed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="773e4-123">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-123">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="773e4-124">Cette propriété a pour but de faciliter l'interaction avec les services Web ASMX qui utilisent des cookies.</span><span class="sxs-lookup"><span data-stu-id="773e4-124">This property is provided as a convenience for interacting with ASMX Web services that use cookies.</span></span> <span data-ttu-id="773e4-125">Lorsque les cookies sont acceptés par le client en affectant la valeur `true` à la propriété, les cookies retournés à partir du serveur sont automatiquement copiés dans toutes les requêtes ultérieures du client pour ce service.</span><span class="sxs-lookup"><span data-stu-id="773e4-125">When cookies are accepted by the client by setting the property to `true`, cookies returned from the server are automatically copied to all future client requests to that service.</span></span>

## Examples

<span data-ttu-id="773e4-126">L’exemple suivant définit cette propriété pour indiquer que tous les cookies à partir du serveur doivent être copiées pour les requêtes ultérieures du client :</span><span class="sxs-lookup"><span data-stu-id="773e4-126">The following example sets this property to indicate that all cookies from the server should be copied to future client requests:</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.AllowCookies = true;
```

<span data-ttu-id="773e4-127">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="773e4-127">The value of this property can also be set in the configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (parameters As BindingParameterCollection) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="basicHttpBinding.BuildChannelFactory parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="773e4-128">Type de canaux généré par la fabrication de canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-128">The type of channel the channel factory produces.</span>
          </span>
        </typeparam>
        <param name="parameters">
          <span data-ttu-id="773e4-129">Spécifie les spécifications de la fabrique de canal générée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-129">Specifies the requirements for the channel factory built.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="773e4-130">Génère la pile de fabriques de canaux sur le client qui crée un type de canal donné et est conforme aux fonctionnalités spécifiées par une collection de paramètres de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-130">Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="773e4-131">
            <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> étant conforme aux fonctionnalités spécifiées par la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-131">An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BypassProxyOnLocal : bool with get, set" Usage="System.ServiceModel.BasicHttpBinding.BypassProxyOnLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-132">Obtient ou définit une valeur qui indique si le serveur proxy doit être contourné pour les adresses locales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-132">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-133">
            <see langword="true" /> pour contourner le serveur proxy pour les adresses locales ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-133">
              <see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="773e4-134">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-134">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="773e4-135">Une ressource Internet est locale si elle dispose d'une adresse locale.</span><span class="sxs-lookup"><span data-stu-id="773e4-135">An Internet resource is local if it has a local address.</span></span> <span data-ttu-id="773e4-136">Une adresse locale est celui qui se trouve sur le même ordinateur, le réseau local ou l’intranet et est identifiée, syntaxiquement, par l’absence d’une période (\.) comme dans les URI `http://webserver/` et `http://localhost/`.</span><span class="sxs-lookup"><span data-stu-id="773e4-136">A local address is one that is on same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (\.) as in the URIs `http://webserver/` and `http://localhost/`.</span></span>

<span data-ttu-id="773e4-137">Définition de la BypassProxyOnLocal propriété détermine si les points de terminaison configurés avec le <xref:System.ServiceModel.BasicHttpBinding> utilisent le serveur proxy lors de l’accès aux ressources locales.</span><span class="sxs-lookup"><span data-stu-id="773e4-137">Setting the BypassProxyOnLocal property determines whether endpoints configured with the <xref:System.ServiceModel.BasicHttpBinding> use the proxy server when accessing local resources.</span></span>

<span data-ttu-id="773e4-138">Si BypassProxyOnLocal est `true`, les demandes aux ressources Internet locales n’utilisent pas le serveur proxy.</span><span class="sxs-lookup"><span data-stu-id="773e4-138">If BypassProxyOnLocal is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="773e4-139">Utilisez le nom d'hôte (plutôt que `localhost`) si vous voulez que les clients traversent un proxy lorsqu'ils s'adressent à des services sur le même ordinateur lorsque que cette propriété a la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="773e4-139">Use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine when this property is set to `true`.</span></span>

<span data-ttu-id="773e4-140">Lorsque BypassProxyOnLocal est `false`, toutes les requêtes Internet non localhost URI sont effectuées via le serveur proxy.</span><span class="sxs-lookup"><span data-stu-id="773e4-140">When BypassProxyOnLocal is `false`, all Internet requests to non-localhost URIs are made through the proxy server.</span></span> <span data-ttu-id="773e4-141">Requêtes aux URI localhost n’utilisera pas le serveur proxy indépendamment du paramètre BypassProxyOnLocal.</span><span class="sxs-lookup"><span data-stu-id="773e4-141">Requests to URIs with localhost will not use the proxy server regardless of the BypassProxyOnLocal setting.</span></span>
  
## Examples

<span data-ttu-id="773e4-142">L'exemple suivant définit cette propriété de manière à ce que le proxy soit contourné pour les ressources locales.</span><span class="sxs-lookup"><span data-stu-id="773e4-142">The following example sets this property to indicate that the proxy should be bypassed for local resources.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.BypassProxyOnLocal = true;
```

<span data-ttu-id="773e4-143">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="773e4-143">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1" 
                 bypassProxyOnLocal="true">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>
  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="basicHttpBinding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="773e4-144">Crée et renvoie une collection ordonnée d'éléments de liaison contenus dans la liaison actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-144">Creates and returns an ordered collection of binding elements contained in the current binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="773e4-145">
            <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> contenant la pile ordonnée d'éléments de liaison décrite par la liaison <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-145">The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements described by the <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="773e4-146">L’ordre des éléments de liaison est important.</span><span class="sxs-lookup"><span data-stu-id="773e4-146">The order of the binding elements is important.</span></span> <span data-ttu-id="773e4-147">Il reflète l'ordre dans lequel les canaux de protocole et de transport sont construits et empilés.</span><span class="sxs-lookup"><span data-stu-id="773e4-147">It reflects the order in which the protocol and transport channels are constructed and stacked.</span></span> <span data-ttu-id="773e4-148">Cette collection d'éléments de liaison est une nouvelle collection qui peut être modifiée puis utilisée pour créer un <xref:System.ServiceModel.Channels.CustomBinding>.</span><span class="sxs-lookup"><span data-stu-id="773e4-148">This collection of binding elements is a new collection and can be modified and then used to create a <xref:System.ServiceModel.Channels.CustomBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="773e4-149">L’exemple suivant crée une collection ordonnée des éléments de liaison dans la liaison actuelle.</span><span class="sxs-lookup"><span data-stu-id="773e4-149">The following example creates an ordered collection of the binding elements in the current binding.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#26](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/client.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableHttpCookieContainer">
      <MemberSignature Language="C#" Value="public bool EnableHttpCookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHttpCookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHttpCookieContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHttpCookieContainer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHttpCookieContainer : bool with get, set" Usage="System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. To enable Http CookieContainer, use the AllowCookies property instead.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-150">Obtient ou définit une valeur indiquant si le conteneur de cookies HTTP est activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-150">Gets or sets a value that indicates whether HTTP cookie container is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-151">
            <see langword="true" /> si le conteneur de cookies est activé ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-151">
              <see langword="true" /> if HTTP cookie container is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvelopeVersion : System.ServiceModel.EnvelopeVersion" Usage="System.ServiceModel.BasicHttpBinding.EnvelopeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-152">Obtient la version de SOAP utilisée pour les messages traités par cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-152">Gets the version of SOAP that is used for messages that are processed by this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-153">La valeur de la <see cref="T:System.ServiceModel.EnvelopeVersion" /> utilisée avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-153">The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding.</span>
          </span>
          <span data-ttu-id="773e4-154">La valeur par défaut est toujours SOAP 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-154">The value is always SOAP 1.1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  

<span data-ttu-id="773e4-155">SOAP 1.1 est la seule valeur qui peut être utilisée avec cette liaison.</span><span class="sxs-lookup"><span data-stu-id="773e4-155">SOAP 1.1 is the only value that can be used with this binding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberSignature Language="F#" Value="member this.HostNameComparisonMode : System.ServiceModel.HostNameComparisonMode with get, set" Usage="System.ServiceModel.BasicHttpBinding.HostNameComparisonMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-156">Obtient ou définit une valeur qui indique si le nom d'hôte est utilisé pour atteindre le service lors de la correspondance avec l'URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-156">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-157">Valeur <see cref="T:System.ServiceModel.HostNameComparisonMode" /> qui indique si le nom d'hôte est utilisé pour atteindre le service lors de la correspondance avec l'URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-157">The <see cref="T:System.ServiceModel.HostNameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI.</span>
          </span>
          <span data-ttu-id="773e4-158">La valeur par défaut est <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, qui ignore le nom d'hôte dans la correspondance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-158">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="773e4-159">L'exemple suivant définit cette propriété de manière à indiquer qu'une correspondance exacte est requise.</span><span class="sxs-lookup"><span data-stu-id="773e4-159">The following example sets this property to indicate that an exact match is required.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.HostNameComparisonMode = HostNameComparisonMode.Exact;
```

<span data-ttu-id="773e4-160">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="773e4-160">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1"
                 hostNameComparisonMode ="Exact">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferPoolSize : int64 with get, set" Usage="System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-161">Obtient ou définit la quantité maximale de mémoire (en octets) allouée au gestionnaire des tampons de messages qui reçoivent des messages du canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-161">Gets or sets the maximum amount of memory, in bytes,  that is allocated for use by the manager of the message buffers that receive messages from the channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-162">Quantité de mémoire maximale, en octets, disponible pour le gestionnaire de mémoires tampons de messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-162">The maximum amount of memory, in bytes, available for use by the message buffer manager.</span>
          </span>
          <span data-ttu-id="773e4-163">La valeur par défaut est de 524 288 (0x80000) octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-163">The default value is 524288 (0x80000) bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="773e4-164">Le <xref:System.ServiceModel.Channels.BufferManager> réduit le coût lié à l'utilisation de mémoires tampons à l'aide d'un pool de mémoires tampons.</span><span class="sxs-lookup"><span data-stu-id="773e4-164">The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers by using a buffer pool.</span></span> <span data-ttu-id="773e4-165">Les mémoires tampons sont requises par le service pour traiter des messages lorsqu'ils sortent du canal.</span><span class="sxs-lookup"><span data-stu-id="773e4-165">Buffers are required to process messages by the service when they come out of the channel.</span></span> <span data-ttu-id="773e4-166">Si la mémoire du pool de mémoires tampons est insuffisante pour traiter la charge de messages, <xref:System.ServiceModel.Channels.BufferManager> doit allouer de la mémoire additionnelle provenant du tas CLR, ce qui augmente le traitement de l'opération garbage collection.</span><span class="sxs-lookup"><span data-stu-id="773e4-166">If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="773e4-167">Une allocation importante à partir du tas de garbage CLR indique que la taille de pool de mémoire tampon est trop petite et que les performances peuvent être améliorées avec une allocation de plus grande en augmentant la limite de MaxBufferPoolSize.</span><span class="sxs-lookup"><span data-stu-id="773e4-167">Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the MaxBufferPoolSize limit.</span></span>

## Examples

<span data-ttu-id="773e4-168">L'exemple de code suivant affecte le double de la valeur par défaut à cette propriété.</span><span class="sxs-lookup"><span data-stu-id="773e4-168">The following example sets this property to twice the default value.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
// Use double the default value
binding.MaxBufferPoolSize = 0x80000 * 2;
```

<span data-ttu-id="773e4-169">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="773e4-169">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1">

          <!-- set pool size to double default of 0x80000 -->
          maxBufferPoolSize = 0x100000

          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferSize : int with get, set" Usage="System.ServiceModel.BasicHttpBinding.MaxBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-170">Obtient ou définit la taille maximale (en octets) d'une mémoire tampon qui reçoit les messages du canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-170">Gets or sets the maximum size, in bytes, for a buffer that receives messages from the channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-171">Taille maximale, en octets, d'une mémoire tampon qui stocke des messages pendant leur traitement pour un point de terminaison configuré avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-171">The maximum size, in bytes, of a buffer that stores messages while they are processed for an endpoint configured with this binding.</span>
          </span>
          <span data-ttu-id="773e4-172">La valeur par défaut est de 65 536 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-172">The default value is 65,536 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="773e4-173">S'il n'y a pas suffisamment de mémoire dans le pool de mémoires tampons pour stocker le message pendant son traitement, davantage de mémoire doit être allouée à partir du tas CLR, ce qui augmente le traitement de l'opération garbage collection.</span><span class="sxs-lookup"><span data-stu-id="773e4-173">If there is not sufficient memory in the buffer to store the message while it is processed, more memory must be allocated from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="773e4-174">Une allocation importante de mémoire issue du tas de garbage CLR indique que la taille de mémoire tampon du message est trop petite et qu'il est possible d'améliorer les performances en augmentant la limite.</span><span class="sxs-lookup"><span data-stu-id="773e4-174">Extensive allocation from the CLR garbage heap is an indication that the message buffer size is too small and that performance can be improved with a larger allocation.</span></span>

<span data-ttu-id="773e4-175">La valeur de la propriété MaxBufferSize et son importance est différente selon que les messages sont mis en mémoire tampon ou transmis en continu sur le canal via lequel ils sont reçus :</span><span class="sxs-lookup"><span data-stu-id="773e4-175">The value of the MaxBufferSize property and its significance is different depending on whether the messages are being buffered or streamed on the channel through which they are being received:</span></span>

<span data-ttu-id="773e4-176">Pour les transports mis en mémoire tampon (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> est défini sur <xref:System.ServiceModel.TransferMode.Buffered>).</span><span class="sxs-lookup"><span data-stu-id="773e4-176">For buffered transports, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> set to <xref:System.ServiceModel.TransferMode.Buffered>).</span></span> <span data-ttu-id="773e4-177">Cette valeur est toujours égale à celle spécifiée par le <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize>.</span><span class="sxs-lookup"><span data-stu-id="773e4-177">This value is always equal to that specified by the <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize>.</span></span>

<span data-ttu-id="773e4-178">Pour les transports transmis en continu (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> défini sur <xref:System.ServiceModel.TransferMode.Streamed>), seuls les en-têtes SOAP doivent être mis en mémoire tampon pour générer le message.</span><span class="sxs-lookup"><span data-stu-id="773e4-178">For streamed transports, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> set to <xref:System.ServiceModel.TransferMode.Streamed>), only the SOAP headers must be buffered to generate the message.</span></span> <span data-ttu-id="773e4-179">Le corps peut être transmis en continu sur demande.</span><span class="sxs-lookup"><span data-stu-id="773e4-179">The body can be streamed in on-demand.</span></span> <span data-ttu-id="773e4-180">Dans ce cas, MaxBufferSize est inférieure ou égale à <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize>, où <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize> limitant la taille du message total (en-tête et corps) et MaxBufferSize limitant uniquement la taille des en-têtes SOAP.</span><span class="sxs-lookup"><span data-stu-id="773e4-180">In this case, MaxBufferSize is less than or equal to <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize>, where <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize> bounds the size of the overall message (headers and body) and MaxBufferSize bounds only the size of the SOAP headers.</span></span>

<span data-ttu-id="773e4-181">Les limitations de la taille de la mémoire tampon définies ici ont pour but d'optimiser les performances des échanges de messages.</span><span class="sxs-lookup"><span data-stu-id="773e4-181">The limitations on buffer size set here are for optimizing the performance of message exchanges.</span></span> <span data-ttu-id="773e4-182">Si un message dépasse la valeur maximale définie pour la mémoire tampon, il n’est pas déposé.</span><span class="sxs-lookup"><span data-stu-id="773e4-182">If a message exceeds the maximum value set for the buffer, it is not dropped.</span></span> <span data-ttu-id="773e4-183">À la place, le gestionnaire demande davantage de mémoire au tas CLR. Le traitement de l’opération garbage collection est par conséquent plus important que dans le cas de l’utilisation de mémoires tampons.</span><span class="sxs-lookup"><span data-stu-id="773e4-183">Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.</span></span>

> [!NOTE]
> <span data-ttu-id="773e4-184">MaxBufferSize et MaxReceivedMessageSize, les valeurs des paramètres de comportement locaux.</span><span class="sxs-lookup"><span data-stu-id="773e4-184">The settings for MaxBufferSize and MaxReceivedMessageSize, are local behavioral settings.</span></span> <span data-ttu-id="773e4-185">Cela signifie qu'ils ne sont pas transmis à d'autres points de terminaison dans les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="773e4-185">This means that they are not transmitted to other endpoints in metadata.</span></span> <span data-ttu-id="773e4-186">Si vous générez un proxy pour un service qui limite dans les métadonnées les messages à une taille maximale de 2 Go, le proxy reprend la valeur par défaut de 64 Ko.</span><span class="sxs-lookup"><span data-stu-id="773e4-186">If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value of 64K.</span></span> <span data-ttu-id="773e4-187">Les administrateurs locaux peuvent ainsi contrôler les limites de taille des messages et des tampons de messages.</span><span class="sxs-lookup"><span data-stu-id="773e4-187">This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.</span></span>
  
## Examples


<span data-ttu-id="773e4-188">L’exemple suivant définit **MaxBufferSize** à 1 000 000 octets.</span><span class="sxs-lookup"><span data-stu-id="773e4-188">The following example sets **MaxBufferSize** to 1,000,000 bytes.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
            
// set to one million
binding.MaxBufferSize = 1000000;
```

<span data-ttu-id="773e4-189">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="773e4-189">The value of this property can also be set in the configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-190">Obtient ou définit la taille maximale (en octets) d'un message qui peut être reçu sur un canal configuré avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-190">Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-191">Taille maximale, en octets, d'un message traité par la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-191">The maximum size, in bytes, for a message that is processed by the binding.</span>
          </span>
          <span data-ttu-id="773e4-192">La valeur par défaut est de 65 536 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-192">The default value is 65,536 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="773e4-193">La taille des messages qui peuvent être reçus sur le câble par les services à l’aide de BasicHttpBinding est limitée par la quantité de mémoire allouée pour chaque message.</span><span class="sxs-lookup"><span data-stu-id="773e4-193">The size of the messages that can be received on the wire by services using the BasicHttpBinding is bounded by the amount of memory allocated for each message.</span></span> <span data-ttu-id="773e4-194">Cette limite de taille des messages a pour but d'atténuer l'exposition aux attaques de type DoS.</span><span class="sxs-lookup"><span data-stu-id="773e4-194">This bound on message size is intended to limit exposure to DoS-style attacks.</span></span>

<span data-ttu-id="773e4-195">Il existe également une propriété <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> dans le <xref:System.ServiceModel.BasicHttpBinding> :</span><span class="sxs-lookup"><span data-stu-id="773e4-195">There is also a <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> property on the <xref:System.ServiceModel.BasicHttpBinding>:</span></span>

<span data-ttu-id="773e4-196">Pour les transports mis en mémoire tampon (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> est défini sur <xref:System.ServiceModel.TransferMode.Buffered>).</span><span class="sxs-lookup"><span data-stu-id="773e4-196">For buffered transports, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> set to <xref:System.ServiceModel.TransferMode.Buffered>).</span></span> <span data-ttu-id="773e4-197">Cette valeur est toujours égale à celle spécifiée par le MaxReceivedMessageSize.</span><span class="sxs-lookup"><span data-stu-id="773e4-197">This value is always equal to that specified by the MaxReceivedMessageSize.</span></span>

<span data-ttu-id="773e4-198">Pour les transports transmis en continu (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> défini sur <xref:System.ServiceModel.TransferMode.Streamed>), seuls les en-têtes SOAP doivent être mis en mémoire tampon pour générer le message.</span><span class="sxs-lookup"><span data-stu-id="773e4-198">For streamed transports (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> set to <xref:System.ServiceModel.TransferMode.Streamed>), only the SOAP headers must be buffered to generate the message.</span></span> <span data-ttu-id="773e4-199">Le corps peut être transmis en continu sur demande.</span><span class="sxs-lookup"><span data-stu-id="773e4-199">The body can be streamed in on-demand.</span></span> <span data-ttu-id="773e4-200">Dans ce cas, <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> est inférieure ou égale à MaxReceivedMessageSize, où MaxReceivedMessageSize limitant la taille du message total (en-tête et corps) et <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> limitant la taille des en-têtes SOAP.</span><span class="sxs-lookup"><span data-stu-id="773e4-200">In this case, <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> is less than or equal to MaxReceivedMessageSize, where MaxReceivedMessageSize bounds the size of the overall message (headers and body) and <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> bounds the size of the SOAP headers.</span></span>

## Examples

<span data-ttu-id="773e4-201">L’exemple suivant définit MaxReceivedMessageSize sur 1 000 000 octets.</span><span class="sxs-lookup"><span data-stu-id="773e4-201">The following example sets MaxReceivedMessageSize to 1,000,000 bytes.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();

// Use double the default value
binding.MaxReceivedMessageSize = 65536 * 2;
```

<span data-ttu-id="773e4-202">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="773e4-202">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1"
                 maxReceivedMessageSize = "1000000">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="773e4-203">La valeur est inférieure à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-203">The value is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.WSMessageEncoding MessageEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.MessageEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageEncoding As WSMessageEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSMessageEncoding MessageEncoding { System::ServiceModel::WSMessageEncoding get(); void set(System::ServiceModel::WSMessageEncoding value); };" />
      <MemberSignature Language="F#" Value="member this.MessageEncoding : System.ServiceModel.WSMessageEncoding with get, set" Usage="System.ServiceModel.BasicHttpBinding.MessageEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSMessageEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-204">Obtient ou définit si MTOM ou Text est utilisé pour encoder les messages SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-204">Gets or sets whether MTOM or Text is used to encode SOAP messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-205">Valeur de <see cref="T:System.ServiceModel.WSMessageEncoding" /> indiquant si MTOM ou Text/XML est utilisé pour encoder les messages SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-205">The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates whether MTOM or Text/XML is used to encode SOAP messages.</span>
          </span>
          <span data-ttu-id="773e4-206">La valeur par défaut est <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-206">The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="773e4-207">L'exemple suivant affecte à MessageEncoding la valeur Text.</span><span class="sxs-lookup"><span data-stu-id="773e4-207">The following example sets MessageEncoding to Text.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/client.cs#19)]  
  
 <span data-ttu-id="773e4-208">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="773e4-208">The value of this property can also be set in the configuration file.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProxyAddress : Uri with get, set" Usage="System.ServiceModel.BasicHttpBinding.ProxyAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-209">Obtient ou définit l'adresse URI du proxy HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-209">Gets or sets the URI address of the HTTP proxy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-210">
            <see cref="T:System.Uri" /> qui sert d'adresse du proxy HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-210">A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy.</span>
          </span>
          <span data-ttu-id="773e4-211">La valeur par défaut est null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-211">The default value is null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="773e4-212">Si le <xref:System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy> a la valeur `true`, l’adresse par défaut est utilisée et la valeur de l’ensemble de ProxyAddress est ignorée.</span><span class="sxs-lookup"><span data-stu-id="773e4-212">If the <xref:System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy> is set to `true`, the default address is used and the value of the ProxyAddress set is ignored.</span></span>

## Examples

<span data-ttu-id="773e4-213">L’exemple suivant définit ProxyAddress aux paramètres d’application.</span><span class="sxs-lookup"><span data-stu-id="773e4-213">The following example sets ProxyAddress to application settings.</span></span>

```csharp
// Get base address from app settings in configuration
Uri baseAddress = new Uri(ConfigurationManager.AppSettings["baseAddress"]);

BasicHttpBinding binding = new BasicHttpBinding();

binding.ProxyAddress = baseAddress;
```

<span data-ttu-id="773e4-214">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="773e4-214">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1"
                 proxyAddress = "http://myProxy">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.ServiceModel.BasicHttpBinding.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-215">Obtient ou définit des contraintes sur la complexité des messages SOAP pouvant être traités par les points de terminaison configurés avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-215">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-216">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> spécifiant les contraintes de complexité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-216">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="773e4-217">Les contraintes de complexité fournissent la protection contre les attaques par déni de service (DOS) qui essaient d'utiliser la complexité de message pour attacher des ressources allouées au traitement de point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="773e4-217">The complexity constraints provide protection from denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span> <span data-ttu-id="773e4-218">Les autres contraintes de complexité peuvent inclure une profondeur maximale d'éléments et une longueur maximale pour le contenu de la chaîne du message.</span><span class="sxs-lookup"><span data-stu-id="773e4-218">Other complexity constraints include items such as a maximum element depth and a maximum length for string content within the message.</span></span>

## Examples

<span data-ttu-id="773e4-219">L’exemple suivant définit les ReaderQuotas aux paramètres d’application.</span><span class="sxs-lookup"><span data-stu-id="773e4-219">The following example sets ReaderQuotas to application settings.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
XmlDictionaryReaderQuotas readerQuotas = new XmlDictionaryReaderQuotas();
readerQuotas.MaxArrayLength = 25 * 1024;
        
binding.ReaderQuotas = readerQuotas;
```

<span data-ttu-id="773e4-220">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="773e4-220">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1">
          <readerQuotas maxBytesPerRead ="1000" 
                        maxDepth="100"/>

          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.BasicHttpBinding.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-221">Obtient le schéma de transport URI pour les canaux et les écouteurs configurés avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-221">Gets the URI transport scheme for the channels and listeners that are configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-222">"https" si le mode de sécurité de l'élément de liaison de transport a la valeur <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> ou <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential" /> ; "http" dans les autres cas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-222">"https" if the security mode in the transport binding element is set to <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> or <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential" />; "http" otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="773e4-223">L'exemple suivant permet d'obtenir la méthode actuelle.</span><span class="sxs-lookup"><span data-stu-id="773e4-223">The following example gets the current Scheme.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
string thisScheme = binding.Scheme;
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.BasicHttpSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.BasicHttpSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As BasicHttpSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::BasicHttpSecurity ^ Security { System::ServiceModel::BasicHttpSecurity ^ get(); void set(System::ServiceModel::BasicHttpSecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.BasicHttpSecurity with get, set" Usage="System.ServiceModel.BasicHttpBinding.Security" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.BasicHttpSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-224">Obtient le type de sécurité utilisé avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-224">Gets the type of security used with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-225">
            <see cref="T:System.ServiceModel.BasicHttpSecurity" /> utilisée avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-225">The <see cref="T:System.ServiceModel.BasicHttpSecurity" /> that is used with this binding.</span>
          </span>
          <span data-ttu-id="773e4-226">La valeur par défaut est <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-226">The default value is <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="773e4-227">Par défaut, le message SOAP n'est pas sécurisé et le client n'est pas authentifié.</span><span class="sxs-lookup"><span data-stu-id="773e4-227">By default, the SOAP message is not secured and the client is not authenticated.</span></span> <span data-ttu-id="773e4-228">Pour utiliser un type de sécurité autre que celui par défaut, utilisez le constructeur <xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29>.</span><span class="sxs-lookup"><span data-stu-id="773e4-228">To use a non-default type of security, use the <xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="773e4-229">L'exemple suivant récupère la propriété `Security`.</span><span class="sxs-lookup"><span data-stu-id="773e4-229">The following example gets the `Security` property.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/client.cs#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeEnableHttpCookieContainer">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeEnableHttpCookieContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeEnableHttpCookieContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeEnableHttpCookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeEnableHttpCookieContainer () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeEnableHttpCookieContainer();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeEnableHttpCookieContainer : unit -&gt; bool" Usage="basicHttpBinding.ShouldSerializeEnableHttpCookieContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="773e4-230">Indique si le conteneur de cookies HTTP doit permettre la sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-230">Indicates whether the http cookie container should enable the serialization.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="773e4-231">
            <see langword="true" /> si le conteneur de cookies HTTP doit permettre la sérialisation ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-231">
              <see langword="true" /> if the http cookie container should enable the serialization; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="basicHttpBinding.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="773e4-232">Retourne une valeur indiquant si les valeurs de contrainte placées sur la complexité de la structure des messages SOAP doivent être sérialisées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-232">Returns whether the constraint values placed on the complexity of SOAP message structure should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="773e4-233">
            <see langword="true" /> si les quotas de lecteur doivent être sérialisés, sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-233">
              <see langword="true" /> if reader quotas should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSecurity : unit -&gt; bool" Usage="basicHttpBinding.ShouldSerializeSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="773e4-234">Retourne une valeur indiquant si les paramètres de sécurité doivent être sérialisés selon que la sérialisation s'est déjà produit, par exemple au niveau du message ou du transport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-234">Returns whether security settings should be serialized based upon whether serialization already occurs, for example at the message or transport level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="773e4-235">
            <see langword="true" /> si la sécurité doit être sérialisée ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-235">
              <see langword="true" /> if security should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTextEncoding">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTextEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTextEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeTextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTextEncoding () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTextEncoding();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTextEncoding : unit -&gt; bool" Usage="basicHttpBinding.ShouldSerializeTextEncoding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="773e4-236">Retourne une valeur indiquant si les paramètres pour le codage de texte doivent être sérialisés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-236">Returns whether settings for text encoding should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="773e4-237">
            <see langword="true" /> si l'encodage de texte doit être sérialisé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-237">
              <see langword="true" /> if text encoding should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ServiceModel::Channels::IBindingRuntimePreferences::ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-238">Obtient une valeur qui indique si les demandes entrantes sont gérées de façon synchrone ou asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-238">Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-239">Toujours <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-239">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="773e4-240">Cet exemple obtient la valeur ReceiveSynchronously.</span><span class="sxs-lookup"><span data-stu-id="773e4-240">This example gets the ReceiveSynchronously value.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
IBindingRuntimePreferences s = (binding as IBindingRuntimePreferences);
bool receiveSynchronously = s.ReceiveSynchronously;
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding TextEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.TextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TextEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ TextEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextEncoding : System.Text.Encoding with get, set" Usage="System.ServiceModel.BasicHttpBinding.TextEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-241">Obtient ou définit l'encodage de caractères utilisé pour le texte du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-241">Gets or sets the character encoding that is used for the message text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-242">
            <see cref="T:System.Text.Encoding" /> qui indique l'encodage de caractères utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-242">The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used.</span>
          </span>
          <span data-ttu-id="773e4-243">La valeur par défaut est <see cref="T:System.Text.UTF8Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-243">The default is <see cref="T:System.Text.UTF8Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="773e4-244">L’exemple suivant définit TextEncoding <xref:System.Text.Encoding.Unicode?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="773e4-244">The following example sets TextEncoding to <xref:System.Text.Encoding.Unicode?displayProperty=nameWithType>.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.TextEncoding = System.Text.Encoding.Unicode;
```

<span data-ttu-id="773e4-245">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="773e4-245">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1"
          textEncoding = "UnicodeFffeTextEncoding">

          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>
  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransferMode TransferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.TransferMode TransferMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.TransferMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferMode As TransferMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransferMode TransferMode { System::ServiceModel::TransferMode get(); void set(System::ServiceModel::TransferMode value); };" />
      <MemberSignature Language="F#" Value="member this.TransferMode : System.ServiceModel.TransferMode with get, set" Usage="System.ServiceModel.BasicHttpBinding.TransferMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-246">Obtient ou définit une valeur qui indique si les messages sont mis en mémoire tampon ou transmis en continu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-246">Gets or sets a value that indicates whether messages are sent buffered or streamed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-247">
            <see cref="T:System.ServiceModel.TransferMode" /> indiquant si les messages sont mis en mémoire tampon ou transmis en continu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-247">The <see cref="T:System.ServiceModel.TransferMode" /> that indicates whether messages are sent buffered or streamed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="773e4-248">L’exemple suivant définit le mode de transfert <xref:System.ServiceModel.TransferMode.Streamed>.</span><span class="sxs-lookup"><span data-stu-id="773e4-248">The following example sets TransferMode to <xref:System.ServiceModel.TransferMode.Streamed>.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.TransferMode = TransferMode.Streamed;
```

<span data-ttu-id="773e4-249">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="773e4-249">The value of this property can also be set in the configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultWebProxy : bool with get, set" Usage="System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="773e4-250">Obtient ou définit une valeur qui indique si le proxy HTTP du système configuré automatiquement doit être utilisé, s'il est disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-250">Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="773e4-251">
            <see langword="true" /> si le proxy HTTP du système configuré automatiquement doit être utilisé, s'il est disponible ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-251">
              <see langword="true" /> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="773e4-252">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="773e4-252">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="773e4-253">Il s’agit d’une erreur est `true` et <xref:System.ServiceModel.BasicHttpBinding.ProxyAddress> pour être non null.</span><span class="sxs-lookup"><span data-stu-id="773e4-253">It is an error for this to be `true` and <xref:System.ServiceModel.BasicHttpBinding.ProxyAddress> to be non-null.</span></span>

## Examples

<span data-ttu-id="773e4-254">Cet exemple définit la valeur de UseDefaultWebProxy à `false`.</span><span class="sxs-lookup"><span data-stu-id="773e4-254">This example sets the value of UseDefaultWebProxy to `false`.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.UseDefaultWebProxy = false;
```

<span data-ttu-id="773e4-255">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="773e4-255">The value of this property can also be set in the configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>