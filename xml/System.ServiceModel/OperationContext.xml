<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OperationContext.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50b651d31df1389374d57ccfab4c8222f8ac73618.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b651d31df1389374d57ccfab4c8222f8ac73618</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContext">
          <source>Provides access to the execution context of a service method.</source>
          <target state="translated">Fournit l'accès au contexte d'exécution d'une méthode de service.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> from within a service operation to access the current operation execution environment.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> à partir d'une opération de service pour accéder à l'environnement d'exécution de l'opération actuelle.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>In particular, the operation context is used to access callback channels in duplex services, to store extra state data across portions of the operations, and to access incoming message headers and properties as well as add outgoing message headers and properties.</source>
          <target state="translated">En particulier, le contexte d'opération est utilisé pour accéder aux canaux de rappel dans les services duplex, pour stocker les données d'état supplémentaires dans l'ensemble des parties des opérations et pour accéder aux en-têtes et aux propriétés de message entrant ainsi que pour ajouter des en-têtes et des propriétés de message sortant.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>For more information about using extensions to store state data, see <bpt id="p1">[</bpt>Extensible Objects<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’utilisation des extensions pour stocker les données d’état, consultez <bpt id="p1">[</bpt>objets extensibles<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> has the following properties and methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> dispose des propriétés et méthodes suivantes :</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object representing the current execution context.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> retourne l'objet <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> représentant le contexte d'exécution actuel.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> property returns the security environment under which the method executes.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> retourne l'environnement de sécurité sous lequel la méthode s'exécute.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A&gt;</ph> property gets the operation's <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A&gt;</ph> obtient le <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType&gt;</ph>de l'opération.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> property returns an extension collection for the current <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> retourne une collection d'extensions pour le <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>actuel.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Host%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> object that manages the service.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Host%2A&gt;</ph> retourne l'objet <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> qui gère le service.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A&gt;</ph> property returns a value that indicates whether the method has supporting tokens, if so, the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.SupportingTokens%2A&gt;</ph> property gets them.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A&gt;</ph> retourne une valeur qui indique si la méthode a des jetons de prise en charge, et si c'est le cas, la propriété <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.SupportingTokens%2A&gt;</ph> les obtient.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A&gt;</ph> properties get these items from the incoming message.</source>
          <target state="translated">Les propriétés <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A&gt;</ph>et <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A&gt;</ph> obtiennent ces éléments du message entrant.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> event is fired when the operation has completed.</source>
          <target state="translated">L'événement <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> est déclenché à la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A&gt;</ph> properties get these items for the outbound message.</source>
          <target state="translated">Les propriétés <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A&gt;</ph> reçoivent ces éléments pour le message sortant.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> implementation for the method.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> retourne l'implémentation <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> pour la méthode.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> associated with the operation.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> retourne le <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> associé à l'opération.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SessionId%2A&gt;</ph> property returns the session identifier for the current channel and object.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SessionId%2A&gt;</ph> retourne l'identificateur de session pour le canal et l'objet en cours.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method returns a callback channel to the caller in the case of duplex communication.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> retourne un canal de rappel à l'appelant dans le cas d'une communication duplex.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> method commits the current transaction.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> valide la transaction en cours.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to obtain the channel back to the caller from within a method.</source>
          <target state="translated">L'exemple de code suivant utilise la propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> et la méthode <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> pour retourner le canal à l'appelant à partir d'une méthode.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">Toutes les méthodes de cet exemple sont des méthodes unidirectionnelles, permettant au service et au client de communiquer indépendamment dans les deux sens.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">Dans ce cas, l'application cliente d'exemple attend un seul appel de retour avant de quitter, mais un autre client, par exemple un client Windows Forms, peut recevoir n'importe quel nombre d'appels du service.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The following client implements the <ph id="ph1">`SampleDuplexHelloCallback`</ph> to receive the callback message.</source>
          <target state="translated">Le client suivant implémente le <ph id="ph1">`SampleDuplexHelloCallback`</ph> pour recevoir le message de rappel.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The imported callback contract is not the same name as the one in the service, due to the use of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> property in the preceding example.</source>
          <target state="translated">Le contrat de rappel importé n'a pas le même nom que celui du service, en raison de l'utilisation de la propriété <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> dans l'exemple précédent.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</source>
          <target state="translated">Notez que le client ne fait aucune hypothèse quant à la possibilité ou au moment où il peut recevoir un rappel ; le rappel de serveur est entièrement indépendant de l'appel sortant du client.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>For an example that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class in a client scenario, see <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</source>
          <target state="translated">Pour un exemple qui utilise la classe <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> dans un scénario client, consultez <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> used to create a new client <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> utilisé pour créer un client <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> class that uses the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> in a client application.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> qui utilise le <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> spécifié dans une application cliente.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.%23ctor%2A&gt;</ph> constructor to create a new operation context within the scope of which the proxy is associated in order to modify outbound items such as headers.</source>
          <target state="translated">Utilisez le constructeur <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.%23ctor%2A&gt;</ph> pour créer un contexte d'opération dans la portée duquel le proxy est associé pour modifier des éléments sortants, tels que des en-têtes.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">L'exemple suivant indique comment utiliser la <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> pour créer un contexte dans une application cliente afin d'ajouter un en-tête personnalisé au message sortant.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The channel is null.</source>
          <target state="translated">Le canal a la valeur Null.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Channel">
          <source>Gets the channel associated with the current <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> object.</source>
          <target state="translated">Obtient le canal associé à l'objet <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Channel">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> associated with the current <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> associé au <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.ClaimsPrincipal">
          <source>Gets the claims-based principal associated with the operation.</source>
          <target state="translated">Obtient l'entité basée sur les revendications associée à l'opération.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.ClaimsPrincipal">
          <source>The claims principal.</source>
          <target state="translated">Principal des revendications.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Current">
          <source>Gets or sets the execution context for the current thread.</source>
          <target state="translated">Obtient ou définit le contexte d'exécution du thread actuel.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> that represents the messaging and execution context of the current method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> qui représente la messagerie et le contexte d'exécution de la méthode en cours.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property to obtain the execution and message context for the current method.</source>
          <target state="translated">Utilisez la propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> pour obtenir l'exécution et le contexte de message pour la méthode en cours.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to create a channel back to the caller from within a method.</source>
          <target state="translated">L'exemple de code suivant utilise la propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> et la méthode <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> pour retourner un canal à l'appelant à partir d'une méthode.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">Toutes les méthodes de cet exemple sont des méthodes unidirectionnelles, permettant au service et au client de communiquer indépendamment dans les deux sens.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">Dans ce cas, l'application cliente d'exemple attend un seul appel de retour avant de quitter, mais un autre client, par exemple un client Windows Forms, peut recevoir n'importe quel nombre d'appels du service.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.EndpointDispatcher">
          <source>Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.</source>
          <target state="translated">Obtient ou définit le répartiteur de points de terminaison pour le point de terminaison à inspecter ou modifier.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.EndpointDispatcher">
          <source>The endpoint dispatcher for the endpoint to inspect or modify.</source>
          <target state="translated">Répartiteur de points de terminaison pour le point de terminaison à inspecter ou modifier.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>Gets the collection of service extensions from the current message context.</source>
          <target state="translated">Obtient la collection d’extensions de service du contexte de message actuel.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>A collection of extensions of <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Collection d'extensions de <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> property to obtain a collection of all extensions of the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> used to modify the context or add custom state.</source>
          <target state="translated">Utilisez la propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> pour obtenir une collection de toutes les extensions du <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> utilisée pour modifier le contexte ou ajouter un état personnalisé.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>For more information about extensions, see <bpt id="p1">[</bpt>Extensible Objects<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les extensions, consultez <bpt id="p1">[</bpt>objets extensibles<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The type of channel used to call back to the client.</source>
          <target state="translated">Type de canal utilisé pour rappeler le client.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Gets a channel to the client instance that called the current operation.</source>
          <target state="translated">Obtient un canal à l'instance du client qui a appelé l'opération en cours.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>A channel to the client instance that called the operation of the type specified in the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /&gt;</ph> property.</source>
          <target state="translated">Canal à l'instance du client qui a appelé l'opération du type spécifié dans la propriété <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Call the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> property to obtain a channel that you can use to call operations on the client instance that called the service.</source>
          <target state="translated">Appelez la propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> pour obtenir un canal que vous pouvez utiliser pour appeler des opérations sur l'instance du client qui a appelé le service.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to create a channel back to the caller from within a operation.</source>
          <target state="translated">L'exemple de code suivant utilise la propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> et la méthode <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> pour retourner un canal à l'appelant à partir d'une opération.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>All operations in this example are one-way operations, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">Toutes les opérations de cet exemple sont des opérations unidirectionnelles, permettant au service et au client de communiquer indépendamment dans les deux sens.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">Dans ce cas, l'application cliente d'exemple attend un seul appel de retour avant de quitter, mais un autre client, par exemple un client Windows Forms, peut recevoir n'importe quel nombre d'appels du service.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The following client implements the <ph id="ph1">`SampleDuplexHelloCallback`</ph> to receive the callback message.</source>
          <target state="translated">Le client suivant implémente le <ph id="ph1">`SampleDuplexHelloCallback`</ph> pour recevoir le message de rappel.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The imported callback contract is not the same name as the one in the service, due to the use of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> property in the preceding example.</source>
          <target state="translated">Le contrat de rappel importé n'a pas le même nom que celui du service, en raison de l'utilisation de la propriété <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> dans l'exemple précédent.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</source>
          <target state="translated">Notez que le client ne fait aucune hypothèse quant à la possibilité ou au moment où il peut recevoir un rappel ; le rappel de serveur est entièrement indépendant de l'appel sortant du client.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>For an example that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class in a client scenario, see <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</source>
          <target state="translated">Pour un exemple qui utilise la classe <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> dans un scénario client, consultez <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.HasSupportingTokens">
          <source>Gets a value that indicates whether the incoming message has supporting tokens.</source>
          <target state="translated">Obtient une valeur qui indique si le message entrant a des jetons de prise en charge.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.HasSupportingTokens">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the incoming message has supporting tokens; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le message entrant a des jetons de prise en charge ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Host">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> for the current service object.</source>
          <target state="translated">Obtient l'<ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> pour l'objet de service en cours.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Host">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>Gets the incoming message headers for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Obtient les en-têtes de message entrant pour le <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> object that contains the incoming message headers.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> qui contient les en-têtes de message entrant.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>Use this property to inspect or modify the request headers that arrive at a service operation or reply headers that arrive at a client proxy.</source>
          <target state="translated">Utilisez cette propriété pour inspecter ou modifier les en-têtes de demande qui arrivent à une opération de service ou les en-têtes de réponse qui arrivent à un proxy client.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>The following code example shows how to read the incoming message headers in a service operation.</source>
          <target state="translated">L'exemple de code suivant montre comment lire les en-têtes de message entrant dans une opération de service.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>Gets the message properties for the incoming message in the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Obtient les propriétés de message pour le message entrant dans le <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> object that contains the message properties on the incoming message.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> qui contient les propriétés de message sur le message entrant.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>Use this property to inspect or modify the message properties for a request message in a service operation or a reply message in a client proxy.</source>
          <target state="translated">Utilisez cette propriété pour inspecter ou modifier les propriétés de message pour un message de demande dans une opération de service ou un message de réponse dans un proxy client.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>Gets the incoming SOAP message version for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Obtient la version du message SOAP entrant pour le <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>The SOAP version of the incoming message.</source>
          <target state="translated">Version SOAP du message entrant.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>Use this property to inspect the SOAP version of the request message that arrives at a service operation or the SOAP version of the reply message that arrives at a client proxy.</source>
          <target state="translated">Utilisez cette propriété pour inspecter la version SOAP du message de demande qui arrive à une opération de service ou la version SOAP du message de réponse qui arrive à un proxy client.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object that manages the current service instance.</source>
          <target state="translated">Obtient l'objet <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> qui gère l'instance de service en cours.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object for the current service.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> pour le service en cours.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> property to access the run-time object that manages the current service object.</source>
          <target state="translated">Utilisez la propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> pour accéder à l'objet d'exécution qui gère l'objet de service en cours.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IsUserContext">
          <source>This property is intended for system use and should not be called by users.</source>
          <target state="translated">Cette propriété est réservée au système et ne doit pas être appelée par les utilisateurs.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IsUserContext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Occurs when the operation has completed.</source>
          <target state="translated">Se produit lorsque l'opération est terminée.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> event to dispose parameters or a return value if you set <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Utilisez l'événement <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> pour supprimer des paramètres ou une valeur de retour si vous affectez <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> à <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Normally you set <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`false`</ph> to prevent <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> from calling <ph id="ph4">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> on the parameter and return value objects.</source>
          <target state="translated">En principe, vous affectez <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> à <ph id="ph2">`false`</ph> pour empêcher <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> d'appeler <ph id="ph4">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> sur les objets de paramètre et de valeur de retour.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>However, if some parameters need to be preserved while others need to be disposed, this event is the best place to dispose those parameters.</source>
          <target state="translated">Toutefois, si certains paramètres doivent être conservés alors que d'autres doivent être supprimés, cet événement est l'endroit idéal pour supprimer ces paramètres.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Also, with duplex bindings, this event can be used to send a request on the callback channel after the reply for the current operation is sent.</source>
          <target state="translated">De même, avec les liaisons duplex, cet événement peut être utilisé pour envoyer une demande sur le canal de rappel une fois que la réponse pour l'opération en cours est envoyée.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>If a caller is listening for the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> event for an <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph> operation, it is possible to block when the response is received.</source>
          <target state="translated">Si un appelant écoute l'événement <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> pour une opération <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph>, il est possible de bloquer lors de la réception de la réponse.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>The proper way to handle this is to schedule work on another thread when <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> is raised and then immediately return from that event handler.</source>
          <target state="translated">Pour gérer correctement cela, il convient de planifier des travaux sur un autre thread lorsque <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> est déclenché, puis de retourner immédiatement à partir de ce gestionnaire d'événements.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>Gets the outgoing message headers for the active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Obtient les en-têtes de message sortant pour le <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> object that contains outbound message headers for the active <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> qui contient les en-têtes de message sortants pour le <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>Use this property to add reply headers that are sent by a service operation or request headers that are sent by a <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object.</source>
          <target state="translated">Utilisez cette propriété pour ajouter des en-têtes de réponse envoyés par une opération de service ou des en-têtes de demande envoyés par un client d'objets <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">L'exemple suivant indique comment utiliser la <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> pour créer un contexte dans une application cliente afin d'ajouter un en-tête personnalisé au message sortant.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>Gets the message properties for the outbound message in the active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Obtient les propriétés de message pour le message sortant dans le <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> object that contains the message properties on the outbound message.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> qui contient les propriétés de message sur le message sortant.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>Use this property to add message properties for a reply message from a service operation or message properties for a request message from a client proxy.</source>
          <target state="translated">Utilisez cette propriété pour ajouter des propriétés de message pour un message de réponse d'une opération de service ou des propriétés de message pour un message de demande d'un proxy client.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> implementation for this method.</source>
          <target state="translated">Obtient ou définit l'implémentation <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> pour cette méthode.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> implementation, or null if there is no request context.</source>
          <target state="translated">Implémentation <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> ou valeur Null s'il n'y a aucun contexte de demande.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>One-way operations are do not have a request context.</source>
          <target state="translated">Les traitements unidirectionnels n'ont pas de contexte de demande.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> within which this method executes.</source>
          <target state="translated">Obtient ou définit le <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> dans lequel s'exécute cette méthode.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.SessionId">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> used to identify the current session.</source>
          <target state="translated">Obtient la <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> utilisée pour identifier la session active.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.SessionId">
          <source>The session identifier.</source>
          <target state="translated">Identificateur de session.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Commits the currently executing transaction.</source>
          <target state="translated">Valide la transaction en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>This is only useful in operations that set <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Ce type est utile uniquement dans les opérations qui affectent <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> à <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Typically, services do this on some but not all operations.</source>
          <target state="translated">En général, les services font ceci sur certaines opérations, mais pas sur toutes.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>When <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> is false the transaction completes automatically.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> a la valeur false, la transaction se termine automatiquement.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> in cases where it is not possible to determine at design-time whether an operation needs to complete the transaction.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> dans les cas où il n'est pas possible de déterminer au moment du design si une opération doit terminer la transaction.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>There is no transaction in the context.</source>
          <target state="translated">Il n’y a aucune transaction dans le contexte.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.SupportingTokens">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Obtient un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> de type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.SupportingTokens">
          <source>A collection of security tokens.</source>
          <target state="translated">Collection de jetons de sécurité.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>