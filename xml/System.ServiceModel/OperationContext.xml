<Type Name="OperationContext" FullName="System.ServiceModel.OperationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b651d31df1389374d57ccfab4c8222f8ac73618" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OperationContext : System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContext extends System.Object implements class System.ServiceModel.IExtensibleObject`1&lt;class System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContext&#xA;Implements IExtensibleObject(Of OperationContext)" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContext sealed : System::ServiceModel::IExtensibleObject&lt;System::ServiceModel::OperationContext ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.OperationContext&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f46db-101">Fournit l'accès au contexte d'exécution d'une méthode de service.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f46db-101">Provides access to the execution context of a service method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-102">Utilisez le <xref:System.ServiceModel.OperationContext> à partir d'une opération de service pour accéder à l'environnement d'exécution de l'opération actuelle.</span><span class="sxs-lookup"><span data-stu-id="f46db-102">Use the <xref:System.ServiceModel.OperationContext> from within a service operation to access the current operation execution environment.</span></span> <span data-ttu-id="f46db-103">En particulier, le contexte d'opération est utilisé pour accéder aux canaux de rappel dans les services duplex, pour stocker les données d'état supplémentaires dans l'ensemble des parties des opérations et pour accéder aux en-têtes et aux propriétés de message entrant ainsi que pour ajouter des en-têtes et des propriétés de message sortant.</span><span class="sxs-lookup"><span data-stu-id="f46db-103">In particular, the operation context is used to access callback channels in duplex services, to store extra state data across portions of the operations, and to access incoming message headers and properties as well as add outgoing message headers and properties.</span></span>  
  
 <span data-ttu-id="f46db-104">Pour plus d’informations sur l’utilisation des extensions pour stocker les données d’état, consultez [objets extensibles](~/docs/framework/wcf/extending/extensible-objects.md).</span><span class="sxs-lookup"><span data-stu-id="f46db-104">For more information about using extensions to store state data, see [Extensible Objects](~/docs/framework/wcf/extending/extensible-objects.md).</span></span>  
  
 <span data-ttu-id="f46db-105"><xref:System.ServiceModel.OperationContext> dispose des propriétés et méthodes suivantes :</span><span class="sxs-lookup"><span data-stu-id="f46db-105">The <xref:System.ServiceModel.OperationContext> has the following properties and methods.</span></span>  
  
-   <span data-ttu-id="f46db-106">La propriété <xref:System.ServiceModel.OperationContext.Current%2A> retourne l'objet <xref:System.ServiceModel.OperationContext> représentant le contexte d'exécution actuel.</span><span class="sxs-lookup"><span data-stu-id="f46db-106">The <xref:System.ServiceModel.OperationContext.Current%2A> property returns the <xref:System.ServiceModel.OperationContext> object representing the current execution context.</span></span>  
  
-   <span data-ttu-id="f46db-107">La propriété <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> retourne l'environnement de sécurité sous lequel la méthode s'exécute.</span><span class="sxs-lookup"><span data-stu-id="f46db-107">The <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> property returns the security environment under which the method executes.</span></span>  
  
-   <span data-ttu-id="f46db-108">La propriété <xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A> obtient le <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>de l'opération.</span><span class="sxs-lookup"><span data-stu-id="f46db-108">The <xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A> property gets the operation's <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="f46db-109">La propriété <xref:System.ServiceModel.OperationContext.Extensions%2A> retourne une collection d'extensions pour le <xref:System.ServiceModel.OperationContext>actuel.</span><span class="sxs-lookup"><span data-stu-id="f46db-109">The <xref:System.ServiceModel.OperationContext.Extensions%2A> property returns an extension collection for the current <xref:System.ServiceModel.OperationContext>.</span></span>  
  
-   <span data-ttu-id="f46db-110">La propriété <xref:System.ServiceModel.OperationContext.Host%2A> retourne l'objet <xref:System.ServiceModel.ServiceHostBase> qui gère le service.</span><span class="sxs-lookup"><span data-stu-id="f46db-110">The <xref:System.ServiceModel.OperationContext.Host%2A> property returns the <xref:System.ServiceModel.ServiceHostBase> object that manages the service.</span></span>  
  
-   <span data-ttu-id="f46db-111">La propriété <xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A> retourne une valeur qui indique si la méthode a des jetons de prise en charge, et si c'est le cas, la propriété <xref:System.ServiceModel.OperationContext.SupportingTokens%2A> les obtient.</span><span class="sxs-lookup"><span data-stu-id="f46db-111">The <xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A> property returns a value that indicates whether the method has supporting tokens, if so, the <xref:System.ServiceModel.OperationContext.SupportingTokens%2A> property gets them.</span></span>  
  
-   <span data-ttu-id="f46db-112">Les propriétés <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>, <xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A>et <xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A> obtiennent ces éléments du message entrant.</span><span class="sxs-lookup"><span data-stu-id="f46db-112">The <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>, <xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A>, and <xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A> properties get these items from the incoming message.</span></span>  
  
-   <span data-ttu-id="f46db-113">L'événement <xref:System.ServiceModel.OperationContext.OperationCompleted> est déclenché à la fin de l'opération.</span><span class="sxs-lookup"><span data-stu-id="f46db-113">The <xref:System.ServiceModel.OperationContext.OperationCompleted> event is fired when the operation has completed.</span></span>  
  
-   <span data-ttu-id="f46db-114">Les propriétés <xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A> et <xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A> reçoivent ces éléments pour le message sortant.</span><span class="sxs-lookup"><span data-stu-id="f46db-114">The <xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A> and <xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A> properties get these items for the outbound message.</span></span>  
  
-   <span data-ttu-id="f46db-115">La propriété <xref:System.ServiceModel.OperationContext.RequestContext%2A> retourne l'implémentation <xref:System.ServiceModel.Channels.RequestContext> pour la méthode.</span><span class="sxs-lookup"><span data-stu-id="f46db-115">The <xref:System.ServiceModel.OperationContext.RequestContext%2A> property returns the <xref:System.ServiceModel.Channels.RequestContext> implementation for the method.</span></span>  
  
-   <span data-ttu-id="f46db-116">La propriété <xref:System.ServiceModel.OperationContext.InstanceContext%2A> retourne le <xref:System.ServiceModel.InstanceContext> associé à l'opération.</span><span class="sxs-lookup"><span data-stu-id="f46db-116">The <xref:System.ServiceModel.OperationContext.InstanceContext%2A> property returns the <xref:System.ServiceModel.InstanceContext> associated with the operation.</span></span>  
  
-   <span data-ttu-id="f46db-117">La propriété <xref:System.ServiceModel.OperationContext.SessionId%2A> retourne l'identificateur de session pour le canal et l'objet en cours.</span><span class="sxs-lookup"><span data-stu-id="f46db-117">The <xref:System.ServiceModel.OperationContext.SessionId%2A> property returns the session identifier for the current channel and object.</span></span>  
  
-   <span data-ttu-id="f46db-118">La méthode <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> retourne un canal de rappel à l'appelant dans le cas d'une communication duplex.</span><span class="sxs-lookup"><span data-stu-id="f46db-118">The <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method returns a callback channel to the caller in the case of duplex communication.</span></span>  
  
-   <span data-ttu-id="f46db-119">La méthode <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> valide la transaction en cours.</span><span class="sxs-lookup"><span data-stu-id="f46db-119">The <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> method commits the current transaction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f46db-120">L'exemple de code suivant utilise la propriété <xref:System.ServiceModel.OperationContext.Current%2A> et la méthode <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> pour retourner le canal à l'appelant à partir d'une méthode.</span><span class="sxs-lookup"><span data-stu-id="f46db-120">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to obtain the channel back to the caller from within a method.</span></span> <span data-ttu-id="f46db-121">Toutes les méthodes de cet exemple sont des méthodes unidirectionnelles, permettant au service et au client de communiquer indépendamment dans les deux sens.</span><span class="sxs-lookup"><span data-stu-id="f46db-121">All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="f46db-122">Dans ce cas, l'application cliente d'exemple attend un seul appel de retour avant de quitter, mais un autre client, par exemple un client Windows Forms, peut recevoir n'importe quel nombre d'appels du service.</span><span class="sxs-lookup"><span data-stu-id="f46db-122">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 <span data-ttu-id="f46db-123">Le client suivant implémente le `SampleDuplexHelloCallback` pour recevoir le message de rappel.</span><span class="sxs-lookup"><span data-stu-id="f46db-123">The following client implements the `SampleDuplexHelloCallback` to receive the callback message.</span></span> <span data-ttu-id="f46db-124">Le contrat de rappel importé n'a pas le même nom que celui du service, en raison de l'utilisation de la propriété <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> dans l'exemple précédent.</span><span class="sxs-lookup"><span data-stu-id="f46db-124">The imported callback contract is not the same name as the one in the service, due to the use of the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> property in the preceding example.</span></span> <span data-ttu-id="f46db-125">Notez que le client ne fait aucune hypothèse quant à la possibilité ou au moment où il peut recevoir un rappel ; le rappel de serveur est entièrement indépendant de l'appel sortant du client.</span><span class="sxs-lookup"><span data-stu-id="f46db-125">Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f46db-126">Pour un exemple qui utilise la classe <xref:System.ServiceModel.OperationContext> dans un scénario client, consultez <xref:System.ServiceModel.OperationContextScope>.</span><span class="sxs-lookup"><span data-stu-id="f46db-126">For an example that uses the <xref:System.ServiceModel.OperationContext> class in a client scenario, see <xref:System.ServiceModel.OperationContextScope>.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.cs#3)]
 [!code-vb[SCA.CallbackContract#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContext (System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (channel As IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContext(System::ServiceModel::IContextChannel ^ channel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel">
          <span data-ttu-id="f46db-127">
            <see cref="T:System.ServiceModel.IContextChannel" /> utilisé pour créer un client <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-127">The <see cref="T:System.ServiceModel.IContextChannel" /> used to create a new client <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f46db-128">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.OperationContext" /> qui utilise le <see cref="T:System.ServiceModel.IContextChannel" /> spécifié dans une application cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-128">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContext" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> in a client application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-129">Utilisez le constructeur <xref:System.ServiceModel.OperationContext.%23ctor%2A> pour créer un contexte d'opération dans la portée duquel le proxy est associé pour modifier des éléments sortants, tels que des en-têtes.</span><span class="sxs-lookup"><span data-stu-id="f46db-129">Use the <xref:System.ServiceModel.OperationContext.%23ctor%2A> constructor to create a new operation context within the scope of which the proxy is associated in order to modify outbound items such as headers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f46db-130">L'exemple suivant indique comment utiliser la <xref:System.ServiceModel.OperationContextScope> pour créer un contexte dans une application cliente afin d'ajouter un en-tête personnalisé au message sortant.</span><span class="sxs-lookup"><span data-stu-id="f46db-130">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f46db-131">Le canal a la valeur Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-131">The channel is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.IContextChannel Channel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.IContextChannel Channel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Channel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Channel As IContextChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::IContextChannel ^ Channel { System::ServiceModel::IContextChannel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.IContextChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-132">Obtient le canal associé à l'objet <see cref="T:System.ServiceModel.OperationContext" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-132">Gets the channel associated with the current <see cref="T:System.ServiceModel.OperationContext" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-133">
            <see cref="T:System.ServiceModel.IContextChannel" /> associé au <see cref="T:System.ServiceModel.OperationContext" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-133">An <see cref="T:System.ServiceModel.IContextChannel" /> associated with the current <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal ClaimsPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.ClaimsPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimsPrincipal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ ClaimsPrincipal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-134">Obtient l'entité basée sur les revendications associée à l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-134">Gets the claims-based principal associated with the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-135">Principal des revendications.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-135">The claims principal.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.OperationContext Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.OperationContext Current" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As OperationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::OperationContext ^ Current { System::ServiceModel::OperationContext ^ get(); void set(System::ServiceModel::OperationContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.OperationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-136">Obtient ou définit le contexte d'exécution du thread actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-136">Gets or sets the execution context for the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-137">
            <see cref="T:System.ServiceModel.OperationContext" /> qui représente la messagerie et le contexte d'exécution de la méthode en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-137">The <see cref="T:System.ServiceModel.OperationContext" /> that represents the messaging and execution context of the current method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-138">Utilisez la propriété <xref:System.ServiceModel.OperationContext.Current%2A> pour obtenir l'exécution et le contexte de message pour la méthode en cours.</span><span class="sxs-lookup"><span data-stu-id="f46db-138">Use the <xref:System.ServiceModel.OperationContext.Current%2A> property to obtain the execution and message context for the current method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f46db-139">L'exemple de code suivant utilise la propriété <xref:System.ServiceModel.OperationContext.Current%2A> et la méthode <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> pour retourner un canal à l'appelant à partir d'une méthode.</span><span class="sxs-lookup"><span data-stu-id="f46db-139">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to create a channel back to the caller from within a method.</span></span> <span data-ttu-id="f46db-140">Toutes les méthodes de cet exemple sont des méthodes unidirectionnelles, permettant au service et au client de communiquer indépendamment dans les deux sens.</span><span class="sxs-lookup"><span data-stu-id="f46db-140">All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="f46db-141">Dans ce cas, l'application cliente d'exemple attend un seul appel de retour avant de quitter, mais un autre client, par exemple un client Windows Forms, peut recevoir n'importe quel nombre d'appels du service.</span><span class="sxs-lookup"><span data-stu-id="f46db-141">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointDispatcher">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.EndpointDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public Property EndpointDispatcher As EndpointDispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::EndpointDispatcher ^ EndpointDispatcher { System::ServiceModel::Dispatcher::EndpointDispatcher ^ get(); void set(System::ServiceModel::Dispatcher::EndpointDispatcher ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.EndpointDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-142">Obtient ou définit le répartiteur de points de terminaison pour le point de terminaison à inspecter ou modifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-142">Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-143">Répartiteur de points de terminaison pour le point de terminaison à inspecter ou modifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-143">The endpoint dispatcher for the endpoint to inspect or modify.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.OperationContext&gt; Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.IExtensionCollection`1&lt;class System.ServiceModel.OperationContext&gt; Extensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As IExtensionCollection(Of OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::OperationContext ^&gt; ^ Extensions { System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::OperationContext ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.IExtensibleObject`1.Extensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.OperationContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-144">Obtient la collection d’extensions de service du contexte de message actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-144">Gets the collection of service extensions from the current message context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-145">Collection d'extensions de <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-145">A collection of extensions of <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-146">Utilisez la propriété <xref:System.ServiceModel.OperationContext.Extensions%2A> pour obtenir une collection de toutes les extensions du <xref:System.ServiceModel.OperationContext> utilisée pour modifier le contexte ou ajouter un état personnalisé.</span><span class="sxs-lookup"><span data-stu-id="f46db-146">Use the <xref:System.ServiceModel.OperationContext.Extensions%2A> property to obtain a collection of all extensions of the <xref:System.ServiceModel.OperationContext> used to modify the context or add custom state.</span></span> <span data-ttu-id="f46db-147">Pour plus d’informations sur les extensions, consultez [objets extensibles](~/docs/framework/wcf/extending/extensible-objects.md).</span><span class="sxs-lookup"><span data-stu-id="f46db-147">For more information about extensions, see [Extensible Objects](~/docs/framework/wcf/extending/extensible-objects.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackChannel&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetCallbackChannel&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetCallbackChannel&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.GetCallbackChannel``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackChannel(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetCallbackChannel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f46db-148">Type de canal utilisé pour rappeler le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-148">The type of channel used to call back to the client.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="f46db-149">Obtient un canal à l'instance du client qui a appelé l'opération en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-149">Gets a channel to the client instance that called the current operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f46db-150">Canal à l'instance du client qui a appelé l'opération du type spécifié dans la propriété <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-150">A channel to the client instance that called the operation of the type specified in the <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-151">Appelez la propriété <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> pour obtenir un canal que vous pouvez utiliser pour appeler des opérations sur l'instance du client qui a appelé le service.</span><span class="sxs-lookup"><span data-stu-id="f46db-151">Call the <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> property to obtain a channel that you can use to call operations on the client instance that called the service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f46db-152">L'exemple de code suivant utilise la propriété <xref:System.ServiceModel.OperationContext.Current%2A> et la méthode <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> pour retourner un canal à l'appelant à partir d'une opération.</span><span class="sxs-lookup"><span data-stu-id="f46db-152">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to create a channel back to the caller from within a operation.</span></span> <span data-ttu-id="f46db-153">Toutes les opérations de cet exemple sont des opérations unidirectionnelles, permettant au service et au client de communiquer indépendamment dans les deux sens.</span><span class="sxs-lookup"><span data-stu-id="f46db-153">All operations in this example are one-way operations, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="f46db-154">Dans ce cas, l'application cliente d'exemple attend un seul appel de retour avant de quitter, mais un autre client, par exemple un client Windows Forms, peut recevoir n'importe quel nombre d'appels du service.</span><span class="sxs-lookup"><span data-stu-id="f46db-154">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 <span data-ttu-id="f46db-155">Le client suivant implémente le `SampleDuplexHelloCallback` pour recevoir le message de rappel.</span><span class="sxs-lookup"><span data-stu-id="f46db-155">The following client implements the `SampleDuplexHelloCallback` to receive the callback message.</span></span> <span data-ttu-id="f46db-156">Le contrat de rappel importé n'a pas le même nom que celui du service, en raison de l'utilisation de la propriété <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> dans l'exemple précédent.</span><span class="sxs-lookup"><span data-stu-id="f46db-156">The imported callback contract is not the same name as the one in the service, due to the use of the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> property in the preceding example.</span></span> <span data-ttu-id="f46db-157">Notez que le client ne fait aucune hypothèse quant à la possibilité ou au moment où il peut recevoir un rappel ; le rappel de serveur est entièrement indépendant de l'appel sortant du client.</span><span class="sxs-lookup"><span data-stu-id="f46db-157">Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f46db-158">Pour un exemple qui utilise la classe <xref:System.ServiceModel.OperationContext> dans un scénario client, consultez <xref:System.ServiceModel.OperationContextScope>.</span><span class="sxs-lookup"><span data-stu-id="f46db-158">For an example that uses the <xref:System.ServiceModel.OperationContext> class in a client scenario, see <xref:System.ServiceModel.OperationContextScope>.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.cs#3)]
 [!code-vb[SCA.CallbackContract#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSupportingTokens">
      <MemberSignature Language="C#" Value="public bool HasSupportingTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSupportingTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.HasSupportingTokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSupportingTokens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasSupportingTokens { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-159">Obtient une valeur qui indique si le message entrant a des jetons de prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-159">Gets a value that indicates whether the incoming message has supporting tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-160">
            <see langword="true" /> si le message entrant a des jetons de prise en charge ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-160">
              <see langword="true" /> if the incoming message has supporting tokens; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-161">Obtient l'<see cref="T:System.ServiceModel.ServiceHost" /> pour l'objet de service en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-161">Gets the <see cref="T:System.ServiceModel.ServiceHost" /> for the current service object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-162">Objet <see cref="T:System.ServiceModel.ServiceHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-162">A <see cref="T:System.ServiceModel.ServiceHost" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageHeaders">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageHeaders IncomingMessageHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageHeaders IncomingMessageHeaders" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageHeaders As MessageHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageHeaders ^ IncomingMessageHeaders { System::ServiceModel::Channels::MessageHeaders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-163">Obtient les en-têtes de message entrant pour le <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-163">Gets the incoming message headers for the <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-164">Objet <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> qui contient les en-têtes de message entrant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-164">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains the incoming message headers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-165">Utilisez cette propriété pour inspecter ou modifier les en-têtes de demande qui arrivent à une opération de service ou les en-têtes de réponse qui arrivent à un proxy client.</span><span class="sxs-lookup"><span data-stu-id="f46db-165">Use this property to inspect or modify the request headers that arrive at a service operation or reply headers that arrive at a client proxy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f46db-166">L'exemple de code suivant montre comment lire les en-têtes de message entrant dans une opération de service.</span><span class="sxs-lookup"><span data-stu-id="f46db-166">The following code example shows how to read the incoming message headers in a service operation.</span></span>  
  
 [!code-csharp[OperationContextScope#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/services.cs#2)]
 [!code-vb[OperationContextScope#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageProperties">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageProperties IncomingMessageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageProperties IncomingMessageProperties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageProperties As MessageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageProperties ^ IncomingMessageProperties { System::ServiceModel::Channels::MessageProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-167">Obtient les propriétés de message pour le message entrant dans le <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-167">Gets the message properties for the incoming message in the <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-168">Objet <see cref="T:System.ServiceModel.Channels.MessageProperties" /> qui contient les propriétés de message sur le message entrant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-168">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the incoming message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-169">Utilisez cette propriété pour inspecter ou modifier les propriétés de message pour un message de demande dans une opération de service ou un message de réponse dans un proxy client.</span><span class="sxs-lookup"><span data-stu-id="f46db-169">Use this property to inspect or modify the message properties for a request message in a service operation or a reply message in a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageVersion IncomingMessageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion IncomingMessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageVersion ^ IncomingMessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-170">Obtient la version du message SOAP entrant pour le <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-170">Gets the incoming SOAP message version for the <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-171">Version SOAP du message entrant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-171">The SOAP version of the incoming message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-172">Utilisez cette propriété pour inspecter la version SOAP du message de demande qui arrive à une opération de service ou la version SOAP du message de réponse qui arrive à un proxy client.</span><span class="sxs-lookup"><span data-stu-id="f46db-172">Use this property to inspect the SOAP version of the request message that arrives at a service operation or the SOAP version of the reply message that arrives at a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContext InstanceContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.InstanceContext InstanceContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.InstanceContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceContext As InstanceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::InstanceContext ^ InstanceContext { System::ServiceModel::InstanceContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-173">Obtient l'objet <see cref="T:System.ServiceModel.InstanceContext" /> qui gère l'instance de service en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-173">Gets the <see cref="T:System.ServiceModel.InstanceContext" /> object that manages the current service instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-174">Objet <see cref="T:System.ServiceModel.InstanceContext" /> pour le service en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-174">The <see cref="T:System.ServiceModel.InstanceContext" /> object for the current service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-175">Utilisez la propriété <xref:System.ServiceModel.OperationContext.InstanceContext%2A> pour accéder à l'objet d'exécution qui gère l'objet de service en cours.</span><span class="sxs-lookup"><span data-stu-id="f46db-175">Use the <xref:System.ServiceModel.OperationContext.InstanceContext%2A> property to access the run-time object that manages the current service object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserContext">
      <MemberSignature Language="C#" Value="public bool IsUserContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IsUserContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUserContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserContext { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-176">Cette propriété est réservée au système et ne doit pas être appelée par les utilisateurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-176">This property is intended for system use and should not be called by users.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-177">
            <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-177">
              <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler OperationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OperationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.OperationContext.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OperationCompleted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OperationCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-178">Se produit lorsque l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-178">Occurs when the operation has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-179">Utilisez l'événement <xref:System.ServiceModel.OperationContext.OperationCompleted> pour supprimer des paramètres ou une valeur de retour si vous affectez <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> à `false`.</span><span class="sxs-lookup"><span data-stu-id="f46db-179">Use the <xref:System.ServiceModel.OperationContext.OperationCompleted> event to dispose parameters or a return value if you set <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> to `false`.</span></span> <span data-ttu-id="f46db-180">En principe, vous affectez <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> à `false` pour empêcher [!INCLUDE[indigo2](~/includes/indigo2-md.md)] d'appeler <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> sur les objets de paramètre et de valeur de retour.</span><span class="sxs-lookup"><span data-stu-id="f46db-180">Normally you set <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> to `false` to prevent [!INCLUDE[indigo2](~/includes/indigo2-md.md)] from calling <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> on the parameter and return value objects.</span></span>  <span data-ttu-id="f46db-181">Toutefois, si certains paramètres doivent être conservés alors que d'autres doivent être supprimés, cet événement est l'endroit idéal pour supprimer ces paramètres.</span><span class="sxs-lookup"><span data-stu-id="f46db-181">However, if some parameters need to be preserved while others need to be disposed, this event is the best place to dispose those parameters.</span></span>  
  
 <span data-ttu-id="f46db-182">De même, avec les liaisons duplex, cet événement peut être utilisé pour envoyer une demande sur le canal de rappel une fois que la réponse pour l'opération en cours est envoyée.</span><span class="sxs-lookup"><span data-stu-id="f46db-182">Also, with duplex bindings, this event can be used to send a request on the callback channel after the reply for the current operation is sent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f46db-183">Si un appelant écoute l'événement <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> pour une opération <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType>, il est possible de bloquer lors de la réception de la réponse.</span><span class="sxs-lookup"><span data-stu-id="f46db-183">If a caller is listening for the <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> event for an <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> operation, it is possible to block when the response is received.</span></span> <span data-ttu-id="f46db-184">Pour gérer correctement cela, il convient de planifier des travaux sur un autre thread lorsque <xref:System.ServiceModel.OperationContext.OperationCompleted> est déclenché, puis de retourner immédiatement à partir de ce gestionnaire d'événements.</span><span class="sxs-lookup"><span data-stu-id="f46db-184">The proper way to handle this is to schedule work on another thread when <xref:System.ServiceModel.OperationContext.OperationCompleted> is raised and then immediately return from that event handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutgoingMessageHeaders">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageHeaders OutgoingMessageHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageHeaders OutgoingMessageHeaders" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutgoingMessageHeaders As MessageHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageHeaders ^ OutgoingMessageHeaders { System::ServiceModel::Channels::MessageHeaders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-185">Obtient les en-têtes de message sortant pour le <see cref="T:System.ServiceModel.OperationContext" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-185">Gets the outgoing message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-186">Objet <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> qui contient les en-têtes de message sortants pour le <see cref="T:System.ServiceModel.OperationContext" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-186">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains outbound message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-187">Utilisez cette propriété pour ajouter des en-têtes de réponse envoyés par une opération de service ou des en-têtes de demande envoyés par un client d'objets [!INCLUDE[indigo2](~/includes/indigo2-md.md)].</span><span class="sxs-lookup"><span data-stu-id="f46db-187">Use this property to add reply headers that are sent by a service operation or request headers that are sent by a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f46db-188">L'exemple suivant indique comment utiliser la <xref:System.ServiceModel.OperationContextScope> pour créer un contexte dans une application cliente afin d'ajouter un en-tête personnalisé au message sortant.</span><span class="sxs-lookup"><span data-stu-id="f46db-188">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutgoingMessageProperties">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageProperties OutgoingMessageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageProperties OutgoingMessageProperties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.OutgoingMessageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutgoingMessageProperties As MessageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageProperties ^ OutgoingMessageProperties { System::ServiceModel::Channels::MessageProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-189">Obtient les propriétés de message pour le message sortant dans le <see cref="T:System.ServiceModel.OperationContext" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-189">Gets the message properties for the outbound message in the active <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-190">Objet <see cref="T:System.ServiceModel.Channels.MessageProperties" /> qui contient les propriétés de message sur le message sortant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-190">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the outbound message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-191">Utilisez cette propriété pour ajouter des propriétés de message pour un message de réponse d'une opération de service ou des propriétés de message pour un message de demande d'un proxy client.</span><span class="sxs-lookup"><span data-stu-id="f46db-191">Use this property to add message properties for a reply message from a service operation or message properties for a request message from a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::RequestContext ^ RequestContext { System::ServiceModel::Channels::RequestContext ^ get(); void set(System::ServiceModel::Channels::RequestContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-192">Obtient ou définit l'implémentation <see cref="T:System.ServiceModel.Channels.RequestContext" /> pour cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-192">Gets or sets the <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation for this method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-193">Implémentation <see cref="T:System.ServiceModel.Channels.RequestContext" /> ou valeur Null s'il n'y a aucun contexte de demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-193">An <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation, or null if there is no request context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-194">Les traitements unidirectionnels n'ont pas de contexte de demande.</span><span class="sxs-lookup"><span data-stu-id="f46db-194">One-way operations are do not have a request context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceSecurityContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceSecurityContext ServiceSecurityContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceSecurityContext ServiceSecurityContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.ServiceSecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceSecurityContext As ServiceSecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceSecurityContext ^ ServiceSecurityContext { System::ServiceModel::ServiceSecurityContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceSecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-195">Obtient ou définit le <see cref="T:System.ServiceModel.ServiceSecurityContext" /> dans lequel s'exécute cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-195">Gets or sets the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> within which this method executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-196">Objet <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-196">A <see cref="T:System.ServiceModel.ServiceSecurityContext" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-197">Obtient la <see cref="T:System.String" /> utilisée pour identifier la session active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-197">Gets the <see cref="T:System.String" /> used to identify the current session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-198">Identificateur de session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-198">The session identifier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransactionComplete">
      <MemberSignature Language="C#" Value="public void SetTransactionComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransactionComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.SetTransactionComplete" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTransactionComplete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTransactionComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f46db-199">Valide la transaction en cours d’exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-199">Commits the currently executing transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f46db-200">Ce type est utile uniquement dans les opérations qui affectent <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> à `false`.</span><span class="sxs-lookup"><span data-stu-id="f46db-200">This is only useful in operations that set <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> to `false`.</span></span> <span data-ttu-id="f46db-201">En général, les services font ceci sur certaines opérations, mais pas sur toutes.</span><span class="sxs-lookup"><span data-stu-id="f46db-201">Typically, services do this on some but not all operations.</span></span> <span data-ttu-id="f46db-202">Lorsque <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> a la valeur false, la transaction se termine automatiquement.</span><span class="sxs-lookup"><span data-stu-id="f46db-202">When <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> is false the transaction completes automatically.</span></span> <span data-ttu-id="f46db-203">Utilisez <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> dans les cas où il n'est pas possible de déterminer au moment du design si une opération doit terminer la transaction.</span><span class="sxs-lookup"><span data-stu-id="f46db-203">Use <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> in cases where it is not possible to determine at design-time whether an operation needs to complete the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f46db-204">Il n’y a aucune transaction dans le contexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-204">There is no transaction in the context.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SupportingTokens">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Security.SupportingTokenSpecification&gt; SupportingTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Security.SupportingTokenSpecification&gt; SupportingTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.SupportingTokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportingTokens As ICollection(Of SupportingTokenSpecification)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Security::SupportingTokenSpecification ^&gt; ^ SupportingTokens { System::Collections::Generic::ICollection&lt;System::ServiceModel::Security::SupportingTokenSpecification ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Security.SupportingTokenSpecification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f46db-205">Obtient un <see cref="T:System.Collections.Generic.ICollection`1" /> de type <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-205">Gets a <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f46db-206">Collection de jetons de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f46db-206">A collection of security tokens.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>