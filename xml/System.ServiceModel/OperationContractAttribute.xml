<Type Name="OperationContractAttribute" FullName="System.ServiceModel.OperationContractAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="24d299999e4ff11d9e24a5dd7f0e8c01a8576bfe" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32694826" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OperationContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContractAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fb50e-101">Indique qu’une méthode définit une opération qui fait partie d’un contrat de service dans une application Windows Communication Foundation (WCF).</span>
      <span class="sxs-lookup">
        <span data-stu-id="fb50e-101">Indicates that a method defines an operation that is part of a service contract in a Windows Communication Foundation (WCF) application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb50e-102">Appliquez l'<xref:System.ServiceModel.OperationContractAttribute> à une méthode pour indiquer que la méthode implémente une opération de service dans le cadre d'un contrat de service (spécifié par un attribut <xref:System.ServiceModel.ServiceContractAttribute> ).</span><span class="sxs-lookup"><span data-stu-id="fb50e-102">Apply the <xref:System.ServiceModel.OperationContractAttribute> to a method to indicate that the method implements a service operation as part of a service contract (specified by a <xref:System.ServiceModel.ServiceContractAttribute> attribute).</span></span>  
  
 <span data-ttu-id="fb50e-103">Utilisez les propriétés <xref:System.ServiceModel.OperationContractAttribute> pour contrôler la structure de l'opération et les valeurs exprimées dans les métadonnées :</span><span class="sxs-lookup"><span data-stu-id="fb50e-103">Use the <xref:System.ServiceModel.OperationContractAttribute> properties to control the structure of the operation and the values expressed in metadata:</span></span>  
  
-   <span data-ttu-id="fb50e-104">La propriété <xref:System.ServiceModel.OperationContractAttribute.Action%2A> spécifie l'action qui identifie cette opération de façon unique.</span><span class="sxs-lookup"><span data-stu-id="fb50e-104">The <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property specifies the action that uniquely identifies this operation.</span></span> <span data-ttu-id="fb50e-105">WCF distribue des messages de demande aux méthodes basées sur leur action.</span><span class="sxs-lookup"><span data-stu-id="fb50e-105">WCF dispatches request messages to methods based on their action.</span></span>  
  
-   <span data-ttu-id="fb50e-106">La propriété <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> indique que l'opération est implémentée ou peut être appelée de façon asynchrone à l'aide d'une paire de méthodes Begin/End.</span><span class="sxs-lookup"><span data-stu-id="fb50e-106">The <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property indicates that the operation is implemented or can be called asynchronously using a Begin/End method pair.</span></span>  
  
-   <span data-ttu-id="fb50e-107">La propriété <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> indique si la propriété <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> a été explicitement définie.</span><span class="sxs-lookup"><span data-stu-id="fb50e-107">The <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> property indicates whether the <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property has been explicitly set.</span></span>  
  
-   <span data-ttu-id="fb50e-108">La propriété <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> indique que l'opération se compose uniquement d'un message d'entrée.</span><span class="sxs-lookup"><span data-stu-id="fb50e-108">The <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property indicates that the operation only consists of a single input message.</span></span> <span data-ttu-id="fb50e-109">Aucun message de sortie n'est associé à l'opération.</span><span class="sxs-lookup"><span data-stu-id="fb50e-109">The operation has no associated output message.</span></span>  
  
-   <span data-ttu-id="fb50e-110">La propriété <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> spécifie si cette opération peut être l'opération initiale dans une session.</span><span class="sxs-lookup"><span data-stu-id="fb50e-110">The <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property specifies whether this operation can be the initial operation in a session.</span></span>  
  
-   <span data-ttu-id="fb50e-111">Le <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> propriété spécifie si les tentatives de WCF mettre fin à la session active, une fois l’opération terminée.</span><span class="sxs-lookup"><span data-stu-id="fb50e-111">The <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> property specifies whether WCF attempts to terminate the current session after the operation completes.</span></span>  
  
-   <span data-ttu-id="fb50e-112">La propriété <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> spécifie la sécurité au niveau du message qu'une opération requiert au moment de l'exécution.</span><span class="sxs-lookup"><span data-stu-id="fb50e-112">The <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property specifies the message-level security that an operation requires at run time.</span></span>  
  
-   <span data-ttu-id="fb50e-113">La propriété <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> spécifie l'action du message de réponse pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="fb50e-113">The <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> property specifies the action of the reply message for the operation.</span></span>  
  
 <span data-ttu-id="fb50e-114">L'attribut <xref:System.ServiceModel.OperationContractAttribute> déclare qu'une méthode est une opération dans un contrat de service.</span><span class="sxs-lookup"><span data-stu-id="fb50e-114">The <xref:System.ServiceModel.OperationContractAttribute> attribute declares that a method is an operation in a service contract.</span></span> <span data-ttu-id="fb50e-115">Seules les méthodes qui possèdent l'attribut <xref:System.ServiceModel.OperationContractAttribute> sont exposées comme opérations de service.</span><span class="sxs-lookup"><span data-stu-id="fb50e-115">Only methods attributed with the <xref:System.ServiceModel.OperationContractAttribute> are exposed as service operations.</span></span> <span data-ttu-id="fb50e-116">Un contrat de service sans méthode marquée avec l'<xref:System.ServiceModel.OperationContractAttribute> n'expose aucune opération.</span><span class="sxs-lookup"><span data-stu-id="fb50e-116">A service contract without any methods marked with the <xref:System.ServiceModel.OperationContractAttribute> exposes no operations.</span></span>  
  
 <span data-ttu-id="fb50e-117">Le <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> propriété indique qu’une paire de `Begin` \< *methodName*> et `End` \< *methodName*> méthodes forment un seul opération implémentée de façon asynchrone (que ce soit sur le client ou le service).</span><span class="sxs-lookup"><span data-stu-id="fb50e-117">The <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property indicates that a pair of `Begin`\<*methodName*> and `End`\<*methodName*> methods form a single operation implemented asynchronously (whether on the client or the service).</span></span> <span data-ttu-id="fb50e-118">La capacité d'un service à implémenter des opérations de façon asynchrone est un détail d'implémentation du service et n'est pas exposée dans les métadonnées (comme WSDL (Web Services Description Language)).</span><span class="sxs-lookup"><span data-stu-id="fb50e-118">The ability of a service to implement operations asynchronously is a service implementation detail and is not exposed in metadata (such as Web Services Description Language (WSDL)).</span></span>  
  
 <span data-ttu-id="fb50e-119">De même, les clients peuvent choisir d'appeler des opérations de façon asynchrone indépendantes de la façon dont la méthode de service est implémentée.</span><span class="sxs-lookup"><span data-stu-id="fb50e-119">Similarly, clients can choose to invoke operations asynchronously independent of how the service method is implemented.</span></span> <span data-ttu-id="fb50e-120">Appeler des opérations de service de façon asynchrone dans le client est recommandé lorsqu'une méthode de service prend du temps mais qu'elle doit retourner directement des informations au client.</span><span class="sxs-lookup"><span data-stu-id="fb50e-120">Calling service operations asynchronously in the client is recommended when a service method takes some time but must return information directly to the client.</span></span> <span data-ttu-id="fb50e-121">Pour plus d'informations, consultez <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-121">For details, see <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>.</span></span>  
  
 <span data-ttu-id="fb50e-122">La propriété <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> indique qu'une méthode ne retourne pas de valeur du tout, y compris un message de réponse sous-jacent vide.</span><span class="sxs-lookup"><span data-stu-id="fb50e-122">The <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property indicates that a method does not return any value at all, including an empty underlying response message.</span></span> <span data-ttu-id="fb50e-123">Ce type de méthode est utile pour les notifications ou la communication de style événement.</span><span class="sxs-lookup"><span data-stu-id="fb50e-123">This type of method is useful for notifications or event-style communication.</span></span> <span data-ttu-id="fb50e-124">Les méthodes de ce type ne peuvent pas retourner de message de réponse. La déclaration de la méthode doit donc retourner `void`.</span><span class="sxs-lookup"><span data-stu-id="fb50e-124">Methods of this kind cannot return a reply message so the method's declaration must return `void`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fb50e-125">Lors de la récupération par programmation de la banque d’informations de cet attribut, utilisez la <xref:System.ServiceModel.Description.ContractDescription> classe au lieu de la réflexion.</span><span class="sxs-lookup"><span data-stu-id="fb50e-125">When programmatically retrieving the information store in this attribute, use the <xref:System.ServiceModel.Description.ContractDescription> class instead of reflection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb50e-126">Si la propriété <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> a la valeur `false` (valeur par défaut), même les méthodes qui retournent `void` sont des méthodes bidirectionnelles au niveau de messages sous-jacents.</span><span class="sxs-lookup"><span data-stu-id="fb50e-126">If the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property is set to `false`, (the default), even methods that return `void` are two-way methods at the underlying message level.</span></span> <span data-ttu-id="fb50e-127">Dans ce cas, l'infrastructure crée et envoie un message vide pour indiquer à l'appelant que la méthode a été retournée.</span><span class="sxs-lookup"><span data-stu-id="fb50e-127">In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</span></span> <span data-ttu-id="fb50e-128">Cette approche permet à l'application et à l'infrastructure de retourner des informations sur l'erreur (comme une erreur SOAP) au client.</span><span class="sxs-lookup"><span data-stu-id="fb50e-128">Using this approach enables the application and the infrastructure to send error information (such as a SOAP fault) back to the client.</span></span> <span data-ttu-id="fb50e-129">Affecter <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> à `true` est la seule méthode pour éviter la création et la distribution d'un message de réponse.</span><span class="sxs-lookup"><span data-stu-id="fb50e-129">Setting <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> to `true` is the only way to prevent the creation and dispatch of a reply message.</span></span> <span data-ttu-id="fb50e-130">Pour plus d’informations, consultez [unidirectionnel Services](~/docs/framework/wcf/feature-details/one-way-services.md).</span><span class="sxs-lookup"><span data-stu-id="fb50e-130">For more information, see [One-Way Services](~/docs/framework/wcf/feature-details/one-way-services.md).</span></span>  
  
 <span data-ttu-id="fb50e-131">Les propriétés <xref:System.ServiceModel.OperationContractAttribute.Action%2A> et <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> peuvent être utilisées non seulement pour modifier l'action par défaut des messages SOAP, mais également pour créer des gestionnaires pour les messages non reconnus ou désactiver les actions d'ajout pour la programmation de message directe.</span><span class="sxs-lookup"><span data-stu-id="fb50e-131">The <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties can be used not only to modify the default action of SOAP messages but also to create handlers for unrecognized messages or to disable adding actions for direct message programming.</span></span> <span data-ttu-id="fb50e-132">Utilisez la propriété <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> pour éviter que les clients appellent une opération de service particulière avant d'autres opérations.</span><span class="sxs-lookup"><span data-stu-id="fb50e-132">Use the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property to prevent clients from calling a particular service operation prior to other operations.</span></span> <span data-ttu-id="fb50e-133">Utilisez le <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> propriété WCF fermer le canal une fois que les clients appellent une opération de service particulière.</span><span class="sxs-lookup"><span data-stu-id="fb50e-133">Use the <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> property to have WCF close the channel after clients call a particular service operation.</span></span> <span data-ttu-id="fb50e-134">Pour plus d’informations, consultez [à l’aide de Sessions](~/docs/framework/wcf/using-sessions.md).</span><span class="sxs-lookup"><span data-stu-id="fb50e-134">For more information, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).</span></span>  
  
 <span data-ttu-id="fb50e-135">La propriété <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> vous permet de spécifier sur le contrat d'opération si les messages d'opération sont signés, chiffrés ou signés et chiffrés.</span><span class="sxs-lookup"><span data-stu-id="fb50e-135">The <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property enables you to specify on the operation contract whether the operation messages are signed, encrypted, or signed and encrypted.</span></span> <span data-ttu-id="fb50e-136">Si une liaison ne peut pas fournir le niveau de sécurité requis par le contrat, une exception est levée au moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="fb50e-136">If a binding cannot provide the security level required by the contract, an exception is thrown at run time.</span></span> <span data-ttu-id="fb50e-137">Pour plus d’informations, consultez <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> et [au niveau de Protection de présentation](~/docs/framework/wcf/understanding-protection-level.md).</span><span class="sxs-lookup"><span data-stu-id="fb50e-137">For more information, see <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> and [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb50e-138">L'exemple de code suivant présente un contrat de service simple avec une opération.</span><span class="sxs-lookup"><span data-stu-id="fb50e-138">The following code example shows a simple service contract with one operation.</span></span>  
  
 [!code-csharp[OperationContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute/vb/services.vb#1)]  
  
 <span data-ttu-id="fb50e-139">L'exemple suivant est un service qui implémente un contrat de service implicite qui spécifie trois opérations.</span><span class="sxs-lookup"><span data-stu-id="fb50e-139">The following example is a service that implements an implicit service contract that specifies three operations.</span></span> <span data-ttu-id="fb50e-140">Deux des opérations sont des opérations bidirectionnelles, qui retournent des messages de réponse sous-jacents à l'appelant, quelle que soit la valeur de retour.</span><span class="sxs-lookup"><span data-stu-id="fb50e-140">Two of the operations are two-way operations, which return underlying response messages to the caller no matter what the return value is.</span></span> <span data-ttu-id="fb50e-141">La troisième opération reçoit un appel, un message entrant sous-jacent, mais ne retourne aucun message de réponse sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="fb50e-141">The third operation receives a call, an underlying inbound message, but returns no underlying response message.</span></span>  
  
```csharp  
[ServiceContractAttribute]  
public class OneAndTwoWay  
{  
  // The client waits until a response message appears.  
  [OperationContractAttribute]  
  public int MethodOne (int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  // The client waits until an empty response message appears.  
  [OperationContractAttribute]  
  public void MethodTwo (int x)  
  {  
    return;  
  }  
  
  // The client returns as soon as an outbound message  
  // is dispatched to the service; no response  
  // message is generated or sent from the service.  
  [OperationContractAttribute(IsOneWay=true)]  
  public void MethodThree (int x)  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb50e-142">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.OperationContractAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-142">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContractAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb50e-143">Obtient ou définit l'action WS-Addressing du message de demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-143">Gets or sets the WS-Addressing action of the request message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fb50e-144">Action à utiliser pour générer l'en-tête de l'action WS-Addressing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-144">The action to use in generating the WS-Addressing Action header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb50e-145">Utilisez le <xref:System.ServiceModel.OperationContractAttribute.Action%2A> le message d’entrée de propriété pour contrôler l’action de la méthode.</span><span class="sxs-lookup"><span data-stu-id="fb50e-145">Use the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property to control the action of the method's input message.</span></span> <span data-ttu-id="fb50e-146">Étant donné que WCF utilise cette action pour distribuer un message entrant à la méthode appropriée, les messages utilisés dans une opération de contrat doivent avoir des actions uniques.</span><span class="sxs-lookup"><span data-stu-id="fb50e-146">Because WCF uses this action to dispatch an incoming message to the appropriate method, messages used within a contract operation must have unique actions.</span></span> <span data-ttu-id="fb50e-147">La valeur d’action par défaut est une combinaison de l’espace de noms de contrat (la valeur par défaut est «http://tempuri.org/»), le nom de contrat (nom de l’interface ou le nom de classe, si aucune interface de service explicite n’est utilisée), le nom d’opération et une chaîne supplémentaire (« réponse ») si le message est une réponse corrélée.</span><span class="sxs-lookup"><span data-stu-id="fb50e-147">The default action value is a combination of the contract namespace (the default value is "http://tempuri.org/"), the contract name (interface name or the class name, if no explicit service interface is used), the operation name, and an additional string ("Response") if the message is a correlated response.</span></span> <span data-ttu-id="fb50e-148">Vous pouvez substituer cette valeur par défaut avec la propriété <xref:System.ServiceModel.OperationContractAttribute.Action%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-148">You can override this default with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property.</span></span>  
  
 <span data-ttu-id="fb50e-149">Pour indiquer qu'une opération de service gère tous les messages que le service reçoit mais ne peut pas être dirigée vers une opération de service, spécifiez la valeur « \* » (astérisque).</span><span class="sxs-lookup"><span data-stu-id="fb50e-149">To indicate that a service operation handles all messages that the service receives but cannot be directed to a service operation, specify the value "\*" (an asterisk).</span></span> <span data-ttu-id="fb50e-150">Ce type d'opération, appelé gestionnaire de messages non appariés, doit avoir l'une des signatures de méthode suivantes, sans quoi une <xref:System.InvalidOperationException> est levée :</span><span class="sxs-lookup"><span data-stu-id="fb50e-150">This type of operation, called an unmatched message handler, must have one of following method signatures, or a <xref:System.InvalidOperationException> is thrown:</span></span>  
  
-   <span data-ttu-id="fb50e-151">L'opération de service peut prendre uniquement un objet <xref:System.ServiceModel.Channels.Message> et retourner un objet <xref:System.ServiceModel.Channels.Message>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-151">The service operation can take only a <xref:System.ServiceModel.Channels.Message> object and return a <xref:System.ServiceModel.Channels.Message> object.</span></span>  
  
-   <span data-ttu-id="fb50e-152">L'opération de service peut prendre uniquement un objet <xref:System.ServiceModel.Channels.Message> et ne rien retourner (autrement dit, retourner `void`).</span><span class="sxs-lookup"><span data-stu-id="fb50e-152">The service operation can take only a <xref:System.ServiceModel.Channels.Message> object and return nothing (that is, return `void`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb50e-153">Un contrat de service peut avoir une seule opération de service avec la valeur « \* » affectée à la propriété <xref:System.ServiceModel.OperationContractAttribute.Action%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-153">A service contract can have only one service operation with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*".</span></span> <span data-ttu-id="fb50e-154">Tout groupe de contrats de service hébergé sur le même listenUri qu’une classe de service implémente peut avoir de nombreuses opérations de service avec le <xref:System.ServiceModel.OperationContractAttribute.Action%2A> propriété la valeur «\*» lors de la <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> est définie sur `false`.</span><span class="sxs-lookup"><span data-stu-id="fb50e-154">Any group of service contracts hosted at the same listenUri that a service class implements can have many service operations with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" when the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property is set to `false`.</span></span> <span data-ttu-id="fb50e-155">Toutefois, une seule de ces opérations de service peut avoir la <xref:System.ServiceModel.OperationContractAttribute.Action%2A> propriété la valeur «\*» et le <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> sur true.</span><span class="sxs-lookup"><span data-stu-id="fb50e-155">However, only one of those service operations can have the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" and the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property set to true.</span></span> <span data-ttu-id="fb50e-156">Pour plus d'informations, consultez <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-156">For more details, see <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb50e-157">L'exemple suivant est un service qui utilise les propriétés <xref:System.ServiceModel.OperationContractAttribute.Action%2A> et <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> pour contrôler explicitement les actions SOAP des messages d'entrée et de sortie (ou de réponse) et la propriété <xref:System.ServiceModel.OperationContractAttribute.Name%2A> pour contrôler le nom de l'opération dans les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="fb50e-157">The following example is a service that uses the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties to explicitly control the SOAP actions of both the input and output (or reply) messages, and the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to control the name of the operation in metadata.</span></span> <span data-ttu-id="fb50e-158">Enfin, l'application utilise également une valeur d'<xref:System.ServiceModel.OperationContractAttribute.Action%2A> de « \* » pour indiquer une méthode qui gère les messages non reconnus.</span><span class="sxs-lookup"><span data-stu-id="fb50e-158">Finally, the application also uses an <xref:System.ServiceModel.OperationContractAttribute.Action%2A> value of "\*" to indicate a method that handles unrecognized messages.</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute_properties/vb/services.vb#1)]  
  
 <span data-ttu-id="fb50e-159">Un service qui implémente ce contrat envoie des messages qui ressemblent à l'exemple suivant :</span><span class="sxs-lookup"><span data-stu-id="fb50e-159">A service that implements this contract sends messages that look like the following example:</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb50e-160">La valeur est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-160">The value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncPattern">
      <MemberSignature Language="C#" Value="public bool AsyncPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsyncPattern" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.AsyncPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPattern As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsyncPattern { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb50e-161">Indique qu’une opération est implémentée de façon asynchrone à l’aide d’une paire de méthodes <see langword="Begin" />&lt;*NomMéthode*&gt; et <see langword="End" />&lt;*NomMéthode*&gt; dans un contrat de service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-161">Indicates that an operation is implemented asynchronously using a <see langword="Begin" />&lt;*methodName*&gt; and <see langword="End" />&lt;*methodName*&gt; method pair in a service contract.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fb50e-162">
            <see langword="true" /> Si le <see langword="Begin" /> &lt; *methodName*&gt;est mise en correspondance par une <see langword="End" /> &lt; *methodName* &gt; (méthode) et peut être traitée par le infrastructure en tant qu’opération qui est implémentée comme une paire de méthodes asynchrones sur l’interface de service ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-162">
              <see langword="true" /> if the <see langword="Begin" />&lt;*methodName*&gt;method is matched by an <see langword="End" />&lt;*methodName*&gt; method and can be treated by the infrastructure as an operation that is implemented as an asynchronous method pair on the service interface; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fb50e-163">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-163">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb50e-164">Utilisez la propriété <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> pour générer des opérations de service qui peuvent être appelées de façon asynchrone sur le serveur, le client ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fb50e-164">Use the <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property to build service operations that can be called asynchronously on the server, the client, or both.</span></span> <span data-ttu-id="fb50e-165">La propriété <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> informe l'exécution qu'une méthode `Begin` a une méthode `End` correspondante qui se conforme au modèle de design de méthode asynchrone du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="fb50e-165">The <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property informs the runtime that a `Begin` method has a matched `End` method that conforms to the .NET Framework asynchronous method design pattern.</span></span> <span data-ttu-id="fb50e-166">La génération de méthodes asynchrones de serveur qui implémentent une opération de service augmente l'évolutivité et les performances du serveur sans affecter les clients du service, et est recommandée lorsqu'une opération de service doit retourner quelque chose au client après avoir l'exécution d'une longue opération qui peut être exécutée de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="fb50e-166">Building server asynchronous methods that implement a service operation increases server scalability and performance without affecting the clients of the service, and is recommended when a service operation must return something to the client after performing a lengthy operation that can be performed asynchronously.</span></span>  
  
 <span data-ttu-id="fb50e-167">Les clients restent non affectés car la paire de méthodes asynchrones sur le serveur est un détail d'implémentation qui n'affecte pas la description WSDL (Web Services Description Language) sous-jacente de l'opération.</span><span class="sxs-lookup"><span data-stu-id="fb50e-167">Clients remain unaffected because the asynchronous method pair on the server is an implementation detail that does not affect the underlying Web Services Description Language (WSDL) description of the operation.</span></span> <span data-ttu-id="fb50e-168">Ces méthodes apparaissent aux clients comme une seule opération avec `<input>` et corrélés `<output>` messages.</span><span class="sxs-lookup"><span data-stu-id="fb50e-168">Such methods appear to clients as a single operation with `<input>` and correlated `<output>` messages.</span></span> <span data-ttu-id="fb50e-169">WCF achemine automatiquement les messages entrants vers le `Begin` \< *methodName*> méthode et achemine les résultats de la `End` \< *methodName*> appeler dans le message sortant.</span><span class="sxs-lookup"><span data-stu-id="fb50e-169">WCF automatically routes inbound messages to the `Begin`\<*methodName*> method and routes the results of the `End`\<*methodName*> call to the outbound message.</span></span> <span data-ttu-id="fb50e-170">Par conséquent, les canaux clients peuvent représenter la paire de méthodes en tant qu’opération synchrone unique ou comme une paire d’opérations asynchrones.</span><span class="sxs-lookup"><span data-stu-id="fb50e-170">Client channels, therefore, can represent the method pair as either a single synchronous operation or as an asynchronous operation pair.</span></span> <span data-ttu-id="fb50e-171">Dans tous les cas, la représentation du client n'affecte en aucune façon l'implémentation asynchrone sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="fb50e-171">In no case does the client representation affect the asynchronous implementation on the server in any way.</span></span>  
  
 <span data-ttu-id="fb50e-172">Les contrats de client peuvent utiliser la propriété <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> pour indiquer une paire de méthodes asynchrones que le client peut utiliser pour appeler l'opération de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="fb50e-172">Client contracts can use the <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property to indicate an asynchronous method pair that the client can use to invoke the operation asynchronously.</span></span> <span data-ttu-id="fb50e-173">En règle générale, les applications clientes utilisent le [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) outil et la `/async` option pour générer un `Begin` \< *methodName*> et `End` \< *methodName*> paire de méthodes que le client peut utiliser pour appeler l’opération de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="fb50e-173">Typically, client applications use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) tool and the `/async` option to generate a `Begin`\<*methodName*> and `End`\<*methodName*> method pair that the client can use to invoke the operation asynchronously.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb50e-174">Si une opération de service a à la fois une version asynchrone et une version synchrone, le comportement par défaut sur le service est d’appeler la version synchrone.</span><span class="sxs-lookup"><span data-stu-id="fb50e-174">If a service operation has both an asynchronous and a synchronous version, the default behavior on the service is to invoke the synchronous version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb50e-175">L'exemple de code suivant présente un canal client à un contrat de service qui inclut à la fois une version synchrone de `Add` et une version asynchrone.</span><span class="sxs-lookup"><span data-stu-id="fb50e-175">The following code example shows a client channel to a service contract that includes both a synchronous version of `Add` and an asynchronous version.</span></span> <span data-ttu-id="fb50e-176">Si l'interface de contrat est utilisée sur le client, l'opération `BeginAdd` et l'opération `Add` appellent une méthode sur le serveur qui peut ou peut ne pas être synchrone.</span><span class="sxs-lookup"><span data-stu-id="fb50e-176">If the contract interface is used on the client, both the `BeginAdd` and the `Add` operation invoke a method on the server that may or may not be synchronous.</span></span> <span data-ttu-id="fb50e-177">Si le contrat est utilisé pour implémenter le service, la valeur par défaut est que les requêtes entrantes sont distribuées à la méthode synchrone.</span><span class="sxs-lookup"><span data-stu-id="fb50e-177">If the contract is used to implement the service, the default is that incoming requests are dispatched to the synchronous method.</span></span>  
  
```csharp  
[ServiceContract]  
public interface IAddTwoNumbers  
{  
    // If the asynchronous method pair  
    // appears on the client channel, the client can call   
    // them asynchronously to prevent blocking.  
    [OperationContract (AsyncPattern=true)]  
    IAsyncResult BeginAdd(int a, int b, AsyncCallback cb, AsyncState s);  
  
    [OperationContract]  
    int EndAdd(IAsyncResult r);  
  
    // This is a synchronous version of the BeginAdd/EndAdd pair.  
    // It appears in the client channel code by default.   
    [OperationContract]  
    int Add(int a, int b);  
   }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb50e-178">Obtient une valeur qui indique si les messages pour cette opération doivent être chiffrés, signés ou les deux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-178">Gets a value that indicates whether the messages for this operation must be encrypted, signed, or both.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fb50e-179">
            <see langword="true" /> si la propriété <see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /> a une valeur autre que <see cref="F:System.Net.Security.ProtectionLevel.None" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-179">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /> property is set to a value other than <see cref="F:System.Net.Security.ProtectionLevel.None" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fb50e-180">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-180">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb50e-181">Utilisez la propriété <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> pour déterminer si un niveau de protection spécifique est requis par les messages de cette opération.</span><span class="sxs-lookup"><span data-stu-id="fb50e-181">Use the <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> property to determine whether a specific protection level is required by the messages of this operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitiating">
      <MemberSignature Language="C#" Value="public bool IsInitiating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitiating" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.IsInitiating" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInitiating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitiating { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb50e-182">Obtient ou définit une valeur qui indique si la méthode implémente une opération qui peut initialiser une session sur le serveur (si une telle session existe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-182">Gets or sets a value that indicates whether the method implements an operation that can initiate a session on the server (if such a session exists).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fb50e-183">
            <see langword="true" /> si l'opération est autorisée à initialiser une session sur le serveur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-183">
              <see langword="true" /> if the operation is permitted to initiate a session on the server, otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fb50e-184">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-184">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb50e-185">La propriété <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> contrôle si une opération peut être la première appelée lors de la création d'une session.</span><span class="sxs-lookup"><span data-stu-id="fb50e-185">The <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property controls whether an operation can be the first operation called when a session is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb50e-186">La valeur de <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> doit être <xref:System.ServiceModel.SessionMode.Allowed> ou <xref:System.ServiceModel.SessionMode.Required> et la liaison utilisée doit requérir ou autoriser des sessions pour que la propriété <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> fonctionne correctement.</span><span class="sxs-lookup"><span data-stu-id="fb50e-186">The value of <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> must be either <xref:System.ServiceModel.SessionMode.Allowed> or <xref:System.ServiceModel.SessionMode.Required> and the binding used must require or allow sessions for the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property to work properly.</span></span>  
  
 <span data-ttu-id="fb50e-187">La valeur par défaut est `true`, ce qui signifie qu'une opération peut être la première appelée sur un canal.</span><span class="sxs-lookup"><span data-stu-id="fb50e-187">The default is `true`, which means that an operation can be the first one called on a channel.</span></span> <span data-ttu-id="fb50e-188">Excepté l'appel à la méthode, les appels suivants vers la méthode d'initialisation sont sans effet.</span><span class="sxs-lookup"><span data-stu-id="fb50e-188">Subsequent calls to the initiating method have no effect, other than to call the method.</span></span> <span data-ttu-id="fb50e-189">Aucune autre session n'est créée.</span><span class="sxs-lookup"><span data-stu-id="fb50e-189">No other sessions are created.</span></span> <span data-ttu-id="fb50e-190">Si le contrat n'utilise pas de session, l'affectation de la valeur <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> `false` est ignorée.</span><span class="sxs-lookup"><span data-stu-id="fb50e-190">If the contract does not make use of a session, setting <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> to `false` is ignored.</span></span>  
  
 <span data-ttu-id="fb50e-191">En général, vous affectez <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> à `false` pour forcer les clients à appeler une autre méthode sur le service avant qu'ils ne puissent invoquer celle-ci.</span><span class="sxs-lookup"><span data-stu-id="fb50e-191">Typically, you set <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> to `false` to force clients to call another method on the service before they can invoke this one.</span></span> <span data-ttu-id="fb50e-192">Par exemple, si votre service a une série d'opérations qui dépendent d'un numéro d'ID d'ordre, vous pouvez affectez à <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> la valeur `true` pour une opération de service `GetOrderId` et affecter à toutes les opérations de service restantes la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="fb50e-192">For example, if your service has a series of operations that depend on an order ID number, you can set <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> to `true` for a `GetOrderId` service operation and set all remaining service operations to `false`.</span></span> <span data-ttu-id="fb50e-193">Cela garantit que chaque nouveau client obtient un ID d'ordre avant d'utiliser les autres méthodes exposées par le service.</span><span class="sxs-lookup"><span data-stu-id="fb50e-193">This ensures that each new client obtains an order ID prior to using the other methods exposed by the service.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb50e-194">Il existe une interaction entre <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> et la propriété <xref:System.ServiceModel.OperationContractAttribute.Action%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-194">There is an interaction between <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> and the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property.</span></span> <span data-ttu-id="fb50e-195">Un contrat de service peut avoir une seule opération de service avec la valeur « \* » affectée à la propriété <xref:System.ServiceModel.OperationContractAttribute.Action%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-195">A service contract can have only one service operation with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*".</span></span> <span data-ttu-id="fb50e-196">Tout groupe de contrats de service hébergé sur le même URI d’écoute qu’une classe de service implémente peut avoir de nombreuses opérations de service avec le <xref:System.ServiceModel.OperationContractAttribute.Action%2A> propriété la valeur «\*» lors de la <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> est définie sur `false`.</span><span class="sxs-lookup"><span data-stu-id="fb50e-196">Any group of service contracts hosted at the same listen URI that a service class implements can have many service operations with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" when the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property is set to `false`.</span></span> <span data-ttu-id="fb50e-197">Toutefois, une seule de ces méthodes de service peut avoir la <xref:System.ServiceModel.OperationContractAttribute.Action%2A> propriété la valeur «\*» et le <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> propriété la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="fb50e-197">However, only one of those service methods can have the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" and the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property set to `true`.</span></span>  
  
 <span data-ttu-id="fb50e-198">Si un service reçoit un message pour une opération qui n'est pas une opération d'initialisation, le service retourne une erreur SOAP ActionNotSupported.</span><span class="sxs-lookup"><span data-stu-id="fb50e-198">If a service receives a message for a non-initiating operation, the service returns an ActionNotSupported SOAP fault.</span></span> <span data-ttu-id="fb50e-199">Le client rencontre ceci comme une <xref:System.ServiceModel.FaultException>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-199">The client experiences this as an <xref:System.ServiceModel.FaultException>.</span></span> <span data-ttu-id="fb50e-200">Si un client appelle d'abord une opération qui n'est pas une opération d'initialisation, l'exécution du client lève une <xref:System.InvalidOperationException?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-200">If a client calls a non-initiating operation first, the client runtime throws an <xref:System.InvalidOperationException?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fb50e-201">Pour plus d’informations, consultez [à l’aide de Sessions](~/docs/framework/wcf/using-sessions.md).</span><span class="sxs-lookup"><span data-stu-id="fb50e-201">For more information, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb50e-202">L'exemple suivant est un service qui implémente un contrat de service qui spécifie trois méthodes.</span><span class="sxs-lookup"><span data-stu-id="fb50e-202">The following example is a service that implements a service contract that specifies three methods.</span></span> <span data-ttu-id="fb50e-203">Le service requiert une session.</span><span class="sxs-lookup"><span data-stu-id="fb50e-203">The service requires a session.</span></span> <span data-ttu-id="fb50e-204">Si le premier appel d'un appelant est destiné à une opération autre que `MethodOne`, le canal est refusé et une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="fb50e-204">If a caller's first call is to any operation other than `MethodOne`, the channel is refused and an exception is thrown.</span></span> <span data-ttu-id="fb50e-205">Lorsqu'un appelant démarre une session en appelant `MethodOne`, cet appelant peut arrêter la session de communication à tout moment en appelant `MethodThree`.</span><span class="sxs-lookup"><span data-stu-id="fb50e-205">When a caller initiates a session by calling `MethodOne`, that caller can terminate the communication session at any time by calling `MethodThree`.</span></span> <span data-ttu-id="fb50e-206">`MethodTwo` peut être appelé sans limite au cours d'une session.</span><span class="sxs-lookup"><span data-stu-id="fb50e-206">`MethodTwo` can be called any number of times during a session.</span></span>  
  
```csharp  
[ServiceContract(SessionMode=SessionMode.Required)]  
public class InitializeAndTerminateService  
{  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=true,  
    IsTerminating=false  
  )]  
  public void MethodOne()  
  {  
    return;  
  }  
  
  [OperationContract(  
    IsInitiating=false,  
    IsTerminating=false  
  )]  
  public int MethodTwo(int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=false,  
    IsTerminating=true  
  )]  
  public void MethodThree()  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOneWay">
      <MemberSignature Language="C#" Value="public bool IsOneWay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOneWay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.IsOneWay" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOneWay { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb50e-207">Obtient ou définit une valeur qui indique si une opération retourne un message de réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-207">Gets or sets a value that indicates whether an operation returns a reply message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fb50e-208">
            <see langword="true" /> si cette méthode reçoit un message de demande et ne retourne aucun message de réponse ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-208">
              <see langword="true" /> if this method receives a request message and returns no reply message; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fb50e-209">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-209">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb50e-210">Utilisez la propriété <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> pour indiquer qu'une opération ne retourne aucun message de réponse.</span><span class="sxs-lookup"><span data-stu-id="fb50e-210">Use the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property to indicate that an operation does not return a reply message.</span></span> <span data-ttu-id="fb50e-211">Ce type d'opération est utile pour les notifications ou la communication de style d'événement, notamment dans la communication bidirectionnelle.</span><span class="sxs-lookup"><span data-stu-id="fb50e-211">This type of operation is useful for notifications or event-style communication, especially in two-way communication.</span></span> <span data-ttu-id="fb50e-212">Sans attendre de message de réponse sous-jacent, les appelants d'opérations unidirectionnelles n'ont aucun moyen direct de détecter une défaillance au cours du traitement du message de demande.</span><span class="sxs-lookup"><span data-stu-id="fb50e-212">Without waiting for an underlying response message, callers of one-way operations have no direct way to detect a failure in processing the request message.</span></span> <span data-ttu-id="fb50e-213">(Les applications de service qui utilisent des canaux fiables et des opérations unidirectionnelles peuvent détecter un échec de remise de message au niveau du canal.</span><span class="sxs-lookup"><span data-stu-id="fb50e-213">(Service applications that use reliable channels and one-way operations can detect a message delivery failure at the channel level.</span></span> <span data-ttu-id="fb50e-214">Pour plus d’informations, consultez [vue d’ensemble des Sessions fiables](~/docs/framework/wcf/feature-details/reliable-sessions-overview.md).)</span><span class="sxs-lookup"><span data-stu-id="fb50e-214">For details, see [Reliable Sessions Overview](~/docs/framework/wcf/feature-details/reliable-sessions-overview.md).)</span></span>  
  
 <span data-ttu-id="fb50e-215">Dans les applications de services en duplex (ou bidirectionnels) dans lesquelles le client et le serveur communiquent indépendamment l'un avec l'autre, un canal client peut utiliser la propriété <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> sur ses méthodes pour indiquer que le service peut effectuer des appels unidirectionnels au client que le client peut traiter en tant qu'événements.</span><span class="sxs-lookup"><span data-stu-id="fb50e-215">In duplex (or two-way) service-oriented applications in which the client and server communicate with each other independently, a client channel can use the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property on its methods to indicate that the service can make one-way calls to the client that the client can treat as events.</span></span> <span data-ttu-id="fb50e-216">Aucun appel de retour ou message n'est généré étant donné que le service n'attend pas de message de réponse.</span><span class="sxs-lookup"><span data-stu-id="fb50e-216">No return call or message is generated because the service does not expect any response message.</span></span>  
  
 <span data-ttu-id="fb50e-217">Si la propriété <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> a la valeur `false` (valeur par défaut), même les méthodes qui retournent `void` génèrent un message de réponse.</span><span class="sxs-lookup"><span data-stu-id="fb50e-217">If the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property is set to `false` (the default), even methods that return `void` result in a reply message.</span></span> <span data-ttu-id="fb50e-218">Dans ce cas, l'infrastructure crée et envoie un message vide pour indiquer à l'appelant que la méthode a été retournée.</span><span class="sxs-lookup"><span data-stu-id="fb50e-218">In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</span></span> <span data-ttu-id="fb50e-219">(L'utilisation de cette approche permet à l'infrastructure de retourner des erreurs SOAP au client.) L'affectation de <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> à `true` est la seule façon d'annuler la création et la distribution d'un message de réponse.</span><span class="sxs-lookup"><span data-stu-id="fb50e-219">(Using this approach enables the infrastructure to send SOAP faults back to the client.) Setting <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> to `true` is the only way to cancel the creation and dispatch of a response message.</span></span>  
  
 <span data-ttu-id="fb50e-220">Les méthodes unidirectionnelles ne doivent pas retourner de valeur ou avoir de paramètres `ref` ou `out` ; sinon, une exception <xref:System.InvalidOperationException?displayProperty=nameWithType> est levée.</span><span class="sxs-lookup"><span data-stu-id="fb50e-220">One-way methods must not return a value or have `ref` or `out` parameters; otherwise a <xref:System.InvalidOperationException?displayProperty=nameWithType> exception is thrown.</span></span>  
  
 <span data-ttu-id="fb50e-221">Spécifier qu'une opération est une opération unidirectionnelle signifie uniquement qu'il n'y a pas de message de réponse.</span><span class="sxs-lookup"><span data-stu-id="fb50e-221">Specifying that an operation is a one-way operation means only that there is no response message.</span></span> <span data-ttu-id="fb50e-222">Il est possible de bloquer si une connexion ne peut pas être établie, ou si le message sortant est très grand, ou si le service ne peut pas lire les informations entrantes assez rapidement.</span><span class="sxs-lookup"><span data-stu-id="fb50e-222">It is possible to block if a connection cannot be made, or the outbound message is very large, or if the service cannot read inbound information fast enough.</span></span> <span data-ttu-id="fb50e-223">Si un client a besoin d'un appel non bloquant, générez des opérations <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-223">If a client requires a non-blocking call, generate <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> operations.</span></span> <span data-ttu-id="fb50e-224">Pour plus d’informations, consultez [unidirectionnel Services](~/docs/framework/wcf/feature-details/one-way-services.md) et [les Services de l’accès à l’aide d’un Client WCF](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md).</span><span class="sxs-lookup"><span data-stu-id="fb50e-224">For more information, see [One-Way Services](~/docs/framework/wcf/feature-details/one-way-services.md) and [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb50e-225">L'exemple suivant est un service qui implémente un contrat de service qui spécifie trois opérations.</span><span class="sxs-lookup"><span data-stu-id="fb50e-225">The following example is a service that implements a service contract that specifies three operations.</span></span> <span data-ttu-id="fb50e-226">Deux des méthodes implémentent des opérations bidirectionnelles, qui retournent des messages de réponse sous-jacents à l'appelant, quelle que soit la valeur de retour.</span><span class="sxs-lookup"><span data-stu-id="fb50e-226">Two of the methods implement two-way operations, which return underlying response messages to the caller no matter what the return value is.</span></span> <span data-ttu-id="fb50e-227">La troisième méthode implémente une opération qui reçoit un appel (un message entrant sous-jacent) mais ne retourne aucun message de réponse sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="fb50e-227">The third method implements an operation that receives a call (an underlying inbound message) but returns no underlying response message.</span></span>  
  
```csharp  
[ServiceContract]  
public class OneAndTwoWay  
{  
  // The client waits until a response message appears.  
  [OperationContract]  
  public int MethodOne (int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  // The client waits until an empty response message appears.  
  [OperationContract]  
  public void MethodTwo (int x)  
  {  
    return;  
  }  
  
  // The client returns as soon as an outbound message  
  // is queued for dispatch to the service; no response  
  // message is generated or sent.  
  [OperationContract(IsOneWay=true)]  
  public void MethodThree (int x)  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTerminating">
      <MemberSignature Language="C#" Value="public bool IsTerminating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTerminating" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.IsTerminating" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTerminating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTerminating { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb50e-228">Obtient ou définit une valeur qui indique si l'opération de service conduit le serveur à fermer la session après l'envoi du message de réponse (le cas échéant).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-228">Gets or sets a value that indicates whether the service operation causes the server to close the session after the reply message, if any, is sent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fb50e-229">
            <see langword="true" /> si l'opération conduit le serveur à fermer la session ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-229">
              <see langword="true" /> if the operation causes the server to close the session, otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fb50e-230">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-230">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb50e-231">Utilisez la propriété <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> pour indiquer que l'appel d'une opération de service termine la session de communication.</span><span class="sxs-lookup"><span data-stu-id="fb50e-231">Use the <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> property to indicate that calling a service operation terminates the communication session.</span></span>  
  
 <span data-ttu-id="fb50e-232">Dans une application cliente, une valeur de <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> la valeur `true` indique à WCF pour fermer le canal après l’arrivée de la réponse.</span><span class="sxs-lookup"><span data-stu-id="fb50e-232">In a client application, a value of <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> set to `true` instructs WCF to close the channel after the reply arrives.</span></span>  
  
 <span data-ttu-id="fb50e-233">Dans un service, un minuteur est défini et le canal abandonne si le client ne ferme pas le canal avant la fin du délai.</span><span class="sxs-lookup"><span data-stu-id="fb50e-233">In a service, a timer is set and the channel aborts if the client does not close the channel within that period.</span></span>  
  
 <span data-ttu-id="fb50e-234">Pour plus d’informations sur l’utilisation de cette propriété avec les sessions, consultez [à l’aide de Sessions](~/docs/framework/wcf/using-sessions.md).</span><span class="sxs-lookup"><span data-stu-id="fb50e-234">For more information about using this property with sessions, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb50e-235">Si un appelant écoute l'événement <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> pour une opération <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType>, il est possible de bloquer lors de la réception de la réponse.</span><span class="sxs-lookup"><span data-stu-id="fb50e-235">If a caller is listening for the <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> event for an <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> operation, it is possible to block when the response is received.</span></span> <span data-ttu-id="fb50e-236">Pour gérer correctement cela, il convient de planifier des travaux sur un autre thread lorsque <xref:System.ServiceModel.OperationContext.OperationCompleted> est déclenché, puis de retourner immédiatement à partir de ce gestionnaire d'événements.</span><span class="sxs-lookup"><span data-stu-id="fb50e-236">The proper way to handle this is to schedule work on another thread when <xref:System.ServiceModel.OperationContext.OperationCompleted> is raised and then immediately return from that event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb50e-237">L'exemple suivant est un service qui implémente un contrat de service qui spécifie trois opérations.</span><span class="sxs-lookup"><span data-stu-id="fb50e-237">The following example is a service that implements a service contract that specifies three operations.</span></span> <span data-ttu-id="fb50e-238">Le service requiert une connexion avec état.</span><span class="sxs-lookup"><span data-stu-id="fb50e-238">The service requires a stateful connection.</span></span> <span data-ttu-id="fb50e-239">Si le premier appel d'un appelant est destiné à une opération autre que `MethodOne`, le canal est refusé et une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="fb50e-239">If a caller's first call is to any operation other than `MethodOne`, the channel is refused and an exception is thrown.</span></span> <span data-ttu-id="fb50e-240">Lorsqu'un appelant démarre une session en appelant `MethodOne`, cet appelant peut arrêter la session de communication à tout moment en appelant `MethodThree`.</span><span class="sxs-lookup"><span data-stu-id="fb50e-240">When a caller initiates a session by calling `MethodOne`, that caller can terminate the communication session at any time by calling `MethodThree`.</span></span> <span data-ttu-id="fb50e-241">`MethodTwo` peut être appelé sans limite au cours d'une session.</span><span class="sxs-lookup"><span data-stu-id="fb50e-241">`MethodTwo` can be called any number of times during a session.</span></span>  
  
```csharp  
[ServiceContractAttribute(SessionMode=SessionMode.Required)]  
public class InitializeAndTerminateService  
{  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=true,  
    IsTerminating=false  
  )]  
  public void MethodOne()  
  {  
    return;  
  }  
  
  [OperationContract(  
    IsInitiating=false,  
    IsTerminating=false  
  )]  
  public int MethodTwo(int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=false  
    IsTerminating=true  
  )]  
  public void MethodThree()  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb50e-242">Obtient ou définit le nom de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-242">Gets or sets the name of the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fb50e-243">Nom de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-243">The name of the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb50e-244">Utilisez le <xref:System.ServiceModel.OperationContractAttribute.Name%2A> propriété pour remplacer le <`operation`> nom de l’élément dans le fichier WSDL.</span><span class="sxs-lookup"><span data-stu-id="fb50e-244">Use the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to override the <`operation`> element name in WSDL.</span></span> <span data-ttu-id="fb50e-245">Le nom d'opération par défaut est celui de la méthode d'implémentation.</span><span class="sxs-lookup"><span data-stu-id="fb50e-245">The default operation name is the name of the implementing method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb50e-246">L'exemple de code suivant utilise la propriété <xref:System.ServiceModel.OperationContractAttribute.Name%2A> pour déclarer le nom de l'opération comme exposée dans les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="fb50e-246">The following code example uses the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to declare the name of the operation as exposed in metadata.</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute_properties/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb50e-247">
            <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-247">
              <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fb50e-248">La valeur est une chaîne vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-248">The value is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb50e-249">Obtient ou définit une valeur qui spécifie si les messages d'une opération doivent être chiffrés, signés ou les deux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-249">Gets or sets a value that specifies whether the messages of an operation must be encrypted, signed, or both.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fb50e-250">Une des valeurs de <see cref="T:System.Net.Security.ProtectionLevel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-250">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span>
          </span>
          <span data-ttu-id="fb50e-251">La valeur par défaut est <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-251">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb50e-252">Utilisez la propriété <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> pour contrôler si les messages d'une opération doivent être chiffrés, signés ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fb50e-252">Use the <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property to control whether the messages of an operation must be encrypted, signed, or both.</span></span> <span data-ttu-id="fb50e-253">La valeur définie ici est la valeur par défaut pour tous les messages spécifiés pour cette opération, sauf si une portée plus restreinte se substitue à cette valeur.</span><span class="sxs-lookup"><span data-stu-id="fb50e-253">The value set here is the default value for all messages specified for this operation unless a narrower scope overrides this value.</span></span>  
  
 <span data-ttu-id="fb50e-254">Il est important de se rappeler que le comportement de protection au moment de l'exécution est la combinaison des valeurs de niveau de protection affectées aux propriétés suivantes.</span><span class="sxs-lookup"><span data-stu-id="fb50e-254">It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</span></span> <span data-ttu-id="fb50e-255">Ces propriétés ont une structure hiérarchique.</span><span class="sxs-lookup"><span data-stu-id="fb50e-255">These properties have a hierarchical structure.</span></span> <span data-ttu-id="fb50e-256">La définition de la valeur la plus à l'extérieur établit le paramètre par défaut pour toutes les portées plus restreintes, sauf si une valeur différente est définie explicitement pour une portée plus restreinte.</span><span class="sxs-lookup"><span data-stu-id="fb50e-256">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="fb50e-257">Dans ce cas, la valeur externe reste la valeur par défaut pour toutes les portées plus restreintes à l'exception de celles qui sont spécifiquement définies.</span><span class="sxs-lookup"><span data-stu-id="fb50e-257">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="fb50e-258">Par exemple, si <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> a la valeur <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> et qu'aucune autre portée plus étroite n'a de paramètres de niveau de protection, tous les messages dans un contrat d'opération sont chiffrés et signés, y compris les messages d'erreur.</span><span class="sxs-lookup"><span data-stu-id="fb50e-258">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</span></span> <span data-ttu-id="fb50e-259">Toutefois, si vous affectez au jeu <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> de l'une de ces opérations, la valeur <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, les messages pour cette opération sont signés mais tous les autres messages dans le contrat sont chiffrés et signés.</span><span class="sxs-lookup"><span data-stu-id="fb50e-259">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</span></span>  
  
 <span data-ttu-id="fb50e-260">Pour plus d’informations sur les niveaux de protection et de leurs hypothèses et étendues, consultez [au niveau de Protection de présentation](~/docs/framework/wcf/understanding-protection-level.md).</span><span class="sxs-lookup"><span data-stu-id="fb50e-260">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="fb50e-261">Les portées auxquelles ces valeurs sont affectées sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="fb50e-261">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="fb50e-262">Propriété <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> sur <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-262">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fb50e-263">Propriété <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> sur <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-263">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fb50e-264">Lorsque aucun niveau de protection n'est spécifié explicitement sur le contrat et que la liaison sous-jacente prend en charge la sécurité (au niveau du transport ou du message), le niveau de protection effectif pour l'ensemble du contrat est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-264">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fb50e-265">Si la liaison ne prend pas en charge la sécurité (comme <xref:System.ServiceModel.BasicHttpBinding>), le <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> effectif est <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> pour l'ensemble du contrat.</span><span class="sxs-lookup"><span data-stu-id="fb50e-265">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="fb50e-266">Le résultat est que selon la liaison du point de terminaison, les clients peuvent avoir besoin d'une protection de sécurité au niveau du message ou du transport différente même lorsque le contrat spécifie <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fb50e-266">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fb50e-267">La valeur ne fait pas partie des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-267">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplyAction">
      <MemberSignature Language="C#" Value="public string ReplyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyAction" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.ReplyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReplyAction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb50e-268">Obtient ou définit la valeur de l'action SOAP pour le message de réponse de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-268">Gets or sets the value of the SOAP action for the reply message of the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fb50e-269">Valeur de l'action SOAP pour le message de réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-269">The value of the SOAP action for the reply message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb50e-270">En plus de spécifier une valeur particulière pour l'en-tête d'action du message de réponse, vous pouvez également spécifier la chaîne « \* » (astérisque).</span><span class="sxs-lookup"><span data-stu-id="fb50e-270">In addition to specifying a particular value for the action header of the reply message, you can also specify the string "\*" (an asterisk).</span></span> <span data-ttu-id="fb50e-271">Spécification d’un astérisque dans le service fait en sorte que WCF ne pas d’ajouter une action de réponse au message, ce qui est utile si vous programmez directement par rapport aux messages.</span><span class="sxs-lookup"><span data-stu-id="fb50e-271">Specifying an asterisk in the service instructs WCF not to add a reply action to the message, which is useful if you are programming against messages directly.</span></span> <span data-ttu-id="fb50e-272">Spécification d’un astérisque dans une application cliente indique ne pas à valider l’action de réponse WCF.</span><span class="sxs-lookup"><span data-stu-id="fb50e-272">Specifying an asterisk in a client application instructs WCF not to validate the reply action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb50e-273">L'exemple suivant est un service qui utilise les propriétés <xref:System.ServiceModel.OperationContractAttribute.Action%2A> et <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> pour contrôler explicitement les actions SOAP des messages d'entrée et de sortie (ou de réponse).</span><span class="sxs-lookup"><span data-stu-id="fb50e-273">The following example is a service that uses the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties to explicitly control the SOAP actions of both the input and output (or reply) messages.</span></span> <span data-ttu-id="fb50e-274">Il utilise également la propriété <xref:System.ServiceModel.OperationContractAttribute.Name%2A> pour déclarer le nom de l'opération comme exposé dans les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="fb50e-274">It also uses the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to declare the name of the operation as exposed in metadata.</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute_properties/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fb50e-275">
            <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb50e-275">
              <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>