<Type Name="TransferMode" FullName="System.ServiceModel.TransferMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="90db67b16a424a6e6eadb22d2354cd1a4eb11134" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34314082" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum TransferMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TransferMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.TransferMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum TransferMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class TransferMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="9637c-101">Indique si un canal utilise des modes de transmission en continu ou par mise en mémoire tampon pour les messages de demande et de réponse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9637c-101">Indicates whether a channel uses streamed or buffered modes for the transfer of request and response messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9637c-102">Les transports de Windows Communication Foundation (WCF) prennent en charge deux modes de transfert de messages dans chaque direction :</span><span class="sxs-lookup"><span data-stu-id="9637c-102">Windows Communication Foundation (WCF) transports support two modes of transferring messages in each direction:</span></span>  
  
-   <span data-ttu-id="9637c-103">Les transferts mis en mémoire tampon conservent la totalité des messages en mémoire tampon tant que leur transfert n'est pas terminé.</span><span class="sxs-lookup"><span data-stu-id="9637c-103">Buffered transfers hold the entire message in a memory buffer until the transfer is complete.</span></span>  
  
-   <span data-ttu-id="9637c-104">Les transferts en continu ne mettent que les en-têtes de message en mémoire tampon et exposent le corps du message sous forme de flux continu, dont des portions peuvent être lues progressivement.</span><span class="sxs-lookup"><span data-stu-id="9637c-104">Streamed transfers only buffer the message headers and expose the message body as a stream, from which smaller portions can be read at a time.</span></span>  
  
 <span data-ttu-id="9637c-105">Définir le mode de transfert pour transmis en continu permet de diffusion en continu de communication dans les deux sens.</span><span class="sxs-lookup"><span data-stu-id="9637c-105">Setting the transfer mode to Streamed enables streaming communication in both directions.</span></span> <span data-ttu-id="9637c-106">Définir le mode de transfert vers StreamedRequest ou StreamedResponse permet de communication de diffusion en continu uniquement dans le sens spécifié.</span><span class="sxs-lookup"><span data-stu-id="9637c-106">Setting the transfer mode to StreamedRequest or StreamedResponse enables streaming communication only in the indicated direction.</span></span>  
  
 <span data-ttu-id="9637c-107">Les transferts en flux continu peuvent améliorer l'évolutivité d'un service car ils évitent d'avoir à recourir à de grandes mémoires tampons.</span><span class="sxs-lookup"><span data-stu-id="9637c-107">Streamed transfers can improve the scalability of a service by eliminating the need for large memory buffers.</span></span> <span data-ttu-id="9637c-108">Le gain réel d'évolutivité dépend de la taille des messages transférés.</span><span class="sxs-lookup"><span data-stu-id="9637c-108">Whether changing the transfer mode actually improves scalability in practice depends on the size of the messages being transferred.</span></span> <span data-ttu-id="9637c-109">Il est plus significatif dans le cas de messages volumineux.</span><span class="sxs-lookup"><span data-stu-id="9637c-109">Improvements in scalability should be most evident when large messages use streamed instead of buffered transfers.</span></span>  
  
 <span data-ttu-id="9637c-110">Par défaut, les transports HTTP, TCP/IP et de canal nommé utilisent la mise en mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="9637c-110">By default, the HTTP, TCP/IP and named pipe transports use buffered message transfers.</span></span> <span data-ttu-id="9637c-111">Vous pouvez donner à <xref:System.ServiceModel.TransferMode.Streamed> la valeur des liaisons fournies par le système <xref:System.ServiceModel.BasicHttpBinding>, <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.NetNamedPipeBinding> à l'aide des propriétés du mode de transfert exposées.</span><span class="sxs-lookup"><span data-stu-id="9637c-111">You can set the values of <xref:System.ServiceModel.TransferMode.Streamed> on the <xref:System.ServiceModel.BasicHttpBinding>, <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.NetNamedPipeBinding> system-provided bindings using the transfer mode properties exposed on them.</span></span> <span data-ttu-id="9637c-112">Le mode peut recevoir la valeur <xref:System.ServiceModel.NetTcpBinding>, par exemple, à l'aide de la propriété <xref:System.ServiceModel.NetTcpBinding.TransferMode%2A>.</span><span class="sxs-lookup"><span data-stu-id="9637c-112">The mode can be set on the <xref:System.ServiceModel.NetTcpBinding>, for example, by using the <xref:System.ServiceModel.NetTcpBinding.TransferMode%2A> property.</span></span> <span data-ttu-id="9637c-113">Il peut également être réglé dans la section de configuration pour la liaison.</span><span class="sxs-lookup"><span data-stu-id="9637c-113">It can also be set in the configuration section for the binding.</span></span>  
  
 <span data-ttu-id="9637c-114">Pour les liaisons qui n'exposent pas la propriété du mode de transfert, celui-ci peut être défini sur l'élément de liaison de transport, et cet élément peut ensuite être ajouté à une liaison personnalisée.</span><span class="sxs-lookup"><span data-stu-id="9637c-114">For bindings that do not expose the transfer mode property, the transfer mode can be set on the binding element of the transport and this element can then be added to a custom binding.</span></span> <span data-ttu-id="9637c-115">Par exemple, créez <xref:System.ServiceModel.Channels.HttpTransportBindingElement> et utilisez la propriété <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A> pour définir le mode de transfert lors de la création d'une liaison personnalisée.</span><span class="sxs-lookup"><span data-stu-id="9637c-115">For example, create an <xref:System.ServiceModel.Channels.HttpTransportBindingElement> and use the <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A> property to set the transfer mode when creating a custom binding.</span></span> <span data-ttu-id="9637c-116">Le mode de transfert peut également être défini dans la section de configuration pour la liaison personnalisée.</span><span class="sxs-lookup"><span data-stu-id="9637c-116">The transfer mode can also be set in the configuration section for the custom binding.</span></span>  
  
 <span data-ttu-id="9637c-117">Le choix de l'un ou l'autre mode de transfert (mise en mémoire tampon ou flux continu) revient en local au point de terminaison pour les transports HTTP.</span><span class="sxs-lookup"><span data-stu-id="9637c-117">The decision to use either buffered or streamed transfers is a local decision of the endpoint for HTTP transports.</span></span> <span data-ttu-id="9637c-118">Pour les transports HTTP, le mode de transfert ne se propage pas sur une connexion ou sur des serveurs proxy ou d'autres intermédiaires.</span><span class="sxs-lookup"><span data-stu-id="9637c-118">For HTTP transports, the transfer mode does not propagate across a connection, or to proxy servers or other intermediaries.</span></span> <span data-ttu-id="9637c-119">La définition du mode de transfert n'est pas reflétée dans la description du contrat de service.</span><span class="sxs-lookup"><span data-stu-id="9637c-119">Setting the transfer mode is not reflected in the description of the service contract.</span></span> <span data-ttu-id="9637c-120">Après avoir généré un proxy sur un service, vous pouvez (mais ne devez pas) modifier le fichier de configuration des services destinés à être utilisés avec des transferts en continu pour définir le mode de transfert.</span><span class="sxs-lookup"><span data-stu-id="9637c-120">After generating a proxy to a service, you can (it is allowed but not required) edit the configuration file for services intended to be used with streamed transfers to set the transfer mode.</span></span> <span data-ttu-id="9637c-121">Pour les transports TCP et les transports de canal nommé, le mode de transfert est propagé sous forme d'assertion de stratégie.</span><span class="sxs-lookup"><span data-stu-id="9637c-121">For TCP and named pipe transports, the transfer mode is propagated as a policy assertion.</span></span>  
  
 <span data-ttu-id="9637c-122">À l’aide du mode de transfert transmis en continu provoque l’exécution WCF appliquer certaines restrictions.</span><span class="sxs-lookup"><span data-stu-id="9637c-122">Using the Streamed transfer mode causes the WCF runtime to enforce some restrictions.</span></span>  
  
-   <span data-ttu-id="9637c-123">Le contrat des opérations intervenant sur un transport en flux continu peut contenir au maximum un paramètre d'entrée ou de sortie au niveau de la couche du modèle de programmation.</span><span class="sxs-lookup"><span data-stu-id="9637c-123">Operations that occur across a streamed transport can have a contract with at most one input and/or one output parameter at the programming model layer.</span></span> <span data-ttu-id="9637c-124">Ce paramètre correspond au corps entier du message et doit être un <xref:System.ServiceModel.Channels.Message>, un sous-type de <xref:System.IO.Stream> ou implémenter l'interface <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="9637c-124">That parameter corresponds to the entire body of the message and must be a <xref:System.ServiceModel.Channels.Message>, be a subtype of <xref:System.IO.Stream>, or implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span> <span data-ttu-id="9637c-125">Disposer d'une valeur de retour pour une opération équivaut à disposer d'un paramètre de sortie.</span><span class="sxs-lookup"><span data-stu-id="9637c-125">Having a return value for an operation is equivalent to having an output parameter.</span></span>  
  
-   <span data-ttu-id="9637c-126">Certaines fonctionnalités WCF tels que messagerie fiable et la sécurité au niveau du message SOAP s’appuient sur la mise en mémoire tampon des messages pour les transmissions.</span><span class="sxs-lookup"><span data-stu-id="9637c-126">Some WCF features such as Reliable Messaging and SOAP message-level security rely on buffering messages for transmissions.</span></span> <span data-ttu-id="9637c-127">L’utilisation de ces fonctionnalités peut réduire, voire annuler les gains en termes de performances obtenus grâce au flux continu.</span><span class="sxs-lookup"><span data-stu-id="9637c-127">Using these features may reduce or eliminate the performance benefits gained by using streaming.</span></span> <span data-ttu-id="9637c-128">Pour sécuriser un transport en flux continu, utilisez la sécurité de niveau transport uniquement ou la sécurité de mode mixte, qui associe des revendications WS-Security à la sécurité de niveau transport.</span><span class="sxs-lookup"><span data-stu-id="9637c-128">To secure a streamed transport, use transport level security only or use mixed-mode security, which combines WS-Security claims with transport security.</span></span>  
  
-   <span data-ttu-id="9637c-129">En-têtes SOAP sont toujours mis en mémoire tampon, même lorsque le mode de transfert a transmis en continu.</span><span class="sxs-lookup"><span data-stu-id="9637c-129">SOAP headers are always buffered, even when the transfer mode is set to Streamed.</span></span> <span data-ttu-id="9637c-130">Les en-têtes de message ne doivent pas dépasser la taille du quota de transport MaxBufferSize exposé sur les divers éléments de liaison et liaisons.</span><span class="sxs-lookup"><span data-stu-id="9637c-130">The headers for a message must not exceed the size of the MaxBufferSize transport quota which is exposed on the various bindings and binding elements.</span></span>  
  
 <span data-ttu-id="9637c-131">Modifier le mode de transfert à partir de mises en mémoire tampon à transmis en continu modifie également la forme du canal natif des transports TCP et transports de canal nommé.</span><span class="sxs-lookup"><span data-stu-id="9637c-131">Changing the transfer mode from Buffered to Streamed also changes the native channel shape of the TCP and named pipe transports.</span></span> <span data-ttu-id="9637c-132">Pour les transferts mis en mémoire tampon, la forme du canal natif est <xref:System.ServiceModel.Channels.IDuplexSessionChannel>.</span><span class="sxs-lookup"><span data-stu-id="9637c-132">For buffered transfers, the native channel shape is <xref:System.ServiceModel.Channels.IDuplexSessionChannel>.</span></span> <span data-ttu-id="9637c-133">Pour les transferts en flux continu, les canaux natifs correspondent à <xref:System.ServiceModel.Channels.IRequestChannel> et à <xref:System.ServiceModel.Channels.IReplyChannel>.</span><span class="sxs-lookup"><span data-stu-id="9637c-133">For streamed transfers, the native channels are <xref:System.ServiceModel.Channels.IRequestChannel> and <xref:System.ServiceModel.Channels.IReplyChannel>.</span></span> <span data-ttu-id="9637c-134">Une conséquence de ce principe réside dans le fait que les contrats de service de session ne peuvent pas être utilisés avec la diffusion en flux continu du transport.</span><span class="sxs-lookup"><span data-stu-id="9637c-134">A consequence of this is that sessionful service contracts cannot be used with transport streaming.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9637c-135">L’exemple de code suivant montre le paramètre du <xref:System.ServiceModel.TransferMode> propriété transmis en continu via le code :</span><span class="sxs-lookup"><span data-stu-id="9637c-135">The following code sample shows setting the <xref:System.ServiceModel.TransferMode> property to Streamed through code:</span></span>  
  
 <span data-ttu-id="9637c-136">**c#**</span><span class="sxs-lookup"><span data-stu-id="9637c-136">**c#**</span></span>  
  
```  
TcpTransportBindingElement transport = new TcpTransportBindingElement();  
transport.TransferMode = TransferMode.Streamed;  
BinaryMessageEncodingBindingElement encoder = new BinaryMessageEncodingBindingElement();  
CustomBinding binding = new CustomBinding(encoder, transport);  
```  
  
 <span data-ttu-id="9637c-137">L’exemple suivant montre <xref:System.ServiceModel.TransferMode.Streamed> propriété transmis en continu via la configuration :</span><span class="sxs-lookup"><span data-stu-id="9637c-137">The following sample shows <xref:System.ServiceModel.TransferMode.Streamed> property to Streamed through configuration:</span></span>  
  
```  
<customBinding>  
    <binding name="streamingBinding">  
        <binaryMessageEncoding />  
            <tcpTransport transferMode="Streamed" />  
     </binding>  
</customBinding>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Buffered">
      <MemberSignature Language="C#" Value="Buffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode Buffered = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.Buffered" />
      <MemberSignature Language="VB.NET" Value="Buffered" />
      <MemberSignature Language="C++ CLI" Value="Buffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9637c-138">Les messages de demande et de réponse sont mis en mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9637c-138">The request and response messages are both buffered.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Streamed">
      <MemberSignature Language="C#" Value="Streamed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode Streamed = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.Streamed" />
      <MemberSignature Language="VB.NET" Value="Streamed" />
      <MemberSignature Language="C++ CLI" Value="Streamed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9637c-139">Les messages de demande et de réponse sont transmis en continu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9637c-139">The request and response messages are both streamed.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="StreamedRequest">
      <MemberSignature Language="C#" Value="StreamedRequest" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode StreamedRequest = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.StreamedRequest" />
      <MemberSignature Language="VB.NET" Value="StreamedRequest" />
      <MemberSignature Language="C++ CLI" Value="StreamedRequest" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9637c-140">Le message de demande est transmis en continu et le message de réponse est mis en mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9637c-140">The request message is streamed and the response message is buffered.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="StreamedResponse">
      <MemberSignature Language="C#" Value="StreamedResponse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode StreamedResponse = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.StreamedResponse" />
      <MemberSignature Language="VB.NET" Value="StreamedResponse" />
      <MemberSignature Language="C++ CLI" Value="StreamedResponse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9637c-141">Le message de demande est mis en mémoire tampon et le message de réponse est transmis en continu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9637c-141">The request message is buffered and the response message is streamed.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>