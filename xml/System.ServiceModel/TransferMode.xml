<Type Name="TransferMode" FullName="System.ServiceModel.TransferMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe96e846f1fec0382eb0e85dc0cfc284bd62db43" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58554949" /></Metadata><TypeSignature Language="C#" Value="public enum TransferMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TransferMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.TransferMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum TransferMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class TransferMode" />
  <TypeSignature Language="F#" Value="type TransferMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Indique si un canal utilise des modes de transmission en continu ou par mise en mémoire tampon pour les messages de demande et de réponse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les transports de Windows Communication Foundation (WCF) prennent en charge deux modes de transfert de messages dans chaque direction :  
  
-   Les transferts mis en mémoire tampon conservent la totalité des messages en mémoire tampon tant que leur transfert n'est pas terminé.  
  
-   Les transferts en continu ne mettent que les en-têtes de message en mémoire tampon et exposent le corps du message sous forme de flux continu, dont des portions peuvent être lues progressivement.  
  
 Définition du mode de transfert transmis en continu permet la communication de diffusion en continu dans les deux sens. Définition du mode de transfert StreamedRequest ou StreamedResponse permet la communication de diffusion en continu uniquement dans le sens spécifié.  
  
 Les transferts en flux continu peuvent améliorer l'évolutivité d'un service car ils évitent d'avoir à recourir à de grandes mémoires tampons. Le gain réel d'évolutivité dépend de la taille des messages transférés. Il est plus significatif dans le cas de messages volumineux.  
  
 Par défaut, les transports HTTP, TCP/IP et de canal nommé utilisent la mise en mémoire tampon. Vous pouvez donner à <xref:System.ServiceModel.TransferMode.Streamed> la valeur des liaisons fournies par le système <xref:System.ServiceModel.BasicHttpBinding>, <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.NetNamedPipeBinding> à l’aide des propriétés du mode de transfert exposées. Le mode peut recevoir la valeur <xref:System.ServiceModel.NetTcpBinding>, par exemple, à l'aide de la propriété <xref:System.ServiceModel.NetTcpBinding.TransferMode%2A>. Il peut également être réglé dans la section de configuration pour la liaison.  
  
 Pour les liaisons qui n'exposent pas la propriété du mode de transfert, celui-ci peut être défini sur l'élément de liaison de transport, et cet élément peut ensuite être ajouté à une liaison personnalisée. Par exemple, créez <xref:System.ServiceModel.Channels.HttpTransportBindingElement> et utilisez la propriété <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A> pour définir le mode de transfert lors de la création d'une liaison personnalisée. Le mode de transfert peut également être défini dans la section de configuration pour la liaison personnalisée.  
  
 Le choix de l'un ou l'autre mode de transfert (mise en mémoire tampon ou flux continu) revient en local au point de terminaison pour les transports HTTP. Pour les transports HTTP, le mode de transfert ne se propage pas sur une connexion ou sur des serveurs proxy ou d'autres intermédiaires. La définition du mode de transfert n'est pas reflétée dans la description du contrat de service. Après avoir généré un proxy sur un service, vous pouvez (mais ne devez pas) modifier le fichier de configuration des services destinés à être utilisés avec des transferts en continu pour définir le mode de transfert. Pour les transports TCP et les transports de canal nommé, le mode de transfert est propagé sous forme d'assertion de stratégie.  
  
 L’utilisation du mode de transfert transmis en continu provoque le runtime WCF appliquer certaines restrictions.  
  
-   Le contrat des opérations intervenant sur un transport en flux continu peut contenir au maximum un paramètre d'entrée ou de sortie au niveau de la couche du modèle de programmation. Ce paramètre correspond au corps entier du message et doit être un <xref:System.ServiceModel.Channels.Message>, un sous-type de <xref:System.IO.Stream> ou implémenter l'interface <xref:System.Xml.Serialization.IXmlSerializable>. Disposer d'une valeur de retour pour une opération équivaut à disposer d'un paramètre de sortie.  
  
-   Certaines fonctionnalités WCF tels que messagerie fiable et de sécurité de niveau message SOAP s’appuient sur la mise en mémoire tampon des messages pour les transmissions. L’utilisation de ces fonctionnalités peut réduire, voire annuler les gains en termes de performances obtenus grâce au flux continu. Pour sécuriser un transport en flux continu, utilisez la sécurité de niveau transport uniquement ou la sécurité de mode mixte, qui associe des revendications WS-Security à la sécurité de niveau transport.  
  
-   En-têtes SOAP sont toujours mis en mémoire tampon, même lorsque le mode de transfert a la valeur transmis en continu. Les en-têtes de message ne doivent pas dépasser la taille du quota de transport MaxBufferSize exposé sur les divers éléments de liaison et liaisons.  
  
 Modifier le mode de transfert à partir de mises en mémoire tampon à transmis en continu modifie également la forme du canal natif des transports TCP et transports de canal nommé. Pour les transferts mis en mémoire tampon, la forme du canal natif est <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. Pour les transferts en flux continu, les canaux natifs correspondent à <xref:System.ServiceModel.Channels.IRequestChannel> et à <xref:System.ServiceModel.Channels.IReplyChannel>. Une conséquence de ce principe réside dans le fait que les contrats de service de session ne peuvent pas être utilisés avec la diffusion en flux continu du transport.  
  
   
  
## Examples  
 L’exemple de code suivant montre le paramètre le <xref:System.ServiceModel.TransferMode> propriété transmis en continu via le code :  
  
 **c#**  
  
```  
TcpTransportBindingElement transport = new TcpTransportBindingElement();  
transport.TransferMode = TransferMode.Streamed;  
BinaryMessageEncodingBindingElement encoder = new BinaryMessageEncodingBindingElement();  
CustomBinding binding = new CustomBinding(encoder, transport);  
```  
  
 L’exemple suivant montre <xref:System.ServiceModel.TransferMode.Streamed> propriété transmis en continu via la configuration :  
  
```  
<customBinding>  
    <binding name="streamingBinding">  
        <binaryMessageEncoding />  
            <tcpTransport transferMode="Streamed" />  
     </binding>  
</customBinding>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Buffered">
      <MemberSignature Language="C#" Value="Buffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode Buffered = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.Buffered" />
      <MemberSignature Language="VB.NET" Value="Buffered" />
      <MemberSignature Language="C++ CLI" Value="Buffered" />
      <MemberSignature Language="F#" Value="Buffered = 0" Usage="System.ServiceModel.TransferMode.Buffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Les messages de demande et de réponse sont mis en mémoire tampon.</summary>
      </Docs>
    </Member>
    <Member MemberName="Streamed">
      <MemberSignature Language="C#" Value="Streamed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode Streamed = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.Streamed" />
      <MemberSignature Language="VB.NET" Value="Streamed" />
      <MemberSignature Language="C++ CLI" Value="Streamed" />
      <MemberSignature Language="F#" Value="Streamed = 1" Usage="System.ServiceModel.TransferMode.Streamed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Les messages de demande et de réponse sont transmis en continu.</summary>
      </Docs>
    </Member>
    <Member MemberName="StreamedRequest">
      <MemberSignature Language="C#" Value="StreamedRequest" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode StreamedRequest = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.StreamedRequest" />
      <MemberSignature Language="VB.NET" Value="StreamedRequest" />
      <MemberSignature Language="C++ CLI" Value="StreamedRequest" />
      <MemberSignature Language="F#" Value="StreamedRequest = 2" Usage="System.ServiceModel.TransferMode.StreamedRequest" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Le message de demande est transmis en continu et le message de réponse est mis en mémoire tampon.</summary>
      </Docs>
    </Member>
    <Member MemberName="StreamedResponse">
      <MemberSignature Language="C#" Value="StreamedResponse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode StreamedResponse = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.StreamedResponse" />
      <MemberSignature Language="VB.NET" Value="StreamedResponse" />
      <MemberSignature Language="C++ CLI" Value="StreamedResponse" />
      <MemberSignature Language="F#" Value="StreamedResponse = 3" Usage="System.ServiceModel.TransferMode.StreamedResponse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Le message de demande est mis en mémoire tampon et le message de réponse est transmis en continu.</summary>
      </Docs>
    </Member>
  </Members>
</Type>