<Type Name="WSDualHttpBinding" FullName="System.ServiceModel.WSDualHttpBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ce6c174639936fd2cd433f2de943f42b8952642" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37452763" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WSDualHttpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSDualHttpBinding extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WSDualHttpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class WSDualHttpBinding&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSDualHttpBinding : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type WSDualHttpBinding = class&#xA;    inherit Binding&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="eb93d-101">Liaison sécurisée et interopérable conçue pour être utilisée avec des contrats de service duplex et qui permet aux services et clients d'envoyer et recevoir des messages.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb93d-101">A secure and interoperable binding that is designed for use with duplex service contracts that allows both services and clients to send and receive messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93d-102"><xref:System.ServiceModel.WSDualHttpBinding> fournit la même prise en charge des protocoles de services Web que <xref:System.ServiceModel.WSHttpBinding>, mais pour des contrats duplex.</span><span class="sxs-lookup"><span data-stu-id="eb93d-102">The <xref:System.ServiceModel.WSDualHttpBinding> provides the same support for Web Service protocols as the <xref:System.ServiceModel.WSHttpBinding>, but for use with duplex contracts.</span></span> <span data-ttu-id="eb93d-103"><xref:System.ServiceModel.WSDualHttpBinding> prend uniquement en charge la sécurité SOAP et requiert une messagerie fiable.</span><span class="sxs-lookup"><span data-stu-id="eb93d-103"><xref:System.ServiceModel.WSDualHttpBinding> only supports SOAP security and requires reliable messaging.</span></span> <span data-ttu-id="eb93d-104">Dans le cadre de cette liaison, le client doit avoir un URI public servant de point de terminaison de rappel pour le service.</span><span class="sxs-lookup"><span data-stu-id="eb93d-104">This binding requires that the client has a public URI that provides a callback endpoint for the service.</span></span> <span data-ttu-id="eb93d-105">Cet URI est fourni par l'<xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb93d-105">This is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>.</span></span> <span data-ttu-id="eb93d-106">Une liaison double expose l’adresse IP du client au service.</span><span class="sxs-lookup"><span data-stu-id="eb93d-106">A dual binding exposes the IP address of the client to the service.</span></span> <span data-ttu-id="eb93d-107">Ce client doit utiliser un mode de sécurité qui vérifiera qu'il se connecte uniquement à des services de confiance.</span><span class="sxs-lookup"><span data-stu-id="eb93d-107">The client should use security to ensure that it only connects to services it trusts.</span></span>  
  
 <span data-ttu-id="eb93d-108">Par défaut, la <xref:System.ServiceModel.WSDualHttpBinding> génère la pile d'éléments de liaison suivante :</span><span class="sxs-lookup"><span data-stu-id="eb93d-108">By default the <xref:System.ServiceModel.WSDualHttpBinding> generates the following binding element stack:</span></span>  
  
-   <xref:System.ServiceModel.Channels.TransactionFlowBindingElement>  
  
-   <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>  
  
-   <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>  
  
-   <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>  
  
-   <xref:System.ServiceModel.Channels.OneWayBindingElement>  
  
-   <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>  
  
-   <xref:System.ServiceModel.Channels.HttpTransportBindingElement>  
  
   
  
## Examples  
 <span data-ttu-id="eb93d-109">L'exemple suivant indique comment spécifier la liaison `wsDualHttpBinding` dans un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="eb93d-109">The following example shows how to specify the `wsDualHttpBinding` binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#134](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#134)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-110">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.WSDualHttpBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-110">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-111">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.WSDualHttpBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-111">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb93d-112">L'exemple suivant illustre la manière d'utiliser le constructeur par défaut pour wsDualHttpBinding.</span><span class="sxs-lookup"><span data-stu-id="eb93d-112">The following example shows how to use the default constructor for wsDualHttpBinding.</span></span>  
  
 [!code-csharp[S_dualhttp#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#1)]
 [!code-vb[S_dualhttp#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding (System.ServiceModel.WSDualHttpSecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.WSDualHttpSecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityMode As WSDualHttpSecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding(System::ServiceModel::WSDualHttpSecurityMode securityMode);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WSDualHttpBinding : System.ServiceModel.WSDualHttpSecurityMode -&gt; System.ServiceModel.WSDualHttpBinding" Usage="new System.ServiceModel.WSDualHttpBinding securityMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.WSDualHttpSecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode">
          <span data-ttu-id="eb93d-113">Valeur de <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> qui spécifie le type de sécurité utilisé avec le message SOAP et pour le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-113">The value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93d-114">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.WSDualHttpBinding" /> avec un type spécifié de sécurité utilisé par la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-114">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a specified type of security used by the binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93d-115"><xref:System.ServiceModel.WSDualHttpBinding> exige une messagerie fiable. De ce fait, aucun constructeur ne propose de commutateur permettant de la désactiver, contrairement au constructeur <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> pour <xref:System.ServiceModel.WSHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="eb93d-115">Reliable messaging is required by the <xref:System.ServiceModel.WSDualHttpBinding>, so there is no constructor that provides a switch to turn it off as there is on the <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> constructor for the <xref:System.ServiceModel.WSHttpBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93d-116">L'exemple suivant montre comme utiliser le constructeur `wsDualHttpBinding` avec un mode de sécurité.</span><span class="sxs-lookup"><span data-stu-id="eb93d-116">The following example shows how to use the `wsDualHttpBinding` constructor with a security mode.</span></span>  
  
 [!code-csharp[S_dualhttp#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#3)]
 [!code-vb[S_dualhttp#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding (string configName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding(System::String ^ configName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WSDualHttpBinding : string -&gt; System.ServiceModel.WSDualHttpBinding" Usage="new System.ServiceModel.WSDualHttpBinding configName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configName">
          <span data-ttu-id="eb93d-117">Nom de configuration de liaison pour <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-117">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93d-118">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.WSDualHttpBinding" /> avec une liaison spécifiée par son nom de configuration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-118">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a binding specified by its configuration name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="eb93d-119">L'élément de liaison portant le nom <paramref name="configurationName" /> est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-119">The binding element with the name <paramref name="configurationName" /> was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BypassProxyOnLocal : bool with get, set" Usage="System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-120">Obtient ou définit une valeur qui indique si le serveur proxy doit être contourné pour les adresses locales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-120">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-121">
            <see langword="true" /> pour contourner le serveur proxy pour les adresses locales ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-121">
              <see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb93d-122">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-122">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93d-123">Une ressource Internet est locale si elle dispose d'une adresse locale.</span><span class="sxs-lookup"><span data-stu-id="eb93d-123">An Internet resource is local if it has a local address.</span></span> <span data-ttu-id="eb93d-124">Une adresse locale est celui qui se trouve sur le même ordinateur, le réseau local ou l’intranet local et est identifiée, syntaxiquement, par l’absence de point (.) comme dans l’URI «http://webserver/« et »http://localhost/».</span><span class="sxs-lookup"><span data-stu-id="eb93d-124">A local address is one that is on the same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (.) as in the URIs "http://webserver/" and "http://localhost/".</span></span>  
  
 <span data-ttu-id="eb93d-125">La définition de la propriété <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> détermine si les points de terminaison configurés avec <xref:System.ServiceModel.WSDualHttpBinding> utilisent le serveur proxy lors de l'accès aux ressources locales.</span><span class="sxs-lookup"><span data-stu-id="eb93d-125">Setting the <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> property determines whether endpoints configured with the <xref:System.ServiceModel.WSDualHttpBinding> use the proxy server when accessing local resources.</span></span>  
  
 <span data-ttu-id="eb93d-126">Si <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> a la valeur `true`, les requêtes adressées aux ressources Internet locales n'utilisent pas le serveur proxy.</span><span class="sxs-lookup"><span data-stu-id="eb93d-126">If <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="eb93d-127">Utilisez le nom d'hôte (plutôt que `localhost`) si vous voulez que les clients traversent un proxy lorsqu'ils s'adressent à des services sur le même ordinateur lorsque que cette propriété a la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="eb93d-127">Use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine when this property is set to `true`.</span></span>  
  
 <span data-ttu-id="eb93d-128">Si <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> a la valeur `false`, toutes les requêtes Internet sont exécutées par le serveur proxy.</span><span class="sxs-lookup"><span data-stu-id="eb93d-128">When <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> is `false`, all Internet requests are made through the proxy server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93d-129">L’exemple suivant indique comment spécifier la liaison wsDualHttpBinding dans un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="eb93d-129">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
  
  
 <span data-ttu-id="eb93d-130">L'exemple suivant définit cette propriété de manière à ce que le proxy soit contourné pour les ressources locales.</span><span class="sxs-lookup"><span data-stu-id="eb93d-130">The following example sets this property to indicate that the proxy should be bypassed for local resources.</span></span>  
  
 [!code-csharp[S_dualhttp#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#6)]
 [!code-vb[S_dualhttp#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#6)]  
  
 <span data-ttu-id="eb93d-131">La valeur de cette propriété peut également être définie dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="eb93d-131">The value of this property can also be set in the configuration file.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientBaseAddress">
      <MemberSignature Language="C#" Value="public Uri ClientBaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientBaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientBaseAddress : Uri with get, set" Usage="System.ServiceModel.WSDualHttpBinding.ClientBaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-132">Obtient ou définit l'adresse de base du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-132">Gets or sets the base address of the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-133">
            <see cref="T:System.Uri" /> correspondant à l'adresse de base du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-133">The <see cref="T:System.Uri" /> that is the base address of the client.</span>
          </span>
          <span data-ttu-id="eb93d-134">La valeur par défaut est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-134">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93d-135">Cet URI public pour le client est utilisé par le service comme point de terminaison de rappel pour contacter le client dans le cadre d'un contrat duplex.</span><span class="sxs-lookup"><span data-stu-id="eb93d-135">This public URI for the client provides the callback endpoint required for the service to contact the client when the contract is duplex.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93d-136">L’exemple suivant indique comment spécifier la liaison wsDualHttpBinding dans un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="eb93d-136">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#8)]
 [!code-vb[S_dualhttp#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="wSDualHttpBinding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-137">Renvoie une collection ordonnée d’éléments de liaison contenus dans la liaison actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-137">Returns an ordered collection of binding elements contained in the current binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93d-138">
            <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> incluant un <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> et, comme une session fiable est requise pour la <see cref="T:System.ServiceModel.WSDualHttpBinding" />, un <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-138">A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that includes a <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> and, because a reliable session is required for the <see cref="T:System.ServiceModel.WSDualHttpBinding" />, a <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb93d-139">L’exemple suivant montre comment obtenir une collection ordonnée d’éléments de liaison contenus dans la liaison actuelle.</span><span class="sxs-lookup"><span data-stu-id="eb93d-139">The following example shows how to get an ordered collection of binding elements contained in the current binding.</span></span>  
  
 [!code-csharp[S_dualhttp#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#20)]
 [!code-vb[S_dualhttp#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvelopeVersion : System.ServiceModel.EnvelopeVersion" Usage="System.ServiceModel.WSDualHttpBinding.EnvelopeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-140">Obtient la version de SOAP utilisée pour les messages traités par cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-140">Gets the version of SOAP that is used for messages that are processed by this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-141">La valeur de la <see cref="T:System.ServiceModel.EnvelopeVersion" /> utilisée avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-141">The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding.</span>
          </span>
          <span data-ttu-id="eb93d-142">La valeur doit toujours être SOAP 1.2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-142">The value must always be SOAP 1.2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb93d-143">L’exemple suivant montre comment obtenir la version de SOAP utilisée pour les messages traités par cette liaison.</span><span class="sxs-lookup"><span data-stu-id="eb93d-143">The following example shows how to get the version of SOAP that is used for messages that are processed by this binding.</span></span>  
  
 [!code-csharp[S_dualhttp#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#21)]
 [!code-vb[S_dualhttp#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberSignature Language="F#" Value="member this.HostNameComparisonMode : System.ServiceModel.HostNameComparisonMode with get, set" Usage="System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-144">Obtient ou définit une valeur qui indique si le nom d'hôte est utilisé pour atteindre le service lors de la correspondance avec l'URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-144">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-145">Valeur <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> qui indique si le nom d'hôte est utilisé pour atteindre le service lors de la correspondance avec l'URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-145">The <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI.</span>
          </span>
          <span data-ttu-id="eb93d-146">La valeur par défaut est <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, qui ignore le nom d'hôte dans la correspondance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-146">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb93d-147">L’exemple suivant indique comment spécifier la liaison wsDualHttpBinding dans un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="eb93d-147">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#9)]
 [!code-vb[S_dualhttp#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferPoolSize : int64 with get, set" Usage="System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-148">Obtient ou définit la quantité maximale de mémoire (en octets) qui peut être allouée au gestionnaire de tampons de messages recevant des messages aux points de terminaison configurés avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-148">Gets or sets the maximum amount of memory, in bytes, that can be allocated for the manager of message buffers that receive messages at the endpoints configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-149">Taille maximale, en octets, du pool de mémoires tampons utilisé par un point de terminaison configuré avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-149">The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding.</span>
          </span>
          <span data-ttu-id="eb93d-150">La valeur par défaut est 524288 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-150">The default value is 524288 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93d-151">Le <xref:System.ServiceModel.Channels.BufferManager> réduit le coût de l'utilisation de mémoires tampons en utilisant un pool de mémoires tampons.</span><span class="sxs-lookup"><span data-stu-id="eb93d-151">The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers with a buffer pool.</span></span> <span data-ttu-id="eb93d-152">Les mémoires tampons sont requises par le service pour traiter des messages lorsqu'ils sortent du canal.</span><span class="sxs-lookup"><span data-stu-id="eb93d-152">Buffers are required to process messages by the service when they come out of the channel.</span></span> <span data-ttu-id="eb93d-153">Si la mémoire du pool de mémoires tampons est insuffisante pour traiter la charge de messages, <xref:System.ServiceModel.Channels.BufferManager> doit allouer de la mémoire additionnelle provenant du tas CLR, ce qui augmente le traitement de l'opération garbage collection.</span><span class="sxs-lookup"><span data-stu-id="eb93d-153">If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="eb93d-154">Une allocation importante de mémoire issue du tas de garbage CLR indique que la taille de pool de mémoires tampons est trop petite et qu'il est possible d'améliorer les performances en augmentant la limite <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb93d-154">Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> limit.</span></span>  
  
 <span data-ttu-id="eb93d-155">Les limitations de la taille de la mémoire tampon définies ici ont pour but d'optimiser les performances des échanges de messages.</span><span class="sxs-lookup"><span data-stu-id="eb93d-155">The limitations on buffer size set here are for optimizing the performance of message exchanges.</span></span> <span data-ttu-id="eb93d-156">Si un message dépasse la valeur maximale définie pour la mémoire tampon, il n’est pas déposé.</span><span class="sxs-lookup"><span data-stu-id="eb93d-156">If a message exceeds the maximum value set for the buffer, it is not dropped.</span></span> <span data-ttu-id="eb93d-157">À la place, le gestionnaire demande davantage de mémoire au tas CLR. Le traitement de l’opération garbage collection est par conséquent plus important que dans le cas de l’utilisation de mémoires tampons.</span><span class="sxs-lookup"><span data-stu-id="eb93d-157">Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93d-158">L'exemple suivant montre comment définir `MaxBufferPoolSize`.</span><span class="sxs-lookup"><span data-stu-id="eb93d-158">The following example shows how to set the `MaxBufferPoolSize`.</span></span>  
  
 [!code-csharp[S_dualhttp#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#10)]
 [!code-vb[S_dualhttp#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-159">Obtient ou définit la taille maximale (en octets) d'un message qui peut être reçu sur un canal configuré avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-159">Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-160">Taille maximale, en octets, d'un message traité par la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-160">The maximum size, in bytes, for a message that is processed by the binding.</span>
          </span>
          <span data-ttu-id="eb93d-161">La valeur par défaut est de 65 536 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-161">The default value is 65,536 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93d-162">La taille des messages qui peuvent être reçus sur le câble par les services utilisant le <xref:System.ServiceModel.WSDualHttpBinding> est limitée par la quantité de mémoire allouée à chaque message.</span><span class="sxs-lookup"><span data-stu-id="eb93d-162">The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> is bounded by the amount of memory allocated for each message.</span></span> <span data-ttu-id="eb93d-163">Cette limite de taille des messages a pour but d'atténuer l'exposition aux attaques de type DoS.</span><span class="sxs-lookup"><span data-stu-id="eb93d-163">This bound on message size is intended to limit exposure to DOS-style attacks.</span></span>  
  
 <span data-ttu-id="eb93d-164">Notez que les paramètres de <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> et <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> sont des paramètres de comportement locaux.</span><span class="sxs-lookup"><span data-stu-id="eb93d-164">Note that the settings for <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> and <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> are local behavioral settings.</span></span> <span data-ttu-id="eb93d-165">Cela signifie qu'ils ne sont pas transmis à d'autres points de terminaison dans les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="eb93d-165">This means that they are not transmitted to other endpoints in metadata.</span></span> <span data-ttu-id="eb93d-166">Si vous générez un proxy pour un service qui limite dans les métadonnées les messages à une taille maximale de 2 Go, le proxy reprend la valeur par défaut de 64 Ko.</span><span class="sxs-lookup"><span data-stu-id="eb93d-166">If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K.</span></span> <span data-ttu-id="eb93d-167">Les administrateurs locaux peuvent ainsi contrôler les limites de taille des messages et des tampons de messages.</span><span class="sxs-lookup"><span data-stu-id="eb93d-167">This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93d-168">L'exemple suivant indique comment obtenir la propriété <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb93d-168">The following example shows how to get the <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> property.</span></span>  
  
 [!code-csharp[S_dualhttp#22](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#22)]
 [!code-vb[S_dualhttp#22](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eb93d-169">La valeur est inférieure à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-169">The value is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.WSMessageEncoding MessageEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageEncoding As WSMessageEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSMessageEncoding MessageEncoding { System::ServiceModel::WSMessageEncoding get(); void set(System::ServiceModel::WSMessageEncoding value); };" />
      <MemberSignature Language="F#" Value="member this.MessageEncoding : System.ServiceModel.WSMessageEncoding with get, set" Usage="System.ServiceModel.WSDualHttpBinding.MessageEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSMessageEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-170">Obtient ou définit si MTOM ou Text/XML est utilisé pour encoder les messages SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-170">Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-171">Valeur de <see cref="T:System.ServiceModel.WSMessageEncoding" /> indiquant que MTOM ou Text/XML est utilisé pour encoder les messages SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-171">The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates that MTOM or Text/XML is used to encode SOAP messages.</span>
          </span>
          <span data-ttu-id="eb93d-172">La valeur par défaut est <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-172">The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb93d-173">L'exemple suivant montre comment affecter la propriété `WSMessageEncoding` à MTOM.</span><span class="sxs-lookup"><span data-stu-id="eb93d-173">The following example shows how to set the `WSMessageEncoding` property to MTOM.</span></span>  
  
 [!code-csharp[S_dualhttp#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#11)]
 [!code-vb[S_dualhttp#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProxyAddress : Uri with get, set" Usage="System.ServiceModel.WSDualHttpBinding.ProxyAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-174">Obtient ou définit l'adresse URI du proxy HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-174">Gets or sets the URI address of the HTTP proxy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-175">
            <see cref="T:System.Uri" /> qui sert d'adresse du proxy HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-175">A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy.</span>
          </span>
          <span data-ttu-id="eb93d-176">La valeur par défaut est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-176">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93d-177">Si la propriété <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> a la valeur `true`, la valeur de l'<xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A> est ignorée.</span><span class="sxs-lookup"><span data-stu-id="eb93d-177">If the <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> is set to `true`, the value of the <xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93d-178">L'exemple suivant indique comment spécifier l'adresse du proxy HTTP.</span><span class="sxs-lookup"><span data-stu-id="eb93d-178">The following example shows how to specify the address of the HTTP proxy.</span></span>  
  
 [!code-csharp[S_dualhttp#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#12)]
 [!code-vb[S_dualhttp#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.ServiceModel.WSDualHttpBinding.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-179">Obtient ou définit des contraintes sur la complexité des messages SOAP pouvant être traités par les points de terminaison configurés avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-179">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-180">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> spécifiant les contraintes de complexité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-180">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93d-181">Les contraintes de complexité peuvent inclure, entre autres, une profondeur maximale d'éléments et une longueur maximale du contenu de la chaîne du message.</span><span class="sxs-lookup"><span data-stu-id="eb93d-181">The complexity constraints include items such as a maximum element depth and a maximum length for string content within the message.</span></span> <span data-ttu-id="eb93d-182">Les contraintes permettent de protéger l'application contre les attaques par déni de service (DoS) qui tentent d'utiliser la complexité de message pour bloquer les ressources allouées au traitement des points de terminaison.</span><span class="sxs-lookup"><span data-stu-id="eb93d-182">The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93d-183">L'exemple suivant indique comment obtenir la propriété `ReaderQuotas`.</span><span class="sxs-lookup"><span data-stu-id="eb93d-183">The following example shows how to get the `ReaderQuotas` property.</span></span>  
  
 [!code-csharp[S_dualhttp#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#13)]
 [!code-vb[S_dualhttp#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliableSession">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReliableSession ReliableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ReliableSession ReliableSession" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property ReliableSession As ReliableSession" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReliableSession ^ ReliableSession { System::ServiceModel::ReliableSession ^ get(); void set(System::ServiceModel::ReliableSession ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReliableSession : System.ServiceModel.ReliableSession with get, set" Usage="System.ServiceModel.WSDualHttpBinding.ReliableSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReliableSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-184">Obtient un objet fournissant un accès aisé aux propriétés d’un élément de liaison de session fiable disponibles lors de l’utilisation d’une des liaisons fournies par le système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-184">Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-185">
            <see cref="T:System.ServiceModel.ReliableSession" /> offrant un accès aisé aux propriétés d'un élément de liaison de session fiable disponibles lors de l'utilisation d'une des liaisons fournies par le système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-185">The <see cref="T:System.ServiceModel.ReliableSession" /> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93d-186">Une session fiable est requise pour un service configuré avec une <xref:System.ServiceModel.WSDualHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="eb93d-186">The reliable session is required for service configured with a <xref:System.ServiceModel.WSDualHttpBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93d-187">L'exemple suivant indique comment obtenir la propriété <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb93d-187">The following example shows how to get the <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A> property.</span></span>  
  
 [!code-csharp[S_dualhttp#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#14)]
 [!code-vb[S_dualhttp#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.WSDualHttpBinding.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-188">Obtient le schéma de transport URI pour les canaux et les écouteurs configurés avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-188">Gets the URI transport scheme for the channels and listeners that are configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-189">Mode de transport : "http".</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-189">The transport scheme: "http".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb93d-190">L’exemple suivant indique comment spécifier la liaison wsDualHttpBinding dans un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="eb93d-190">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#15)]
 [!code-vb[S_dualhttp#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSDualHttpSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.WSDualHttpSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As WSDualHttpSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSDualHttpSecurity ^ Security { System::ServiceModel::WSDualHttpSecurity ^ get(); void set(System::ServiceModel::WSDualHttpSecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.WSDualHttpSecurity with get, set" Usage="System.ServiceModel.WSDualHttpBinding.Security" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSDualHttpSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-191">Obtient un objet qui spécifie les paramètres de sécurité utilisés avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-191">Gets an object that specifies the security settings used with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-192">
            <see cref="T:System.ServiceModel.WSDualHttpSecurity" /> spécifiant les paramètres de sécurité utilisés avec cette liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-192">The <see cref="T:System.ServiceModel.WSDualHttpSecurity" /> that specifies security settings used with the binding.</span>
          </span>
          <span data-ttu-id="eb93d-193">La valeur par défaut de <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> est <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-193">The default value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> is <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93d-194">Une liaison double expose l’adresse IP du client au service.</span><span class="sxs-lookup"><span data-stu-id="eb93d-194">A dual binding exposes the IP address of the client to the service.</span></span> <span data-ttu-id="eb93d-195">Ce client doit utiliser un mode de sécurité qui vérifiera qu'il se connecte uniquement à des services de confiance.</span><span class="sxs-lookup"><span data-stu-id="eb93d-195">The client should use security to ensure that it only connects to services it trusts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93d-196">L’exemple suivant montre comment obtenir le type de mode de sécurité de la liaison.</span><span class="sxs-lookup"><span data-stu-id="eb93d-196">The following example shows how to get the type of security of the binding.</span></span>  
  
 [!code-csharp[S_dualhttp#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#16)]
 [!code-vb[S_dualhttp#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="wSDualHttpBinding.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-197">Retourne une valeur qui indique si la propriété <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> utilise une autre valeur que sa valeur par défaut et doit être sérialisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-197">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93d-198">
            <see langword="true" /> si la valeur de la propriété <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> doit être sérialisée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-198">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReliableSession">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReliableSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReliableSession () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReliableSession();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReliableSession : unit -&gt; bool" Usage="wSDualHttpBinding.ShouldSerializeReliableSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-199">Retourne une valeur qui indique si la propriété <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> utilise une autre valeur que sa valeur par défaut et doit être sérialisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-199">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93d-200">
            <see langword="true" /> si la valeur de la propriété <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> doit être sérialisée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-200">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSecurity : unit -&gt; bool" Usage="wSDualHttpBinding.ShouldSerializeSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-201">Retourne une valeur qui indique si la propriété <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> utilise une autre valeur que sa valeur par défaut et doit être sérialisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-201">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93d-202">
            <see langword="true" /> si la valeur de la propriété <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> doit être sérialisée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-202">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTextEncoding">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTextEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTextEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTextEncoding () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTextEncoding();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTextEncoding : unit -&gt; bool" Usage="wSDualHttpBinding.ShouldSerializeTextEncoding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-203">Retourne une valeur qui indique si la propriété <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> utilise une autre valeur que sa valeur par défaut et doit être sérialisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-203">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93d-204">
            <see langword="true" /> si la valeur de la propriété <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> doit être sérialisée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-204">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ServiceModel.WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-205">Obtient une valeur qui indique si les demandes entrantes sont gérées de façon synchrone ou asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-205">Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-206">
            <see langword="true" /> si les demandes sont contrôlées de manière synchrone ; <see langword="false" /> en cas de gestion asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-206">
              <see langword="true" /> if requests are handled synchronously; <see langword="false" /> if handled asynchronously.</span>
          </span>
          <span data-ttu-id="eb93d-207">La valeur retournée est toujours <see langword="false" /> et permet de gérer les demandes de façon asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-207">The value returned is always is <see langword="false" />, to handle requests asynchronously.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93d-208">Cette valeur peut être modifiée en utilisant un comportement de modèle de service.</span><span class="sxs-lookup"><span data-stu-id="eb93d-208">This value can be changed by using a service model behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93d-209">Les exemples ci-dessous expliquent comment obtenir la valeur <xref:System.ServiceModel.WSDualHttpBinding.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb93d-209">The following examples show how to get the <xref:System.ServiceModel.WSDualHttpBinding.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A> value.</span></span>  
  
 [!code-csharp[S_dualhttp#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#23)]
 [!code-vb[S_dualhttp#23](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#23)]  
  
 [!code-csharp[S_dualhttp#24](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#24)]
 [!code-vb[S_dualhttp#24](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding TextEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TextEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ TextEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextEncoding : System.Text.Encoding with get, set" Usage="System.ServiceModel.WSDualHttpBinding.TextEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-210">Obtient ou définit l'encodage de caractères utilisé pour le texte du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-210">Gets or sets the character encoding that is used for the message text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-211">
            <see cref="T:System.Text.Encoding" /> qui indique l'encodage de caractères utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-211">The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used.</span>
          </span>
          <span data-ttu-id="eb93d-212">La valeur par défaut est <see cref="T:System.Text.UTF8Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-212">The default is <see cref="T:System.Text.UTF8Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb93d-213">L'exemple suivant montre comment obtenir l'encodage de caractères utilisé pour le texte du message.</span><span class="sxs-lookup"><span data-stu-id="eb93d-213">The following example shows how to get the character encoding that is used for the message text.</span></span>  
  
 [!code-csharp[S_dualhttp#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#17)]
 [!code-vb[S_dualhttp#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionFlow : bool with get, set" Usage="System.ServiceModel.WSDualHttpBinding.TransactionFlow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-214">Obtient ou définit une valeur indiquant si la liaison doit prendre en charge le flux WS-Transactions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-214">Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-215">
            <see langword="true" /> si le flux de transactions est pris en charge ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-215">
              <see langword="true" /> if the flowing of transactions is supported; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb93d-216">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-216">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93d-217">La valeur par défaut signifie que les clients ne passent pas de transactions et que les services rejettent les messages dotés d'un en-tête de message de transaction passée.</span><span class="sxs-lookup"><span data-stu-id="eb93d-217">The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93d-218">L'exemple suivant montre comment définir la propriété `TransactionFlow` pour la prise en charge du flux de transactions.</span><span class="sxs-lookup"><span data-stu-id="eb93d-218">The following example shows how to set the `TransactionFlow` property to support the flowing of transactions.</span></span>  
  
 [!code-csharp[S_dualhttp#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#18)]
 [!code-vb[S_dualhttp#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultWebProxy : bool with get, set" Usage="System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93d-219">Obtient ou définit une valeur qui indique si le proxy HTTP du système configuré automatiquement doit être utilisé, s'il est disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-219">Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93d-220">
            <see langword="true" /> si le proxy HTTP du système configuré automatiquement doit être utilisé, s'il est disponible ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-220">
              <see langword="true" /> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb93d-221">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93d-221">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb93d-222">L'exemple suivant montre comment définir la propriété `UseDefaultWebProxy` pour utiliser le proxy HTTP du système configuré automatiquement.</span><span class="sxs-lookup"><span data-stu-id="eb93d-222">The following example shows how to set the `UseDefaultWebProxy` property to use the auto-configured HTTP proxy of the system.</span></span>  
  
 [!code-csharp[S_dualhttp#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#19)]
 [!code-vb[S_dualhttp#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>