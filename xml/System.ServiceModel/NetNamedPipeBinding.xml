<Type Name="NetNamedPipeBinding" FullName="System.ServiceModel.NetNamedPipeBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b04872c83fc7a10e810ab4f81b4b5ffa0b2f6667" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37452688" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NetNamedPipeBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetNamedPipeBinding extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.NetNamedPipeBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class NetNamedPipeBinding&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetNamedPipeBinding : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type NetNamedPipeBinding = class&#xA;    inherit Binding&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fournit une liaison sécurisée et fiable, optimisée pour la communication sur l’ordinateur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.NetNamedPipeBinding> génère par défaut une pile de communication au moment de l'exécution, qui utilise la sécurité de transport, des canaux nommés pour la remise des messages et un encodage de message binaire. Cette liaison est une solution fournie par le système WCF (Windows Communication Foundation) adaptée à la communication sur les ordinateurs. Elle prend en outre en charge des transactions.  
  
 La configuration par défaut de <xref:System.ServiceModel.NetNamedPipeBinding> est similaire à celle fournie par <xref:System.ServiceModel.NetTcpBinding>, mais en plus simple, car l'implémentation de WCF est uniquement destinée à être utilisée sur un ordinateur, de sorte qu'il y a moins de fonctionnalités exposées. La différence la plus notable est que le paramètre <xref:System.ServiceModel.SecurityMode> offre uniquement les options <xref:System.ServiceModel.SecurityMode.None> et <xref:System.ServiceModel.SecurityMode.Transport>. La prise en charge de la sécurité SOAP ne fait pas partie des options incluses. Le comportement de sécurité est configurable à l'aide du paramètre `securityMode` en option dans le constructeur <xref:System.ServiceModel.NetNamedPipeBinding.%23ctor%28System.ServiceModel.NetNamedPipeSecurityMode%29>.  
  
   
  
## Examples  
 L'exemple suivant montre la partie du fichier de configuration qui contient la section réservée à la <xref:System.ServiceModel.NetNamedPipeBinding> avec les valeurs par défaut définies.  
  
  
  
 L'exemple suivant montre comment utiliser la classe <xref:System.ServiceModel.NetNamedPipeBinding> par programme.  
  
 [!code-csharp[S_UENetNamedPipe#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.NetNamedPipeBinding" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le comportement de sécurité peut être configuré à l'aide du paramètre `securityMode` en option dans le constructeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetNamedPipeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetNamedPipeBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.NetNamedPipeBinding" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le mode de sécurité par défaut utilisé est <xref:System.ServiceModel.NetNamedPipeSecurityMode.Transport>.  
  
   
  
## Examples  
 L'exemple suivant montre la partie du fichier de configuration qui contient la section réservée à la <xref:System.ServiceModel.NetNamedPipeBinding> avec les valeurs par défaut définies.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetNamedPipeBinding (System.ServiceModel.NetNamedPipeSecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.NetNamedPipeSecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.ServiceModel.NetNamedPipeSecurityMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityMode As NetNamedPipeSecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetNamedPipeBinding(System::ServiceModel::NetNamedPipeSecurityMode securityMode);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.NetNamedPipeBinding : System.ServiceModel.NetNamedPipeSecurityMode -&gt; System.ServiceModel.NetNamedPipeBinding" Usage="new System.ServiceModel.NetNamedPipeBinding securityMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.NetNamedPipeSecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode">Valeur <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> spécifiant si la sécurité Windows est utilisée avec les canaux nommés.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> avec le mode de sécurité spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur si vous voulez configurer la sécurité de manière explicite. La valeur par défaut est <xref:System.ServiceModel.NetNamedPipeSecurityMode.Transport> en cas d'utilisation du constructeur par défaut.  
  
   
  
## Examples  
 [!code-csharp[S_UENetNamedPipe#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetNamedPipeBinding (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetNamedPipeBinding(System::String ^ configurationName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.NetNamedPipeBinding : string -&gt; System.ServiceModel.NetNamedPipeBinding" Usage="new System.ServiceModel.NetNamedPipeBinding configurationName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName">Le nom de la configuration de liaison pour l’[élément netNamedPipeBinding](~/docs/framework/configure-apps/file-schema/wcf/netnamedpipebinding.md).</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> disposant d'un nom de configuration spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur lorsque vous souhaitez initialiser les paramètres de liaison à partir de la configuration.  
  
   
  
## Examples  
 [!code-csharp[S_UENetNamedPipe#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="netNamedPipeBinding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une collection avec les éléments de liaison pour la liaison.</summary>
        <returns>La <see cref="T:System.Collections.Generic.ICollection`1" /> de type <see cref="T:System.ServiceModel.Channels.BindingElement" /> qui compose la liaison.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UENetNamedPipe#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvelopeVersion : System.ServiceModel.EnvelopeVersion" Usage="System.ServiceModel.NetNamedPipeBinding.EnvelopeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la version de SOAP utilisée pour les messages traités par cette liaison.</summary>
        <value>
          <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 1.2 doit être utilisé avec cette liaison.  
  
   
  
## Examples  
 L'exemple suivant indique comment obtenir la version de SOAP.  
  
 [!code-csharp[S_UENetNamedPipe#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberSignature Language="F#" Value="member this.HostNameComparisonMode : System.ServiceModel.HostNameComparisonMode with get, set" Usage="System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le nom d'hôte est utilisé pour atteindre le service lors de la correspondance avec l'URI.</summary>
        <value>Valeur <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> indiquant si le nom d'hôte est utilisé pour atteindre le service lors de la correspondance avec l'URI. La valeur par défaut est <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, qui ignore le nom d'hôte dans la correspondance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple suivant indique comment obtenir la propriété <xref:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode%2A>.  
  
 [!code-csharp[S_UENetNamedPipe#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferPoolSize : int64 with get, set" Usage="System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre maximal d'octets utilisés pour la mise en mémoire tampon des messages entrants.</summary>
        <value>Nombre maximal d'octets utilisés pour la mise en mémoire tampon des messages entrants. La valeur par défaut est 524 288 octets.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous recevez plus de données que ne peut en contenir la mémoire tampon, les données excédentaires restent sur le socket sous-jacent jusqu'à ce que votre mémoire tampon ait de la place pour les accueillir.  
  
   
  
## Examples  
 L'exemple ci-dessous explique comment obtenir la valeur <xref:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize%2A>.  
  
 [!code-csharp[S_UENetNamedPipe#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferSize : int with get, set" Usage="System.ServiceModel.NetNamedPipeBinding.MaxBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre maximal d'octets utilisés pour la mise en mémoire tampon des messages entrants.</summary>
        <value>Nombre maximal d'octets utilisés pour la mise en mémoire tampon des messages entrants. La valeur par défaut est de 65 536 octets.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous recevez plus de données que ne peut en contenir la mémoire tampon, les données excédentaires restent sur le socket sous-jacent jusqu'à ce que votre mémoire tampon ait de la place pour les accueillir.  
  
   
  
## Examples  
 L'exemple ci-dessous explique comment obtenir la valeur <xref:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize%2A>.  
  
 [!code-csharp[S_UENetNamedPipe#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur définie est inférieure à 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxConnections">
      <MemberSignature Language="C#" Value="public int MaxConnections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnections" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnections { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConnections : int with get, set" Usage="System.ServiceModel.NetNamedPipeBinding.MaxConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre maximal de connexions, entrantes et sortantes, autorisées aux points de terminaison configurés avec la liaison de canal nommé.</summary>
        <value>Nombre maximal de connexions de canal nommé autorisées avec cette liaison. La valeur par défaut est 10.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nombre maximal de connexions entrantes et de connexions sortantes est défini sur la même valeur.  
  
   
  
## Examples  
 L'exemple ci-dessous explique comment obtenir les valeurs <xref:System.ServiceModel.NetNamedPipeBinding.MaxConnections%2A>.  
  
 [!code-csharp[S_UENetNamedPipe#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la taille maximale (en octets) d'un message reçu qui est traité par la liaison.</summary>
        <value>Taille maximale (en octet) d’un message reçu traité par la liaison. La valeur par défaut est de 65 536 octets.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple ci-dessous explique comment obtenir la valeur <xref:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize%2A>.  
  
 [!code-csharp[S_UENetNamedPipe#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit des contraintes sur la complexité des messages SOAP pouvant être traités par les points de terminaison configurés avec cette liaison.</summary>
        <value>
          <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> qui spécifie les contraintes de complexité des messages SOAP échangés. Les valeurs par défaut de ces contraintes sont fournies dans la section Notes suivante.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les contraintes de complexité permettent de protéger l'application contre les attaques par déni de service (DoS) qui tentent d'exploiter la complexité des messages pour bloquer les ressources allouées au traitement des points de terminaison. Les propriétés qui expriment ces contraintes et leurs valeurs par défaut sont les suivantes :  
  
-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32  
  
-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192  
  
-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384  
  
-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096  
  
-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384  
  
   
  
## Examples  
 L'exemple ci-dessous explique comment obtenir l'objet <xref:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas%2A>.  
  
 [!code-csharp[S_UENetNamedPipe#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La valeur définie est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.NetNamedPipeBinding.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le schéma de transport URI pour les canaux et les écouteurs configurés avec cette liaison.</summary>
        <value>Retourne "net.pipe".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple suivant montre comment obtenir le schéma de transport URI.  
  
 [!code-csharp[S_UENetNamedPipe#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.NetNamedPipeSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.NetNamedPipeSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As NetNamedPipeSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::NetNamedPipeSecurity ^ Security { System::ServiceModel::NetNamedPipeSecurity ^ get(); void set(System::ServiceModel::NetNamedPipeSecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.NetNamedPipeSecurity with get, set" Usage="System.ServiceModel.NetNamedPipeBinding.Security" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.NetNamedPipeSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui spécifie le type de sécurité utilisé avec les services configurés avec cette liaison.</summary>
        <value>
          <see cref="T:System.ServiceModel.NetNamedPipeSecurity" /> utilisée avec cette liaison. La valeur par défaut est <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.NetNamedPipeSecurity> fournit les types de sécurité et les paramètres disponibles à <xref:System.ServiceModel.NetNamedPipeBinding>.  
  
   
  
## Examples  
 L’exemple suivant montre comment obtenir le type de sécurité à utiliser avec cette liaison.  
  
 [!code-csharp[S_UENetNamedPipe#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeMaxConnections">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeMaxConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeMaxConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeMaxConnections" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeMaxConnections () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeMaxConnections();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeMaxConnections : unit -&gt; bool" Usage="netNamedPipeBinding.ShouldSerializeMaxConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une valeur qui indique si la propriété <see cref="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" /> utilise une autre valeur que sa valeur par défaut et doit être sérialisée.</summary>
        <returns>
          <see langword="True" /> si la valeur de la propriété <see cref="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" /> doit être sérialisée ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="netNamedPipeBinding.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une valeur qui indique si la propriété <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> utilise une autre valeur que sa valeur par défaut et doit être sérialisée. Ceci est utilisé par WCF pour l'intégration XAML.</summary>
        <returns>
          <see langword="true" /> si la valeur de la propriété <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> doit être sérialisée ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSecurity : unit -&gt; bool" Usage="netNamedPipeBinding.ShouldSerializeSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une valeur qui indique si la propriété <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> utilise une autre valeur que sa valeur par défaut et doit être sérialisée. Ceci est utilisé par WCF pour l'intégration XAML.</summary>
        <returns>
          <see langword="true" /> si la valeur de la propriété <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> doit être sérialisée ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionProtocol">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionProtocol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeTransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionProtocol () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionProtocol();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTransactionProtocol : unit -&gt; bool" Usage="netNamedPipeBinding.ShouldSerializeTransactionProtocol " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une valeur qui indique si la propriété <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> utilise une autre valeur que sa valeur par défaut et doit être sérialisée. Ceci est utilisé par WCF pour l'intégration XAML.</summary>
        <returns>
          <see langword="true" /> si la valeur de la propriété <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> doit être sérialisée ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ServiceModel.NetNamedPipeBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si les demandes entrantes sont gérées de façon synchrone ou asynchrone.</summary>
        <value>
          <see langword="false" /> pour indiquer que les requêtes entrantes sont traitées de façon asynchrone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple suivant montre la partie du fichier de configuration qui contient la section réservée à la <xref:System.ServiceModel.NetNamedPipeBinding> avec les valeurs par défaut définies.  
  
 [!code-csharp[S_UENetNamedPipe#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionFlow : bool with get, set" Usage="System.ServiceModel.NetNamedPipeBinding.TransactionFlow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui détermine si des transactions doivent être passées au service.</summary>
        <value>
          <see langword="true" /> si les transactions clientes doivent être passées au service ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propriété <xref:System.ServiceModel.NetNamedPipeBinding.TransactionFlow%2A> vous permet de spécifier si cette liaison doit prendre en charge le transfert de transactions.  
  
   
  
## Examples  
 L'exemple suivant montre comment obtenir la valeur de la propriété de la liaison <xref:System.ServiceModel.NetNamedPipeBinding.TransactionFlow%2A>.  
  
 [!code-csharp[S_UENetNamedPipe#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionProtocol">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransactionProtocol TransactionProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.TransactionProtocol TransactionProtocol" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionProtocol As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransactionProtocol ^ TransactionProtocol { System::ServiceModel::TransactionProtocol ^ get(); void set(System::ServiceModel::TransactionProtocol ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionProtocol : System.ServiceModel.TransactionProtocol with get, set" Usage="System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le protocole de transactions utilisé par le service pour transférer des transactions.</summary>
        <value>
          <see cref="T:System.ServiceModel.TransactionProtocol" /> utilisé par le service pour transférer des transactions. Le protocole par défaut est <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le protocole WS-Atomic Transaction peut également être utilisé en définissant la valeur <xref:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004%2A>.  
  
   
  
## Examples  
 L'exemple ci-dessous explique comment obtenir l'objet <xref:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol%2A>.  
  
 [!code-csharp[S_UENetNamedPipe#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransferMode TransferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.TransferMode TransferMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.TransferMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferMode As TransferMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransferMode TransferMode { System::ServiceModel::TransferMode get(); void set(System::ServiceModel::TransferMode value); };" />
      <MemberSignature Language="F#" Value="member this.TransferMode : System.ServiceModel.TransferMode with get, set" Usage="System.ServiceModel.NetNamedPipeBinding.TransferMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le service configuré avec la liaison utilise le mode de transfert de messages en continu (dans une direction ou les deux) ou en mémoire tampon.</summary>
        <value>Valeur <see cref="T:System.ServiceModel.TransferMode" /> indiquant si le service configuré avec la liaison utilise le mode de transfert de messages en continu (dans une direction ou les deux) ou en mémoire tampon. La valeur par défaut est <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il est possible de transmettre en continu uniquement les messages entrants ou les messages sortants en spécifiant, respectivement, <xref:System.ServiceModel.TransferMode.StreamedRequest> ou <xref:System.ServiceModel.TransferMode.StreamedResponse>.  
  
   
  
## Examples  
 L'exemple ci-dessous explique comment obtenir la valeur <xref:System.ServiceModel.NetNamedPipeBinding.TransferMode%2A>.  
  
 [!code-csharp[S_UENetNamedPipe#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>