<Type Name="IExtension&lt;T&gt;" FullName="System.ServiceModel.IExtension&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fba9f09bd6a9ef2908e9552442a0e71002f3b860" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37612775" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IExtension&lt;T&gt; where T : IExtensibleObject&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtension`1&lt;(class System.ServiceModel.IExtensibleObject`1&lt;!T&gt;) T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IExtension`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtension(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : IExtensibleObject&lt;T&gt;public interface class IExtension" />
  <TypeSignature Language="F#" Value="type IExtension&lt;'T (requires 'T :&gt; IExtensibleObject&lt;'T&gt;)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <InterfaceName>System.ServiceModel.IExtensibleObject&lt;T&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Objet qui participe au comportement personnalisé.</typeparam>
    <summary>Permet à un objet d'étendre un autre objet par le biais de l'agrégation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WCF vous permet d’étendre <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType> objets (la <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>, <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>, <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>, et <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType> classes) en ajoutant un nouvel état ou le comportement à l’aide de son modèle d’objet extensible. Le modèle d’objet extensible est utilisé dans WCF pour étendre des classes d’exécution existantes avec de nouvelles fonctionnalités ou pour ajouter de nouvelles fonctionnalités d’état à un objet.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(T owner);" />
      <MemberSignature Language="F#" Value="abstract member Attach : 'T -&gt; unit" Usage="iExtension.Attach owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner">Objet extensible qui regroupe cette extension en aggrégats.</param>
        <summary>Active un objet d’extension pour recherche où il a été regroupé en aggrégats. Appelée lorsque l'extension est ajoutée à la propriété <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour garder la trace de l'objet <xref:System.ServiceModel.IExtensibleObject%601> auquel l'instance actuelle de l'extension appartient. Cet appel permet aux extensions de gérer des événements ou d’inspecter des propriétés de leur propriétaire.  
  
   
  
## Examples  
 Le code d'exemple suivant montre comment cette méthode peut être utilisée pour garder une trace de l'objet <xref:System.ServiceModel.IExtensibleObject%601> auquel l'instance actuelle de l'extension appartient.  
  
```csharp  
InstanceContext owner;  
  
public void Attach(InstanceContext owner)  
{  
  this.owner = owner;   
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Detach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach(T owner);" />
      <MemberSignature Language="F#" Value="abstract member Detach : 'T -&gt; unit" Usage="iExtension.Detach owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner">Objet extensible qui regroupe cette extension en aggrégats.</param>
        <summary>Active un objet pour savoir quand il n'est plus regroupé en agrégat. Appelée lorsqu'une extension est supprimée de la propriété <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la méthode <xref:System.ServiceModel.IExtension%601.Detach%2A> pour savoir quand l'extension a été supprimée. Une extension peut utiliser cette méthode pour décrocher des événements de l'objet extensible. Une extension peut également lever l'exception <xref:System.InvalidOperationException?displayProperty=nameWithType> à partir de cette méthode pour indiquer que l'extension ne peut pas être supprimée une fois ajoutée.  
  
 Notez que cette méthode n'est pas appelée lorsque l'objet propriétaire est détruit ou fermé. Si nécessaire, c'est à l'extension ou au  code qui ajoute l'extension d'accrocher les événements <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType> appropriés ou d'implémenter les interfaces appropriées (pour <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>) afin d'observer le cycle de vie du propriétaire.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>