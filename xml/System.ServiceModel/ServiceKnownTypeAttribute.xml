<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceKnownTypeAttribute.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d32ea625b1739a39c8b4ee8dab59202ab8c57344.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d32ea625b1739a39c8b4ee8dab59202ab8c57344</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>Specifies known types to be used by a service when serializing or deserializing.</source>
          <target state="translated">Spécifie les types connus utilisés par un service lors de la sérialisation ou de la désérialisation.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> is intended for use when creating <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service contracts (interfaces that define the service and its methods).</source>
          <target state="translated">L'<ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> est destiné à être utilisé lors de la création de contrats de service <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> (interfaces qui définissent le service et ses méthodes).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>The <bpt id="p1">*</bpt>known types<ept id="p1">*</ept> are types that may be present in an object graph when serialization or deserialization occurs.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>types connus<ept id="p1">*</ept> sont des types qui peuvent être présents dans un graphique d’objet lors de la sérialisation ou la désérialisation se produit.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>For more information about known types, see <bpt id="p1">[</bpt>Data Contract Known Types<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-known-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les types connus, consultez <bpt id="p1">[</bpt>Types connus de contrat de données<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-known-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>To use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute.MethodName%2A&gt;</ph> property, create a class that contains a method (or methods) that returns an array of types (each being a known type).</source>
          <target state="translated">Pour utiliser la propriété <ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute.MethodName%2A&gt;</ph>, créez une classe qui contient une méthode (ou des méthodes) qui retourne un tableau de types (chacun étant un type connu).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>When applying the attribute, set the <ph id="ph1">`methodName`</ph> to the name of a method that returns the list of types and set the <ph id="ph2">`declaringType`</ph> to the type that contains the method.</source>
          <target state="translated">Lorsque vous appliquez l'attribut, affectez le <ph id="ph1">`methodName`</ph> au nom d'une méthode que retourne la liste de types et affectez le <ph id="ph2">`declaringType`</ph> au type qui contient la méthode.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>The method must return a type that implements the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">La méthode doit retourner un type qui implémente l'interface <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>The method must also include a parameter of type <ph id="ph1">&lt;xref:System.Reflection.ICustomAttributeProvider&gt;</ph>.</source>
          <target state="translated">La méthode doit également inclure un paramètre de type <ph id="ph1">&lt;xref:System.Reflection.ICustomAttributeProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>You can also apply the attribute several times to an interface, class, or method, each time specifying a new known type.</source>
          <target state="translated">Vous pouvez également appliquer plusieurs fois l'attribut à une interface, une classe ou une méthode, en spécifiant à chaque fois un nouveau type connu.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>You can use the word <ph id="ph1">`ServiceKnownType`</ph> in your Microsoft Visual Basic or C# code instead of the longer <ph id="ph2">`ServiceKnownTypeAttribute`</ph>.</source>
          <target state="translated">Vous pouvez utiliser le mot <ph id="ph1">`ServiceKnownType`</ph> dans votre Microsoft Visual Basic ou votre code C# au lieu de l'<ph id="ph2">`ServiceKnownTypeAttribute`</ph> plus long.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> attribute to an interface where the attribute specifies a method name and a declaring type.</source>
          <target state="translated">L'exemple suivant applique l'attribut <ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> à une interface où l'attribut spécifie un nom de méthode et un type déclarant.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>Alternatively, apply the attribute to the interface specifying the known type to include.</source>
          <target state="translated">Vous pouvez aussi appliquer l'attribut à l'interface spécifiant le type connu à inclure.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceKnownTypeAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
          <source>The name of a method that returns the known types.</source>
          <target state="translated">Nom d'une méthode qui retourne les types connus.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /&gt;</ph> class and specifies the name of a method that returns the known types.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /&gt;</ph> et spécifie le nom d'une méthode qui retourne les types connus.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
          <source>Use this constructor when applying the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> to a class that contains methods that return known types.</source>
          <target state="translated">Utilisez ce constructeur lors de l'application de l'<ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> à une classe qui contient les méthodes qui retournent les types connus.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
          <source>Specifies a known type that can be used in a parameter or return value defined by the service.</source>
          <target state="translated">Spécifie un type connu qui peut être utilisé dans un paramètre ou une valeur de retour définis par le service.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /&gt;</ph> class with the specified known type.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /&gt;</ph> à l'aide du type connu spécifié.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> can be applied several times to a method, with each application naming a different known type that may be present in the object graph returned by the method.</source>
          <target state="translated">L'<ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> peut être appliqué plusieurs fois à une méthode, chaque application nommant un type connu différent qui peut être présent dans le graphique d'objets retourné par la méthode.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> attribute to an interface where the attribute specifies the type to include.</source>
          <target state="translated">L'exemple suivant applique l'attribut <ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> à une interface où l'attribut spécifie le type à inclure.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
          <source>The name of a method that returns the known types.</source>
          <target state="translated">Nom d'une méthode qui retourne les types connus.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
          <source>The type that can use the known types in its object graph.</source>
          <target state="translated">Type qui peut utiliser les types connus dans son graphique d'objets.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /&gt;</ph> class with the name of a method that returns the known types and the type that contains the method (or methods) that returns the known types.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /&gt;</ph> avec le nom d'une méthode qui retourne les types connus et le type qui contient la méthode (ou les méthodes) qui retourne les types connus.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> attribute to an interface where the attribute specifies a method name and a declaring type.</source>
          <target state="translated">L'exemple suivant applique l'attribut <ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> à une interface où l'attribut spécifie un nom de méthode et un type déclarant.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
          <source>Gets the type that contains the methods that return the known types.</source>
          <target state="translated">Obtient le type qui contient les méthodes qui retournent les types connus.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that contains the methods that return the known types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> qui contient les méthodes qui retournent les types connus.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
          <source>Gets the name of a method that returns the collection of known types.</source>
          <target state="translated">Obtient le nom d’une méthode qui retourne la collection de types connus.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
          <source>The name of the method that returns the known types.</source>
          <target state="translated">Nom de la méthode qui retourne les types connus.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute.MethodName%2A&gt;</ph> must be the name of a method on the type specified by the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType%2A&gt;</ph> property.</source>
          <target state="translated">L'<ph id="ph1">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute.MethodName%2A&gt;</ph> doit être le nom d'une méthode sur le type spécifié par la propriété <ph id="ph2">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
          <source>The known type that can be included in an object graph.</source>
          <target state="translated">Type connu qui peut être inclus dans un graphique d'objets.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the known type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> du type connu.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>