<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ProtocolException.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b42eb40bbed590bbe8140beec43b639f27536a8a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b42eb40bbed590bbe8140beec43b639f27536a8a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ProtocolException">
          <source>The exception seen on the client that is thrown when communication with the remote party is impossible due to mismatched data transfer protocols.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ProtocolException">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph> can be caused by incompatible bindings between endpoints, the use of an incorrect remote endpoint address, or similar incorrect configuration.</source>
          <target state="translated">L'<ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph> peut résulter de liaisons incompatibles entre des points de terminaison, de l'utilisation d'une adresse de point de terminaison distant incorrecte ou d'une configuration incorrecte similaire.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ProtocolException">
          <source>This exception derives from <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> that represents a class of recoverable errors that may be thrown during communication between endpoints and that robust client and service <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> applications are expected to handle.</source>
          <target state="translated">Cette exception dérive de <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> qui représente une classe d'erreurs récupérables qui peuvent se produire pendant la communication entre les points de terminaison et que le client fiable et les applications <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> de service sont censés gérer.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ProtocolException">
          <source>To prevent a handler for <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> from catching the more specific <ph id="ph2">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>, catch this exception prior to handling <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.</source>
          <target state="translated">Pour empêcher un gestionnaire de <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> d'intercepter le <ph id="ph2">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph> plus spécifique, interceptez cette exception avant de gérer <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ProtocolException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ProtocolException">
          <source>If you want to pass an error message to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">Si vous souhaitez passer un message d'erreur à l'utilisateur, utilisez le constructeur <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.String%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ProtocolException">
          <source>If you want to pass an error message and a reference to the inner exception that is the cause of the exception to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> constructor.</source>
          <target state="translated">Si vous souhaitez passer un message d'erreur et une référence à l'exception interne qui est la cause de l'exception à l'utilisateur, utilisez le constructeur <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ProtocolException">
          <source>If you want to pass serialization information and streaming context, use the <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29&gt;</ph> constructor.</source>
          <target state="translated">Si vous souhaitez passer des informations de sérialisation et le contexte de diffusion, utilisez le constructeur <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
          <source>The error message that explains the reason for the exception.</source>
          
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> class with a specified error message.</source>
          
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
          <source>Use this constructor when you want to pass an error message to the user.</source>
          <target state="translated">Utilisez ce constructeur lorsque vous souhaitez passer un message d'erreur à l'utilisateur.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
          <source>The content of the message parameter should be understandable to the user.</source>
          <target state="translated">Le contenu du paramètre du message doit être compréhensible par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
          <source>If you also want to pass a reference to the inner exception that is the cause of the exception as well as a specified error message to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> constructor.</source>
          <target state="translated">Si vous souhaitez également passer une référence à l'exception interne qui est la cause de l'exception, ainsi qu'un message d'erreur spécifié à l'utilisateur, utilisez le constructeur <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that contains all the data required to serialize the exception.</source>
          
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that specifies the source and destination of the stream.</source>
          
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> class with serialization information and streaming context specified.</source>
          
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstruct the exception object transmitted over a stream.</source>
          <target state="translated">Ce constructeur est appelé lors de la désérialisation afin de reconstruire l’objet exception transmis sur un flux de données.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that caused the current exception to be thrown.</source>
          
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ProtocolException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of the exception.</source>
          
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>Use this constructor when you want to pass an error message and information about an inner exception up to the user.</source>
          <target state="translated">Utilisez ce constructeur lorsque vous souhaitez passer à l'utilisateur un message d'erreur et des informations relatives à une exception interne.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>The content of the message parameter should be understandable to the intended users.</source>
          <target state="translated">Le contenu du paramètre de message doit être compréhensible par les utilisateurs prévus.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Une exception qui est levée en conséquence directe d'une exception précédente peut contenir une référence à l'exception précédente dans la propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a <ph id="ph2">`null`</ph> reference (<ph id="ph3">`Nothing`</ph> in Visual Basic) if the <ph id="ph4">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> retourne la même valeur que celle qui a été passée dans le constructeur, ou une référence <ph id="ph2">`null`</ph> (<ph id="ph3">`Nothing`</ph> en Visual Basic) si la propriété <ph id="ph4">&lt;xref:System.Exception.InnerException%2A&gt;</ph> ne fournit pas la valeur de l'exception interne au constructeur.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>