<Type Name="DuplexChannelFactory&lt;TChannel&gt;" FullName="System.ServiceModel.DuplexChannelFactory&lt;TChannel&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f21fa1d837ee46884a353c57d16183eb71e40a2c" />
    <Meta Name="ms.sourcegitcommit" Value="01f28caab7b3f23878dd07b402a8dd48b9478c8c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="39142277" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DuplexChannelFactory&lt;TChannel&gt; : System.ServiceModel.ChannelFactory&lt;TChannel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DuplexChannelFactory`1&lt;TChannel&gt; extends System.ServiceModel.ChannelFactory`1&lt;!TChannel&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.DuplexChannelFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DuplexChannelFactory(Of TChannel)&#xA;Inherits ChannelFactory(Of TChannel)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TChannel&gt;&#xA;public ref class DuplexChannelFactory : System::ServiceModel::ChannelFactory&lt;TChannel&gt;" />
  <TypeSignature Language="F#" Value="type DuplexChannelFactory&lt;'Channel&gt; = class&#xA;    inherit ChannelFactory&lt;'Channel&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ServiceModel.ChannelFactory&lt;TChannel&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TChannel">TChannel</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TChannel">Type de canal produit par la fabrique de canal.</typeparam>
    <summary>Fournit les moyens permettant de créer et gérer des canaux duplex de types différents utilisés par les clients pour envoyer des messages à et recevoir des messages de points de terminaison de service.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un canal duplex autorise les clients et les serveurs à communiquer entre eux indépendamment de sorte que l'un puisse initier des appels à l'autre. Un service en duplex peut envoyer des messages au point de terminaison client, en fournissant le comportement de type événement. La communication duplex se produit lorsqu'un client établit une session avec un service et fournit à celui-ci un canal sur lequel il peut retourner des messages au client. Les différentes méthodes <xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A> sont utilisées pour créer ces canaux duplex. Le modèle de message duplex est un des trois modèles de message disponibles aux services Windows Communication Foundation (WCF). Les deux autres modèles de message sont unidirectionnels et demande/réponse.  
  
 Pour obtenir une présentation générale des services duplex qui permettent des clients à se connecter au service, consultez [Services Duplex](~/docs/framework/wcf/feature-details/duplex-services.md). Pour obtenir une présentation des étapes impliquées dans l’écriture d’une application de client Windows Communication Foundation (WCF) à l’aide d’une fabrique de canaux, consultez [Comment : utiliser la classe ChannelFactory](~/docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md). Pour une procédure qui décrit comment créer un client Windows Communication Foundation (WCF) dans une classe de client qui implémente l’interface de rappel pour accéder à un service qui utilise un modèle de messagerie duplex, consultez [Comment : accéder aux Services avec un Duplex Contrat](~/docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md).  
  
   
  
## Examples  
 L'exemple suivant montre comment créer une fabrication de canal et l'utiliser pour créer et gérer des canaux.  
  
 [!code-csharp[S_CustomAuthentication#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_customauthentication/cs/instance.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackInstance As InstanceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::ServiceModel::InstanceContext ^ callbackInstance);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : System.ServiceModel.InstanceContext -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; callbackInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec le contexte d'instance spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackInstanceType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(Type ^ callbackInstanceType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : Type -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; callbackInstanceType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">Le <see cref="T:System.Type" /> qui fournit l'instance de rappel que le client utilise pour écouter les messages du service connecté.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec le type d'instance de rappel spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackObject);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackObject) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackObject As Object)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackObject);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackInstance As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackInstance);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : obj -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; callbackInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="callbackInstance" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callbackObject">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="callbackInstance">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un objet qui implémente le contrat de rappel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour passer un objet qui implémente le contrat de rappel pour le service cible par programme plutôt qu'en utilisant un fichier de configuration de l'application.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::ServiceModel::InstanceContext ^ callbackInstance, System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : System.ServiceModel.InstanceContext * System.ServiceModel.Channels.Binding -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstance, binding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un contexte qui implémente le contrat de rappel et une liaison spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour passer un objet de contexte d’instance qui implémente le contrat de rappel pour le service cible et pour passer les informations de liaison par programme plutôt qu’en utilisant un fichier de configuration de l’application.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> ou <paramref name="binding" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackInstance As InstanceContext, endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::ServiceModel::InstanceContext ^ callbackInstance, System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : System.ServiceModel.InstanceContext * System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstance, endpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="endpoint">Le <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> auquel les canaux produits par la fabrique se connectent.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un objet qui implémente le contrat de rappel et un point de terminaison spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour passer un objet de contexte d’instance qui implémente le contrat de rappel pour le service cible et pour passer les informations de point de terminaison par programme plutôt qu’en utilisant un fichier de configuration de l’application.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackInstance As InstanceContext, endpointConfigurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::ServiceModel::InstanceContext ^ callbackInstance, System::String ^ endpointConfigurationName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : System.ServiceModel.InstanceContext * string -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstance, endpointConfigurationName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="endpointConfigurationName">Nom utilisé pour la configuration de point de terminaison.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un objet qui implémente le contrat de rappel et une configuration spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour passer un objet de contexte d’instance qui implémente le contrat de rappel pour le service cible et déterminer les informations sur le point de terminaison cible à partir du fichier de configuration de l’application cliente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> ou <paramref name="endpointConfigurationName" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(Type ^ callbackInstanceType, System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : Type * System.ServiceModel.Channels.Binding -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstanceType, binding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">Le <see cref="T:System.Type" /> qui fournit l'instance de rappel que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec le type d'instance de rappel et de liaison spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> ou <paramref name="binding" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackInstanceType As Type, endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(Type ^ callbackInstanceType, System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : Type * System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstanceType, endpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">Le <see cref="T:System.Type" /> qui fournit l'instance de rappel que le client utilise pour écouter les messages du service connecté.</param>
        <param name="endpoint">
          <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour le service.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec le type d'instance de rappel et de point de terminaison de service spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackInstanceType As Type, endpointConfigurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(Type ^ callbackInstanceType, System::String ^ endpointConfigurationName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : Type * string -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstanceType, endpointConfigurationName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">Le <see cref="T:System.Type" /> qui fournit l'instance de rappel que le client utilise pour écouter les messages du service connecté.</param>
        <param name="endpointConfigurationName">Nom utilisé pour la configuration de point de terminaison.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec le type d'instance de rappel et de configuration spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> ou <paramref name="endpointConfigurationName" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackObject, System.ServiceModel.Channels.Binding binding);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackObject, class System.ServiceModel.Channels.Binding binding) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackObject, System::ServiceModel::Channels::Binding ^ binding);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Channels.Binding binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, class System.ServiceModel.Channels.Binding binding) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackInstance, System::ServiceModel::Channels::Binding ^ binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : obj * System.ServiceModel.Channels.Binding -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstance, binding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="callbackInstance" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" Index="1" />
      </Parameters>
      <Docs>
        <param name="callbackObject">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="callbackInstance">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un objet qui implémente le contrat de rappel et une liaison spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour passer un objet de contexte d’instance qui implémente le contrat de rappel pour le service cible et pour passer les informations de liaison par programme plutôt qu’en utilisant un fichier de configuration de l’application.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> ou <paramref name="binding" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackObject, System.ServiceModel.Description.ServiceEndpoint endpoint);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackObject, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackObject As Object, endpoint As ServiceEndpoint)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackObject, System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Description.ServiceEndpoint endpoint);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackInstance As Object, endpoint As ServiceEndpoint)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackInstance, System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : obj * System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstance, endpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="callbackInstance" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" Index="1" />
      </Parameters>
      <Docs>
        <param name="callbackObject">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="callbackInstance">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="endpoint">Le <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> auquel les canaux produits par la fabrique se connectent.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un objet qui implémente le contrat de rappel et un point de terminaison spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour passer un objet de service qui implémente le contrat de rappel pour le service cible et pour passer les informations de point de terminaison de service par programme plutôt qu'en utilisant un fichier de configuration de l'application.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackObject, string endpointConfigurationName);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackObject, string endpointConfigurationName) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackObject As Object, endpointConfigurationName As String)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackObject, System::String ^ endpointConfigurationName);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, string endpointConfigurationName);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, string endpointConfigurationName) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackInstance As Object, endpointConfigurationName As String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackInstance, System::String ^ endpointConfigurationName);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : obj * string -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstance, endpointConfigurationName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="callbackInstance" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="endpointConfigurationName" Type="System.String" Index="1" />
      </Parameters>
      <Docs>
        <param name="callbackObject">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="callbackInstance">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="endpointConfigurationName">Nom de configuration utilisé pour le point de terminaison.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un objet qui implémente le contrat de rappel et une configuration spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour passer un objet de service qui implémente le contrat de rappel pour le service cible et déterminer les informations sur le point de terminaison cible à partir du fichier de configuration de l'application cliente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> ou <paramref name="endpointConfigurationName" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::ServiceModel::InstanceContext ^ callbackInstance, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ remoteAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : System.ServiceModel.InstanceContext * System.ServiceModel.Channels.Binding * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstance, binding, remoteAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <param name="remoteAddress">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un objet qui implémente le contrat de rappel et une liaison et une adresse de point de terminaison spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour passer un objet de contexte d’instance qui implémente le contrat de rappel pour le service cible et pour passer les informations de liaison et sur l’adresse par programme plutôt qu’en utilisant un fichier de configuration de l’application.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> ou <paramref name="binding" /> ou <paramref name="remoteAddress" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, string remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding, string remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::ServiceModel::InstanceContext ^ callbackInstance, System::ServiceModel::Channels::Binding ^ binding, System::String ^ remoteAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : System.ServiceModel.InstanceContext * System.ServiceModel.Channels.Binding * string -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstance, binding, remoteAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <param name="remoteAddress">Adresse distante qui fournit l'emplacement du service.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un contexte d'instance, une liaison et une adresse distante spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> ou <paramref name="binding" /> ou <paramref name="remoteAddress" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackInstance As InstanceContext, endpointConfigurationName As String, remoteAddress As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::ServiceModel::InstanceContext ^ callbackInstance, System::String ^ endpointConfigurationName, System::ServiceModel::EndpointAddress ^ remoteAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : System.ServiceModel.InstanceContext * string * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstance, endpointConfigurationName, remoteAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="endpointConfigurationName">Nom utilisé pour la configuration de point de terminaison.</param>
        <param name="remoteAddress">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un objet qui implémente le contrat de rappel et une configuration et une adresse de point de terminaison spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour passer un objet de contexte d’instance qui implémente le contrat de rappel pour les informations sur l’adresse de service cible par programme, passer les informations sur l’adresse par programme et déterminer les informations sur le point de terminaison cible restantes à partir du fichier de configuration de l’application cliente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstance" /> ou <paramref name="endpointConfigurationName" /> ou <paramref name="remoteAddress" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(Type ^ callbackInstanceType, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ remoteAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : Type * System.ServiceModel.Channels.Binding * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstanceType, binding, remoteAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">Le <see cref="T:System.Type" /> qui fournit l'instance de rappel que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <param name="remoteAddress">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un type d'instance de rappel, une liaison et une adresse distante spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> ou <paramref name="binding" /> ou <paramref name="remoteAddress" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Channels.Binding binding, string remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, class System.ServiceModel.Channels.Binding binding, string remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(Type ^ callbackInstanceType, System::ServiceModel::Channels::Binding ^ binding, System::String ^ remoteAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : Type * System.ServiceModel.Channels.Binding * string -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstanceType, binding, remoteAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">Le <see cref="T:System.Type" /> qui fournit l'instance de rappel que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <param name="remoteAddress">Adresse distante qui fournit l'emplacement du service.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec le type d'instance de rappel, une liaison et une adresse distante spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> ou <paramref name="binding" /> ou <paramref name="remoteAddress" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (Type callbackInstanceType, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type callbackInstanceType, string endpointConfigurationName, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackInstanceType As Type, endpointConfigurationName As String, remoteAddress As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(Type ^ callbackInstanceType, System::String ^ endpointConfigurationName, System::ServiceModel::EndpointAddress ^ remoteAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : Type * string * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstanceType, endpointConfigurationName, remoteAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackInstanceType" Type="System.Type" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstanceType">Le <see cref="T:System.Type" /> qui fournit l'instance de rappel que le client utilise pour écouter les messages du service connecté.</param>
        <param name="endpointConfigurationName">Nom utilisé pour la configuration de point de terminaison.</param>
        <param name="remoteAddress">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec le type d'instance de rappel, une configuration et une adresse distante spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackInstanceType" /> ou <paramref name="endpointConfigurationName" /> ou <paramref name="remoteAddress" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackObject, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackObject, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackObject, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ remoteAddress);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackInstance, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ remoteAddress);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : obj * System.ServiceModel.Channels.Binding * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstance, binding, remoteAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="callbackInstance" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" Index="1" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" Index="2" />
      </Parameters>
      <Docs>
        <param name="callbackObject">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="callbackInstance">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <param name="remoteAddress">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un objet qui implémente le contrat de rappel et une liaison et une adresse de point de terminaison spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour passer un objet de service qui implémente le contrat de rappel pour le service cible et pour passer les informations de liaison et sur l’adresse par programme plutôt qu’en utilisant un fichier de configuration de l’application.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> ou <paramref name="binding" /> ou <paramref name="remoteAddress" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackObject, System.ServiceModel.Channels.Binding binding, string remoteAddress);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackObject, class System.ServiceModel.Channels.Binding binding, string remoteAddress) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackObject, System::ServiceModel::Channels::Binding ^ binding, System::String ^ remoteAddress);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Channels.Binding binding, string remoteAddress);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, class System.ServiceModel.Channels.Binding binding, string remoteAddress) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackInstance, System::ServiceModel::Channels::Binding ^ binding, System::String ^ remoteAddress);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : obj * System.ServiceModel.Channels.Binding * string -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstance, binding, remoteAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="callbackInstance" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" Index="1" />
        <Parameter Name="remoteAddress" Type="System.String" Index="2" />
      </Parameters>
      <Docs>
        <param name="callbackObject">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="callbackInstance">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <param name="remoteAddress">Adresse distante qui fournit l'emplacement du service.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un objet de rappel, une liaison et une adresse distante spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> ou <paramref name="binding" /> ou <paramref name="remoteAddress" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackObject, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackObject, string endpointConfigurationName, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackObject As Object, endpointConfigurationName As String, remoteAddress As EndpointAddress)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackObject, System::String ^ endpointConfigurationName, System::ServiceModel::EndpointAddress ^ remoteAddress);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public DuplexChannelFactory (object callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object callbackInstance, string endpointConfigurationName, class System.ServiceModel.EndpointAddress remoteAddress) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackInstance As Object, endpointConfigurationName As String, remoteAddress As EndpointAddress)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DuplexChannelFactory(System::Object ^ callbackInstance, System::String ^ endpointConfigurationName, System::ServiceModel::EndpointAddress ^ remoteAddress);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; : obj * string * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;" Usage="new System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt; (callbackInstance, endpointConfigurationName, remoteAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="callbackInstance" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="endpointConfigurationName" Type="System.String" Index="1" />
        <Parameter Name="remoteAddress" Type="System.ServiceModel.EndpointAddress" Index="2" />
      </Parameters>
      <Docs>
        <param name="callbackObject">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="callbackInstance">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="endpointConfigurationName">Nom utilisé pour la configuration de point de terminaison.</param>
        <param name="remoteAddress">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> avec un objet qui implémente le contrat de rappel et une configuration et une adresse de point de terminaison spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour passer un objet de service qui implémente le contrat de rappel pour le service cible, passer les informations sur l'adresse par programme et déterminer les informations sur le point de terminaison cible restantes à partir du fichier de configuration de l'application cliente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callbackObject" /> ou <paramref name="endpointConfigurationName" /> ou <paramref name="remoteAddress" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée un canal duplex d'un type spécifié à une adresse de point de terminaison spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannel (callbackInstance As InstanceContext) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannel(System::ServiceModel::InstanceContext ^ callbackInstance);" />
      <MemberSignature Language="F#" Value="override this.CreateChannel : System.ServiceModel.InstanceContext -&gt; 'Channel" Usage="duplexChannelFactory.CreateChannel callbackInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <summary>Crée un canal duplex entre un service et une instance de rappel sur le client.</summary>
        <returns>Canal duplex de type <paramref name="TChannel" />, paramètre générique pour la fabrique, entre le client et le service.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> ou <paramref name="callbackInstance" />.UserObject a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (object callbackObject, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(object callbackObject, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateChannel (callbackObject As Object, endpointConfigurationName As String) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TChannel CreateChannel(System::Object ^ callbackObject, System::String ^ endpointConfigurationName);" />
      <MemberSignature Language="F#" Value="static member CreateChannel : obj * string -&gt; 'Channel" Usage="System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;.CreateChannel (callbackObject, endpointConfigurationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackObject">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="endpointConfigurationName">Nom utilisé pour la configuration de point de terminaison.</param>
        <summary>Crée un canal duplex entre un service et une instance de rappel sur le client.</summary>
        <returns>Canal de type <paramref name="TChannel" />, paramètre générique pour la fabrique, entre le client et le service.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointConfigurationName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> ou <paramref name="callbackInstance" />.UserObject a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public override TChannel CreateChannel (System.ServiceModel.EndpointAddress address, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !TChannel CreateChannel(class System.ServiceModel.EndpointAddress address, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateChannel (address As EndpointAddress, via As Uri) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override TChannel CreateChannel(System::ServiceModel::EndpointAddress ^ address, Uri ^ via);" />
      <MemberSignature Language="F#" Value="override this.CreateChannel : System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel" Usage="duplexChannelFactory.CreateChannel (address, via)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <param name="via">
          <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le message est envoyé.</param>
        <summary>Crée un canal duplex entre un service et une instance de rappel sur le client.</summary>
        <returns>Canal duplex de type <paramref name="TChannel" />, paramètre générique pour la fabrique, entre le client et le service.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannel (callbackInstance As InstanceContext, address As EndpointAddress) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannel(System::ServiceModel::InstanceContext ^ callbackInstance, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="override this.CreateChannel : System.ServiceModel.InstanceContext * System.ServiceModel.EndpointAddress -&gt; 'Channel" Usage="duplexChannelFactory.CreateChannel (callbackInstance, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="address">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <summary>Crée un canal duplex entre un service et une instance de rappel sur le client.</summary>
        <returns>Canal duplex de type <paramref name="TChannel" />, paramètre générique pour la fabrique, entre le client et le service.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> ou <paramref name="callbackInstance" />.UserObject a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateChannel (callbackInstance As InstanceContext, endpointConfigurationName As String) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TChannel CreateChannel(System::ServiceModel::InstanceContext ^ callbackInstance, System::String ^ endpointConfigurationName);" />
      <MemberSignature Language="F#" Value="static member CreateChannel : System.ServiceModel.InstanceContext * string -&gt; 'Channel" Usage="System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;.CreateChannel (callbackInstance, endpointConfigurationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="endpointConfigurationName">Nom utilisé pour la configuration de point de terminaison.</param>
        <summary>Crée un canal duplex entre un service et une instance de rappel sur le client.</summary>
        <returns>Canal de type <paramref name="TChannel" />, paramètre générique pour la fabrique, entre le client et le service.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointConfigurationName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> ou <paramref name="callbackInstance" />.UserObject a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (object callbackObject, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(object callbackObject, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TChannel CreateChannel(System::Object ^ callbackObject, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ endpointAddress);" />
      <MemberSignature Language="F#" Value="static member CreateChannel : obj * System.ServiceModel.Channels.Binding * System.ServiceModel.EndpointAddress -&gt; 'Channel" Usage="System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;.CreateChannel (callbackObject, binding, endpointAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackObject">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <param name="endpointAddress">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <summary>Crée un canal duplex entre un service et une instance de rappel sur le client.</summary>
        <returns>Canal de type <paramref name="TChannel" />, paramètre générique pour la fabrique, entre le client et le service.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> ou <paramref name="endpointAddress" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> ou <paramref name="callbackInstance" />.UserObject a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TChannel CreateChannel(System::ServiceModel::InstanceContext ^ callbackInstance, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ endpointAddress);" />
      <MemberSignature Language="F#" Value="static member CreateChannel : System.ServiceModel.InstanceContext * System.ServiceModel.Channels.Binding * System.ServiceModel.EndpointAddress -&gt; 'Channel" Usage="System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;.CreateChannel (callbackInstance, binding, endpointAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <param name="endpointAddress">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <summary>Crée un canal duplex entre un service et une instance de rappel sur le client.</summary>
        <returns>Canal de type <paramref name="TChannel" />, paramètre générique pour la fabrique, entre le client et le service.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> ou <paramref name="endpointAddress" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> ou <paramref name="callbackInstance" />.UserObject a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public virtual TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.EndpointAddress address, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.EndpointAddress address, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateChannel (callbackInstance As InstanceContext, address As EndpointAddress, via As Uri) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TChannel CreateChannel(System::ServiceModel::InstanceContext ^ callbackInstance, System::ServiceModel::EndpointAddress ^ address, Uri ^ via);" />
      <MemberSignature Language="F#" Value="override this.CreateChannel : System.ServiceModel.InstanceContext * System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel" Usage="duplexChannelFactory.CreateChannel (callbackInstance, address, via)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Duplex</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="address">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <param name="via">
          <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le message est envoyé.</param>
        <summary>Crée un canal duplex entre un service et une instance de rappel sur le client.</summary>
        <returns>Canal de type <paramref name="TChannel" />, paramètre générique pour la fabrique, entre le client et le service.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> ou <paramref name="callbackInstance" />.UserObject a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (object callbackObject, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(object callbackObject, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TChannel CreateChannel(System::Object ^ callbackObject, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ endpointAddress, Uri ^ via);" />
      <MemberSignature Language="F#" Value="static member CreateChannel : obj * System.ServiceModel.Channels.Binding * System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel" Usage="System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;.CreateChannel (callbackObject, binding, endpointAddress, via)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackObject" Type="System.Object" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="callbackObject">Le <see cref="T:System.Object" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <param name="endpointAddress">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <param name="via">
          <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le message est envoyé.</param>
        <summary>Crée un canal duplex entre un service et une instance de rappel sur le client.</summary>
        <returns>Canal de type <paramref name="TChannel" />, paramètre générique pour la fabrique, entre le client et le service.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> ou <paramref name="endpointAddress" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> ou <paramref name="callbackInstance" />.UserObject a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public static TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !TChannel CreateChannel(class System.ServiceModel.InstanceContext callbackInstance, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress endpointAddress, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TChannel CreateChannel(System::ServiceModel::InstanceContext ^ callbackInstance, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::EndpointAddress ^ endpointAddress, Uri ^ via);" />
      <MemberSignature Language="F#" Value="static member CreateChannel : System.ServiceModel.InstanceContext * System.ServiceModel.Channels.Binding * System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel" Usage="System.ServiceModel.DuplexChannelFactory&lt;'Channel&gt;.CreateChannel (callbackInstance, binding, endpointAddress, via)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackInstance" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="endpointAddress" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="callbackInstance">Le <see cref="T:System.ServiceModel.InstanceContext" /> que le client utilise pour écouter les messages du service connecté.</param>
        <param name="binding">La <see cref="T:System.ServiceModel.Channels.Binding" /> utilisée pour se connecter au service par les canaux produits par la fabrique.</param>
        <param name="endpointAddress">La <see cref="T:System.ServiceModel.EndpointAddress" /> qui fournit l'emplacement du service.</param>
        <param name="via">
          <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le message est envoyé.</param>
        <summary>Crée un canal duplex entre un service et une instance de rappel sur le client.</summary>
        <returns>Canal de type <paramref name="TChannel" />, paramètre générique pour la fabrique, entre le client et le service.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> ou <paramref name="endpointAddress" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="callbackInstance" /> ou <paramref name="callbackInstance" />.UserObject a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>