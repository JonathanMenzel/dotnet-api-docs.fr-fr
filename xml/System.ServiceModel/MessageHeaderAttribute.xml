<Type Name="MessageHeaderAttribute" FullName="System.ServiceModel.MessageHeaderAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0e812b1978170a2455061fb66a6e77f7c590709" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49153245" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageHeaderAttribute extends System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageHeaderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageHeaderAttribute&#xA;Inherits MessageContractMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageHeaderAttribute : System::ServiceModel::MessageContractMemberAttribute" />
  <TypeSignature Language="F#" Value="type MessageHeaderAttribute = class&#xA;    inherit MessageContractMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.MessageContractMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Spécifie qu'un membre de données est un en-tête de message SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'attribut <xref:System.ServiceModel.MessageHeaderAttribute> vous permet de mapper les champs et les propriétés d'un type marqué à l'aide de l'attribut <xref:System.ServiceModel.MessageContractAttribute> aux en-têtes de message SOAP. Le champ ou la propriété peut être d'un type simple ou d'un type composite qui peut être sérialisé.  
  
 Pour plus d’informations sur le contrôle de la sérialisation du contenu d’un corps SOAP sans modifier l’enveloppe SOAP par défaut proprement dite, consultez <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), et [à l’aide des données Contrats](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
 Pour plus d’informations sur la création de contrats de message, consultez [Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md).  
  
 La norme SOAP définit les attributs suivants qui peuvent exister dans un en-tête :  
  
-   `Actor` ou `Role` (`Actor` dans SOAP 1.1, `Role` dans SOAP 1.2)  
  
-   `MustUnderstand`  
  
-   `Relay`  
  
 L'attribut `Actor` ou `Role` spécifie l'URI du nœud pour lequel un en-tête donné est prévu. L'attribut `MustUnderstand` spécifie si l'en-tête comprend le traitement du nœud. L'attribut `Relay` spécifie si l'en-tête sera relayé aux nœuds en aval. Windows Communication Foundation (WCF) n’exécute aucun traitement de ces attributs sur les messages entrants, à l’exception de la `MustUnderstand` attribut.  
  
 Vous pouvez toutefois lire et écrire ces attributs, même s'ils ne sont pas envoyés par défaut. Vous pouvez définir les valeurs d'attribut de deux manières. Vous pouvez d'abord modifier les propriétés <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> et <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> sur l'<xref:System.ServiceModel.MessageHeaderAttribute>. (Il n'y a aucune propriété `Role` – définissez la propriété <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> pour que `Role` soit passée si SOAP 1.2 est utilisé). Exemple :  
  
  
  
 La deuxième méthode pour contrôler ces attributs est de passer type d’en-tête souhaité comme paramètre de type de la classe <xref:System.ServiceModel.MessageHeader%601> et à d’utiliser le type résultant avec l’<xref:System.ServiceModel.MessageHeaderAttribute>. Utilisez ensuite par programmation les propriétés <xref:System.ServiceModel.MessageHeader%601> pour définir les attributs SOAP. Exemple :  
  
  
  
  
  
 Si les mécanismes de vérification statiques et dynamiques sont utilisés, les paramètres statiques sont définis par défaut mais peuvent être substitués à l'aide du mécanisme dynamique. Exemple :  
  
  
  
  
  
 La création d'en-tête répétés avec vérification dynamique des attributs est autorisée. Exemple :  
  
```  
[MessageHeaderArray] public MessageHeader<Person> documentApprovers[];  
```  
  
 Côté réception, la lecture de ces attributs SOAP peut être faite uniquement si la classe <xref:System.ServiceModel.MessageHeader%601> générique est utilisée. Examinez les propriétés <xref:System.ServiceModel.MessageHeader%601.Actor%2A>, <xref:System.ServiceModel.MessageHeader%601.Relay%2A> ou <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> d'un en-tête de type <xref:System.ServiceModel.MessageHeader%601> pour découvrir les paramètres d'attribut du message reçu.  
  
 Lorsqu'un message est reçu puis renvoyé, les paramètres d'attribut SOAP font l'aller-retour uniquement pour les en-têtes de type <xref:System.ServiceModel.MessageHeader%601>.  
  
   
  
## Examples  
 Le code d'exemple suivant illustre l'utilisation de l'<xref:System.ServiceModel.MessageHeaderAttribute> pour créer un en-tête SOAP pour le message de réponse avec les propriétés <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> et <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> définies à des valeurs appropriées pour cet en-tête. L'exemple de code est suivi d'un exemple du message à son envoi.  
  
 [!code-csharp[MessageHeaderAttribute#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageHeaderAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageHeaderAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageHeaderAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public string Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Actor" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Actor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Actor : string with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un URI qui indique le noeud ciblé par cet en-tête. Mappe vers l'attribut d'en-tête Role lorsque SOAP 1.2 est utilisé et l'attribut d'en-tête Actor lorsque SOAP 1.1 est utilisé.</summary>
        <value>URI qui indique le nœud auquel cet en-tête est ciblé. Cet URI mappe vers l'attribut d'en-tête Role lorsque SOAP SOAP est utilisé et l'attribut d'en-tête Actor lorsque SOAP 1.1 est utilisé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus de détails, consultez la section Notes de <xref:System.ServiceModel.MessageHeaderAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustUnderstand">
      <MemberSignature Language="C#" Value="public bool MustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property MustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MustUnderstand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MustUnderstand : bool with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Spécifie si le nœud agissant dans le rôle <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> doit comprendre cet en-tête. Il est mappé vers l'attribut d'en-tête SOAP <see langword="mustUnderstand" />.</summary>
        <value>
          <see langword="true" /> si le nœud ayant le rôle <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> doit comprendre cet en-tête ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus de détails, consultez la section Notes de <xref:System.ServiceModel.MessageHeaderAttribute>.  
  
> [!IMPORTANT]
>  Il faut se souvenir qu'une erreur est générée si la propriété <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> a la valeur `true` dans un message en cours d'envoi et que l'application côté réception ne comprend pas l'en-tête. À l’inverse, si un en-tête avec le `mustUnderstand` attribut d’en-tête SOAP `true` est reçu par Windows Communication Foundation (WCF), il doit faire partie du contrat de message (ou doit être traité par une de Windows Communication Foundation (WCF) canaux) ; Sinon, il est supposé que l’en-tête n’est pas compris et une exception est levée.  
  
   
  
## Examples  
 Le code d'exemple suivant illustre l'utilisation de l'<xref:System.ServiceModel.MessageHeaderAttribute> pour créer un en-tête SOAP pour le message de réponse avec les propriétés <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> et <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> définies à des valeurs appropriées pour cet en-tête. L'exemple de code est suivi d'un exemple du message à son envoi.  
  
 [!code-csharp[MessageHeaderAttribute#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Relay">
      <MemberSignature Language="C#" Value="public bool Relay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Relay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Relay" />
      <MemberSignature Language="VB.NET" Value="Public Property Relay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Relay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Relay : bool with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.Relay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Spécifie si cet en-tête sera relayé aux nœuds en aval. Il est mappé vers l'attribut d'en-tête SOAP <see langword="relay" />.</summary>
        <value>
          <see langword="true" /> si cet en-tête sera relayé aux nœuds en aval ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est ignorée lorsque SOAP 1.1 est utilisé. Pour plus de détails, consultez la section Notes de <xref:System.ServiceModel.MessageHeaderAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>