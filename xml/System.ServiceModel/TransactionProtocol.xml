<Type Name="TransactionProtocol" FullName="System.ServiceModel.TransactionProtocol">
  <TypeSignature Language="C#" Value="public abstract class TransactionProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TransactionProtocol extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.TransactionProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TransactionProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactionProtocol abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TransactionProtocolConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="eb090-101">Spécifie le protocole de transaction utilisé pour le transfert de transactions.</span><span class="sxs-lookup"><span data-stu-id="eb090-101">Specifies the transaction protocol used in flowing transactions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb090-102">Cette classe est utilisée en combinaison avec la classe <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> pour spécifier le protocole souhaité pour le transfert de transactions.</span><span class="sxs-lookup"><span data-stu-id="eb090-102">This class is used together with the <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> class to specify the desired protocol for flowing transactions.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransactionProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.TransactionProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TransactionProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb090-103">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.TransactionProtocol" />.</span><span class="sxs-lookup"><span data-stu-id="eb090-103">Initializes a new instance of the <see cref="T:System.ServiceModel.TransactionProtocol" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.TransactionProtocol Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.TransactionProtocol Default" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.TransactionProtocol.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::TransactionProtocol ^ Default { System::ServiceModel::TransactionProtocol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb090-104">Obtient la valeur par défaut du protocole de transaction.</span><span class="sxs-lookup"><span data-stu-id="eb090-104">Gets the default value for the transaction protocol.</span></span></summary>
        <value><span data-ttu-id="eb090-105">Valeur <see cref="T:System.ServiceModel.TransactionProtocol" /> valide spécifiant le protocole de transaction par défaut à utiliser pour le transfert d'une transaction.</span><span class="sxs-lookup"><span data-stu-id="eb090-105">A valid <see cref="T:System.ServiceModel.TransactionProtocol" /> value that specifies the default transaction protocol to be used in flowing a transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb090-106">Pour plus d’informations sur la sélection d’un protocole de transaction, consultez [l’activation de flux de Transaction](http://msdn.microsoft.com/library/31a6bc6a-4ef4-45ba-a753-1efa1a19d917).</span><span class="sxs-lookup"><span data-stu-id="eb090-106">For more information on selecting a transaction protocol, see [Enabling Transaction Flow](http://msdn.microsoft.com/library/31a6bc6a-4ef4-45ba-a753-1efa1a19d917).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OleTransactions">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.TransactionProtocol OleTransactions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.TransactionProtocol OleTransactions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.TransactionProtocol.OleTransactions" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OleTransactions As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::TransactionProtocol ^ OleTransactions { System::ServiceModel::TransactionProtocol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb090-107">Obtient la valeur du protocole de transaction OleTransactions.</span><span class="sxs-lookup"><span data-stu-id="eb090-107">Gets the OleTransactions transaction protocol value.</span></span></summary>
        <value><span data-ttu-id="eb090-108">Valeur <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</span><span class="sxs-lookup"><span data-stu-id="eb090-108">An <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb090-109">Le protocole OleTransactions est utile pour les scénarios dans lesquels l’interopérabilité avec des piles de protocoles tiers n’est impérative et lorsque le responsable du déploiement d’un service sait à l’avance que WS-AtomicTransaction est désactivé localement ou que la topologie de réseau existante ne favorise pas l’utilisation de WS-AtomicTransaction.</span><span class="sxs-lookup"><span data-stu-id="eb090-109">The OleTransactions protocol is useful for scenarios when interoperability with third-party protocol stacks is not a requirement, and the deployer of a service knows in advance that WS-AtomicTransaction is disabled locally or that the existing network topology does not favor the usage of WS-AtomicTransaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WSAtomicTransaction11">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.TransactionProtocol WSAtomicTransaction11 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.TransactionProtocol WSAtomicTransaction11" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.TransactionProtocol.WSAtomicTransaction11" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WSAtomicTransaction11 As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::TransactionProtocol ^ WSAtomicTransaction11 { System::ServiceModel::TransactionProtocol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb090-110">Obtient la valeur du protocole de transaction WSAtomicTransaction11.</span><span class="sxs-lookup"><span data-stu-id="eb090-110">Gets the WSAtomicTransaction11 transaction protocol value.</span></span></summary>
        <value><span data-ttu-id="eb090-111">Valeur <see cref="T:System.ServiceModel.TransactionProtocol" />.</span><span class="sxs-lookup"><span data-stu-id="eb090-111">A <see cref="T:System.ServiceModel.TransactionProtocol" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WSAtomicTransactionOctober2004">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.TransactionProtocol WSAtomicTransactionOctober2004 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.TransactionProtocol WSAtomicTransactionOctober2004" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WSAtomicTransactionOctober2004 As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::TransactionProtocol ^ WSAtomicTransactionOctober2004 { System::ServiceModel::TransactionProtocol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb090-112">Obtient la valeur du protocole de transaction WSAtomicTransactionOctober2004.</span><span class="sxs-lookup"><span data-stu-id="eb090-112">Gets the WSAtomicTransactionOctober2004 transaction protocol value.</span></span></summary>
        <value><span data-ttu-id="eb090-113">Valeur <see cref="T:System.ServiceModel.TransactionProtocol" />.</span><span class="sxs-lookup"><span data-stu-id="eb090-113">A <see cref="T:System.ServiceModel.TransactionProtocol" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb090-114">Le protocole WS-AtomicTransaction est utile pour les scénarios où l’interopérabilité avec des piles de protocoles tiers est requise.</span><span class="sxs-lookup"><span data-stu-id="eb090-114">The WS-AtomicTransaction protocol is useful for scenarios when interoperability with third-party protocol stacks is a requirement.</span></span> <span data-ttu-id="eb090-115">Il est également utile, de par sa simplicité, pour tester le flux de transactions et le protocole de validation en deux phases à l’aide du protocole WS-AT, sans interférer avec le protocole OleTransactions.</span><span class="sxs-lookup"><span data-stu-id="eb090-115">It is also useful as a simple mechanism for testing transaction flow and the two-phase commit protocol using the WS-AT protocol, without interference with the OleTransactions protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>