<Type Name="AddressAlreadyInUseException" FullName="System.ServiceModel.AddressAlreadyInUseException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f02cb5a17ae45142d63ae1f4d4a7673285e3205d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AddressAlreadyInUseException : System.ServiceModel.CommunicationException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AddressAlreadyInUseException extends System.ServiceModel.CommunicationException" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.AddressAlreadyInUseException" />
  <TypeSignature Language="VB.NET" Value="Public Class AddressAlreadyInUseException&#xA;Inherits CommunicationException" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddressAlreadyInUseException : System::ServiceModel::CommunicationException" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.CommunicationException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="77277-101">Exception levée lorsqu'une adresse n'est pas disponible car elle est déjà en cours d'utilisation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="77277-101">The exception that is thrown when an address is unavailable because it is already in use.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77277-102">Cette exception dérive de <xref:System.ServiceModel.CommunicationException> qui représente une classe d'erreurs récupérables qui peuvent se produire pendant la communication entre les points de terminaison et que le client fiable [!INCLUDE[indigo1](~/includes/indigo1-md.md)] et les applications de service sont censés gérer.</span><span class="sxs-lookup"><span data-stu-id="77277-102">This exception derives from <xref:System.ServiceModel.CommunicationException> that represents a class of recoverable errors that may be thrown during communication between endpoints and that robust [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client and service applications are expected to handle.</span></span> <span data-ttu-id="77277-103">Pour empêcher un gestionnaire de <xref:System.ServiceModel.CommunicationException> d'intercepter le <xref:System.ServiceModel.AddressAlreadyInUseException> plus spécifique, interceptez cette exception avant de gérer <xref:System.ServiceModel.CommunicationException>.</span><span class="sxs-lookup"><span data-stu-id="77277-103">To prevent a handler for <xref:System.ServiceModel.CommunicationException> from catching the more specific <xref:System.ServiceModel.AddressAlreadyInUseException>, catch this exception prior to handling <xref:System.ServiceModel.CommunicationException>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77277-104">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77277-104">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77277-105">Si vous souhaitez passer un message d'erreur à l'utilisateur, utilisez le constructeur <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="77277-105">If you want to pass an error message to the user, use the <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%29> constructor.</span></span>  
  
 <span data-ttu-id="77277-106">Si vous souhaitez passer un message d'erreur et une référence à l'exception interne qui est la cause de l'exception à l'utilisateur, utilisez le constructeur <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%2CSystem.Exception%29>.</span><span class="sxs-lookup"><span data-stu-id="77277-106">If you want to pass an error message and a reference to the inner exception that is the cause of the exception to the user, use the <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%2CSystem.Exception%29> constructor.</span></span>  
  
 <span data-ttu-id="77277-107">Si vous souhaitez passer des informations de sérialisation et le contexte de diffusion, utilisez le constructeur <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>.</span><span class="sxs-lookup"><span data-stu-id="77277-107">If you want to pass serialization information and streaming context, use the <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddressAlreadyInUseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddressAlreadyInUseException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77277-108">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77277-108">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddressAlreadyInUseException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddressAlreadyInUseException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="77277-109">Message d'erreur qui explique la raison de l'exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77277-109">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77277-110">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> avec un message d'erreur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77277-110">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77277-111">Utilisez ce constructeur lorsque vous souhaitez passer un message d'erreur à l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="77277-111">Use this constructor when you want to pass an error message to the user.</span></span> <span data-ttu-id="77277-112">Le contenu du paramètre de message doit être compréhensible par l'utilisateur prévu.</span><span class="sxs-lookup"><span data-stu-id="77277-112">The content of the message parameter should be understandable to the intended user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AddressAlreadyInUseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AddressAlreadyInUseException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="77277-113">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenant toutes les données requises pour sérialiser l'exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77277-113">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="77277-114">Le <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui spécifie la source et la destination du flux de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77277-114">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77277-115">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> avec les informations de sérialisation et le contexte de diffusion en continu spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77277-115">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with serialization information and streaming context specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77277-116">Ce constructeur est appelé lors de la désérialisation afin de reconstruire l’objet exception transmis sur un flux de données.</span><span class="sxs-lookup"><span data-stu-id="77277-116">This constructor is called during deserialization to reconstruct the exception object transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddressAlreadyInUseException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddressAlreadyInUseException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="77277-117">Message d'erreur qui explique la raison de l'exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77277-117">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="77277-118">L'<see cref="T:System.Exception" /> à l'origine de la levée de l'exception actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77277-118">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77277-119">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué l'exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77277-119">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77277-120">Utilisez ce constructeur lorsque vous souhaitez passer à l'utilisateur un message d'erreur et des informations relatives à une exception interne.</span><span class="sxs-lookup"><span data-stu-id="77277-120">Use this constructor when you want to pass an error message and information about an inner exception up to the user.</span></span> <span data-ttu-id="77277-121">Le contenu du paramètre de message doit être compréhensible par les utilisateurs prévus.</span><span class="sxs-lookup"><span data-stu-id="77277-121">The content of the message parameter should be understandable to the intended users.</span></span>  
  
 <span data-ttu-id="77277-122">Une exception qui est levée en conséquence directe d'une exception précédente peut contenir une référence à l'exception précédente dans la propriété <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="77277-122">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="77277-123">La propriété <xref:System.Exception.InnerException%2A> retourne la même valeur que celle qui a été passée dans le constructeur, ou une référence `null` (`Nothing` en Visual Basic) si la propriété <xref:System.Exception.InnerException%2A> ne fournit pas la valeur de l'exception interne au constructeur.</span><span class="sxs-lookup"><span data-stu-id="77277-123">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a `null` reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>