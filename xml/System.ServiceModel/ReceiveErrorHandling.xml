<Type Name="ReceiveErrorHandling" FullName="System.ServiceModel.ReceiveErrorHandling">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6131e88c8ff8fef2ab24c2c44359f9a10675ef48" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46679923" /></Metadata><TypeSignature Language="C#" Value="public enum ReceiveErrorHandling" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ReceiveErrorHandling extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ReceiveErrorHandling" />
  <TypeSignature Language="VB.NET" Value="Public Enum ReceiveErrorHandling" />
  <TypeSignature Language="C++ CLI" Value="public enum class ReceiveErrorHandling" />
  <TypeSignature Language="F#" Value="type ReceiveErrorHandling = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Énumération spécifiant le traitement réservé à un message incohérent.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un message est incohérent si plusieurs tentatives de remise à l'application échouent. Cela vaut uniquement dans le cas de l’utilisation d’une liaison basée sur Message Queuing (MSMQ). La valeur par défaut est `Fault`, qui utilise par défaut l'écouteur et, par conséquent, le ServiceHost. Dans le cas où le service est utilisé par défaut à la suite d'un message incohérent, une <xref:System.ServiceModel.MsmqPoisonMessageException> est levée. L'exception contient l'`LookupId` du message MSMQ qui peut être utilisé pour déplacer le message à l'aide de l'API System.Messaging. Certaines valeurs de l'énumération <xref:System.ServiceModel.ReceiveErrorHandling> telles que `Reject` et `Move` sont uniquement disponibles sur [!INCLUDE[wv](~/includes/wv-md.md)]. Vous pouvez contrôler la gestion des messages incohérents en affectant une des valeurs de cette énumération à la propriété <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveErrorHandling%2A>.  
  
   
  
## Examples  
 Le code de configuration suivant montre comment définir cette propriété dans le fichier de configuration du service :  
  
  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/wcf/feature-details/poison-message-handling.md">Gestion des messages incohérents</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms751472(v=vs.90)">Poison Message Handling in MSMQ 3.0</related>
  </Docs>
  <Members>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="Drop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ReceiveErrorHandling Drop = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ReceiveErrorHandling.Drop" />
      <MemberSignature Language="VB.NET" Value="Drop" />
      <MemberSignature Language="C++ CLI" Value="Drop" />
      <MemberSignature Language="F#" Value="Drop = 1" Usage="System.ServiceModel.ReceiveErrorHandling.Drop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Cette option supprime le message incohérent, qui ne sera dès lors jamais remis à l'application. Si le TTL du message a déjà expiré à ce stade, le message peut apparaître dans la file d'attente de lettres mortes de l'expéditeur. Sinon, il n'apparaît nulle part. Cette option indique que l'utilisateur ne se soucie pas vraiment de la perte du message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Plateformes concernées : [!INCLUDE[wxp](~/includes/wxp-md.md)], [!INCLUDE[ws2003](~/includes/ws2003-md.md)] et [!INCLUDE[wv](~/includes/wv-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fault">
      <MemberSignature Language="C#" Value="Fault" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ReceiveErrorHandling Fault = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ReceiveErrorHandling.Fault" />
      <MemberSignature Language="VB.NET" Value="Fault" />
      <MemberSignature Language="C++ CLI" Value="Fault" />
      <MemberSignature Language="F#" Value="Fault = 0" Usage="System.ServiceModel.ReceiveErrorHandling.Fault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Cette option envoie une erreur à l'écouteur à l'origine de l'utilisation par défaut du ServicHost. Le message doit être supprimé de la file d'attente d'application par un mécanisme externe pour que l'application puisse continuer à traiter les messages de la file d'attente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Plateformes concernées : Windows XP, Windows Server 2003 et Windows Vista.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="Move" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ReceiveErrorHandling Move = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ReceiveErrorHandling.Move" />
      <MemberSignature Language="VB.NET" Value="Move" />
      <MemberSignature Language="C++ CLI" Value="Move" />
      <MemberSignature Language="F#" Value="Move = 3" Usage="System.ServiceModel.ReceiveErrorHandling.Move" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Cette option déplace le message incohérent vers une file d'attente de messages incohérents en vue d'un traitement ultérieur par une application de gestion de messages incohérents.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Plateformes concernées : [!INCLUDE[wv](~/includes/wv-md.md)] uniquement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reject">
      <MemberSignature Language="C#" Value="Reject" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ReceiveErrorHandling Reject = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ReceiveErrorHandling.Reject" />
      <MemberSignature Language="VB.NET" Value="Reject" />
      <MemberSignature Language="C++ CLI" Value="Reject" />
      <MemberSignature Language="F#" Value="Reject = 2" Usage="System.ServiceModel.ReceiveErrorHandling.Reject" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Cette option demande au Message Queuing (MSMQ) d'envoyer un accusé de réception négatif au gestionnaire de files d'attente émetteur pour signaler que l'application ne peut pas recevoir le message. Le message est placé dans la file d'attente de lettres mortes du gestionnaire de files d'attente émetteur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Plateformes concernées : [!INCLUDE[wv](~/includes/wv-md.md)] uniquement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>