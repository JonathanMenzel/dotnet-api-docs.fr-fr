<Type Name="OperationBehaviorAttribute" FullName="System.ServiceModel.OperationBehaviorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0797e88220a67e814cc3ff7722dc5f52e68f919" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48705436" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IOperationBehavior" />
  <TypeSignature Language="F#" Value="type OperationBehaviorAttribute = class&#xA;    inherit Attribute&#xA;    interface IOperationBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Spécifie le comportement d'exécution local d'une méthode de service.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez l'attribut <xref:System.ServiceModel.OperationBehaviorAttribute> pour indiquer le comportement d'exécution spécifique de l'opération lors de son exécution. (Pour spécifier le comportement d'exécution au niveau du service, utilisez l'attribut <xref:System.ServiceModel.ServiceBehaviorAttribute>.)  
  
> [!NOTE]
>  Vous pouvez également utiliser <xref:System.ServiceModel.OperationBehaviorAttribute> pour configurer une opération de contrat de rappel dans une application cliente duplex. Lorsque vous l'utilisez dans le cadre d'une opération de rappel, la propriété <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> doit avoir la valeur <xref:System.ServiceModel.ReleaseInstanceMode.None>, sinon une exception <xref:System.InvalidOperationException> est levée au moment de l'exécution.  
  
 Le <xref:System.ServiceModel.OperationBehaviorAttribute> attribut est une caractéristique modèle de programmation Windows Communication Foundation (WCF) qui active des fonctions courantes que les développeurs devraient sinon doivent implémenter eux-mêmes.  
  
-   La propriété <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> contrôle si les objets de paramètre transférés à une opération sont supprimés au terme de l'opération.  
  
-   La propriété <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> spécifie si la transaction dans laquelle la méthode s'exécute est automatiquement validée si aucune exception non gérée n'est levée.  
  
-   La propriété <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> spécifie si une méthode doit s'exécuter au sein d'une transaction.  
  
-   La propriété <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> spécifie si l'opération de service peut, doit ou ne peut pas emprunter l'identité de l'appelant.  
  
-   La propriété <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> spécifie à quel moment du processus d'appel de la méthode les objets de service sont recyclés.  
  
   
  
## Examples  
 L’exemple de code suivant montre une opération qui s’exécute dans une transaction distribuée obligatoire. La propriété <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> indique que la méthode s'exécute sous la transaction de l'appelant, tandis que la propriété <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> indique qu'en l'absence d'exception non gérée, la transaction est automatiquement validée. Si une exception non gérée se produit, la transaction est abandonnée.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le constructeur par défaut crée une instance de la classe avec les valeurs par défaut suivantes :  
  
-   La propriété <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> a la valeur `true`.  
  
-   La propriété <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> a la valeur `false`.  
  
-   La propriété <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> a la valeur <xref:System.ServiceModel.ReleaseInstanceMode.None>.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> a la valeur <xref:System.ServiceModel.ImpersonationOption.NotAllowed>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoDisposeParameters">
      <MemberSignature Language="C#" Value="public bool AutoDisposeParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoDisposeParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDisposeParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoDisposeParameters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoDisposeParameters : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si les paramètres doivent être automatiquement supprimés.</summary>
        <value><see langword="true" /> si les paramètres doivent être automatiquement supprimés ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété détermine si le service supprime tous les paramètres éliminables (paramètres d'entrée, de sortie ou de référence) créés au cours du traitement d'un message. La valeur par défaut est `true`. Affectez la valeur `false` à cette propriété si vous souhaitez empêcher le système de supprimer des ressources et les mettre en cache si nécessaire.  
  
 Par exemple, si <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> a la valeur `false`, l'expéditeur est chargé de fermer le flux côté envoi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ImpersonationOption Impersonation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ImpersonationOption Impersonation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberSignature Language="VB.NET" Value="Public Property Impersonation As ImpersonationOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ImpersonationOption Impersonation { System::ServiceModel::ImpersonationOption get(); void set(System::ServiceModel::ImpersonationOption value); };" />
      <MemberSignature Language="F#" Value="member this.Impersonation : System.ServiceModel.ImpersonationOption with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique le niveau d'emprunt de l'identité de l'appelant pris en charge par l'opération.</summary>
        <value>Une des valeurs de <see cref="T:System.ServiceModel.ImpersonationOption" />. La valeur par défaut est <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la propriété <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> (avec une configuration de liaison prenant en charge l'emprunt d'identité) pour activer l'exécution des méthodes spécifiées (dont la valeur de la propriété <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> est <xref:System.ServiceModel.ImpersonationOption.Allowed> ou <xref:System.ServiceModel.ImpersonationOption.Required>) sous l'identité de l'appelant. Pour plus d’informations, y compris comment l’emprunt d’identité est effectuée lors de l’utilisation <xref:System.ServiceModel.ImpersonationOption.Allowed> conjointement avec la <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> propriété, consultez [délégation et emprunt d’identité](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md) et [Comment : emprunter l’identité d’un Client sur un Service](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md).  
  
> [!NOTE]
>  Lorsque vous ajoutez par programme un point de terminaison de service qui effectue un emprunt d'identité, vous devez utiliser une des méthodes <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> ou la méthode <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType> pour charger correctement le contrat dans un nouvel objet <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType>. L'utilisation d'un fichier de configuration ne requiert aucune étape supplémentaire.  
  
 Certains scénarios ne prennent pas en charge l'emprunt d'identité. Pour plus d’informations, consultez [scénarios non pris en charge](~/docs/framework/wcf/feature-details/unsupported-scenarios.md).  
  
   
  
## Examples  
 L'exemple de code de service suivant demande un emprunt d'identité en affectant à la propriété <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> la valeur <xref:System.ServiceModel.ImpersonationOption.Required>.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/services.cs#1)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/services.vb#1)]  
  
 L'exemple de code suivant illustre l'utilisation de la propriété <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> pour définir les informations d'identification de l'application cliente avant d'appeler l'opération qui a besoin de ces informations pour l'emprunt d'identité.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/client.cs#3)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstanceMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseInstanceMode As ReleaseInstanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReleaseInstanceMode ReleaseInstanceMode { System::ServiceModel::ReleaseInstanceMode get(); void set(System::ServiceModel::ReleaseInstanceMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseInstanceMode : System.ServiceModel.ReleaseInstanceMode with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReleaseInstanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique quand recycler l'objet de service au cours d'un appel d'opération.</summary>
        <value>Une des valeurs de <see cref="T:System.ServiceModel.ReleaseInstanceMode" />. La valeur par défaut est <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> propriété pour spécifier quand Windows Communication Foundation (WCF) recycle un objet de service au cours de l’exécution d’une méthode. Par défaut, l'objet de service est recyclé en fonction de la valeur <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>. La configuration de la propriété <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> modifie ce comportement par défaut.  
  
 Le <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> n'offre aucune garantie de threading. Si vous devez avoir un objet nouveau, non modifié, lors de l'exécution du service, affectez la valeur <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> à la propriété <xref:System.ServiceModel.InstanceContextMode.PerCall>.  
  
 Dans les scénarios de transaction, la propriété <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> est souvent utilisée pour s'assurer que les anciennes données associées à l'objet de service sont nettoyées avant le traitement d'un appel de méthode. Vous pouvez également vous assurer que les objets de service associés aux transactions sont recyclés après l'exécution de la transaction en affectant la valeur <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> à la propriété `true`.  
  
 Vous avez le choix entre les comportements suivants :  
  
-   Recycler un objet de service avant l'appel d'une opération.  
  
-   Recycler un objet de service après l'appel d'une opération.  
  
-   Recycler un objet de service avant et après l'appel d'une opération.  
  
-   Pas de comportement de recyclage.  
  
 Vous pouvez également utiliser <xref:System.ServiceModel.OperationBehaviorAttribute> pour configurer une opération de contrat de rappel dans une application cliente duplex. Lorsque vous l'utilisez dans le cadre d'une opération de rappel, la propriété <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> doit avoir la valeur <xref:System.ServiceModel.ReleaseInstanceMode.None>, sinon une exception <xref:System.InvalidOperationException> est levée au moment de l'exécution.  
  
 De plus, il est important de garder à l'esprit que si le service est créé en passant un objet de service au constructeur <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType>, la valeur de cette propriété est traitée comme si elle était <xref:System.ServiceModel.ReleaseInstanceMode.None>.  
  
   
  
## Examples  
 Le code d'exemple suivant illustre l'utilisation de <xref:System.ServiceModel.ReleaseInstanceMode> pour recycler des objets de service avant et après un appel.  
  
 [!code-csharp[OBA.ReleaseInstanceMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/oba.releaseinstancemode/cs/services.cs#1)]
 [!code-vb[OBA.ReleaseInstanceMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/oba.releaseinstancemode/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur ne fait pas partie des valeurs <see cref="T:System.ServiceModel.ReleaseInstanceMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As OperationDescription, parameters As BindingParameterCollection) Implements IOperationBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IOperationBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Description d'opération modifiée pour prendre en charge des propriétés <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</param>
        <param name="parameters">Liaison des paramètres passés pour prendre en charge la liaison de comportements.</param>
        <summary>Implémente la méthode <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.ClientOperation proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (description As OperationDescription, proxy As ClientOperation) Implements IOperationBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::ClientOperation ^ proxy) = System::ServiceModel::Description::IOperationBehavior::ApplyClientBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="description">Description d'opération modifiée pour prendre en charge des propriétés <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</param>
        <param name="proxy">Point d'accès de l'extensibilité permettant d'insérer des modifications de client personnalisées pour cette opération.</param>
        <summary>Implémente le comportement de l'opération côté client.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.DispatchOperation dispatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As OperationDescription, dispatch As DispatchOperation) Implements IOperationBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatch) = System::ServiceModel::Description::IOperationBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="description">Description d'opération modifiée pour prendre en charge des propriétés <see cref="T:System.ServiceModel.OperationBehaviorAttribute" />.</param>
        <param name="dispatch">Point d'extensibilité permettant d'insérer des modifications de service personnalisées pour cette opération.</param>
        <summary>Implémente le comportement de l'opération côté service.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As OperationDescription) Implements IOperationBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.Validate(System::ServiceModel::Description::OperationDescription ^ description) = System::ServiceModel::Description::IOperationBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="description">Description de l'opération à valider.</param>
        <summary>Implémente le comportement de validation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoComplete">
      <MemberSignature Language="C#" Value="public bool TransactionAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoComplete : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l’étendue de la transaction actuelle doit être automatiquement exécutée lorsqu’aucune exception non gérée ne se produit.</summary>
        <value><see langword="true" /> pour exécuter automatiquement l'étendue de la transaction en cas de succès de l'exécution de l'opération ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Affectez la valeur <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> à la propriété `false` pour exécuter ou abandonner des transactions directement dans le code de l'opération.  
  
 Des exceptions prises en charge peuvent être levées au cours de l'opération sans que la transaction soit automatiquement abandonnée. Seules les exceptions non gérées déclenchent un abandon automatique.  
  
   
  
## Examples  
 L’exemple de code suivant montre une opération qui s’exécute dans une transaction distribuée obligatoire. La propriété <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> indique que l'opération s'exécute sous une étendue de transaction, tandis que la propriété <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> indique qu'en l'absence d'exception non gérée l'étendue de transaction est automatiquement menée à son terme. Si une exception non gérée se produit, la transaction est abandonnée.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionScopeRequired">
      <MemberSignature Language="C#" Value="public bool TransactionScopeRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionScopeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionScopeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionScopeRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionScopeRequired : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la méthode requiert une étendue de transaction pour son exécution.</summary>
        <value><see langword="true" /> si la méthode requiert une étendue de transaction pour son exécution ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Affectez la valeur <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> à la propriété `true` pour demander l'exécution de votre opération dans une étendue de transaction. Si une transaction passée est disponible, l'opération s'exécute dans celle-ci. Si aucune transaction n'est disponible, une nouvelle transaction est créée et utilisée pour l'exécution de l'opération. La liaison spécifiée dans le point de terminaison vérifie si les transactions passées sont prises en charge. Par conséquent, si vous voulez obtenir un comportement adéquat, vous devez comprendre l'interaction entre l'autorisation par la liaison du flux de transaction et la propriété <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>. Le tableau suivant répertorie les comportements possibles.  
  
|TransactionScopeRequired|La liaison autorise le flux de transaction|L'appelant transfère la transaction|Résultat|  
|-|-|-|-|  
|False|False|Non|La méthode s'exécute sans transaction.|  
|True|False|Non|La méthode est créée et s'exécute au sein d'une nouvelle transaction.|  
|True ou False|False|Oui|Une erreur SOAP est retournée pour l’en-tête de transaction.|  
|False|True|Oui|La méthode s’exécute sans transaction.|  
|True|True|Oui|La méthode s'exécute sous la transaction passée.|  
  
   
  
## Examples  
 L'exemple de code suivant montre une opération qui s'exécute dans une transaction distribuée obligatoire. La propriété <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> indique que l'opération s'exécute sous une étendue de transaction, tandis que la propriété <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> indique qu'en l'absence d'exception non gérée l'étendue de transaction est automatiquement menée à son terme. Si une exception non gérée se produit, la transaction est abandonnée.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>