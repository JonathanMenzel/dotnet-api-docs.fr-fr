<Type Name="IChannelCredentials" FullName="System.ServiceModel.ComIntegration.IChannelCredentials">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce4c62113d46af39e4d686b1396360fadc78bb06" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34314979" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannelCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelCredentials" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ComIntegration.IChannelCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelCredentials" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannelCredentials" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("181b448c-c17c-4b17-ac6d-06699b93198f")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface qui autorise la définition de certaines fonctionnalités de sécurité sur un proxy de service.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les clients non managés utilisent le moniker « service » pour accéder aux services Windows Communication Foundation (WCF). Ces clients sont soumis au modèle de sécurité WCF plutôt que le modèle de sécurité COM. L'interface <xref:System.ServiceModel.ComIntegration.IChannelCredentials> est fournie pour spécifier des informations d'identification de canal. Cela est nécessaire, car le moniker COM ne peut pas accéder au modèle d’objet de sécurité WCF managé.  
  
 L'appel à méthodes sur l'interface `IChannelCredentials` n'est pas autorisé après que le canal a été créé. Il s’agit, car Windows Communication Foundation (WCF) ne prend pas en charge la modification des paramètres de sécurité sur un canal déjà ouvert. Lorsque le client du moniker de service obtient un proxy, le canal n'est pas encore créé. Par conséquent, le client doit appeler des méthodes `IChannelCredentials` avant d'appeler la méthode de service. Si le client appelle une méthode `IChannelCredentials` après avoir appelé la méthode de service, l'exception RPC_E_TOO_LATE est levée.  
  
   
  
## Examples  
  
```  
monString = "service:mexAddress=http://localhost:8000/ServiceModelSamples/Service?wsdl"  
    monString = monString + ", address=http://localhost:8000/ServiceModelSamples/Service"  
    monString = monString + ", binding=BasicHttpBinding_ICalculator, bindingNamespace=http://Microsoft.ServiceModel.Samples"  
    monString = monString + ", contract=ICalculator, contractNamespace=http://Microsoft.ServiceModel.Samples"  
  
    Set monikerProxy = GetObject(monString)  
  
    'Set the Service Certificate.  
    monikerProxy.ChannelCredentials.SetServiceCertificateAuthentication "CurrentUser", "NoCheck", "PeerOrChainTrust"  
    monikerProxy.ChannelCredentials.SetDefaultServiceCertificateFromStore "CurrentUser", "TrustedPeople", "FindBySubjectName", "localhost"  
  
    'Set the Client Certificate.  
    monikerProxy.ChannelCredentials.SetClientCertificateFromStoreByName "CN=client.com", "CurrentUser", "My"  
    MsgBox monikerProxy.Add(3, 4)  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetClientCertificateFromFile">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromFile (string fileName, string password, string keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromFile(string fileName, string password, string keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromFile (fileName As String, password As String, keyStorageFlags As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromFile(System::String ^ fileName, System::String ^ password, System::String ^ keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nom du fichier qui contient le certificat.</param>
        <param name="password">Mot de passe requis pour le fichier.</param>
        <param name="keyStorageFlags">Indicateurs de stockage du certificat.</param>
        <summary>Récupère un certificat à partir d'un fichier et l'ajoute aux informations d'identification du client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque `keyStorageFlags` a pour valeur null ou une chaîne vide, les indicateurs de stockage par défaut sont utilisés.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClientCertificateFromStore">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromStore (string storeLocation, string storeName, string findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromStore(string storeLocation, string storeName, string findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromStore (storeLocation As String, storeName As String, findType As String, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromStore(System::String ^ storeLocation, System::String ^ storeName, System::String ^ findType, System::Object ^ findValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="findType" Type="System.String" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Emplacement de magasin de certificats.</param>
        <param name="storeName">Nom de magasin de certificats.</param>
        <param name="findType">Type de recherche.</param>
        <param name="findValue">Valeur de recherche.</param>
        <summary>Récupère un certificat à partir d'un magasin de certificats et l'ajoute aux informations d'identification du client.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClientCertificateFromStoreByName">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromStoreByName (string subjectName, string storeLocation, string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromStoreByName(string subjectName, string storeLocation, string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromStoreByName (subjectName As String, storeLocation As String, storeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromStoreByName(System::String ^ subjectName, System::String ^ storeLocation, System::String ^ storeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subjectName">Nom du sujet du certificat.</param>
        <param name="storeLocation">Emplacement de magasin de certificats.</param>
        <param name="storeName">Nom de magasin de certificats.</param>
        <summary>Récupère un certificat à partir d'un magasin de certificats, à l'aide de son nom, et l'ajoute aux informations d'identification du client.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromFile">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromFile (string fileName, string password, string keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromFile(string fileName, string password, string keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromFile (fileName As String, password As String, keyStorageFlags As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromFile(System::String ^ fileName, System::String ^ password, System::String ^ keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nom de fichier de certificat.</param>
        <param name="password">Mot de passe de fichier de certificat.</param>
        <param name="keyStorageFlags">Indicateurs de stockage de certificat.</param>
        <summary>Récupère un certificat à partir d'un fichier et l'ajoute aux informations d'identification de service en tant que certificat par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque `keyStorageFlags` a pour valeur null ou une chaîne vide, les indicateurs de stockage par défaut sont utilisés.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromStore">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromStore (string storeLocation, string storeName, string findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromStore(string storeLocation, string storeName, string findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromStore (storeLocation As String, storeName As String, findType As String, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromStore(System::String ^ storeLocation, System::String ^ storeName, System::String ^ findType, System::Object ^ findValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="findType" Type="System.String" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Emplacement de magasin de certificats.</param>
        <param name="storeName">Nom de magasin de certificats.</param>
        <param name="findType">Type de recherche.</param>
        <param name="findValue">Valeur de recherche.</param>
        <summary>Récupère un certificat à partir d'un magasin de certificats et l'ajoute aux informations d'identification de service en tant que certificat par défaut.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromStoreByName">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromStoreByName (string subjectName, string storeLocation, string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromStoreByName(string subjectName, string storeLocation, string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromStoreByName (subjectName As String, storeLocation As String, storeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromStoreByName(System::String ^ subjectName, System::String ^ storeLocation, System::String ^ storeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subjectName">Nom du sujet du certificat.</param>
        <param name="storeLocation">Emplacement de magasin de certificats.</param>
        <param name="storeName">Nom de magasin de certificats.</param>
        <summary>Récupère un certificat à partir d'un magasin de certificats, à l'aide de son nom, et l'ajoute aux informations d'identification de service en tant que certificat par défaut.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIssuedToken">
      <MemberSignature Language="C#" Value="public void SetIssuedToken (string localIssuerAddres, string localIssuerBindingType, string localIssuerBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIssuedToken(string localIssuerAddres, string localIssuerBindingType, string localIssuerBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIssuedToken (localIssuerAddres As String, localIssuerBindingType As String, localIssuerBinding As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIssuedToken(System::String ^ localIssuerAddres, System::String ^ localIssuerBindingType, System::String ^ localIssuerBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localIssuerAddres" Type="System.String" />
        <Parameter Name="localIssuerBindingType" Type="System.String" />
        <Parameter Name="localIssuerBinding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localIssuerAddres">Adresse de point de terminaison.</param>
        <param name="localIssuerBindingType">Type de liaison.</param>
        <param name="localIssuerBinding">Nom de liaison.</param>
        <summary>Définit les paramètres du jeton émis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetServiceCertificateAuthentication">
      <MemberSignature Language="C#" Value="public void SetServiceCertificateAuthentication (string storeLocation, string revocationMode, string certificationValidationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetServiceCertificateAuthentication(string storeLocation, string revocationMode, string certificationValidationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetServiceCertificateAuthentication (storeLocation As String, revocationMode As String, certificationValidationMode As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetServiceCertificateAuthentication(System::String ^ storeLocation, System::String ^ revocationMode, System::String ^ certificationValidationMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="revocationMode" Type="System.String" />
        <Parameter Name="certificationValidationMode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Emplacement de stockage.</param>
        <param name="revocationMode">Mode de révocation.</param>
        <param name="certificationValidationMode">Mode de validation de la certification.</param>
        <summary>Définit les paramètres d'authentification du certificat de service.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserNameCredential">
      <MemberSignature Language="C#" Value="public void SetUserNameCredential (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserNameCredential(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserNameCredential (userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUserNameCredential(System::String ^ userName, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nom d'utilisateur.</param>
        <param name="password">Mot de passe.</param>
        <summary>Définit les informations d'identification de nom d'utilisateur.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWindowsCredential">
      <MemberSignature Language="C#" Value="public void SetWindowsCredential (string domain, string userName, string password, int impersonationLevel, bool allowNtlm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowsCredential(string domain, string userName, string password, int32 impersonationLevel, bool allowNtlm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential(System.String,System.String,System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWindowsCredential (domain As String, userName As String, password As String, impersonationLevel As Integer, allowNtlm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWindowsCredential(System::String ^ domain, System::String ^ userName, System::String ^ password, int impersonationLevel, bool allowNtlm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="impersonationLevel" Type="System.Int32" />
        <Parameter Name="allowNtlm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="domain">Domaine.</param>
        <param name="userName">Nom d'utilisateur.</param>
        <param name="password">Mot de passe.</param>
        <param name="impersonationLevel">Niveau d'emprunt d'identité.</param>
        <param name="allowNtlm">Autorisez le schéma d'authentification NTLM.</param>
        <summary>Définit les informations d'identification Windows.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>