<Type Name="PageExecutionContext" FullName="System.Web.Instrumentation.PageExecutionContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12b630f11db4483cb51721733d78409c6fb2efaa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30535973" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PageExecutionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageExecutionContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Instrumentation.PageExecutionContext" />
  <TypeSignature Language="VB.NET" Value="Public Class PageExecutionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageExecutionContext" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit les informations relatives à la position actuelle dans le cycle d'exécution de la page.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageExecutionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Instrumentation.PageExecutionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageExecutionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Instrumentation.PageExecutionContext" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiteral">
      <MemberSignature Language="C#" Value="public bool IsLiteral { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLiteral" />
      <MemberSignature Language="DocId" Value="P:System.Web.Instrumentation.PageExecutionContext.IsLiteral" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiteral As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLiteral { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un indicateur qui spécifie si le bloc contient le contenu littéral qui doit être profondément analysé pour le mappage de sélection.</summary>
        <value>
          <see langword="true" /> si le bloc contient du contenu littéral qui doit être analysé en profondeur à des fins de mappage de sélection ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Web.Instrumentation.PageExecutionContext.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la longueur (en caractères) du bloc.</summary>
        <value>Longueur, en caractères, du bloc.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartPosition">
      <MemberSignature Language="C#" Value="public int StartPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Web.Instrumentation.PageExecutionContext.StartPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property StartPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StartPosition { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la position de départ de base zéro du bloc depuis le début du document rendu.</summary>
        <value>Position de départ de base zéro du bloc depuis le début du document rendu</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter TextWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter TextWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Instrumentation.PageExecutionContext.TextWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ TextWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le TextWriter utilisé pour afficher le document.</summary>
        <value>Writer de texte utilisé pour afficher le document.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le writer de texte permet aux consommateurs de jetons d’écriture dans le flux de sortie pour le mappage de la sélection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Instrumentation.PageExecutionContext.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le chemin d'accès virtuel du fichier source.</summary>
        <value>Chemin d'accès virtuel du fichier source.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le chemin d’accès virtuel du fichier source permet aux consommateurs de trouver le fichier source à utiliser pour le mappage de la sélection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>