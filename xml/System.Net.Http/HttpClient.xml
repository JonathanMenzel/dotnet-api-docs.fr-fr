<Type Name="HttpClient" FullName="System.Net.Http.HttpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6db8dfe2a869e31483172c319a7c35eb6ec58e13" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36476557" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpClient : System.Net.Http.HttpMessageInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClient extends System.Net.Http.HttpMessageInvoker" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClient&#xA;Inherits HttpMessageInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClient : System::Net::Http::HttpMessageInvoker" />
  <TypeSignature Language="F#" Value="type HttpClient = class&#xA;    inherit HttpMessageInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageInvoker</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f04db-101">Fournit une classe de base pour envoyer des requêtes HTTP et recevoir des réponses HTTP d'une ressource identifiée par un URI.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f04db-101">Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-102">Le <xref:System.Net.Http.HttpClient> instance de la classe agit comme une session pour envoyer des requêtes HTTP.</span><span class="sxs-lookup"><span data-stu-id="f04db-102">The <xref:System.Net.Http.HttpClient> class instance acts as a session to send HTTP requests.</span></span> <span data-ttu-id="f04db-103">Un <xref:System.Net.Http.HttpClient> instance est une collection de paramètres appliqués à toutes les requêtes exécutées par cette instance.</span><span class="sxs-lookup"><span data-stu-id="f04db-103">An <xref:System.Net.Http.HttpClient> instance is a collection of settings applied to all requests executed by that instance.</span></span> <span data-ttu-id="f04db-104">En outre, chaque <xref:System.Net.Http.HttpClient> instance utilise son propre pool de connexions, isolant ses demandes de requêtes exécutées par d’autres <xref:System.Net.Http.HttpClient> instances.</span><span class="sxs-lookup"><span data-stu-id="f04db-104">In addition, every <xref:System.Net.Http.HttpClient> instance uses its own connection pool, isolating its requests from requests executed by other <xref:System.Net.Http.HttpClient> instances.</span></span>  
  
 <span data-ttu-id="f04db-105">Le <xref:System.Net.Http.HttpClient> agit également comme une classe de base pour les clients HTTP plus spécifiques.</span><span class="sxs-lookup"><span data-stu-id="f04db-105">The <xref:System.Net.Http.HttpClient> also acts as a base class for more specific HTTP clients.</span></span> <span data-ttu-id="f04db-106">Un exemple serait un FacebookHttpClient fournissant des méthodes supplémentaires spécifiques à un service web de Facebook (une méthode GetFriends, par exemple).</span><span class="sxs-lookup"><span data-stu-id="f04db-106">An example would be a FacebookHttpClient providing additional methods specific to a Facebook web service (a GetFriends method, for instance).</span></span> <span data-ttu-id="f04db-107">Classes dérivées ne doivent pas substituer les méthodes virtuelles sur la classe.</span><span class="sxs-lookup"><span data-stu-id="f04db-107">Derived classes should not override the virtual methods on the class.</span></span> <span data-ttu-id="f04db-108">Au lieu de cela, utilisez une surcharge de constructeur qui accepte une <xref:System.Net.Http.HttpMessageHandler> pour configurer tout antérieur ou postérieur à demande de traitement à la place.</span><span class="sxs-lookup"><span data-stu-id="f04db-108">Instead, use a constructor overload that accepts <xref:System.Net.Http.HttpMessageHandler> to configure any pre- or post-request processing instead.</span></span>
  
 <span data-ttu-id="f04db-109">Par défaut, <xref:System.Net.HttpWebRequest> doit servir à envoyer des demandes au serveur.</span><span class="sxs-lookup"><span data-stu-id="f04db-109">By default, <xref:System.Net.HttpWebRequest> will be used to send requests to the server.</span></span> <span data-ttu-id="f04db-110">Ce comportement peut être modifié en spécifiant un autre canal dans une des surcharges de constructeur prenant une <xref:System.Net.Http.HttpMessageHandler> instance en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="f04db-110">This behavior can be modified by specifying a different channel in one of the constructor overloads taking a <xref:System.Net.Http.HttpMessageHandler> instance as parameter.</span></span> <span data-ttu-id="f04db-111">Si les fonctionnalités telles que l’authentification ou la mise en cache sont requises, <xref:System.Net.Http.WebRequestHandler> peut être utilisée pour configurer les paramètres et les peuvent instance être passé au constructeur.</span><span class="sxs-lookup"><span data-stu-id="f04db-111">If features like authentication or caching are required, <xref:System.Net.Http.WebRequestHandler> can be used to configure settings and the instance can be passed to the constructor.</span></span> <span data-ttu-id="f04db-112">Le gestionnaire retourné peut être passé à une des surcharges de constructeur prenant une <xref:System.Net.Http.HttpMessageHandler> paramètre.</span><span class="sxs-lookup"><span data-stu-id="f04db-112">The returned handler can be passed to one of the constructor overloads taking a <xref:System.Net.Http.HttpMessageHandler> parameter.</span></span>  
  
 <span data-ttu-id="f04db-113">Si une application à l’aide de <xref:System.Net.Http.HttpClient> et les classes associées dans le <xref:System.Net.Http> espace de noms envisage de télécharger de grandes quantités de données (50 mégaoctets ou plus), puis l’application doit transmettre ces téléchargements et pas utiliser la mise en mémoire tampon par défaut.</span><span class="sxs-lookup"><span data-stu-id="f04db-113">If an app using <xref:System.Net.Http.HttpClient> and related classes in the  <xref:System.Net.Http> namespace intends to download large amounts of data (50 megabytes or more), then the app should stream those downloads and not use the default buffering.</span></span> <span data-ttu-id="f04db-114">Si la mise en mémoire tampon par défaut est utilisé l’utilisation de la mémoire client obtiendra très volumineuse, risquent de considérablement ses performances réduites.</span><span class="sxs-lookup"><span data-stu-id="f04db-114">If the default buffering is used the client memory usage will get very large, potentially resulting in substantially reduced performance.</span></span>  
  
 <span data-ttu-id="f04db-115">Les méthodes suivantes sont thread-safe :</span><span class="sxs-lookup"><span data-stu-id="f04db-115">The following methods are thread safe:</span></span>  
  
1.  <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>  
  
2.  <xref:System.Net.Http.HttpClient.DeleteAsync%2A>  
  
3.  <xref:System.Net.Http.HttpClient.GetAsync%2A>  
  
4.  <xref:System.Net.Http.HttpClient.GetByteArrayAsync%2A>  
  
5.  <xref:System.Net.Http.HttpClient.GetStreamAsync%2A>  
  
6.  <xref:System.Net.Http.HttpClient.GetStringAsync%2A>  
  
7.  <xref:System.Net.Http.HttpClient.PostAsync%2A>  
  
8.  <xref:System.Net.Http.HttpClient.PutAsync%2A>  
  
9. <xref:System.Net.Http.HttpClient.SendAsync%2A>  
  
 <span data-ttu-id="f04db-116"><xref:System.Net.Http.HttpClient> est destinée à être instancié une fois et réutilisées dans l’ensemble de la durée de vie d’une application.</span><span class="sxs-lookup"><span data-stu-id="f04db-116"><xref:System.Net.Http.HttpClient> is intended to be instantiated once and re-used throughout the life of an application.</span></span> <span data-ttu-id="f04db-117">Le nombre de sockets disponibles en cas de surcharges arriveront à l’instanciation d’une classe de client HTTP pour chaque demande.</span><span class="sxs-lookup"><span data-stu-id="f04db-117">Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</span></span> <span data-ttu-id="f04db-118">Cela entraîne des erreurs de SocketException.</span><span class="sxs-lookup"><span data-stu-id="f04db-118">This will result in SocketException errors.</span></span> <span data-ttu-id="f04db-119">Voici un exemple d’utilisation HttpClient correctement.</span><span class="sxs-lookup"><span data-stu-id="f04db-119">Below is an example using HttpClient correctly.</span></span>  
  
```csharp  
public class GoodController : ApiController  
{  
    // OK  
    private static readonly HttpClient HttpClient;  
  
    static GoodController()  
    {  
        HttpClient = new HttpClient();  
    }  
}  
  
```  
  
<span data-ttu-id="f04db-120">Le <xref:System.Net.Http.HttpClient> est une API de haut niveau qui encapsule les fonctionnalités de niveau inférieur disponible sur chaque plateforme, où elle s’exécute.</span><span class="sxs-lookup"><span data-stu-id="f04db-120">The <xref:System.Net.Http.HttpClient> is a high-level API that wraps the lower-level functionality available on each platform where it runs.</span></span>

<span data-ttu-id="f04db-121">Sur chaque plateforme, <xref:System.Net.Http.HttpClient> essaie d’utiliser le transport disponible :</span><span class="sxs-lookup"><span data-stu-id="f04db-121">On each platform, <xref:System.Net.Http.HttpClient> tries to use the best available transport:</span></span>

| <span data-ttu-id="f04db-122">**Hôte / l’exécution**</span><span class="sxs-lookup"><span data-stu-id="f04db-122">**Host/Runtime**</span></span>            | <span data-ttu-id="f04db-123">**Serveur principal**</span><span class="sxs-lookup"><span data-stu-id="f04db-123">**Backend**</span></span>                                                                               |
| --------------------------- | ----------------------------------------------------------------------------------------- |
| <span data-ttu-id="f04db-124">Windows/.NET Framework</span><span class="sxs-lookup"><span data-stu-id="f04db-124">Windows/.NET Framework</span></span>      | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="f04db-125">Windows/Mono</span><span class="sxs-lookup"><span data-stu-id="f04db-125">Windows/Mono</span></span>                | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="f04db-126">Windows/UWP</span><span class="sxs-lookup"><span data-stu-id="f04db-126">Windows/UWP</span></span>                 | <span data-ttu-id="f04db-127">Windows natif <xref:System.Net.Http.WinHttpHandler> (compatible avec HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="f04db-127">Windows native <xref:System.Net.Http.WinHttpHandler> (HTTP 2.0 capable)</span></span>                   |
| <span data-ttu-id="f04db-128">Windows/.NET Core</span><span class="sxs-lookup"><span data-stu-id="f04db-128">Windows/.NET Core</span></span>           | <span data-ttu-id="f04db-129">Windows natif <xref:System.Net.Http.WinHttpHandler> (compatible avec HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="f04db-129">Windows native <xref:System.Net.Http.WinHttpHandler> (HTTP 2.0 capable)</span></span>                   |
| <span data-ttu-id="f04db-130">Android/Xamarin</span><span class="sxs-lookup"><span data-stu-id="f04db-130">Android/Xamarin</span></span>             | <span data-ttu-id="f04db-131">Sélectionné au moment de la build.</span><span class="sxs-lookup"><span data-stu-id="f04db-131">Selected at build-time.</span></span> <span data-ttu-id="f04db-132">Peut soit utiliser <xref:System.Net.HttpWebRequest> ou être configurés pour utiliser les natif d’Android [`HttpURLConnection`](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</span><span class="sxs-lookup"><span data-stu-id="f04db-132">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Android's native [`HttpURLConnection`](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</span></span> |
| <span data-ttu-id="f04db-133">e/s, tvOS, watchOS/Xamarin</span><span class="sxs-lookup"><span data-stu-id="f04db-133">iOS, tvOS, watchOS/Xamarin</span></span>  | <span data-ttu-id="f04db-134">Sélectionné au moment de la build.</span><span class="sxs-lookup"><span data-stu-id="f04db-134">Selected at build-time.</span></span> <span data-ttu-id="f04db-135">Peut soit utiliser <xref:System.Net.HttpWebRequest> ou être configuré pour utiliser d’Apple [ `NSUrlSession` ](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (compatible avec HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="f04db-135">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Apple's [`NSUrlSession`](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (HTTP 2.0 capable)</span></span> |
| <span data-ttu-id="f04db-136">macOS/Xamarin</span><span class="sxs-lookup"><span data-stu-id="f04db-136">macOS/Xamarin</span></span>               | <span data-ttu-id="f04db-137">Sélectionné au moment de la build.</span><span class="sxs-lookup"><span data-stu-id="f04db-137">Selected at build-time.</span></span> <span data-ttu-id="f04db-138">Peut soit utiliser <xref:System.Net.HttpWebRequest> ou être configuré pour utiliser d’Apple [ `NSUrlSession` ](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (compatible avec HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="f04db-138">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Apple's [`NSUrlSession`](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (HTTP 2.0 capable)</span></span> |
| <span data-ttu-id="f04db-139">macOS/Mono</span><span class="sxs-lookup"><span data-stu-id="f04db-139">macOS/Mono</span></span>                  | <xref:System.Net.HttpWebRequest>                                                                          |
| <span data-ttu-id="f04db-140">macOS/.NET Core</span><span class="sxs-lookup"><span data-stu-id="f04db-140">macOS/.NET Core</span></span>             | <span data-ttu-id="f04db-141">`libcurl`-en fonction du type de transport HTTP (HTTP 2.0 compatible)</span><span class="sxs-lookup"><span data-stu-id="f04db-141">`libcurl`-based HTTP transport (HTTP 2.0 capable)</span></span>                                         |
| <span data-ttu-id="f04db-142">Linux/Mono</span><span class="sxs-lookup"><span data-stu-id="f04db-142">Linux/Mono</span></span>                  | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="f04db-143">Linux/.NET Core</span><span class="sxs-lookup"><span data-stu-id="f04db-143">Linux/.NET Core</span></span>             | <span data-ttu-id="f04db-144">`libcurl`-en fonction du type de transport HTTP (HTTP 2.0 compatible)</span><span class="sxs-lookup"><span data-stu-id="f04db-144">`libcurl`-based HTTP transport (HTTP 2.0 capable)</span></span>                                         |

<span data-ttu-id="f04db-145">Les utilisateurs peuvent également configurer un transport spécifique pour <xref:System.Net.Http.HttpClient> en appelant le <xref:System.Net.Http.HttpClient.%23ctor*> constructeur qui accepte un <xref:System.Net.Http.HttpMessageHandler>.</span><span class="sxs-lookup"><span data-stu-id="f04db-145">Users can also configure a specific transport for <xref:System.Net.Http.HttpClient> by invoking the <xref:System.Net.Http.HttpClient.%23ctor*> constructor that takes an <xref:System.Net.Http.HttpMessageHandler>.</span></span>

### <a name="httpclient-and-net-core"></a><span data-ttu-id="f04db-146">HttpClient et .NET Core</span><span class="sxs-lookup"><span data-stu-id="f04db-146">HttpClient and .NET Core</span></span>

<span data-ttu-id="f04db-147">En commençant par le .NET Core 2.1, le <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> classe au lieu de `HttpClientHandler` fournit l’implémentation utilisée par les classes de mise en réseau de niveau supérieur HTTP tel que `HttpClient`.</span><span class="sxs-lookup"><span data-stu-id="f04db-147">Starting with .NET Core 2.1, the <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> class instead of `HttpClientHandler` provides the implementation used by higher-level HTTP networking classes such as `HttpClient`.</span></span> <span data-ttu-id="f04db-148">Vous pouvez configurer votre application pour utiliser l’ancien <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> au lieu de cela en appelant le <xref:System.AppContext.SetSwitch%2A> méthode comme suit :</span><span class="sxs-lookup"><span data-stu-id="f04db-148">You can configure your application to use the older <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> instead by calling the <xref:System.AppContext.SetSwitch%2A> method as follows:</span></span>

```csharp
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", false);
```
```vb
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", False)
``` 
  
## Examples  
 [!code-csharp[System.Net.Http.HttpClient#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclient/cs/source.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-149">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-149">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-150"><xref:System.Net.Http.HttpClient> est destinée à être instancié une fois et réutilisées dans l’ensemble de la durée de vie d’une application.</span><span class="sxs-lookup"><span data-stu-id="f04db-150"><xref:System.Net.Http.HttpClient> is intended to be instantiated once and re-used throughout the life of an application.</span></span> <span data-ttu-id="f04db-151">Le nombre de sockets disponibles en cas de surcharges arriveront à l’instanciation d’une classe de client HTTP pour chaque demande.</span><span class="sxs-lookup"><span data-stu-id="f04db-151">Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</span></span> <span data-ttu-id="f04db-152">Cela entraîne des erreurs de SocketException.</span><span class="sxs-lookup"><span data-stu-id="f04db-152">This will result in SocketException errors.</span></span> <span data-ttu-id="f04db-153">Voici un exemple d’utilisation HttpClient correctement.</span><span class="sxs-lookup"><span data-stu-id="f04db-153">Below is an example using HttpClient correctly.</span></span>  
  
```csharp  
public class GoodController : ApiController  
{  
    // OK  
    private static readonly HttpClient HttpClient;  
  
    static GoodController()  
    {  
        HttpClient = new HttpClient();  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04db-154">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-154">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient (System.Net.Http.HttpMessageHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As HttpMessageHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient(System::Net::Http::HttpMessageHandler ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.HttpClient : System.Net.Http.HttpMessageHandler -&gt; System.Net.Http.HttpClient" Usage="new System.Net.Http.HttpClient handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="f04db-155">Pile du gestionnaire HTTP à utiliser pour envoyer des demandes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-155">The HTTP handler stack to use for sending requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-156">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpClient" /> avec un gestionnaire spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-156">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class with a specific handler.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-157">`handler` est supprimé en appelant [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose).</span><span class="sxs-lookup"><span data-stu-id="f04db-157">`handler` will be disposed of by calling [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-158">
            <paramref name="handler" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-158">The <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient (System.Net.Http.HttpMessageHandler handler, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler handler, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient(System::Net::Http::HttpMessageHandler ^ handler, bool disposeHandler);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.HttpClient : System.Net.Http.HttpMessageHandler * bool -&gt; System.Net.Http.HttpClient" Usage="new System.Net.Http.HttpClient (handler, disposeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="f04db-159">
            <see cref="T:System.Net.Http.HttpMessageHandler" /> chargé de traiter les messages de réponse HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-159">The <see cref="T:System.Net.Http.HttpMessageHandler" /> responsible for processing the HTTP response messages.</span>
          </span>
        </param>
        <param name="disposeHandler">
          <span data-ttu-id="f04db-160">
            <see langword="true" /> si le gestionnaire interne doit être supprimé à l’aide de [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose), <see langword="false" /> si vous prévoyez de réutiliser le gestionnaire interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-160">
              <see langword="true" /> if the inner handler should be disposed of by [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose), <see langword="false" /> if you intend to reuse the inner handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-161">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpClient" /> avec un gestionnaire spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-161">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class with a specific handler.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-162">
            <paramref name="handler" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-162">The <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public Uri BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : Uri with get, set" Usage="System.Net.Http.HttpClient.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-163">Obtient ou définit l'adresse de base de l'URI de la ressource Internet utilisée pour envoyer des demandes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-163">Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04db-164">Adresse de base de l'URI de la ressource Internet utilisée pour l'envoi des demandes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-164">The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-165">Lorsque vous envoyez un <xref:System.Net.Http.HttpRequestMessage> avec un Uri relatif, l’Uri du message figurera dans le <xref:System.Net.Http.HttpClient.BaseAddress%2A> propriété pour créer un Uri absolu.</span><span class="sxs-lookup"><span data-stu-id="f04db-165">When sending a <xref:System.Net.Http.HttpRequestMessage> with a relative Uri, the message Uri will be added to the <xref:System.Net.Http.HttpClient.BaseAddress%2A> property to create an absolute Uri.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingRequests">
      <MemberSignature Language="C#" Value="public void CancelPendingRequests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelPendingRequests() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.CancelPendingRequests" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelPendingRequests ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelPendingRequests();" />
      <MemberSignature Language="F#" Value="member this.CancelPendingRequests : unit -&gt; unit" Usage="httpClient.CancelPendingRequests " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04db-166">Annulez toutes les demandes en attente sur cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-166">Cancel all pending requests on this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-167">Après avoir appelé cette méthode, le <xref:System.Net.Http.HttpClient> instance peut toujours être utilisée pour exécuter des demandes supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="f04db-167">After calling this method, the <xref:System.Net.Http.HttpClient> instance can still be used to execute additional requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRequestHeaders">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.DefaultRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultRequestHeaders As HttpRequestHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::Headers::HttpRequestHeaders ^ DefaultRequestHeaders { System::Net::Http::Headers::HttpRequestHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRequestHeaders : System.Net.Http.Headers.HttpRequestHeaders" Usage="System.Net.Http.HttpClient.DefaultRequestHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpRequestHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-168">Obtient les en-têtes qui doivent être envoyés avec chaque demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-168">Gets the headers which should be sent with each request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04db-169">En-têtes qui doivent être envoyés avec chaque demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-169">The headers which should be sent with each request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-170">En-têtes définis sur cette propriété n’êtes pas obligé d’être définie sur les messages de demande.</span><span class="sxs-lookup"><span data-stu-id="f04db-170">Headers set on this property don't need to be set on request messages again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-171">Envoie une demande DELETE à l'URI spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-171">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (requestUri As String) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.DeleteAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-172">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-172">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-173">Envoie une demande DELETE à l'URI spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-173">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-174">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-174">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-175">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-175">This operation will not block.</span></span> <span data-ttu-id="f04db-176">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-176">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-177">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-177">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04db-178">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-178">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-179">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-179">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (requestUri As Uri) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.DeleteAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-180">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-180">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-181">Envoie une demande DELETE à l'URI spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-181">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-182">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-182">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-183">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-183">This operation will not block.</span></span> <span data-ttu-id="f04db-184">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-184">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-185">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-185">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04db-186">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-186">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-187">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-187">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(string requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(System::String ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.DeleteAsync (requestUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-188">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-188">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f04db-189">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-189">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-190">Envoie une requête DELETE à l'URI spécifié avec un jeton d'annulation sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-190">Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-191">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-191">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-192">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-192">This operation will not block.</span></span> <span data-ttu-id="f04db-193">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-193">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-194">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-194">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04db-195">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-195">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-196">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-196">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(class System.Uri requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(Uri ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.DeleteAsync (requestUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-197">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-197">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f04db-198">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-198">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-199">Envoie une requête DELETE à l'URI spécifié avec un jeton d'annulation sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-199">Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-200">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-200">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-201">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-201">This operation will not block.</span></span> <span data-ttu-id="f04db-202">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-202">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-203">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-203">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04db-204">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-204">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-205">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-205">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="httpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f04db-206">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-206">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-207">Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpClient" /> et supprime éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-207">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClient" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-208">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f04db-208">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f04db-209">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="f04db-209">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="f04db-210"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="f04db-210"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="f04db-211">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Net.Http.HttpClient>.</span><span class="sxs-lookup"><span data-stu-id="f04db-211">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClient> references.</span></span> <span data-ttu-id="f04db-212">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="f04db-212">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 <span data-ttu-id="f04db-213">Lorsque cette méthode est appelée, la <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A> méthode est appelée pour annuler toutes les demandes en attente.</span><span class="sxs-lookup"><span data-stu-id="f04db-213">When this method is called, the <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A> method is called to abort all pending requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-214">Envoie une requête GET vers l'URI spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-214">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-215">L’opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-215">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As String) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-216">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-216">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-217">Envoie une requête GET vers l'URI spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-217">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-218">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-218">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-219">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-219">This operation will not block.</span></span> <span data-ttu-id="f04db-220">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-220">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-221">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-221">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-222">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-222">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As Uri) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-223">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-223">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-224">Envoie une requête GET vers l'URI spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-224">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-225">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-225">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-226">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-226">This operation will not block.</span></span> <span data-ttu-id="f04db-227">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-227">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-228">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-228">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-229">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-229">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As String, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string * System.Net.Http.HttpCompletionOption -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, completionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-230">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-230">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="f04db-231">Valeur d'option d'achèvement HTTP qui indique quand l'opération doit être considérée comme terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-231">An HTTP completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-232">Envoie une requête GET à l'URI spécifié avec une option d'achèvement HTTP sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-232">Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-233">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-233">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-234">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-234">This operation will not block.</span></span> <span data-ttu-id="f04db-235">Retourné <xref:System.Threading.Tasks.Task%601> de l’objet se termine selon le `completionOption` paramètre une fois que la partie ou toutes les réponses (y compris le contenu) sont en lecture.</span><span class="sxs-lookup"><span data-stu-id="f04db-235">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-236">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-236">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-237">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-237">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-238">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-238">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f04db-239">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-239">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-240">Envoie une requête GET à l'URI spécifié avec un jeton d'annulation sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-240">Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-241">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-241">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-242">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-242">This operation will not block.</span></span> <span data-ttu-id="f04db-243">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-243">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-244">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-244">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-245">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-245">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As Uri, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : Uri * System.Net.Http.HttpCompletionOption -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, completionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-246">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-246">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="f04db-247">Valeur d'option d'achèvement HTTP qui indique quand l'opération doit être considérée comme terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-247">An HTTP completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-248">Envoie une requête GET à l'URI spécifié avec une option d'achèvement HTTP sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-248">Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-249">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-249">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-250">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-250">This operation will not block.</span></span> <span data-ttu-id="f04db-251">Retourné <xref:System.Threading.Tasks.Task%601> de l’objet se termine selon le `completionOption` paramètre une fois que la partie ou toutes les réponses (y compris le contenu) sont en lecture.</span><span class="sxs-lookup"><span data-stu-id="f04db-251">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-252">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-252">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-253">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-253">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-254">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-254">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f04db-255">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-255">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-256">Envoie une requête GET à l'URI spécifié avec un jeton d'annulation sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-256">Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-257">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-257">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-258">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-258">This operation will not block.</span></span> <span data-ttu-id="f04db-259">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-259">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-260">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-260">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-261">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-261">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string * System.Net.Http.HttpCompletionOption * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, completionOption, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-262">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-262">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="f04db-263">Valeur d'option d'achèvement HTTP qui indique quand l'opération doit être considérée comme terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-263">An HTTP  completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f04db-264">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-264">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-265">Envoie une requête GET à l'URI spécifié avec une option d'achèvement HTTP et un jeton d'annulation sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-265">Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-266">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-266">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-267">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-267">This operation will not block.</span></span> <span data-ttu-id="f04db-268">Retourné <xref:System.Threading.Tasks.Task%601> de l’objet se termine selon le `completionOption` paramètre une fois que la partie ou toutes les réponses (y compris le contenu) sont en lecture.</span><span class="sxs-lookup"><span data-stu-id="f04db-268">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-269">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-269">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-270">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-270">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : Uri * System.Net.Http.HttpCompletionOption * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, completionOption, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-271">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-271">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="f04db-272">Valeur d'option d'achèvement HTTP qui indique quand l'opération doit être considérée comme terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-272">An HTTP  completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f04db-273">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-273">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-274">Envoie une requête GET à l'URI spécifié avec une option d'achèvement HTTP et un jeton d'annulation sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-274">Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-275">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-275">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-276">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-276">This operation will not block.</span></span> <span data-ttu-id="f04db-277">Retourné <xref:System.Threading.Tasks.Task%601> de l’objet se termine selon le `completionOption` paramètre une fois que la partie ou toutes les réponses (y compris le contenu) sont en lecture.</span><span class="sxs-lookup"><span data-stu-id="f04db-277">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-278">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-278">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-279">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-279">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteArrayAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-280">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de tableau d'octets dans une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-280">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-281">L’opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-281">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetByteArrayAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteArrayAsync (requestUri As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetByteArrayAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetByteArrayAsync : string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="httpClient.GetByteArrayAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetByteArrayAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-282">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-282">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-283">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de tableau d'octets dans une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-283">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-284">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-284">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-285">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-285">This operation will not block.</span></span> <span data-ttu-id="f04db-286">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que le corps de réponse entier est lu.</span><span class="sxs-lookup"><span data-stu-id="f04db-286">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-287">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-287">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-288">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-288">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetByteArrayAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteArrayAsync (requestUri As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetByteArrayAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetByteArrayAsync : Uri -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="httpClient.GetByteArrayAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetByteArrayAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-289">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-289">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-290">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de tableau d'octets dans une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-290">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-291">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-291">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-292">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-292">This operation will not block.</span></span> <span data-ttu-id="f04db-293">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que le corps de réponse entier est lu.</span><span class="sxs-lookup"><span data-stu-id="f04db-293">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-294">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-294">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-295">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-295">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStreamAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-296">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de flux dans une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-296">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-297">L’opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-297">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamAsync (requestUri As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetStreamAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetStreamAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="httpClient.GetStreamAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStreamAsync&gt;c__async3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-298">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-298">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-299">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de flux dans une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-299">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-300">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-300">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-301">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-301">This operation will not block.</span></span> <span data-ttu-id="f04db-302">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que le corps de réponse entier est lu.</span><span class="sxs-lookup"><span data-stu-id="f04db-302">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span> <span data-ttu-id="f04db-303">Cette méthode ne pas mettre en mémoire tampon du flux.</span><span class="sxs-lookup"><span data-stu-id="f04db-303">This method does not buffer the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-304">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-304">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-305">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-305">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamAsync (requestUri As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetStreamAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetStreamAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="httpClient.GetStreamAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStreamAsync&gt;c__async4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-306">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-306">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-307">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de flux dans une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-307">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-308">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-308">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-309">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-309">This operation will not block.</span></span> <span data-ttu-id="f04db-310">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que le corps de réponse entier est lu.</span><span class="sxs-lookup"><span data-stu-id="f04db-310">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span> <span data-ttu-id="f04db-311">Cette méthode ne pas mettre en mémoire tampon du flux.</span><span class="sxs-lookup"><span data-stu-id="f04db-311">This method does not buffer the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-312">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-312">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-313">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-313">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStringAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-314">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de chaîne dans une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-314">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-315">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-315">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStringAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringAsync (requestUri As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetStringAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetStringAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="httpClient.GetStringAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStringAsync&gt;c__async5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-316">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-316">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-317">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de chaîne dans une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-317">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-318">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-318">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-319">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-319">This operation will not block.</span></span> <span data-ttu-id="f04db-320">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que le corps de réponse entier est lu.</span><span class="sxs-lookup"><span data-stu-id="f04db-320">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-321">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-321">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-322">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-322">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStringAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringAsync (requestUri As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetStringAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetStringAsync : Uri -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="httpClient.GetStringAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStringAsync&gt;c__async6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-323">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-323">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-324">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de chaîne dans une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-324">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-325">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-325">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-326">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-326">This operation will not block.</span></span> <span data-ttu-id="f04db-327">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que le corps de réponse entier est lu.</span><span class="sxs-lookup"><span data-stu-id="f04db-327">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-328">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-328">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-329">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-329">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxResponseContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxResponseContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxResponseContentBufferSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseContentBufferSize : int64 with get, set" Usage="System.Net.Http.HttpClient.MaxResponseContentBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-330">Obtient ou définit le nombre maximal d'octets à mettre en mémoire tampon lors de la lecture du contenu de réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-330">Gets or sets the maximum number of bytes to buffer when reading the response content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04db-331">Nombre maximal d'octets à mettre en mémoire tampon lors de la lecture du contenu de réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-331">The maximum number of bytes to buffer when reading the response content.</span>
          </span>
          <span data-ttu-id="f04db-332">La valeur par défaut de cette propriété est 2 gigaoctets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-332">The default value for this property is 2 gigabytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-333">Une application peut définir le <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> propriété à une valeur inférieure pour limiter la taille de la réponse à la mémoire tampon lors de la lecture de la réponse.</span><span class="sxs-lookup"><span data-stu-id="f04db-333">An app can set the <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> property to a lower value to limit the size of the response to buffer when reading the response.</span></span> <span data-ttu-id="f04db-334">Si la taille du contenu de la réponse est supérieure à la <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> propriété, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="f04db-334">If the size of the response content is greater than the  <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> property, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f04db-335">La taille spécifiée est inférieure ou égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-335">The size specified is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04db-336">Une opération a déjà été lancée dans l’instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-336">An operation has already been started on the current instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f04db-337">L’instance actuelle a été supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-337">The current instance has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PatchAsync : string * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PatchAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PatchAsync : Uri * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PatchAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PatchAsync : string * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PatchAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PatchAsync : Uri * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PatchAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PostAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-338">Envoie une requête POST vers l'URI spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-338">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-339">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-339">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PostAsync : string * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PostAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-340">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-340">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="f04db-341">Contenu de requête HTTP envoyé au serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-341">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-342">Envoie une requête POST vers l'URI spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-342">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-343">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-343">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-344">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-344">This operation will not block.</span></span> <span data-ttu-id="f04db-345">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-345">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-346">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-346">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-347">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-347">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PostAsync : Uri * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PostAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-348">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-348">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="f04db-349">Contenu de requête HTTP envoyé au serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-349">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-350">Envoie une requête POST vers l'URI spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-350">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-351">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-351">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-352">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-352">This operation will not block.</span></span> <span data-ttu-id="f04db-353">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-353">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-354">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-354">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-355">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-355">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PostAsync : string * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PostAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-356">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-356">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="f04db-357">Contenu de requête HTTP envoyé au serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-357">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f04db-358">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-358">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-359">Envoie une requête POST avec un jeton d'annulation sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-359">Send a POST request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-360">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-360">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-361">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-361">This operation will not block.</span></span> <span data-ttu-id="f04db-362">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-362">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-363">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-363">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-364">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-364">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PostAsync : Uri * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PostAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-365">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-365">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="f04db-366">Contenu de requête HTTP envoyé au serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-366">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f04db-367">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-367">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-368">Envoie une requête POST avec un jeton d'annulation sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-368">Send a POST request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-369">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-369">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-370">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-370">This operation will not block.</span></span> <span data-ttu-id="f04db-371">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-371">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-372">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-372">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-373">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-373">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PutAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-374">Envoie une requête PUT vers l'URI spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-374">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-375">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-375">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PutAsync : string * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PutAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-376">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-376">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="f04db-377">Contenu de requête HTTP envoyé au serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-377">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-378">Envoie une requête PUT vers l'URI spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-378">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-379">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-379">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-380">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-380">This operation will not block.</span></span> <span data-ttu-id="f04db-381">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-381">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-382">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-382">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-383">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-383">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PutAsync : Uri * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PutAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-384">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-384">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="f04db-385">Contenu de requête HTTP envoyé au serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-385">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-386">Envoie une requête PUT vers l'URI spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-386">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-387">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-387">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-388">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-388">This operation will not block.</span></span> <span data-ttu-id="f04db-389">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-389">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-390">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-390">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-391">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-391">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PutAsync : string * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PutAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-392">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-392">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="f04db-393">Contenu de requête HTTP envoyé au serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-393">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f04db-394">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-394">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-395">Envoyez une requête PUT avec un jeton d'annulation sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-395">Send a PUT request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-396">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-396">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-397">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-397">This operation will not block.</span></span> <span data-ttu-id="f04db-398">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-398">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-399">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-399">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-400">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-400">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PutAsync : Uri * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PutAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="f04db-401">URI auquel la requête est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-401">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="f04db-402">Contenu de requête HTTP envoyé au serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-402">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f04db-403">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-403">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-404">Envoyez une requête PUT avec un jeton d'annulation sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-404">Send a PUT request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-405">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-405">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-406">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-406">This operation will not block.</span></span> <span data-ttu-id="f04db-407">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine après la lecture de la réponse entière (y compris le contenu).</span><span class="sxs-lookup"><span data-stu-id="f04db-407">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-408">
            <paramref name="requestUri" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-408">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-409">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-409">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-410">Envoie une requête HTTP en tant qu'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-410">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-411">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-411">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (request As HttpRequestMessage) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.SendAsync request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="f04db-412">Message de la requête HTTP à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-412">The HTTP request message to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-413">Envoie une requête HTTP en tant qu'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-413">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-414">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-414">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-415">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-415">This operation will not block.</span></span> <span data-ttu-id="f04db-416">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que la réponse entière, y compris du contenu est en lecture.</span><span class="sxs-lookup"><span data-stu-id="f04db-416">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-417">
            <paramref name="request" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-417">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04db-418">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-418">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-419">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-419">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (request As HttpRequestMessage, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Net.Http.HttpCompletionOption -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.SendAsync (request, completionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="f04db-420">Message de la requête HTTP à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-420">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="f04db-421">Moment auquel l'opération doit s'exécuter (dès qu'une réponse est disponible ou après avoir pris connaissance du contenu de réponse entier).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-421">When the operation should complete (as soon as a response is available or after reading the whole response content).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-422">Envoie une requête HTTP en tant qu'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-422">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-423">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-423">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-424">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-424">This operation will not block.</span></span> <span data-ttu-id="f04db-425">Selon la valeur de la `completionOption` paramètre, retourné <xref:System.Threading.Tasks.Task%601> objet se termine dès qu’une réponse est disponible ou que la réponse entière, y compris du contenu est en lecture.</span><span class="sxs-lookup"><span data-stu-id="f04db-425">Depending on the value of the `completionOption` parameter, the returned <xref:System.Threading.Tasks.Task%601> object will complete as soon as a response is available or the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-426">
            <paramref name="request" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-426">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04db-427">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-427">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-428">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-428">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="f04db-429">Message de la requête HTTP à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-429">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f04db-430">Jeton d'annulation pour annuler une opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-430">The cancellation token to cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-431">Envoie une requête HTTP en tant qu'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-431">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-432">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-432">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-433">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-433">This operation will not block.</span></span> <span data-ttu-id="f04db-434">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que la réponse entière, y compris du contenu est en lecture.</span><span class="sxs-lookup"><span data-stu-id="f04db-434">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-435">
            <paramref name="request" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-435">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04db-436">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-436">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-437">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-437">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Net.Http.HttpCompletionOption * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.SendAsync (request, completionOption, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="f04db-438">Message de la requête HTTP à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-438">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="f04db-439">Moment auquel l'opération doit s'exécuter (dès qu'une réponse est disponible ou après avoir pris connaissance du contenu de réponse entier).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-439">When the operation should complete (as soon as a response is available or after reading the whole response content).</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f04db-440">Jeton d'annulation pour annuler une opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-440">The cancellation token to cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04db-441">Envoie une requête HTTP en tant qu'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-441">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04db-442">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-442">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-443">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f04db-443">This operation will not block.</span></span> <span data-ttu-id="f04db-444">Selon la valeur de la `completionOption` paramètre, retourné <xref:System.Threading.Tasks.Task%601> objet se termine dès qu’une réponse est disponible ou que la réponse entière, y compris du contenu est en lecture.</span><span class="sxs-lookup"><span data-stu-id="f04db-444">Depending on the value of the `completionOption` parameter, the returned <xref:System.Threading.Tasks.Task%601> object will complete as soon as a response is available or the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f04db-445">
            <paramref name="request" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-445">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04db-446">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-446">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="f04db-447">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-447">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.Net.Http.HttpClient.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04db-448">Obtient ou définit la période d'attente jusqu'à l'expiration de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-448">Gets or sets the timespan to wait before the request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04db-449">Période d'attente jusqu'à l'expiration de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-449">The timespan to wait before the request times out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04db-450">La valeur par défaut est 100 000 millisecondes (100 secondes).</span><span class="sxs-lookup"><span data-stu-id="f04db-450">The default value is 100,000 milliseconds (100 seconds).</span></span>  
  
 <span data-ttu-id="f04db-451">Pour définir un délai infini, définissez la valeur de propriété <xref:System.Threading.Timeout.InfiniteTimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="f04db-451">To set an infinite timeout, set the property value to <xref:System.Threading.Timeout.InfiniteTimeSpan>.</span></span>  
  
 <span data-ttu-id="f04db-452">Une requête de nom de domaine (DNS) peut prendre jusqu'à 15 secondes à retourner ou délai d’attente. Si votre requête contient un nom d’hôte exigeant une résolution et que vous définissez <xref:System.Net.Http.HttpClient.Timeout%2A> à une valeur inférieure à 15 secondes, il peut prendre 15 secondes ou plus avant un <xref:System.Net.WebException> est renvoyée pour indiquer un délai d’attente de votre demande.</span><span class="sxs-lookup"><span data-stu-id="f04db-452">A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.Http.HttpClient.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a timeout on your request.</span></span>  
  
 <span data-ttu-id="f04db-453">Le délai d’attente même s’appliqueront à toutes les demandes à l’aide de ce <xref:System.Net.Http.HttpClient> instance.</span><span class="sxs-lookup"><span data-stu-id="f04db-453">The same timeout will apply for all requests using this <xref:System.Net.Http.HttpClient> instance.</span></span>  <span data-ttu-id="f04db-454">Vous pouvez également définir des différents délais d’attente des requêtes individuelles à l’aide un <xref:System.Threading.CancellationTokenSource> sur une tâche.</span><span class="sxs-lookup"><span data-stu-id="f04db-454">You may also set different timeouts for individual requests using a <xref:System.Threading.CancellationTokenSource> on a task.</span></span> <span data-ttu-id="f04db-455">Notez qu’uniquement le plus court des délais d’attente deux ne s’appliquent.</span><span class="sxs-lookup"><span data-stu-id="f04db-455">Note that only the shorter of the two timeouts will apply.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f04db-456">Le délai d’attente spécifié est inférieur ou égal à zéro et n’est pas <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-456">The timeout specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04db-457">Une opération a déjà été lancée dans l’instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-457">An operation has already been started on the current instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f04db-458">L’instance actuelle a été supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04db-458">The current instance has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>