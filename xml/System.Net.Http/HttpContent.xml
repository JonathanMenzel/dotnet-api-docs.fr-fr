<Type Name="HttpContent" FullName="System.Net.Http.HttpContent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dbc2474e82bbf7313a8c6c6e37f60bd375518eea" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpContent : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpContent extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpContent" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpContent&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContent abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f2bdd-101">Classe de base représentant un corps d'entité HTTP et des en-têtes de contenu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2bdd-101">A base class representing an HTTP entity body and content headers.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2bdd-102">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-102">Initializes a new instance of the <see cref="T:System.Net.Http.HttpContent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f2bdd-103">Sérialise le contenu HTTP en un flux d’octets et le copie sur l’objet de flux fourni en tant que paramètre <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-103">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-104">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-104">This operation does not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="f2bdd-105">Le flux de données cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-105">The target stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2bdd-106">Sérialise le contenu HTTP en un flux d’octets et le copie sur l’objet de flux fourni en tant que paramètre <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-106">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2bdd-107">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-107">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-108">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-108">This operation will not block.</span></span> <span data-ttu-id="f2bdd-109">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que tout le contenu a été écrit à l’objet de flux de données passé en tant que le `stream` paramètre.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-109">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the stream object passed as the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="f2bdd-110">Le flux de données cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-110">The target stream.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="f2bdd-111">Informations relatives au transport (jeton de liaison de canal, par exemple).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-111">Information about the transport (channel binding token, for example).</span>
          </span>
          <span data-ttu-id="f2bdd-112">Ce paramètre peut avoir la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-112">This parameter may be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2bdd-113">Sérialise le contenu HTTP en un flux d’octets et le copie sur l’objet de flux fourni en tant que paramètre <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-113">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2bdd-114">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-114">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-115">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-115">This operation will not block.</span></span> <span data-ttu-id="f2bdd-116">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que tout le contenu a été écrit à l’objet de flux de données passé en tant que le `stream` paramètre.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-116">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the stream object passed as the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStreamAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; CreateContentReadStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; CreateContentReadStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentReadStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ CreateContentReadStreamAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;CreateContentReadStreamAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2bdd-117">Sérialise le contenu HTTP dans un flux de mémoire en tant qu’opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-117">Serialize the HTTP content to a memory stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2bdd-118">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-118">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-119">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-119">This operation will not block.</span></span> <span data-ttu-id="f2bdd-120">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que tout le contenu a été écrit dans le flux de mémoire.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-120">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.</span></span>  
  
 <span data-ttu-id="f2bdd-121">Une fois l’opération terminée, le <xref:System.Threading.Tasks.Task%601.Result%2A> propriété sur l’objet de la tâche retournée contient le flux de mémoire qui représente le contenu HTTP.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-121">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the memory stream that that represents the HTTP content.</span></span> <span data-ttu-id="f2bdd-122">Le flux retourné peut ensuite servir à lire le contenu à l’aide des API de flux différents.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-122">The returned stream can then be used to read the content using various stream APIs.</span></span>  
  
 <span data-ttu-id="f2bdd-123">Le <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A> méthode met en mémoire tampon le contenu à un flux de mémoire.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-123">The <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream.</span></span> <span data-ttu-id="f2bdd-124">Classes dérivées peuvent substituer ce comportement s’il existe un meilleur moyen de récupérer le contenu en tant que flux de données.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-124">Derived classes can override this behavior if there is a better way to retrieve the content as stream.</span></span> <span data-ttu-id="f2bdd-125">Par exemple, un tableau d’octets ou une chaîne peut utiliser un moyen plus efficace de la méthode d’habillage en lecture seule <xref:System.IO.MemoryStream> autour de la chaîne ou d’octets.)</span><span class="sxs-lookup"><span data-stu-id="f2bdd-125">For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f2bdd-126">Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpContent" /> et supprime éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-126">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpContent" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2bdd-127">Libère les ressources non managées et supprime les ressources managées utilisées par le <see cref="T:System.Net.Http.HttpContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-127">Releases the unmanaged resources and disposes of the managed resources used by the <see cref="T:System.Net.Http.HttpContent" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f2bdd-128">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-128">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2bdd-129">Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpContent" /> et supprime éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-129">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpContent" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-130">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f2bdd-130">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f2bdd-131">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="f2bdd-132"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` la valeur `false`. Lorsque le `disposing` paramètre est `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Net.Http.HttpContent> références.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-132"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpContent> references.</span></span> <span data-ttu-id="f2bdd-133">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-133">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpContentHeaders Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Headers.HttpContentHeaders Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpContent.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As HttpContentHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::Headers::HttpContentHeaders ^ Headers { System::Net::Http::Headers::HttpContentHeaders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpContentHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2bdd-134">Obtient les en-têtes de contenu HTTP tels que définis dans RFC 2616.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-134">Gets the HTTP content headers as defined in RFC 2616.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2bdd-135">En-têtes de contenu tels que définis dans RFC 2616.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-135">The content headers as defined in RFC 2616.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadIntoBufferAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f2bdd-136">Sérialise le contenu HTTP dans une mémoire tampon en tant qu’opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-136">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-137">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-137">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadIntoBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadIntoBufferAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadIntoBufferAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadIntoBufferAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ LoadIntoBufferAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2bdd-138">Sérialise le contenu HTTP dans une mémoire tampon en tant qu’opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-138">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2bdd-139">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-139">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-140">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-140">This operation will not block.</span></span> <span data-ttu-id="f2bdd-141">Retourné <xref:System.Threading.Tasks.Task> objet se termine une fois que tout le contenu a été sérialisé à la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-141">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the memory buffer.</span></span>  
  
 <span data-ttu-id="f2bdd-142">Une fois que le contenu est sérialisé dans une mémoire tampon, les appels à une de la <xref:System.Net.Http.HttpContent.CopyToAsync%2A> méthodes copiera le contenu de la mémoire tampon pour le flux de données cible.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-142">After content is serialized to a memory buffer, calls to one of the  <xref:System.Net.Http.HttpContent.CopyToAsync%2A> methods will copy the content of the memory buffer to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIntoBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadIntoBufferAsync (long maxBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadIntoBufferAsync(int64 maxBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadIntoBufferAsync (maxBufferSize As Long) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ LoadIntoBufferAsync(long maxBufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;LoadIntoBufferAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBufferSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="maxBufferSize">
          <span data-ttu-id="f2bdd-143">Taille maximale, en octets, de la mémoire tampon à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-143">The maximum size, in bytes, of the buffer to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2bdd-144">Sérialise le contenu HTTP dans une mémoire tampon en tant qu’opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-144">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2bdd-145">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-145">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-146">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-146">This operation will not block.</span></span> <span data-ttu-id="f2bdd-147">Retourné <xref:System.Threading.Tasks.Task> objet se termine une fois que tout le contenu a été sérialisé à la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-147">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the memory buffer.</span></span>  
  
 <span data-ttu-id="f2bdd-148">Une fois que le contenu est sérialisé dans une mémoire tampon, les appels à une de la <xref:System.Net.Http.HttpContent.CopyToAsync%2A> méthodes copiera le contenu de la mémoire tampon pour le flux de données cible.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-148">After content is serialized to a memory buffer, calls to one of the  <xref:System.Net.Http.HttpContent.CopyToAsync%2A> methods will copy the content of the memory buffer to the target stream.</span></span>  
  
 <span data-ttu-id="f2bdd-149">Si le contenu dépasse la valeur transmise dans le `maxBufferSize` paramètre, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-149">If the content exceeds the value  passed in the `maxBufferSize` parameter , an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; ReadAsByteArrayAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadAsByteArrayAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsByteArrayAsync () As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ ReadAsByteArrayAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;ReadAsByteArrayAsync&gt;c__async3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2bdd-150">Sérialise le contenu HTTP dans un tableau d’octets en tant qu’opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-150">Serialize the HTTP content to a byte array as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2bdd-151">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-151">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-152">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-152">This operation will not block.</span></span> <span data-ttu-id="f2bdd-153">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que tout le contenu a été écrit comme un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-153">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written as a byte array.</span></span>  
  
 <span data-ttu-id="f2bdd-154">Une fois l’opération terminée, le <xref:System.Threading.Tasks.Task%601.Result%2A> propriété sur l’objet de la tâche retournée contient le tableau d’octets avec le contenu HTTP.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-154">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the byte array with the HTTP content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; ReadAsStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; ReadAsStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ ReadAsStreamAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;ReadAsStreamAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2bdd-155">Sérialiser le contenu HTTP et renvoyer un flux qui représente le contenu au cours d’une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-155">Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2bdd-156">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-156">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-157">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-157">This operation will not block.</span></span> <span data-ttu-id="f2bdd-158">Retourné <xref:System.Threading.Tasks.Task%601> objet s’achève après tous le flux de données que représente le contenu a été lu.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-158">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the stream that represents content has been read.</span></span>  
  
 <span data-ttu-id="f2bdd-159">Une fois l’opération terminée, le <xref:System.Threading.Tasks.Task%601.Result%2A> propriété sur l’objet de la tâche retournée contient le flux de données qui représente le contenu HTTP.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-159">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the stream that that represents the HTTP content.</span></span> <span data-ttu-id="f2bdd-160">Le flux retourné peut ensuite servir à lire le contenu à l’aide des API de flux différents.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-160">The returned stream can then be used to read the content using various stream APIs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; ReadAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadAsStringAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;ReadAsStringAsync&gt;c__async4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2bdd-161">Sérialise le contenu HTTP dans une chaîne en tant qu’opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-161">Serialize the HTTP content to a string as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2bdd-162">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-162">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-163">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-163">This operation will not block.</span></span> <span data-ttu-id="f2bdd-164">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que tout le contenu a été écrit en tant que chaîne.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-164">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written as a string.</span></span>  
  
 <span data-ttu-id="f2bdd-165">Une fois l’opération terminée, le <xref:System.Threading.Tasks.Task%601.Result%2A> propriété sur l’objet de la tâche retournée contient la chaîne avec le contenu HTTP.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-165">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the string with the HTTP content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected internal abstract System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="f2bdd-166">Le flux de données cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-166">The target stream.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="f2bdd-167">Informations relatives au transport (jeton de liaison de canal, par exemple).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-167">Information about the transport (channel binding token, for example).</span>
          </span>
          <span data-ttu-id="f2bdd-168">Ce paramètre peut avoir la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-168">This parameter may be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2bdd-169">Sérialise le contenu HTTP dans un flux en tant qu’opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-169">Serialize the HTTP content to a stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2bdd-170">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-170">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-171">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-171">This operation will not block.</span></span> <span data-ttu-id="f2bdd-172">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que tout le contenu a été sérialisé à l’objet de flux de données passé dans le `stream` paramètre.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-172">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the stream object passed in the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryComputeLength([Runtime::InteropServices::Out] long % length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="f2bdd-173">La longueur en octets du contenu HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-173">The length in bytes of the HTTP content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2bdd-174">Détermine si le contenu HTTP a une longueur valide en octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-174">Determines whether the HTTP content has a valid length in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2bdd-175">
            <see langword="true" /> si <paramref name="length" /> est une longueur valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2bdd-175">
              <see langword="true" /> if <paramref name="length" /> is a valid length; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2bdd-176">Le <xref:System.Net.Http.HttpContent.TryComputeLength%2A> méthode permet un contenu HTTP pour calculer la longueur du contenu.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-176">The <xref:System.Net.Http.HttpContent.TryComputeLength%2A> method gives a HTTP content the ability to calculate the content length.</span></span> <span data-ttu-id="f2bdd-177">Cela est utile pour les types de contenu qui sont en mesure de facilement calculer la longueur du contenu.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-177">This is useful for content types which are able to easily calculate the content length.</span></span> <span data-ttu-id="f2bdd-178">Si la calcul de la longueur du contenu n’est pas possible ou coûteuse (nécessite le système à l’ensemble du contenu où la sérialisation est coûteuse ou nécessitent le système à allouer une grande quantité de mémoire de la mémoire tampon), cette méthode peut retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-178">If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`.</span></span> <span data-ttu-id="f2bdd-179">Si cette méthode retourne `false`, cela implique que transfert mémorisé en bloc est nécessaire ou que le contenu doit obtenir mis en mémoire tampon avant d’être envoyées au serveur.</span><span class="sxs-lookup"><span data-stu-id="f2bdd-179">If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>