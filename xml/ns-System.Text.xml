<Namespace Name="System.Text">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34cddae6e8018aa3245a0db0838a6b65070528ea" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30736133" />
  </Metadata>
  <Docs>
    <summary>L’espace de noms <see cref="N:System.Text" /> contient des classes représentant des encodages de caractères ASCII et Unicode, des classes de base abstraites pour la conversion de blocs de caractères vers et à partir des blocs d’octets et une classe d’assistance qui manipule et met en forme les objets <see cref="T:System.String" /> sans créer d’instances intermédiaires de <see cref="T:System.String" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les classes d’encodage sont principalement utilisée pour convertir entre encodages différents ou des pages de codes et un encodage Unicode. <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> Encodage (UTF-16) est utilisée en interne par le .NET Framework, et <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> codage est souvent utilisé pour le stockage des données de type caractère pour garantir la portabilité sur les ordinateurs et cultures.  
  
 Les classes dérivées de <xref:System.Text.Encoding> vous permettent de choisir une stratégie de secours qui détermine comment les caractères qui ne peuvent pas être encodés dans une séquence d’octets ou les octets qui ne peut pas être décodés en caractères, sont gérées. Vous pouvez choisir une des opérations suivantes :  
  
-   Exception de secours. Vous pouvez choisir de lever des exceptions sur les erreurs de données à l’aide d’un `throwonerror` indicateur qui est disponible dans certains constructeurs de classe ou à l’aide de la <xref:System.Text.EncoderExceptionFallback> et <xref:System.Text.DecoderExceptionFallback> classes. Si vous êtes inquiet de l’intégrité du flux de données, est recommandé de lever une exception.  
  
-   Remplacement de secours. Vous pouvez utiliser la <xref:System.Text.EncoderFallback> et <xref:System.Text.DecoderFallback> classes pour modifier silencieusement un caractère en « ? » ou le caractère de remplacement Unicode (U + FFFD).  
  
-   Secours la mieux adaptée. Cette option mappe un caractère dans un encodage à un caractère dans un autre encodage. Secours le mieux adapté n’est pas souvent recommandé car il peut provoquer une perte de données et les risques de confusion et est plus lente que la simple « ? » remplacements de caractères. Toutefois, pour les pages de codes ANSI, le comportement le mieux adapté est la valeur par défaut.  
  
 La <xref:System.Text.StringBuilder> classe a été conçue pour les opérations qui effectuent des manipulations étendues sur une chaîne unique. Contrairement à la <xref:System.String> (classe), la <xref:System.Text.StringBuilder> classe est mutable et offre de meilleures performances lors de la concaténation ou supprimer des chaînes.  
  
 Pour plus d’informations sur <xref:System.Text?displayProperty=nameWithType>, consultez [l’encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) .  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>