<Type Name="OleDbDataAdapter" FullName="System.Data.OleDb.OleDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b58ddb443e59cc15f0a4d16aa4f6fb58211cc4f8" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51915629" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <TypeSignature Language="F#" Value="type OleDbDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente un ensemble de commandes de données et une connexion de base de données qui sont utilisées pour remplir <see cref="T:System.Data.DataSet" /> et mettre à jour la source de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OleDb.OleDbDataAdapter> fait Office de pont entre une <xref:System.Data.DataSet> et source de données pour la récupération et l’enregistrement des données. Le <xref:System.Data.OleDb.OleDbDataAdapter> fournit ce pont à l’aide de <xref:System.Data.Common.DbDataAdapter.Fill%2A> pour charger des données à partir de la source de données dans le <xref:System.Data.DataSet>et à l’aide de <xref:System.Data.Common.DbDataAdapter.Update%2A> pour envoyer les modifications apportées dans le <xref:System.Data.DataSet> à la source de données.  
  
 Lorsque le <xref:System.Data.OleDb.OleDbDataAdapter> remplit un <xref:System.Data.DataSet>, il crée les tables et colonnes appropriées pour les données retournées si elles n’existent pas déjà. Toutefois, les informations de clé primaire ne sont pas incluses dans le schéma créé implicitement, sauf si le <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> propriété est définie sur <xref:System.Data.MissingSchemaAction.AddWithKey>. Vous devrez peut-être également le <xref:System.Data.OleDb.OleDbDataAdapter> créer le schéma de la <xref:System.Data.DataSet>, y compris des informations de clé primaire, avant de le remplir avec des données à l’aide <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>. Pour plus d’informations, consultez [Ajout de contraintes existantes à un DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).  
  
 Notez que certains fournisseurs OLE DB, y compris le fournisseur MSDataShape, ne retournent pas de table de base ou des informations de clé primaire. Par conséquent, le <xref:System.Data.OleDb.OleDbDataAdapter> Impossible de définir correctement la <xref:System.Data.DataTable.PrimaryKey%2A> propriété sur n’importe quel créé <xref:System.Data.DataTable>. Dans ce cas vous devez spécifier explicitement les clés primaires des tables dans le <xref:System.Data.DataSet>.  
  
 Le <xref:System.Data.OleDb.OleDbDataAdapter> inclut également le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, et <xref:System.Data.Common.DataAdapter.TableMappings%2A> propriétés afin de faciliter le chargement et la mise à jour de données.  
  
 Lorsque vous créez une instance de <xref:System.Data.OleDb.OleDbDataAdapter>, propriétés sont définies sur leurs valeurs initiales. Pour obtenir la liste de ces valeurs, consultez le <xref:System.Data.OleDb.OleDbDataAdapter> constructeur.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbDataAdapter> et <xref:System.Data.OleDb.OleDbConnection>, pour sélectionner des enregistrements à partir d’une source de données Access et remplir un <xref:System.Data.DataSet> avec les lignes sélectionnées. La pleine <xref:System.Data.DataSet> est alors retournée. Pour ce faire, est passé à la méthode initialisé <xref:System.Data.DataSet>, une chaîne de connexion et une chaîne de requête qui est une instruction SQL SELECT.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous créez une instance de <xref:System.Data.OleDb.OleDbDataAdapter>, les propriétés en lecture/écriture suivantes sont définies à leurs valeurs initiales suivantes.  
  
|Propriétés|Valeur initiale|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Vous pouvez modifier la valeur d’une de ces propriétés via un appel séparé à la propriété.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbDataAdapter> et définit certaines de ses propriétés.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::Data::OleDb::OleDbCommand ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : System.Data.OleDb.OleDbCommand -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter selectCommand" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">
          <see cref="T:System.Data.OleDb.OleDbCommand" /> qui est une instruction SQL SELECT ou une procédure stockée ayant valeur de propriété <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> de <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> avec le <see cref="T:System.Data.OleDb.OleDbCommand" /> spécifié en tant que propriété <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette implémentation de la <xref:System.Data.OleDb.OleDbDataAdapter> constructeur affecte la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propriété à la valeur spécifiée dans le `selectCommand` paramètre.  
  
 Lorsque vous créez une instance de <xref:System.Data.OleDb.OleDbDataAdapter>, les propriétés en lecture/écriture suivantes sont définies à leurs valeurs initiales suivantes.  
  
|Propriétés|Valeur initiale|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Vous pouvez modifier la valeur d’une de ces propriétés via un appel séparé à la propriété.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbDataAdapter> et définit certaines de ses propriétés.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.OleDb.OleDbConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OleDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::Data::OleDb::OleDbConnection ^ selectConnection);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * System.Data.OleDb.OleDbConnection -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Une chaîne qui est une instruction SQL SELECT ou une procédure stockée devant être utilisée par la propriété <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> de <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
        <param name="selectConnection">
          <see cref="T:System.Data.OleDb.OleDbConnection" /> qui représente la connexion.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> avec un <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette implémentation de la <xref:System.Data.OleDb.OleDbDataAdapter> s’ouvre et ferme un <xref:System.Data.OleDb.OleDbConnection> s’il n’est pas déjà ouvert. Cela peut être utile dans une application qui doit appeler le <xref:System.Data.Common.DbDataAdapter.Fill%2A> méthode pendant au moins deux <xref:System.Data.OleDb.OleDbDataAdapter> objets. Si le <xref:System.Data.OleDb.OleDbConnection> est déjà ouvert, vous devez appeler explicitement <xref:System.Data.OleDb.OleDbConnection.Close%2A> ou **Dispose** pour la fermer.  
  
 Lorsque vous créez une instance de <xref:System.Data.OleDb.OleDbDataAdapter>, les propriétés en lecture/écriture suivantes sont définies à leurs valeurs initiales suivantes.  
  
|Propriétés|Valeur initiale|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Vous pouvez modifier la valeur d’une de ces propriétés via un appel séparé à la propriété.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbDataAdapter> et définit certaines de ses propriétés.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * string -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Une chaîne qui est une instruction SQL SELECT ou une procédure stockée devant être utilisée par la propriété <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> de <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
        <param name="selectConnectionString">Chaîne de connexion</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> avec un <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette surcharge de la <xref:System.Data.OleDb.OleDbDataAdapter> constructeur utilise le `selectConnectionString` paramètre à définir le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propriété. Toutefois, il ne s’ouvre pas la connexion. Toujours, vous devez ouvrir explicitement la connexion.  
  
 Lorsque vous créez une instance de <xref:System.Data.OleDb.OleDbDataAdapter>, les propriétés en lecture/écriture suivantes sont définies à leurs valeurs initiales suivantes.  
  
|Propriétés|Valeur initiale|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Vous pouvez modifier la valeur d’une de ces propriétés via un appel séparé à la propriété.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbDataAdapter> et définit certaines de ses propriétés.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ DeleteCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_DeleteCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une instruction SQL ou une procédure stockée permettant de supprimer les enregistrements du groupe de données.</summary>
        <value>
          <see cref="T:System.Data.OleDb.OleDbCommand" /> utilisé pendant la mise à jour (<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />) pour supprimer de la source de données les enregistrements qui correspondent aux lignes supprimées dans <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Au cours de <xref:System.Data.Common.DbDataAdapter.Update%2A>, si cette propriété n’est pas définie et informations de clé primaire sont présentes dans le <xref:System.Data.DataSet>, le <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> peut être généré automatiquement si vous définissez la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propriété et utiliser le <xref:System.Data.OleDb.OleDbCommandBuilder>. Ensuite, toutes les commandes que vous ne définissez pas sont générées par le <xref:System.Data.OleDb.OleDbCommandBuilder>. Cette logique de génération nécessite des informations de colonne clé dans le <xref:System.Data.DataSet>. Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Lorsque <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> est affecté à un créé précédemment <xref:System.Data.OleDb.OleDbCommand>, le <xref:System.Data.OleDb.OleDbCommand> ne sont pas clonés. Le <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> conserve une référence à l’élément précédemment créé <xref:System.Data.OleDb.OleDbCommand> objet.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbDataAdapter> et définit le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> et <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> propriétés. Il suppose que vous avez déjà créé un <xref:System.Data.OleDb.OleDbConnection> objet.  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oleDbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute ou actualise les lignes de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de l'objet ADO <see langword="Recordset" /> ou <see langword="Record" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable, object ADODBRecordSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable, System::Object ^ ADODBRecordSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * obj -&gt; int" Usage="oleDbDataAdapter.Fill (dataTable, ADODBRecordSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <see cref="T:System.Data.DataTable" /> à remplir avec des enregistrements et, si cela est requis, un schéma.</param>
        <param name="ADODBRecordSet">Objet <see langword="Recordset" /> ou <see langword="Record" /> ADO.</param>
        <summary>Ajoute ou actualise les lignes de <see cref="T:System.Data.DataTable" /> pour qu'elles correspondent à celles de l'objet <see langword="Recordset" /> ou <see langword="Record" /> à l'aide des objets <see cref="T:System.Data.DataTable" /> et ADO spécifiés.</summary>
        <returns>Nombre de lignes correctement actualisées en fonction de <see cref="T:System.Data.DataTable" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le lien entre ActiveX Data Objects (ADO) et ADO.NET est une opération unidirectionnelle dans la mesure où vous pouvez copier des données à partir d’ADO pour la <xref:System.Data.DataSet>, mais les mises à jour les données doivent être gérées par ADO.NET.  
  
 Cette surcharge de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> méthode ne ferme pas l’entrée `Recordset` à la fin de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> opération.  
  
 Lors du traitement d’instructions SQL par lots qui retournent plusieurs résultats, cette implémentation de <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> et <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> pour le fournisseur de données OLE DB Framework récupère les informations de schéma pour seulement le premier résultat.  
  
 Le <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> opération ajoute les lignes vers la destination spécifiée <xref:System.Data.DataTable> de l’objet dans le <xref:System.Data.DataSet>, en créant le <xref:System.Data.DataTable> de l’objet si elle n’existe pas déjà. Lorsque vous créez un <xref:System.Data.DataTable> objet, le <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> opération crée normalement que des métadonnées de nom de colonne. Toutefois, si le <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> propriété est définie sur `AddWithKey`, clés primaires appropriés et les contraintes sont également créés.  
  
 Vous pouvez utiliser la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> méthode plusieurs fois sur le même <xref:System.Data.DataTable>. Si une clé primaire existe, les lignes entrantes sont fusionnées avec les lignes correspondantes qui existent déjà. Si aucune clé primaire n’existe, les lignes entrantes sont ajoutées à la <xref:System.Data.DataTable>. Si les informations de clé primaire sont présentes, les lignes dupliquées sont rapprochées et uniquement apparaître une seule fois dans le <xref:System.Data.DataTable> qui correspond à la <xref:System.Data.DataSet>. Informations de clé primaire peuvent être définies via <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, en spécifiant le <xref:System.Data.DataTable.PrimaryKey%2A> propriété de la <xref:System.Data.DataTable>, ou en définissant le <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> propriété `AddWithKey`.  
  
 Si <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> retourne les résultats d'une jointure externe, le `DataAdapter` ne définit pas de valeur <xref:System.Data.DataTable.PrimaryKey%2A> pour le <xref:System.Data.DataTable>obtenu. Vous devez définir explicitement la clé primaire pour vous assurer que les lignes en double sont résolus correctement. Pour plus d’informations, consultez [définition des clés primaires](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).  
  
 Pour fonctionner correctement avec le fournisseur de données .NET Framework pour OLE DB, `AddWithKey` nécessite que le fournisseur OLE DB natif obtienne les informations de clé primaires nécessaires en définissant la propriété DBPROP_UNIQUEROWS, puis détermine les colonnes qui sont la clé primaire colonnes en examinant DBCOLUMN_KEYCOLUMN dans le `IColumnsRowset`. Vous pouvez également l’utilisateur peut définir explicitement les contraintes de clé primaires sur chaque <xref:System.Data.DataTable>. Cela permet de s’assurer que les enregistrements entrants qui correspondent à des enregistrements existants sont mis à jour au lieu d’ajouté.  
  
 Si le <xref:System.Data.OleDb.OleDbDataAdapter> rencontre des colonnes dupliquées lors du remplissage un <xref:System.Data.DataTable>, il génère des noms pour les colonnes suivantes, selon le modèle »*columnname*1 », «*columnname*2 », »*columnname*3 » et ainsi de suite. Noms de colonnes vides sont ajoutés à la <xref:System.Data.DataTable>, à l’aide d’une chaîne vide pour la première colonne, suivie de « 1 », « 2 », « 3 » et ainsi de suite pour les colonnes vides suivantes.  
  
 Les valeurs dans ADO `Recordset` ou `Record` objets sont convertis vers le common language des types de runtime pour le stockage dans le <xref:System.Data.DataSet>.  
  
> [!CAUTION]
>  Cette surcharge de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> méthode n’appelle pas implicitement `Close` sur l’objet ADO lorsque l’opération de remplissage est terminée. Par conséquent, appelez toujours `Close` lorsque vous avez terminé à l’aide d’ADO `Recordset` ou `Record` objets. Cela permet de s’assurer que la connexion à une source de données sous-jacente est libérée en temps voulu et empêche également les violations d’accès possibles en raison des objets ADO non managés sont récupérés par le garbage collection lorsque existe toujours des références.  
  
 Lorsque vous appelez le `TableMappings.Add` méthode sur un `DataAdapter` et vous mappez explicitement le paramètre de la table source à une chaîne vide, le jeu de données est correctement rempli à l’aide de la table source, mais le jeu de données sera rempli par rien. Par exemple, dans l’exemple suivant, `rDataSet` sera rempli par rien.  
  
```  
rAdapter.TableMappings.Add("source table", "");  
rAdapter.Fill(rDataSet, "source table");     
```  
  
 Cet exemple montre comment vous pouvez ignorer un résultat lors du traitement de plusieurs résultats.  
  
 L’exemple suivant utilise un <xref:System.Data.OleDb.OleDbDataAdapter> pour remplir un <xref:System.Data.DataTable> à l’aide d’ADO `Recordset`. Cet exemple suppose que vous avez créé un ADO `Recordset`.  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     Dim custTable As DataTable = New DataTable("Customers")  
     custTable.Columns.Add("CustomerID", Type.GetType("System.String"))  
     custTable.Columns.Add("CompanyName", Type.GetType("System.String"))  
     custDS.Tables.Add(custTable)  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custTable, adoRS)  
     adoRS.Close()  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     DataTable custTable = new DataTable("Customers");  
     custTable.Columns.Add("CustomerID", typeof(String));  
     custTable.Columns.Add("CompanyName", typeof(String));  
     custDS.Tables.Add(custTable);  
     //Use ADO objects from ADO library (msado15.dll) imported  
     //  as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custTable, adoRS);  
     adoRS.Close();  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::Object ^ ADODBRecordSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * obj * string -&gt; int" Usage="oleDbDataAdapter.Fill (dataSet, ADODBRecordSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, si cela est requis, un schéma.</param>
        <param name="ADODBRecordSet">Objet <see langword="Recordset" /> ou <see langword="Record" /> ADO.</param>
        <param name="srcTable">Table source utilisée pour les mappages de tables.</param>
        <summary>Ajoute ou actualise les lignes de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles d'un objet <see langword="Recordset" /> ou <see langword="Record" /> ADO à l'aide du <see cref="T:System.Data.DataSet" />, de l'objet ADO et du nom de table source spécifiés.</summary>
        <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le lien entre ActiveX Data Objects (ADO) et ADO.NET est une opération unidirectionnelle dans la mesure où vous pouvez copier des données à partir d’ADO pour la <xref:System.Data.DataSet>, mais les mises à jour les données doivent être gérées par ADO.NET.  
  
 Le <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> méthode effectue une itération dans plusieurs résultats en appelant le `NextRecordset` méthode sur le `Recordset`, fermeture de l’entrée `Recordset` à la fin de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> opération.  
  
 Le <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> opération ajoute les lignes vers la destination spécifiée <xref:System.Data.DataTable> de l’objet dans le <xref:System.Data.DataSet>, en créant le <xref:System.Data.DataTable> de l’objet si elle n’existe pas déjà. Lorsque vous créez un <xref:System.Data.DataTable> objet, le <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> opération crée normalement que des métadonnées de nom de colonne. Toutefois, si le <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> propriété est définie sur `AddWithKey`, clés primaires appropriés et les contraintes sont également créés.  
  
 Si les informations de clé primaire sont présentes, les lignes dupliquées sont rapprochées et uniquement apparaître une seule fois dans le <xref:System.Data.DataTable> qui correspond à la <xref:System.Data.DataSet>. Informations de clé primaire peuvent être définies via <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, en spécifiant le <xref:System.Data.DataTable.PrimaryKey%2A> propriété de la <xref:System.Data.DataTable>, ou en définissant le <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> propriété `AddWithKey`.  
  
 Pour fonctionner correctement avec le fournisseur de données .NET Framework pour OLE DB, `AddWithKey` requiert le fournisseur OLE DB natif obtenir des informations de clé primaire requises en définissant la propriété DBPROP_UNIQUEROWS et déterminer les colonnes qui sont la clé primaire colonnes en examinant DBCOLUMN_KEYCOLUMN dans le **IColumnsRowset**. Vous pouvez également l’utilisateur peut définir explicitement les contraintes de clé primaires sur chaque <xref:System.Data.DataTable>. De cette façon, les enregistrements entrants qui correspondent à des enregistrements existants sont mis à jour plutôt que d'être ajoutés.  
  
 Si <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> retourne les résultats d'une jointure externe, le `DataAdapter` ne définit pas de valeur <xref:System.Data.DataTable.PrimaryKey%2A> pour le <xref:System.Data.DataTable>obtenu. Vous devez définir explicitement la clé primaire pour vous assurer que les lignes en double sont résolus correctement. Pour plus d’informations, consultez [définition des clés primaires](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).  
  
 Si le `Recordset` est fermé avant le début de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> opération, aucun résultat de l’erreur. Cela est nécessaire pour la gestion de plusieurs résultats, car les requêtes qui ne retournent pas de lignes sont indiquées par un fermé `Recordset`. Le <xref:System.Data.OleDb.OleDbDataAdapter> appelle simplement `NextRecordset` sur fermé `Recordset` et continue le traitement.  
  
 Si une erreur s’est produite lors du remplissage du jeu de données, les lignes ajoutées avant l’occurrence de l’erreur sont conservées dans le <xref:System.Data.DataSet>. Le reste de l’opération est abandonné.  
  
 Si le <xref:System.Data.Common.DbDataAdapter> objet rencontre des colonnes dupliquées lors du remplissage un <xref:System.Data.DataTable>, il génère des noms pour les colonnes suivantes, selon le modèle «*columnname*1 «, »*columnname*2 », » *columnname*3 » et ainsi de suite. Si les données entrantes contiennent des colonnes sans nom, ils sont placés dans le <xref:System.Data.DataSet> selon le modèle « Column1 », « Column2 » et ainsi de suite. Lorsque plusieurs jeux de résultats est ajoutés à la <xref:System.Data.DataSet> chaque jeu de résultats est placé dans une table distincte. Jeux de résultats supplémentaires sont nommés en ajoutant des valeurs intégrales au nom de table spécifié (par exemple, « Table », « Table1 », « Table2 » et ainsi de suite.). Les applications qui utilisent des noms de colonne et de table devraient vous assurer que tout conflit avec ces modèles d’affectation de noms ne se produit pas.  
  
 Les valeurs dans ADO `Recordset` ou `Record` objets sont convertis vers le common language des types de runtime pour le stockage dans le <xref:System.Data.DataSet>.  
  
> [!NOTE]
>  Cette surcharge de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> méthode appelle implicitement `Close` sur l’objet ADO lorsque l’opération de remplissage est terminée.  
  
 L’exemple suivant utilise un <xref:System.Data.OleDb.OleDbDataAdapter> pour remplir un <xref:System.Data.DataSet> à l’aide d’ADO `Recordset` c'est-à-dire ADO `Record` objet. Cet exemple suppose que vous avez créé un ADO `RecordSet` et `Record` objet.  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custDS, adoRS, "Customers")  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     //Use ADO objects from ADO library (msado15.dll) imported  
     // as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custDS, adoRS, "Customers");  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">La table source n'est pas valide.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ InsertCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_InsertCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Récupère ou définit une instruction SQL ou une procédure stockée utilisée pour insérer de nouveaux enregistrements dans la source de données.</summary>
        <value>
          <see cref="T:System.Data.OleDb.OleDbCommand" /> utilisé pendant la mise à jour (<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />) pour insérer dans la source de données les enregistrements qui correspondent aux nouvelles lignes de <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Au cours de <xref:System.Data.Common.DbDataAdapter.Update%2A>, si cette propriété n’est pas définie et informations de clé primaire sont présentes dans le <xref:System.Data.DataSet>, le <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> peut être généré automatiquement si vous définissez la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propriété et utiliser le <xref:System.Data.OleDb.OleDbCommandBuilder>. Ensuite, toutes les commandes que vous ne définissez pas sont générées par le <xref:System.Data.OleDb.OleDbCommandBuilder>. Cette logique de génération nécessite des informations de colonne clé dans le <xref:System.Data.DataSet>. Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Lorsque <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> est affecté à un créé précédemment <xref:System.Data.OleDb.OleDbCommand>, le <xref:System.Data.OleDb.OleDbCommand> ne sont pas clonés. Le <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> conserve une référence à l’élément précédemment créé <xref:System.Data.OleDb.OleDbCommand> objet.  
  
> [!NOTE]
>  Si l’exécution de cette commande retourne des lignes, ces lignes peuvent être ajoutées à la <xref:System.Data.DataSet> selon la façon dont vous définissez la <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> propriété de la <xref:System.Data.OleDb.OleDbCommand> objet.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbDataAdapter> et définit le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> et <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> propriétés. Il suppose que vous avez déjà créé un <xref:System.Data.OleDb.OleDbConnection> objet.  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OleDbRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " Usage="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_RowUpdated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit pendant une opération de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, après l'exécution d'une commande sur la source de données. La tentative de mise à jour a lieu. Par conséquent, l'événement se produit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous utilisez <xref:System.Data.Common.DbDataAdapter.Update%2A>, il existe deux événements se produisent pour chaque ligne de données mise à jour. L’ordre d’exécution est la suivante :  
  
1.  Les valeurs dans le <xref:System.Data.DataRow> sont déplacés vers les valeurs de paramètre.  
  
2.  L'événement <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> est déclenché.  
  
3.  La commande s’exécute.  
  
4.  Si la commande est définie sur `FirstReturnedRecord`, le premier résultat retourné est placé dans le <xref:System.Data.DataRow>.  
  
5.  S’il existe des paramètres de sortie, ils sont placés dans le <xref:System.Data.DataRow>.  
  
6.  L'événement <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> est déclenché.  
  
7.  La méthode <xref:System.Data.DataRow.AcceptChanges%2A> est appelée.  
  
   
  
## Examples  
 L’exemple suivant montre le <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> et <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> utilisation des événements.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OleDbRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " Usage="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_RowUpdating")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit pendant une opération de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, avant l'exécution d'une commande sur la source de données. La tentative de mise à jour a lieu. Par conséquent, l'événement se produit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous utilisez <xref:System.Data.Common.DbDataAdapter.Update%2A>, il existe deux événements se produisent pour chaque ligne de données mise à jour. L’ordre d’exécution est la suivante :  
  
1.  Les valeurs dans le <xref:System.Data.DataRow> sont déplacés vers les valeurs de paramètre.  
  
2.  L'événement <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> est déclenché.  
  
3.  La commande s’exécute.  
  
4.  Si la commande est définie sur `FirstReturnedRecord`, le premier résultat retourné est placé dans le <xref:System.Data.DataRow>.  
  
5.  S’il existe des paramètres de sortie, ils sont placés dans le <xref:System.Data.DataRow>.  
  
6.  L'événement <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> est déclenché.  
  
7.  La méthode <xref:System.Data.DataRow.AcceptChanges%2A> est appelée.  
  
   
  
## Examples  
 L’exemple suivant montre le <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> et <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> utilisation des événements.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ SelectCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_SelectCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une instruction SQL ou une procédure stockée utilisée pour sélectionner des enregistrements dans la source de données.</summary>
        <value>
          <see cref="T:System.Data.OleDb.OleDbCommand" /> utilisé pendant le remplissage (<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />) pour sélectionner des enregistrements de la source de données afin de les placer dans <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> est affecté à un créé précédemment <xref:System.Data.OleDb.OleDbCommand>, le <xref:System.Data.OleDb.OleDbCommand> ne sont pas clonés. Le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> conserve une référence à l’élément précédemment créé <xref:System.Data.OleDb.OleDbCommand> objet.  
  
 Si le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> ne retourne aucune ligne, aucune table n’est ajoutés à la <xref:System.Data.DataSet>, et aucune exception n’est levée.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbDataAdapter> et définit le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> et <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> propriétés. Il suppose que vous avez déjà créé un <xref:System.Data.OleDb.OleDbConnection> objet.  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Utilisation de DataAdapters</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> utilisé au cours d'une mise à jour pour supprimer les enregistrements de la source de données des lignes supprimées dans le groupe de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.OleDb.OleDbDataAdapter> est castée en interface <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> utilisé au cours d'une mise à jour pour insérer des enregistrements d'une source de données afin de les placer dans le groupe de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.OleDb.OleDbDataAdapter> est castée en interface <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> utilisé au cours d'une mise à jour pour sélectionner des enregistrements d'une source de données afin de les placer dans le groupe de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.OleDb.OleDbDataAdapter> est castée en interface <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> utilisé au cours d'une mise à jour pour mettre à jour les enregistrements de la source de données pour des lignes modifiées dans le groupe de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.OleDb.OleDbDataAdapter> est castée en interface <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Nouveau <see cref="T:System.Object" /> correspondant à une copie de cette instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.OleDb.OleDbDataAdapter> est castée en interface <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ UpdateCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_UpdateCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Récupère ou définit une instruction SQL ou une procédure stockée utilisée pour mettre à jour les enregistrements dans la source de données.</summary>
        <value>
          <see cref="T:System.Data.OleDb.OleDbCommand" /> utilisé lors de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour mettre à jour les enregistrements dans la source de données qui correspondent à des lignes modifiées dans le <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Au cours de <xref:System.Data.Common.DbDataAdapter.Update%2A>, si cette propriété n’est pas définie et informations de clé primaire sont présentes dans le <xref:System.Data.DataSet>, le <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> peut être généré automatiquement si vous définissez la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propriété et utiliser le <xref:System.Data.OleDb.OleDbCommandBuilder>. Ensuite, toutes les commandes que vous ne définissez pas sont générées par le <xref:System.Data.OleDb.OleDbCommandBuilder>. Cette logique de génération nécessite des informations de colonne clé dans le <xref:System.Data.DataSet>. Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Lorsque <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> est affecté à un créé précédemment <xref:System.Data.OleDb.OleDbCommand>, le <xref:System.Data.OleDb.OleDbCommand> ne sont pas clonés. Le <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> conserve une référence à l’élément précédemment créé <xref:System.Data.OleDb.OleDbCommand> objet.  
  
> [!NOTE]
>  Si l’exécution de cette commande retourne des lignes, ces lignes peuvent être fusionnées avec les <xref:System.Data.DataSet> selon la façon dont vous définissez la <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> propriété de la <xref:System.Data.OleDb.OleDbCommand> objet.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbDataAdapter> et définit le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> et <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> propriétés. Il suppose que vous avez déjà créé un <xref:System.Data.OleDb.OleDbConnection> objet.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>