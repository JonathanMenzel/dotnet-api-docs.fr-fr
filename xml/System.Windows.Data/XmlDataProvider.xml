<Type Name="XmlDataProvider" FullName="System.Windows.Data.XmlDataProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="199f4c78904b37256d90aba12a0acf8939b1ae9b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629613" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDataProvider : System.Windows.Data.DataSourceProvider, System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataProvider extends System.Windows.Data.DataSourceProvider implements class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.XmlDataProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataProvider&#xA;Inherits DataSourceProvider&#xA;Implements IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataProvider : System::Windows::Data::DataSourceProvider, System::Windows::Markup::IUriContext" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.DataSourceProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("XmlSerializer")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Active un accès déclaratif aux données XML pour la liaison de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Dans un bac à sable de confiance partielle, <xref:System.Windows.Data.XmlDataProvider> échoue lorsqu’il ne dispose pas des autorisations pour accéder aux données en question. Pour plus d’informations sur la sécurité de confiance partielle, consultez [de sécurité de confiance partielle WPF](~/docs/framework/wpf/wpf-partial-trust-security.md).  
  
 <xref:System.Windows.Data.XmlDataProvider> expose les méthodes suivantes pour accéder aux [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] données.  
  
-   Vous pouvez incorporer inline [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] à l’aide de données la <xref:System.Windows.Data.XmlDataProvider> classe.  
  
-   Vous pouvez définir le <xref:System.Windows.Data.XmlDataProvider.Source%2A> propriété le <xref:System.Uri> d’un [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] fichier de données.  
  
-   Vous pouvez définir le <xref:System.Windows.Data.XmlDataProvider.Document%2A> propriété à un <xref:System.Xml.XmlDocument>.  
  
 <xref:System.Windows.Data.XmlDataProvider> exécute une actualisation complète de toutes les liaisons lorsqu’un <xref:System.Xml.XmlDocument.NodeChanged?displayProperty=nameWithType> événement se produit. Il n’existe aucune optimisation des nœuds spécifiques.  
  
 Le <xref:System.Windows.Data.XmlDataProvider.IsAsynchronous%2A?displayProperty=nameWithType> est définie sur `true` par défaut, ce qui signifie que la <xref:System.Windows.Data.XmlDataProvider> récupère les données et produit la collection de [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] nœuds de façon asynchrone par défaut.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.XmlDataProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Data.XmlDataProvider" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="protected virtual Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ce type ou membre prend en charge l’infrastructure [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] et n’est pas destiné à être utilisé directement à partir de votre code.</summary>
        <value>URI de base.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginQuery">
      <MemberSignature Language="C#" Value="protected override void BeginQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.XmlDataProvider.BeginQuery" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginQuery ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BeginQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prépare le chargement du code [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] inline ou du fichier [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] externe pour produire une collection de nœuds [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’exécution est soit immédiatement soit sur un thread d’arrière-plan, selon la valeur de la <xref:System.Windows.Data.XmlDataProvider.IsAsynchronous%2A> propriété.  
  
 Cette méthode est appelée par le <xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A> et <xref:System.Windows.Data.DataSourceProvider.Refresh%2A> méthodes de la classe de base.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDocument Document { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.Document" />
      <MemberSignature Language="VB.NET" Value="Public Property Document As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDocument ^ Document { System::Xml::XmlDocument ^ get(); void set(System::Xml::XmlDocument ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Xml.XmlDocument" /> à utiliser comme source de liaison.</summary>
        <value>
          <see cref="T:System.Xml.XmlDocument" /> à utiliser comme source de liaison. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.XmlDataProvider> expose les méthodes suivantes pour accéder aux [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] données.  
  
-   Vous pouvez incorporer inline [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] à l’aide de données la <xref:System.Windows.Data.XmlDataProvider> classe.  
  
-   Vous pouvez définir le <xref:System.Windows.Data.XmlDataProvider.Source%2A> propriété le <xref:System.Uri> d’un [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] fichier de données.  
  
-   Vous pouvez définir cette propriété un <xref:System.Xml.XmlDocument>.  
  
 <xref:System.Windows.Data.XmlDataProvider> effectue une actualisation complète de toutes les liaisons sur quand un <xref:System.Xml.XmlDocument.NodeChanged?displayProperty=nameWithType> événement se produit. Il n’existe aucune optimisation des nœuds spécifiques.  
  
 Si le <xref:System.Windows.Data.XmlDataProvider.Source%2A> propriété est définie, toutes inline [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] les données sont ignorées. Si le <xref:System.Windows.Data.XmlDataProvider.Document%2A> propriété est définie, le <xref:System.Windows.Data.XmlDataProvider.Source%2A> propriété est désactivée et n’importe quel inline [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] les données sont ignorées.  
  
 Définition des propriétés suivantes provoquera implicitement <xref:System.Windows.Data.XmlDataProvider> objet actualiser : <xref:System.Windows.Data.XmlDataProvider.Source%2A>, <xref:System.Windows.Data.XmlDataProvider.Document%2A>, <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>, et <xref:System.Windows.Data.XmlDataProvider.XPath%2A>. Lors de la modification de plusieurs propriétés d’actualisation, l’utilisation de <xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A> est recommandé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="protected override void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.XmlDataProvider.EndInit" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique que l'initialisation de cet élément est terminée, ce qui provoque un <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> si aucun autre <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> n'est en attente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsynchronous">
      <MemberSignature Language="C#" Value="public bool IsAsynchronous { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsynchronous" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsynchronous { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la création de collections de nœuds sera exécutée dans un thread de travail ou dans le contexte actif.</summary>
        <value>
          <see langword="true" /> pour exécuter la création de collections de nœuds dans un thread de travail ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.XmlDataProvider.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si la propriété <see cref="P:System.Windows.Data.XmlDataProvider.Source" /> doit être persistante.</summary>
        <returns>
          <see langword="true" /> si la propriété n'utilise plus sa valeur par défaut ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela `ShouldSerialize` méthode est fournie car la <xref:System.Windows.Data.XmlDataProvider.Source%2A> propriété n’a pas de valeur par défaut simple. Cette méthode indique si la propriété a changé sa valeur par défaut. En règle générale, vous appelez cette méthode si vous développez un concepteur pour le <xref:System.Windows.Data.XmlDataProvider> ou votre propre contrôle incorporant la <xref:System.Windows.Data.XmlDataProvider>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeXmlSerializer">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeXmlSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeXmlSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeXmlSerializer () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeXmlSerializer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si la propriété <see cref="P:System.Windows.Data.XmlDataProvider.XmlSerializer" /> doit être persistante.</summary>
        <returns>
          <see langword="true" /> si la propriété n'utilise plus sa valeur par défaut ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela `ShouldSerialize` méthode est fournie car la <xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A> propriété n’a pas de valeur par défaut simple. Cette méthode indique si la propriété a changé sa valeur par défaut. En règle générale, vous appelez cette méthode si vous développez un concepteur pour le <xref:System.Windows.Data.XmlDataProvider> ou votre propre contrôle incorporant la <xref:System.Windows.Data.XmlDataProvider>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeXPath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeXPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeXPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXPath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeXPath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeXPath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si la propriété <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> doit être persistante.</summary>
        <returns>
          <see langword="true" /> si la propriété n'utilise plus sa valeur par défaut ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela `ShouldSerialize` méthode est fournie car la <xref:System.Windows.Data.XmlDataProvider.XPath%2A> propriété n’a pas de valeur par défaut simple. Cette méthode indique si la propriété a changé sa valeur par défaut. En règle générale, vous appelez cette méthode si vous développez un concepteur pour le <xref:System.Windows.Data.XmlDataProvider> ou votre propre contrôle incorporant la <xref:System.Windows.Data.XmlDataProvider>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Uri" /> du fichier de données [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] à utiliser comme source de liaison.</summary>
        <value>Le <see cref="T:System.Uri" /> de le [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] fichier de données à utiliser comme source de liaison. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.XmlDataProvider> expose les méthodes suivantes pour accéder aux [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] données.  
  
-   Vous pouvez incorporer inline [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] à l’aide de données la <xref:System.Windows.Data.XmlDataProvider> classe.  
  
-   Vous pouvez définir cette propriété la <xref:System.Uri> d’un [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] fichier de données.  
  
-   Vous pouvez définir le <xref:System.Windows.Data.XmlDataProvider.Document%2A> propriété à un <xref:System.Xml.XmlDocument>.  
  
 Si le <xref:System.Windows.Data.XmlDataProvider.Source%2A> propriété est définie, toutes inline [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] les données sont ignorées. Si le <xref:System.Windows.Data.XmlDataProvider.Document%2A> propriété est définie, le <xref:System.Windows.Data.XmlDataProvider.Source%2A> propriété est désactivée et n’importe quel inline [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] les données sont ignorées.  
  
 Définition des propriétés suivantes provoquera implicitement <xref:System.Windows.Data.XmlDataProvider> objet actualiser : <xref:System.Windows.Data.XmlDataProvider.Source%2A>, <xref:System.Windows.Data.XmlDataProvider.Document%2A>, <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>, et <xref:System.Windows.Data.XmlDataProvider.XPath%2A>. Lors de la modification de plusieurs propriétés d’actualisation, l’utilisation de <xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A> est recommandé.  
  
   
  
## Examples  
 Dans certaines applications, l’incorporation du [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] inline dans le [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] page peut être gênante, car le contenu exact des données doit être connu au moment de la compilation. Par conséquent, vous pouvez obtenir les données d’un autre [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] fichier, comme dans l’exemple suivant.  
  
 [!code-xaml[XMLDataSource2#XmlFileExample](~/samples/snippets/csharp/VS_Snippets_Wpf/XmlDataSource2/CS/Window1.xaml#xmlfileexample)]  
  
 Si le [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] données résident dans une distance [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] fichier, définissez l’accès aux données en assignant une [!INCLUDE[TLA2#tla_url](~/includes/tla2sharptla-url-md.md)] à la <xref:System.Windows.Data.XmlDataProvider.Source%2A> attribut comme suit :  
  
```  
<XmlDataProvider x:Key="BookData" Source="http://MyUrl" XPath="Books"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IUriContext.BaseUri">
      <MemberSignature Language="C#" Value="Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri" />
      <MemberSignature Language="VB.NET" Value=" Property BaseUri As Uri Implements IUriContext.BaseUri" />
      <MemberSignature Language="C++ CLI" Value="property Uri ^ System.Windows.Markup.IUriContext.BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ce membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être directement utilisé à partir de votre code.</summary>
        <value>URI de base.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNamespaceManager XmlNamespaceManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNamespaceManager XmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlNamespaceManager As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNamespaceManager ^ XmlNamespaceManager { System::Xml::XmlNamespaceManager ^ get(); void set(System::Xml::XmlNamespaceManager ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Xml.XmlNamespaceManager" /> utilisé pour exécuter des requêtes <see cref="P:System.Windows.Data.XmlDataProvider.XPath" />.</summary>
        <value>
          <see cref="T:System.Xml.XmlNamespaceManager" /> utilisé pour exécuter des requêtes <see cref="P:System.Windows.Data.XmlDataProvider.XPath" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définition des propriétés suivantes provoquera implicitement <xref:System.Windows.Data.XmlDataProvider> objet actualiser : <xref:System.Windows.Data.XmlDataProvider.Source%2A>, <xref:System.Windows.Data.XmlDataProvider.Document%2A>, <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>, et <xref:System.Windows.Data.XmlDataProvider.XPath%2A>. Lors de la modification de plusieurs propriétés d’actualisation, l’utilisation de <xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A> est recommandé.  
  
<a name="xamlAttributeUsage_XmlNamespaceManager"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object XmlNamespaceManager="mappingCollection"/>  
```  
  
<a name="xamlValues_XmlNamespaceManager"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *mappingCollection*  
 Élément <xref:System.Windows.Data.XmlNamespaceMappingCollection>. Pour faire référence à un <xref:System.Windows.Data.XmlNamespaceMappingCollection>, utilisez le [Extensions de balisage et XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser cette propriété.  
  
 [!code-xaml[XmlnsBindSnippet#XmlNamespaceMapping](~/samples/snippets/csharp/VS_Snippets_Wpf/XmlnsBindSnippet/CS/Window1.xaml#xmlnamespacemapping)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.XmlNamespaceMappingCollection" />
        <altmember cref="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      </Docs>
    </Member>
    <Member MemberName="XmlSerializer">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.IXmlSerializable XmlSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.IXmlSerializable XmlSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.XmlSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlSerializer As IXmlSerializable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::IXmlSerializable ^ XmlSerializer { System::Xml::Serialization::IXmlSerializable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.IXmlSerializable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le contenu du [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] inline.</summary>
        <value>Contenu du [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] inline.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est utilisée par l’analyseur pour compiler le contenu littéral de l’élément incorporé [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] îlot de données.  
  
<a name="xamlPropertyElementUsage_XmlSerializer"></a>   
## <a name="xaml-property-element-usage"></a>Utilisation des éléments de propriété XAML  
  
```  
<XmlDataProvider>  
  <XmlDataProvider.XmlSerializer>  
    <x:XData>  
       <elementDataRoot>  
          <elementData/>  
       <elementDataRoot>  
    </x:XData>  
  </XmlDataProvider.XmlSerializer>  
</XmlDataProvider>  
--or--  
<XmlDataProvider>  
    <x:XData>  
       <elementDataRoot>  
          <elementData/>  
       <elementDataRoot>  
    </x:XData>  
</XmlDataProvider>  
```  
  
<a name="xamlValues_XmlSerializer"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *elementDataRoot*  
 Obligatoire. L’élément racine unique de l’îlot de données incorporé. Sans une racine unique, le `x:XData` n’est pas valide en tant que source de données.  
  
 *elementData*  
 Optionnel. Code XML qui représente vos données. N’importe quel nombre d’éléments peut être contenu comme données d’élément, les éléments imbriqués peuvent être contenus dans d’autres éléments et ainsi de suite, soumis aux règles générales de XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DesignerSerializationOptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la requête <see langword="XPath" /> utilisée pour générer la collection de données.</summary>
        <value>Requête <see langword="XPath" /> utilisée pour générer la collection de données. La valeur par défaut est une chaîne vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> méthode gère le `XPath` expressions à partir de la <xref:System.Windows.Data.Binding.XPath%2A> propriété. `XPath` les fonctions ne sont pas pris en charge. Pour `XPath` informations sur l’expression, consultez le <xref:System.Xml.XmlNode.SelectNodes%2A> documentation et exemples fournis dans la section exemple.  
  
 Définition des propriétés suivantes provoquera implicitement <xref:System.Windows.Data.XmlDataProvider> objet actualiser : <xref:System.Windows.Data.XmlDataProvider.Source%2A>, <xref:System.Windows.Data.XmlDataProvider.Document%2A>, <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>, et <xref:System.Windows.Data.XmlDataProvider.XPath%2A>. Lors de la modification de plusieurs propriétés d’actualisation, l’utilisation de <xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A> est recommandé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>