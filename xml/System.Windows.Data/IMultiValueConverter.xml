<Type Name="IMultiValueConverter" FullName="System.Windows.Data.IMultiValueConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d26497ed73a13364ea1c26a9d7cfe7de2633d82" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37579038" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMultiValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMultiValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMultiValueConverter" />
  <TypeSignature Language="F#" Value="type IMultiValueConverter = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fournit une manière d'appliquer une logique personnalisée à une <see cref="T:System.Windows.Data.MultiBinding" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour associer un convertisseur avec une <xref:System.Windows.Data.MultiBinding>, créez une classe qui implémente le <xref:System.Windows.Data.IMultiValueConverter> interface, puis implémentez la <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> et <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> méthodes.  
  
 Les liaisons individuelles dans la collection peuvent avoir leurs propres convertisseurs de valeur. Pour plus d'informations, consultez <xref:System.Windows.Data.IValueConverter>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object[] values, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(cli::array &lt;System::Object ^&gt; ^ values, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj[] * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iMultiValueConverter.Convert (values, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="values">Tableau de valeurs produit par les liaisons sources dans <see cref="T:System.Windows.Data.MultiBinding" />. La valeur <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indique que la liaison source n’a aucune valeur à fournir pour la conversion.</param>
        <param name="targetType">Type de la propriété de cible de liaison.</param>
        <param name="parameter">Paramètre de convertisseur à utiliser.</param>
        <param name="culture">Culture à utiliser dans le convertisseur.</param>
        <summary>Convertit les valeurs sources en une valeur pour la cible de liaison. Le moteur de liaison de données appelle cette méthode quand il propage les valeurs des liaisons sources vers la cible de liaison.</summary>
        <returns>Valeur convertie.  
  
Si la méthode retourne <see langword="null" />, la valeur <see langword="null" /> valide est utilisée.  
  
Une valeur de retour de <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indique que le convertisseur n’a pas généré de valeur, et que la liaison utilisera <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> s’il est disponible, ou la valeur par défaut dans le cas contraire.  
  
Une valeur de retour de <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> indique que la liaison ne transfère pas la valeur, et utilise <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> ou la valeur par défaut.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le moteur de liaison de données n’intercepte pas les exceptions levées par un convertisseur fourni par l’utilisateur. Toute exception levée par le <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> (méthode), ou toutes les exceptions non interceptées levées par les méthodes qui le <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> des appels de méthode, sont traités comme des erreurs d’exécution. Gestionnaire anticipe des problèmes en retournant <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ConvertBack(object value, class System.Type[] targetTypes, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ ConvertBack(System::Object ^ value, cli::array &lt;Type ^&gt; ^ targetTypes, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type[] * obj * System.Globalization.CultureInfo -&gt; obj[]" Usage="iMultiValueConverter.ConvertBack (value, targetTypes, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetTypes" Type="System.Type[]" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Valeur produite par la cible de liaison.</param>
        <param name="targetTypes">Tableau de types vers lesquels effectuer la conversion. La longueur du tableau indique le nombre et les types de valeurs suggérées pour les valeurs retournées par la méthode.</param>
        <param name="parameter">Paramètre de convertisseur à utiliser.</param>
        <param name="culture">Culture à utiliser dans le convertisseur.</param>
        <summary>Convertit une valeur de cible de liaison en valeurs de liaison source.</summary>
        <returns>Un tableau de valeurs qui ont été converties de la valeur cible en valeurs sources.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 S’il existe plusieurs valeurs de retour qu’il ne sont a des liaisons dans le <xref:System.Windows.Data.MultiBinding>, les valeurs de retournés excédentaires sont ignorés. S’il existe plusieurs liaisons de code source qu’il ne sont a les valeurs de retour, les liaisons restantes de la source n’ont pas toutes les valeurs définies sur ces derniers. Types des valeurs de retour ne sont pas vérifiées par rapport à `targetTypes`; les valeurs sont définies directement sur les liaisons de la source.  
  
 Retourner <xref:System.Windows.Data.Binding.DoNothing> à la position `i` pour indiquer qu’aucune valeur ne sera définie sur la liaison source à l’index `i`.  
  
 Retourner <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue> à la position `i` pour indiquer que le convertisseur ne peut pas fournir une valeur pour la liaison source à l’index `i`, et qu’aucune valeur ne sera définie sur elle.  
  
 Retourner `null` pour indiquer que le convertisseur ne peut pas effectuer la conversion ou qu’il ne prend pas en charge conversion dans cette direction.  
  
 Le moteur de liaison de données n’intercepte pas les exceptions levées par un convertisseur fourni par l’utilisateur. Toute exception levée par le <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> méthode ou l’un exceptions sont levées par les méthodes non interceptées qui le <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> les appels de méthode sont traitées comme des erreurs d’exécution. Gestionnaire anticipe des problèmes en retournant `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
  </Members>
</Type>