<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingOperations.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b6d6ad02d9cad5d3fea47f68a5d2f16bfb2f4a51.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6d6ad02d9cad5d3fea47f68a5d2f16bfb2f4a51</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingOperations">
          <source>Provides static methods to manipulate bindings, including <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> objects.</source>
          <target state="translated">Fournit des méthodes statiques pour manipuler des liaisons, notamment des objets <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This class exposes a set of static methods that serve as helper operations for data bindings.</source>
          <target state="translated">Cette classe expose un ensemble de méthodes statiques qui servent d’opérations d’assistance pour les liaisons de données.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source>The collection to access.</source>
          <target state="translated">Collection à laquelle accéder.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source>The action to perform on the collection.</source>
          <target state="translated">Action à exécuter sur la collection.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>accessMethod<ept id="p1">&lt;/c&gt;</ept> will write to the collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <bpt id="p1">&lt;c&gt;</bpt>accessMethod<ept id="p1">&lt;/c&gt;</ept> doit écrire dans la collection ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source>Provides access to a collection by using the synchronization mechanism that the application specified when it called EnableCollectionSynchronization.</source>
          <target state="translated">Permet d'accéder à une collection à l'aide du mécanisme de synchronisation que l'application a spécifié lorsqu'elle a appelé EnableCollectionSynchronization.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>The object from which to remove bindings.</source>
          <target state="translated">Objet à partir duquel supprimer les liaisons.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>Removes all bindings, including bindings of type <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>, from the specified <ph id="ph4">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Supprime toutes les liaisons, notamment les liaisons de type <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>, à partir du <ph id="ph4">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>If the specified object is not data-bound, this method has no effect.</source>
          <target state="translated">Si l’objet spécifié n’est pas lié aux données, cette méthode n’a aucun effet.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="target" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object from which to remove the binding.</source>
          <target state="translated">Objet à partir duquel supprimer la liaison.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The dependency property from which to remove the binding.</source>
          <target state="translated">Propriété de dépendance à partir de laquelle la liaison doit être supprimée.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Removes the binding from a property if there is one.</source>
          <target state="translated">Supprime la liaison d’une propriété, le cas échéant.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If the given property is data-bound with a <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>, this method removes the corresponding binding expression and restores the value of the property to what it was before any local value was set through the binding.</source>
          <target state="translated">Si la propriété donnée est lié aux données avec un <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>, cette méthode supprime l’expression de liaison et les restaure la valeur de la propriété pour qu’il avait avant toute valeur locale a été définie par la liaison correspondante.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If the given property is not data-bound, this method has no effect.</source>
          <target state="translated">Si la propriété donnée n’est pas lié aux données, cette méthode n’a aucun effet.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Les paramètres <ph id="ph1">&lt;paramref name="target" /&gt;</ph> et <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> ne peuvent pas avoir la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="E:System.Windows.Data.BindingOperations.CollectionRegistering">
          <source>Occurs when the data-binding system notices a collection.</source>
          <target state="translated">Se produit lorsque le système de liaison de données remarque une collection.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="E:System.Windows.Data.BindingOperations.CollectionViewRegistering">
          <source>Occurs when the data-binding system notices a collection view.</source>
          <target state="translated">Se produit lorsque le système de liaison de données remarque une vue de collection.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
          <source>The collection to remove synchronized access from.</source>
          <target state="translated">Collection pour laquelle supprimer l'accès synchronisé.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
          <source>Remove the synchronization registered for the specified collection.</source>
          <target state="translated">Supprime la synchronisation enregistrée pour la collection spécifiée.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>Gets an object that replaces the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> when an item container is removed from the visual tree.</source>
          <target state="translated">Obtient un objet qui remplace le <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> lorsqu'un conteneur d'éléments est supprimé de l'arborescence d'éléments visuels.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>An object that replaces the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> when an item container is removed from the visual tree.</source>
          <target state="translated">Objet qui remplace le <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> lorsqu'un conteneur d'éléments est supprimé de l'arborescence d'éléments visuels.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>Use this property if you need to deal with the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of an item container.</source>
          <target state="translated">Utilisez cette propriété si vous avez besoin gérer la <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> d’un conteneur d’élément.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>An item container is the UI element that displays an item in an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</source>
          <target state="translated">Un conteneur d’élément est l’élément d’interface utilisateur qui affiche un élément dans un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>When an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> is data bound to a collection, an item container is generated for each item.</source>
          <target state="translated">Lorsqu’un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> données n’est lié à une collection, un conteneur d’élément est généré pour chaque élément.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>In some cases, item containers are removed from the visual tree.</source>
          <target state="translated">Dans certains cas, les conteneurs d’éléments sont supprimés de l’arborescence d’éléments visuels.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>Two typical cases where an item container is removed are when an item is removed from the underlying collection and when virtualization is enabled on the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</source>
          <target state="translated">Sont de deux cas classiques où un conteneur d’élément est supprimé lorsqu’un élément est supprimé de la collection sous-jacente et lorsque la virtualisation est activée sur le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>In these cases, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> property of the item container will be set to the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> property  You should check whether the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> is equal to the <ph id="ph4">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> before accessing the <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> in the <ph id="ph6">&lt;xref:System.Windows.FrameworkElement.DataContextChanged&gt;</ph> event for item containers.</source>
          <target state="translated">Dans ces cas, le <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> propriété du conteneur d’élément est fixée à la <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> propriété, vous devez vérifier si le <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> est égal à la <ph id="ph4">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> avant d’accéder à la <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> dans le <ph id="ph6">&lt;xref:System.Windows.FrameworkElement.DataContextChanged&gt;</ph> événement pour l’élément conteneurs.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>For more information about item containers and virtualization, see the remarks in the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> class.</source>
          <target state="translated">Pour plus d’informations sur la virtualisation et les conteneurs d’éléments, consultez les notes figurant dans la <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingOperations">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> object to participate in synchronized access to a collection that is used on multiple threads.</source>
          <target state="translated">Permet à un objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> de participer à un accès synchronisé à une collection utilisée sur plusieurs threads.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>A WPF application can display a collection of data using an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> or one of its subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</source>
          <target state="translated">Une application WPF peut afficher une collection de données à l’aide un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> ou une de ses sous-classes (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc..).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>WPF channels all its access to the collection through a subclass of <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
          <target state="translated">WPF canaux tout son accès à la collection via une sous-classe de <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Both the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> have affinity to the thread on which the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> was created, meaning that using them on a different thread is forbidden and throws an exception.</source>
          <target state="translated">À la fois le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> ont une affinité pour le thread sur lequel le <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> a été créé, ce qui signifie que leur utilisation sur un autre thread est interdite et lève une exception.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>In effect, this restriction applies to the collection as well.</source>
          <target state="translated">En effet, cette restriction s’applique à la collection.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>You may want to use the collection on multiple threads.</source>
          <target state="translated">Voulez-vous utiliser la collection sur plusieurs threads.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</source>
          <target state="translated">Par exemple, vous souhaitez mettre à jour de la collection (ajouter ou supprimer des éléments) sur un thread de « collecte des données », tout en affichant les résultats sur un thread « interface utilisateur », afin que l’interface utilisateur reste réactive lors de la collecte de données se produit.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection.</source>
          <target state="translated">Dans ce cas, vous êtes responsable de l’accès synchronisé de (« thread-safe ») à la collection.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This is typically done using either a simple lock mechanism or a more elaborate synchronization mechanism such as semaphores, reset events, etc.</source>
          <target state="translated">Cette opération est généralement effectuée à l’aide d’un mécanisme de verrouillage simple ou d’un mécanisme de synchronisation plus élaboré telles que les sémaphores, événements, etc. de réinitialisation.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>While you must synchronize your application's access to the collection, you must also guarantee that access from WPF (specifically from <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participates in the same synchronization mechanism.</source>
          <target state="translated">Pendant que vous devez synchroniser l’accès de votre application à la collection, vous devez également vous assurer que l’accès à partir de WPF (en particulier en <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) est inclus dans le même mécanisme de synchronisation.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>You do this by calling the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> method.</source>
          <target state="translated">Pour ce faire, appelez la méthode <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>To use a collection on multiple threads, one of which is the UI thread that owns the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, an application has the following responsibilities:</source>
          <target state="translated">Pour utiliser un regroupement sur plusieurs threads, y compris le thread d’interface utilisateur qui détient le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, une application possède les responsabilités suivantes :</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Choose a synchronization mechanism.</source>
          <target state="translated">Choisir un mécanisme de synchronisation.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Synchronize all access from the application to the collection using that mechanism.</source>
          <target state="translated">Synchroniser tous les accès à partir de l’application à la collection à l’aide de ce mécanisme.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> to inform WPF of the mechanism.</source>
          <target state="translated">Appelez <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> pour informer WPF du mécanisme.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The call must occur on the UI thread.</source>
          <target state="translated">L’appel doit se produire sur le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The call must occur before using the collection on a different thread or before attaching the collection to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, whichever is later.</source>
          <target state="translated">L’appel doit se produire avant l’utilisation de la collection sur un autre thread ou avant d’attacher la collection à le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, selon ce qui est plus loin.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> overload if using a simple lock mechanism; call the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> overload if using a more elaborate mechanism.</source>
          <target state="translated">Appeler le <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> surcharge si vous utilisez un mécanisme de verrouillage simple ; appel le <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> si vous utilisez un mécanisme plus élaboré de surcharge.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Ensure that a change to the collection and the notification of that change (through <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) are atomic; no access from other threads can intervene.</source>
          <target state="translated">Vérifiez qu’une modification apportée à la collection et la notification de modification (via <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) sont atomique ; aucun accès à partir d’autres threads ne peuvent intervenir.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>(This is usually free.</source>
          <target state="translated">(Il s’agit généralement de libre.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> guarantees this, provided that all changes are protected by synchronization.)</source>
          <target state="translated">For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> , garantit à condition que toutes les modifications sont protégées par la synchronisation.)</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, that call must also occur on the UI thread.</source>
          <target state="translated">Si vous appelez <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, qu’appel doit également se produire sur le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>If you want to use the same collection on multiple UI threads, you must call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (and <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, if needed) separately on each UI thread.</source>
          <target state="translated">Si vous souhaitez utiliser la même collection sur plusieurs threads d’interface utilisateur, vous devez appeler <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (et <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, si nécessaire) séparément sur chaque thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Avoid deadlock.</source>
          <target state="translated">Éviter un blocage.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization, as discussed in the following paragraph.</source>
          <target state="translated">Il s’agit déjà responsabilité de l’application une fois qu’elle choisit d’utiliser la synchronisation, mais il doit également prendre en participation de WPF de compte dans la synchronisation, comme indiqué dans le paragraphe suivant.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>In return, WPF provides the following behavior:</source>
          <target state="translated">En retour, WPF fournit le comportement suivant :</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accesses the collection using the given synchronization mechanism.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accède à la collection à l’aide du mécanisme de synchronisation donnée.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> maintains a "shadow copy" of the collection for use on the UI thread.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> conserve un « cliché instantané » de la collection pour une utilisation sur le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> events are queued up as they arrive (on any thread).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> les événements sont la file d’attente lorsqu’ils arrivent (sur n’importe quel thread).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</source>
          <target state="translated">Événements en attente sont appliquées à la copie miroir de façon asynchrone sur le thread d’interface utilisateur lorsqu’il a la possibilité de le faire.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> won't directly use any other synchronization mechanism visible to the application.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> ne sera pas utiliser directement de tout autre mécanisme de synchronisation visible par l’application.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This is WPF's way of helping to avoid deadlock (see the previous item 7).</source>
          <target state="translated">Cela est meilleure de WPF pour éviter un blocage (voir l’élément précédent 7).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The net effect is that you can change the collection on any thread, and those changes eventually appear in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> when the UI thread has time to "catch up".</source>
          <target state="translated">Le résultat est que vous pouvez modifier le regroupement sur n’importe quel thread, et ces modifications apparaissent dans le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> lorsque le thread d’interface utilisateur a le temps « pour rester à jour ».</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</source>
          <target state="translated">L’implémentation a été optimisée pour limiter le taux de flux de modifications dans le thread d’interface utilisateur pour conserver l’arrière-plan de threads de saturer le thread d’interface utilisateur et de priver de la réponse à l’entrée d’utilisateur normal.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The collection that needs synchronized access.</source>
          <target state="translated">Collection qui a besoin de l’accès synchronisé.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The object to lock when accessing the collection.</source>
          <target state="translated">Objet à verrouiller lors de l’accès à la collection.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> object to participate in synchronized access to a collection used on multiple threads by using a simple locking mechanism.</source>
          <target state="translated">Permet à un objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> de participer à un accès synchronisé à une collection utilisée sur plusieurs threads avec un mécanisme de verrouillage simple.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>A WPF application can display a collection of data using an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> or one of its subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</source>
          <target state="translated">Une application WPF peut afficher une collection de données à l’aide un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> ou une de ses sous-classes (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc..).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>WPF channels all its access to the collection through a subclass of <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
          <target state="translated">WPF canaux tout son accès à la collection via une sous-classe de <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Both the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> have affinity to the thread on which the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> was created, meaning that using them on a different thread is forbidden and throws an exception.</source>
          <target state="translated">À la fois le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> ont une affinité pour le thread sur lequel le <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> a été créé, ce qui signifie que leur utilisation sur un autre thread est interdite et lève une exception.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>In effect, this restriction applies to the collection as well.</source>
          <target state="translated">En effet, cette restriction s’applique à la collection.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>You may want to use the collection on multiple threads.</source>
          <target state="translated">Voulez-vous utiliser la collection sur plusieurs threads.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</source>
          <target state="translated">Par exemple, vous souhaitez mettre à jour de la collection (ajouter ou supprimer des éléments) sur un thread de « collecte des données », tout en affichant les résultats sur un thread « interface utilisateur », afin que l’interface utilisateur reste réactive lors de la collecte de données se produit.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participates in the same synchronization mechanism.</source>
          <target state="translated">Dans ce cas, vous êtes chargé de garantir l’accès (« thread-safe ») à la collection et pour garantir que l’accès à partir de WPF synchronisé (en particulier en <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) est inclus dans le même mécanisme de synchronisation.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>By calling the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> method, you can do this by using a simple lock mechanism.</source>
          <target state="translated">En appelant le <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> méthode, procéder à l’aide d’un mécanisme de verrouillage simple.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>To use a collection on multiple threads, one of which is the UI thread that owns the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, you must do the following:</source>
          <target state="translated">Pour utiliser un regroupement sur plusieurs threads, y compris le thread d’interface utilisateur qui détient le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, vous devez procédez comme suit :</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Instantiate an object to lock when accessing the collection.</source>
          <target state="translated">Instanciez un objet à verrouiller lors de l’accès à la collection.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Synchronize all access from the application to the collection by locking that object.</source>
          <target state="translated">Synchroniser tous les accès à partir de l’application à la collection par un verrouillage de cet objet.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> to inform WPF that you are using a simple lock mechanism.</source>
          <target state="translated">Appelez <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> pour informer WPF que vous utilisez un mécanisme de verrouillage simple.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The call must occur on the UI thread.</source>
          <target state="translated">L’appel doit se produire sur le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The call must occur before using the collection on a different thread or before attaching the collection to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, whichever is later.</source>
          <target state="translated">L’appel doit se produire avant l’utilisation de la collection sur un autre thread ou avant d’attacher la collection à le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, selon ce qui est plus loin.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Ensure that a change to the collection and the notification of that change (through <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) are atomic; no access from other threads can intervene.</source>
          <target state="translated">Vérifiez qu’une modification apportée à la collection et la notification de modification (via <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) sont atomique ; aucun accès à partir d’autres threads ne peuvent intervenir.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>(This is usually free.</source>
          <target state="translated">(Il s’agit généralement de libre.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> guarantees this, provided that all changes are protected by synchronization.)</source>
          <target state="translated">For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> , garantit à condition que toutes les modifications sont protégées par la synchronisation.)</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, that call must also occur on the UI thread.</source>
          <target state="translated">Si vous appelez <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, qu’appel doit également se produire sur le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>If you want to use the same collection on multiple UI threads, you must call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (and <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, if needed) separately on each UI thread.</source>
          <target state="translated">Si vous souhaitez utiliser la même collection sur plusieurs threads d’interface utilisateur, vous devez appeler <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (et <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, si nécessaire) séparément sur chaque thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Avoid deadlock.</source>
          <target state="translated">Éviter un blocage.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</source>
          <target state="translated">Il s’agit déjà responsabilité de l’application une fois qu’elle choisit d’utiliser la synchronisation, mais il doit également prendre en compte la participation de WPF dans la synchronisation.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>(See more, below.)</source>
          <target state="translated">(Voir plus d’informations, ci-dessous.)</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>In return, WPF provides the following behavior:</source>
          <target state="translated">En retour, WPF fournit le comportement suivant :</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accesses the collection using the locking mechanism.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accède à la collection à l’aide du mécanisme de verrouillage.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> maintains a "shadow copy" of the collection for use on the UI thread.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> conserve un « cliché instantané » de la collection pour une utilisation sur le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> events are queued up as they arrive (on any thread).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> les événements sont la file d’attente lorsqu’ils arrivent (sur n’importe quel thread).</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</source>
          <target state="translated">Événements en attente sont appliquées à la copie miroir de façon asynchrone sur le thread d’interface utilisateur lorsqu’il a la possibilité de le faire.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> will not directly use any other synchronization mechanism visible to the application.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> n’utilisera pas directement tout autre mécanisme de synchronisation visible par l’application.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>This is WPF's way of helping to avoid deadlock (see the previous item 7).</source>
          <target state="translated">Cela est meilleure de WPF pour éviter un blocage (voir l’élément précédent 7).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The net effect is that you can change the collection on any thread, and those changes eventually appear in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> when the UI thread has time to "catch up".</source>
          <target state="translated">Le résultat est que vous pouvez modifier le regroupement sur n’importe quel thread, et ces modifications apparaissent dans le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> lorsque le thread d’interface utilisateur a le temps « pour rester à jour ».</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</source>
          <target state="translated">L’implémentation a été optimisée pour limiter le taux de flux de modifications dans le thread d’interface utilisateur pour conserver l’arrière-plan de threads de saturer le thread d’interface utilisateur et de priver de la réponse à l’entrée d’utilisateur normal.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The collection that needs synchronized access.</source>
          <target state="translated">Collection qui a besoin de l’accès synchronisé.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>An object that is passed to the callback.</source>
          <target state="translated">Objet qui est passé au rappel.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The callback that is invoked whenever access to the collection is required.</source>
          <target state="translated">Rappel qui est appelé chaque fois que l’accès à la collection est nécessaire.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>You can use it to ensure that the collection is accessed by one thread at a time.</source>
          <target state="translated">Vous pouvez l’utiliser pour garantir que la collection est accessible par un seul thread à la fois.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> object to participate in synchronized access to a collection used on multiple threads by using a mechanism other than a simple lock.</source>
          <target state="translated">Permet à un objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> de participer à un accès synchronisé à une collection utilisée sur plusieurs threads avec un mécanisme de verrouillage autre qu’un verrou simple.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>A WPF application can display a collection of data using an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> or one of its subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</source>
          <target state="translated">Une application WPF peut afficher une collection de données à l’aide un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> ou une de ses sous-classes (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc..).</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>WPF channels all its access to the collection through a subclass of <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
          <target state="translated">WPF canaux tout son accès à la collection via une sous-classe de <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Both the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> have affinity to the thread on which the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> was created, meaning that using them on a different thread is forbidden and throws an exception.</source>
          <target state="translated">À la fois le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> ont une affinité pour le thread sur lequel le <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> a été créé, ce qui signifie que leur utilisation sur un autre thread est interdite et lève une exception.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>In effect, this restriction applies to the collection as well.</source>
          <target state="translated">En effet, cette restriction s’applique à la collection.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>You may want to use the collection on multiple threads.</source>
          <target state="translated">Voulez-vous utiliser la collection sur plusieurs threads.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</source>
          <target state="translated">Par exemple, vous souhaitez mettre à jour de la collection (ajouter ou supprimer des éléments) sur un thread de « collecte des données », tout en affichant les résultats sur un thread « interface utilisateur », afin que l’interface utilisateur reste réactive lors de la collecte de données se produit.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participates in the same synchronization mechanism.</source>
          <target state="translated">Dans ce cas, vous êtes chargé de garantir l’accès (« thread-safe ») à la collection et pour garantir que l’accès à partir de WPF synchronisé (en particulier en <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) est inclus dans le même mécanisme de synchronisation.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>By calling the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> method, you can do this by using a synchronization mechanism such as a semaphores, a reset event, etc.</source>
          <target state="translated">En appelant le <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> méthode, procéder à l’aide d’un mécanisme de synchronisation, par exemple un sémaphores, d’un événement de réinitialisation, etc.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>To use a collection on multiple threads, one of which is the UI thread that owns the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, you must do the following:</source>
          <target state="translated">Pour utiliser un regroupement sur plusieurs threads, y compris le thread d’interface utilisateur qui détient le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, vous devez procédez comme suit :</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Choose a synchronization mechanism.</source>
          <target state="translated">Choisir un mécanisme de synchronisation.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Synchronize all access from the application to the collection using that mechanism.</source>
          <target state="translated">Synchroniser tous les accès à partir de l’application à la collection à l’aide de ce mécanisme.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> overload to inform WPF that you are using a mechanism other than simple locking.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> surcharge pour informer WPF que vous utilisez un mécanisme autre que la simple de verrouillage.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The call must occur on the UI thread.</source>
          <target state="translated">L’appel doit se produire sur le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The call must occur before using the collection on a different thread or before attaching the collection to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, whichever is later.</source>
          <target state="translated">L’appel doit se produire avant l’utilisation de la collection sur un autre thread ou avant d’attacher la collection à le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, selon ce qui est plus loin.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Ensure that a change to the collection and the notification of that change (through <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) are atomic; no access from other threads can intervene.</source>
          <target state="translated">Vérifiez qu’une modification apportée à la collection et la notification de modification (via <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) sont atomique ; aucun accès à partir d’autres threads ne peuvent intervenir.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>(This is usually free.</source>
          <target state="translated">(Il s’agit généralement de libre.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> guarantees this, provided that all changes are protected by synchronization.)</source>
          <target state="translated">For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> , garantit à condition que toutes les modifications sont protégées par la synchronisation.)</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, that call must also occur on the UI thread.</source>
          <target state="translated">Si vous appelez <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, qu’appel doit également se produire sur le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>If you want to use the same collection on multiple UI threads, you must call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (and <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, if needed) separately on each UI thread.</source>
          <target state="translated">Si vous souhaitez utiliser la même collection sur plusieurs threads d’interface utilisateur, vous devez appeler <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (et <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, si nécessaire) séparément sur chaque thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Avoid deadlock.</source>
          <target state="translated">Éviter un blocage.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</source>
          <target state="translated">Il s’agit déjà responsabilité de l’application une fois qu’elle choisit d’utiliser la synchronisation, mais il doit également prendre en compte la participation de WPF dans la synchronisation.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>(See more, below.)</source>
          <target state="translated">(Voir plus d’informations, ci-dessous.)</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>In return, WPF provides the following behavior:</source>
          <target state="translated">En retour, WPF fournit le comportement suivant :</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accesses the collection by calling the registered <ph id="ph2">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> with the following arguments:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accède à la collection en appelant inscrit <ph id="ph2">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> avec les arguments suivants :</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`collection`</ph>: the collection of interest.</source>
          <target state="translated"><ph id="ph1">`collection`</ph>: la collection d’intérêt.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`context`</ph>: the registered context object.</source>
          <target state="translated"><ph id="ph1">`context`</ph>: l’objet de contexte inscrit.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`accessMethod`</ph>: a delegate that performs the actual access.</source>
          <target state="translated"><ph id="ph1">`accessMethod`</ph>: un délégué qui effectue l’accès réel.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`writeAccess`</ph>: <ph id="ph2">`true`</ph> if the delegate will modify the collection; <ph id="ph3">`false`</ph> otherwise.</source>
          <target state="translated"><ph id="ph1">`writeAccess`</ph>: <ph id="ph2">`true`</ph> si le délégué modifiera la collection ; <ph id="ph3">`false`</ph> dans le cas contraire.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Your <ph id="ph1">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> should establish synchronization on the collection (using the <ph id="ph2">`context`</ph> object and the <ph id="ph3">`writeAccess`</ph> value, as appropriate), call the <ph id="ph4">`accessMethod`</ph>, then release synchronization.</source>
          <target state="translated">Votre <ph id="ph1">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> doit établir une synchronisation sur la collection (à l’aide de la <ph id="ph2">`context`</ph> objet et la <ph id="ph3">`writeAccess`</ph> valeur, selon le cas), appeler le <ph id="ph4">`accessMethod`</ph>, puis relâchez la synchronisation.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> maintains a "shadow copy" of the collection for use on the UI thread.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> conserve un « cliché instantané » de la collection pour une utilisation sur le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> events are queued up as they arrive (on any thread).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> les événements sont la file d’attente lorsqu’ils arrivent (sur n’importe quel thread).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</source>
          <target state="translated">Événements en attente sont appliquées à la copie miroir de façon asynchrone sur le thread d’interface utilisateur lorsqu’il a la possibilité de le faire.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> will not directly use any other synchronization mechanism visible to the application.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> n’utilisera pas directement tout autre mécanisme de synchronisation visible par l’application.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>This is WPF's way of helping to avoid deadlock (see the previous item 7).</source>
          <target state="translated">Cela est meilleure de WPF pour éviter un blocage (voir l’élément précédent 7).</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The net effect is that you can change the collection on any thread, and those changes eventually appear in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> when the UI thread has time to "catch up".</source>
          <target state="translated">Le résultat est que vous pouvez modifier le regroupement sur n’importe quel thread, et ces modifications apparaissent dans le <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> lorsque le thread d’interface utilisateur a le temps « pour rester à jour ».</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</source>
          <target state="translated">L’implémentation a été optimisée pour limiter le taux de flux de modifications dans le thread d’interface utilisateur pour conserver l’arrière-plan de threads de saturer le thread d’interface utilisateur et de priver de la réponse à l’entrée d’utilisateur normal.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">`context`</ph> parameter is an arbitrary object that is passed to the <ph id="ph2">`callback`</ph>.</source>
          <target state="translated">Le <ph id="ph1">`context`</ph> paramètre est un objet arbitraire qui est transmis à la <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>You can use it to determine the synchronization mechanism used to control access to <ph id="ph1">`collection`</ph>.</source>
          <target state="translated">Vous pouvez l’utiliser pour déterminer le mécanisme de synchronisation utilisé pour contrôler l’accès à <ph id="ph1">`collection`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`Context`</ph> can be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`Context`</ph> peut être <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Objet où se trouve <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the binding.</source>
          <target state="translated">Propriété de cible de liaison à partir de laquelle récupérer la liaison.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Récupère l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> défini sur la propriété spécifiée.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> object set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no <ph id="ph3">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> object has been set.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> défini sur la propriété donnée ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si aucun objet <ph id="ph3">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> n'a été défini.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated">Les paramètres <ph id="ph1">&lt;paramref name="target" /&gt;</ph> et <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> ne peuvent pas être null.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Objet où se trouve <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object.</source>
          <target state="translated">Propriété de la cible de liaison à partir de laquelle récupérer l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Récupère l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> défini sur la propriété spécifiée.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object that is set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no binding object has been set.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> défini sur la propriété donnée ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si aucun objet de liaison n'a été défini.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> class is the common base class for the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> classes.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> classe est la classe de base commune pour les <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, et <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBinding%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A&gt;</ph> methods if you know in advance the type of binding that is set on the property.</source>
          <target state="translated">Vous pouvez utiliser la <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBinding%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A&gt;</ph> méthodes si vous connaissez à l’avance le type de liaison qui est définissent sur la propriété.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Les paramètres <ph id="ph1">&lt;paramref name="target" /&gt;</ph> et <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> ne peuvent pas avoir la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Objet cible de liaison où se trouve <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> object.</source>
          <target state="translated">Propriété de la cible de liaison à partir de laquelle récupérer l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> object associated with the specified binding target property on the specified object.</source>
          <target state="translated">Retourne l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> associé à la propriété de cible de liaison spécifiée sur l'objet donné.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> object associated with the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> associé à la propriété donnée ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si aucun objet n'existe.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If a <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object is set on the property, the <ph id="ph2">&lt;see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /&gt;</ph> is returned.</source>
          <target state="translated">Si un objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> est défini sur la propriété, <ph id="ph2">&lt;see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /&gt;</ph> est retourné.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> object maintains the connection between the binding source and the binding target.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> objet gère la connexion entre la source de liaison et la cible de liaison.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>You can obtain the <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> object by calling this static method or by calling the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt;</ph> method on a data-bound <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> object.</source>
          <target state="translated">Vous pouvez obtenir le <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> objet en appelant cette méthode statique ou en appelant le <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt;</ph> méthode sur une limite de données <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> ou <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The following example shows the implementation of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler that uses the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph> method to obtain the <ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> and then calls the <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpression.DataItem%2A&gt;</ph> property to access the binding source object.</source>
          <target state="translated">L’exemple suivant illustre l’implémentation d’un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> Gestionnaire d’événements qui utilise le <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph> méthode pour obtenir le <ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> , puis appelle la <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpression.DataItem%2A&gt;</ph> propriété accéder à l’objet de source de liaison.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph><ph id="ph2">`SavingsText`</ph> is the binding target object and <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.Text%2A&gt;</ph> is the binding target property.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> <ph id="ph2">`SavingsText`</ph> est l’objet cible de liaison et <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.Text%2A&gt;</ph> est la propriété de cible de liaison.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Les paramètres <ph id="ph1">&lt;paramref name="target" /&gt;</ph> et <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> ne peuvent pas avoir la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Objet où se trouve <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> object.</source>
          <target state="translated">Propriété de la cible de liaison à partir de laquelle récupérer l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Récupère l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> défini sur la propriété spécifiée.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> object that is set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no binding object has been set.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> défini sur la propriété donnée ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si aucun objet de liaison n'a été défini.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> class is the common base class for the <ph id="ph2">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBindingExpression&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> classes.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> classe est la classe de base commune pour les <ph id="ph2">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBindingExpression&gt;</ph>, et <ph id="ph4">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A&gt;</ph> methods if you know in advance type of binding that is set on the property.</source>
          <target state="translated">Vous pouvez utiliser la <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A&gt;</ph> méthodes si vous connaissez à l’avance le type de liaison est définie sur la propriété.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated">Les paramètres <ph id="ph1">&lt;paramref name="target" /&gt;</ph> et <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> ne peuvent pas être null.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Objet où se trouve <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the binding.</source>
          <target state="translated">Propriété de cible de liaison à partir de laquelle récupérer la liaison.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Récupère l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> défini sur la propriété spécifiée.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> object set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> object has been set.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> défini sur la propriété donnée ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si aucun objet <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> n'a été défini.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated">Les paramètres <ph id="ph1">&lt;paramref name="target" /&gt;</ph> et <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> ne peuvent pas être null.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Objet cible de liaison où se trouve <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> object.</source>
          <target state="translated">Propriété de la cible de liaison à partir de laquelle récupérer l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> object associated with the specified binding target property on the specified object.</source>
          <target state="translated">Retourne l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> associé à la propriété de cible de liaison spécifiée sur l'objet donné.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> object associated with the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> associé à la propriété donnée ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si aucun objet n'existe.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> object associated with the given property or <ph id="ph2">`null`</ph> if none exists.</source>
          <target state="translated">Objet <ph id="ph1">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> associé à la propriété donnée ou <ph id="ph2">`null`</ph> si aucun objet n'existe.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Les paramètres <ph id="ph1">&lt;paramref name="target" /&gt;</ph> et <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> ne peuvent pas avoir la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Objet où se trouve <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the binding.</source>
          <target state="translated">Propriété de cible de liaison à partir de laquelle récupérer la liaison.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Récupère l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> défini sur la propriété spécifiée.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> object set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> object has been set.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> défini sur la propriété donnée ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si aucun objet <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> n'a été défini.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated">Les paramètres <ph id="ph1">&lt;paramref name="target" /&gt;</ph> et <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> ne peuvent pas être null.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Objet cible de liaison où se trouve <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object.</source>
          <target state="translated">Propriété de la cible de liaison à partir de laquelle récupérer l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object associated with the specified binding target property on the specified object.</source>
          <target state="translated">Retourne l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> associé à la propriété de cible de liaison spécifiée sur l'objet donné.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object associated with the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> associé à la propriété donnée ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si aucun objet n'existe.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Les paramètres <ph id="ph1">&lt;paramref name="target" /&gt;</ph> et <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> ne peuvent pas avoir la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>The root <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> to get binding groups for.</source>
          <target state="translated">Élément <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> racine pour lequel obtenir les groupes de liaison.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>This method returns <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> objects that are associated with this element or its descendant elements.</source>
          <target state="translated">Cette méthode retourne les objets <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> associés à cet élément ou ses éléments descendants.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>Gets all <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> objects that have invalid values or target values have not been updated the source.</source>
          <target state="translated">Obtient tous les objets <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> qui ont des valeurs non valides ou des valeurs cibles n'ont pas mis à jour la source.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</source>
          <target state="translated">Collection d'objets <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> qui sont associés à l'élément spécifié et qui ont des valeurs non valides ou des valeurs cibles qui n'ont pas été mises à jour à la source.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>If <ph id="ph1">`root`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A&gt;</ph> returns all <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> objects that are invalid or have not been updated.</source>
          <target state="translated">Si <ph id="ph1">`root`</ph> est <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A&gt;</ph> retourne tous les <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> des objets qui ne sont pas valides ou n’ont pas été mis à jour.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>The root <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> to get binding groups for.</source>
          <target state="translated">Élément <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> racine pour lequel obtenir les groupes de liaison.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>This method returns <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> objects that are associated with this element or its descendant elements.</source>
          <target state="translated">Cette méthode retourne les objets <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> associés à cet élément ou ses éléments descendants.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>Gets all <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> objects that have invalid values or target values have not been updated the source.</source>
          <target state="translated">Obtient tous les objets <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> qui ont des valeurs non valides ou des valeurs cibles n'ont pas mis à jour la source.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</source>
          <target state="translated">Collection d'objets <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> qui sont associés à l'élément spécifié et qui ont des valeurs non valides ou des valeurs cibles qui n'ont pas été mises à jour à la source.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>If <ph id="ph1">`root`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A&gt;</ph> returns all <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> objects that are invalid or have not been updated.</source>
          <target state="translated">Si <ph id="ph1">`root`</ph> est <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A&gt;</ph> retourne tous les <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> des objets qui ne sont pas valides ou n’ont pas été mis à jour.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Objet où se trouve <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The dependency property to check.</source>
          <target state="translated">Propriété de dépendance à vérifier.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns a value that indicates whether the specified property is currently data-bound.</source>
          <target state="translated">Retourne une valeur qui indique si la propriété spécifiée est actuellement liée aux données.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified property is data-bound; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété spécifiée est liée aux données ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="target" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The binding target of the binding.</source>
          <target state="translated">Cible de liaison de la liaison.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The target property of the binding.</source>
          <target state="translated">Propriété cible de la liaison.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object that describes the binding.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> qui décrit la liaison.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>Creates and associates a new instance of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> with the specified binding target property.</source>
          <target state="translated">Crée et associe une instance de <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> à la propriété de cible de liaison spécifiée.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The instance of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> created for and associated with the specified property.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> créée pour la propriété spécifiée et associée à celle-ci.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> class is the base class of <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph>.</source>
          <target state="translated">La classe <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> est la classe de base de <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> et <ph id="ph4">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>This method creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> and associates the instance with the given dependency property of the given object.</source>
          <target state="translated">Cette méthode crée une instance d’un <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> et associe l’instance à la propriété de dépendance donnée de l’objet donné.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>This method is the way to attach a binding to an arbitrary <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> that may not expose its own SetBinding method.</source>
          <target state="translated">Cette méthode est la façon de joindre une liaison à un élément arbitraire <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> qui ne peut pas exposer sa propre méthode SetBinding.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The following example shows how to use this method to set a binding.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour définir une liaison.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>In this example, <ph id="ph1">`myNewBindDef`</ph> is a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> object that describes the binding.</source>
          <target state="translated">Dans cet exemple, <ph id="ph1">`myNewBindDef`</ph> est un <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> objet qui décrit la liaison.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The binding target is <ph id="ph1">`myDateText`</ph>, an instance of the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> class.</source>
          <target state="translated">La cible de liaison est <ph id="ph1">`myDateText`</ph>, une instance de la <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The <ph id="ph1">&lt;paramref name="binding" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="binding" /&gt;</ph> ne peut pas avoir la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>