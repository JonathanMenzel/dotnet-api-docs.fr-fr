<Type Name="BindingOperations" FullName="System.Windows.Data.BindingOperations">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92b113f334992708d2a2faaedc39e7bed7220632" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36564648" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class BindingOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BindingOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingOperations" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingOperations abstract sealed" />
  <TypeSignature Language="F#" Value="type BindingOperations = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7fca0-101">Fournit des méthodes statiques pour manipuler des liaisons, notamment des objets <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" /> et <see cref="T:System.Windows.Data.PriorityBinding" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7fca0-101">Provides static methods to manipulate bindings, including <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fca0-102">Cette classe expose un ensemble de méthodes statiques qui servent d’opérations d’assistance pour les liaisons de données.</span><span class="sxs-lookup"><span data-stu-id="7fca0-102">This class exposes a set of static methods that serve as helper operations for data bindings.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessCollection">
      <MemberSignature Language="C#" Value="public static void AccessCollection (System.Collections.IEnumerable collection, Action accessMethod, bool writeAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccessCollection(class System.Collections.IEnumerable collection, class System.Action accessMethod, bool writeAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AccessCollection (collection As IEnumerable, accessMethod As Action, writeAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AccessCollection(System::Collections::IEnumerable ^ collection, Action ^ accessMethod, bool writeAccess);" />
      <MemberSignature Language="F#" Value="static member AccessCollection : System.Collections.IEnumerable * Action * bool -&gt; unit" Usage="System.Windows.Data.BindingOperations.AccessCollection (collection, accessMethod, writeAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="accessMethod" Type="System.Action" />
        <Parameter Name="writeAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7fca0-103">Collection à laquelle accéder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-103">The collection to access.</span>
          </span>
        </param>
        <param name="accessMethod">
          <span data-ttu-id="7fca0-104">Action à exécuter sur la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-104">The action to perform on the collection.</span>
          </span>
        </param>
        <param name="writeAccess">
          <span data-ttu-id="7fca0-105">
            <see langword="true" /> si <c>accessMethod</c> doit écrire dans la collection ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-105">
              <see langword="true" /> if <c>accessMethod</c> will write to the collection; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-106">Permet d'accéder à une collection à l'aide du mécanisme de synchronisation que l'application a spécifié lorsqu'elle a appelé EnableCollectionSynchronization.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-106">Provides access to a collection by using the synchronization mechanism that the application specified when it called EnableCollectionSynchronization.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllBindings">
      <MemberSignature Language="C#" Value="public static void ClearAllBindings (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllBindings(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllBindings (target As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllBindings(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member ClearAllBindings : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Data.BindingOperations.ClearAllBindings target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="7fca0-107">Objet à partir duquel supprimer les liaisons.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-107">The object from which to remove bindings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-108">Supprime toutes les liaisons, notamment les liaisons de type <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" /> et <see cref="T:System.Windows.Data.PriorityBinding" />, à partir du <see cref="T:System.Windows.DependencyObject" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-108">Removes all bindings, including bindings of type <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" />, from the specified <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fca0-109">Si l’objet spécifié n’est pas lié aux données, cette méthode n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="7fca0-109">If the specified object is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fca0-110">Si <paramref name="target" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-110">If <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearBinding">
      <MemberSignature Language="C#" Value="public static void ClearBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearBinding (target As DependencyObject, dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member ClearBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; unit" Usage="System.Windows.Data.BindingOperations.ClearBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="7fca0-111">Objet à partir duquel supprimer la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-111">The object from which to remove the binding.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="7fca0-112">Propriété de dépendance à partir de laquelle la liaison doit être supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-112">The dependency property from which to remove the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-113">Supprime la liaison d’une propriété, le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-113">Removes the binding from a property if there is one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fca0-114">Si la propriété donnée est lié aux données avec un <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, ou <xref:System.Windows.Data.MultiBinding>, cette méthode supprime l’expression de liaison et les restaure la valeur de la propriété pour qu’il avait avant toute valeur locale a été définie par la liaison correspondante.</span><span class="sxs-lookup"><span data-stu-id="7fca0-114">If the given property is data-bound with a <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, or <xref:System.Windows.Data.MultiBinding>, this method removes the corresponding binding expression and restores the value of the property to what it was before any local value was set through the binding.</span></span>  
  
 <span data-ttu-id="7fca0-115">Si la propriété donnée n’est pas lié aux données, cette méthode n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="7fca0-115">If the given property is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fca0-116">Les paramètres <paramref name="target" /> et <paramref name="dp" /> ne peuvent pas avoir la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-116">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionRegistering As EventHandler(Of CollectionRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionRegisteringEventArgs ^&gt; ^ CollectionRegistering;" />
      <MemberSignature Language="F#" Value="member this.CollectionRegistering : EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; " Usage="member this.CollectionRegistering : System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7fca0-117">Se produit lorsque le système de liaison de données remarque une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-117">Occurs when the data-binding system notices a collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionViewRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionViewRegistering As EventHandler(Of CollectionViewRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionViewRegisteringEventArgs ^&gt; ^ CollectionViewRegistering;" />
      <MemberSignature Language="F#" Value="member this.CollectionViewRegistering : EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; " Usage="member this.CollectionViewRegistering : System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7fca0-118">Se produit lorsque le système de liaison de données remarque une vue de collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-118">Occurs when the data-binding system notices a collection view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void DisableCollectionSynchronization (System.Collections.IEnumerable collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCollectionSynchronization(class System.Collections.IEnumerable collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCollectionSynchronization (collection As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCollectionSynchronization(System::Collections::IEnumerable ^ collection);" />
      <MemberSignature Language="F#" Value="static member DisableCollectionSynchronization : System.Collections.IEnumerable -&gt; unit" Usage="System.Windows.Data.BindingOperations.DisableCollectionSynchronization collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7fca0-119">Collection pour laquelle supprimer l'accès synchronisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-119">The collection to remove synchronized access from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-120">Supprime la synchronisation enregistrée pour la collection spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-120">Remove the synchronization registered for the specified collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectedSource">
      <MemberSignature Language="C#" Value="public static object DisconnectedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object DisconnectedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DisconnectedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ DisconnectedSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisconnectedSource : obj" Usage="System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7fca0-121">Obtient un objet qui remplace le <see cref="P:System.Windows.FrameworkElement.DataContext" /> lorsqu'un conteneur d'éléments est supprimé de l'arborescence d'éléments visuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-121">Gets an object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7fca0-122">Objet qui remplace le <see cref="P:System.Windows.FrameworkElement.DataContext" /> lorsqu'un conteneur d'éléments est supprimé de l'arborescence d'éléments visuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-122">An object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fca0-123">Utilisez cette propriété si vous avez besoin gérer la <xref:System.Windows.FrameworkElement.DataContext%2A> d’un conteneur d’élément.</span><span class="sxs-lookup"><span data-stu-id="7fca0-123">Use this property if you need to deal with the <xref:System.Windows.FrameworkElement.DataContext%2A> of an item container.</span></span>  <span data-ttu-id="7fca0-124">Un conteneur d’élément est l’élément d’interface utilisateur qui affiche un élément dans un <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="7fca0-124">An item container is the UI element that displays an item in an <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="7fca0-125">Lorsqu’un <xref:System.Windows.Controls.ItemsControl> données n’est lié à une collection, un conteneur d’élément est généré pour chaque élément.</span><span class="sxs-lookup"><span data-stu-id="7fca0-125">When an <xref:System.Windows.Controls.ItemsControl> is data bound to a collection, an item container is generated for each item.</span></span>  <span data-ttu-id="7fca0-126">Dans certains cas, les conteneurs d’éléments sont supprimés de l’arborescence d’éléments visuels.</span><span class="sxs-lookup"><span data-stu-id="7fca0-126">In some cases, item containers are removed from the visual tree.</span></span>  <span data-ttu-id="7fca0-127">Sont de deux cas classiques où un conteneur d’élément est supprimé lorsqu’un élément est supprimé de la collection sous-jacente et lorsque la virtualisation est activée sur le <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="7fca0-127">Two typical cases where an item container is removed are when an item is removed from the underlying collection and when virtualization is enabled on the <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="7fca0-128">Dans ces cas, le <xref:System.Windows.FrameworkElement.DataContext%2A> propriété du conteneur d’élément est fixée à la <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> propriété, vous devez vérifier si le <xref:System.Windows.FrameworkElement.DataContext%2A> est égal à la <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> avant d’accéder à la <xref:System.Windows.FrameworkElement.DataContext%2A> dans le <xref:System.Windows.FrameworkElement.DataContextChanged> événement pour l’élément conteneurs.</span><span class="sxs-lookup"><span data-stu-id="7fca0-128">In these cases, the <xref:System.Windows.FrameworkElement.DataContext%2A> property of the item container will be set to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> property  You should check whether the <xref:System.Windows.FrameworkElement.DataContext%2A> is equal to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> before accessing the <xref:System.Windows.FrameworkElement.DataContext%2A> in the <xref:System.Windows.FrameworkElement.DataContextChanged> event for item containers.</span></span> <span data-ttu-id="7fca0-129">Pour plus d’informations sur la virtualisation et les conteneurs d’éléments, consultez les notes figurant dans la <xref:System.Windows.Controls.VirtualizingStackPanel> classe.</span><span class="sxs-lookup"><span data-stu-id="7fca0-129">For more information about item containers and virtualization, see the remarks in the <xref:System.Windows.Controls.VirtualizingStackPanel> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableCollectionSynchronization">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7fca0-130">Permet à un objet <see cref="T:System.Windows.Data.CollectionView" /> de participer à un accès synchronisé à une collection utilisée sur plusieurs threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-130">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection that is used on multiple threads.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="7fca0-131">Une application WPF peut afficher une collection de données à l’aide un <xref:System.Windows.Controls.ItemsControl> ou une de ses sous-classes (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc..).</span><span class="sxs-lookup"><span data-stu-id="7fca0-131">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span> <span data-ttu-id="7fca0-132">WPF canaux tout son accès à la collection via une sous-classe de <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="7fca0-132">WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="7fca0-133">À la fois le <xref:System.Windows.Controls.ItemsControl> et <xref:System.Windows.Data.CollectionView> ont une affinité pour le thread sur lequel le <xref:System.Windows.Controls.ItemsControl> a été créé, ce qui signifie que leur utilisation sur un autre thread est interdite et lève une exception.</span><span class="sxs-lookup"><span data-stu-id="7fca0-133">Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span> <span data-ttu-id="7fca0-134">En effet, cette restriction s’applique à la collection.</span><span class="sxs-lookup"><span data-stu-id="7fca0-134">In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="7fca0-135">Voulez-vous utiliser la collection sur plusieurs threads.</span><span class="sxs-lookup"><span data-stu-id="7fca0-135">You may want to use the collection on multiple threads.</span></span>   <span data-ttu-id="7fca0-136">Par exemple, vous souhaitez mettre à jour de la collection (ajouter ou supprimer des éléments) sur un thread de « collecte des données », tout en affichant les résultats sur un thread « interface utilisateur », afin que l’interface utilisateur reste réactive lors de la collecte de données se produit.</span><span class="sxs-lookup"><span data-stu-id="7fca0-136">For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span> <span data-ttu-id="7fca0-137">Dans ce cas, vous êtes responsable de l’accès synchronisé de (« thread-safe ») à la collection.</span><span class="sxs-lookup"><span data-stu-id="7fca0-137">In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection.</span></span>   <span data-ttu-id="7fca0-138">Cette opération est généralement effectuée à l’aide d’un mécanisme de verrouillage simple ou d’un mécanisme de synchronisation plus élaboré telles que les sémaphores, événements, etc. de réinitialisation.</span><span class="sxs-lookup"><span data-stu-id="7fca0-138">This is typically done using either a simple lock mechanism or a more elaborate synchronization mechanism such as semaphores, reset events, etc.</span></span> 
 
<span data-ttu-id="7fca0-139">Pendant que vous devez synchroniser l’accès de votre application à la collection, vous devez également vous assurer que l’accès à partir de WPF (en particulier en <xref:System.Windows.Data.CollectionView>) est inclus dans le même mécanisme de synchronisation.</span><span class="sxs-lookup"><span data-stu-id="7fca0-139">While you must synchronize your application's access to the collection, you must also guarantee that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span>  <span data-ttu-id="7fca0-140">Pour ce faire, appelez la méthode <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>.</span><span class="sxs-lookup"><span data-stu-id="7fca0-140">You do this by calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> method.</span></span>
 
<span data-ttu-id="7fca0-141">Pour utiliser un regroupement sur plusieurs threads, y compris le thread d’interface utilisateur qui détient le <xref:System.Windows.Controls.ItemsControl>, une application possède les responsabilités suivantes :</span><span class="sxs-lookup"><span data-stu-id="7fca0-141">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, an application has the following responsibilities:</span></span>

1. <span data-ttu-id="7fca0-142">Choisir un mécanisme de synchronisation.</span><span class="sxs-lookup"><span data-stu-id="7fca0-142">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="7fca0-143">Synchroniser tous les accès à partir de l’application à la collection à l’aide de ce mécanisme.</span><span class="sxs-lookup"><span data-stu-id="7fca0-143">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="7fca0-144">Appelez <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> pour informer WPF du mécanisme.</span><span class="sxs-lookup"><span data-stu-id="7fca0-144">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> to inform WPF of the mechanism.</span></span>

   - <span data-ttu-id="7fca0-145">L’appel doit se produire sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7fca0-145">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="7fca0-146">L’appel doit se produire avant l’utilisation de la collection sur un autre thread ou avant d’attacher la collection à le <xref:System.Windows.Controls.ItemsControl>, selon ce qui est plus loin.</span><span class="sxs-lookup"><span data-stu-id="7fca0-146">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

   - <span data-ttu-id="7fca0-147">Appeler le <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> surcharge si vous utilisez un mécanisme de verrouillage simple ; appel le <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> si vous utilisez un mécanisme plus élaboré de surcharge.</span><span class="sxs-lookup"><span data-stu-id="7fca0-147">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> overload if using a simple lock mechanism; call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload if using a more elaborate mechanism.</span></span>

1. <span data-ttu-id="7fca0-148">Vérifiez qu’une modification apportée à la collection et la notification de modification (via <xref:System.Collections.Specialized.INotifyCollectionChanged>) sont atomique ; aucun accès à partir d’autres threads ne peuvent intervenir.</span><span class="sxs-lookup"><span data-stu-id="7fca0-148">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span>  <span data-ttu-id="7fca0-149">(Il s’agit généralement de libre.</span><span class="sxs-lookup"><span data-stu-id="7fca0-149">(This is usually free.</span></span> <span data-ttu-id="7fca0-150">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> , garantit à condition que toutes les modifications sont protégées par la synchronisation.)</span><span class="sxs-lookup"><span data-stu-id="7fca0-150">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="7fca0-151">Si vous appelez <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, qu’appel doit également se produire sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7fca0-151">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="7fca0-152">Si vous souhaitez utiliser la même collection sur plusieurs threads d’interface utilisateur, vous devez appeler <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (et <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, si nécessaire) séparément sur chaque thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7fca0-152">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="7fca0-153">Éviter un blocage.</span><span class="sxs-lookup"><span data-stu-id="7fca0-153">Avoid deadlock.</span></span>  <span data-ttu-id="7fca0-154">Il s’agit déjà responsabilité de l’application une fois qu’elle choisit d’utiliser la synchronisation, mais il doit également prendre en participation de WPF de compte dans la synchronisation, comme indiqué dans le paragraphe suivant.</span><span class="sxs-lookup"><span data-stu-id="7fca0-154">This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization, as discussed in the following paragraph.</span></span>

<span data-ttu-id="7fca0-155">En retour, WPF fournit le comportement suivant :</span><span class="sxs-lookup"><span data-stu-id="7fca0-155">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="7fca0-156">Le <xref:System.Windows.Data.CollectionView> accède à la collection à l’aide du mécanisme de synchronisation donnée.</span><span class="sxs-lookup"><span data-stu-id="7fca0-156">The <xref:System.Windows.Data.CollectionView> accesses the collection using the given synchronization mechanism.</span></span>

- <span data-ttu-id="7fca0-157">Le <xref:System.Windows.Data.CollectionView> conserve un « cliché instantané » de la collection pour une utilisation sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7fca0-157">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="7fca0-158"><xref:System.Windows.Data.CollectionView.CollectionChanged> les événements sont la file d’attente lorsqu’ils arrivent (sur n’importe quel thread).</span><span class="sxs-lookup"><span data-stu-id="7fca0-158"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="7fca0-159">Événements en attente sont appliquées à la copie miroir de façon asynchrone sur le thread d’interface utilisateur lorsqu’il a la possibilité de le faire.</span><span class="sxs-lookup"><span data-stu-id="7fca0-159">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="7fca0-160">Le <xref:System.Windows.Data.CollectionView> ne sera pas utiliser directement de tout autre mécanisme de synchronisation visible par l’application.</span><span class="sxs-lookup"><span data-stu-id="7fca0-160">The <xref:System.Windows.Data.CollectionView> won't directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="7fca0-161">Cela est meilleure de WPF pour éviter un blocage (voir l’élément précédent 7).</span><span class="sxs-lookup"><span data-stu-id="7fca0-161">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="7fca0-162">Le résultat est que vous pouvez modifier le regroupement sur n’importe quel thread, et ces modifications apparaissent dans le <xref:System.Windows.Controls.ItemsControl> lorsque le thread d’interface utilisateur a le temps « pour rester à jour ».</span><span class="sxs-lookup"><span data-stu-id="7fca0-162">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span>  <span data-ttu-id="7fca0-163">L’implémentation a été optimisée pour limiter le taux de flux de modifications dans le thread d’interface utilisateur pour conserver l’arrière-plan de threads de saturer le thread d’interface utilisateur et de priver de la réponse à l’entrée d’utilisateur normal.</span><span class="sxs-lookup"><span data-stu-id="7fca0-163">The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object lockObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object lockObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, lockObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ lockObject);" />
      <MemberSignature Language="F#" Value="static member EnableCollectionSynchronization : System.Collections.IEnumerable * obj -&gt; unit" Usage="System.Windows.Data.BindingOperations.EnableCollectionSynchronization (collection, lockObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="lockObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7fca0-164">Collection qui a besoin de l’accès synchronisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-164">The collection that needs synchronized access.</span>
          </span>
        </param>
        <param name="lockObject">
          <span data-ttu-id="7fca0-165">Objet à verrouiller lors de l’accès à la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-165">The object to lock when accessing the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-166">Permet à un objet <see cref="T:System.Windows.Data.CollectionView" /> de participer à un accès synchronisé à une collection utilisée sur plusieurs threads avec un mécanisme de verrouillage simple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-166">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a simple locking mechanism.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="7fca0-167">Une application WPF peut afficher une collection de données à l’aide un <xref:System.Windows.Controls.ItemsControl> ou une de ses sous-classes (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc..).</span><span class="sxs-lookup"><span data-stu-id="7fca0-167">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span> <span data-ttu-id="7fca0-168">WPF canaux tout son accès à la collection via une sous-classe de <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="7fca0-168">WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="7fca0-169">À la fois le <xref:System.Windows.Controls.ItemsControl> et <xref:System.Windows.Data.CollectionView> ont une affinité pour le thread sur lequel le <xref:System.Windows.Controls.ItemsControl> a été créé, ce qui signifie que leur utilisation sur un autre thread est interdite et lève une exception.</span><span class="sxs-lookup"><span data-stu-id="7fca0-169">Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span> <span data-ttu-id="7fca0-170">En effet, cette restriction s’applique à la collection.</span><span class="sxs-lookup"><span data-stu-id="7fca0-170">In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="7fca0-171">Voulez-vous utiliser la collection sur plusieurs threads.</span><span class="sxs-lookup"><span data-stu-id="7fca0-171">You may want to use the collection on multiple threads.</span></span>   <span data-ttu-id="7fca0-172">Par exemple, vous souhaitez mettre à jour de la collection (ajouter ou supprimer des éléments) sur un thread de « collecte des données », tout en affichant les résultats sur un thread « interface utilisateur », afin que l’interface utilisateur reste réactive lors de la collecte de données se produit.</span><span class="sxs-lookup"><span data-stu-id="7fca0-172">For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span> <span data-ttu-id="7fca0-173">Dans ce cas, vous êtes chargé de garantir l’accès (« thread-safe ») à la collection et pour garantir que l’accès à partir de WPF synchronisé (en particulier en <xref:System.Windows.Data.CollectionView>) est inclus dans le même mécanisme de synchronisation.</span><span class="sxs-lookup"><span data-stu-id="7fca0-173">In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span> <span data-ttu-id="7fca0-174">En appelant le <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> méthode, procéder à l’aide d’un mécanisme de verrouillage simple.</span><span class="sxs-lookup"><span data-stu-id="7fca0-174">By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> method, you can do this by using a simple lock mechanism.</span></span> 
 
<span data-ttu-id="7fca0-175">Pour utiliser un regroupement sur plusieurs threads, y compris le thread d’interface utilisateur qui détient le <xref:System.Windows.Controls.ItemsControl>, vous devez procédez comme suit :</span><span class="sxs-lookup"><span data-stu-id="7fca0-175">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="7fca0-176">Instanciez un objet à verrouiller lors de l’accès à la collection.</span><span class="sxs-lookup"><span data-stu-id="7fca0-176">Instantiate an object to lock when accessing the collection.</span></span>

1. <span data-ttu-id="7fca0-177">Synchroniser tous les accès à partir de l’application à la collection par un verrouillage de cet objet.</span><span class="sxs-lookup"><span data-stu-id="7fca0-177">Synchronize all access from the application to the collection by locking that object.</span></span>

1. <span data-ttu-id="7fca0-178">Appelez <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> pour informer WPF que vous utilisez un mécanisme de verrouillage simple.</span><span class="sxs-lookup"><span data-stu-id="7fca0-178">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> to inform WPF that you are using a simple lock mechanism.</span></span>

   - <span data-ttu-id="7fca0-179">L’appel doit se produire sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7fca0-179">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="7fca0-180">L’appel doit se produire avant l’utilisation de la collection sur un autre thread ou avant d’attacher la collection à le <xref:System.Windows.Controls.ItemsControl>, selon ce qui est plus loin.</span><span class="sxs-lookup"><span data-stu-id="7fca0-180">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="7fca0-181">Vérifiez qu’une modification apportée à la collection et la notification de modification (via <xref:System.Collections.Specialized.INotifyCollectionChanged>) sont atomique ; aucun accès à partir d’autres threads ne peuvent intervenir.</span><span class="sxs-lookup"><span data-stu-id="7fca0-181">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span>  <span data-ttu-id="7fca0-182">(Il s’agit généralement de libre.</span><span class="sxs-lookup"><span data-stu-id="7fca0-182">(This is usually free.</span></span> <span data-ttu-id="7fca0-183">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> , garantit à condition que toutes les modifications sont protégées par la synchronisation.)</span><span class="sxs-lookup"><span data-stu-id="7fca0-183">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="7fca0-184">Si vous appelez <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, qu’appel doit également se produire sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7fca0-184">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="7fca0-185">Si vous souhaitez utiliser la même collection sur plusieurs threads d’interface utilisateur, vous devez appeler <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (et <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, si nécessaire) séparément sur chaque thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7fca0-185">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="7fca0-186">Éviter un blocage.</span><span class="sxs-lookup"><span data-stu-id="7fca0-186">Avoid deadlock.</span></span>  <span data-ttu-id="7fca0-187">Il s’agit déjà responsabilité de l’application une fois qu’elle choisit d’utiliser la synchronisation, mais il doit également prendre en compte la participation de WPF dans la synchronisation.</span><span class="sxs-lookup"><span data-stu-id="7fca0-187">This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span> <span data-ttu-id="7fca0-188">(Voir plus d’informations, ci-dessous.)</span><span class="sxs-lookup"><span data-stu-id="7fca0-188">(See more, below.)</span></span>

<span data-ttu-id="7fca0-189">En retour, WPF fournit le comportement suivant :</span><span class="sxs-lookup"><span data-stu-id="7fca0-189">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="7fca0-190">Le <xref:System.Windows.Data.CollectionView> accède à la collection à l’aide du mécanisme de verrouillage.</span><span class="sxs-lookup"><span data-stu-id="7fca0-190">The <xref:System.Windows.Data.CollectionView> accesses the collection using the locking mechanism.</span></span>

- <span data-ttu-id="7fca0-191">Le <xref:System.Windows.Data.CollectionView> conserve un « cliché instantané » de la collection pour une utilisation sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7fca0-191">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="7fca0-192"><xref:System.Windows.Data.CollectionView.CollectionChanged> les événements sont la file d’attente lorsqu’ils arrivent (sur n’importe quel thread).</span><span class="sxs-lookup"><span data-stu-id="7fca0-192"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="7fca0-193">Événements en attente sont appliquées à la copie miroir de façon asynchrone sur le thread d’interface utilisateur lorsqu’il a la possibilité de le faire.</span><span class="sxs-lookup"><span data-stu-id="7fca0-193">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="7fca0-194">Le <xref:System.Windows.Data.CollectionView> n’utilisera pas directement tout autre mécanisme de synchronisation visible par l’application.</span><span class="sxs-lookup"><span data-stu-id="7fca0-194">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="7fca0-195">Cela est meilleure de WPF pour éviter un blocage (voir l’élément précédent 7).</span><span class="sxs-lookup"><span data-stu-id="7fca0-195">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="7fca0-196">Le résultat est que vous pouvez modifier le regroupement sur n’importe quel thread, et ces modifications apparaissent dans le <xref:System.Windows.Controls.ItemsControl> lorsque le thread d’interface utilisateur a le temps « pour rester à jour ».</span><span class="sxs-lookup"><span data-stu-id="7fca0-196">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span>  <span data-ttu-id="7fca0-197">L’implémentation a été optimisée pour limiter le taux de flux de modifications dans le thread d’interface utilisateur pour conserver l’arrière-plan de threads de saturer le thread d’interface utilisateur et de priver de la réponse à l’entrée d’utilisateur normal.</span><span class="sxs-lookup"><span data-stu-id="7fca0-197">The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object context, System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object context, class System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, context As Object, synchronizationCallback As CollectionSynchronizationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ context, System::Windows::Data::CollectionSynchronizationCallback ^ synchronizationCallback);" />
      <MemberSignature Language="F#" Value="static member EnableCollectionSynchronization : System.Collections.IEnumerable * obj * System.Windows.Data.CollectionSynchronizationCallback -&gt; unit" Usage="System.Windows.Data.BindingOperations.EnableCollectionSynchronization (collection, context, synchronizationCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="synchronizationCallback" Type="System.Windows.Data.CollectionSynchronizationCallback" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7fca0-198">Collection qui a besoin de l’accès synchronisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-198">The collection that needs synchronized access.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="7fca0-199">Objet qui est passé au rappel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-199">An object that is passed to the callback.</span>
          </span>
        </param>
        <param name="synchronizationCallback">
          <span data-ttu-id="7fca0-200">Rappel qui est appelé chaque fois que l’accès à la collection est nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-200">The callback that is invoked whenever access to the collection is required.</span>
          </span>
          <span data-ttu-id="7fca0-201">Vous pouvez l’utiliser pour garantir que la collection est accessible par un seul thread à la fois.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-201">You can use it to ensure that the collection is accessed by one thread at a time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-202">Permet à un objet <see cref="T:System.Windows.Data.CollectionView" /> de participer à un accès synchronisé à une collection utilisée sur plusieurs threads avec un mécanisme de verrouillage autre qu’un verrou simple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-202">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a mechanism other than a simple lock.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="7fca0-203">Une application WPF peut afficher une collection de données à l’aide un <xref:System.Windows.Controls.ItemsControl> ou une de ses sous-classes (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc..).</span><span class="sxs-lookup"><span data-stu-id="7fca0-203">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span> <span data-ttu-id="7fca0-204">WPF canaux tout son accès à la collection via une sous-classe de <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="7fca0-204">WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="7fca0-205">À la fois le <xref:System.Windows.Controls.ItemsControl> et <xref:System.Windows.Data.CollectionView> ont une affinité pour le thread sur lequel le <xref:System.Windows.Controls.ItemsControl> a été créé, ce qui signifie que leur utilisation sur un autre thread est interdite et lève une exception.</span><span class="sxs-lookup"><span data-stu-id="7fca0-205">Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span> <span data-ttu-id="7fca0-206">En effet, cette restriction s’applique à la collection.</span><span class="sxs-lookup"><span data-stu-id="7fca0-206">In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="7fca0-207">Voulez-vous utiliser la collection sur plusieurs threads.</span><span class="sxs-lookup"><span data-stu-id="7fca0-207">You may want to use the collection on multiple threads.</span></span>   <span data-ttu-id="7fca0-208">Par exemple, vous souhaitez mettre à jour de la collection (ajouter ou supprimer des éléments) sur un thread de « collecte des données », tout en affichant les résultats sur un thread « interface utilisateur », afin que l’interface utilisateur reste réactive lors de la collecte de données se produit.</span><span class="sxs-lookup"><span data-stu-id="7fca0-208">For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span> <span data-ttu-id="7fca0-209">Dans ce cas, vous êtes chargé de garantir l’accès (« thread-safe ») à la collection et pour garantir que l’accès à partir de WPF synchronisé (en particulier en <xref:System.Windows.Data.CollectionView>) est inclus dans le même mécanisme de synchronisation.</span><span class="sxs-lookup"><span data-stu-id="7fca0-209">In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span> <span data-ttu-id="7fca0-210">En appelant le <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> méthode, procéder à l’aide d’un mécanisme de synchronisation, par exemple un sémaphores, d’un événement de réinitialisation, etc..</span><span class="sxs-lookup"><span data-stu-id="7fca0-210">By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> method, you can do this by using a synchronization mechanism such as a semaphores, a reset event, etc.</span></span> 
 
<span data-ttu-id="7fca0-211">Pour utiliser un regroupement sur plusieurs threads, y compris le thread d’interface utilisateur qui détient le <xref:System.Windows.Controls.ItemsControl>, vous devez procédez comme suit :</span><span class="sxs-lookup"><span data-stu-id="7fca0-211">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="7fca0-212">Choisir un mécanisme de synchronisation.</span><span class="sxs-lookup"><span data-stu-id="7fca0-212">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="7fca0-213">Synchroniser tous les accès à partir de l’application à la collection à l’aide de ce mécanisme.</span><span class="sxs-lookup"><span data-stu-id="7fca0-213">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="7fca0-214">Appelez le <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> surcharge pour informer WPF que vous utilisez un mécanisme autre que la simple de verrouillage.</span><span class="sxs-lookup"><span data-stu-id="7fca0-214">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload to inform WPF that you are using a mechanism other than simple locking.</span></span>

   - <span data-ttu-id="7fca0-215">L’appel doit se produire sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7fca0-215">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="7fca0-216">L’appel doit se produire avant l’utilisation de la collection sur un autre thread ou avant d’attacher la collection à le <xref:System.Windows.Controls.ItemsControl>, selon ce qui est plus loin.</span><span class="sxs-lookup"><span data-stu-id="7fca0-216">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="7fca0-217">Vérifiez qu’une modification apportée à la collection et la notification de modification (via <xref:System.Collections.Specialized.INotifyCollectionChanged>) sont atomique ; aucun accès à partir d’autres threads ne peuvent intervenir.</span><span class="sxs-lookup"><span data-stu-id="7fca0-217">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span>  <span data-ttu-id="7fca0-218">(Il s’agit généralement de libre.</span><span class="sxs-lookup"><span data-stu-id="7fca0-218">(This is usually free.</span></span> <span data-ttu-id="7fca0-219">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> , garantit à condition que toutes les modifications sont protégées par la synchronisation.)</span><span class="sxs-lookup"><span data-stu-id="7fca0-219">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="7fca0-220">Si vous appelez <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, qu’appel doit également se produire sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7fca0-220">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="7fca0-221">Si vous souhaitez utiliser la même collection sur plusieurs threads d’interface utilisateur, vous devez appeler <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (et <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, si nécessaire) séparément sur chaque thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7fca0-221">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="7fca0-222">Éviter un blocage.</span><span class="sxs-lookup"><span data-stu-id="7fca0-222">Avoid deadlock.</span></span>  <span data-ttu-id="7fca0-223">Il s’agit déjà responsabilité de l’application une fois qu’elle choisit d’utiliser la synchronisation, mais il doit également prendre en compte la participation de WPF dans la synchronisation.</span><span class="sxs-lookup"><span data-stu-id="7fca0-223">This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span> <span data-ttu-id="7fca0-224">(Voir plus d’informations, ci-dessous.)</span><span class="sxs-lookup"><span data-stu-id="7fca0-224">(See more, below.)</span></span>

<span data-ttu-id="7fca0-225">En retour, WPF fournit le comportement suivant :</span><span class="sxs-lookup"><span data-stu-id="7fca0-225">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="7fca0-226">Le <xref:System.Windows.Data.CollectionView> accède à la collection en appelant inscrit <xref:System.Windows.Data.CollectionSynchronizationCallback> avec les arguments suivants :</span><span class="sxs-lookup"><span data-stu-id="7fca0-226">The <xref:System.Windows.Data.CollectionView> accesses the collection by calling the registered <xref:System.Windows.Data.CollectionSynchronizationCallback> with the following arguments:</span></span>

   - <span data-ttu-id="7fca0-227">`collection`: la collection d’intérêt.</span><span class="sxs-lookup"><span data-stu-id="7fca0-227">`collection`: the collection of interest.</span></span>
   - <span data-ttu-id="7fca0-228">`context`: l’objet de contexte inscrit.</span><span class="sxs-lookup"><span data-stu-id="7fca0-228">`context`: the registered context object.</span></span>
   - <span data-ttu-id="7fca0-229">`accessMethod`: un délégué qui effectue l’accès réel.</span><span class="sxs-lookup"><span data-stu-id="7fca0-229">`accessMethod`: a delegate that performs the actual access.</span></span>
   - <span data-ttu-id="7fca0-230">`writeAccess`: `true` si le délégué modifiera la collection ; `false` dans le cas contraire.</span><span class="sxs-lookup"><span data-stu-id="7fca0-230">`writeAccess`: `true` if the delegate will modify the collection; `false` otherwise.</span></span>

   <span data-ttu-id="7fca0-231">Votre <xref:System.Windows.Data.CollectionSynchronizationCallback> doit établir une synchronisation sur la collection (à l’aide de la `context` objet et la `writeAccess` valeur, selon le cas), appeler le `accessMethod`, puis relâchez la synchronisation.</span><span class="sxs-lookup"><span data-stu-id="7fca0-231">Your <xref:System.Windows.Data.CollectionSynchronizationCallback> should establish synchronization on the collection (using the `context` object and the `writeAccess` value, as appropriate), call the `accessMethod`, then release synchronization.</span></span>

- <span data-ttu-id="7fca0-232">Le <xref:System.Windows.Data.CollectionView> conserve un « cliché instantané » de la collection pour une utilisation sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7fca0-232">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="7fca0-233"><xref:System.Windows.Data.CollectionView.CollectionChanged> les événements sont la file d’attente lorsqu’ils arrivent (sur n’importe quel thread).</span><span class="sxs-lookup"><span data-stu-id="7fca0-233"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="7fca0-234">Événements en attente sont appliquées à la copie miroir de façon asynchrone sur le thread d’interface utilisateur lorsqu’il a la possibilité de le faire.</span><span class="sxs-lookup"><span data-stu-id="7fca0-234">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="7fca0-235">Le <xref:System.Windows.Data.CollectionView> n’utilisera pas directement tout autre mécanisme de synchronisation visible par l’application.</span><span class="sxs-lookup"><span data-stu-id="7fca0-235">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="7fca0-236">Cela est meilleure de WPF pour éviter un blocage (voir l’élément précédent 7).</span><span class="sxs-lookup"><span data-stu-id="7fca0-236">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="7fca0-237">Le résultat est que vous pouvez modifier le regroupement sur n’importe quel thread, et ces modifications apparaissent dans le <xref:System.Windows.Controls.ItemsControl> lorsque le thread d’interface utilisateur a le temps « pour rester à jour ».</span><span class="sxs-lookup"><span data-stu-id="7fca0-237">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span>  <span data-ttu-id="7fca0-238">L’implémentation a été optimisée pour limiter le taux de flux de modifications dans le thread d’interface utilisateur pour conserver l’arrière-plan de threads de saturer le thread d’interface utilisateur et de priver de la réponse à l’entrée d’utilisateur normal.</span><span class="sxs-lookup"><span data-stu-id="7fca0-238">The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 <span data-ttu-id="7fca0-239">Le `context` paramètre est un objet arbitraire qui est transmis à la `callback`.</span><span class="sxs-lookup"><span data-stu-id="7fca0-239">The `context` parameter is an arbitrary object that is passed to the `callback`.</span></span> <span data-ttu-id="7fca0-240">Vous pouvez l’utiliser pour déterminer le mécanisme de synchronisation utilisé pour contrôler l’accès à `collection`.</span><span class="sxs-lookup"><span data-stu-id="7fca0-240">You can use it to determine the synchronization mechanism used to control access to `collection`.</span></span> <span data-ttu-id="7fca0-241">`Context` peut être `null`.</span><span class="sxs-lookup"><span data-stu-id="7fca0-241">`Context` can be `null`.</span></span>  
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.Binding GetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.Binding GetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBinding (target As DependencyObject, dp As DependencyProperty) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::Binding ^ GetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.Binding" Usage="System.Windows.Data.BindingOperations.GetBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="7fca0-242">Objet où se trouve <c>dp</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-242">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="7fca0-243">Propriété de cible de liaison à partir de laquelle récupérer la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-243">The binding target property from which to retrieve the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-244">Récupère l'objet <see cref="T:System.Windows.Data.Binding" /> défini sur la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-244">Retrieves the <see cref="T:System.Windows.Data.Binding" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7fca0-245">Objet <see cref="T:System.Windows.Data.Binding" /> défini sur la propriété donnée ou <see langword="null" /> si aucun objet <see cref="T:System.Windows.Data.Binding" /> n'a été défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-245">The <see cref="T:System.Windows.Data.Binding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.Binding" /> object has been set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fca0-246">Les paramètres <paramref name="target" /> et <paramref name="dp" /> ne peuvent pas être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-246">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingBase GetBindingBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingBase GetBindingBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingBase (target As DependencyObject, dp As DependencyProperty) As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingBase ^ GetBindingBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingBase : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingBase" Usage="System.Windows.Data.BindingOperations.GetBindingBase (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="7fca0-247">Objet où se trouve <c>dp</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-247">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="7fca0-248">Propriété de la cible de liaison à partir de laquelle récupérer l'objet <see cref="T:System.Windows.Data.BindingBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-248">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingBase" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-249">Récupère l'objet <see cref="T:System.Windows.Data.BindingBase" /> défini sur la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-249">Retrieves the <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7fca0-250">Objet <see cref="T:System.Windows.Data.BindingBase" /> défini sur la propriété donnée ou <see langword="null" /> si aucun objet de liaison n'a été défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-250">The <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fca0-251">Le <xref:System.Windows.Data.BindingBase> classe est la classe de base commune pour les <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, et <xref:System.Windows.Data.MultiBinding> classes.</span><span class="sxs-lookup"><span data-stu-id="7fca0-251">The <xref:System.Windows.Data.BindingBase> class is the common base class for the <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, and <xref:System.Windows.Data.MultiBinding> classes.</span></span> <span data-ttu-id="7fca0-252">Vous pouvez utiliser la <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>, et <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A> méthodes si vous connaissez à l’avance le type de liaison qui est définissent sur la propriété.</span><span class="sxs-lookup"><span data-stu-id="7fca0-252">You can use the <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A> methods if you know in advance the type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fca0-253">Les paramètres <paramref name="target" /> et <paramref name="dp" /> ne peuvent pas avoir la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-253">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpression (target As DependencyObject, dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpression" Usage="System.Windows.Data.BindingOperations.GetBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="7fca0-254">Objet cible de liaison où se trouve <c>dp</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-254">The binding target object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="7fca0-255">Propriété de la cible de liaison à partir de laquelle récupérer l'objet <see cref="T:System.Windows.Data.BindingExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-255">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpression" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-256">Retourne l'objet <see cref="T:System.Windows.Data.BindingExpression" /> associé à la propriété de cible de liaison spécifiée sur l'objet donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-256">Returns the <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the specified binding target property on the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7fca0-257">Objet <see cref="T:System.Windows.Data.BindingExpression" /> associé à la propriété donnée ou <see langword="null" /> si aucun objet n'existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-257">The <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span>
          </span>
          <span data-ttu-id="7fca0-258">Si un objet <see cref="T:System.Windows.Data.PriorityBindingExpression" /> est défini sur la propriété, <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> est retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-258">If a <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object is set on the property, the <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fca0-259">Le <xref:System.Windows.Data.BindingExpression> objet gère la connexion entre la source de liaison et la cible de liaison.</span><span class="sxs-lookup"><span data-stu-id="7fca0-259">The <xref:System.Windows.Data.BindingExpression> object maintains the connection between the binding source and the binding target.</span></span> <span data-ttu-id="7fca0-260">Vous pouvez obtenir le <xref:System.Windows.Data.BindingExpression> objet en appelant cette méthode statique ou en appelant le <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> méthode sur une limite de données <xref:System.Windows.FrameworkElement> ou <xref:System.Windows.FrameworkContentElement> objet.</span><span class="sxs-lookup"><span data-stu-id="7fca0-260">You can obtain the <xref:System.Windows.Data.BindingExpression> object by calling this static method or by calling the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fca0-261">L’exemple suivant illustre l’implémentation d’un <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Gestionnaire d’événements qui utilise le <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> méthode pour obtenir le <xref:System.Windows.Data.BindingExpression> , puis appelle la <xref:System.Windows.Data.BindingExpression.DataItem%2A> propriété accéder à l’objet de source de liaison.</span><span class="sxs-lookup"><span data-stu-id="7fca0-261">The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the <xref:System.Windows.Data.BindingExpression.DataItem%2A> property to access the binding source object.</span></span>  
  
 <span data-ttu-id="7fca0-262">Le <xref:System.Windows.Controls.TextBlock> `SavingsText` est l’objet cible de liaison et <xref:System.Windows.Controls.TextBlock.Text%2A> est la propriété de cible de liaison.</span><span class="sxs-lookup"><span data-stu-id="7fca0-262">The <xref:System.Windows.Controls.TextBlock>`SavingsText` is the binding target object and <xref:System.Windows.Controls.TextBlock.Text%2A> is the binding target property.</span></span>  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fca0-263">Les paramètres <paramref name="target" /> et <paramref name="dp" /> ne peuvent pas avoir la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-263">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpressionBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase GetBindingExpressionBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase GetBindingExpressionBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpressionBase (target As DependencyObject, dp As DependencyProperty) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ GetBindingExpressionBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingExpressionBase : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpressionBase" Usage="System.Windows.Data.BindingOperations.GetBindingExpressionBase (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="7fca0-264">Objet où se trouve <c>dp</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-264">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="7fca0-265">Propriété de la cible de liaison à partir de laquelle récupérer l'objet <see cref="T:System.Windows.Data.BindingExpressionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-265">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-266">Récupère l'objet <see cref="T:System.Windows.Data.BindingExpressionBase" /> défini sur la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-266">Retrieves the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7fca0-267">Objet <see cref="T:System.Windows.Data.BindingExpressionBase" /> défini sur la propriété donnée ou <see langword="null" /> si aucun objet de liaison n'a été défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-267">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fca0-268">Le <xref:System.Windows.Data.BindingExpressionBase> classe est la classe de base commune pour les <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>, et <xref:System.Windows.Data.MultiBindingExpression> classes.</span><span class="sxs-lookup"><span data-stu-id="7fca0-268">The <xref:System.Windows.Data.BindingExpressionBase> class is the common base class for the <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>, and <xref:System.Windows.Data.MultiBindingExpression> classes.</span></span> <span data-ttu-id="7fca0-269">Vous pouvez utiliser la <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>, et <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A> méthodes si vous connaissez à l’avance le type de liaison est définie sur la propriété.</span><span class="sxs-lookup"><span data-stu-id="7fca0-269">You can use the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A> methods if you know in advance type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fca0-270">Les paramètres <paramref name="target" /> et <paramref name="dp" /> ne peuvent pas être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-270">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBinding GetMultiBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBinding GetMultiBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBinding (target As DependencyObject, dp As DependencyProperty) As MultiBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBinding ^ GetMultiBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetMultiBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.MultiBinding" Usage="System.Windows.Data.BindingOperations.GetMultiBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="7fca0-271">Objet où se trouve <c>dp</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-271">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="7fca0-272">Propriété de cible de liaison à partir de laquelle récupérer la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-272">The binding target property from which to retrieve the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-273">Récupère l'objet <see cref="T:System.Windows.Data.MultiBinding" /> défini sur la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-273">Retrieves the <see cref="T:System.Windows.Data.MultiBinding" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7fca0-274">Objet <see cref="T:System.Windows.Data.MultiBinding" /> défini sur la propriété donnée ou <see langword="null" /> si aucun objet <see cref="T:System.Windows.Data.MultiBinding" /> n'a été défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-274">The <see cref="T:System.Windows.Data.MultiBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.MultiBinding" /> object has been set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fca0-275">Les paramètres <paramref name="target" /> et <paramref name="dp" /> ne peuvent pas être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-275">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBindingExpression GetMultiBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBindingExpression GetMultiBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBindingExpression (target As DependencyObject, dp As DependencyProperty) As MultiBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBindingExpression ^ GetMultiBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetMultiBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.MultiBindingExpression" Usage="System.Windows.Data.BindingOperations.GetMultiBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="7fca0-276">Objet cible de liaison où se trouve <c>dp</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-276">The binding target object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="7fca0-277">Propriété de la cible de liaison à partir de laquelle récupérer l'objet <see cref="T:System.Windows.Data.MultiBindingExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-277">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-278">Retourne l'objet <see cref="T:System.Windows.Data.MultiBindingExpression" /> associé à la propriété de cible de liaison spécifiée sur l'objet donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-278">Returns the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the specified binding target property on the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7fca0-279">Objet <see cref="T:System.Windows.Data.MultiBindingExpression" /> associé à la propriété donnée ou <see langword="null" /> si aucun objet n'existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-279">The <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fca0-280">Objet <xref:System.Windows.Data.MultiBindingExpression> associé à la propriété donnée ou `null` si aucun objet n'existe.</span><span class="sxs-lookup"><span data-stu-id="7fca0-280">The <xref:System.Windows.Data.MultiBindingExpression> object associated with the given property or `null` if none exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fca0-281">Les paramètres <paramref name="target" /> et <paramref name="dp" /> ne peuvent pas avoir la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-281">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBinding GetPriorityBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBinding GetPriorityBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBinding (target As DependencyObject, dp As DependencyProperty) As PriorityBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBinding ^ GetPriorityBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetPriorityBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.PriorityBinding" Usage="System.Windows.Data.BindingOperations.GetPriorityBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="7fca0-282">Objet où se trouve <c>dp</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-282">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="7fca0-283">Propriété de cible de liaison à partir de laquelle récupérer la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-283">The binding target property from which to retrieve the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-284">Récupère l'objet <see cref="T:System.Windows.Data.PriorityBinding" /> défini sur la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-284">Retrieves the <see cref="T:System.Windows.Data.PriorityBinding" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7fca0-285">Objet <see cref="T:System.Windows.Data.PriorityBinding" /> défini sur la propriété donnée ou <see langword="null" /> si aucun objet <see cref="T:System.Windows.Data.PriorityBinding" /> n'a été défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-285">The <see cref="T:System.Windows.Data.PriorityBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.PriorityBinding" /> object has been set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fca0-286">Les paramètres <paramref name="target" /> et <paramref name="dp" /> ne peuvent pas être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-286">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBindingExpression (target As DependencyObject, dp As DependencyProperty) As PriorityBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBindingExpression ^ GetPriorityBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetPriorityBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.PriorityBindingExpression" Usage="System.Windows.Data.BindingOperations.GetPriorityBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="7fca0-287">Objet cible de liaison où se trouve <c>dp</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-287">The binding target object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="7fca0-288">Propriété de la cible de liaison à partir de laquelle récupérer l'objet <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-288">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-289">Retourne l'objet <see cref="T:System.Windows.Data.PriorityBindingExpression" /> associé à la propriété de cible de liaison spécifiée sur l'objet donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-289">Returns the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the specified binding target property on the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7fca0-290">Objet <see cref="T:System.Windows.Data.PriorityBindingExpression" /> associé à la propriété donnée ou <see langword="null" /> si aucun objet n'existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-290">The <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fca0-291">Les paramètres <paramref name="target" /> et <paramref name="dp" /> ne peuvent pas avoir la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-291">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindingGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindingGroups (root As DependencyObject) As ReadOnlyCollection(Of BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingGroup ^&gt; ^ GetSourceUpdatingBindingGroups(System::Windows::DependencyObject ^ root);" />
      <MemberSignature Language="F#" Value="static member GetSourceUpdatingBindingGroups : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;" Usage="System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="root">
          <span data-ttu-id="7fca0-292">Élément <see cref="T:System.Windows.UIElement" /> racine pour lequel obtenir les groupes de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-292">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span>
          </span>
          <span data-ttu-id="7fca0-293">Cette méthode retourne les objets <see cref="T:System.Windows.Data.BindingGroup" /> associés à cet élément ou ses éléments descendants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-293">This method returns <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with this element or its descendant elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-294">Obtient tous les objets <see cref="T:System.Windows.Data.BindingGroup" /> qui ont des valeurs non valides ou des valeurs cibles n'ont pas mis à jour la source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-294">Gets all <see cref="T:System.Windows.Data.BindingGroup" /> objects that have invalid values or target values have not been updated the source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7fca0-295">Collection d'objets <see cref="T:System.Windows.Data.BindingGroup" /> qui sont associés à l'élément spécifié et qui ont des valeurs non valides ou des valeurs cibles qui n'ont pas été mises à jour à la source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-295">A collection of <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fca0-296">Si `root` est `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> retourne tous les <xref:System.Windows.Data.BindingGroup> des objets qui ne sont pas valides ou n’ont pas été mis à jour.</span><span class="sxs-lookup"><span data-stu-id="7fca0-296">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> returns all <xref:System.Windows.Data.BindingGroup> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindings">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindings (root As DependencyObject) As ReadOnlyCollection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ GetSourceUpdatingBindings(System::Windows::DependencyObject ^ root);" />
      <MemberSignature Language="F#" Value="static member GetSourceUpdatingBindings : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingOperations.GetSourceUpdatingBindings root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="root">
          <span data-ttu-id="7fca0-297">Élément <see cref="T:System.Windows.UIElement" /> racine pour lequel obtenir les groupes de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-297">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span>
          </span>
          <span data-ttu-id="7fca0-298">Cette méthode retourne les objets <see cref="T:System.Windows.Data.BindingExpressionBase" /> associés à cet élément ou ses éléments descendants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-298">This method returns <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with this element or its descendant elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-299">Obtient tous les objets <see cref="T:System.Windows.Data.BindingExpressionBase" /> qui ont des valeurs non valides ou des valeurs cibles n'ont pas mis à jour la source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-299">Gets all <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that have invalid values or target values have not been updated the source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7fca0-300">Collection d'objets <see cref="T:System.Windows.Data.BindingExpressionBase" /> qui sont associés à l'élément spécifié et qui ont des valeurs non valides ou des valeurs cibles qui n'ont pas été mises à jour à la source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-300">A collection of <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fca0-301">Si `root` est `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> retourne tous les <xref:System.Windows.Data.BindingExpressionBase> des objets qui ne sont pas valides ou n’ont pas été mis à jour.</span><span class="sxs-lookup"><span data-stu-id="7fca0-301">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> returns all <xref:System.Windows.Data.BindingExpressionBase> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataBound">
      <MemberSignature Language="C#" Value="public static bool IsDataBound (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDataBound(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDataBound (target As DependencyObject, dp As DependencyProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDataBound(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member IsDataBound : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.Data.BindingOperations.IsDataBound (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="7fca0-302">Objet où se trouve <c>dp</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-302">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="7fca0-303">Propriété de dépendance à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-303">The dependency property to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-304">Retourne une valeur qui indique si la propriété spécifiée est actuellement liée aux données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-304">Returns a value that indicates whether the specified property is currently data-bound.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7fca0-305">
            <see langword="true" /> si la propriété spécifiée est liée aux données ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-305">
              <see langword="true" /> if the specified property is data-bound; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fca0-306">Si <paramref name="target" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-306">If <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetBinding (target As DependencyObject, dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberSignature Language="F#" Value="static member SetBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty * System.Windows.Data.BindingBase -&gt; System.Windows.Data.BindingExpressionBase" Usage="System.Windows.Data.BindingOperations.SetBinding (target, dp, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="7fca0-307">Cible de liaison de la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-307">The binding target of the binding.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="7fca0-308">Propriété cible de la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-308">The target property of the binding.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="7fca0-309">Objet <see cref="T:System.Windows.Data.BindingBase" /> qui décrit la liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-309">The <see cref="T:System.Windows.Data.BindingBase" /> object that describes the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7fca0-310">Crée et associe une instance de <see cref="T:System.Windows.Data.BindingExpressionBase" /> à la propriété de cible de liaison spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-310">Creates and associates a new instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> with the specified binding target property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7fca0-311">Instance de <see cref="T:System.Windows.Data.BindingExpressionBase" /> créée pour la propriété spécifiée et associée à celle-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-311">The instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> created for and associated with the specified property.</span>
          </span>
          <span data-ttu-id="7fca0-312">La classe <see cref="T:System.Windows.Data.BindingExpressionBase" /> est la classe de base de <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" /> et <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-312">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> class is the base class of <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" />, and <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fca0-313">Cette méthode crée une instance d’un <xref:System.Windows.Data.BindingExpressionBase> et associe l’instance à la propriété de dépendance donnée de l’objet donné.</span><span class="sxs-lookup"><span data-stu-id="7fca0-313">This method creates a new instance of a <xref:System.Windows.Data.BindingExpressionBase> and associates the instance with the given dependency property of the given object.</span></span> <span data-ttu-id="7fca0-314">Cette méthode est la façon de joindre une liaison à un élément arbitraire <xref:System.Windows.DependencyObject> qui ne peut pas exposer sa propre méthode SetBinding.</span><span class="sxs-lookup"><span data-stu-id="7fca0-314">This method is the way to attach a binding to an arbitrary <xref:System.Windows.DependencyObject> that may not expose its own SetBinding method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fca0-315">L’exemple suivant montre comment utiliser cette méthode pour définir une liaison.</span><span class="sxs-lookup"><span data-stu-id="7fca0-315">The following example shows how to use this method to set a binding.</span></span> <span data-ttu-id="7fca0-316">Dans cet exemple, `myNewBindDef` est un <xref:System.Windows.Data.Binding> objet qui décrit la liaison.</span><span class="sxs-lookup"><span data-stu-id="7fca0-316">In this example, `myNewBindDef` is a <xref:System.Windows.Data.Binding> object that describes the binding.</span></span> <span data-ttu-id="7fca0-317">La cible de liaison est `myDateText`, une instance de la <xref:System.Windows.Controls.TextBlock> classe.</span><span class="sxs-lookup"><span data-stu-id="7fca0-317">The binding target is `myDateText`, an instance of the <xref:System.Windows.Controls.TextBlock> class.</span></span>  
  
 [!code-csharp[BindConversion#BOSetBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#bosetbinding)]
 [!code-vb[BindConversion#BOSetBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#bosetbinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fca0-318">Le paramètre <paramref name="binding" /> ne peut pas avoir la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7fca0-318">The <paramref name="binding" /> parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>