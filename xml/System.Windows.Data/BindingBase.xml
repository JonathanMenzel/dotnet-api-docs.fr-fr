<Type Name="BindingBase" FullName="System.Windows.Data.BindingBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16b2ad519a66da27fad56d6b69c93a0c477b1407" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48755343" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BindingBase : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingBase extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingBase&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingBase abstract : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type BindingBase = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Définit les caractéristiques communes des classes <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.PriorityBinding" /> et <see cref="T:System.Windows.Data.MultiBinding" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que le <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> la méthode est sealed, une classe de liaison personnalisée qui dérive de <xref:System.Windows.Data.BindingBase> ne fonctionnera pas correctement en tant qu’un [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] extension de balisage.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroupName">
      <MemberSignature Language="C#" Value="public string BindingGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroupName : string with get, set" Usage="System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du <see cref="T:System.Windows.Data.BindingGroup" /> auquel appartient cette liaison.</summary>
        <value>Nom du <see cref="T:System.Windows.Data.BindingGroup" /> auquel appartient cette liaison.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> n’est pas défini, la liaison appartient à un <xref:System.Windows.Data.BindingGroup> uniquement si source de la liaison et le <xref:System.Windows.FrameworkElement.DataContext%2A> de l’élément parent qui a le <xref:System.Windows.Data.BindingGroup> correspondent au même objet.  
  
 Si <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> est définie sur une valeur, la liaison appartient à un <xref:System.Windows.Data.BindingGroup> si les conditions suivantes sont remplies :  
  
-   Le <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.Data.BindingGroup> et <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> sont égaux.  
  
-   Le <xref:System.Windows.Data.BindingGroup> appartient à un élément parent de l’élément de cible de la liaison.  
  
 Si <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> a la valeur `null`, la liaison n’est jamais une partie d’un <xref:System.Windows.Data.BindingGroup>.  
  
 Vous pouvez inclure des liaisons qui ont une source différente de la <xref:System.Windows.FrameworkElement.DataContext%2A> de l’élément parent qui a le <xref:System.Windows.Data.BindingGroup> en définissant <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.Data.BindingGroup> et <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> propriété d’une liaison à la même valeur.  Vous pouvez exclure des liaisons qui ont la même source que <xref:System.Windows.FrameworkElement.DataContext%2A> de l’élément parent qui a le <xref:System.Windows.Data.BindingGroup> en définissant <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.Data.BindingGroup> et <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> propriété d’une liaison à des valeurs différentes.  
  
   
  
## Examples  
 Les exemples suivants font partie d’une application qui vérifie si l’utilisateur a défini les propriétés de deux objets de valeurs identiques. Le premier exemple crée deux <xref:System.Windows.Controls.TextBox> contrôles, chacun d’eux est liées à une autre source de données : la liaison du premier <xref:System.Windows.Controls.TextBox> fait partie de la <xref:System.Windows.Data.BindingGroup> , car le <xref:System.Windows.Controls.TextBox> hérite le <xref:System.Windows.FrameworkElement.DataContext%2A> et <xref:System.Windows.Data.BindingGroup> à partir de son parent <xref:System.Windows.Controls.StackPanel>  
  
 La liaison sur le deuxième <xref:System.Windows.Controls.TextBox> fait partie de la <xref:System.Windows.Data.BindingGroup> , car le <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.Data.BindingGroup> et le <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> de la <xref:System.Windows.Data.Binding> sont toutes deux définies sur `bindingGroup`.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 L’exemple suivant montre le <xref:System.Windows.Controls.ValidationRule> qui utilise l’exemple précédent.  Dans le <xref:System.Windows.Controls.ValidationRule.Validate%2A> (méthode), l’exemple obtient chaque objet source à partir de la <xref:System.Windows.Data.BindingGroup> et vérifie si les propriétés des objets sont égale.  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.Delay" />
      <MemberSignature Language="VB.NET" Value="Public Property Delay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Delay : int with get, set" Usage="System.Windows.Data.BindingBase.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée d'attente, en millisecondes, avant de mettre à jour la source de liaison après le changement de la valeur sur les cibles.</summary>
        <value>Durée d'attente, en millisecondes, avant la mise à jour de la source de liaison.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous utilisez une liaison pour mettre à jour la source de liaison chaque fois que la valeur de la propriété change sur la cible, vous définissez le <xref:System.Windows.Data.Binding.Mode%2A> propriété <xref:System.Windows.Data.BindingMode.TwoWay> et <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> à <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.  Dans ce cas, vous pouvez utiliser le <xref:System.Windows.Data.BindingBase.Delay%2A> propriété pour spécifier si il doit y avoir un délai entre lorsque la cible est modifiée et lorsque la source est mise à jour.  Cela est utile lorsque vous souhaitez permettre aux utilisateurs de modifier une propriété sur un objet source, mais vous ne souhaitez pas chaque modification afin d’être validée immédiatement à la source.  Par exemple, supposons que vous disposez d’une zone de texte qui est liée à une propriété d’un objet de données bidirectionnelle de données.  Lorsque l’utilisateur modifie la valeur dans la zone de texte, la source est mis à jour.  Pour activer ce scénario, vous définissez le <xref:System.Windows.Data.Binding.Mode%2A> propriété sur le <xref:System.Windows.Data.Binding> à <xref:System.Windows.Data.BindingMode.TwoWay> et <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> à <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.  Pour éviter la mise à jour de l’objet source avec chaque frappe au clavier, définissez le <xref:System.Windows.Data.BindingBase.Delay%2A> propriété sur une valeur raisonnable pour provoquer la liaison à mettre à jour uniquement après ce laps de temps écoulé, l’utilisateur a arrêté la taper.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackValue">
      <MemberSignature Language="C#" Value="public object FallbackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FallbackValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.FallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Property FallbackValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FallbackValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackValue : obj with get, set" Usage="System.Windows.Data.BindingBase.FallbackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur à utiliser quand la liaison ne peut pas retourner une valeur.</summary>
        <value>La valeur par défaut est <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une liaison retourne une valeur avec succès si :  
  
1.  Le chemin d’accès à la source de liaison a été résolu avec succès.  
  
2.  Le convertisseur de valeur, le cas échéant, est en mesure de convertir la valeur résultante.  
  
3.  La valeur résultante est valide pour la propriété target (cible) de liaison.  
  
 Si 1 et 2 retournent <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>, la propriété cible est définie à la valeur de la <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, s’il est disponible. S’il existe aucune <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, la valeur par défaut de la propriété cible est utilisée.  
  
 La valeur <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> n’est pas considéré comme une valeur de retournée avec succès.  
  
<a name="xamlTextUsage_FallbackValue"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
  
```  
<object FallbackValue="fallbackValue" />  
```  
  
 **- ou -**  
  
```  
<object>  
  <object.FallbackValue>  
    fallbackValue  
    </object.FallbackValue>  
</object>  
```  
  
<a name="xamlValues_FallbackValue"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *fallbackValue*  
 Un attribut ou objet de valeur de l’élément du même type que la propriété cible. Consultez la documentation de ce type d’informations sur l’utilisation XAML. Ce type peut ou peut ne prend pas en charge la syntaxe d’attribut pour ses valeurs, ou peut ou peut prend pas en charge la syntaxe d’élément objet (qui nécessite un constructeur par défaut sur ce type). Le type de propriété cible influence par conséquent la syntaxe que vous utilisez pour la valeur de la <xref:System.Windows.Data.BindingBase.FallbackValue%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override sealed object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="bindingBase.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Objet qui peut fournir des services pour l’extension de balisage. Peut être <see langword="null" /> ;</param>
        <summary>Retourne un objet qui doit être défini sur la propriété où cette liaison et cette extension sont appliquées.</summary>
        <returns>Valeur à définir sur la propriété de cible de liaison.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette implémentation fournit la prise en charge de la syntaxe de base pour une liaison via [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] pour toutes les classes dérivées pratiques fournies (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, et <xref:System.Windows.Data.MultiBinding>).  
  
 Le <xref:System.Windows.Data.BindingBase> implémentation de la classe de cette méthode est supposée retourner un objet d’expression qui est le résultat d’une liaison. Liaison d’une propriété fonctionne en ciblant une donnée <xref:System.Windows.DependencyProperty> sur une donnée <xref:System.Windows.DependencyObject>. Ces deux informations est transmises en demandant une <xref:System.Windows.Markup.IProvideValueTarget> implémentation sur le `serviceProvider`, qui le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] lecteur rend disponible lors de l’analyse d’une liaison. Cette implémentation de classe de base est chargée de vérifier pour valide <xref:System.Windows.DependencyProperty> et <xref:System.Windows.DependencyObject>. S’ils sont trouvés, l’implémentation réelle de retourner une expression de liaison se situe à différentes classes dérivées, comme l’implémentation inclut l’appel de la classe de base une méthode abstraite interne. Sinon, l’extension retourne l’objet de liaison lui-même. Retourner la liaison elle-même provoque une erreur d’incompatibilité de type, mais cela ne doit pas se produire dans des circonstances normales.  
  
> [!IMPORTANT]
>  Étant donné que la syntaxe pour une liaison via [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] tel qu’implémenté dans cette méthode s’appuie sur l’implémentation d’une substitution interne et parce que <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> est lui-même sealed, une classe de liaison personnalisée qui dérive de <xref:System.Windows.Data.BindingBase> ne fonctionnera pas correctement en tant qu’un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] extension de balisage.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFallbackValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeFallbackValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeFallbackValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeFallbackValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeFallbackValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeFallbackValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeFallbackValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une valeur qui indique si les processus de sérialisation doivent sérialiser la valeur effective de la propriété <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> sur les instances de cette classe.</summary>
        <returns>
          <see langword="true" /> si la valeur de la propriété <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> doit être sérialisée ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTargetNullValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTargetNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTargetNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTargetNullValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTargetNullValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTargetNullValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeTargetNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une valeur qui indique si la propriété <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> doit être sérialisée.</summary>
        <returns>
          <see langword="true" /> si la propriété <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> doit être sérialisée ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public string StringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property StringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StringFormat : string with get, set" Usage="System.Windows.Data.BindingBase.StringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne qui spécifie comment mettre en forme la liaison si elle affiche la valeur liée en tant que chaîne.</summary>
        <value>Chaîne qui spécifie comment mettre en forme la liaison si elle affiche la valeur liée en tant que chaîne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingBase.StringFormat%2A> peut être un format de chaîne prédéfini, composite ou personnalisé. Pour plus d’informations sur les formats de chaîne, consultez [mise en forme des Types](~/docs/standard/base-types/formatting-types.md).  
  
 Si vous définissez la <xref:System.Windows.Data.Binding.Converter%2A> et <xref:System.Windows.Data.BindingBase.StringFormat%2A> propriétés, le convertisseur est appliqué en premier, à la valeur de données, puis le <xref:System.Windows.Data.BindingBase.StringFormat%2A> est appliqué.  
  
 Lorsque vous définissez la <xref:System.Windows.Data.BindingBase.StringFormat%2A> sur un <xref:System.Windows.Data.Binding> dans un format de chaîne composite, vous pouvez spécifier qu’un seul paramètre.  
  
 Lorsque vous utilisez un <xref:System.Windows.Data.MultiBinding>, le <xref:System.Windows.Data.BindingBase.StringFormat%2A> propriété s’applique uniquement si elle est définie sur le <xref:System.Windows.Data.MultiBinding>.  La valeur de <xref:System.Windows.Data.BindingBase.StringFormat%2A> qui est définie sur n’importe quel enfant <xref:System.Windows.Data.Binding> objets est ignoré.  Le nombre de paramètres dans un format de chaîne composite ne peut pas dépasser le nombre d’enfants <xref:System.Windows.Data.Binding> des objets dans le <xref:System.Windows.Data.MultiBinding>.  
  
 Lorsque vous utilisez un <xref:System.Windows.Data.PriorityBinding>, vous pouvez définir le <xref:System.Windows.Data.BindingBase.StringFormat%2A> sur la <xref:System.Windows.Data.PriorityBinding>, sur les objets de liaison enfants ou les deux.  Si le <xref:System.Windows.Data.BindingBase.StringFormat%2A> est défini sur la liaison enfant appliquée, cette valeur est utilisée.  Si le <xref:System.Windows.Data.BindingBase.StringFormat%2A> n’est pas défini sur la liaison enfant qui est appliquée, le <xref:System.Windows.Data.BindingBase.StringFormat%2A> de la <xref:System.Windows.Data.PriorityBinding> est appliquée si elle est définie.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Windows.Data.BindingBase.StringFormat%2A> propriété convertir `Price`, qui est un <xref:System.Double>, une chaîne qui représente une devise.  
  
 [!code-xaml[ContentStringSnippets#Binding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#binding)]  
  
 L’exemple suivant utilise le <xref:System.Windows.Data.BindingBase.StringFormat%2A> propriété sur un <xref:System.Windows.Data.MultiBinding> pour générer une chaîne qui inclut le `Description` et `Price` de chaque élément dans un <xref:System.Windows.Controls.ListBox>.  
  
 [!code-xaml[ContentStringSnippets#MultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#multibinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNullValue">
      <MemberSignature Language="C#" Value="public object TargetNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetNullValue : obj with get, set" Usage="System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur utilisée dans la cible lorsque la valeur de la source est <see langword="null" />.</summary>
        <value>Valeur utilisée dans la cible lorsque la valeur de la source est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_TargetNullValue"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
  
```  
<object TargetNullValue="nullValue" />  
```  
  
 **- ou -**  
  
```  
<object>  
  <object.TargetNullValue>  
    nullValue  
    </object.TargetNullValue>  
</object>  
```  
  
<a name="xamlValues_TargetNullValue"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *nullValue*  
 Un attribut ou objet de valeur de l’élément du même type que la propriété cible. Consultez la documentation de ce type d’informations sur l’utilisation XAML. Ce type peut ou peut ne prend pas en charge la syntaxe d’attribut pour ses valeurs, ou peut ou peut prend pas en charge la syntaxe d’élément objet (qui nécessite un constructeur par défaut sur ce type).  
  
   
  
## Examples  
 L’exemple suivant lie un <xref:System.Windows.Controls.TextBox> à une propriété d’un objet.  Si la propriété est `null`, la <xref:System.Windows.Controls.TextBox> affiche « Entrez une chaîne. »  
  
 [!code-xaml[BindingGroupSnippets#TargetNullValue](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#targetnullvalue)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>