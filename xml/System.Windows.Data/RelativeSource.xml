<Type Name="RelativeSource" FullName="System.Windows.Data.RelativeSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6a921dc7e65c07f67917cc3cc0c05d494cf8c56" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629773" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RelativeSource : System.Windows.Markup.MarkupExtension, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelativeSource extends System.Windows.Markup.MarkupExtension implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.RelativeSource" />
  <TypeSignature Language="VB.NET" Value="Public Class RelativeSource&#xA;Inherits MarkupExtension&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelativeSource : System::Windows::Markup::MarkupExtension, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Windows.Data.RelativeSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implémente une extension de balisage qui décrit l’emplacement de la source de liaison par rapport à la position de la cible de liaison.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une des façons de spécifier une source de liaison est d’utiliser le <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> propriété. Il s’agit du type de propriété de cette propriété. <xref:System.Windows.Data.RelativeSource> est simultanément une implémentation d’extension de balisage et un objet de données. Lorsque l’extension se retourne lui-même (voir <xref:System.Windows.Data.RelativeSource.ProvideValue%2A>), les informations pertinentes sont contenues dans les données. L’objectif principal de l’extension de balisage consiste à autoriser une syntaxe de constructeur à argument variable sous forme d’attribut, afin que la <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> mode peut être définie en ligne avec les deux arguments supplémentaires pour le type d’ancêtre et au niveau que les autres modes ne requièrent pas.  
  
 Pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] plus d’informations, consultez [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
## Examples  
 L’exemple suivant montre un déclencheur de style qui crée un <xref:System.Windows.Controls.ToolTip> qui signale un message d’erreur de validation. À l’aide de la <xref:System.Windows.Data.Binding.RelativeSource%2A> lie de la valeur de l’accesseur Set de propriété, dans le contenu de l’erreur d’actuel <xref:System.Windows.Controls.TextBox> (la <xref:System.Windows.Controls.TextBox> l’aide du style). Pour plus d’informations sur cet exemple, consultez [Comment : implémenter la Validation de liaison](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 L’exemple suivant illustre la <xref:System.Windows.Style> définition d’un contrôle personnalisé appelé `NumericUpDown`. Le <xref:System.Windows.Controls.TextBlock.Text%2A> propriété de la <xref:System.Windows.Controls.TextBlock> est lié à la `Value` de l’objet qui est la `TemplatedParent`, qui est la `NumericUpDown` par ce contrôle <xref:System.Windows.Style> est appliqué dans ce cas.  
  
 [!code-xaml[CustomControlNumericUpDown#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 Pour obtenir un exemple complet, consultez [contrôle personnalisé NumericUpDown avec thème et prise en charge d’UI Automation, exemple](http://go.microsoft.com/fwlink/?LinkID=160025).  
  
 L’exemple suivant retourne le deuxième <xref:System.Windows.Controls.ItemsControl> rencontrée sur le chemin d’accès vers le haut, en commençant à l’élément cible de la liaison.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.RelativeSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Data.RelativeSource" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Data.RelativeSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As RelativeSourceMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource(System::Windows::Data::RelativeSourceMode mode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
      </Parameters>
      <Docs>
        <param name="mode">Une des valeurs de <see cref="T:System.Windows.Data.RelativeSourceMode" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Data.RelativeSource" /> avec un mode initial.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode, Type ancestorType, int ancestorLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode, class System.Type ancestorType, int32 ancestorLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As RelativeSourceMode, ancestorType As Type, ancestorLevel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource(System::Windows::Data::RelativeSourceMode mode, Type ^ ancestorType, int ancestorLevel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
        <Parameter Name="ancestorType" Type="System.Type" />
        <Parameter Name="ancestorLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">Une des valeurs de <see cref="T:System.Windows.Data.RelativeSourceMode" />. Pour que cette signature soit pertinente, cette valeur doit être <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />.</param>
        <param name="ancestorType">
          <see cref="T:System.Type" /> ancêtre à rechercher.</param>
        <param name="ancestorLevel">Position ordinale de l'ancêtre souhaité parmi tous les ancêtres du type donné.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Data.RelativeSource" /> avec un mode initial et des qualificateurs de marche d'arborescence supplémentaires pour rechercher la source relative souhaitée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ancestorType` et `ancestorLevel` n’ont aucune signification si fournies comme paramètres pour un `mode` autre que <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>. N’utilisez pas cette signature pour les autres <xref:System.Windows.Data.RelativeSourceMode> valeurs.  
  
   
  
## Examples  
 L’exemple suivant retourne le deuxième <xref:System.Windows.Controls.ItemsControl> rencontrée sur le chemin d’accès vers le haut, en commençant à l’élément cible de la liaison.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AncestorLevel">
      <MemberSignature Language="C#" Value="public int AncestorLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AncestorLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.AncestorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AncestorLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AncestorLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le niveau d’ancêtre à rechercher, en mode <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />. Utilisez 1 pour indiquer celui le plus proche de l’élément cible de liaison.</summary>
        <value>Niveau d’ancêtre. Utilisez 1 pour indiquer celui le plus proche de l’élément cible de liaison.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Windows.Data.RelativeSource.Mode%2A> propriété n’est pas définie explicitement, définissant la <xref:System.Windows.Data.RelativeSource.AncestorType%2A> ou le <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> verrouille implicitement la propriété le <xref:System.Windows.Data.RelativeSource.Mode%2A> valeur de propriété à <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>.  
  
<a name="xamlTextUsage_AncestorLevel"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] plus d’informations, consultez [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
   
  
## Examples  
 L’exemple suivant retourne le deuxième <xref:System.Windows.Controls.ItemsControl> rencontrée sur le chemin d’accès vers le haut, en commençant à l’élément cible de la liaison.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="AncestorType">
      <MemberSignature Language="C#" Value="public Type AncestorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AncestorType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.AncestorType" />
      <MemberSignature Language="VB.NET" Value="Public Property AncestorType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AncestorType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le type d'ancêtre à rechercher.</summary>
        <value>Type d'ancêtre. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Windows.Data.RelativeSource.Mode%2A> propriété n’est pas définie explicitement, définissant la <xref:System.Windows.Data.RelativeSource.AncestorType%2A> ou le <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> verrouille implicitement la propriété le <xref:System.Windows.Data.RelativeSource.Mode%2A> valeur de propriété à <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>.  
  
<a name="xamlTextUsage_AncestorType"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] plus d’informations, consultez [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
   
  
## Examples  
 L’exemple suivant retourne le deuxième <xref:System.Windows.Controls.ItemsControl> rencontrée sur le chemin d’accès vers le haut, en commençant à l’élément cible de la liaison.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Data.RelativeSource" /> n'est pas dans le mode <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />.</exception>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="P:System.Windows.Data.RelativeSource.AncestorLevel" />
        <altmember cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSourceMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.RelativeSourceMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As RelativeSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSourceMode Mode { System::Windows::Data::RelativeSourceMode get(); void set(System::Windows::Data::RelativeSourceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.ConstructorArgument("mode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur <see cref="T:System.Windows.Data.RelativeSourceMode" /> qui décrit l’emplacement de la source de liaison par rapport à la position de la cible de liaison.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Data.RelativeSourceMode" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est en lecture seule après l’initialisation. Si cette propriété n’est pas définie explicitement, la définition de la <xref:System.Windows.Data.RelativeSource.AncestorType%2A> ou le <xref:System.Windows.Data.RelativeSource.AncestorType%2A> et <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> propriétés verrouille implicitement la valeur de cette propriété pour <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>.  
  
<a name="xamlTextUsage_Mode"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] plus d’informations, consultez [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cette propriété est immuable après initialisation. Au lieu de modifier <see cref="P:System.Windows.Data.RelativeSource.Mode" /> sur cette instance, créez un nouveau <see cref="T:System.Windows.Data.RelativeSource" /> ou utilisez une instance statique différente.</exception>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="PreviousData">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource PreviousData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource PreviousData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.PreviousData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreviousData As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ PreviousData { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur statique utilisée pour retourner un <see cref="T:System.Windows.Data.RelativeSource" /> construit pour le mode <see cref="F:System.Windows.Data.RelativeSourceMode.PreviousData" />.</summary>
        <value>
          <see cref="T:System.Windows.Data.RelativeSource" /> statique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Trois des quatre <xref:System.Windows.Data.RelativeSourceMode> valeurs, <xref:System.Windows.Data.RelativeSourceMode.PreviousData>, <xref:System.Windows.Data.RelativeSourceMode.Self>, ou <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>, peut produire un <xref:System.Windows.Data.RelativeSource> entièrement statique ne contenant aucuns valeurs privées uniques. Toutes les utilisations de la propriété statique peuvent partager le même objet, ce qui évite d’avoir à allouer des objets distincts pour chaque utilisation. Par conséquent, à l’aide de la propriété statique réduit l’utilisation de mémoire.  
  
<a name="xamlTextUsage_PreviousData"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] plus d’informations, consultez [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Objet qui peut fournir des services pour l’extension de balisage. Dans cette implémentation, ce paramètre peut avoir la valeur <see langword="null" />.</param>
        <summary>Retourne un objet qui doit être défini comme la valeur sur la propriété de l'objet cible pour cette extension de balisage. Pour <see cref="T:System.Windows.Data.RelativeSource" />, il s'agit d'un autre <see cref="T:System.Windows.Data.RelativeSource" /> qui utilise la source appropriée pour le mode spécifié.</summary>
        <returns>Autre <see cref="T:System.Windows.Data.RelativeSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.RelativeSource> est simultanément une implémentation d’extension de balisage et un objet de données. Lorsque l’extension se retourne lui-même, les informations pertinentes sont contenues dans les données. L’objectif principal de l’extension de balisage consiste à autoriser une syntaxe de constructeur à argument variable sous forme d’attribut afin que la <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> mode peut être définie en ligne, avec les deux arguments supplémentaires pour le type d’ancêtre et au niveau que les autres modes ne requièrent pas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Self">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource Self { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource Self" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.Self" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Self As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ Self { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur statique utilisée pour retourner un <see cref="T:System.Windows.Data.RelativeSource" /> construit pour le mode <see cref="F:System.Windows.Data.RelativeSourceMode.Self" />.</summary>
        <value>
          <see cref="T:System.Windows.Data.RelativeSource" /> statique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Trois des quatre <xref:System.Windows.Data.RelativeSourceMode> valeurs, <xref:System.Windows.Data.RelativeSourceMode.PreviousData>, <xref:System.Windows.Data.RelativeSourceMode.Self>, ou <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>, peut produire un <xref:System.Windows.Data.RelativeSource> entièrement statique ne contenant aucuns valeurs privées uniques. Toutes les utilisations de la propriété statique peuvent partager le même objet, ce qui évite d’avoir à allouer des objets distincts pour chaque utilisation. Par conséquent, à l’aide de la propriété statique réduit l’utilisation de mémoire.  
  
<a name="xamlTextUsage_Self"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] plus d’informations, consultez [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
   
  
## Examples  
 L’exemple suivant montre un déclencheur de style qui crée un <xref:System.Windows.Controls.ToolTip> qui signale un message d’erreur de validation. La valeur de la méthode setter est liée dans le contenu de l’erreur d’actuel <xref:System.Windows.Controls.TextBox> (le <xref:System.Windows.Controls.TextBox> à l’aide du style) à l’aide de la <xref:System.Windows.Data.Binding.RelativeSource%2A> propriété. Consultez [Comment : implémenter la Validation de liaison](~/docs/framework/wpf/data/how-to-implement-binding-validation.md) pour plus d’informations sur cet exemple.  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorLevel">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAncestorLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAncestorLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si la propriété <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" /> doit être persistante.</summary>
        <returns>
          <see langword="true" /> si la propriété n'utilise plus sa valeur par défaut ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela `ShouldSerialize` méthode est fournie car la <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> propriété n’a pas de valeur par défaut simple. Cette méthode indique si la propriété a changé sa valeur par défaut. En règle générale, vous appelez cette méthode si vous développez un concepteur pour le <xref:System.Windows.Data.RelativeSource> ou votre propre contrôle incorporant la <xref:System.Windows.Data.RelativeSource>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAncestorType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAncestorType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si la propriété <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> doit être persistante.</summary>
        <returns>
          <see langword="true" /> si la propriété n'utilise plus sa valeur par défaut ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela `ShouldSerialize` méthode est fournie car la <xref:System.Windows.Data.RelativeSource.AncestorType%2A> propriété n’a pas de valeur par défaut simple. Cette méthode indique si la propriété a changé sa valeur par défaut. En règle générale, vous appelez cette méthode si vous développez un concepteur pour le <xref:System.Windows.Data.RelativeSource> ou votre propre contrôle incorporant la <xref:System.Windows.Data.RelativeSource>.  
  
 Pour plus d’informations, consultez [définissant les valeurs par défaut avec les méthodes ShouldSerialize et Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ce membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être directement utilisé à partir de votre code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ce membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être directement utilisé à partir de votre code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatedParent">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource TemplatedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource TemplatedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.TemplatedParent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TemplatedParent As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ TemplatedParent { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur statique utilisée pour retourner un <see cref="T:System.Windows.Data.RelativeSource" /> construit pour le mode <see cref="F:System.Windows.Data.RelativeSourceMode.TemplatedParent" />.</summary>
        <value>
          <see cref="T:System.Windows.Data.RelativeSource" /> statique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Trois des quatre <xref:System.Windows.Data.RelativeSourceMode> valeurs, <xref:System.Windows.Data.RelativeSourceMode.PreviousData>, <xref:System.Windows.Data.RelativeSourceMode.Self>, ou <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>, peut produire un <xref:System.Windows.Data.RelativeSource> entièrement statique ne contenant aucuns valeurs privées uniques. Toutes les utilisations de la propriété statique peuvent partager le même objet, ce qui évite d’avoir à allouer des objets distincts pour chaque utilisation. Par conséquent, à l’aide de la propriété statique réduit l’utilisation de mémoire.  
  
<a name="xamlTextUsage_TemplatedParent"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] plus d’informations, consultez [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
   
  
## Examples  
 L’exemple suivant illustre la <xref:System.Windows.Style> définition d’un contrôle personnalisé appelé `NumericUpDown`. Le <xref:System.Windows.Controls.TextBlock.Text%2A> propriété de la <xref:System.Windows.Controls.TextBlock> est lié à la `Value` de l’objet qui est la `TemplatedParent`, qui est la `NumericUpDown` par ce contrôle <xref:System.Windows.Style> est appliqué dans ce cas.  
  
 [!code-xaml[CustomControlNumericUpDown#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 Pour obtenir un exemple complet, consultez [contrôle personnalisé NumericUpDown avec thème et prise en charge d’UI Automation, exemple](http://go.microsoft.com/fwlink/?LinkID=160025).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
  </Members>
</Type>