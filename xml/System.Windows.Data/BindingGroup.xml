<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="781bdf7793811cdf3b962966131adbcaaf3a2fe0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37522072" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c0f3e-101">Contient une collection de liaisons et d'objets <see cref="T:System.Windows.Controls.ValidationRule" /> utilisés pour valider un objet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0f3e-101">Contains a collection of bindings and <see cref="T:System.Windows.Controls.ValidationRule" /> objects that are used to validate an object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-102">Un <xref:System.Windows.Data.BindingGroup> crée une relation entre plusieurs liaisons, qui peuvent être validées et mises à jour ensemble.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-102">A <xref:System.Windows.Data.BindingGroup> creates a relationship between multiple bindings, which can be validated and updated together.</span></span> <span data-ttu-id="c0f3e-103">Par exemple, supposons qu’une application invite l’utilisateur à entrer une adresse.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-103">For example, suppose that an application prompts the user to enter an address.</span></span> <span data-ttu-id="c0f3e-104">L’application remplit ensuite un objet de type `Address`, qui a les propriétés, `Street`, `City`, `ZipCode`, et `Country`, avec les valeurs fournies par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-104">The application then populates an object of type `Address`, which has the properties, `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided.</span></span> <span data-ttu-id="c0f3e-105">L’application a un panneau qui contient quatre <xref:System.Windows.Controls.TextBox> contrôles, chacun d’eux est liées à une des propriétés de l’objet de données.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-105">The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to one of the object’s properties.</span></span> <span data-ttu-id="c0f3e-106">Vous pouvez utiliser un <xref:System.Windows.Controls.ValidationRule> dans un <xref:System.Windows.Data.BindingGroup> pour valider le `Address` objet.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-106">You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object.</span></span> <span data-ttu-id="c0f3e-107">Si les liaisons participent au même <xref:System.Windows.Data.BindingGroup>, vous pouvez vous assurer que le code postal est valide pour le pays de l’adresse.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-107">If the bindings participate in the same <xref:System.Windows.Data.BindingGroup>, you can ensure that the zip-code is valid for the country of the address.</span></span>  
  
 <span data-ttu-id="c0f3e-108">Vous définissez le <xref:System.Windows.FrameworkElement.BindingGroup%2A> propriété sur <xref:System.Windows.FrameworkElement> ou <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-108">You set the <xref:System.Windows.FrameworkElement.BindingGroup%2A> property on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="c0f3e-109">Les éléments enfants héritent le <xref:System.Windows.Data.BindingGroup> à partir de leurs éléments parents, tout comme avec toute autre propriété pouvant être héritées.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-109">Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.</span></span> <span data-ttu-id="c0f3e-110">Une liaison sur un élément descendant est ajoutée à un <xref:System.Windows.Data.BindingGroup> si une des situations suivantes se produit :</span><span class="sxs-lookup"><span data-stu-id="c0f3e-110">A binding on a descendent element is added to a <xref:System.Windows.Data.BindingGroup> if one of the following situations occurs:</span></span>  
  
-   <span data-ttu-id="c0f3e-111">Source de la liaison et le <xref:System.Windows.FrameworkElement.DataContext%2A> de l’élément qui a le <xref:System.Windows.Data.BindingGroup> correspondent au même objet et le <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> propriété n’est pas définie.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-111">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="c0f3e-112">Le <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> propriété de la liaison est égale à la <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> et ils ne sont pas définies explicitement `null`.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-112">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding is equal to the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> and they are not explicitly set to `null`.</span></span>  
  
 <span data-ttu-id="c0f3e-113">Dans l’exemple de l’adresse, supposons que le <xref:System.Windows.FrameworkElement.DataContext%2A> de la <xref:System.Windows.Controls.Panel> est défini sur l’objet de type `Address`.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-113">In the example of the address, suppose that the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.Panel> is set to the object of type `Address`.</span></span> <span data-ttu-id="c0f3e-114">La liaison pour chaque <xref:System.Windows.Controls.TextBox> est ajouté à la <xref:System.Windows.Data.BindingGroup> du panneau.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-114">The binding for each <xref:System.Windows.Controls.TextBox> is added to the <xref:System.Windows.Data.BindingGroup> of the panel.</span></span>  
  
 <span data-ttu-id="c0f3e-115">Vous ajoutez <xref:System.Windows.Controls.ValidationRule> des objets sur un <xref:System.Windows.Data.BindingGroup>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-115">You add <xref:System.Windows.Controls.ValidationRule> objects to a <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="c0f3e-116">Le <xref:System.Windows.Data.BindingGroup> est passée comme premier paramètre de la <xref:System.Windows.Controls.ValidationRule.Validate%2A> méthode lorsque le <xref:System.Windows.Controls.ValidationRule> s’exécute.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-116">The <xref:System.Windows.Data.BindingGroup> is passed as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method when the <xref:System.Windows.Controls.ValidationRule> runs.</span></span> <span data-ttu-id="c0f3e-117">Vous pouvez utiliser la <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> ou <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> méthode là-dessus <xref:System.Windows.Data.BindingGroup> pour obtenir les valeurs proposées de l’objet et le <xref:System.Windows.Data.BindingGroup.Items%2A> propriété à obtenir les sources des liaisons.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-117">You can use the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method on that <xref:System.Windows.Data.BindingGroup> to get the proposed values of the object, and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the sources of the bindings.</span></span>  
  
 <span data-ttu-id="c0f3e-118">Un <xref:System.Windows.Data.BindingGroup> met à jour les sources de la liaison en même temps au lieu de chaque liaison mis à jour séparément.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-118">A <xref:System.Windows.Data.BindingGroup> updates the sources of the binding at the same time instead of each binding being updated separately.</span></span> <span data-ttu-id="c0f3e-119">Lorsque vous appelez une des méthodes pour valider les données (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, ou <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), la liaison pour chaque <xref:System.Windows.Controls.TextBox> dans l’exemple est validé et potentiellement mise à jour.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-119">When you call one of the methods to validate the data (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), the binding for each <xref:System.Windows.Controls.TextBox> in the example is validated and potentially updated.</span></span> <span data-ttu-id="c0f3e-120">Lorsqu’une liaison fait partie d’un <xref:System.Windows.Data.BindingGroup>, la source de la liaison n’est pas mis à jour jusqu'à ce que vous appeliez <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> ou <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> sur le <xref:System.Windows.Data.BindingGroup>, sauf si vous définissez explicitement la <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-120">When a binding is part of a <xref:System.Windows.Data.BindingGroup>, the source of the binding is not updated until you call <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> on the <xref:System.Windows.Data.BindingGroup>, unless you explicitly set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f3e-121">Les exemples suivants créent une application qui invite l’utilisateur à entrer la description et le prix d’un élément et la date d’expiration de l’offre.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-121">The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires.</span></span> <span data-ttu-id="c0f3e-122">L’application affiche les informations actuelles de l’élément sous le formulaire.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-122">The application displays the current information for the item below the form.</span></span> <span data-ttu-id="c0f3e-123">L’utilisateur peut envoyer ou annuler les modifications.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-123">The user can submit or cancel the changes.</span></span>  
  
 <span data-ttu-id="c0f3e-124">L’application effectue les opérations suivantes pour obtenir ce comportement.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-124">The application does the following to achieve this behavior.</span></span>  
  
-   <span data-ttu-id="c0f3e-125">Crée un <xref:System.Windows.Data.BindingGroup> et l’ajoute à la racine <xref:System.Windows.Controls.StackPanel> lorsqu’il crée le [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de l’application.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-125">Creates a <xref:System.Windows.Data.BindingGroup> and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span>  
  
-   <span data-ttu-id="c0f3e-126">Appels <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, et <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> dans la logique de l’application pour activer la restauration des changements.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-126">Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.</span></span>  
  
-   <span data-ttu-id="c0f3e-127">Appels <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> dans un <xref:System.Windows.Controls.ValidationRule.Validate%2A> méthode pour obtenir l’entrée d’utilisateur puis vérifier qu’un élément plus de 100 dollars est disponible pendant au moins sept jours.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-127">Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.</span></span>  
  
 <span data-ttu-id="c0f3e-128">L’exemple suivant crée la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de l’application.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-128">The following example creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span> <span data-ttu-id="c0f3e-129">La racine <xref:System.Windows.Controls.StackPanel> a un <xref:System.Windows.Data.BindingGroup> qui contient un <xref:System.Windows.Controls.ValidationRule> qui valide l’élément, comme décrit précédemment.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-129">The root <xref:System.Windows.Controls.StackPanel> has a <xref:System.Windows.Data.BindingGroup> that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously.</span></span> <span data-ttu-id="c0f3e-130">Les objets de liaison sur le `Price` propriété et la `OfferExpires` partie de la propriété deviennent la <xref:System.Windows.Data.BindingGroup> et chaque liaison possède un <xref:System.Windows.Controls.ValidationRule> pour vous assurer que le prix et la date, respectivement, sont des valeurs valides.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-130">The binding objects on the `Price` property and the `OfferExpires` property become part of the <xref:System.Windows.Data.BindingGroup> and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values.</span></span> <span data-ttu-id="c0f3e-131">Les règles de validation pour les propriétés individuelles s’exécutent avant le <xref:System.Windows.Controls.ValidationRule> sur le <xref:System.Windows.Data.BindingGroup>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-131">The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 <span data-ttu-id="c0f3e-132">L’exemple suivant montre les gestionnaires d’événements pour l’application.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-132">The following example shows the event handlers for the application.</span></span> <span data-ttu-id="c0f3e-133">Lorsque l’utilisateur clique sur le bouton Envoyer, l’application appelle <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> pour exécuter chacun <xref:System.Windows.Controls.ValidationRule> qui est associé le <xref:System.Windows.Data.BindingGroup>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-133">When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="c0f3e-134">Si chaque <xref:System.Windows.Controls.ValidationRule> réussit, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> enregistre les valeurs à l’objet et met fin à la transaction de modification.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-134">If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction.</span></span> <span data-ttu-id="c0f3e-135">Si <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> est réussie, l’application commence une autre transaction de modification.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-135">If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction.</span></span> <span data-ttu-id="c0f3e-136">Quand un <xref:System.Windows.Controls.ValidationRule> échoue, le <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> événement se produit, car la valeur de l’application <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> à `true` sur le <xref:System.Windows.Data.BindingGroup> (dans l’exemple précédent).</span><span class="sxs-lookup"><span data-stu-id="c0f3e-136">When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the <xref:System.Windows.Data.BindingGroup> (in the previous example).</span></span> <span data-ttu-id="c0f3e-137">`ItemError` gère la <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> événement et affiche des informations sur l’erreur de validation à l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-137">`ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event and displays information about the validation error to the user.</span></span> <span data-ttu-id="c0f3e-138">L’exemple gère également la <xref:System.Windows.FrameworkElement.Loaded> événement pour le <xref:System.Windows.Controls.StackPanel> et <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement pour le **Annuler** bouton.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-138">The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 <span data-ttu-id="c0f3e-139">L’exemple suivant montre le personnalisé <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, ce qui a été ajouté à la <xref:System.Windows.Data.BindingGroup> dans le premier exemple.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-139">The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the <xref:System.Windows.Data.BindingGroup> in the first example.</span></span> <span data-ttu-id="c0f3e-140">Le <xref:System.Windows.Controls.ValidationRule> utilise le <xref:System.Windows.Data.BindingGroup> dans son <xref:System.Windows.Controls.ValidationRule.Validate%2A> méthode pour obtenir les valeurs de l’utilisateur a entrées dans le formulaire et vérifie que si un élément est de plus de 100 dollars, il sera disponible pendant au moins sept jours.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-140">The <xref:System.Windows.Controls.ValidationRule> uses the <xref:System.Windows.Data.BindingGroup> in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-141">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-141">Initializes a new instance of the <see cref="T:System.Windows.Data.BindingGroup" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-142">Commence une transaction de modification sur les sources dans <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-142">Begins an edit transaction on the sources in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-143">Si les sources dans le <xref:System.Windows.Data.BindingGroup> prennent en charge l’abandon des modifications en attente, vous pouvez appeler <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> pour commencer la transaction de modification, appelez <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> pour enregistrer les modifications en attente, appelez <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> pour ignorer les modifications en attente.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-143">If the sources in the <xref:System.Windows.Data.BindingGroup> support discarding pending changes, you can call <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to begin the edit transaction, call <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes, call <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes.</span></span>  
  
 <span data-ttu-id="c0f3e-144">Pour chaque objet dans <xref:System.Windows.Data.BindingGroup.Items%2A> qui implémente <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> appels <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c0f3e-144">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> calls <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f3e-145">L’exemple suivant appelle <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> lorsqu’une fenêtre se charge pour commencer la transaction de modification.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-145">The following example calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> when a window loads to begin the edit transaction.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-146">Obtient une collection d'objets <see cref="T:System.Windows.Data.BindingExpression" /> qui contient des informations pour chaque liaison dans <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-146">Gets a collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each Binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0f3e-147">Collection d'objets <see cref="T:System.Windows.Data.BindingExpression" /> qui contient des informations pour chaque liaison dans <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-147">A collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-148">Un <xref:System.Windows.Data.BindingExpression> appartient à un <xref:System.Windows.Data.BindingGroup> si un des cas suivants se produit :</span><span class="sxs-lookup"><span data-stu-id="c0f3e-148">A <xref:System.Windows.Data.BindingExpression> belongs to a <xref:System.Windows.Data.BindingGroup> if one of the following cases occurs:</span></span>  
  
-   <span data-ttu-id="c0f3e-149">Source de la liaison et le <xref:System.Windows.FrameworkElement.DataContext%2A> de l’élément qui a le <xref:System.Windows.Data.BindingGroup> correspondent au même objet et la <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> n’est pas définie.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-149">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set.</span></span>  
  
-   <span data-ttu-id="c0f3e-150">Le <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> propriété de la liaison et le <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.Data.BindingGroup> sont définies sur la même valeur non null et le <xref:System.Windows.Data.BindingGroup> appartient à un élément parent de l’élément de cible de la liaison.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-150">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding and the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> are set to the same non-null value and the <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
-   <span data-ttu-id="c0f3e-151">Vous ajoutez un <xref:System.Windows.Data.BindingExpression> à <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-151">You add a <xref:System.Windows.Data.BindingExpression> to <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-152">Met fin à la transaction de modification et ignore les modifications en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-152">Ends the edit transaction and discards the pending changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-153">Cette méthode provoque les sources à ignorer les modifications en attente, si un objet source est en mesure d’en faire et de fin de la transaction de modification.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-153">This method causes the sources to discard the pending changes, if a source object is capable of doing so and end the edit transaction.</span></span> <span data-ttu-id="c0f3e-154">Puis la méthode met à jour les propriétés cibles avec les valeurs sources enregistrées.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-154">Then the method updates the target properties with the saved source values.</span></span>  
  
 <span data-ttu-id="c0f3e-155">Pour chaque objet dans <xref:System.Windows.Data.BindingGroup.Items%2A> qui implémente <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> appels <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c0f3e-155">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> calls <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f3e-156">L’exemple suivant appelle <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> pour ignorer les modifications en attente, puis appelle <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> pour préparer la source pour être ré-édition.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-156">The following example calls <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-157">Détermine si chaque source dans la liaison peut ignorer les modifications en attente et restaurer les valeurs d'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-157">Gets whether each source in the binding can discard pending changes and restore the original values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0f3e-158">
            <see langword="true" /> si chaque source dans la liaison peut ignorer les modifications en attente et restaurer les valeurs d'origine ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-158">
              <see langword="true" /> if each source in the binding can discard pending changes and restore the original values; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-159">Une source peut ignorer les modifications en attente si elle implémente <xref:System.ComponentModel.IEditableObject>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-159">A source can discard pending changes if it implements <xref:System.ComponentModel.IEditableObject>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-160">Exécute tous les objets <see cref="T:System.Windows.Controls.ValidationRule" /> et met à jour les sources de liaison si toutes les règles de validation réussissent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-160">Runs all the <see cref="T:System.Windows.Controls.ValidationRule" /> objects and updates the binding sources if all validation rules succeed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0f3e-161">
            <see langword="true" /> si chaque <see cref="T:System.Windows.Controls.ValidationRule" /> réussit et les valeurs sont validées dans les sources ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-161">
              <see langword="true" /> if every <see cref="T:System.Windows.Controls.ValidationRule" /> succeeds and the values are committed to the sources; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-162">Si chaque <xref:System.Windows.Controls.ValidationRule> réussit, cette méthode provoque les sources valider les modifications en attente et de fin de la transaction de modification, si un objet source est en mesure d’en faire.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-162">If every <xref:System.Windows.Controls.ValidationRule> succeeds, this method causes the sources to commit the pending changes and end the edit transaction, if a source object is capable of doing so.</span></span>  
  
 <span data-ttu-id="c0f3e-163">Pour chaque objet dans <xref:System.Windows.Data.BindingGroup.Items%2A> qui implémente <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> appels <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c0f3e-163">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> calls <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f3e-164">L’exemple suivant appelle <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> pour enregistrer les modifications en attente, puis appelle <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> pour préparer la source pour être ré-édition.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-164">The following example calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c0f3e-165">Objet qui contient la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-165">The object that contains the specified property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="c0f3e-166">Propriété dont la valeur proposée doit être obtenue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-166">The property whose proposed value to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0f3e-167">Retourne la valeur proposée pour la propriété et l'élément spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-167">Returns the proposed value for the specified property and item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0f3e-168">Valeur de propriété proposée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-168">The proposed property value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-169">Utilisez cette méthode dans le <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> méthode pour obtenir la valeur pour être validée dans la source.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-169">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="c0f3e-170">Le type de la valeur de retour dépend de la phase à laquelle le <xref:System.Windows.Controls.ValidationRule> se produit.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-170">The type of the return value depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="c0f3e-171">Par exemple, si un <xref:System.Windows.Controls.TextBox> est lié aux données à une propriété de type entier et le <xref:System.Windows.Controls.ValidationRule> qui appelle <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> a son <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> défini sur <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, la méthode retourne une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-171">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer and the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, the method returns a string.</span></span> <span data-ttu-id="c0f3e-172">Si le <xref:System.Windows.Controls.ValidationRule> a son <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> défini sur <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, la méthode retourne le type retourné par le convertisseur de la liaison.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-172">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the method returns whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="c0f3e-173">Dans cet exemple, <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> retourne généralement un entier.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-173">In this example, <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> usually returns an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f3e-174">L’exemple suivant fait partie d’une application qui invite l’utilisateur à entrer plusieurs clients et affecter un représentant commercial à chaque client.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-174">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="c0f3e-175">L’application vérifie que le commercial et le client appartiennent à la même région.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-175">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="c0f3e-176">L’exemple montre le <xref:System.Windows.Controls.ValidationRule.Validate%2A> (méthode), qui utilise le <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> méthode pour obtenir les valeurs entrées par le client.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-176">The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method to get values that the customer entered.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c0f3e-177">Il n'y a pas de liaison pour l'élément et la propriété spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-177">There is not a binding for the specified item and property.</span>
          </span>
        </exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException">
          <span data-ttu-id="c0f3e-178">La valeur de la propriété spécifiée n'est pas disponible, en raison d'une erreur de conversion ou car une règle de validation antérieure a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-178">The value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-179">Obtient une valeur qui indique si le <see cref="T:System.Windows.Data.BindingGroup" /> a une règle de validation non réussie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-179">Gets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0f3e-180">
            <see langword="true" /> si le <see cref="T:System.Windows.Data.BindingGroup" /> a une règle de validation non réussie ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-180">
              <see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-181">Obtient ou définit une valeur qui indique si le <see cref="T:System.Windows.Data.BindingGroup" /> contient une valeur proposée qui n'a pas été écrite dans la source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-181">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0f3e-182">
            <see langword="true" /> si <see cref="T:System.Windows.Data.BindingGroup" /> contient une valeur proposée qui n'a pas été écrite dans la source ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-182">
              <see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-183">Obtient les sources utilisées par les objets de liaison dans <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-183">Gets the sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0f3e-184">Sources utilisées par les objets de liaison dans <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-184">The sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-185">Chaque objet qui est utilisé comme une source est ajoutée dans le <xref:System.Windows.Data.BindingGroup.Items%2A> propriété qu’une seule fois, même si l’objet est utilisé comme source pour plusieurs liaisons.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-185">Each object that is used as a source is added into the <xref:System.Windows.Data.BindingGroup.Items%2A> property once, even if the object is used as the source for multiple bindings.</span></span> <span data-ttu-id="c0f3e-186">Souvent, il existe un seul élément dans <xref:System.Windows.Data.BindingGroup.Items%2A>, qui est l’objet qui est la <xref:System.Windows.FrameworkElement.DataContext%2A> de l’élément qui utilise le <xref:System.Windows.Data.BindingGroup>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-186">Often, there is just one item in <xref:System.Windows.Data.BindingGroup.Items%2A>, which is the object that is the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that uses the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="c0f3e-187">Il est possible pour un <xref:System.Windows.Data.BindingGroup> d’avoir plusieurs sources, toutefois.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-187">It is possible for a <xref:System.Windows.Data.BindingGroup> to have multiple sources, however.</span></span> <span data-ttu-id="c0f3e-188">Par exemple, si les objets de liaison partagent le même <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> mais utilisent des objets sources différents, chaque objet qui est utilisé en tant que source est dans <xref:System.Windows.Data.BindingGroup.Items%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-188">For example, if Binding objects share the same <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> but use different source objects, each object that is used as a source is in <xref:System.Windows.Data.BindingGroup.Items%2A>.</span></span>  
  
 <span data-ttu-id="c0f3e-189">Il peut également y avoir plusieurs objets dans <xref:System.Windows.Data.BindingGroup.Items%2A> si le chemin d’accès d’une liaison correspond à une propriété imbriquée de la source.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-189">There can also be multiple objects in <xref:System.Windows.Data.BindingGroup.Items%2A> if the path of a Binding resolves to a nested property of the source.</span></span> <span data-ttu-id="c0f3e-190">Par exemple, un <xref:System.Windows.Controls.TextBox> liaison du contrôle fait partie d’un <xref:System.Windows.Data.BindingGroup> et son <xref:System.Windows.FrameworkElement.DataContext%2A> est un `Customer` object, qui a une propriété de type `Address`.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-190">For example, suppose a <xref:System.Windows.Controls.TextBox> control's binding is a part of a <xref:System.Windows.Data.BindingGroup> and its <xref:System.Windows.FrameworkElement.DataContext%2A> is a `Customer` object, which has a property of type `Address`.</span></span> <span data-ttu-id="c0f3e-191">Si le <xref:System.Windows.Data.Binding.Path%2A> de la <xref:System.Windows.Data.Binding> est la `Address.ZipCode` propriété, le `Address` est ajouté à la <xref:System.Windows.Data.BindingGroup.Items%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-191">If the <xref:System.Windows.Data.Binding.Path%2A> of the <xref:System.Windows.Data.Binding> is the `Address.ZipCode` property, the `Address` is added to the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f3e-192">Les exemples suivants font partie d’une application qui vérifie si l’utilisateur a défini les propriétés de deux objets de valeurs identiques.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-192">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="c0f3e-193">Le premier exemple crée deux <xref:System.Windows.Controls.TextBox> contrôles, chacun d'entre eux sera liées à une autre source de données.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-193">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="c0f3e-194">La liaison du premier <xref:System.Windows.Controls.TextBox> obtient sa source, `object1`, à partir de la <xref:System.Windows.FrameworkElement.DataContext%2A> de la <xref:System.Windows.Controls.TextBox> élément parent du contrôle (le <xref:System.Windows.Controls.StackPanel>).</span><span class="sxs-lookup"><span data-stu-id="c0f3e-194">The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>).</span></span> <span data-ttu-id="c0f3e-195">Dans la deuxième <xref:System.Windows.Controls.TextBox>, la source de la liaison est définie à `object2`.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-195">On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`.</span></span> <span data-ttu-id="c0f3e-196">L’exemple crée également un <xref:System.Windows.Controls.Label> qui affiche des erreurs de validation.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-196">The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="c0f3e-197">L’exemple suivant montre le <xref:System.Windows.Controls.ValidationRule> qui utilise l’exemple précédent.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-197">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="c0f3e-198">Dans le <xref:System.Windows.Controls.ValidationRule.Validate%2A> (méthode), l’exemple obtient chaque objet source à partir de la <xref:System.Windows.Data.BindingGroup> et vérifie si les propriétés des objets sont égale.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-198">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-199">Obtient ou définit le nom qui identifie le <see cref="T:System.Windows.Data.BindingGroup" />, qui peut être utilisé pour inclure et exclure des objets de liaison dans <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-199">Gets or sets the name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />, which can be used to include and exclude Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0f3e-200">Nom qui identifie <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-200">The name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-201">Si <xref:System.Windows.Data.BindingGroup.Name%2A> est `null`, les liaisons qui ont une source qui est le même objet que le <xref:System.Windows.FrameworkElement.DataContext%2A> de l’élément qui a le <xref:System.Windows.Data.BindingGroup> participer à la <xref:System.Windows.Data.BindingGroup>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-201">If <xref:System.Windows.Data.BindingGroup.Name%2A> is `null`, bindings that have a source that is the same object as the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> participate in the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="c0f3e-202">Vous pouvez inclure des liaisons qui ont une source différente de la <xref:System.Windows.FrameworkElement.DataContext%2A> de l’élément parent qui a le <xref:System.Windows.Data.BindingGroup> en définissant <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.Data.BindingGroup> et <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> propriété d’une liaison à la même valeur.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-202">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span> <span data-ttu-id="c0f3e-203">Vous pouvez exclure des liaisons qui ont la même source que <xref:System.Windows.FrameworkElement.DataContext%2A> de l’élément parent qui a le <xref:System.Windows.Data.BindingGroup> en définissant <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.Data.BindingGroup> et <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> propriété d’une liaison à des valeurs différentes.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-203">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f3e-204">Les exemples suivants font partie d’une application qui vérifie si l’utilisateur a défini les propriétés de deux objets de valeurs identiques.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-204">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="c0f3e-205">Le premier exemple crée deux <xref:System.Windows.Controls.TextBox> contrôles, chacun d'entre eux sera liées à une autre source de données.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-205">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="c0f3e-206">La liaison du premier <xref:System.Windows.Controls.TextBox> fait partie de la <xref:System.Windows.Data.BindingGroup> , car le <xref:System.Windows.Controls.TextBox> hérite le <xref:System.Windows.FrameworkElement.DataContext%2A> et <xref:System.Windows.Data.BindingGroup> à partir de son parent <xref:System.Windows.Controls.StackPanel>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-206">The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 <span data-ttu-id="c0f3e-207">La liaison sur le deuxième <xref:System.Windows.Controls.TextBox> fait partie de la <xref:System.Windows.Data.BindingGroup> , car le <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.Data.BindingGroup> et le <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> de la <xref:System.Windows.Data.Binding> sont toutes deux définies sur `bindingGroup`.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-207">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="c0f3e-208">L’exemple suivant montre le <xref:System.Windows.Controls.ValidationRule> qui utilise l’exemple précédent.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-208">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="c0f3e-209">Dans le <xref:System.Windows.Controls.ValidationRule.Validate%2A> (méthode), l’exemple obtient chaque objet source à partir de la <xref:System.Windows.Data.BindingGroup> et vérifie si les propriétés des objets sont égale.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-209">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-210">Obtient ou définit si l'événement <see cref="E:System.Windows.Controls.Validation.Error" /> se produit lorsque l'état de <see cref="T:System.Windows.Controls.ValidationRule" /> change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-210">Gets or sets whether the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0f3e-211">
            <see langword="true" /> si l'événement <see cref="E:System.Windows.Controls.Validation.Error" /> se produit lorsque l'état de <see cref="T:System.Windows.Controls.ValidationRule" /> change ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-211">
              <see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c0f3e-212">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-212">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-213">Le <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> événement attaché se produit sur l’élément qui a le <xref:System.Windows.Data.BindingGroup>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-213">The <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event occurs on the element that has the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f3e-214">L’exemple suivant crée un <xref:System.Windows.Data.BindingGroup> et définit <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> à `true` afin que l’application puisse traiter le <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> événement quand un <xref:System.Windows.Controls.ValidationRule> échoue.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-214">The following example creates a <xref:System.Windows.Data.BindingGroup> and sets <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event when a <xref:System.Windows.Controls.ValidationRule> fails.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="c0f3e-215">L’exemple suivant gère le <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-215">The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-216">Obtient l'objet auquel ce <see cref="T:System.Windows.Data.BindingGroup" /> est assigné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-216">Gets the object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0f3e-217">Objet auquel ce <see cref="T:System.Windows.Data.BindingGroup" /> est assigné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-217">The object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-218">Obtient ou définit une valeur qui indique si le <see cref="T:System.Windows.Data.BindingGroup" /> réutilise des valeurs cible qui n'ont pas été validées à la source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-218">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0f3e-219">
            <see langword="true" /> si le <see cref="T:System.Windows.Data.BindingGroup" /> réutilise des valeurs cible qui n'ont pas été validées à la source ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-219">
              <see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c0f3e-220">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-220">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-221">Une valeur proposée est une valeur qui a été modifiée sur la cible d’une liaison, mais n’a pas été validée à la source.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-221">A proposed value is a value that has been changed on the target of a binding, but has not been committed to the source.</span></span> <span data-ttu-id="c0f3e-222">Par exemple, supposons qu’il y a une liaison bidirectionnelle sur un <xref:System.Windows.Controls.TextBox> et <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> propriété est définie sur <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-222">For example, suppose that there is a two-way binding on a <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>.</span></span> <span data-ttu-id="c0f3e-223">Si l’utilisateur modifie la valeur de la <xref:System.Windows.Controls.TextBox>, la valeur proposée est la valeur qui se trouve dans le <xref:System.Windows.Controls.TextBox> avant qu’il soit validé dans la source.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-223">If the user changes the value of the <xref:System.Windows.Controls.TextBox>, the proposed value is the value that is in the <xref:System.Windows.Controls.TextBox> before it is committed to source.</span></span>  
  
 <span data-ttu-id="c0f3e-224">Lorsque <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> est `true`, le <xref:System.Windows.Data.BindingGroup> utilise la valeur proposée lorsqu’une liaison quitte le BindingGroup et une autre liaison avec la même source rejoint le BindingGroup.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-224">When <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> is `true`, the <xref:System.Windows.Data.BindingGroup> uses the proposed value when one binding leaves the BindingGroup and another Binding with the same source joins the BindingGroup.</span></span>  <span data-ttu-id="c0f3e-225">Par exemple, supposons qu’une application permet à un utilisateur de modifier plusieurs champs et de mettre à jour de l’objet source en cliquant sur un bouton.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-225">For example, suppose that an application enables a user to edit multiple fields and update the source object by clicking a button.</span></span> <span data-ttu-id="c0f3e-226">Lorsqu’un champ n’est pas modifié, l’application l’affiche dans un <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-226">When a field is not being edited, the application displays it in a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="c0f3e-227">Lorsque l’utilisateur commence à modifier un champ, l’application remplace le <xref:System.Windows.Controls.TextBlock> avec un <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-227">When the user begins to edit a field, the application replaces the <xref:System.Windows.Controls.TextBlock> with a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="c0f3e-228">Lorsque l’utilisateur a fini de modifier ce champ, l’application remplace le <xref:System.Windows.Controls.TextBox> avec un <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-228">When the user finishes editing that field, the application replaces the <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="c0f3e-229">Étant donné que la source n’est pas mis à jour jusqu'à ce que l’utilisateur clique sur le bouton, il doit y avoir un moyen pour le <xref:System.Windows.Controls.TextBlock> pour afficher la valeur proposée.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-229">Because the source is not updated until the user clicks the button, there must be a way for the <xref:System.Windows.Controls.TextBlock> to display the proposed value.</span></span> <span data-ttu-id="c0f3e-230">En définissant <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> à `true`, l’application affiche les modifications apportées par l’utilisateur à un champ même quand la source n’a pas été mis à jour.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-230">By setting <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> to `true`, the application will display the user's changes to a field even when the source has not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string *  -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c0f3e-231">Objet qui contient la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-231">The object that contains the specified property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="c0f3e-232">Propriété dont la valeur proposée doit être obtenue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-232">The property whose proposed value to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0f3e-233">Lorsque cette méthode est retournée, contient un objet qui représente la valeur de propriété proposée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-233">When this method returns, contains an object that represents the proposed property value.</span>
          </span>
          <span data-ttu-id="c0f3e-234">Ce paramètre est passé sans être initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-234">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0f3e-235">Tente d'obtenir la valeur proposée pour la propriété et l'élément spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-235">Attempts to get the proposed value for the specified property and item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0f3e-236">
            <see langword="true" /> si la valeur est la valeur proposée pour la propriété spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-236">
              <see langword="true" /> if value is the proposed value for the specified property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> Retourne `false` si n’est pas une liaison pour l’élément spécifié et la propriété si la valeur de la propriété spécifiée n’est pas disponible, en raison d’une erreur de conversion ou car une règle de validation antérieure a échoué.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> returns `false` if there is not a binding for the specified item and property or if the value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span>  
  
 <span data-ttu-id="c0f3e-238">Utilisez cette méthode dans le <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> méthode pour obtenir la valeur pour être validée dans la source.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-238">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="c0f3e-239">Le type `value` dépend du stade auquel le <xref:System.Windows.Controls.ValidationRule> se produit.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-239">The type `value` depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="c0f3e-240">Par exemple, si un <xref:System.Windows.Controls.TextBox> est lié aux données d’une propriété de type entier, `value` est une chaîne si le <xref:System.Windows.Controls.ValidationRule> qui appelle <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> a son <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> défini sur <xref:System.Windows.Controls.ValidationStep.RawProposedValue>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-240">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer, `value` is a string if the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>.</span></span> <span data-ttu-id="c0f3e-241">Si le <xref:System.Windows.Controls.ValidationRule> a son <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> définie sur <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, le type de `value` est le type retourné par le convertisseur de la liaison.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-241">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the type of `value` is whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="c0f3e-242">Dans cet exemple, `value` est généralement un entier.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-242">In this example, `value` is usually an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f3e-243">L’exemple suivant crée un personnalisé <xref:System.Windows.Controls.ValidationRule> nommé `ValidateDateAndPrice`.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-243">The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`.</span></span> <span data-ttu-id="c0f3e-244">Dans le <xref:System.Windows.Controls.ValidationRule.Validate%2A> (méthode), l’exemple utilise le <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> (méthode) et le <xref:System.Windows.Data.BindingGroup.Items%2A> propriété à obtenir les valeurs entrées dans le formulaire par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-244">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form.</span></span> <span data-ttu-id="c0f3e-245">L’exemple vérifie ensuite que si un élément est de plus de 100 dollars, il sera disponible pendant au moins sept jours.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-245">Then the example checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span> <span data-ttu-id="c0f3e-246">Cet exemple fait partie d’un exemple plus complet sur la <xref:System.Windows.Data.BindingGroup> classe</span><span class="sxs-lookup"><span data-stu-id="c0f3e-246">This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-247">Exécute le convertisseur sur la liaison et les objets <see cref="T:System.Windows.Controls.ValidationRule" /> qui ont la propriété <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> définie à <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> ou <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> et enregistre les valeurs des cibles dans les objets sources si toutes les règles de validation réussissent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-247">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, or <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> and saves the values of the targets to the source objects if all the validation rules succeed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0f3e-248">
            <see langword="true" /> si toutes les règles de validation réussissent ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-248">
              <see langword="true" /> if all validation rules succeed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-249">Cette méthode met à jour la source si chaque <xref:System.Windows.Controls.ValidationRule> réussit, mais cela n’entraîne pas les sources valider les modifications en attente et de fin de la transaction de modification.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-249">This method updates the source if every <xref:System.Windows.Controls.ValidationRule> succeeds, but it does not cause the sources to commit the pending changes and end the edit transaction.</span></span> <span data-ttu-id="c0f3e-250">Autrement dit, si l’objet source implémente <xref:System.ComponentModel.IEditableObject>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-250">That is, if the source object implements <xref:System.ComponentModel.IEditableObject>.</span></span> <span data-ttu-id="c0f3e-251">Appeler cette méthode ne provoque pas <xref:System.ComponentModel.IEditableObject.EndEdit%2A> à appeler.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-251">Calling this method does not cause <xref:System.ComponentModel.IEditableObject.EndEdit%2A> to be called.</span></span> <span data-ttu-id="c0f3e-252">Utilisez le <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> méthode pour que les sources de valider les modifications en attente.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-252">Use the <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> method to have the sources commit the pending changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f3e-253">L’exemple suivant fait partie d’une application qui invite l’utilisateur à entrer plusieurs clients et affecter un représentant commercial à chaque client.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-253">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="c0f3e-254">L’application vérifie que le commercial et le client appartiennent à la même région.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-254">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="c0f3e-255">L’exemple appelle <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> pour valider les liaisons et enregistrer les valeurs à la source si toutes les règles de validation réussissent.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-255">The example calls <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> to validate the bindings and save the values to the source if all the validation rules succeed.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-256">Obtient ou définit une valeur qui indique s'il faut inclure <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-256">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0f3e-257">
            <see langword="true" /> pour inclure <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-257">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c0f3e-258">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-258">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-259">Lorsque <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> est `true`, la liaison vérifie et signale les erreurs qui sont déclenchés par une source de données qui implémente <xref:System.ComponentModel.INotifyDataErrorInfo>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-259">When <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-260">Exécute le convertisseur sur la liaison et les objets <see cref="T:System.Windows.Controls.ValidationRule" /> qui ont la propriété <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> définie à <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> ou <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-260">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> or <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0f3e-261">
            <see langword="true" /> si les règles de validation réussissent ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-261">
              <see langword="true" /> if the validation rules succeed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-262">Les sources ne sont pas mis à jour lorsque vous appelez cette méthode.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-262">The sources are not updated when you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-263">Obtient une collection d'objets d'<see cref="T:System.Windows.Controls.ValidationError" /> qui ont rendu le <see cref="T:System.Windows.Data.BindingGroup" /> non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-263">Gets a collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused the <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0f3e-264">Collection d'objets de <see cref="T:System.Windows.Controls.ValidationError" /> qui ont rendu <see cref="T:System.Windows.Data.BindingGroup" /> invalide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-264">A collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span>
          </span>
          <span data-ttu-id="c0f3e-265">La valeur est <see langword="null" /> s'il n'existe aucune erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-265">The value is <see langword="null" /> if there are no errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0f3e-266">Obtient une collection d'objets <see cref="T:System.Windows.Controls.ValidationRule" /> qui valident les objets sources dans <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-266">Gets a collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0f3e-267">Collection d'objets <see cref="T:System.Windows.Controls.ValidationRule" /> qui valident les objets sources dans <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f3e-267">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f3e-268">Quand un <xref:System.Windows.Controls.ValidationRule> est ajouté à un <xref:System.Windows.Data.BindingGroup>, le <xref:System.Windows.Data.BindingGroup> est transmis comme premier paramètre de la <xref:System.Windows.Controls.ValidationRule.Validate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0f3e-268">When a <xref:System.Windows.Controls.ValidationRule> is added to a <xref:System.Windows.Data.BindingGroup>, the <xref:System.Windows.Data.BindingGroup> is passed in as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="c0f3e-269">Vous pouvez obtenir les valeurs proposées de l’objet à l’aide de la <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> ou <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0f3e-269">You can get the proposed values of the object by using the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method.</span></span> <span data-ttu-id="c0f3e-270">Vous pouvez obtenir les objets qui sont les sources des liaisons à partir de la <xref:System.Windows.Data.BindingGroup.Items%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-270">You can get the objects that are the sources of the bindings from the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f3e-271">L’exemple suivant ajoute personnalisé <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, à la <xref:System.Windows.Data.BindingGroup>.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-271">The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="c0f3e-272">L’exemple suivant montre la classe `ValidateDateAndPrice`.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-272">The following example shows the `ValidateDateAndPrice` class.</span></span> <span data-ttu-id="c0f3e-273">Le <xref:System.Windows.Controls.ValidationRule.Validate%2A> méthode utilise le <xref:System.Windows.Data.BindingGroup> pour obtenir les valeurs de l’utilisateur a entrées dans le formulaire et vérifie que si un élément est de plus de 100 dollars, il sera disponible pendant au moins sept jours.</span><span class="sxs-lookup"><span data-stu-id="c0f3e-273">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>