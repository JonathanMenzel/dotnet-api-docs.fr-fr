<Type Name="FilterType" FullName="System.ServiceModel.Routing.Configuration.FilterType">
  <TypeSignature Language="C#" Value="public enum FilterType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FilterType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.Configuration.FilterType" />
  <TypeSignature Language="VB.NET" Value="Public Enum FilterType" />
  <TypeSignature Language="C++ CLI" Value="public enum class FilterType" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="2d647-101">Spécifie le type de filtre à utiliser lors du routage des messages.</span><span class="sxs-lookup"><span data-stu-id="2d647-101">Specifies the type of filter to use when routing messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d647-102">Pour plus d'informations sur l'utilisation de <xref:System.ServiceModel.Routing.Configuration.FilterType>, voir <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d647-102">For more information about using <xref:System.ServiceModel.Routing.Configuration.FilterType>, see <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="Action" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType Action = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.Action" />
      <MemberSignature Language="VB.NET" Value="Action" />
      <MemberSignature Language="C++ CLI" Value="Action" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d647-103">Utilisez <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> pour filtrer une action.</span><span class="sxs-lookup"><span data-stu-id="2d647-103">Use <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> to filter on an action.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="And" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType And = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.And" />
      <MemberSignature Language="VB.NET" Value="And" />
      <MemberSignature Language="C++ CLI" Value="And" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d647-104">Utilisez <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" /> pour filtrer à partir de deux filtres de message liés ensemble par AND.</span><span class="sxs-lookup"><span data-stu-id="2d647-104">Use <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" /> to filter on two message filters, ANDed together.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType Custom = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d647-105">Utilisez un filtre défini par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="2d647-105">Use a user-defined filter.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="EndpointAddress">
      <MemberSignature Language="C#" Value="EndpointAddress" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType EndpointAddress = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress" />
      <MemberSignature Language="VB.NET" Value="EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="EndpointAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d647-106">Utilisez <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> avec <see cref="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" /> défini sur **false** pour appliquer un filtre à l’adresse.</span><span class="sxs-lookup"><span data-stu-id="2d647-106">Use <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> with <see cref="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" /> set to **false** to filter on the address.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="EndpointName">
      <MemberSignature Language="C#" Value="EndpointName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType EndpointName = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointName" />
      <MemberSignature Language="VB.NET" Value="EndpointName" />
      <MemberSignature Language="C++ CLI" Value="EndpointName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d647-107">Utilisez le <see cref="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" /> pour filtrer le nom du point de terminaison du service.</span><span class="sxs-lookup"><span data-stu-id="2d647-107">Use the <see cref="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" /> to filter on the name of the service endpoint.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MatchAll">
      <MemberSignature Language="C#" Value="MatchAll" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType MatchAll = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.MatchAll" />
      <MemberSignature Language="VB.NET" Value="MatchAll" />
      <MemberSignature Language="C++ CLI" Value="MatchAll" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d647-108">Utilisez le  <see cref="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" /> pour mettre en correspondance tous les messages.</span><span class="sxs-lookup"><span data-stu-id="2d647-108">Use the <see cref="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" /> to match all messages.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PrefixEndpointAddress">
      <MemberSignature Language="C#" Value="PrefixEndpointAddress" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType PrefixEndpointAddress = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress" />
      <MemberSignature Language="VB.NET" Value="PrefixEndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="PrefixEndpointAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d647-109">Utilisez <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> avec <see cref="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" /> défini sur **false** pour appliquer un filtre à l’adresse en utilisant le plus long préfixe correspondant.</span><span class="sxs-lookup"><span data-stu-id="2d647-109">Use <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> with <see cref="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" /> set to **false** to filter on the address using longest prefix matching.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="XPath" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType XPath = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.XPath" />
      <MemberSignature Language="VB.NET" Value="XPath" />
      <MemberSignature Language="C++ CLI" Value="XPath" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d647-110">Utilisez le <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> pour filtrer une expression XPath.</span><span class="sxs-lookup"><span data-stu-id="2d647-110">Use the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> to filter on an XPath expression.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>