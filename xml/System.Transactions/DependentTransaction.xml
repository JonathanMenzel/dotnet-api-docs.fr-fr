<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DependentTransaction.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54166ba671801fa4151f470ff0f011cba3bbc0f8d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4166ba671801fa4151f470ff0f011cba3bbc0f8d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Transactions.DependentTransaction">
          <source>Describes a clone of a transaction providing guarantee that the transaction cannot be committed until the application comes to rest regarding work on the transaction.</source>
          <target state="translated">Décrit un clone d'une transaction qui garantit que la transaction ne peut pas être validée tant que l'application n'a pas fini son travail sur la transaction.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Transactions.DependentTransaction">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.DependentTransaction">
          <source>The <ph id="ph1">&lt;xref:System.Transactions.DependentTransaction&gt;</ph> is a clone of a <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> object created using the <ph id="ph3">&lt;xref:System.Transactions.Transaction.DependentClone%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Transactions.DependentTransaction&gt;</ph> est un clone d’un <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> objet créé à l’aide de la <ph id="ph3">&lt;xref:System.Transactions.Transaction.DependentClone%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.DependentTransaction">
          <source>Its sole purpose is to allow the application to come to rest and guarantee that the transaction cannot commit while work is still being performed on the transaction (for example, on a worker thread).</source>
          <target state="translated">Son seul but est d’autoriser l’application à passer au repos et de garantir que la transaction ne peut pas être validée alors que le travail est toujours effectué sur la transaction (par exemple, sur un thread de travail).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.DependentTransaction">
          <source>When the work done within the cloned transaction is finally complete and ready to be committed, it can inform the creator of the transaction using the <ph id="ph1">&lt;xref:System.Transactions.DependentTransaction.Complete%2A&gt;</ph> method.</source>
          <target state="translated">Lorsque le travail effectué dans la transaction clonée est enfin terminé et prêt à être validée, elle peut informer le créateur de la transaction à l’aide de la <ph id="ph1">&lt;xref:System.Transactions.DependentTransaction.Complete%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.DependentTransaction">
          <source>Thus you can preserve the consistency and correctness of data.</source>
          <target state="translated">Vous pouvez donc conserver la cohérence et l’exactitude des données.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.DependentTransaction">
          <source>The <ph id="ph1">&lt;xref:System.Transactions.DependentCloneOption&gt;</ph> enumeration is used to determine the behavior on commit.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Transactions.DependentCloneOption&gt;</ph> énumération est utilisée pour déterminer le comportement lors de la validation.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.DependentTransaction">
          <source>This behavior control allows an application to come to rest, as well as provides concurrency support.</source>
          <target state="translated">Ce contrôle de comportement permet à une application à passer au repos et fournit la prise en charge d’accès concurrentiel.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.DependentTransaction">
          <source>For more information on how this enumeration is used, see <bpt id="p1">[</bpt>Managing Concurrency with DependentTransaction<ept id="p1">](http://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la façon dont cette énumération est utilisée, consultez <bpt id="p1">[</bpt>Managing Concurrency with DependentTransaction<ept id="p1">](http://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.DependentTransaction">
          <source>The following example shows you how to create a dependent transaction.</source>
          <target state="translated">L’exemple suivant montre comment créer une transaction dépendante.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.DependentTransaction">
          <source>This type is thread safe.</source>
          <target state="translated">Ce type est thread-safe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Transactions.DependentTransaction.Complete">
          <source>Attempts to complete the dependent transaction.</source>
          <target state="translated">Tente de terminer la transaction dépendante.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.DependentTransaction.Complete">
          <source>Call this method when the dependent clone wants to inform the creator of the transaction that it has finished its work, and the transaction can be committed if the parent is also ready.</source>
          <target state="translated">Appelez cette méthode lorsque le clone dépendant souhaite informer le créateur de la transaction qu’il a fini son travail, et la transaction peut être validée si le parent est également prêt.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.DependentTransaction.Complete">
          <source>After this call is invoked, you should not attempt any additional work on the transaction, or an exception is thrown.</source>
          <target state="translated">Après que cet appel est effectué, vous ne devez pas essayer aucun travail supplémentaire sur la transaction, ou une exception est levée.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.DependentTransaction.Complete">
          <source>If the application domain goes down after this method is called, and before the transaction is completed, the transaction might abort.</source>
          <target state="translated">Si le domaine d’application s’arrête une fois que cette méthode est appelée et avant la fin de la transaction, la transaction peut être abandonnée.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.DependentTransaction.Complete">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This method should be called only once during the dependent transaction's lifetime.</source>
          <target state="translated"><bpt id="p1">**</bpt>Remarque<ept id="p1">**</ept> cette méthode doit être appelée qu’une seule fois pendant la durée de vie de la transaction dépendante.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Transactions.DependentTransaction.Complete">
          <source>Any attempt for additional work on the transaction after this method is called.</source>
          <target state="translated">Toute tentative de travail supplémentaire sur la transaction lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Transactions.DependentTransaction.Complete">
          <source>These include invoking methods such as <ph id="ph1">&lt;see cref="Overload:System.Transactions.Transaction.EnlistVolatile" /&gt;</ph>, <ph id="ph2">&lt;see cref="Overload:System.Transactions.Transaction.EnlistDurable" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Transactions.Transaction.Clone" /&gt;</ph>, <ph id="ph4">&lt;see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /&gt;</ph> , or any serialization operations on the transaction.</source>
          <target state="translated">Cela inclut l’appel de méthodes telles que <ph id="ph1">&lt;see cref="Overload:System.Transactions.Transaction.EnlistVolatile" /&gt;</ph>, <ph id="ph2">&lt;see cref="Overload:System.Transactions.Transaction.EnlistDurable" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Transactions.Transaction.Clone" /&gt;</ph>, <ph id="ph4">&lt;see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /&gt;</ph> , ou toute opération de sérialisation sur la transaction.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>