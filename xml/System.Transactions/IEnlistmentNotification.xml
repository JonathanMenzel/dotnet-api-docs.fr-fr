<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata><Meta Name="ms.openlocfilehash" Value="198166c1aedb28a599cf6b4fc6e4d895c9a53dae" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51891034" /></Metadata><TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type IEnlistmentNotification = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Décrit une interface qu’un gestionnaire de ressources devrait implémenter pour fournir au gestionnaire des transactions des rappels de notification de validation à deux phases lors de l’inscription pour participation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans l’ordre pour un gestionnaire de ressources de participer à une transaction, elle doit être inscrite dans la transaction via le Gestionnaire de transactions. La classe <xref:System.Transactions.Transaction> définit un jeu de méthodes, dont les noms commencent par `Enlist`, qui fournit cette fonctionnalité. Les différentes `Enlist` méthodes correspondent aux différents types d’inscription dont un gestionnaire de ressources peut avoir.  
  
 Cette classe décrit une interface qu’un gestionnaire de ressources doit implémenter pour fournir des rappels de notification de validation à deux phases pour le Gestionnaire de transactions lors de l’inscription pour participation. Pour l’implémentation de chaque gestionnaire de ressources de la <xref:System.Transactions.IEnlistmentNotification> interface, vous devez les inscrire à l’aide de la <xref:System.Transactions.Transaction.EnlistVolatile%2A> méthode ou le <xref:System.Transactions.Transaction.EnlistDurable%2A> méthode de la <xref:System.Transactions.Transaction> (classe), selon que votre ressource est volatile ou durable. Pour plus d’informations sur l’inscription et 2PC, consultez [l’inscription de ressources comme Participants à une Transaction](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) et [validation d’une Transaction dans une phase unique et en plusieurs phases](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) respectivement.  
  
 Le Gestionnaire de transactions avertit l’objet inscrit à différentes phases du protocole de validation de deux phases via les méthodes suivantes.  
  
|Méthode|Description |  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|Cette méthode d’un objet inscrit est utilisée comme un rappel par le Gestionnaire de transactions pendant la première phase d’une transaction, lorsque le Gestionnaire de transactions demande aux participants s’ils peuvent valider la transaction.|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|Cette méthode d’un objet inscrit est utilisée comme un rappel par le Gestionnaire de transactions pendant la deuxième phase d’une transaction si la transaction est validée.|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|Cette méthode d’un objet inscrit est utilisée comme un rappel par le Gestionnaire de transactions pendant la deuxième phase d’une transaction si la transaction est abandonnée (qui est, de restauration).|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|Cette méthode d’un objet inscrit est utilisée comme un rappel par le Gestionnaire de transactions pendant la deuxième phase d’une transaction si la transaction est incertaine.|  
  
> [!NOTE]
>  Soyez conscient que notifications ne peuvent pas être envoyées séquentiellement ou dans un ordre particulier.  
  
   
  
## Examples  
 L’exemple suivant illustre une implémentation de cette interface, ainsi que l’inscription de l’objet en tant que participant dans une transaction à l’aide de la <xref:System.Transactions.Transaction.EnlistVolatile%2A> (méthode).  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
    <related type="Article" href="https://msdn.microsoft.com/library/786a12c2-d530-49f4-9c59-5c973e15a11d">Inscription de ressources comme participants à une transaction</related>
    <related type="Article" href="https://msdn.microsoft.com/library/694ea153-e4db-41ae-96ac-9ac66dcb69a9">Validation d'une transaction en une phase unique et en plusieurs phases</related>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Commit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Objet <see cref="T:System.Transactions.Enlistment" /> utilisé pour envoyer une réponse au gestionnaire de transactions.</param>
        <summary>Avertit un objet inscrit qu'une transaction est en cours de validation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le Gestionnaire de transactions appelle cette méthode d’un objet inscrit pendant la deuxième phase d’une validation lorsqu’il demande à tous les participants de valider la transaction.  
  
 Le Gestionnaire de ressources doit effectuer tout le travail nécessaire pour terminer la transaction, puis informer le Gestionnaire de transactions qu’il a fini en appelant le <xref:System.Transactions.Enlistment.Done%2A> méthode sur le `enlistment` paramètre.  
  
 Si le Gestionnaire de ressources est inscrit durablement mais ne répond pas en appelant <xref:System.Transactions.Enlistment.Done%2A> (méthode), le Gestionnaire de transactions n’est pas sûr que le Gestionnaire de ressources a reçu la <xref:System.Transactions.IEnlistmentNotification.Commit%2A> appeler. Par conséquent, le Gestionnaire de transactions continue à attendre une réponse et conserve les informations relatives à cette transaction.  Si <xref:System.Transactions.Enlistment.Done%2A> est jamais appelée, cette information est conservée indéfiniment en mémoire ou dans une ressource de l’échelle du système. Ainsi, les ressources d’être récupérée. Dans le cas d’une transaction distribuée, cela pourrait éventuellement remplir le journal MSDTC qui arrête le processus MSDTC. Dans le cas d’une transaction managée par <xref:System.Transactions>, cela entraîne une augmentation graduelle et continue de la consommation de mémoire de processus du Gestionnaire de ressources. Par conséquent, il est essentiel que vous appelez le <xref:System.Transactions.Enlistment.Done%2A> méthode une fois que votre gestionnaire de ressources a terminé votre travail de préparation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member InDoubt : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.InDoubt enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Objet <see cref="T:System.Transactions.Enlistment" /> utilisé pour envoyer une réponse au gestionnaire de transactions.</param>
        <summary>Avertit un objet inscrit que l'état d'une transaction est dans le doute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée pour les ressources volatiles lorsque le Gestionnaire de transactions a appelé une opération de validation de phase unique à une ressource durable unique, et puis la connexion à la ressource durable a été perdue avant d’obtenir le résultat de la transaction. À ce stade, le résultat de la transaction ne peut pas être déterminé en toute sécurité.  
  
 En tant que <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> est considérée comme un état final pour une transaction, vous ne devez pas appeler <xref:System.Transactions.IEnlistmentNotification.Commit%2A> ou <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> après avoir appelé <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.  
  
> [!NOTE]
>  Votre implémentation de cette méthode pour la ressource volatile doit effectuer toute opération de récupération ou de la relation contenant-contenu qu’il comprend sur les données affectées.  Il doit également appeler le <xref:System.Transactions.Enlistment.Done%2A> méthode sur le sur le `enlistment` paramètre lorsqu’il a fini son travail.  
  
 Si le Gestionnaire de ressources est inscrit durablement mais ne répond pas en appelant <xref:System.Transactions.Enlistment.Done%2A> (méthode), le Gestionnaire de transactions n’est pas sûr que le Gestionnaire de ressources a reçu la <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> appeler. Par conséquent, le Gestionnaire de transactions continue à attendre une réponse et conserve les informations relatives à cette transaction.  Si <xref:System.Transactions.Enlistment.Done%2A> est jamais appelée, cette information est conservée indéfiniment en mémoire ou dans une ressource de l’échelle du système. Ainsi, les ressources d’être récupérée. Dans le cas d’une transaction distribuée, cela pourrait éventuellement remplir le journal MSDTC qui arrête le processus MSDTC. Dans le cas d’une transaction managée par <xref:System.Transactions>, cela entraîne une augmentation graduelle et continue de la consommation de mémoire de processus du Gestionnaire de ressources. Par conséquent, il est essentiel que vous appelez le <xref:System.Transactions.Enlistment.Done%2A> méthode une fois que votre gestionnaire de ressources a terminé votre travail de préparation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberSignature Language="F#" Value="abstract member Prepare : System.Transactions.PreparingEnlistment -&gt; unit" Usage="iEnlistmentNotification.Prepare preparingEnlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">Objet <see cref="T:System.Transactions.PreparingEnlistment" /> utilisé pour envoyer une réponse au gestionnaire de transactions.</param>
        <summary>Avertit un objet inscrit qu'une transaction est en cours de préparation pour validation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le Gestionnaire de transactions appelle cette méthode d’une ressource inscrite manager pendant la phase 1 d’un engagement, lorsqu’il demande aux participants s’ils peuvent valider la transaction.  
  
 Lorsque vous implémentez un gestionnaire de ressources durables, vous devez enregistrer votre enregistrement de préparation pendant cette phase. L’enregistrement doit contenir toutes les informations nécessaires pour effectuer une récupération. Cela inclut la <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> propriété, qui est passée au Gestionnaire de transactions dans le <xref:System.Transactions.TransactionManager.Reenlist%2A> méthode lors de la récupération. Pour plus d’informations sur la récupération, consultez [exécution de la récupération](https://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).  
  
 Votre gestionnaire de ressources doit se terminer tout le travail qui doit être terminé avant d’appeler le <xref:System.Transactions.PreparingEnlistment.Prepared%2A> méthode de le `preparingEnlistment` paramètre pour indiquer son vote pour la validation. Il se peut que vous devez vous assurer que cela est effectué avant la réception de notification de phase 2 telle que la validation, restauration ou incertaine. Il s’agit, car les notifications de phase 2 peuvent survenir en ligne sur le même thread qui a appelé le <xref:System.Transactions.PreparingEnlistment.Prepared%2A> méthode dans la phase 1. Par conséquent, vous ne devez effectuer aucun travail après l'appel <xref:System.Transactions.PreparingEnlistment.Prepared%2A> (par exemple, libérer des verrous) que vous devez avoir terminé avant de recevoir les notifications de phase 2.  
  
 Vous pouvez également appeler la méthode de le `preparingEnlistment` paramètre pour indiquer un vote pour la restauration.  
  
 Si vous souhaitez que l’objet à observer et réagisse simplement à la progression de la transaction, sans participer, votre implémentation de cette méthode doit appeler la <xref:System.Transactions.Enlistment.Done%2A> méthode de le `preparingEnlistment` paramètre lorsqu’il a fini son travail. En procédant ainsi, votre gestionnaire de ressources ne doit pas recevoir de notification de phase 2.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Rollback : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Rollback enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Objet <see cref="T:System.Transactions.Enlistment" /> utilisé pour envoyer une réponse au gestionnaire de transactions.</param>
        <summary>Avertit un objet inscrit qu'une transaction est en cours de restauration (abandonnée).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le Gestionnaire de transactions appelle cette méthode d’un objet inscrit lorsque la transaction est en cours de restauration (abandonnée) en raison de l’incapacité d’un ou plusieurs participants de transaction à valider la transaction.  
  
 Le Gestionnaire de ressources doit effectuer tout le travail nécessaire pour terminer la transaction, puis informer le Gestionnaire de transactions qu’il a fini en appelant le <xref:System.Transactions.Enlistment.Done%2A> méthode sur le `enlistment` paramètre.  
  
 Si le Gestionnaire de ressources est inscrit durablement mais ne répond pas en appelant <xref:System.Transactions.Enlistment.Done%2A> (méthode), le Gestionnaire de transactions n’est pas sûr que le Gestionnaire de ressources a reçu la <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> appeler. Par conséquent, le Gestionnaire de transactions continue à attendre une réponse et conserve les informations relatives à cette transaction.  Si <xref:System.Transactions.Enlistment.Done%2A> est jamais appelée, cette information est conservée indéfiniment en mémoire ou dans une ressource de l’échelle du système. Ainsi, les ressources d’être récupérée. Dans le cas d’une transaction distribuée, cela pourrait éventuellement remplir le journal MSDTC qui arrête le processus MSDTC. Dans le cas d’une transaction managée par <xref:System.Transactions>, cela entraîne une augmentation graduelle et continue de la consommation de mémoire de processus du Gestionnaire de ressources. Par conséquent, il est essentiel que vous appelez le <xref:System.Transactions.Enlistment.Done%2A> méthode une fois que votre gestionnaire de ressources a terminé votre travail de préparation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>