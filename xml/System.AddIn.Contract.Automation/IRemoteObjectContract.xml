<Type Name="IRemoteObjectContract" FullName="System.AddIn.Contract.Automation.IRemoteObjectContract">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49ddba3fbd91cace87e14cf7e3ff245896419e19" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36648125" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRemoteObjectContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteObjectContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteObjectContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteObjectContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteObjectContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Définit un contrat que les composants peuvent utiliser pour accéder à un objet à travers le domaine d'application et les limites de processus.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous implémentez <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> sur un type, les composants peuvent utiliser le contrat pour accéder aux informations de type pour les objets du type. Composants accèdent aux informations de type en appelant le <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> méthode pour obtenir un <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. Le <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface définit un contrat que les composants peuvent utiliser pour accéder aux informations de membre et de type spécifique et pour appeler des membres.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRemoteType">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoteType () As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetRemoteType();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteType : unit -&gt; System.AddIn.Contract.Automation.IRemoteTypeContract" Usage="iRemoteObjectContract.GetRemoteType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> qui spécifie le type du <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> actif.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> qui spécifie le type du <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> actif.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> méthode pour accéder aux membres de l’instance distante de l’objet qui en cours <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCast">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument RemoteCast(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteCast (canonicalName As String) As RemoteArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument RemoteCast(System::String ^ canonicalName);" />
      <MemberSignature Language="F#" Value="abstract member RemoteCast : string -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteObjectContract.RemoteCast canonicalName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName">Nom complet du type en lequel effectuer un transtypage de l'objet.</param>
        <summary>Effectue un transtypage de l'objet identifié par le <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> actif en un type spécifié.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.RemoteArgument" /> qui représente le résultat de l'opération de transtypage.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nom canonique est un nom global unique, tel qu’un GUID. Chaînes au format \< *nom de l’assembly*>, \< *nom de type qualifié complet*> sont recommandées. Un exemple du format recommandé pour un nom complet est « ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application ».  
  
 Impossible de modifier le nom complet d’un type après la publication d’un type dans un composant. Modification du nom complet d’un type dans une future version d’une composant rompt la compatibilité entre les clients qui utilisent déjà le type.  
  
 Il est recommandé que <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> implémentations lèvent une <xref:System.InvalidCastException> si l’opération de cast échoue.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>