<Type Name="IRemoteTypeContract" FullName="System.AddIn.Contract.Automation.IRemoteTypeContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9f0c63f8af975d956ff2ab310321919ff986542e" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52196826" /></Metadata><TypeSignature Language="C#" Value="public interface IRemoteTypeContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteTypeContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteTypeContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteTypeContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteTypeContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8e180-101">Définit un contrat qui les composants peuvent utiliser aux informations de type et appeler des membres à travers le domaine d'application et les limites de processus.</span><span class="sxs-lookup"><span data-stu-id="8e180-101">Defines a contract that components can use to access type information and invoke members across application domain and process boundaries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e180-102">Pour obtenir un <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>, les composants peuvent appeler le <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> méthode d’un objet qui implémente le <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface.</span><span class="sxs-lookup"><span data-stu-id="8e180-102">To get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>, components can call the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method of an object that implements the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface.</span></span>  
  
 <span data-ttu-id="8e180-103">Pour obtenir des informations sur le type d’un objet, les composants appellent les <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8e180-103">To get information about the type of an object, components call the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A> method.</span></span>  
  
 <span data-ttu-id="8e180-104">Pour obtenir des informations sur les membres d’un objet, les composants appellent une des méthodes qui retourne des informations sur un type particulier de membre.</span><span class="sxs-lookup"><span data-stu-id="8e180-104">To get information about the members of an object, components call one of the methods that returns information about a particular kind of member.</span></span> <span data-ttu-id="8e180-105">Par exemple, pour obtenir des informations sur les événements d’un objet, les composants peuvent utiliser le <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A> ou <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8e180-105">For example, to get information about the events of an object, components can use the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A> or <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> method.</span></span>  
  
 <span data-ttu-id="8e180-106">Pour appeler un membre d’un objet, les composants utilisent la <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8e180-106">To invoke a member of an object, components use the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCanonicalName">
      <MemberSignature Language="C#" Value="public string GetCanonicalName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCanonicalName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCanonicalName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCanonicalName();" />
      <MemberSignature Language="F#" Value="abstract member GetCanonicalName : unit -&gt; string" Usage="iRemoteTypeContract.GetCanonicalName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e180-107">Retourne le nom complet du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-107">Returns the canonical name of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="8e180-108">Nom complet du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-108">The canonical name of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e180-109">Le nom canonique est un nom globalement unique, tel qu’un nom de type qualifié complet.</span><span class="sxs-lookup"><span data-stu-id="8e180-109">The canonical name is a globally unique name, such as a fully qualified type name.</span></span> <span data-ttu-id="8e180-110">Les chaînes au format \< *nom de l’assembly*>, \< *nom de type qualifié complet*> sont recommandées pour les types managés.</span><span class="sxs-lookup"><span data-stu-id="8e180-110">Strings in the format \<*assembly name*>, \<*fully qualified type name*> are recommended for managed types.</span></span> <span data-ttu-id="8e180-111">Les chaînes au format \< *nom bibliothèque de types*>, \< *nom de type*> sont recommandées pour les types COM.</span><span class="sxs-lookup"><span data-stu-id="8e180-111">Strings in the format \<*type library name*>, \<*type name*> are recommended for COM types.</span></span>  
  
 <span data-ttu-id="8e180-112">Une fois que le type est publié, ne modifiez pas le nom canonique d’un type.</span><span class="sxs-lookup"><span data-stu-id="8e180-112">Do not change the canonical name for a type after the type is published.</span></span> <span data-ttu-id="8e180-113">Modification du nom complet pour un type dans une future version d’une composant rompt la compatibilité entre les clients qui utilisent déjà le type.</span><span class="sxs-lookup"><span data-stu-id="8e180-113">Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent (string name, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent(string name, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteEventInfoContract ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetEvent : string * System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Automation.IRemoteEventInfoContract" Usage="iRemoteTypeContract.GetEvent (name, bindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteEventInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8e180-114">Nom d'un événement du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-114">The name of an event of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="8e180-115">Combinaison d'opérations de bits de valeurs <see cref="T:System.Reflection.BindingFlags" /> qui spécifie comment rechercher les propriétés pour l'événement.</span><span class="sxs-lookup"><span data-stu-id="8e180-115">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the event.</span></span></param>
        <summary><span data-ttu-id="8e180-116">Retourne un <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> qui fournit l'accès à un événement spécifié du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-116">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> that provides access to a specified event of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="8e180-117"><see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> qui fournit l'accès à l'événement spécifié, s'il est trouvé ; sinon <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8e180-117">An <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> that provides access to the specified event, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt; GetEvents (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt; GetEvents(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteEventInfoContract ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt;" Usage="iRemoteTypeContract.GetEvents bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="8e180-118">Combinaison d'opérations de bits de valeurs <see cref="T:System.Reflection.BindingFlags" /> qui spécifie comment rechercher les propriétés pour les événements.</span><span class="sxs-lookup"><span data-stu-id="8e180-118">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the events.</span></span></param>
        <summary><span data-ttu-id="8e180-119">Retourne une collection d'objets <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> qui fournit l'accès aux événements spécifiés du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-119">Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> objects that provides access to the specified events of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="8e180-120"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> d'objets <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> qui fournit l'accès aux événements qui correspondent aux contraintes de liaison spécifiées ; sinon, <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> vide.</span><span class="sxs-lookup"><span data-stu-id="8e180-120">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> objects that provides access to the events that match the specified binding constraints; otherwise, an empty <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField (string name, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField(string name, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteFieldInfoContract ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Automation.IRemoteFieldInfoContract" Usage="iRemoteTypeContract.GetField (name, bindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteFieldInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8e180-121">Nom d'un champ du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-121">The name of a field of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="8e180-122">Combinaison d'opérations de bits de valeurs <see cref="T:System.Reflection.BindingFlags" /> qui spécifie comment rechercher les propriétés pour le champ.</span><span class="sxs-lookup"><span data-stu-id="8e180-122">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the field.</span></span></param>
        <summary><span data-ttu-id="8e180-123">Retourne un <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> qui fournit l'accès à un champ spécifié du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-123">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> that provides access to a specified field of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="8e180-124"><see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> qui fournit l'accès au champ spécifié, s'il est trouvé ; sinon <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8e180-124">An <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> that provides access to the specified field, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt; GetFields (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt; GetFields(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteFieldInfoContract ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt;" Usage="iRemoteTypeContract.GetFields bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="8e180-125">Combinaison d'opérations de bits de valeurs <see cref="T:System.Reflection.BindingFlags" /> qui spécifie comment rechercher les propriétés pour les champs.</span><span class="sxs-lookup"><span data-stu-id="8e180-125">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the fields.</span></span></param>
        <summary><span data-ttu-id="8e180-126">Retourne une collection d'objets <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> qui fournit l'accès aux champs spécifiés du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-126">Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> objects that provides access to the specified fields of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="8e180-127"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> d'objets <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> qui fournit l'accès aux champs qui correspondent aux contraintes de liaison spécifiées ; sinon, <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> vide.</span><span class="sxs-lookup"><span data-stu-id="8e180-127">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> objects that provides access to the fields that match the specified binding constraints; otherwise, an empty <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterface (canonicalName As String) As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetInterface(System::String ^ canonicalName);" />
      <MemberSignature Language="F#" Value="abstract member GetInterface : string -&gt; System.AddIn.Contract.Automation.IRemoteTypeContract" Usage="iRemoteTypeContract.GetInterface canonicalName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName"><span data-ttu-id="8e180-128">Nom complet d'une interface implémentée par le <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-128">The canonical name of an interface that is implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <summary><span data-ttu-id="8e180-129">Retourne une interface implémentée par le <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-129">Returns an interface that is implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="8e180-130"><see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> qui représente l'interface avec le nom canonique spécifié que ce <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> implémente.</span><span class="sxs-lookup"><span data-stu-id="8e180-130">An <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that represents the interface with the specified canonical name that this <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> implements.</span></span> <span data-ttu-id="8e180-131"><see langword="null" /> si ce <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> n'implémente pas d'interface avec le nom canonique spécifié.</span><span class="sxs-lookup"><span data-stu-id="8e180-131"><see langword="null" /> if this <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> does not implement an interface with the specified canonical name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e180-132">Un nom canonique est un nom globalement unique, tel qu’un GUID.</span><span class="sxs-lookup"><span data-stu-id="8e180-132">A canonical name is a globally unique name, such as a GUID.</span></span> <span data-ttu-id="8e180-133">Les chaînes au format \< *nom de l’assembly*>, \< *nom de type qualifié complet*> sont recommandées pour les types managés.</span><span class="sxs-lookup"><span data-stu-id="8e180-133">Strings in the format \<*assembly name*>, \<*fully qualified type name*> are recommended for managed types.</span></span> <span data-ttu-id="8e180-134">Les chaînes au format \< *nom bibliothèque de types*>, \< *nom de type*> sont recommandées pour les types COM.</span><span class="sxs-lookup"><span data-stu-id="8e180-134">Strings in the format \<*type library name*>, \<*type name*> are recommended for COM types.</span></span>  
  
 <span data-ttu-id="8e180-135">Une fois que le type est publié, ne modifiez pas le nom canonique d’un type.</span><span class="sxs-lookup"><span data-stu-id="8e180-135">Do not change the canonical name for a type after the type is published.</span></span> <span data-ttu-id="8e180-136">Modification du nom complet pour un type dans une future version d’une composant rompt la compatibilité entre les clients qui utilisent déjà le type.</span><span class="sxs-lookup"><span data-stu-id="8e180-136">Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterfaces () As IArrayContract(Of IRemoteTypeContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ GetInterfaces();" />
      <MemberSignature Language="F#" Value="abstract member GetInterfaces : unit -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" Usage="iRemoteTypeContract.GetInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e180-137">Retourne les interfaces implémentées par le <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-137">Returns the interfaces that are implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="8e180-138"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> d'objets <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> qui représentent toutes les interfaces implémentées par le <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-138">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> objects that represent all the interfaces that are implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt; GetMember (string name, System.Reflection.MemberTypes memberTypes, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.IContract&gt; GetMember(string name, valuetype System.Reflection.MemberTypes memberTypes, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::IContract ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes memberTypes, System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.MemberTypes * System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;" Usage="iRemoteTypeContract.GetMember (name, memberTypes, bindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="memberTypes" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8e180-139">Nom d'un membre du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-139">The name of a member of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span> <span data-ttu-id="8e180-140">Le nom peut représenter plusieurs membres qui ont le même nom.</span><span class="sxs-lookup"><span data-stu-id="8e180-140">The name can represent multiple members that have the same name.</span></span></param>
        <param name="memberTypes"><span data-ttu-id="8e180-141">Combinaison d'opérations de bits de valeurs <see cref="T:System.Reflection.MemberTypes" /> qui spécifie les membres à rechercher.</span><span class="sxs-lookup"><span data-stu-id="8e180-141">A bitwise combination of the <see cref="T:System.Reflection.MemberTypes" /> values that specifies the members to search for.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="8e180-142">Combinaison d'opérations de bits de valeurs <see cref="T:System.Reflection.BindingFlags" /> qui spécifie comment rechercher les membres.</span><span class="sxs-lookup"><span data-stu-id="8e180-142">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the members.</span></span></param>
        <summary><span data-ttu-id="8e180-143">Retourne une collection d'objets <see cref="T:System.AddIn.Contract.IContract" /> qui fournit l'accès à tous les membres spécifiés du type membre spécifié dans le <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif, à l'aide des contraintes de liaison spécifiées.</span><span class="sxs-lookup"><span data-stu-id="8e180-143">Returns a collection of <see cref="T:System.AddIn.Contract.IContract" /> objects that provides access to all the specified members of the specified member type in the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, using the specified binding constraints.</span></span></summary>
        <returns><span data-ttu-id="8e180-144"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> d'objets <see cref="T:System.AddIn.Contract.IContract" /> qui représentent les membres du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif qui a le nom spécifié et qui répond aux critères spécifiés par les paramètres <paramref name="memberTypes" /> et <paramref name="bindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="8e180-144">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.IContract" /> objects that represent the members of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that have the specified name and that meet the criteria specified by the <paramref name="memberTypes" /> and <paramref name="bindingFlags" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e180-145">Cette méthode peut être utilisée pour obtenir un seul membre, ou pour obtenir plusieurs membres qui ont le même nom, telles que les surcharges de constructeur ou la méthode.</span><span class="sxs-lookup"><span data-stu-id="8e180-145">This method can be used to get a single member, or to get multiple members that have the same name, such as constructor or method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt; GetMembers (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.IContract&gt; GetMembers(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::IContract ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;" Usage="iRemoteTypeContract.GetMembers bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="8e180-146">Combinaison d'opérations de bits de valeurs <see cref="T:System.Reflection.BindingFlags" /> qui spécifie comment rechercher les membres.</span><span class="sxs-lookup"><span data-stu-id="8e180-146">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the members.</span></span></param>
        <summary><span data-ttu-id="8e180-147">Retourne une collection d'objets <see cref="T:System.AddIn.Contract.IContract" /> qui fournit l'accès à tous les membres du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif qui correspondent aux contraintes de liaison spécifiées.</span><span class="sxs-lookup"><span data-stu-id="8e180-147">Returns a collection of <see cref="T:System.AddIn.Contract.IContract" /> objects that provides access to all the members in the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that match the specified binding constraints.</span></span></summary>
        <returns><span data-ttu-id="8e180-148"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> d'objets <see cref="T:System.AddIn.Contract.IContract" /> qui fournit l'accès aux membres du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif qui remplit les contraintes de liaison spécifiées.</span><span class="sxs-lookup"><span data-stu-id="8e180-148">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.IContract" /> objects that provides access to the members of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that meet the specified binding constraints.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteMethodInfoContract ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ remoteTypes);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; -&gt; System.AddIn.Contract.Automation.IRemoteMethodInfoContract" Usage="iRemoteTypeContract.GetMethod (name, bindingFlags, remoteTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteMethodInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="remoteTypes" Type="System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8e180-149">Nom d'une méthode du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-149">The name of a method of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="8e180-150">Combinaison d'opérations de bits de valeurs <see cref="T:System.Reflection.BindingFlags" /> qui spécifie comment rechercher les propriétés pour la méthode.</span><span class="sxs-lookup"><span data-stu-id="8e180-150">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the method.</span></span></param>
        <param name="remoteTypes"><span data-ttu-id="8e180-151"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> d'objets <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> qui représentent le nombre, l'ordre et le type des paramètres de la méthode à obtenir.</span><span class="sxs-lookup"><span data-stu-id="8e180-151">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> objects that represent the number, order, and type of the parameters for the method to get.</span></span></param>
        <summary><span data-ttu-id="8e180-152">Retourne un <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> qui fournit l'accès à une méthode spécifiée du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-152">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> that provides access to a specified method of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="8e180-153"><see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> qui fournit l'accès à la méthode spécifiée, si elle est trouvée ; sinon <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8e180-153">An <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> that provides access to the specified method, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt; GetMethods (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt; GetMethods(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteMethodInfoContract ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt;" Usage="iRemoteTypeContract.GetMethods bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="8e180-154">Combinaison d'opérations de bits de valeurs <see cref="T:System.Reflection.BindingFlags" /> qui spécifie comment rechercher les propriétés pour les méthodes.</span><span class="sxs-lookup"><span data-stu-id="8e180-154">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the methods.</span></span></param>
        <summary><span data-ttu-id="8e180-155">Retourne une collection d'objets <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> qui fournit l'accès aux méthodes spécifiées du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-155">Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> objects that provides access to the specified methods of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="8e180-156"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> d'objets <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> qui fournit l'accès aux méthodes qui remplissent les contraintes de liaison spécifiées.</span><span class="sxs-lookup"><span data-stu-id="8e180-156">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> objects that provides access to the methods that match the specified binding constraints.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt; GetProperties (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt; GetProperties(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemotePropertyInfoContract ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt;" Usage="iRemoteTypeContract.GetProperties bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="8e180-157">Combinaison d'opérations de bits de valeurs <see cref="T:System.Reflection.BindingFlags" /> qui spécifie comment rechercher les propriétés pour les propriétés.</span><span class="sxs-lookup"><span data-stu-id="8e180-157">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the properties.</span></span></param>
        <summary><span data-ttu-id="8e180-158">Retourne une collection d'objets <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> qui fournit l'accès aux propriétés spécifiées du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-158">Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> objects that provides access to the specified properties of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="8e180-159"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> d'objets <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> qui fournit l'accès aux propriétés qui remplissent les contraintes de liaison spécifiées.</span><span class="sxs-lookup"><span data-stu-id="8e180-159">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> objects that provides access to the properties that match the specified binding constraints.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemotePropertyInfoContract ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Automation::IRemoteTypeContract ^ remoteReturnType, System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ remoteTypes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.AddIn.Contract.Automation.IRemoteTypeContract * System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; -&gt; System.AddIn.Contract.Automation.IRemotePropertyInfoContract" Usage="iRemoteTypeContract.GetProperty (name, bindingFlags, remoteReturnType, remoteTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemotePropertyInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="remoteReturnType" Type="System.AddIn.Contract.Automation.IRemoteTypeContract" />
        <Parameter Name="remoteTypes" Type="System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8e180-160">Nom d'une propriété du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-160">The name of a property of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="8e180-161">Combinaison d'opérations de bits de valeurs <see cref="T:System.Reflection.BindingFlags" /> qui spécifie comment rechercher les propriétés pour la méthode.</span><span class="sxs-lookup"><span data-stu-id="8e180-161">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the method.</span></span></param>
        <param name="remoteReturnType"><span data-ttu-id="8e180-162"><see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> qui spécifie le type de retour de la propriété.</span><span class="sxs-lookup"><span data-stu-id="8e180-162">An <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that specifies the return type of the property.</span></span></param>
        <param name="remoteTypes"><span data-ttu-id="8e180-163"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> d'objets <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> qui représentent les paramètres de la propriété spécifiée.</span><span class="sxs-lookup"><span data-stu-id="8e180-163">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> objects that represent the parameters for the specified property.</span></span></param>
        <summary><span data-ttu-id="8e180-164">Retourne un <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> qui fournit l'accès à une propriété spécifiée du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-164">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> that provides access to a specified property of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="8e180-165"><see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> qui fournit l'accès à la propriété spécifiée, si elle est trouvée ; sinon <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8e180-165">An <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> that provides access to the specified property, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeData">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.RemoteTypeData GetTypeData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.Automation.RemoteTypeData GetTypeData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeData () As RemoteTypeData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::RemoteTypeData GetTypeData();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeData : unit -&gt; System.AddIn.Contract.Automation.RemoteTypeData" Usage="iRemoteTypeContract.GetTypeData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.RemoteTypeData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e180-166">Retourne des informations de type à propos de l'objet que le <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif identifie.</span><span class="sxs-lookup"><span data-stu-id="8e180-166">Returns type information about the object that the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> identifies.</span></span></summary>
        <returns><span data-ttu-id="8e180-167"><see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> qui contient des informations de type à propos de l'objet que le <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif identifie.</span><span class="sxs-lookup"><span data-stu-id="8e180-167">A <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> that contains information about the object that the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> identifies.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument InvokeMember (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteObjectContract target, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int localeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument InvokeMember(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Automation.IRemoteObjectContract target, class System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int32 localeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument InvokeMember(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Automation::IRemoteObjectContract ^ target, System::AddIn::Contract::Collections::IRemoteArgumentArrayContract ^ remoteArgs, cli::array &lt;bool&gt; ^ remoteArgModifiers, int localeId);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.AddIn.Contract.Automation.IRemoteObjectContract * System.AddIn.Contract.Collections.IRemoteArgumentArrayContract * bool[] * int -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteTypeContract.InvokeMember (name, bindingFlags, target, remoteArgs, remoteArgModifiers, localeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="target" Type="System.AddIn.Contract.Automation.IRemoteObjectContract" />
        <Parameter Name="remoteArgs" Type="System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" />
        <Parameter Name="remoteArgModifiers" Type="System.Boolean[]" />
        <Parameter Name="localeId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8e180-168">Nom du membre à appeler.</span><span class="sxs-lookup"><span data-stu-id="8e180-168">The name of the member to invoke.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="8e180-169">Combinaison d'opérations de bits de valeurs <see cref="T:System.Reflection.BindingFlags" /> qui spécifie comment rechercher le membre.</span><span class="sxs-lookup"><span data-stu-id="8e180-169">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the member.</span></span></param>
        <param name="target"><span data-ttu-id="8e180-170"><see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> sur lequel le membre spécifié doit être appelé.</span><span class="sxs-lookup"><span data-stu-id="8e180-170">The <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> on which to invoke the specified member.</span></span></param>
        <param name="remoteArgs"><span data-ttu-id="8e180-171"><see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> qui contient les arguments à passer au membre à appeler.</span><span class="sxs-lookup"><span data-stu-id="8e180-171">An <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> that contains the arguments to pass to the member to invoke.</span></span></param>
        <param name="remoteArgModifiers"><span data-ttu-id="8e180-172">Tableau de valeurs booléennes qui indiquent si chacune des valeurs <paramref name="remoteArgs" /> est passée par référence.</span><span class="sxs-lookup"><span data-stu-id="8e180-172">An array of Boolean values that indicate whether each of the <paramref name="remoteArgs" /> values is passed by reference.</span></span></param>
        <param name="localeId"><span data-ttu-id="8e180-173">ID de paramètres régionaux à utiliser pour les conversions spécifiques aux paramètres régionaux qui peuvent être exécutées par le membre appelé.</span><span class="sxs-lookup"><span data-stu-id="8e180-173">A locale ID to use for locale-specific conversions that might be performed by the member being invoked.</span></span></param>
        <summary><span data-ttu-id="8e180-174">Appelle le membre spécifié du <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> actif.</span><span class="sxs-lookup"><span data-stu-id="8e180-174">Invokes the specified member of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="8e180-175"><see cref="T:System.AddIn.Contract.RemoteArgument" /> qui représente la valeur de retour du membre appelé.</span><span class="sxs-lookup"><span data-stu-id="8e180-175">A <see cref="T:System.AddIn.Contract.RemoteArgument" /> that represents the return value of the invoked member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e180-176">Le `remoteArgModifiers` paramètre est utilisé uniquement pour les composants qui sont écrits à l’aide de COM.</span><span class="sxs-lookup"><span data-stu-id="8e180-176">The `remoteArgModifiers` parameter is used only for components that are written using COM.</span></span> <span data-ttu-id="8e180-177">Chaque valeur dans le `remoteArgModifiers` paramètre indique si la valeur correspondante dans le `remoteArgs` paramètre est passé par référence.</span><span class="sxs-lookup"><span data-stu-id="8e180-177">Each value in the `remoteArgModifiers` parameter indicates whether the corresponding value in the `remoteArgs` parameter is passed by reference.</span></span> <span data-ttu-id="8e180-178">La longueur de `remoteArgModifiers` doit être le même que la longueur de `remoteArgs`.</span><span class="sxs-lookup"><span data-stu-id="8e180-178">The length of `remoteArgModifiers` should be the same as the length of `remoteArgs`.</span></span>  
  
 <span data-ttu-id="8e180-179">Si vous transmettez `null` pour `remoteArgModifiers`, cette méthode utilise la logique par défaut pour déterminer si un argument est passé par référence.</span><span class="sxs-lookup"><span data-stu-id="8e180-179">If you pass `null` for `remoteArgModifiers`, this method uses default logic to determine whether an argument is passed by reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>