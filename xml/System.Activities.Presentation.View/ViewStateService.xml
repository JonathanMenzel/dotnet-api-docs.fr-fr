<Type Name="ViewStateService" FullName="System.Activities.Presentation.View.ViewStateService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="267468a00fdd54a77dcdc8e2daf0217761d34d87" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30357343" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ViewStateService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ViewStateService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.ViewStateService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ViewStateService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateService abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="70f58-101">Permet de conserver et d'accéder à toutes les valeurs de données associées aux composants d'interaction de l'utilisateur d'une application de workflow, et ce à un moment précis de l'exécution d'une application de workflow.</span>
      <span class="sxs-lookup">
        <span data-stu-id="70f58-101">Enables the preservation and accessing of all data values associated with the user interaction components of a workflow application, at a particular point in time in the running of a workflow application.</span>
      </span>
      <span data-ttu-id="70f58-102">
        <see cref="T:System.Activities.Presentation.View.ViewStateService" /> stocke des états d'affichage pour les éléments de modèles.</span>
      <span class="sxs-lookup">
        <span data-stu-id="70f58-102">A <see cref="T:System.Activities.Presentation.View.ViewStateService" /> stores view states for model items.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70f58-103">Cela se révèle particulièrement utile pour que l'état puisse continuer d'être récupéré lorsque le contrôle de l'application est accompagné de publications.</span><span class="sxs-lookup"><span data-stu-id="70f58-103">This is useful so that the state can keep being retrieved when control of the application goes and comes with postbacks.</span></span> <span data-ttu-id="70f58-104"><xref:System.Activities.Presentation.View.ViewStateService> est une classe abstraite.</span><span class="sxs-lookup"><span data-stu-id="70f58-104"><xref:System.Activities.Presentation.View.ViewStateService> is an abstract class.</span></span> <span data-ttu-id="70f58-105">Les classes dérivées doivent stocker des états d'affichage lorsque <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> est appelée et les récupérer lorsque c'est <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> qui est appelée.</span><span class="sxs-lookup"><span data-stu-id="70f58-105">Derived classes must store view states when <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> is called, and retrieve them when <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> is called.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewStateService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ViewStateService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70f58-106">Initialise une nouvelle instance de la classe <see cref="T:System.Activities.Presentation.View.ViewStateService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-106">Initiates a new instance of the <see cref="T:System.Activities.Presentation.View.ViewStateService" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveViewState">
      <MemberSignature Language="C#" Value="public abstract bool RemoveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RemoveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="70f58-107">Activité de workflow <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associée à l'état d'affichage actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-107">The workflow activity <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associated with the current view state.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="70f58-108">
            <see cref="T:System.String" /> qui identifie l'élément d'état d'affichage stocké.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-108">The <see cref="T:System.String" /> that identifies the view state item that is stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70f58-109">Lors d'une implémentation dans une classe dérivée, supprime l'état d'affichage représenté par la clé spécifiée et associé à l'élément de modèle spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-109">When implemented in a derived class, removes the view state represented by the specified key and associated with the specified model item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70f58-110">
            <see langword="true" /> si l'état d'affichage a été supprimé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-110">
              <see langword="true" /> if the view state was removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveAllViewState">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.Dictionary&lt;string,object&gt; RetrieveAllViewState (System.Activities.Presentation.Model.ModelItem modelItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; RetrieveAllViewState(class System.Activities.Presentation.Model.ModelItem modelItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ RetrieveAllViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="70f58-111">
            <see cref="T:System.Activities.Presentation.Model.ModelItem" /> auquel s'applique l'état d'affichage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-111">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70f58-112">Retourne un aspect de l'état d'affichage stocké pour le <paramref name="modelItem" /> spécifié, correspondant à la <paramref name="key" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-112">Returns an aspect of the view state that was stored for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70f58-113">Retourne <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-113">Returns <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70f58-114">Appelle <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> pour stocker initialement les informations d'états d'affichage afin qu'elles puissent être récupérées.</span><span class="sxs-lookup"><span data-stu-id="70f58-114">Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveViewState">
      <MemberSignature Language="C#" Value="public abstract object RetrieveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RetrieveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ RetrieveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="70f58-115">Activité de workflow <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associée à l'état d'affichage actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-115">The workflow activity <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associated with the current view state.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="70f58-116">
            <see cref="T:System.String" /> qui identifie l'aspect de l'état d'affichage à récupérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-116">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70f58-117">Récupère un aspect de l'état d'affichage pour le <paramref name="modelItem" /> spécifié, correspondant à la <paramref name="key" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-117">Retrieves an aspect of the view state for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70f58-118">Aspect de l'état d'affichage sous la forme d'un objet <see cref="T:System.Object" /> ou d'une valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-118">The aspect of the view state as an <see cref="T:System.Object" />,or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70f58-119">Appelle <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> pour stocker initialement les informations d'états d'affichage afin qu'elles puissent être récupérées.</span><span class="sxs-lookup"><span data-stu-id="70f58-119">Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewState">
      <MemberSignature Language="C#" Value="public abstract void StoreViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="70f58-120">
            <see cref="T:System.Activities.Presentation.Model.ModelItem" /> auquel s'applique l'état d'affichage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-120">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="70f58-121">
            <see cref="T:System.String" /> qui identifie l'aspect de l'état d'affichage à stocker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-121">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be stored.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="70f58-122">Objet <see cref="T:System.Object" /> à stocker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-122">An <see cref="T:System.Object" /> to be stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70f58-123">Stocke un aspect de l'état d'affichage pour le <paramref name="modelItem" /> spécifié, correspondant à la <paramref name="key" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-123">Stores an aspect of the view state for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70f58-124">Vous pouvez récupérer l'objet stocké en appelant <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> et en passant les mêmes valeurs pour`modelItem` et `key`.</span><span class="sxs-lookup"><span data-stu-id="70f58-124">You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewStateWithUndo">
      <MemberSignature Language="C#" Value="public abstract void StoreViewStateWithUndo (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewStateWithUndo(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewStateWithUndo(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="70f58-125">
            <see cref="T:System.Activities.Presentation.Model.ModelItem" /> auquel s'applique l'état d'affichage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-125">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="70f58-126">
            <see cref="T:System.String" /> qui identifie l'aspect de l'état d'affichage à stocker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-126">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be stored.</span>
          </span>
          <span data-ttu-id="70f58-127">
            <see cref="T:System.String" /> qui identifie l'élément d'état d'affichage stocké.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-127">The <see cref="T:System.String" /> that identifies the view state item that is stored.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="70f58-128">Objet <see cref="T:System.Object" /> à stocker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-128">An <see cref="T:System.Object" /> to be stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70f58-129">Lors d'une implémentation dans une classe dérivée, enregistre le paramètre actuel de l'élément représenté par la clé spécifiée afin d'être disponible pour une opération d'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-129">When implemented in a derived class, records the current setting of the item represented by the specified key so that it is available for an undo operation.</span>
          </span>
          <span data-ttu-id="70f58-130">L'élément représenté par la clé spécifiée est alors stocké dans l'état d'affichage de l'élément de modèle spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-130">The item represented by the specified key is then stored in the view state of the specified model item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70f58-131">Vous pouvez récupérer l'objet stocké en appelant <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> et en passant les mêmes valeurs pour`modelItem` et `key`.</span><span class="sxs-lookup"><span data-stu-id="70f58-131">You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoableViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event UndoableViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ UndoableViewStateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70f58-132">Lors d'une implémentation dans une classe dérivée, déclare un événement qui signale qu'une modification a été apportée à l'état d'affichage irréalisable du contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-132">When implemented in a derived class, declares an event that signals that a change has been made to the control’s undoable view state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.ViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ ViewStateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70f58-133">Lors d'une implémentation dans une classe dérivée, déclare un événement qui signale qu'une modification a été apportée à l'état d'affichage du contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70f58-133">When implemented in a derived class, declares an event that signals that a change has been made to the control’s view state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>