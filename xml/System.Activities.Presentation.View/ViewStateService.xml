<Type Name="ViewStateService" FullName="System.Activities.Presentation.View.ViewStateService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="267468a00fdd54a77dcdc8e2daf0217761d34d87" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30357343" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ViewStateService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ViewStateService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.ViewStateService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ViewStateService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateService abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Permet de conserver et d'accéder à toutes les valeurs de données associées aux composants d'interaction de l'utilisateur d'une application de workflow, et ce à un moment précis de l'exécution d'une application de workflow. <see cref="T:System.Activities.Presentation.View.ViewStateService" /> stocke des états d'affichage pour les éléments de modèles.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela se révèle particulièrement utile pour que l'état puisse continuer d'être récupéré lorsque le contrôle de l'application est accompagné de publications. <xref:System.Activities.Presentation.View.ViewStateService> est une classe abstraite. Les classes dérivées doivent stocker des états d'affichage lorsque <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> est appelée et les récupérer lorsque c'est <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> qui est appelée.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewStateService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ViewStateService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Activities.Presentation.View.ViewStateService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveViewState">
      <MemberSignature Language="C#" Value="public abstract bool RemoveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RemoveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem">Activité de workflow <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associée à l'état d'affichage actuel.</param>
        <param name="key">
          <see cref="T:System.String" /> qui identifie l'élément d'état d'affichage stocké.</param>
        <summary>Lors d'une implémentation dans une classe dérivée, supprime l'état d'affichage représenté par la clé spécifiée et associé à l'élément de modèle spécifié.</summary>
        <returns>
          <see langword="true" /> si l'état d'affichage a été supprimé ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveAllViewState">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.Dictionary&lt;string,object&gt; RetrieveAllViewState (System.Activities.Presentation.Model.ModelItem modelItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; RetrieveAllViewState(class System.Activities.Presentation.Model.ModelItem modelItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ RetrieveAllViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <see cref="T:System.Activities.Presentation.Model.ModelItem" /> auquel s'applique l'état d'affichage.</param>
        <summary>Retourne un aspect de l'état d'affichage stocké pour le <paramref name="modelItem" /> spécifié, correspondant à la <paramref name="key" /> spécifiée.</summary>
        <returns>Retourne <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelle <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> pour stocker initialement les informations d'états d'affichage afin qu'elles puissent être récupérées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveViewState">
      <MemberSignature Language="C#" Value="public abstract object RetrieveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RetrieveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ RetrieveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem">Activité de workflow <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associée à l'état d'affichage actuel.</param>
        <param name="key">
          <see cref="T:System.String" /> qui identifie l'aspect de l'état d'affichage à récupérer.</param>
        <summary>Récupère un aspect de l'état d'affichage pour le <paramref name="modelItem" /> spécifié, correspondant à la <paramref name="key" /> spécifiée.</summary>
        <returns>Aspect de l'état d'affichage sous la forme d'un objet <see cref="T:System.Object" /> ou d'une valeur <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelle <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> pour stocker initialement les informations d'états d'affichage afin qu'elles puissent être récupérées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewState">
      <MemberSignature Language="C#" Value="public abstract void StoreViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <see cref="T:System.Activities.Presentation.Model.ModelItem" /> auquel s'applique l'état d'affichage.</param>
        <param name="key">
          <see cref="T:System.String" /> qui identifie l'aspect de l'état d'affichage à stocker.</param>
        <param name="value">Objet <see cref="T:System.Object" /> à stocker.</param>
        <summary>Stocke un aspect de l'état d'affichage pour le <paramref name="modelItem" /> spécifié, correspondant à la <paramref name="key" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez récupérer l'objet stocké en appelant <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> et en passant les mêmes valeurs pour`modelItem` et `key`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewStateWithUndo">
      <MemberSignature Language="C#" Value="public abstract void StoreViewStateWithUndo (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewStateWithUndo(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewStateWithUndo(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <see cref="T:System.Activities.Presentation.Model.ModelItem" /> auquel s'applique l'état d'affichage.</param>
        <param name="key">
          <see cref="T:System.String" /> qui identifie l'aspect de l'état d'affichage à stocker. <see cref="T:System.String" /> qui identifie l'élément d'état d'affichage stocké.</param>
        <param name="value">Objet <see cref="T:System.Object" /> à stocker.</param>
        <summary>Lors d'une implémentation dans une classe dérivée, enregistre le paramètre actuel de l'élément représenté par la clé spécifiée afin d'être disponible pour une opération d'annulation. L'élément représenté par la clé spécifiée est alors stocké dans l'état d'affichage de l'élément de modèle spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez récupérer l'objet stocké en appelant <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> et en passant les mêmes valeurs pour`modelItem` et `key`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoableViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event UndoableViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ UndoableViewStateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lors d'une implémentation dans une classe dérivée, déclare un événement qui signale qu'une modification a été apportée à l'état d'affichage irréalisable du contrôle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.ViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ ViewStateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lors d'une implémentation dans une classe dérivée, déclare un événement qui signale qu'une modification a été apportée à l'état d'affichage du contrôle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>