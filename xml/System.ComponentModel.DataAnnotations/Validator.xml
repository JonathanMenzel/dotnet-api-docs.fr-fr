<Type Name="Validator" FullName="System.ComponentModel.DataAnnotations.Validator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53176491918ad40bd5a507063623064524630290" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56050041" /></Metadata><TypeSignature Language="C#" Value="public static class Validator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Validator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.Validator" />
  <TypeSignature Language="VB.NET" Value="Public Class Validator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Validator abstract sealed" />
  <TypeSignature Language="F#" Value="type Validator = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="368b5-101">Définit une classe d'assistance qui peut être utilisée pour valider des objets, des propriétés et des méthodes lorsqu'elle est incluse dans leurs attributs <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> associés.</span><span class="sxs-lookup"><span data-stu-id="368b5-101">Defines a helper class that can be used to validate objects, properties, and methods when it is included in their associated <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> attributes.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="TryValidateObject">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="368b5-102">Détermine si l'objet spécifié est valide.</span><span class="sxs-lookup"><span data-stu-id="368b5-102">Determines whether the specified object is valid.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryValidateObject">
      <MemberSignature Language="C#" Value="public static bool TryValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryValidateObject(System::Object ^ instance, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::ICollection&lt;System::ComponentModel::DataAnnotations::ValidationResult ^&gt; ^ validationResults);" />
      <MemberSignature Language="F#" Value="static member TryValidateObject : obj * System.ComponentModel.DataAnnotations.ValidationContext * System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; -&gt; bool" Usage="System.ComponentModel.DataAnnotations.Validator.TryValidateObject (instance, validationContext, validationResults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="368b5-103">Objet à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-103">The object to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="368b5-104">Contexte qui décrit l'objet à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-104">The context that describes the object to validate.</span></span></param>
        <param name="validationResults"><span data-ttu-id="368b5-105">Collection destinée à contenir les validations ayant échoué.</span><span class="sxs-lookup"><span data-stu-id="368b5-105">A collection to hold each failed validation.</span></span></param>
        <summary><span data-ttu-id="368b5-106">Détermine si l'objet spécifié est valide à l'aide du contexte de validation et de la collection des résultats de validation.</span><span class="sxs-lookup"><span data-stu-id="368b5-106">Determines whether the specified object is valid using the validation context and validation results collection.</span></span></summary>
        <returns><span data-ttu-id="368b5-107"><see langword="true" /> si l'objet est valide ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368b5-107"><see langword="true" /> if the object validates; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368b5-108">Cette méthode évalue chaque <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instance qui est attaché au type d’objet.</span><span class="sxs-lookup"><span data-stu-id="368b5-108">This method evaluates each <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instance that is attached to the object type.</span></span> <span data-ttu-id="368b5-109">Il vérifie également si chaque propriété qui est marquée avec <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> est fourni.</span><span class="sxs-lookup"><span data-stu-id="368b5-109">It also checks whether each property that is marked with <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> is provided.</span></span> <span data-ttu-id="368b5-110">Il n’est pas le cas récursivement valider les valeurs de propriété de l’objet.</span><span class="sxs-lookup"><span data-stu-id="368b5-110">It does not recursively validate the property values of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="368b5-111"><paramref name="instance" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="368b5-111"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryValidateObject">
      <MemberSignature Language="C#" Value="public static bool TryValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, bool validateAllProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, bool validateAllProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryValidateObject(System::Object ^ instance, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::ICollection&lt;System::ComponentModel::DataAnnotations::ValidationResult ^&gt; ^ validationResults, bool validateAllProperties);" />
      <MemberSignature Language="F#" Value="static member TryValidateObject : obj * System.ComponentModel.DataAnnotations.ValidationContext * System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; * bool -&gt; bool" Usage="System.ComponentModel.DataAnnotations.Validator.TryValidateObject (instance, validationContext, validationResults, validateAllProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
        <Parameter Name="validateAllProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="368b5-112">Objet à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-112">The object to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="368b5-113">Contexte qui décrit l'objet à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-113">The context that describes the object to validate.</span></span></param>
        <param name="validationResults"><span data-ttu-id="368b5-114">Collection destinée à contenir les validations ayant échoué.</span><span class="sxs-lookup"><span data-stu-id="368b5-114">A collection to hold each failed validation.</span></span></param>
        <param name="validateAllProperties"><span data-ttu-id="368b5-115"><see langword="true" /> pour valider toutes les propriétés ; si <see langword="false" />, seuls les attributs requis sont validés.</span><span class="sxs-lookup"><span data-stu-id="368b5-115"><see langword="true" /> to validate all properties; if <see langword="false" />, only required attributes are validated.</span></span></param>
        <summary><span data-ttu-id="368b5-116">Détermine si l'objet spécifié est valide à l'aide du contexte de validation, de la collection des résultats de validation et d'une valeur qui spécifie s'il faut valider toutes les propriétés.</span><span class="sxs-lookup"><span data-stu-id="368b5-116">Determines whether the specified object is valid using the validation context, validation results collection, and a value that specifies whether to validate all properties.</span></span></summary>
        <returns><span data-ttu-id="368b5-117"><see langword="true" /> si l'objet est valide ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368b5-117"><see langword="true" /> if the object validates; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368b5-118">Cette méthode évalue chaque <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instance qui est attaché au type d’objet.</span><span class="sxs-lookup"><span data-stu-id="368b5-118">This method evaluates each <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instance that is attached to the object type.</span></span> <span data-ttu-id="368b5-119">Il vérifie également si chaque propriété qui est marquée avec <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> est fourni.</span><span class="sxs-lookup"><span data-stu-id="368b5-119">It also checks whether each property that is marked with <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> is provided.</span></span> <span data-ttu-id="368b5-120">Il valide les valeurs de propriété de l’objet si `validateAllProperties` est `true` mais pas de manière récursive ne valide les propriétés des objets retournés par les propriétés.</span><span class="sxs-lookup"><span data-stu-id="368b5-120">It validates the property values of the object if `validateAllProperties` is `true` but does not recursively validate properties of the objects returned by the properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="368b5-121"><paramref name="instance" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="368b5-121"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryValidateProperty">
      <MemberSignature Language="C#" Value="public static bool TryValidateProperty (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateProperty(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryValidateProperty(System::Object ^ value, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::ICollection&lt;System::ComponentModel::DataAnnotations::ValidationResult ^&gt; ^ validationResults);" />
      <MemberSignature Language="F#" Value="static member TryValidateProperty : obj * System.ComponentModel.DataAnnotations.ValidationContext * System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; -&gt; bool" Usage="System.ComponentModel.DataAnnotations.Validator.TryValidateProperty (value, validationContext, validationResults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="368b5-122">Valeur à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-122">The value to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="368b5-123">Contexte qui décrit la propriété à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-123">The context that describes the property to validate.</span></span></param>
        <param name="validationResults"><span data-ttu-id="368b5-124">Collection destinée à contenir les validations ayant échoué.</span><span class="sxs-lookup"><span data-stu-id="368b5-124">A collection to hold each failed validation.</span></span></param>
        <summary><span data-ttu-id="368b5-125">Valide la propriété.</span><span class="sxs-lookup"><span data-stu-id="368b5-125">Validates the property.</span></span></summary>
        <returns><span data-ttu-id="368b5-126"><see langword="true" /> si la propriété est valide ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368b5-126"><see langword="true" /> if the property validates; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368b5-127">Cette méthode teste chaque <xref:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute%2A> instance qui est associé à la propriété qui est identifiée par le `validationContext` paramètre.</span><span class="sxs-lookup"><span data-stu-id="368b5-127">This method tests each <xref:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute%2A> instance that is associated with the property that is identified by the `validationContext` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="368b5-128"><paramref name="value" /> ne peut pas être assignée à la propriété.</span><span class="sxs-lookup"><span data-stu-id="368b5-128"><paramref name="value" /> cannot be assigned to the property.</span></span>  
  
<span data-ttu-id="368b5-129">ou</span><span class="sxs-lookup"><span data-stu-id="368b5-129">-or-</span></span> 
 <span data-ttu-id="368b5-130"><paramref name="value" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="368b5-130"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryValidateValue">
      <MemberSignature Language="C#" Value="public static bool TryValidateValue (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateValue(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryValidateValue(System::Object ^ value, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::ICollection&lt;System::ComponentModel::DataAnnotations::ValidationResult ^&gt; ^ validationResults, System::Collections::Generic::IEnumerable&lt;System::ComponentModel::DataAnnotations::ValidationAttribute ^&gt; ^ validationAttributes);" />
      <MemberSignature Language="F#" Value="static member TryValidateValue : obj * System.ComponentModel.DataAnnotations.ValidationContext * System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; * seq&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; -&gt; bool" Usage="System.ComponentModel.DataAnnotations.Validator.TryValidateValue (value, validationContext, validationResults, validationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
        <Parameter Name="validationAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="368b5-131">Valeur à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-131">The value to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="368b5-132">Contexte qui décrit l'objet à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-132">The context that describes the object to validate.</span></span></param>
        <param name="validationResults"><span data-ttu-id="368b5-133">Collection qui contient les validations ayant échoué.</span><span class="sxs-lookup"><span data-stu-id="368b5-133">A collection to hold failed validations.</span></span></param>
        <param name="validationAttributes"><span data-ttu-id="368b5-134">Attributs de validation.</span><span class="sxs-lookup"><span data-stu-id="368b5-134">The validation attributes.</span></span></param>
        <summary><span data-ttu-id="368b5-135">Retourne une valeur qui indique si la valeur spécifiée est valide avec les attributs spécifiés.</span><span class="sxs-lookup"><span data-stu-id="368b5-135">Returns a value that indicates whether the specified value is valid with the specified attributes.</span></span></summary>
        <returns><span data-ttu-id="368b5-136"><see langword="true" /> si l'objet est valide ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368b5-136"><see langword="true" /> if the object validates; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368b5-137">Cette méthode teste chaque attribut de validation dans le `validationAttributes` paramètre contre le `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="368b5-137">This method tests each validation attribute in the `validationAttributes` parameter against the `value` parameter.</span></span> <span data-ttu-id="368b5-138">Si le `validationResults` paramètre n’est pas `null`, cette méthode ajoute un <xref:System.ComponentModel.DataAnnotations.ValidationResult> objet pour chaque échec de validation pour la validation de la collection des résultats.</span><span class="sxs-lookup"><span data-stu-id="368b5-138">If the `validationResults` parameter is not `null`, this method adds a <xref:System.ComponentModel.DataAnnotations.ValidationResult> object for each validation failure to the validation results collection.</span></span> <span data-ttu-id="368b5-139">Si le `validationResults` paramètre est `null`, cette méthode n’ajoute pas une <xref:System.ComponentModel.DataAnnotations.ValidationResult> objet à la collection.</span><span class="sxs-lookup"><span data-stu-id="368b5-139">If the `validationResults` parameter is `null`, this method does not add a <xref:System.ComponentModel.DataAnnotations.ValidationResult> object to the collection.</span></span> <span data-ttu-id="368b5-140">Si un <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribut est inclus dans le `validationAttributes` paramètre, le <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribut est évalué en premier.</span><span class="sxs-lookup"><span data-stu-id="368b5-140">If a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is included in the `validationAttributes` parameter, the <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is evaluated first.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateObject">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="368b5-141">Détermine si l'objet spécifié est valide.</span><span class="sxs-lookup"><span data-stu-id="368b5-141">Determines whether the specified object is valid.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateObject">
      <MemberSignature Language="C#" Value="public static void ValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateObject(System::Object ^ instance, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext);" />
      <MemberSignature Language="F#" Value="static member ValidateObject : obj * System.ComponentModel.DataAnnotations.ValidationContext -&gt; unit" Usage="System.ComponentModel.DataAnnotations.Validator.ValidateObject (instance, validationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="368b5-142">Objet à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-142">The object to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="368b5-143">Contexte qui décrit l'objet à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-143">The context that describes the object to validate.</span></span></param>
        <summary><span data-ttu-id="368b5-144">Détermine si l'objet spécifié est valide à l'aide du contexte de validation.</span><span class="sxs-lookup"><span data-stu-id="368b5-144">Determines whether the specified object is valid using the validation context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368b5-145">Cette méthode évalue chaque <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instance qui est attaché au type d’objet.</span><span class="sxs-lookup"><span data-stu-id="368b5-145">This method evaluates each <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instance that is attached to the object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="368b5-146">L'objet n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="368b5-146">The object is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="368b5-147"><paramref name="instance" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="368b5-147"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateObject">
      <MemberSignature Language="C#" Value="public static void ValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext, bool validateAllProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, bool validateAllProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateObject(System::Object ^ instance, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, bool validateAllProperties);" />
      <MemberSignature Language="F#" Value="static member ValidateObject : obj * System.ComponentModel.DataAnnotations.ValidationContext * bool -&gt; unit" Usage="System.ComponentModel.DataAnnotations.Validator.ValidateObject (instance, validationContext, validateAllProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validateAllProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="368b5-148">Objet à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-148">The object to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="368b5-149">Contexte qui décrit l'objet à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-149">The context that describes the object to validate.</span></span></param>
        <param name="validateAllProperties"><span data-ttu-id="368b5-150"><see langword="true" /> pour valider toutes les propriétés ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="368b5-150"><see langword="true" /> to validate all properties; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="368b5-151">Détermine si l'objet spécifié est valide à l'aide du contexte de validation et d'une valeur qui spécifie s'il faut valider toutes les propriétés.</span><span class="sxs-lookup"><span data-stu-id="368b5-151">Determines whether the specified object is valid using the validation context, and a value that specifies whether to validate all properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368b5-152">Cette méthode évalue chaque <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instance qui est attaché au type d’objet.</span><span class="sxs-lookup"><span data-stu-id="368b5-152">This method evaluates each <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instance that is attached to the object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="368b5-153"><paramref name="instance" /> n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="368b5-153"><paramref name="instance" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="368b5-154"><paramref name="instance" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="368b5-154"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateProperty">
      <MemberSignature Language="C#" Value="public static void ValidateProperty (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateProperty(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateProperty(System::Object ^ value, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext);" />
      <MemberSignature Language="F#" Value="static member ValidateProperty : obj * System.ComponentModel.DataAnnotations.ValidationContext -&gt; unit" Usage="System.ComponentModel.DataAnnotations.Validator.ValidateProperty (value, validationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="368b5-155">Valeur à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-155">The value to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="368b5-156">Contexte qui décrit la propriété à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-156">The context that describes the property to validate.</span></span></param>
        <summary><span data-ttu-id="368b5-157">Valide la propriété.</span><span class="sxs-lookup"><span data-stu-id="368b5-157">Validates the property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368b5-158">Cette méthode teste chaque <xref:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute%2A> instance qui est associé à la propriété identifiée par le `validationContext` paramètre.</span><span class="sxs-lookup"><span data-stu-id="368b5-158">This method tests each <xref:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute%2A> instance that is associated with the property identified by the `validationContext` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="368b5-159"><paramref name="value" /> ne peut pas être assignée à la propriété.</span><span class="sxs-lookup"><span data-stu-id="368b5-159"><paramref name="value" /> cannot be assigned to the property.</span></span></exception>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="368b5-160">Le paramètre <paramref name="value" /> n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="368b5-160">The <paramref name="value" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateValue">
      <MemberSignature Language="C#" Value="public static void ValidateValue (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateValue(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateValue(System::Object ^ value, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::IEnumerable&lt;System::ComponentModel::DataAnnotations::ValidationAttribute ^&gt; ^ validationAttributes);" />
      <MemberSignature Language="F#" Value="static member ValidateValue : obj * System.ComponentModel.DataAnnotations.ValidationContext * seq&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; -&gt; unit" Usage="System.ComponentModel.DataAnnotations.Validator.ValidateValue (value, validationContext, validationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="368b5-161">Valeur à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-161">The value to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="368b5-162">Contexte qui décrit l'objet à valider.</span><span class="sxs-lookup"><span data-stu-id="368b5-162">The context that describes the object to validate.</span></span></param>
        <param name="validationAttributes"><span data-ttu-id="368b5-163">Attributs de validation.</span><span class="sxs-lookup"><span data-stu-id="368b5-163">The validation attributes.</span></span></param>
        <summary><span data-ttu-id="368b5-164">Valide les attributs spécifiés.</span><span class="sxs-lookup"><span data-stu-id="368b5-164">Validates the specified attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368b5-165">Cette méthode teste chaque attribut de validation dans le `validationAttributes` paramètre contre le `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="368b5-165">This method tests each validation attribute in the `validationAttributes` parameter against the `value` parameter.</span></span>  <span data-ttu-id="368b5-166">Si un <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribut est inclus, le <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribut est évalué en premier.</span><span class="sxs-lookup"><span data-stu-id="368b5-166">If a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is included, the <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is evaluated first.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="368b5-167">Le paramètre <paramref name="validationContext" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="368b5-167">The <paramref name="validationContext" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="368b5-168">Le paramètre <paramref name="value" /> ne valide pas avec le paramètre <paramref name="validationAttributes" />.</span><span class="sxs-lookup"><span data-stu-id="368b5-168">The <paramref name="value" /> parameter does not validate with the <paramref name="validationAttributes" /> parameter.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>