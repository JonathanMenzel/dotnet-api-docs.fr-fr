<Type Name="ScaffoldTableAttribute" FullName="System.ComponentModel.DataAnnotations.ScaffoldTableAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9204e4c526786f1346b90a5d87e554d56f3c04e4" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51883428" /></Metadata><TypeSignature Language="C#" Value="public class ScaffoldTableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScaffoldTableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ScaffoldTableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScaffoldTableAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ScaffoldTableAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Spécifie si une classe ou une table de données utilise la structure.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La structure est le mécanisme de génération de modèles de page web basés sur des schémas de base de données. ASP.NET Dynamic Data utilise la génération de modèles automatique pour générer l’interface utilisateur Web qui permet à un utilisateur pour afficher et mettre à jour une base de données. Cette classe utilise le <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold%2A> propriété pour activer la structure des tables individuelles dans un Site Web Dynamic Data. La structure améliore l’infrastructure de page ASP.NET en affichant les pages selon le modèle de données sans pages physiques requises de manière dynamique.  
  
 Génération de modèles automatique offre les avantages suivants :  
  
-   Minime, voire aucun code pour créer une application Web pilotée par les données.  
  
-   Temps de développement rapide.  
  
-   Pages qui sont entièrement fonctionnelles, y compris l’affichage, insertion, edit, delete, tri et les fonctionnalités de pagination.  
  
-   Validation des données intégrée basée sur le schéma de base de données.  
  
-   Filtres qui sont créés pour chaque clé étrangère ou les champs booléens.  
  
 Cette classe peut être utilisée pour activer ou désactiver la génération de modèles automatique de tables de données dans un modèle de données en appliquant cet attribut à la classe partielle qui représente la table.  
  
   
  
## Examples  
 L’exemple de code suivant masque la ErrorLog Table dans la base de données AdventureWorksLT en appliquant l’attribut scaffold à la classe partielle ErrorLog qui représente la table ErrorLog. La propriété d’une structure est définie sur `false.`  
  
```csharp  
[MetadataType (typeof(ErrorLogMetada))]  
[ScaffoldTable(false)]  
public partial class ErrorLog  
{  
  
}  
  
public class ErrorLogMetada  
{  
  
}  
```  

```vb  
<MetadataType(GetType(ErrorLogMetada))> _   
<ScaffoldTable(False)>   
Public Partial Class ErrorLog   
  
End Class   
  
Public Class ErrorLogMetada  
  
End Class   
```  
  
 Pour compiler l’exemple de code, vous devez les éléments suivants :  
  
-   Visual Studio 2008 Service Pack 1 ou Visual Developer 2008 Express Edition Service Pack 1.  
  
-   La base de données AdventureWorksLT. Pour plus d’informations sur la façon de télécharger et installer la base de données SQL Server, consultez [Microsoft SQL Server Product Samples : base de données](https://github.com/Microsoft/sql-server-samples/releases) sur GitHub. Assurez-vous que vous installez la version correcte de la base de données pour la version de SQL Server que vous exécutez.  
  
-   Un site Web Dynamic Data. Cela vous permet de créer un contexte de données pour la base de données et la classe qui contient le champ de données pour personnaliser et les méthodes à substituer. En outre, il crée l’environnement dans lequel utiliser la page décrite précédemment. Pour plus d’informations, consultez [procédure pas à pas : création d’un nouveau dynamique Site Web à l’aide de l’échafaudage de données](https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12">Génération de modèles automatique ASP.NET Dynamic Data</related>
    <related type="Article" href="https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a">Procédure pas à pas : Création d’un nouveau Site Web Dynamic Data à l’aide de la génération de modèles automatique</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScaffoldTableAttribute (bool scaffold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool scaffold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scaffold As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScaffoldTableAttribute(bool scaffold);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DataAnnotations.ScaffoldTableAttribute : bool -&gt; System.ComponentModel.DataAnnotations.ScaffoldTableAttribute" Usage="new System.ComponentModel.DataAnnotations.ScaffoldTableAttribute scaffold" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scaffold" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scaffold">Valeur qui spécifie si la structure est activée.</param>
        <summary>Initialise une nouvelle instance de <see cref="T:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute" /> à l'aide de la propriété <see cref="P:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez définir `scaffold` à `true` pour le modèle de données entier à exposent toutes les tables de données dans la base de données pour les opérations CRUD (Create, Read, Update et Delete) ou des tables individuelles à des opérations CRUD en définissant `scaffold` pour des tables individuelles à `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public bool Scaffold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scaffold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Scaffold : bool" Usage="System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur qui spécifie si la structure est activée.</summary>
        <value><see langword="true" /> si la structure est activée ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Génération de modèles automatique est le mécanisme de génération de modèles de page web basés sur des schémas de base de données. ASP.NET Dynamic Data utilise la génération de modèles automatique pour générer l’interface utilisateur Web qui permet à un utilisateur pour afficher et mettre à jour une base de données. Pour plus d’informations sur l’attribut de structure, consultez <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>