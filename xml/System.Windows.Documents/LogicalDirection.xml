<Type Name="LogicalDirection" FullName="System.Windows.Documents.LogicalDirection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8e1eefd5d2a2271f1cca70c1987efa492312eb58" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30624873" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum LogicalDirection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LogicalDirection extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.LogicalDirection" />
  <TypeSignature Language="VB.NET" Value="Public Enum LogicalDirection" />
  <TypeSignature Language="C++ CLI" Value="public enum class LogicalDirection" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Spécifie une direction logique pour la réalisation de certaines opérations de texte, telles que l'insertion, la récupération ou la navigation dans le texte par rapport à une position spécifiée (<see cref="T:System.Windows.Documents.TextPointer" />).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Une des manières dans laquelle cette énumération est utilisée pour déterminer où placer un <xref:System.Windows.Documents.TextPointer> lorsque le nouveau contenu est inséré.  Une valeur de **vers l’arrière** place la position du texte directement avant le nouveau contenu, tandis que la valeur **par progression** place le <xref:System.Windows.Documents.TextPointer> directement après le nouveau contenu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Backward">
      <MemberSignature Language="C#" Value="Backward" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Documents.LogicalDirection Backward = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.LogicalDirection.Backward" />
      <MemberSignature Language="VB.NET" Value="Backward" />
      <MemberSignature Language="C++ CLI" Value="Backward" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Vers l'arrière ou de droite à gauche.</summary>
      </Docs>
    </Member>
    <Member MemberName="Forward">
      <MemberSignature Language="C#" Value="Forward" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Documents.LogicalDirection Forward = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.LogicalDirection.Forward" />
      <MemberSignature Language="VB.NET" Value="Forward" />
      <MemberSignature Language="C++ CLI" Value="Forward" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Vers l'avant ou de gauche à droite.</summary>
      </Docs>
    </Member>
  </Members>
</Type>