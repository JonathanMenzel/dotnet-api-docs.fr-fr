<Type Name="BlockUIContainer" FullName="System.Windows.Documents.BlockUIContainer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47765e0560a9637cfdbb9f7bc0f52792d31ece10" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37521325" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BlockUIContainer : System.Windows.Documents.Block" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlockUIContainer extends System.Windows.Documents.Block" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.BlockUIContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class BlockUIContainer&#xA;Inherits Block" />
  <TypeSignature Language="C++ CLI" Value="public ref class BlockUIContainer : System::Windows::Documents::Block" />
  <TypeSignature Language="F#" Value="type BlockUIContainer = class&#xA;    inherit Block" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Block</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Child")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Élément de contenu de flux au niveau du bloc qui permet aux éléments <see cref="T:System.Windows.UIElement" /> (c'est-à dire <see cref="T:System.Windows.Controls.Button" />) d'être incorporés (hébergés) dans le contenu de flux.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.UIElement> élément (par exemple, un <xref:System.Windows.Controls.Button>) peuvent être incorporées directement dans le contenu dynamique en le plaçant dans un <xref:System.Windows.Documents.BlockUIContainer> (voir l’exemple ci-dessous).  
  
 Un <xref:System.Windows.Documents.BlockUIContainer> peut héberger directement ne plusieurs <xref:System.Windows.UIElement> enfant.  Toutefois, l’élément enfant hébergé par un <xref:System.Windows.Documents.BlockUIContainer> peut héberger ses propres enfants.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Windows.Documents.BlockUIContainer> éléments à hôte <xref:System.Windows.UIElement> éléments de contenu de flux.  
  
 [!code-xaml[SpanSnippets#_BlockUIXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml#_blockuixaml)]  
  
 La figure suivante montre le rendu de cet exemple.  
  
 ![Capture d’écran : UIElement incorporé dans le contenu dynamique](~/add/media/blockuicontainer.png "capture d’écran : UIElement incorporé dans le contenu dynamique")  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.InlineUIContainer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Documents.BlockUIContainer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockUIContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.BlockUIContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockUIContainer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance vide de la classe <see cref="T:System.Windows.Documents.BlockUIContainer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockUIContainer (System.Windows.UIElement uiElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.UIElement uiElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.BlockUIContainer.#ctor(System.Windows.UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockUIContainer(System::Windows::UIElement ^ uiElement);" />
      <MemberSignature Language="F#" Value="new System.Windows.Documents.BlockUIContainer : System.Windows.UIElement -&gt; System.Windows.Documents.BlockUIContainer" Usage="new System.Windows.Documents.BlockUIContainer uiElement" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uiElement" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="uiElement">Objet <see cref="T:System.Windows.UIElement" /> spécifiant le contenu initial du nouveau <see cref="T:System.Windows.Documents.BlockUIContainer" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Documents.BlockUIContainer" />, en prenant un objet <see cref="T:System.Windows.UIElement" /> spécifié comme contenu initial du nouveau <see cref="T:System.Windows.Documents.BlockUIContainer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant illustre l’utilisation de ce constructeur.  
  
 [!code-csharp[SpanSnippets#_BlockUI_Const1](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_blockui_const1)]
 [!code-vb[SpanSnippets#_BlockUI_Const1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_blockui_const1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Child { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Child" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.BlockUIContainer.Child" />
      <MemberSignature Language="VB.NET" Value="Public Property Child As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Child { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Child : System.Windows.UIElement with get, set" Usage="System.Windows.Documents.BlockUIContainer.Child" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Windows.UIElement" /> hébergé par le <see cref="T:System.Windows.Documents.BlockUIContainer" />.</summary>
        <value>
          <see cref="T:System.Windows.UIElement" /> hébergé par le <see cref="T:System.Windows.Documents.BlockUIContainer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Documents.BlockUIContainer> peut héberger directement ne plusieurs <xref:System.Windows.UIElement> enfant.  Toutefois, l’élément enfant hébergé par un <xref:System.Windows.Documents.BlockUIContainer> peut héberger ses propres enfants.  
  
 Dans [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)], l’habillage un <xref:System.Windows.UIElement> dans un <xref:System.Windows.Documents.BlockUIContainer> est équivalent au paramètre <xref:System.Windows.UIElement> comme valeur de la <xref:System.Windows.Documents.BlockUIContainer.Child%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Windows.Documents.BlockUIContainer> éléments à hôte <xref:System.Windows.UIElement> éléments de contenu de flux.  
  
 [!code-xaml[SpanSnippets#_BlockUIXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml#_blockuixaml)]  
  
 La figure suivante montre le rendu de cet exemple.  
  
 ![Capture d’écran : UIElement incorporé dans le contenu dynamique](~/add/media/blockuicontainer.png "capture d’écran : UIElement incorporé dans le contenu dynamique")  
  
 L’exemple suivant montre comment utiliser le <xref:System.Windows.Documents.BlockUIContainer.Child%2A> propriété par programmation.  
  
 [!code-csharp[spansnippets#_BlockUI_Child](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_blockui_child)]
 [!code-vb[spansnippets#_BlockUI_Child](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_blockui_child)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>