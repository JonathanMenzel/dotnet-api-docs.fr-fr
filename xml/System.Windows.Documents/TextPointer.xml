<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ef1fa4261a591f0ee0dbabc844bc1a0c4f26492" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53227749" /></Metadata><TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <TypeSignature Language="F#" Value="type TextPointer = class&#xA;    inherit ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ff604-101">Représente une position dans un <see cref="T:System.Windows.Documents.FlowDocument" /> ou <see cref="T:System.Windows.Controls.TextBlock" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-102">Le <xref:System.Windows.Documents.TextPointer> classe introduit la terminologie suivante :</span><span class="sxs-lookup"><span data-stu-id="ff604-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="ff604-103">Position fondamentale - un <xref:System.Windows.Documents.TextPointer> pointe toujours vers un *position* dans le contenu.</span><span class="sxs-lookup"><span data-stu-id="ff604-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="ff604-104">De telles positions tombent entre des caractères dans le contenu ou flux de contenu élément balises qui définissent la structure pour le contenu.</span><span class="sxs-lookup"><span data-stu-id="ff604-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="ff604-105">Position actuelle – comme un <xref:System.Windows.Documents.TextPointer> indique toujours une position et parce qu’un grand nombre des opérations qui peuvent être effectuées via un <xref:System.Windows.Documents.TextPointer> sont par rapport à la position actuellement vers lequel pointée le <xref:System.Windows.Documents.TextPointer>, il est judicieux d’appeler le position indiquée par un <xref:System.Windows.Documents.TextPointer> en tant que le *position actuelle*.</span><span class="sxs-lookup"><span data-stu-id="ff604-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="ff604-106">Position d’insertion - une *position d’insertion* est une position où le nouveau contenu peut être ajouté sans les règles sémantiques pour le contenu associé.</span><span class="sxs-lookup"><span data-stu-id="ff604-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="ff604-107">Dans la pratique, une position d’insertion est n’importe où dans le contenu où un point d’insertion peut être positionné.</span><span class="sxs-lookup"><span data-stu-id="ff604-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="ff604-108">Un exemple de valide <xref:System.Windows.Documents.TextPointer> position qui n’est pas une position d’insertion est la position entre deux adjacents <xref:System.Windows.Documents.Paragraph> balises (autrement dit, entre la balise de fermeture du paragraphe précédent et de la balise d’ouverture du paragraphe suivant).</span><span class="sxs-lookup"><span data-stu-id="ff604-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="ff604-109">Symbole - dans le cadre de <xref:System.Windows.Documents.TextPointer> les opérations qui impliquent des symboles, les éléments suivants est considéré comme un *symbole*:</span><span class="sxs-lookup"><span data-stu-id="ff604-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="ff604-110">Une ouverture ou la balise de fermeture d’un <xref:System.Windows.Documents.TextElement> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="ff604-111">Un <xref:System.Windows.UIElement> élément contenu dans un <xref:System.Windows.Documents.InlineUIContainer> ou <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="ff604-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="ff604-112">Notez que ce un <xref:System.Windows.UIElement> est toujours comptabilisé comme un seul symbole ; tout contenu supplémentaire ou les éléments contenus par le <xref:System.Windows.UIElement> ne sont pas comptés comme des symboles.</span><span class="sxs-lookup"><span data-stu-id="ff604-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="ff604-113">Chaque 16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] caractère à l’intérieur d’un texte <xref:System.Windows.Documents.Run> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="ff604-114">Conteneur de texte - A *conteneur de texte* est l’élément qui constitue l’ultime limite du contenu de flux à portée de main ; la position indiquée par un <xref:System.Windows.Documents.TextPointer> tombe toujours dans un conteneur de texte.</span><span class="sxs-lookup"><span data-stu-id="ff604-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="ff604-115">Actuellement, un conteneur de texte doit être un <xref:System.Windows.Documents.FlowDocument> ou un <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="ff604-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="ff604-116">En règle générale, les opérations entre <xref:System.Windows.Documents.TextPointer> instances dans différents conteneurs de texte ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="ff604-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="ff604-117">Document - le contenu dans un conteneur de texte est appelé un *document*, comme dans le <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> (méthode) et le <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> et <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="ff604-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="ff604-118">Le <xref:System.Windows.Documents.TextPointer> classe est destinée à faciliter le parcours et manipulation de contenu qui est représenté par [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] éléments de flux ; en général, de tels éléments dérivent <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="ff604-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="ff604-119">Certaines opérations qui <xref:System.Windows.Documents.TextPointer> facilite incluent les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="ff604-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="ff604-120">Effectuer une comparaison ordinale de la position actuelle avec une seconde position spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="ff604-121">Consultez le <xref:System.Windows.Documents.TextPointer.CompareTo%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ff604-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="ff604-122">Déterminer le type de contenu adjacent à la position actuelle dans une direction spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="ff604-123">Consultez le <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> méthode et <xref:System.Windows.Documents.TextPointerContext> énumération.</span><span class="sxs-lookup"><span data-stu-id="ff604-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="ff604-124">Obtenir le <xref:System.Windows.Documents.TextElement> portant sur ou adjacent à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="ff604-125">Consultez <xref:System.Windows.Documents.Paragraph> et <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ff604-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="ff604-126">Obtenir le conteneur de texte portant sur le document actif.</span><span class="sxs-lookup"><span data-stu-id="ff604-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="ff604-127">Voir la propriété <xref:System.Windows.Documents.TextPointer.Parent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff604-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="ff604-128">Obtenir un nombre spécifié de caractères qui précède ou suit la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="ff604-129">Consultez le <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ff604-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="ff604-130">Insérer une chaîne de caractères à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="ff604-131">Consultez le <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ff604-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="ff604-132">Trouver les limites de ligne dans le contenu.</span><span class="sxs-lookup"><span data-stu-id="ff604-132">Find line boundaries in content.</span></span>  <span data-ttu-id="ff604-133">Consultez le <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> méthode et <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ff604-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="ff604-134">Traduire entre <xref:System.Windows.Documents.TextPointer> positions et le symbole offsets dans le contenu.</span><span class="sxs-lookup"><span data-stu-id="ff604-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="ff604-135">Consultez le <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> et <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ff604-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="ff604-136">Exécuter des tests de positionnement visuels en traduisant entre un <xref:System.Windows.Documents.TextPointer> position et un <xref:System.Windows.Point> représentant des coordonnées relatives.</span><span class="sxs-lookup"><span data-stu-id="ff604-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="ff604-137">Rechercher une position d’insertion proche, ou vérifier si la position actuelle est une position d’insertion.</span><span class="sxs-lookup"><span data-stu-id="ff604-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="ff604-138">Consultez le <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> et <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> méthodes et les <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ff604-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="ff604-139">La position et <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indiquée par un <xref:System.Windows.Documents.TextPointer> objet sont immuables.</span><span class="sxs-lookup"><span data-stu-id="ff604-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="ff604-140">Lorsque le contenu est modifié ou modifié, la position indiquée par un <xref:System.Windows.Documents.TextPointer> ne change pas par rapport au texte environnant ; au lieu de cela, le décalage de cette position à partir du début du contenu est ajusté en conséquence pour refléter la nouvelle position relative dans contenu.</span><span class="sxs-lookup"><span data-stu-id="ff604-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="ff604-141">Par exemple, un <xref:System.Windows.Documents.TextPointer> qui indique une position au début d’un paragraphe donné continue à pointer vers le début de ce paragraphe, même lorsque le contenu est inséré ou supprimé avant ou après le paragraphe.</span><span class="sxs-lookup"><span data-stu-id="ff604-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="ff604-142">Le <xref:System.Windows.Documents.TextPointer> classe ne fournit pas de constructeurs publics.</span><span class="sxs-lookup"><span data-stu-id="ff604-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="ff604-143">Une instance de <xref:System.Windows.Documents.TextPointer> est créé à l’aide des propriétés ou méthodes d’autres objets (y compris d’autres <xref:System.Windows.Documents.TextPointer> objets).</span><span class="sxs-lookup"><span data-stu-id="ff604-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="ff604-144">La liste suivante fournit quelques exemples de méthodes et propriétés qui créent et retournent un <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="ff604-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="ff604-145">Cette liste n’est pas exhaustive :</span><span class="sxs-lookup"><span data-stu-id="ff604-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="ff604-146">À partir d’un <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> et <xref:System.Windows.Documents.TextRange.End%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff604-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="ff604-147">À partir d’un <xref:System.Windows.Documents.TextElement>: <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, et <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff604-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="ff604-148">À partir d’un <xref:System.Windows.Controls.TextBlock> (conteneur de texte) : <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, et <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff604-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="ff604-149">À partir d’un <xref:System.Windows.Documents.FlowDocument> (conteneur de texte) : <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, et <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="ff604-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="ff604-150">À partir d’un existant <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, et <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff604-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff604-151">L’exemple suivant montre comment utiliser un <xref:System.Windows.Documents.TextPointer> pour rechercher une position dans le premier <xref:System.Windows.Documents.Run> élément dans un conteneur de texte spécifié.</span><span class="sxs-lookup"><span data-stu-id="ff604-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="ff604-152">L’exemple suivant implémente un algorithme de recherche simple à l’aide de <xref:System.Windows.Documents.TextPointer> installations.</span><span class="sxs-lookup"><span data-stu-id="ff604-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.CompareTo position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="ff604-153">Un <see cref="T:System.Windows.Documents.TextPointer" /> qui spécifie une position à comparer à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span></span></param>
        <summary><span data-ttu-id="ff604-154">Effectuer une comparaison ordinale entre les positions spécifiées par le <see cref="T:System.Windows.Documents.TextPointer" /> actuel et une seconde spécifié par <see cref="T:System.Windows.Documents.TextPointer" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="ff604-155">-1 si le <see cref="T:System.Windows.Documents.TextPointer" /> actuel précède <paramref name="position" /> ; 0 si les emplacements sont les mêmes ; +1 si le <see cref="T:System.Windows.Documents.TextPointer" /> actuel suit <paramref name="position" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-155">-1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-156">La valeur -1 indique que la position spécifiée par l’actuel <xref:System.Windows.Documents.TextPointer> précède la position spécifiée par `position`.</span><span class="sxs-lookup"><span data-stu-id="ff604-156">A value of -1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="ff604-157">La valeur 0 indique que les positions indiquées sont égales.</span><span class="sxs-lookup"><span data-stu-id="ff604-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="ff604-158">Une valeur de + 1 positive indique que la position spécifiée par l’actuel <xref:System.Windows.Documents.TextPointer> suit la position spécifiée par `position`.</span><span class="sxs-lookup"><span data-stu-id="ff604-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff604-159">L’exemple suivant illustre une utilisation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="ff604-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="ff604-160">Dans l’exemple, le <xref:System.Windows.Documents.TextPointer.CompareTo%2A> méthode est utilisée conjointement avec la <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> méthode pour tester si une certaine <xref:System.Windows.Documents.TextElement> est vide.</span><span class="sxs-lookup"><span data-stu-id="ff604-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ff604-161"><paramref name="position" /> spécifie une position en dehors du conteneur de texte associé à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-161"><paramref name="position" /> specifies a position outside of the text container associated with the current position.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberSignature Language="F#" Value="member this.DeleteTextInRun : int -&gt; int" Usage="textPointer.DeleteTextInRun count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="ff604-162">Le nombre de caractères à supprimer, en commençant de la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-162">The number of characters to delete, starting at the current position.</span></span> <span data-ttu-id="ff604-163">Spécifier une valeur positive pour supprimer les caractères suivant la position actuelle ; spécifier une valeur négative pour supprimer les caractères précédant la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span></span></param>
        <summary><span data-ttu-id="ff604-164">Supprime le nombre spécifié de caractères de la position indiquée par le <see cref="T:System.Windows.Documents.TextPointer" />actuel.</span><span class="sxs-lookup"><span data-stu-id="ff604-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="ff604-165">Le nombre de caractères réellement supprimés.</span><span class="sxs-lookup"><span data-stu-id="ff604-165">The number of characters actually deleted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-166">Spécifiez une valeur positive pour supprimer les caractères qui suivent la position actuelle (comme dans <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) ; spécifiez une valeur négative pour supprimer les caractères qui précèdent la position actuelle (comme dans <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="ff604-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="ff604-167">Le nombre de caractères réellement supprimés peut être inférieur au nombre spécifié par `count`.</span><span class="sxs-lookup"><span data-stu-id="ff604-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="ff604-168">Cela se produit dans les cas où `count` spécifie plus de caractères qu’il en existe pour être supprimé.</span><span class="sxs-lookup"><span data-stu-id="ff604-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ff604-169">La méthode est appelée à une position où le texte n'est pas autorisé.</span><span class="sxs-lookup"><span data-stu-id="ff604-169">The method is called at a position where text is not allowed.</span></span></exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEnd : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff604-170">Obtient un <see cref="T:System.Windows.Documents.TextPointer" /> à la fin du contenu dans le conteneur de texte associé à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span></span></summary>
        <value><span data-ttu-id="ff604-171">Obtient un <see cref="T:System.Windows.Documents.TextPointer" /> à la fin du contenu dans le conteneur de texte associé à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-172">Le <xref:System.Windows.Documents.TextPointer.Parent%2A> pour retourné <xref:System.Windows.Documents.TextPointer> est toujours un conteneur de texte (<xref:System.Windows.Controls.TextBlock> ou <xref:System.Windows.Documents.FlowDocument>), au lieu d’un <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="ff604-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStart : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff604-173">Obtient un <see cref="T:System.Windows.Documents.TextPointer" /> au début du contenu dans le conteneur de texte associé à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span></span></summary>
        <value><span data-ttu-id="ff604-174">Un <see cref="T:System.Windows.Documents.TextPointer" /> au début du contenu dans le conteneur de texte associé à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-175">Utilisez la position retournée par cette propriété comme position de ligne de base à partir de laquelle travailler avec des décalages relatifs pour les autres positions.</span><span class="sxs-lookup"><span data-stu-id="ff604-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="ff604-176">Le <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> et <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> méthodes fournissent un moyen de convertir entre les positions et la position des décalages.</span><span class="sxs-lookup"><span data-stu-id="ff604-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="ff604-177">Le <xref:System.Windows.Documents.TextPointer.Parent%2A> pour retourné <xref:System.Windows.Documents.TextPointer> est toujours un conteneur de texte (<xref:System.Windows.Controls.TextBlock> ou <xref:System.Windows.Documents.FlowDocument>), au lieu d’un <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="ff604-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetAdjacentElement : System.Windows.Documents.LogicalDirection -&gt; System.Windows.DependencyObject" Usage="textPointer.GetAdjacentElement direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="ff604-178">L'une des valeurs <see cref="T:System.Windows.Documents.LogicalDirection" /> qui spécifient la direction logique dans laquelle rechercher un élément adjacent.</span><span class="sxs-lookup"><span data-stu-id="ff604-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span></span></param>
        <summary><span data-ttu-id="ff604-179">Renvoie l'élément, s'il en est, qui limite le <see cref="T:System.Windows.Documents.TextPointer" /> actuel dans la direction logique spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="ff604-180">L'élément adjacent dans la <paramref name="direction" />spécifiée, ou <see langword="null" /> si aucun élément adjacent n'existe.</span><span class="sxs-lookup"><span data-stu-id="ff604-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-181">L’élément retourné est généralement un <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="ff604-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="ff604-182">Un <xref:System.Windows.UIElement> peut être retourné lorsque le <xref:System.Windows.Documents.TextPointer> indique une position à l’intérieur d’un <xref:System.Windows.Documents.BlockUIContainer> élément ou un <xref:System.Windows.Documents.InlineUIContainer> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterRect : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Rect" Usage="textPointer.GetCharacterRect direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="ff604-183">L'une des valeurs <see cref="T:System.Windows.Documents.LogicalDirection" /> qui spécifient la direction logique dans laquelle rechercher un cadre englobant de contenu.</span><span class="sxs-lookup"><span data-stu-id="ff604-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span></span></param>
        <summary><span data-ttu-id="ff604-184">Renvoie un cadre englobant (<see cref="T:System.Windows.Rect" />) pour du contenu en bordure du <see cref="T:System.Windows.Documents.TextPointer" /> actuel dans la direction logique spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="ff604-185">Un cadre englobant pour du contenu en bordure du <see cref="T:System.Windows.Documents.TextPointer" /> actuel dans la direction spécifiée, ou <see cref="P:System.Windows.Rect.Empty" /> si des informations valides de disposition sont indisponibles.</span><span class="sxs-lookup"><span data-stu-id="ff604-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-186"><xref:System.Windows.Documents.TextElement> bords ne sont pas considérés comme contenu dans le cadre de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="ff604-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="ff604-187">Si le <xref:System.Windows.Documents.TextPointer> est placé avant un <xref:System.Windows.Documents.TextElement> edge, la valeur de retour est un cadre englobant pour le prochain non -<xref:System.Windows.Documents.TextElement> contenu dans la direction spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="ff604-188">Si aucun contenu n’est dans la direction spécifiée, une largeur nulle <xref:System.Windows.Rect> est retourné avec une hauteur correspondant à celle de n’importe quel précédent contenu.</span><span class="sxs-lookup"><span data-stu-id="ff604-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="ff604-189">L’opération exécutée par cette méthode dépend d’une disposition valide.</span><span class="sxs-lookup"><span data-stu-id="ff604-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="ff604-190">Lorsque cela est nécessaire, cette méthode essaie de régénérer automatiquement une disposition valide avant de poursuivre l’opération.</span><span class="sxs-lookup"><span data-stu-id="ff604-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="ff604-191">Régénérer une disposition peut être une opération relativement coûteuse.</span><span class="sxs-lookup"><span data-stu-id="ff604-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="ff604-192">Utilisez le <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> propriété à vérifier pour une disposition valide avant d’effectuer des opérations pouvant régénérer la disposition.</span><span class="sxs-lookup"><span data-stu-id="ff604-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="ff604-193">Pour plus d’informations, consultez [Disposition](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="ff604-193">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="ff604-194">L'une des valeurs <see cref="T:System.Windows.Documents.LogicalDirection" /> qui spécifient la direction logique dans laquelle rechercher la position d'insertion la plus proche.</span><span class="sxs-lookup"><span data-stu-id="ff604-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span></span></param>
        <summary><span data-ttu-id="ff604-195">Renvoie un <see cref="T:System.Windows.Documents.TextPointer" /> à la position d'insertion la plus proche dans la direction logique spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="ff604-196">Un <see cref="T:System.Windows.Documents.TextPointer" /> vers la position d'insertion la plus proche dans la direction logique spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-197">Une position d’insertion est une position où le nouveau contenu peut être ajouté sans les règles sémantiques pour le contenu associé.</span><span class="sxs-lookup"><span data-stu-id="ff604-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="ff604-198">Dans la pratique, une position d’insertion est n’importe où dans le contenu où un point d’insertion peut être positionné.</span><span class="sxs-lookup"><span data-stu-id="ff604-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="ff604-199">Un exemple de valide <xref:System.Windows.Documents.TextPointer> position qui n’est pas une position d’insertion est la position entre deux adjacents <xref:System.Windows.Documents.Paragraph> balises (autrement dit, entre la balise de fermeture du paragraphe précédent et de la balise d’ouverture du paragraphe suivant).</span><span class="sxs-lookup"><span data-stu-id="ff604-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="ff604-200">Si le <xref:System.Windows.Documents.TextPointer> déjà pointe vers une position d’insertion valide, mais que la balise de fermeture pour une séquence de mise en forme non vide suit directement cette position dans la direction donnée, puis le <xref:System.Windows.Documents.TextPointer> retourné par cette méthode est ajustée pour pointer vers l’insertion position juste après la fermeture de la séquence de mise en forme.</span><span class="sxs-lookup"><span data-stu-id="ff604-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="ff604-201">Par exemple, considérez la séquence de balisage `<Bold>a</Bold>b`.</span><span class="sxs-lookup"><span data-stu-id="ff604-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="ff604-202">Notez qu’il n’y a deux positions d’insertion entre les lettres `a` et `b` -précédant la fermeture `Bold` balise et l’autre directement après la fermeture `Bold` balise.</span><span class="sxs-lookup"><span data-stu-id="ff604-202">Note that there are two insertion positions between the letters `a` and `b` - one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="ff604-203">Si <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> est appelée sur un <xref:System.Windows.Documents.TextPointer> à la position juste après la lettre `a` et avant la fermeture `Bold` balise et avec un `direction` de <xref:System.Windows.Documents.LogicalDirection.Forward>, retourné <xref:System.Windows.Documents.TextPointer> est ajustée pour pointer vers le position juste avant la lettre `b`, après la fermeture `Bold` balise.</span><span class="sxs-lookup"><span data-stu-id="ff604-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="ff604-204">Un ajustement similaire est pour la mise en forme de balises d’ouverture lorsque vous travaillez dans la direction logique opposée.</span><span class="sxs-lookup"><span data-stu-id="ff604-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="ff604-205">Cette méthode est destinée à fournir un moyen de l’ambiguïté entre les positions d’insertion dans des cas similaires.</span><span class="sxs-lookup"><span data-stu-id="ff604-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="ff604-206">Cette méthode peut également servir à sélectionner les points d’insertion lorsqu’une séquence de balises structurelles est impliquée.</span><span class="sxs-lookup"><span data-stu-id="ff604-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="ff604-207">Par exemple, lors de la position entre les balises de paragraphe d’ouverture et de clôture, le paramètre de direction peut être utilisé pour sélectionner le point d’insertion le plus proche au début du paragraphe suivant (en spécifiant <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) ou à la fin de la précédente du paragraphe ( en spécifiant <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="ff604-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="ff604-208">Si le pointeur est déjà à la position d’insertion, et qu’aucune balise de mise en forme adjacente dans spécifié `direction`, retourné <xref:System.Windows.Documents.TextPointer> pointe vers la même position que l’appel <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="ff604-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="ff604-209">Il est possible qu’aucune position d’insertion valide n’existe par rapport à l’emplacement vers lequel pointé un <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="ff604-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="ff604-210">Cela peut se produire si le contenu référencé est structurellement incomplète, comme dans une table vide ou une liste.</span><span class="sxs-lookup"><span data-stu-id="ff604-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="ff604-211">Dans ce cas, cette méthode retourne simplement une <xref:System.Windows.Documents.TextPointer> à la même position que le <xref:System.Windows.Documents.TextPointer> à partir duquel cette méthode a été appelée.</span><span class="sxs-lookup"><span data-stu-id="ff604-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="ff604-212">Cette méthode retourne toujours valide <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="ff604-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff604-213">Cet exemple montre comment utiliser le <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> méthode permettant de vérifier si une certaine <xref:System.Windows.Documents.TextElement> est vide de contenu imprimable.</span><span class="sxs-lookup"><span data-stu-id="ff604-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff604-214">Renvoie un <see cref="T:System.Windows.Documents.TextPointer" /> au début d'une ligne spécifiée par rapport au <see cref="T:System.Windows.Documents.TextPointer" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="ff604-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="ff604-215">Le nombre de marqueurs début-de-ligne à ignorer pour déterminer la ligne à laquelle renvoyer la position de départ.</span><span class="sxs-lookup"><span data-stu-id="ff604-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span></span> <span data-ttu-id="ff604-216">Les valeurs négatives spécifient des lignes précédentes, 0 spécifie la ligne actuelle, et les valeurs positives spécifient des lignes suivantes.</span><span class="sxs-lookup"><span data-stu-id="ff604-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span></span></param>
        <summary><span data-ttu-id="ff604-217">Renvoie un <see cref="T:System.Windows.Documents.TextPointer" /> au début d'une ligne spécifiée par rapport au <see cref="T:System.Windows.Documents.TextPointer" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="ff604-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="ff604-218">Un <see cref="T:System.Windows.Documents.TextPointer" /> pointant vers le début de la ligne spécifiée (avec le <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> paramétré sur <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), ou <see langword="null" /> si la ligne spécifiée est hors limites ou  ne peut pas être localisée.</span><span class="sxs-lookup"><span data-stu-id="ff604-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-219">Si le <xref:System.Windows.Documents.TextPointer> pointe vers une position ambiguë, par exemple, entre deux lignes, la ligne dans la direction spécifiée par <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> est sélectionné comme ligne de départ relative.</span><span class="sxs-lookup"><span data-stu-id="ff604-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="ff604-220">L’opération exécutée par cette méthode dépend d’une disposition valide.</span><span class="sxs-lookup"><span data-stu-id="ff604-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="ff604-221">Lorsque cela est nécessaire, cette méthode essaie de régénérer automatiquement une disposition valide avant de poursuivre l’opération.</span><span class="sxs-lookup"><span data-stu-id="ff604-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="ff604-222">Régénérer une disposition peut être une opération relativement coûteuse.</span><span class="sxs-lookup"><span data-stu-id="ff604-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="ff604-223">Utilisez <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> pour vérifier une disposition valide avant d’effectuer des opérations pouvant régénérer la disposition.</span><span class="sxs-lookup"><span data-stu-id="ff604-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="ff604-224">Pour plus d’informations, consultez [Disposition](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="ff604-224">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int *  -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition (count, actualCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="ff604-225">Le nombre de marqueurs début-de-ligne à ignorer pour déterminer la ligne à laquelle renvoyer la position de départ.</span><span class="sxs-lookup"><span data-stu-id="ff604-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span></span> <span data-ttu-id="ff604-226">Les valeurs négatives spécifient des lignes précédentes, 0 spécifie la ligne actuelle, et les valeurs positives spécifient des lignes suivantes.</span><span class="sxs-lookup"><span data-stu-id="ff604-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span></span></param>
        <param name="actualCount"><span data-ttu-id="ff604-227">Le renvoie de cette méthode contient le nombre réel de marqueurs début-de-ligne ignorés pour déterminer la ligne à laquelle renvoyer la position de départ.</span><span class="sxs-lookup"><span data-stu-id="ff604-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span></span>  <span data-ttu-id="ff604-228">Cette valeur peut être inférieure au <paramref name="count" /> si le début ou la fin de contenu est trouvé avant que le nombre spécifié de lignes soit ignoré.</span><span class="sxs-lookup"><span data-stu-id="ff604-228">This value may be less than <paramref name="count" /> if the beginning or end of content is encountered before the specified number of lines are skipped.</span></span> <span data-ttu-id="ff604-229">Ce paramètre est passé sans être initialisé.</span><span class="sxs-lookup"><span data-stu-id="ff604-229">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="ff604-230">Renvoie un <see cref="T:System.Windows.Documents.TextPointer" /> au début d'une ligne spécifiée par rapport au <see cref="T:System.Windows.Documents.TextPointer" />actuel, et renseigne sur le nombre de lignes ignorées.</span><span class="sxs-lookup"><span data-stu-id="ff604-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span></span></summary>
        <returns><span data-ttu-id="ff604-231">Un <see cref="T:System.Windows.Documents.TextPointer" /> pointant vers le début de la ligne spécifiée (avec le <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> paramétré sur <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), ou vers le début de la ligne la plus proche de la ligne spécifiée si celle-ci est hors limites.</span><span class="sxs-lookup"><span data-stu-id="ff604-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-232">Si le <xref:System.Windows.Documents.TextPointer> pointe vers une position ambiguë, par exemple, entre deux lignes, la ligne dans la direction spécifiée par le <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> propriété est sélectionnée comme ligne de départ relative.</span><span class="sxs-lookup"><span data-stu-id="ff604-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextContextPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextContextPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="ff604-233">L'une des valeurs <see cref="T:System.Windows.Documents.LogicalDirection" /> qui spécifient la direction logique dans laquelle rechercher le prochain symbole.</span><span class="sxs-lookup"><span data-stu-id="ff604-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span></span></param>
        <summary><span data-ttu-id="ff604-234">Renvoie un pointeur vers le prochain symbole dans la direction logique spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-234">Returns a pointer to the next symbol in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="ff604-235">Un <see cref="T:System.Windows.Documents.TextPointer" /> au prochain symbole dans la direction requise, ou <see langword="null" /> si le <see cref="T:System.Windows.Documents.TextPointer" /> actuel borde le début ou la fin du contenu.</span><span class="sxs-lookup"><span data-stu-id="ff604-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-236">Les éléments suivants est considéré comme un symbole :</span><span class="sxs-lookup"><span data-stu-id="ff604-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="ff604-237">Une ouverture ou la balise de fermeture d’un <xref:System.Windows.Documents.TextElement> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="ff604-238">Un <xref:System.Windows.UIElement> élément contenu dans un <xref:System.Windows.Documents.InlineUIContainer> ou <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="ff604-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="ff604-239">Notez que ce un <xref:System.Windows.UIElement> est toujours comptabilisé comme un seul symbole ; tout contenu supplémentaire ou les éléments contenus par le <xref:System.Windows.UIElement> ne sont pas comptés comme des symboles.</span><span class="sxs-lookup"><span data-stu-id="ff604-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="ff604-240">16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] caractère à l’intérieur d’un texte <xref:System.Windows.Documents.Run> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="ff604-241">Si le prochain symbole est classé dans la <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, ou <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (tel qu’identifié par le <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> méthode), puis le <xref:System.Windows.Documents.TextPointer> retourné par cette méthode est avancée d’exactement un symbole à partir de la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="ff604-242">Si le prochain symbole est classé dans la <xref:System.Windows.Documents.TextPointerContext.Text>, puis le <xref:System.Windows.Documents.TextPointer> retourné par cette méthode outrepasse le texte vers le prochain symbole de non-texte (autrement dit, la prochaine position où le <xref:System.Windows.Documents.TextPointerContext> n’est pas <xref:System.Windows.Documents.TextPointerContext.Text>).</span><span class="sxs-lookup"><span data-stu-id="ff604-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="ff604-243">Le compte exact de symboles rencontrés peut être calculé à l’avance en appelant le <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ff604-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff604-244">L’exemple suivant illustre une utilisation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="ff604-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="ff604-245">L’exemple utilise le <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> méthode conjointement avec le <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> méthode pour parcourir et extraire les symboles dans une certaine <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="ff604-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="ff604-246">Tandis que l’exemple peut être utilisé pour extraire un [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure pour le contenu d’une donnée <xref:System.Windows.Documents.TextElement>, il vise uniquement à des fins d’illustration et ne doit pas être utilisé dans le code de production.</span><span class="sxs-lookup"><span data-stu-id="ff604-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="ff604-247">Consultez le <xref:System.Xml> espace de noms pour un ensemble complet de types conçus pour travailler avec et de traitement XML.</span><span class="sxs-lookup"><span data-stu-id="ff604-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="ff604-248">L'une des valeurs <see cref="T:System.Windows.Documents.LogicalDirection" /> qui spécifient la direction logique dans laquelle rechercher la prochaine position d'insertion.</span><span class="sxs-lookup"><span data-stu-id="ff604-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span></span></param>
        <summary><span data-ttu-id="ff604-249">Renvoie un <see cref="T:System.Windows.Documents.TextPointer" /> à la prochaine position d'insertion dans la direction logique spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="ff604-250">Un <see cref="T:System.Windows.Documents.TextPointer" /> qui  identifie la prochaine position d'insertion dans la direction requise, ou <see langword="null" /> si aucune n'est décelable.</span><span class="sxs-lookup"><span data-stu-id="ff604-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-251">Un *position d’insertion* est une position où le nouveau contenu peut être ajouté sans les règles sémantiques pour le contenu associé.</span><span class="sxs-lookup"><span data-stu-id="ff604-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="ff604-252">Dans la pratique, une position d’insertion est n’importe où dans le contenu où un point d’insertion peut être positionné.</span><span class="sxs-lookup"><span data-stu-id="ff604-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="ff604-253">Un exemple de valide <xref:System.Windows.Documents.TextPointer> position qui n’est pas une position d’insertion est la position entre deux adjacents <xref:System.Windows.Documents.Paragraph> balises (autrement dit, entre la balise de fermeture du paragraphe précédent et de la balise d’ouverture du paragraphe suivant).</span><span class="sxs-lookup"><span data-stu-id="ff604-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff604-254">L’exemple suivant illustre une utilisation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="ff604-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="ff604-255">L’exemple utilise le <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> méthode pour parcourir les limites de l’élément de contenu afin de compter le nombre de <xref:System.Windows.Documents.Paragraph> éléments présents entre deux spécifié <xref:System.Windows.Documents.TextPointer> instances.</span><span class="sxs-lookup"><span data-stu-id="ff604-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetOffsetToPosition : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.GetOffsetToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="ff604-256">Un <see cref="T:System.Windows.Documents.TextPointer" /> qui spécifie une position pour laquelle la distance (en symboles) doit être trouvée.</span><span class="sxs-lookup"><span data-stu-id="ff604-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span></span></param>
        <summary><span data-ttu-id="ff604-257">Renvoie le compte de symboles entre le <see cref="T:System.Windows.Documents.TextPointer" /> actuel et un second <see cref="T:System.Windows.Documents.TextPointer" />spécifié.</span><span class="sxs-lookup"><span data-stu-id="ff604-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="ff604-258">Le nombre relatif de symboles entre le <see cref="T:System.Windows.Documents.TextPointer" /> actuel et <paramref name="position" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span></span>  <span data-ttu-id="ff604-259">Une valeur négative indique que le <see cref="T:System.Windows.Documents.TextPointer" /> actuel suit la position spécifiée par <paramref name="position" />, 0 indique que les positions sont égales, et une valeur positive indique que le <see cref="T:System.Windows.Documents.TextPointer" /> actuel précède la position spécifiée par <paramref name="position" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-260">Les éléments suivants est considéré comme un symbole :</span><span class="sxs-lookup"><span data-stu-id="ff604-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="ff604-261">Une ouverture ou la balise de fermeture d’un <xref:System.Windows.Documents.TextElement> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="ff604-262">Un <xref:System.Windows.UIElement> élément contenu dans un <xref:System.Windows.Documents.InlineUIContainer> ou <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="ff604-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="ff604-263">Notez que ce un <xref:System.Windows.UIElement> est toujours comptabilisé comme un seul symbole ; tout contenu supplémentaire ou les éléments contenus par le <xref:System.Windows.UIElement> ne sont pas comptés comme des symboles.</span><span class="sxs-lookup"><span data-stu-id="ff604-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="ff604-264">16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] caractère à l’intérieur d’un texte <xref:System.Windows.Documents.Run> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff604-265">L’exemple suivant illustre une utilisation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="ff604-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="ff604-266">L’exemple utilise le <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> méthode pour rechercher les offsets pour deux <xref:System.Windows.Documents.TextPointer> instances et utilise ensuite ces informations pour enregistrer et restaurer la sélection dans un <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="ff604-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="ff604-267">L’exemple suppose que le contenu de la <xref:System.Windows.Controls.RichTextBox> n’ont pas changé entre une sauvegarde de sélection et une restauration de sélection.</span><span class="sxs-lookup"><span data-stu-id="ff604-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ff604-268"><paramref name="position" /> spécifie une position en dehors du conteneur de texte associé à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-268"><paramref name="position" /> specifies a position outside of the text container associated with the current position.</span></span></exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPointerContext : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointerContext" Usage="textPointer.GetPointerContext direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="ff604-269">L'une des valeurs <see cref="T:System.Windows.Documents.LogicalDirection" /> qui spécifient la direction logique dans laquelle déterminer la catégorie de contenu adjacent.</span><span class="sxs-lookup"><span data-stu-id="ff604-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span></span></param>
        <summary><span data-ttu-id="ff604-270">Renvoie un indicateur de catégorie pour le contenu adjacent au <see cref="T:System.Windows.Documents.TextPointer" /> actuel dans la direction logique spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="ff604-271">L'une des valeurs <see cref="T:System.Windows.Documents.TextPointerContext" /> qui indiquent la catégorie pour contenu adjacent dans la direction logique spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ff604-272">L’exemple suivant illustre une utilisation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="ff604-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="ff604-273">L’exemple utilise le <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> méthode pour implémenter un algorithme pour calculer le solde d’ouverture et fermeture des balises d’élément entre deux spécifié <xref:System.Windows.Documents.TextPointer> positions.</span><span class="sxs-lookup"><span data-stu-id="ff604-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="ff604-274">Chaque balise d’élément d’ouverture est comptée comme + 1 et chaque balise d’élément de fermeture est comptée comme -1.</span><span class="sxs-lookup"><span data-stu-id="ff604-274">Each opening element tag is counted as +1, and each closing element tag is counted as -1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff604-275">Renvoie un <see cref="T:System.Windows.Documents.TextPointer" /> à la position indiquée par l'offset spécifié, dans les symboles, à partir du début du contenu.</span><span class="sxs-lookup"><span data-stu-id="ff604-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="ff604-276">Un offset, dans les symboles, pour lequel calculer et renvoyer la position.</span><span class="sxs-lookup"><span data-stu-id="ff604-276">An offset, in symbols, for which to calculate and return the position.</span></span>  <span data-ttu-id="ff604-277">Si l'offset est négatif, la position est calculée dans la direction logique opposée de celle indiqué par la propriété <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span></span></param>
        <summary><span data-ttu-id="ff604-278">Renvoie un <see cref="T:System.Windows.Documents.TextPointer" /> à la position indiquée par l'offset spécifié, dans les symboles, à partir du début du <see cref="T:System.Windows.Documents.TextPointer" />actuel.</span><span class="sxs-lookup"><span data-stu-id="ff604-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="ff604-279">Un <see cref="T:System.Windows.Documents.TextPointer" /> à la position indiquée par le décalage spécifié, ou <see langword="null" /> si aucune position correspondante n'est trouvée.</span><span class="sxs-lookup"><span data-stu-id="ff604-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-280">Les éléments suivants est considéré comme un symbole :</span><span class="sxs-lookup"><span data-stu-id="ff604-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="ff604-281">Une ouverture ou la balise de fermeture de la <xref:System.Windows.Documents.TextElement> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="ff604-282">Un <xref:System.Windows.UIElement> élément contenu dans un <xref:System.Windows.Documents.InlineUIContainer> ou <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="ff604-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="ff604-283">Notez que ce un <xref:System.Windows.UIElement> est toujours comptabilisé comme un seul symbole ; tout contenu supplémentaire ou les éléments contenus par le <xref:System.Windows.UIElement> ne sont pas comptés comme des symboles.</span><span class="sxs-lookup"><span data-stu-id="ff604-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="ff604-284">16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] caractère à l’intérieur d’un texte <xref:System.Windows.Documents.Run> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff604-285">L’exemple suivant illustre une utilisation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="ff604-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="ff604-286">L’exemple utilise le <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> méthode pour implémenter une paire de méthodes, une pour calculer l’offset à une position spécifiée par rapport à n’importe quel paragraphe d’hébergement et l’autre pour renvoyer un <xref:System.Windows.Documents.TextPointer> un décalage spécifié dans un paragraphe particulier.</span><span class="sxs-lookup"><span data-stu-id="ff604-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int * System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset (offset, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="ff604-287">Un offset, dans les symboles, pour lequel calculer et renvoyer la position.</span><span class="sxs-lookup"><span data-stu-id="ff604-287">An offset, in symbols, for which to calculate and return the position.</span></span>  <span data-ttu-id="ff604-288">Si l'offset est négatif, le <see cref="T:System.Windows.Documents.TextPointer" /> retourné précède le <see cref="T:System.Windows.Documents.TextPointer" />actuel ; sinon, il suit.</span><span class="sxs-lookup"><span data-stu-id="ff604-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span></span></param>
        <param name="direction"><span data-ttu-id="ff604-289">L'une des valeurs <see cref="T:System.Windows.Documents.LogicalDirection" />qui spécifient la direction logique du <see cref="T:System.Windows.Documents.TextPointer" />retourné.</span><span class="sxs-lookup"><span data-stu-id="ff604-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></param>
        <summary><span data-ttu-id="ff604-290">Renvoie un <see cref="T:System.Windows.Documents.TextPointer" /> à la position indiquée par l'offset spécifié, dans les symboles, à partir du début du <see cref="T:System.Windows.Documents.TextPointer" />actuel et dans la direction spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span></span></summary>
        <returns><span data-ttu-id="ff604-291">Un <see cref="T:System.Windows.Documents.TextPointer" /> à la position indiquée par le décalage spécifié, ou <see langword="null" /> si le décalage s’étend au-delà de la fin du contenu.</span><span class="sxs-lookup"><span data-stu-id="ff604-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-292">Les éléments suivants est considéré comme un symbole :</span><span class="sxs-lookup"><span data-stu-id="ff604-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="ff604-293">Une ouverture ou la balise de fermeture de la <xref:System.Windows.Documents.TextElement> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="ff604-294">Un <xref:System.Windows.UIElement> élément contenu dans un <xref:System.Windows.Documents.InlineUIContainer> ou <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="ff604-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="ff604-295">Notez que ce un <xref:System.Windows.UIElement> est toujours comptabilisé comme un seul symbole ; tout contenu supplémentaire ou les éléments contenus par le <xref:System.Windows.UIElement> ne sont pas comptés comme des symboles.</span><span class="sxs-lookup"><span data-stu-id="ff604-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="ff604-296">16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] caractère à l’intérieur d’un texte <xref:System.Windows.Documents.Run> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff604-297">Renvoie du texte adjacent au <see cref="T:System.Windows.Documents.TextPointer" />actuel.</span><span class="sxs-lookup"><span data-stu-id="ff604-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection -&gt; string" Usage="textPointer.GetTextInRun direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="ff604-298">L'une des valeurs <see cref="T:System.Windows.Documents.LogicalDirection" /> qui spécifient la direction logique dans laquelle trouver et renvoyer tout texte adjacent.</span><span class="sxs-lookup"><span data-stu-id="ff604-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span></span></param>
        <summary><span data-ttu-id="ff604-299">Renvoie une chaîne contenant tout texte adjacent au <see cref="T:System.Windows.Documents.TextPointer" /> actuel dans la direction logique spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="ff604-300">Une chaîne contenant tout texte adjacent dans la direction logique spécifiée, ou <see cref="F:System.String.Empty" /> si aucun texte adjacent n'est décelable.</span><span class="sxs-lookup"><span data-stu-id="ff604-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-301">Cette méthode retourne uniquement les exécutions de texte ininterrompues.</span><span class="sxs-lookup"><span data-stu-id="ff604-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="ff604-302">Rien n’est retourné si un type de symbole autre que <xref:System.Windows.Documents.TextPointerContext.Text> est adjacent à actuel <xref:System.Windows.Documents.TextPointer> dans la direction spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="ff604-303">De même, le texte est renvoyé uniquement jusqu'à le prochain symbole de non-texte.</span><span class="sxs-lookup"><span data-stu-id="ff604-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff604-304">L’exemple suivant illustre une utilisation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="ff604-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="ff604-305">L’exemple utilise le <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> méthode pour implémenter un extracteur de texte simple.</span><span class="sxs-lookup"><span data-stu-id="ff604-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="ff604-306">La méthode renvoie une concaténation de chaînes de tout le texte entre deux spécifié <xref:System.Windows.Documents.TextPointer> instances.</span><span class="sxs-lookup"><span data-stu-id="ff604-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="ff604-307">Bien que l’exemple peut être utilisé pour extraire tout texte entre deux <xref:System.Windows.Documents.TextPointer> instances, il est destiné uniquement à des fins d’illustration et ne doit pas être utilisé dans le code de production.</span><span class="sxs-lookup"><span data-stu-id="ff604-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="ff604-308">Utilisez la propriété <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> à la place.</span><span class="sxs-lookup"><span data-stu-id="ff604-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection * char[] * int * int -&gt; int" Usage="textPointer.GetTextInRun (direction, textBuffer, startIndex, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="ff604-309">L'une des valeurs <see cref="T:System.Windows.Documents.LogicalDirection" /> qui spécifient la direction logique dans laquelle trouver et copier tout texte adjacent.</span><span class="sxs-lookup"><span data-stu-id="ff604-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span></span></param>
        <param name="textBuffer"><span data-ttu-id="ff604-310">Une mémoire tampon dans laquelle tout texte est copié.</span><span class="sxs-lookup"><span data-stu-id="ff604-310">A buffer into which any text is copied.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ff604-311">Un index de <paramref name="textBuffer" /> à partir duquel commencer l'écriture du texte copié.</span><span class="sxs-lookup"><span data-stu-id="ff604-311">An index into <paramref name="textBuffer" /> at which to begin writing copied text.</span></span></param>
        <param name="count"><span data-ttu-id="ff604-312">Nombre maximum de caractères à copier.</span><span class="sxs-lookup"><span data-stu-id="ff604-312">The maximum number of characters to copy.</span></span></param>
        <summary><span data-ttu-id="ff604-313">Copie le nombre maximal spécifié de caractères à partir de tout texte adjacent dans la direction spécifiée dans un tableau de caractères fourni par un appelant.</span><span class="sxs-lookup"><span data-stu-id="ff604-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span></span></summary>
        <returns><span data-ttu-id="ff604-314">Nombre réel de caractères copiés dans <paramref name="textBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-314">The number of characters actually copied into <paramref name="textBuffer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-315">Cette méthode retourne uniquement les exécutions de texte ininterrompues.</span><span class="sxs-lookup"><span data-stu-id="ff604-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="ff604-316">Rien n’est retourné si un type de symbole autre que <xref:System.Windows.Documents.TextPointerContext.Text> est adjacent à actuel <xref:System.Windows.Documents.TextPointer> dans la direction spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="ff604-317">De même, le texte est renvoyé uniquement jusqu'à le prochain symbole de non-texte.</span><span class="sxs-lookup"><span data-stu-id="ff604-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ff604-318"><paramref name="startIndex" /> est inférieur à 0 ou supérieur à la propriété <see cref="P:System.Array.Length" /> de <paramref name="textBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-318"><paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span></span>  
  
<span data-ttu-id="ff604-319">ou</span><span class="sxs-lookup"><span data-stu-id="ff604-319">-or-</span></span> 
 <span data-ttu-id="ff604-320"><paramref name="count" /> est inférieur à 0 ou supérieur à l'espace restant dans <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span><span class="sxs-lookup"><span data-stu-id="ff604-320"><paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span></span> <span data-ttu-id="ff604-321">moins <paramref name="startIndex" />).</span><span class="sxs-lookup"><span data-stu-id="ff604-321">minus <paramref name="startIndex" />).</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextRunLength : System.Windows.Documents.LogicalDirection -&gt; int" Usage="textPointer.GetTextRunLength direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="ff604-322">L'une des valeurs <see cref="T:System.Windows.Documents.LogicalDirection" /> qui spécifient la direction logique dans laquelle compter le nombre de caractères.</span><span class="sxs-lookup"><span data-stu-id="ff604-322">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span></span></param>
        <summary><span data-ttu-id="ff604-323">Renvoie le nombre de caractères Unicode entre le <see cref="T:System.Windows.Documents.TextPointer" /> actuel et le prochain symbole de non-texte, dans la direction logique spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ff604-323">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="ff604-324">Le nombre de caractères Unicode entre le <see cref="T:System.Windows.Documents.TextPointer" /> actuel et le prochain symbole de non-texte.</span><span class="sxs-lookup"><span data-stu-id="ff604-324">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span></span>  <span data-ttu-id="ff604-325">Ce nombre peut être 0 s'il n'y a aucun texte adjacent.</span><span class="sxs-lookup"><span data-stu-id="ff604-325">This number may be 0 if there is no adjacent text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-326">Les éléments suivants est considéré comme un symbole :</span><span class="sxs-lookup"><span data-stu-id="ff604-326">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="ff604-327">Une ouverture ou la balise de fermeture de la <xref:System.Windows.Documents.TextElement> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-327">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="ff604-328">Un <xref:System.Windows.UIElement> élément contenu dans un <xref:System.Windows.Documents.InlineUIContainer> ou <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="ff604-328">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="ff604-329">Notez que ce un <xref:System.Windows.UIElement> est toujours comptabilisé comme un seul symbole ; tout contenu supplémentaire ou les éléments contenus par le <xref:System.Windows.UIElement> ne sont pas comptés comme des symboles.</span><span class="sxs-lookup"><span data-stu-id="ff604-329">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="ff604-330">16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] caractère à l’intérieur d’un texte <xref:System.Windows.Documents.Run> élément.</span><span class="sxs-lookup"><span data-stu-id="ff604-330">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidLayout : bool" Usage="System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.HasValidLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff604-331">Obtient une valeur indiquant si le conteneur de texte associé à la position actuelle a une disposition valide (mise à jour).</span><span class="sxs-lookup"><span data-stu-id="ff604-331">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span></span></summary>
        <value><span data-ttu-id="ff604-332"><see langword="true" />si la disposition actuelle est valide ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-332"><see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-333">Lorsque cela est nécessaire, opérations qui dépendent d’une disposition valide (tel que le <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> (méthode), <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> (méthode), et <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> propriété) si vous tentez de régénérer automatiquement une disposition valide avant de poursuivre l’opération.</span><span class="sxs-lookup"><span data-stu-id="ff604-333">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="ff604-334">Régénérer une disposition peut être une opération relativement coûteuse.</span><span class="sxs-lookup"><span data-stu-id="ff604-334">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="ff604-335">Cette propriété permet de vérifier une disposition valide avant d’effectuer des opérations pouvant régénérer la disposition.</span><span class="sxs-lookup"><span data-stu-id="ff604-335">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="ff604-336">Pour plus d’informations, consultez [Disposition](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="ff604-336">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertLineBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertLineBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff604-337">Insère un saut de ligne à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-337">Inserts a line break at the current position.</span></span></summary>
        <returns><span data-ttu-id="ff604-338">Un <see cref="T:System.Windows.Documents.TextPointer" /> positionné immédiatement après l'élément <see cref="T:System.Windows.Documents.LineBreak" /> a inséré par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="ff604-338">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertParagraphBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertParagraphBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff604-339">Insère un arrêt de paragraphe à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-339">Inserts a paragraph break at the current position.</span></span></summary>
        <returns><span data-ttu-id="ff604-340">Un <see cref="T:System.Windows.Documents.TextPointer" /> au début (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) du nouveau paragraphe.</span><span class="sxs-lookup"><span data-stu-id="ff604-340">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-341">Si cette méthode est appelée lorsque la position actuelle est à l’intérieur d’un existant <xref:System.Windows.Documents.Paragraph> élément, le paragraphe existant et tout son contenu sont divisées en deux paragraphes à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-341">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="ff604-342">Si cette méthode est appelée lorsque la position actuelle n’est pas à l’intérieur d’un paragraphe existant, un nouveau paragraphe vide est inséré.</span><span class="sxs-lookup"><span data-stu-id="ff604-342">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="ff604-343">Si cette méthode est appelée à la position ne sont pas adaptée pour fractionner ou en insérant un paragraphe (par exemple, si la position actuelle est à l’intérieur d’un <xref:System.Windows.Documents.Hyperlink> élément), une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="ff604-343">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ff604-344">Cette méthode est appelée sur une position ne pouvant pas être fractionnée pour accommoder un nouveau paragraphe, tel que dans la portée d'un <see cref="T:System.Windows.Documents.Hyperlink" /> ou <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-344">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.InsertTextInRun : string -&gt; unit" Usage="textPointer.InsertTextInRun textData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.InsertTextInRun(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="ff604-345">Texte à insérer.</span><span class="sxs-lookup"><span data-stu-id="ff604-345">The text to insert.</span></span></param>
        <summary><span data-ttu-id="ff604-346">Insère le texte spécifié dans le texte <see cref="T:System.Windows.Documents.Run" /> à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-346">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-347">Si le <xref:System.Windows.Documents.TextPointer> n’est pas limitée par un <xref:System.Windows.Documents.Run> élément, un <xref:System.Windows.Documents.Run> est inséré avec la `textData`.</span><span class="sxs-lookup"><span data-stu-id="ff604-347">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ff604-348">La position actuelle n'est pas dans un élément <see cref="T:System.Windows.Documents.Run" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-348">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ff604-349"><paramref name="textData" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-349"><paramref name="textData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtInsertionPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.IsAtInsertionPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff604-350">Obtient une valeur indiquant si la position actuelle est une position d'insertion.</span><span class="sxs-lookup"><span data-stu-id="ff604-350">Gets a value that indicates whether the current position is an insertion position.</span></span></summary>
        <value><span data-ttu-id="ff604-351"><see langword="true" /> si la position actuelle est une position d'insertion ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-351"><see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-352">Une position d’insertion est une position où le nouveau contenu peut être ajouté sans les règles sémantiques pour le contenu associé.</span><span class="sxs-lookup"><span data-stu-id="ff604-352">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="ff604-353">Dans la pratique, une position d’insertion est n’importe où dans le contenu où un point d’insertion peut être positionné.</span><span class="sxs-lookup"><span data-stu-id="ff604-353">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="ff604-354">Un exemple de valide <xref:System.Windows.Documents.TextPointer> position qui n’est pas une position d’insertion est la position entre deux adjacents <xref:System.Windows.Documents.Paragraph> balises (autrement dit, entre la balise de fermeture du paragraphe précédent et de la balise d’ouverture du paragraphe suivant).</span><span class="sxs-lookup"><span data-stu-id="ff604-354">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtLineStartPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff604-355">Obtient une valeur indiquant si la position actuelle est au début d'une ligne.</span><span class="sxs-lookup"><span data-stu-id="ff604-355">Gets a value that indicates whether the current position is at the beginning of a line.</span></span></summary>
        <value><span data-ttu-id="ff604-356"><see langword="true" /> si la position actuelle est au début d'une ligne; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-356"><see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-357">Si le <xref:System.Windows.Documents.TextPointer> pointe vers une position ambiguë, par exemple, entre deux lignes, la ligne dans la direction spécifiée par le <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> propriété est sélectionnée comme ligne de départ relative.</span><span class="sxs-lookup"><span data-stu-id="ff604-357">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="ff604-358">L’opération exécutée par cette propriété varie selon une disposition valide.</span><span class="sxs-lookup"><span data-stu-id="ff604-358">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="ff604-359">Lorsque cela est nécessaire, cette méthode essaie de régénérer automatiquement une disposition valide avant de poursuivre l’opération.</span><span class="sxs-lookup"><span data-stu-id="ff604-359">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="ff604-360">Régénérer une disposition peut être une opération relativement coûteuse.</span><span class="sxs-lookup"><span data-stu-id="ff604-360">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="ff604-361">Utilisez le <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> propriété à vérifier pour une disposition valide avant d’effectuer des opérations pouvant régénérer la disposition.</span><span class="sxs-lookup"><span data-stu-id="ff604-361">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="ff604-362">Pour plus d’informations, consultez [Disposition](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="ff604-362">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberSignature Language="F#" Value="member this.IsInSameDocument : System.Windows.Documents.TextPointer -&gt; bool" Usage="textPointer.IsInSameDocument textPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition"><span data-ttu-id="ff604-363">Un <see cref="T:System.Windows.Documents.TextPointer" /> qui spécifie une position à comparer à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-363">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span></span></param>
        <summary><span data-ttu-id="ff604-364">Indique si la position spécifiée est dans le même conteneur de texte que la  position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-364">Indicates whether the specified position is in the same text container as the current position.</span></span></summary>
        <returns><span data-ttu-id="ff604-365"><see langword="true" /> si <paramref name="textPosition" /> indique une position qui est dans le même conteneur de texte que la position actuelle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-365"><see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-366">La plupart des opérations qui impliquent plusieurs <xref:System.Windows.Documents.TextPointer> instances sont valides uniquement si les instances en question indiquent des positions qui se trouvent dans la même étendue de conteneur de texte.</span><span class="sxs-lookup"><span data-stu-id="ff604-366">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="ff604-367">Par exemple le <xref:System.Windows.Documents.TextPointer.CompareTo%2A> et <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> méthodes ne peut pas être utilisés avec un <xref:System.Windows.Documents.TextPointer> à une position en dehors du conteneur de texte associé à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-367">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="ff604-368">Utilisez cette méthode pour vérifier que spécifié <xref:System.Windows.Documents.TextPointer> est compatible avec la position actuelle pour ces opérations.</span><span class="sxs-lookup"><span data-stu-id="ff604-368">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff604-369">L’exemple suivant illustre une utilisation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="ff604-369">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="ff604-370">L’exemple utilise le <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> méthode permettant de vérifier si une certaine <xref:System.Windows.Documents.TextPointer> est placé entre deux autres spécifié <xref:System.Windows.Documents.TextPointer> instances dans une situation lorsqu’il n’existe aucune garantie que tous les trois positions appartiennent au même conteneur de texte.</span><span class="sxs-lookup"><span data-stu-id="ff604-370">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ff604-371"><paramref name="textPosition" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ff604-371"><paramref name="textPosition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalDirection : System.Windows.Documents.LogicalDirection" Usage="System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.LogicalDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff604-372">Obtient la direction logique associée à la position actuelle utilisée pour lever l'ambiguïté du contenu associé à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-372">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span></span></summary>
        <value><span data-ttu-id="ff604-373">La valeur <see cref="T:System.Windows.Documents.LogicalDirection" /> qui est associée à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-373">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff604-374">Comme exemple d’utilisation de cette propriété, le <xref:System.Windows.Documents.LogicalDirection> de la <xref:System.Windows.Documents.TextPointer> retourné par un test de positionnement méthode donne un accès entre deux caractères de texte.</span><span class="sxs-lookup"><span data-stu-id="ff604-374">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="ff604-375">La direction logique spécifie lequel des deux caractères a été réellement atteint - gauche ou droite.</span><span class="sxs-lookup"><span data-stu-id="ff604-375">The logical direction specifies which of the two characters was actually hit - the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paragraph : System.Windows.Documents.Paragraph" Usage="System.Windows.Documents.TextPointer.Paragraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff604-376">Obtient le paragraphe dans la portée de la position actuelle, s'il en est.</span><span class="sxs-lookup"><span data-stu-id="ff604-376">Gets the paragraph that scopes the current position, if any.</span></span></summary>
        <value><span data-ttu-id="ff604-377">Le <see cref="T:System.Windows.Documents.Paragraph" /> portant sur la position actuelle, ou <see langword="null" /> si aucun paragraphe de ce type n’existe.</span><span class="sxs-lookup"><span data-stu-id="ff604-377">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.Documents.TextPointer.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff604-378">Obtient le parent logique portant sur la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-378">Gets the logical parent that scopes the current position.</span></span></summary>
        <value><span data-ttu-id="ff604-379">Le parent logique portant sur la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="ff604-379">The logical parent that scopes the current position.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textPointer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff604-380">Ce type ou membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être utilisé directement à partir de votre code.</span><span class="sxs-lookup"><span data-stu-id="ff604-380">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="ff604-381">Chaîne qui représente l'objet.</span><span class="sxs-lookup"><span data-stu-id="ff604-381">The string that represents the object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>