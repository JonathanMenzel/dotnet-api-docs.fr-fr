<Type Name="TextEffectResolver" FullName="System.Windows.Documents.TextEffectResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="714af7b8b016a7a62341dbba249158e77ac200cf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36361907" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class TextEffectResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TextEffectResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextEffectResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class TextEffectResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextEffectResolver abstract sealed" />
  <TypeSignature Language="F#" Value="type TextEffectResolver = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe d'assistance qui définit des effets de texte dans un conteneur de texte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment appliquer un <xref:System.Windows.Media.TranslateTransform>, <xref:System.Windows.Media.ScaleTransform>, et <xref:System.Windows.Media.RotateTransform> effet de texte à texte. Voici le code XAML pour l’exemple.  
  
 [!code-xaml[FlowMiscSnippets_snip#TextEffectTargetExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/texteffecttargetexample.xaml#texteffecttargetexamplewholepage)]  
  
 Voici le code-behind de l’exemple.  
  
 [!code-csharp[FlowMiscSnippets_snip#TextEffectTargetCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/texteffecttargetexample.xaml.cs#texteffecttargetcodeexamplewholepage)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Windows.Documents.TextEffectTarget[] Resolve (System.Windows.Documents.TextPointer startPosition, System.Windows.Documents.TextPointer endPosition, System.Windows.Media.TextEffect effect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Documents.TextEffectTarget[] Resolve(class System.Windows.Documents.TextPointer startPosition, class System.Windows.Documents.TextPointer endPosition, class System.Windows.Media.TextEffect effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextEffectResolver.Resolve(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer,System.Windows.Media.TextEffect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (startPosition As TextPointer, endPosition As TextPointer, effect As TextEffect) As TextEffectTarget()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::Documents::TextEffectTarget ^&gt; ^ Resolve(System::Windows::Documents::TextPointer ^ startPosition, System::Windows::Documents::TextPointer ^ endPosition, System::Windows::Media::TextEffect ^ effect);" />
      <MemberSignature Language="F#" Value="static member Resolve : System.Windows.Documents.TextPointer * System.Windows.Documents.TextPointer * System.Windows.Media.TextEffect -&gt; System.Windows.Documents.TextEffectTarget[]" Usage="System.Windows.Documents.TextEffectResolver.Resolve (startPosition, endPosition, effect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextEffectTarget[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Windows.Documents.TextPointer" />
        <Parameter Name="endPosition" Type="System.Windows.Documents.TextPointer" />
        <Parameter Name="effect" Type="System.Windows.Media.TextEffect" />
      </Parameters>
      <Docs>
        <param name="startPosition">Pointeur de texte de début</param>
        <param name="endPosition">Pointeur de texte de fin</param>
        <param name="effect">Effet à appliquer au texte</param>
        <summary>Résout les effets de texte sur une plage de texte en une liste de cibles d'effets de texte.</summary>
        <returns>Collection d'objets <see cref="T:System.Windows.Documents.TextEffectTarget" /> correspondant à la plage de texte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour chaque bloc de texte continu, cette méthode crée un effet de texte ciblant l’élément (parent) étendue.  
  
   
  
## Examples  
 L’exemple suivant montre comment appliquer un <xref:System.Windows.Media.TranslateTransform>, <xref:System.Windows.Media.ScaleTransform>, et <xref:System.Windows.Media.RotateTransform> effet de texte à texte. Voici le code XAML pour l’exemple.  
  
 [!code-xaml[FlowMiscSnippets_snip#TextEffectTargetExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/texteffecttargetexample.xaml#texteffecttargetexamplewholepage)]  
  
 Voici le code-behind de l’exemple.  
  
 [!code-csharp[FlowMiscSnippets_snip#TextEffectTargetCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/texteffecttargetexample.xaml.cs#texteffecttargetcodeexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>