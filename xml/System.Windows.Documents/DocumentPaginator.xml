<Type Name="DocumentPaginator" FullName="System.Windows.Documents.DocumentPaginator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="048a68363397559370c5e3ed6a38e3c61f08936d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629683" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DocumentPaginator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DocumentPaginator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.DocumentPaginator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DocumentPaginator" />
  <TypeSignature Language="C++ CLI" Value="public ref class DocumentPaginator abstract" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une classe de base abstraite qui prend en charge la création d'éléments à plusieurs pages à partir d'un document unique.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous avez besoin repagination automatique en arrière-plan en réponse aux événements, comme la modification de la taille de page un <xref:System.Windows.Documents.FlowDocument>, puis utilisez <xref:System.Windows.Documents.DynamicDocumentPaginator> comme classe de base.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DocumentPaginator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DocumentPaginator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Documents.DocumentPaginator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public virtual void CancelAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CancelAsync (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CancelAsync(System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">
          <c> d'origine passé à </c>, <see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" />, <see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /> ou <see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /> qui identifie la tâche asynchrone à annuler.</param>
        <summary>Annule une opération <see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /> ou <see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /> précédente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `userState` est `null`, puis toutes les tâches asynchrones sont annulées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputePageCount">
      <MemberSignature Language="C#" Value="public virtual void ComputePageCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComputePageCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.ComputePageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComputePageCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComputePageCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Force une pagination du contenu, met à jour <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> avec le nouveau total et affecte à <see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /> la valeur <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> sera `true` dès que cela est appelé. Si le contenu est modifié ou <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> est modifiée une fois que cette méthode est appelée, <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> reprendra vraisemblablement `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputePageCountAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Force, de manière asynchrone, une pagination du contenu, met à jour <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> avec le nouveau total et affecte à <see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /> la valeur <see langword="true" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputePageCountAsync">
      <MemberSignature Language="C#" Value="public virtual void ComputePageCountAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComputePageCountAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComputePageCountAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComputePageCountAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Force, de manière asynchrone, une pagination du contenu, met à jour <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> avec le nouveau total et affecte à <see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /> la valeur <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La seule façon d’annuler l’opération asynchrone de cette méthode doit annuler toutes les opérations asynchrones. Ceci contraste avec l’autre surcharge de cette méthode : <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputePageCountAsync">
      <MemberSignature Language="C#" Value="public virtual void ComputePageCountAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComputePageCountAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComputePageCountAsync (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComputePageCountAsync(System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">Identificateur unique de la tâche asynchrone.</param>
        <summary>Force, de manière asynchrone, une pagination du contenu, met à jour <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> avec le nouveau total et affecte à <see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /> la valeur <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’ID spécifié est assigné à la tâche asynchrone.  
  
 Cette surcharge de la méthode permet d’annuler l’opération asynchrone sans annuler toutes les opérations asynchrones.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputePageCountCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler ComputePageCountCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler ComputePageCountCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event ComputePageCountCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ ComputePageCountCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une opération <see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /> est terminée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPage">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.DocumentPage GetPage (int pageNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.DocumentPage GetPage(int32 pageNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPage (pageNumber As Integer) As DocumentPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Documents::DocumentPage ^ GetPage(int pageNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageNumber">Numéro de page de base zéro de la page de document requise.</param>
        <summary>En cas de substitution dans une classe dérivée, obtient la <see cref="T:System.Windows.Documents.DocumentPage" /> correspondant au numéro de page spécifié.</summary>
        <returns>
          <see cref="T:System.Windows.Documents.DocumentPage" /> correspondant au <paramref name="pageNumber" /> spécifié ou valeur <see cref="F:System.Windows.Documents.DocumentPage.Missing" /> si cette page n'existe pas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si les pages avant `pageNumber` n’ont pas été mis en forme, elles sont paginées de manière synchrone avant de retourner la page demandée.  
  
 <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A> Fournit des fonctionnalités similaires en tant que <xref:System.Windows.Documents.DocumentPaginator.GetPage%2A>, mais pour une opération asynchrone.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pageNumber" /> est un nombre négatif.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPageAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne, de manière asynchrone, la <see cref="T:System.Windows.Documents.DocumentPage" /> correspondant au numéro de page spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPageAsync">
      <MemberSignature Language="C#" Value="public virtual void GetPageAsync (int pageNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetPageAsync(int32 pageNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetPageAsync (pageNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetPageAsync(int pageNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageNumber">Numéro de page de base zéro de la page de document requise.</param>
        <summary>Retourne, de manière asynchrone (par l'événement <see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" />), la <see cref="T:System.Windows.Documents.DocumentPage" /> correspondant au numéro de page spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La seule façon d’annuler l’opération asynchrone de cette méthode doit annuler toutes les opérations asynchrones. Ceci contraste avec l’autre surcharge de cette méthode : <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29>.  
  
 Cette méthode déclenche la <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> événement. Le <xref:System.Windows.Documents.DocumentPage> est passé à l’événement en tant qu’arguments d’événement. Consultez <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> pour savoir comment utiliser cette méthode pour obtenir la page.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pageNumber" /> est un nombre négatif.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPageAsync">
      <MemberSignature Language="C#" Value="public virtual void GetPageAsync (int pageNumber, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetPageAsync(int32 pageNumber, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetPageAsync (pageNumber As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetPageAsync(int pageNumber, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pageNumber">Numéro de page de base zéro de la <see cref="T:System.Windows.Documents.DocumentPage" /> à obtenir.</param>
        <param name="userState">Identificateur unique de la tâche asynchrone.</param>
        <summary>Retourne, de manière asynchrone (par l'événement <see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" />), la <see cref="T:System.Windows.Documents.DocumentPage" /> correspondant au numéro de page spécifié et assigne l'ID indiqué à la tâche asynchrone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette surcharge de la méthode permet d’annuler l’opération asynchrone sans annuler toutes les opérations asynchrones.  
  
 Cette méthode déclenche la <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> événement. Le <xref:System.Windows.Documents.DocumentPage> est passé à l’événement en tant qu’arguments d’événement.  
  
 Les étapes suivantes montrent comment récupérer un <xref:System.Windows.Documents.DocumentPage> asynchrone :  
  
1.  Créer un <xref:System.Windows.Documents.GetPageCompletedEventHandler> délégué et l’ajouter à être averti de <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> événements.  
  
2.  Appelez <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> spécifiant le `pageNumber` souhaité et qu’une unique `userState`, qui sera utilisé pour identifier la fin de l’événement asynchrone.  
  
3.  Lorsque l’événement se produit et le délégué est appelé, comparez l’événement <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propriété avec la version d’origine <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> `userState` paramètre.  (Le <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A> correspond également le `pageNumber` spécifié dans le <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> appeler.)  
  
4.  Lorsque le <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> la propriété correspond à la version d’origine <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> `userState`, l’opération est terminée et que la page est prête.  
  
5.  Appelez <xref:System.Windows.Documents.DocumentPaginator.GetPage%2A> pour récupérer la mise en forme <xref:System.Windows.Documents.DocumentPage>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pageNumber" /> est un nombre négatif.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPageCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Documents.GetPageCompletedEventHandler GetPageCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.GetPageCompletedEventHandler GetPageCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event GetPageCompleted As GetPageCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Documents::GetPageCompletedEventHandler ^ GetPageCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.GetPageCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque <see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /> est terminé.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Documents.GetPageCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsPageCountValid">
      <MemberSignature Language="C#" Value="public abstract bool IsPageCountValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPageCountValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPageCountValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPageCountValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, obtient une valeur indiquant si <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> correspond au nombre total de pages.</summary>
        <value>
          <see langword="true" /> si la pagination est terminée et si <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> correspond au nombre total de pages ; sinon, <see langword="false" />, si la pagination est en cours et si <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> correspond au nombre de pages actuellement mises en forme (et non au nombre total de pages).  
  
 La valeur peut redevenir <see langword="false" /> après avoir été <see langword="true" />, si des modifications sont apportées à <see cref="P:System.Windows.Documents.DocumentPaginator.PageSize" /> ou au contenu, ces événements forçant une repagination.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.DocumentPaginator.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="OnComputePageCountCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnComputePageCountCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnComputePageCountCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnComputePageCountCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnComputePageCountCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetPageCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnGetPageCompleted (System.Windows.Documents.GetPageCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGetPageCompleted(class System.Windows.Documents.GetPageCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGetPageCompleted (e As GetPageCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGetPageCompleted(System::Windows::Documents::GetPageCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Documents.GetPageCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Documents.GetPageCompletedEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPagesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPagesChanged (System.Windows.Documents.PagesChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagesChanged(class System.Windows.Documents.PagesChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPagesChanged (e As PagesChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPagesChanged(System::Windows::Documents::PagesChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Documents.PagesChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Documents.PagesChangedEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Documents.DocumentPaginator.PagesChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public abstract int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentPaginator.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int PageCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, obtient le nombre de pages actuellement mises en forme.</summary>
        <value>Nombre de pages qui ont été mises en forme.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> est `true`, la pagination est terminée et <xref:System.Windows.Documents.DocumentPaginator.PageCount%2A> est le nombre total de pages dans le document.  
  
 Si <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> est `false`, la pagination est en cours et <xref:System.Windows.Documents.DocumentPaginator.PageCount%2A> est le nombre de pages actuellement mises en forme (pas le total).  
  
 Cette valeur peut changer si <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> ou du contenu change, car ces événements forçant une repagination.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Documents.DynamicDocumentPaginator.PaginationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="PagesChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Documents.PagesChangedEventHandler PagesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.PagesChangedEventHandler PagesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.DocumentPaginator.PagesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PagesChanged As PagesChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Documents::PagesChangedEventHandler ^ PagesChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.PagesChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le contenu du document est modifié.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Documents.PagesChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Size PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentPaginator.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property PageSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Size PageSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, obtient ou définit la largeur et la hauteur suggérées de chaque page.</summary>
        <value>
          <see cref="T:System.Windows.Size" /> représentant la largeur et la hauteur de chaque page.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Documents.DocumentPaginator> peut remplacer la valeur de cette propriété. Les utilisateurs doivent vérifier <xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L'exemple suivant montre comment définir <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A>.  
  
 [!code-csharp[XpsSave#CreateFixedDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpfContent.cs#createfixeddocument)]
 [!code-vb[XpsSave#CreateFixedDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpfcontent.vb#createfixeddocument)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.IDocumentPaginatorSource Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.IDocumentPaginatorSource Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentPaginator.Source" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Source As IDocumentPaginatorSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Documents::IDocumentPaginatorSource ^ Source { System::Windows::Documents::IDocumentPaginatorSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.IDocumentPaginatorSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, retourne l'élément en cours de pagination.</summary>
        <value>
          <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /> représentant l'élément en cours de pagination.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’objet retourné comporte cette <xref:System.Windows.Documents.DocumentPaginator> comme valeur de son <xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A> propriété. Il est garanti d’avoir une telle propriété, car elle implémente <xref:System.Windows.Documents.IDocumentPaginatorSource>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>