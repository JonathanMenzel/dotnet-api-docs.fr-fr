<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84b5572cf9ba0ae76ee1c5c3bb7375f8ce499c04" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37521565" /></Metadata><TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type EditingCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f8dac-101">Fournit un jeu standard de commandes d'édition connexes.</span><span class="sxs-lookup"><span data-stu-id="f8dac-101">Provides a standard set of editing related commands.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-102">Le tableau suivant présente les commandes d’édition et la valeur par défaut associée mouvements clés (avec des noms de clé à partir de la <xref:System.Windows.Input.Key> et <xref:System.Windows.Input.ModifierKeys> énumérations).</span><span class="sxs-lookup"><span data-stu-id="f8dac-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="f8dac-103">Commande d’édition</span><span class="sxs-lookup"><span data-stu-id="f8dac-103">Editing command</span></span>|<span data-ttu-id="f8dac-104">Mouvement clé par défaut</span><span class="sxs-lookup"><span data-stu-id="f8dac-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="f8dac-105">Aucun mouvement clé par défaut</span><span class="sxs-lookup"><span data-stu-id="f8dac-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="f8dac-106">Aucun mouvement clé par défaut</span><span class="sxs-lookup"><span data-stu-id="f8dac-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="f8dac-107">Commandes du déplacement du signe insertion et sélection commandes en expansion partagent un ensemble commun de gestes de clé par défaut, la différence générale en cours de l’ajout de la <xref:System.Windows.Input.ModifierKeys.Shift> clé pour différencier les commandes de sélection des commandes de déplacement du signe insertion.</span><span class="sxs-lookup"><span data-stu-id="f8dac-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="f8dac-108">Par exemple, le <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> commande a un mouvement clé par défaut de <xref:System.Windows.Input.Key.Left>et le correspondantes <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> commande a un mouvement clé par défaut de <xref:System.Windows.Input.ModifierKeys.Shift> + <xref:System.Windows.Input.Key.Left>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="f8dac-109">En général, les définitions de commande fournies par le <xref:System.Windows.Documents.EditingCommands> n’apportez pas de classe utilisent des paramètres de commande (la `parameter` paramètre attendu par le <xref:System.Windows.Input.ICommand.Execute%2A> méthode).</span><span class="sxs-lookup"><span data-stu-id="f8dac-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="f8dac-110">Pour plus d’informations sur les commandes et leur exécution, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="f8dac-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-111">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-112">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-113">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-114">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-115">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-116">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-117">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-118">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignCenter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-119">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> qui demande de centrer le paragraphe actuel ou une sélection de paragraphes.</span><span class="sxs-lookup"><span data-stu-id="f8dac-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span></span></summary>
        <value><span data-ttu-id="f8dac-120">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-120">The requested command.</span></span>  <span data-ttu-id="f8dac-121">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="E" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-122">Cette commande fonctionne au niveau de la <xref:System.Windows.Documents.Paragraph> niveau.</span><span class="sxs-lookup"><span data-stu-id="f8dac-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="f8dac-123">Si cette commande est appelée sur une sélection partielle du contenu au sein d’un paragraphe (y compris une sélection vide où le signe insertion se trouve dans un paragraphe), l’effet demandé est appliqué à l’ensemble du paragraphe.</span><span class="sxs-lookup"><span data-stu-id="f8dac-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="f8dac-124">Si cette commande est appelée sur une sélection qui s’étend sur plusieurs paragraphes, l’effet est appliqué à tout le contenu de chaque paragraphe qui participe à la sélection.</span><span class="sxs-lookup"><span data-stu-id="f8dac-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="f8dac-125">La figure suivante montre un exemple de contenu centré.</span><span class="sxs-lookup"><span data-stu-id="f8dac-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="f8dac-126">![Capture d’écran : Valeur de la propriété TextAlign du centre](~/add/media/flowdoc-textalign-center.png "capture d’écran : valeur de la propriété TextAlign du centre")</span><span class="sxs-lookup"><span data-stu-id="f8dac-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="f8dac-127">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-128">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-129">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-130">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-131">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-132">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-133">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-134">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-135">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-136">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignJustify : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-137">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> qui demande de justifier le paragraphe actuel ou une sélection de paragraphes.</span><span class="sxs-lookup"><span data-stu-id="f8dac-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span></span></summary>
        <value><span data-ttu-id="f8dac-138">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-138">The requested command.</span></span>  <span data-ttu-id="f8dac-139">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="J" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-140">Cette commande fonctionne au niveau de la <xref:System.Windows.Documents.Paragraph> niveau.</span><span class="sxs-lookup"><span data-stu-id="f8dac-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="f8dac-141">Si cette commande est appelée sur une sélection partielle du contenu au sein d’un paragraphe (y compris une sélection vide où le signe insertion se trouve dans un paragraphe), l’effet demandé est appliqué à l’ensemble du paragraphe.</span><span class="sxs-lookup"><span data-stu-id="f8dac-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="f8dac-142">Si cette commande est appelée sur une sélection qui s’étend sur plusieurs paragraphes, l’effet est appliqué à tous les paragraphes dans la sélection.</span><span class="sxs-lookup"><span data-stu-id="f8dac-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="f8dac-143">Lorsque le contenu est justifié, l’espacement horizontal dans chaque ligne de contenu est ajusté afin que les lignes justifiées soient de largeur égale ou presque.</span><span class="sxs-lookup"><span data-stu-id="f8dac-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="f8dac-144">Contenu est généralement justifié de créer des bords lissés sur les côtés du contenu.</span><span class="sxs-lookup"><span data-stu-id="f8dac-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="f8dac-145">Comme il est souvent plus courte, la dernière ligne dans un paragraphe peut rester injustifiée après que cette commande est appelée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="f8dac-146">L’illustration suivante est justifié de contenu (aligné à gauche).</span><span class="sxs-lookup"><span data-stu-id="f8dac-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="f8dac-147">![Capture d’écran : Contenu non justifié](~/add/media/content-unjustified.png "capture d’écran : contenu non justifié")</span><span class="sxs-lookup"><span data-stu-id="f8dac-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="f8dac-148">La figure suivante montre le même contenu une fois justifié.</span><span class="sxs-lookup"><span data-stu-id="f8dac-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="f8dac-149">![Capture d’écran de contenu justifié texte](~/add/media/content-justified.png "capture d’écran de contenu justifié de texte")</span><span class="sxs-lookup"><span data-stu-id="f8dac-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="f8dac-150">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-151">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-152">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-153">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-154">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-155">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-156">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-157">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-158">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-159">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-160">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-161">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> qui demande qu'une sélection de contenu soit alignée à gauche.</span><span class="sxs-lookup"><span data-stu-id="f8dac-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span></span></summary>
        <value><span data-ttu-id="f8dac-162">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-162">The requested command.</span></span>  <span data-ttu-id="f8dac-163">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="L" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-164">Cette commande fonctionne au niveau de la <xref:System.Windows.Documents.Paragraph> niveau.</span><span class="sxs-lookup"><span data-stu-id="f8dac-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="f8dac-165">Si cette commande est appelée sur une sélection partielle du contenu au sein d’un paragraphe (y compris une sélection vide où le signe insertion se trouve dans un paragraphe), l’effet demandé est appliqué à l’ensemble du paragraphe.</span><span class="sxs-lookup"><span data-stu-id="f8dac-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="f8dac-166">Si cette commande est appelée sur une sélection qui s’étend sur plusieurs paragraphes, l’effet est appliqué à tout le contenu de chaque paragraphe qui participe à la sélection.</span><span class="sxs-lookup"><span data-stu-id="f8dac-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="f8dac-167">La figure suivante montre un exemple de contenu aligné à gauche.</span><span class="sxs-lookup"><span data-stu-id="f8dac-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="f8dac-168">![Capture d’écran : Valeur de la propriété TextAlign de gauche](~/add/media/flowdoc-textalign-left.png "capture d’écran : valeur de la propriété TextAlign de gauche")</span><span class="sxs-lookup"><span data-stu-id="f8dac-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="f8dac-169">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-170">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-171">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-172">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-173">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-174">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-175">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-176">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-177">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-178">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-179">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-180">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> qui demande qu'une sélection de contenu soit alignée à droite.</span><span class="sxs-lookup"><span data-stu-id="f8dac-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span></span></summary>
        <value><span data-ttu-id="f8dac-181">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-181">The requested command.</span></span>  <span data-ttu-id="f8dac-182">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="R" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-183">Cette commande fonctionne au niveau de la <xref:System.Windows.Documents.Paragraph> niveau.</span><span class="sxs-lookup"><span data-stu-id="f8dac-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="f8dac-184">Si cette commande est appelée sur une sélection partielle du contenu au sein d’un paragraphe (y compris une sélection vide où le signe insertion se trouve dans un paragraphe), l’effet demandé est appliqué à l’ensemble du paragraphe.</span><span class="sxs-lookup"><span data-stu-id="f8dac-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="f8dac-185">Si cette commande est appelée sur une sélection qui s’étend sur plusieurs paragraphes, l’effet est appliqué à tout le contenu de chaque paragraphe qui participe à la sélection.</span><span class="sxs-lookup"><span data-stu-id="f8dac-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="f8dac-186">La figure suivante montre un exemple de contenu aligné à droite.</span><span class="sxs-lookup"><span data-stu-id="f8dac-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="f8dac-187">![Capture d’écran : TextAlign avec la valeur droite](~/add/media/flowdoc-textalign-right.png "capture d’écran : TextAlign avec la valeur de droite")</span><span class="sxs-lookup"><span data-stu-id="f8dac-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="f8dac-188">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-189">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-190">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-191">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-192">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-193">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-194">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-195">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-196">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-197">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-198">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Backspace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Backspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-199">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> qui demande d'entrer un retour arrière à la position actuelle ou sur la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="f8dac-200">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-200">The requested command.</span></span>  <span data-ttu-id="f8dac-201">Le mouvement clé par défaut pour cette commande est <see langword="Backspace" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-201">The default key gesture for this command is <see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-202">Lorsqu’elle est appelée sur une sélection vide, cette commande supprime le caractère ou séparateur de paragraphe juste avant le signe insertion.</span><span class="sxs-lookup"><span data-stu-id="f8dac-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="f8dac-203">Lorsqu’elle est appelée sur une sélection non vide, cette commande supprime la sélection.</span><span class="sxs-lookup"><span data-stu-id="f8dac-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="f8dac-204">Cette commande conserve toute mise en forme de la sélection supprimée pour du contenu immédiatement inséré au même emplacement après que cette commande est appelée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="f8dac-205">Contraste avec le <xref:System.Windows.Documents.EditingCommands.Delete%2A> commande, qui ne conserve pas la mise en forme précédente.</span><span class="sxs-lookup"><span data-stu-id="f8dac-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="f8dac-206">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-207">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-208">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-209">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-210">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-211">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-212">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-213">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-214">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-215">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-216">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-217">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> qui demande que tout mot mal orthographié à la position actuelle soit corrigé.</span><span class="sxs-lookup"><span data-stu-id="f8dac-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span></span></summary>
        <value><span data-ttu-id="f8dac-218">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-218">The requested command.</span></span>  <span data-ttu-id="f8dac-219">Cette commande n'a aucun mouvement clé par défaut.</span><span class="sxs-lookup"><span data-stu-id="f8dac-219">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-220">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-221">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-222">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> qui demande que la taille de police pour la sélection actuelle soit réduite d'1 point.</span><span class="sxs-lookup"><span data-stu-id="f8dac-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span></span></summary>
        <value><span data-ttu-id="f8dac-223">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-223">The requested command.</span></span>  <span data-ttu-id="f8dac-224">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="OemOpenBrackets" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-225">Si cette commande est appelée sur une sélection vide où le signe insertion se trouve dans un mot, la sélection est automatiquement développée pour appliquer la commande au mot entier.</span><span class="sxs-lookup"><span data-stu-id="f8dac-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="f8dac-226">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-227">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-228">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-229">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-230">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-231">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-232">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-233">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-234">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-235">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-236">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-237">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> qui demande que la mise en retrait pour le paragraphe actuel soit réduite d'1 taquet de tabulation.</span><span class="sxs-lookup"><span data-stu-id="f8dac-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="f8dac-238">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-238">The requested command.</span></span>  <span data-ttu-id="f8dac-239">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="T" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-240">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-241">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f8dac-242">Cette commande n’a aucun effet sur un élément de texte, sauf si le <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> propriété de l’élément de texte est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="f8dac-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-243">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-244">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-245">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-246">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-247">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-248">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-249">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-250">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-251">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-252">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> qui demande que la sélection actuelle soit supprimée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span></span></summary>
        <value><span data-ttu-id="f8dac-253">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-253">The requested command.</span></span>  <span data-ttu-id="f8dac-254">Le mouvement clé par défaut pour cette commande est <see langword="Delete" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-254">The default key gesture for this command is <see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-255">Cette commande ignore toute mise en forme de la sélection supprimée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="f8dac-256">Contraste avec le <xref:System.Windows.Documents.EditingCommands.Backspace%2A> commande, qui conserve la mise en forme de la sélection supprimée pour du contenu immédiatement inséré au même emplacement après que cette commande est appelée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="f8dac-257">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-258">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-259">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-260">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-261">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-262">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-263">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-264">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-265">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-266">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-267">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteNextWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-268">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> qui demande que le prochain mot (relatif à une position actuelle) soit supprimé.</span><span class="sxs-lookup"><span data-stu-id="f8dac-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="f8dac-269">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-269">The requested command.</span></span>  <span data-ttu-id="f8dac-270">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Delete" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-271">Si le signe insertion est dans un mot, le reste du mot entre la position actuelle et la fin du mot est supprimé.</span><span class="sxs-lookup"><span data-stu-id="f8dac-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="f8dac-272">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-273">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-274">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-275">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-276">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-277">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-278">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-279">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-280">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-281">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-282">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeletePreviousWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-283">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> qui demande que le précédent mot (relatif à une position actuelle) soit supprimé.</span><span class="sxs-lookup"><span data-stu-id="f8dac-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="f8dac-284">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-284">The requested command.</span></span>  <span data-ttu-id="f8dac-285">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Backspace" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-286">Si le signe insertion est dans un mot, le reste du mot entre la position actuelle et le début du mot est supprimé.</span><span class="sxs-lookup"><span data-stu-id="f8dac-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="f8dac-287">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-288">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-289">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-290">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-291">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-292">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-293">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-294">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-295">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-296">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-297">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterLineBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-298">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> qui demande d'insérer un saut de ligne à la position actuelle ou sur la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="f8dac-299">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-299">The requested command.</span></span>  <span data-ttu-id="f8dac-300">Le mouvement clé par défaut pour cette commande est <see langword="Shift" /> + <see langword="Enter" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-301">Pour les éditeurs qui prennent en charge le contenu de flux, tel que <xref:System.Windows.Controls.RichTextBox>, cette commande entraîne un <xref:System.Windows.Documents.LineBreak> élément à insérer à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="f8dac-302">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-303">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox> et <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-304">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-305">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-306">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-307">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-308">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-309">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-310">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-311">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-312">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterParagraphBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-313">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> qui demande d'insérer un saut de paragraphe à la position actuelle ou sur la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="f8dac-314">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-314">The requested command.</span></span>  <span data-ttu-id="f8dac-315">Le mouvement clé par défaut pour cette commande est <see langword="Enter" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-315">The default key gesture for this command is <see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-316">Cette commande est équivalente à l’utilisateur en appuyant sur la touche ENTRÉE.</span><span class="sxs-lookup"><span data-stu-id="f8dac-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="f8dac-317">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-318">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox> et <xref:System.Windows.Controls.TextBox> (lorsque le <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> propriété est `true`).</span><span class="sxs-lookup"><span data-stu-id="f8dac-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f8dac-319">Cette commande n’a aucun effet sur un élément de texte, sauf si le <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> propriété de l’élément de texte est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="f8dac-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-320">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-321">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-322">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-323">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-324">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-325">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-326">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-327">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-328">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-329">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> qui demande qui toutes instances de mots mal orthographiés à la position actuelle ou dans la sélection actuelle soient ignorées.</span><span class="sxs-lookup"><span data-stu-id="f8dac-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span></span></summary>
        <value><span data-ttu-id="f8dac-330">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-330">The requested command.</span></span>  <span data-ttu-id="f8dac-331">Cette commande n'a aucun mouvement clé par défaut.</span><span class="sxs-lookup"><span data-stu-id="f8dac-331">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-332">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-333">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-334">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> qui demande que la taille de police pour la sélection actuelle soit augmentée d'1 point.</span><span class="sxs-lookup"><span data-stu-id="f8dac-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span></span></summary>
        <value><span data-ttu-id="f8dac-335">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-335">The requested command.</span></span>  <span data-ttu-id="f8dac-336">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="OemCloseBrackets" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-337">Si cette commande est appelée sur une sélection vide où le signe insertion se trouve dans un mot, la sélection est développée pour appliquer la commande au mot entier.</span><span class="sxs-lookup"><span data-stu-id="f8dac-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="f8dac-338">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-339">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-340">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-341">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-342">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-343">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-344">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-345">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-346">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-347">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-348">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-349">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> qui demande que la mise en retrait pour le paragraphe actuel soit augmentée d'1 taquet de tabulation.</span><span class="sxs-lookup"><span data-stu-id="f8dac-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="f8dac-350">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-350">The requested command.</span></span>  <span data-ttu-id="f8dac-351">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="T" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-352">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-353">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f8dac-354">Cette commande n’a aucun effet sur un élément de texte, sauf si le <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> propriété de l’élément de texte est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="f8dac-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-355">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-356">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-357">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-358">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-359">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-360">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-361">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-362">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-363">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-364">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> qui demande de descendre le signe insertion d'une ligne.</span><span class="sxs-lookup"><span data-stu-id="f8dac-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span></span></summary>
        <value><span data-ttu-id="f8dac-365">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-365">The requested command.</span></span>  <span data-ttu-id="f8dac-366">Le mouvement clé par défaut pour cette commande est <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-366">The default key gesture for this command is <see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-367">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-368">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox> et <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-369">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-370">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-371">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-372">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-373">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-374">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-375">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-376">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-377">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-378">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> qui demande de descendre le signe insertion d'une page.</span><span class="sxs-lookup"><span data-stu-id="f8dac-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span></span></summary>
        <value><span data-ttu-id="f8dac-379">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-379">The requested command.</span></span>  <span data-ttu-id="f8dac-380">Le mouvement clé par défaut pour cette commande est <see langword="PageDown" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-380">The default key gesture for this command is <see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-381">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-382">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox> et <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-383">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-384">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-385">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-386">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-387">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-388">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-389">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-390">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-391">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-392">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> qui demande de descendre le signe insertion d'un paragraphe.</span><span class="sxs-lookup"><span data-stu-id="f8dac-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="f8dac-393">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-393">The requested command.</span></span>  <span data-ttu-id="f8dac-394">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-395">Cette commande place le signe insertion au début du paragraphe suivant.</span><span class="sxs-lookup"><span data-stu-id="f8dac-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="f8dac-396">Cette commande se comporte comme <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> lorsqu’elle est appelée sur un <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="f8dac-397">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-398">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox> et <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-399">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-400">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-401">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-402">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-403">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-404">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-405">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-406">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-407">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-408">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> qui demande de décaler le signe insertion d'un caractère sur la gauche.</span><span class="sxs-lookup"><span data-stu-id="f8dac-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span></span></summary>
        <value><span data-ttu-id="f8dac-409">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-409">The requested command.</span></span>  <span data-ttu-id="f8dac-410">Le mouvement clé par défaut pour cette commande est <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-410">The default key gesture for this command is <see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-411">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-412">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-413">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-414">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-415">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-416">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-417">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-418">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-419">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-420">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-421">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-422">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> qui demande de décaler le signe insertion d'un mot sur la gauche.</span><span class="sxs-lookup"><span data-stu-id="f8dac-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span></span></summary>
        <value><span data-ttu-id="f8dac-423">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-423">The requested command.</span></span>  <span data-ttu-id="f8dac-424">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-425">Si le signe insertion est dans un mot, cette commande déplace le signe insertion au début de ce mot.</span><span class="sxs-lookup"><span data-stu-id="f8dac-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="f8dac-426">Sinon, cette commande déplace le signe insertion au début du mot précédent.</span><span class="sxs-lookup"><span data-stu-id="f8dac-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="f8dac-427">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-428">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-429">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-430">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-431">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-432">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-433">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-434">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-435">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-436">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-437">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-438">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> qui demande de décaler le signe insertion d'un caractère sur la droite.</span><span class="sxs-lookup"><span data-stu-id="f8dac-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span></span></summary>
        <value><span data-ttu-id="f8dac-439">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-439">The requested command.</span></span>  <span data-ttu-id="f8dac-440">Le mouvement clé par défaut pour cette commande est <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-440">The default key gesture for this command is <see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-441">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-442">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-443">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-444">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-445">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-446">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-447">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-448">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-449">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-450">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-451">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-452">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> qui demande de décaler le signe insertion d'un mot sur la droite.</span><span class="sxs-lookup"><span data-stu-id="f8dac-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span></span></summary>
        <value><span data-ttu-id="f8dac-453">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-453">The requested command.</span></span>  <span data-ttu-id="f8dac-454">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-455">Si le signe insertion est dans un mot, cette commande déplace le signe insertion à la fin de ce mot.</span><span class="sxs-lookup"><span data-stu-id="f8dac-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="f8dac-456">Sinon, cette commande déplace le signe insertion au début du mot suivant.</span><span class="sxs-lookup"><span data-stu-id="f8dac-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="f8dac-457">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-458">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-459">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-460">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-461">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-462">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-463">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-464">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-465">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-466">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-467">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-468">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> qui demande de déplacer le signe insertion jusqu'à la fin du contenu.</span><span class="sxs-lookup"><span data-stu-id="f8dac-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span></span></summary>
        <value><span data-ttu-id="f8dac-469">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-469">The requested command.</span></span>  <span data-ttu-id="f8dac-470">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-471">Un *conteneur de texte* est l’élément qui forme la bordure ultime pour le contenu disponible.</span><span class="sxs-lookup"><span data-stu-id="f8dac-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="f8dac-472"><xref:System.Windows.Controls.TextBlock> et <xref:System.Windows.Documents.FlowDocument> sont des exemples de conteneurs de texte.</span><span class="sxs-lookup"><span data-stu-id="f8dac-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="f8dac-473">Le contenu compris dans un conteneur de texte est appelé un *document*.</span><span class="sxs-lookup"><span data-stu-id="f8dac-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="f8dac-474">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-475">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-476">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-477">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-478">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-479">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-480">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-481">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-482">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-483">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-484">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-485">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> qui demande de déplacer le signe insertion tout au début du contenu.</span><span class="sxs-lookup"><span data-stu-id="f8dac-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="f8dac-486">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-486">The requested command.</span></span>  <span data-ttu-id="f8dac-487">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-488">Un *conteneur de texte* est l’élément qui forme la bordure ultime pour le contenu disponible.</span><span class="sxs-lookup"><span data-stu-id="f8dac-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="f8dac-489"><xref:System.Windows.Controls.TextBlock> et <xref:System.Windows.Documents.FlowDocument> sont des exemples de conteneurs de texte.</span><span class="sxs-lookup"><span data-stu-id="f8dac-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="f8dac-490">Le contenu compris dans un conteneur de texte est appelé un *document*.</span><span class="sxs-lookup"><span data-stu-id="f8dac-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="f8dac-491">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-492">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-493">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-494">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-495">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-496">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-497">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-498">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-499">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-500">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-501">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-502">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> qui demande de déplacer le signe insertion à la fin de la ligne actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="f8dac-503">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-503">The requested command.</span></span>  <span data-ttu-id="f8dac-504">Le mouvement clé par défaut pour cette commande est <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-504">The default key gesture for this command is <see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-505">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-506">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-507">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-508">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-509">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-510">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-511">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-512">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-513">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-514">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-515">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-516">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> qui demande de déplacer le signe insertion au début de la ligne actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="f8dac-517">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-517">The requested command.</span></span>  <span data-ttu-id="f8dac-518">Le mouvement clé par défaut pour cette commande est <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-518">The default key gesture for this command is <see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-519">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-520">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-521">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-522">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-523">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-524">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-525">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-526">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-527">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-528">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-529">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-530">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> qui demande de remonter le signe insertion d'une ligne.</span><span class="sxs-lookup"><span data-stu-id="f8dac-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span></span></summary>
        <value><span data-ttu-id="f8dac-531">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-531">The requested command.</span></span>  <span data-ttu-id="f8dac-532">Le mouvement clé par défaut pour cette commande est <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-532">The default key gesture for this command is <see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-533">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-534">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox> et <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-535">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-536">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-537">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-538">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-539">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-540">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-541">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-542">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-543">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-544">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> qui demande de remonter le signe insertion d'une page.</span><span class="sxs-lookup"><span data-stu-id="f8dac-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span></span></summary>
        <value><span data-ttu-id="f8dac-545">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-545">The requested command.</span></span>  <span data-ttu-id="f8dac-546">Le mouvement clé par défaut pour cette commande est <see langword="PageUp" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-546">The default key gesture for this command is <see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-547">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-548">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox> et <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-549">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-550">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-551">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-552">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-553">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-554">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-555">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-556">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-557">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-558">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> qui demande de remonter le signe insertion d'un paragraphe.</span><span class="sxs-lookup"><span data-stu-id="f8dac-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="f8dac-559">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-559">The requested command.</span></span>  <span data-ttu-id="f8dac-560">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-561">Cette commande place le signe insertion au début du paragraphe suivant.</span><span class="sxs-lookup"><span data-stu-id="f8dac-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="f8dac-562">Cette commande se comporte comme <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> lorsqu’elle est appelée sur un <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="f8dac-563">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-564">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox> et <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-565">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-566">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-567">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-568">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-569">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-570">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-571">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-572">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-573">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-574">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> qui demande d'étendre la sélection actuelle à la ligne suivante.</span><span class="sxs-lookup"><span data-stu-id="f8dac-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span></span></summary>
        <value><span data-ttu-id="f8dac-575">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-575">The requested command.</span></span>  <span data-ttu-id="f8dac-576">Le mouvement clé par défaut pour cette commande est <see langword="Shift" /> + <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-577">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-578">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-579">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-580">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-581">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-582">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-583">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-584">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-585">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-586">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-587">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-588">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> qui demande d'étendre la sélection actuelle à une page suivante.</span><span class="sxs-lookup"><span data-stu-id="f8dac-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span></span></summary>
        <value><span data-ttu-id="f8dac-589">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-589">The requested command.</span></span>  <span data-ttu-id="f8dac-590">Le mouvement clé par défaut pour cette commande est <see langword="Shift" /> + <see langword="PageDown" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-591">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-592">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-593">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-594">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-595">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-596">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-597">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-598">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-599">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-600">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-601">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-602">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> qui demande d'étendre la sélection actuelle au paragraphe suivant.</span><span class="sxs-lookup"><span data-stu-id="f8dac-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="f8dac-603">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-603">The requested command.</span></span>  <span data-ttu-id="f8dac-604">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-605">Cette commande étend la sélection au début du paragraphe suivant.</span><span class="sxs-lookup"><span data-stu-id="f8dac-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="f8dac-606">Sinon, cette commande étend la sélection à la fin du paragraphe actuel.</span><span class="sxs-lookup"><span data-stu-id="f8dac-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="f8dac-607">La sélection étendue inclut le saut de paragraphe qui marque la fin du paragraphe.</span><span class="sxs-lookup"><span data-stu-id="f8dac-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="f8dac-608">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-609">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-610">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-611">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-612">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-613">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-614">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-615">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-616">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-617">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-618">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-619">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> qui demande d'étendre la sélection actuelle d'un caractère sur la gauche.</span><span class="sxs-lookup"><span data-stu-id="f8dac-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span></span></summary>
        <value><span data-ttu-id="f8dac-620">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-620">The requested command.</span></span>  <span data-ttu-id="f8dac-621">Le mouvement clé par défaut pour cette commande est <see langword="Shift" /> + <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-622">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-623">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-624">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-625">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-626">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-627">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-628">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-629">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-630">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-631">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-632">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-633">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> qui demande d'étendre la sélection actuelle d'un mot sur la gauche.</span><span class="sxs-lookup"><span data-stu-id="f8dac-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span></span></summary>
        <value><span data-ttu-id="f8dac-634">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-634">The requested command.</span></span>  <span data-ttu-id="f8dac-635">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-636">Si le signe insertion est dans un mot, cette commande étend la sélection au début de ce mot.</span><span class="sxs-lookup"><span data-stu-id="f8dac-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="f8dac-637">Sinon, cette commande étend la sélection au début du mot précédent.</span><span class="sxs-lookup"><span data-stu-id="f8dac-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="f8dac-638">La sélection étendue n’inclut pas le délimiteur de mot.</span><span class="sxs-lookup"><span data-stu-id="f8dac-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="f8dac-639">Comparez avec <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, qui inclut le délimiteur de mot dans la sélection étendue.</span><span class="sxs-lookup"><span data-stu-id="f8dac-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="f8dac-640">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-641">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-642">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-643">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-644">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-645">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-646">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-647">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-648">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-649">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-650">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-651">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> qui demande d'étendre la sélection actuelle d'un caractère sur la droite.</span><span class="sxs-lookup"><span data-stu-id="f8dac-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span></span></summary>
        <value><span data-ttu-id="f8dac-652">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-652">The requested command.</span></span>  <span data-ttu-id="f8dac-653">Le mouvement clé par défaut pour cette commande est <see langword="Shift" /> + <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-654">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-655">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-656">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-657">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-658">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-659">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-660">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-661">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-662">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-663">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-664">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-665">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> qui demande d'étendre la sélection actuelle d'un mot sur la droite.</span><span class="sxs-lookup"><span data-stu-id="f8dac-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span></span></summary>
        <value><span data-ttu-id="f8dac-666">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-666">The requested command.</span></span>  <span data-ttu-id="f8dac-667">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-668">Si le signe insertion est dans un mot, cette commande étend la sélection à la fin de ce mot.</span><span class="sxs-lookup"><span data-stu-id="f8dac-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="f8dac-669">Sinon, cette commande étend la sélection à la fin du mot suivant.</span><span class="sxs-lookup"><span data-stu-id="f8dac-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="f8dac-670">La sélection étendue inclut le délimiteur de mot.</span><span class="sxs-lookup"><span data-stu-id="f8dac-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="f8dac-671">Comparez avec <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> qui n’inclut pas le délimiteur de mot dans la sélection étendue.</span><span class="sxs-lookup"><span data-stu-id="f8dac-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="f8dac-672">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-673">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-674">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-675">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-676">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-677">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-678">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-679">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-680">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-681">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-682">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-683">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> qui demande d'étendre la sélection actuelle jusqu'à la fin du contenu.</span><span class="sxs-lookup"><span data-stu-id="f8dac-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span></span></summary>
        <value><span data-ttu-id="f8dac-684">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-684">The requested command.</span></span>  <span data-ttu-id="f8dac-685">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-686">Un *conteneur de texte* est l’élément qui forme la bordure ultime pour le contenu disponible.</span><span class="sxs-lookup"><span data-stu-id="f8dac-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="f8dac-687"><xref:System.Windows.Controls.TextBlock> et <xref:System.Windows.Documents.FlowDocument> sont des exemples de conteneurs de texte.</span><span class="sxs-lookup"><span data-stu-id="f8dac-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="f8dac-688">Le contenu compris dans un conteneur de texte est appelé un *document*.</span><span class="sxs-lookup"><span data-stu-id="f8dac-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="f8dac-689">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-690">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-691">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-692">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-693">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-694">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-695">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-696">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-697">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-698">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-699">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-700">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> qui demande d'étendre la sélection actuelle jusqu'au début du contenu.</span><span class="sxs-lookup"><span data-stu-id="f8dac-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="f8dac-701">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-701">The requested command.</span></span>  <span data-ttu-id="f8dac-702">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-703">Un *conteneur de texte* est l’élément qui forme la bordure ultime pour le contenu disponible.</span><span class="sxs-lookup"><span data-stu-id="f8dac-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="f8dac-704"><xref:System.Windows.Controls.TextBlock> et <xref:System.Windows.Documents.FlowDocument> sont des exemples de conteneurs de texte.</span><span class="sxs-lookup"><span data-stu-id="f8dac-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="f8dac-705">Le contenu compris dans un conteneur de texte est appelé un *document*.</span><span class="sxs-lookup"><span data-stu-id="f8dac-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="f8dac-706">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-707">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-708">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-709">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-710">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-711">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-712">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-713">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-714">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-715">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-716">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-717">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> qui demande d'étendre la sélection actuelle jusqu'à la fin de la ligne actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="f8dac-718">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-718">The requested command.</span></span>  <span data-ttu-id="f8dac-719">Le mouvement clé par défaut pour cette commande est <see langword="Shift" /> + <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-720">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-721">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-722">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-723">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-724">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-725">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-726">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-727">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-728">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-729">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-730">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-731">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> qui demande d'étendre la sélection actuelle jusqu'au début de la ligne actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="f8dac-732">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-732">The requested command.</span></span>  <span data-ttu-id="f8dac-733">Le mouvement clé par défaut pour cette commande est <see langword="Shift" /> + <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-734">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-735">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-736">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-737">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-738">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-739">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-740">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-741">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-742">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-743">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-744">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-745">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> qui demande d'étendre la sélection actuelle à la ligne précédente.</span><span class="sxs-lookup"><span data-stu-id="f8dac-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span></span></summary>
        <value><span data-ttu-id="f8dac-746">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-746">The requested command.</span></span>  <span data-ttu-id="f8dac-747">Le mouvement clé par défaut pour cette commande est <see langword="Shift" /> + <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-748">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-749">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-750">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-751">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-752">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-753">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-754">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-755">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-756">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-757">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-758">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-759">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> qui demande d'étendre la sélection actuelle d’une page.</span><span class="sxs-lookup"><span data-stu-id="f8dac-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span></span></summary>
        <value><span data-ttu-id="f8dac-760">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-760">The requested command.</span></span>  <span data-ttu-id="f8dac-761">Le mouvement clé par défaut pour cette commande est <see langword="Shift" /> + <see langword="PageUp" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-762">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-763">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-764">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-765">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-766">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-767">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-768">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-769">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-770">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-771">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-772">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-773">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> qui demande d'étendre la sélection actuelle au paragraphe précédent.</span><span class="sxs-lookup"><span data-stu-id="f8dac-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="f8dac-774">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-774">The requested command.</span></span>  <span data-ttu-id="f8dac-775">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-776">Si le signe insertion se trouve au début d’un paragraphe, cette commande étend la sélection au début du paragraphe précédent.</span><span class="sxs-lookup"><span data-stu-id="f8dac-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="f8dac-777">Sinon, cette commande étend la sélection au début du paragraphe actuel.</span><span class="sxs-lookup"><span data-stu-id="f8dac-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="f8dac-778">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-779">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-780">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-781">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-782">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-783">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-784">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-785">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-786">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-787">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-788">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabBackward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-789">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span></span></summary>
        <value><span data-ttu-id="f8dac-790">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-790">The requested command.</span></span>  <span data-ttu-id="f8dac-791">Le mouvement clé par défaut pour cette commande est <see langword="Shift" /> + <see langword="Tab" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-792">Le comportement de cette commande dépend de la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="f8dac-793">Si la sélection est vide, cette commande équivaut à <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="f8dac-794">Si le signe insertion se trouve dans une cellule de tableau (représenté par la <xref:System.Windows.Documents.TableCell> élément), cette commande déplace le signe insertion vers la cellule précédente.</span><span class="sxs-lookup"><span data-stu-id="f8dac-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="f8dac-795">Sinon, un caractère de tabulation est inséré dans la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="f8dac-796">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-797">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox> et <xref:System.Windows.Controls.TextBox> (lorsque le <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> propriété est `true`).</span><span class="sxs-lookup"><span data-stu-id="f8dac-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-798">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-799">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-800">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-801">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-802">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-803">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-804">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-805">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-806">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-807">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.TabForward" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span></span></summary>
        <value><span data-ttu-id="f8dac-808">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-808">The requested command.</span></span>  <span data-ttu-id="f8dac-809">Le mouvement clé par défaut pour cette commande est <see langword="Tab" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-809">The default key gesture for this command is <see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-810">Le comportement de cette commande dépend de la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="f8dac-811">Si la sélection est vide, ou si la sélection est vide et la position actuelle du signe insertion se trouve au début d’un paragraphe, cette commande équivaut à <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="f8dac-812">Si le signe insertion se trouve dans une cellule de tableau (représenté par la <xref:System.Windows.Documents.TableCell> élément), cette commande déplace le signe insertion vers la cellule suivante.</span><span class="sxs-lookup"><span data-stu-id="f8dac-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="f8dac-813">Si le signe insertion se trouve dans la dernière cellule d’une table, cette commande entraîne une nouvelle ligne à ajouter à la table, avec le signe insertion positionné dans la première cellule de la nouvelle ligne.</span><span class="sxs-lookup"><span data-stu-id="f8dac-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="f8dac-814">Sinon, un caractère de tabulation est inséré dans la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="f8dac-815">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-816">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox> et <xref:System.Windows.Controls.TextBox> (lorsque le <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> propriété est `true`).</span><span class="sxs-lookup"><span data-stu-id="f8dac-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-817">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-818">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-819">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-820">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-821">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-822">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-823">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-824">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-825">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBold : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-826">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> qui demande que la mise en forme de <see cref="T:System.Windows.Documents.Bold" /> soit basculée sur la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="f8dac-827">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-827">The requested command.</span></span>  <span data-ttu-id="f8dac-828">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="B" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-829">Si le <xref:System.Windows.FontWeight> pour la sélection actuelle se trouve dans la plage comprise entre <xref:System.Windows.FontWeights.Thin%2A> à <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> est appliqué à la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="f8dac-830">Sinon, <xref:System.Windows.FontWeights.Normal%2A> est appliqué.</span><span class="sxs-lookup"><span data-stu-id="f8dac-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="f8dac-831">Pour une liste comparative de <xref:System.Windows.FontWeight> valeurs, consultez <xref:System.Windows.FontWeights>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="f8dac-832">Lorsque la sélection est vide et le signe insertion est dans un mot, la sélection est étendue pour inclure le mot entier.</span><span class="sxs-lookup"><span data-stu-id="f8dac-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="f8dac-833">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-834">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-835">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-836">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-837">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-838">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-839">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-840">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-841">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-842">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-843">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBullets : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-844">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> qui demande que la mise en forme des listes non ordonnées, (également appelées listes à puce) soit basculée sur la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="f8dac-845">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-845">The requested command.</span></span>  <span data-ttu-id="f8dac-846">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="L" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-847">Cette commande fonctionne au niveau de la <xref:System.Windows.Documents.Paragraph> niveau.</span><span class="sxs-lookup"><span data-stu-id="f8dac-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="f8dac-848">Si cette commande est appelée sur une sélection partielle du contenu au sein d’un paragraphe (y compris une sélection vide où le signe insertion se trouve dans un paragraphe), l’effet demandé est appliqué à l’ensemble du paragraphe.</span><span class="sxs-lookup"><span data-stu-id="f8dac-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="f8dac-849">Si cette commande est appelée sur une sélection qui s’étend sur plusieurs paragraphes, l’effet est appliqué à tout le contenu de chaque paragraphe qui participe à la sélection.</span><span class="sxs-lookup"><span data-stu-id="f8dac-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="f8dac-850">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-851">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-852">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-853">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-854">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-855">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-856">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-857">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-858">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-859">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-860">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleInsert : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-861">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> qui bascule le mode de frappe d'Insérer à Refrapper.</span><span class="sxs-lookup"><span data-stu-id="f8dac-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span></span></summary>
        <value><span data-ttu-id="f8dac-862">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-862">The requested command.</span></span>  <span data-ttu-id="f8dac-863">Le mouvement clé par défaut pour cette commande est <see langword="Insert" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-863">The default key gesture for this command is <see langword="Insert" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-864">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-865">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, et <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-866">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-867">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-868">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-869">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-870">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-871">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-872">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-873">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-874">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleItalic : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-875">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> qui demande que la mise en forme de <see cref="T:System.Windows.Documents.Italic" /> soit basculée sur la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="f8dac-876">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-876">The requested command.</span></span>  <span data-ttu-id="f8dac-877">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="I" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-878">Si le <xref:System.Windows.FontStyle> pour la sélection actuelle est <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> est appliqué à la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="f8dac-879">Sinon, <xref:System.Windows.FontStyles.Normal%2A> est appliqué.</span><span class="sxs-lookup"><span data-stu-id="f8dac-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="f8dac-880">Lorsque la sélection est vide et le signe insertion est dans un mot, la sélection est étendue pour inclure le mot entier.</span><span class="sxs-lookup"><span data-stu-id="f8dac-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="f8dac-881">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-882">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-883">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-884">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-885">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-886">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-887">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-888">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-889">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-890">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-891">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleNumbering : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-892">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> qui demande que la mise en forme des listes ordonnées (également appelées listes numérotées) soit basculée sur la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="f8dac-893">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-893">The requested command.</span></span>  <span data-ttu-id="f8dac-894">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="N" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-895">Cette commande fonctionne au niveau de la <xref:System.Windows.Documents.Paragraph> niveau.</span><span class="sxs-lookup"><span data-stu-id="f8dac-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="f8dac-896">Si cette commande est appelée sur une sélection partielle du contenu au sein d’un paragraphe (y compris une sélection vide où le signe insertion se trouve dans un paragraphe), l’effet demandé est appliqué à l’ensemble du paragraphe.</span><span class="sxs-lookup"><span data-stu-id="f8dac-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="f8dac-897">Si cette commande est appelée sur une sélection qui s’étend sur plusieurs paragraphes, l’effet est appliqué à tout le contenu de chaque paragraphe qui participe à la sélection.</span><span class="sxs-lookup"><span data-stu-id="f8dac-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="f8dac-898">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-899">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-900">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-901">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-902">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-903">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-904">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-905">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-906">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-907">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-908">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSubscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-909">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> qui demande que la mise en forme d'indice soit basculée sur la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="f8dac-910">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-910">The requested command.</span></span>  <span data-ttu-id="f8dac-911">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="OemPlus" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-912">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-913">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-914">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-915">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-916">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-917">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-918">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-919">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-920">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-921">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSuperscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-922">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> qui demande que la mise en forme d'exposant soit basculée sur la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="f8dac-923">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-923">The requested command.</span></span>  <span data-ttu-id="f8dac-924">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="OemPlus" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-925">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-926">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-927">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-928">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-929">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-930">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-931">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-932">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-933">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-934">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleUnderline : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8dac-935">Représente la commande <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> qui demande que la mise en forme de <see cref="T:System.Windows.Documents.Underline" /> soit basculée sur la sélection actuelle.</span><span class="sxs-lookup"><span data-stu-id="f8dac-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="f8dac-936">Commande demandée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-936">The requested command.</span></span>  <span data-ttu-id="f8dac-937">Le mouvement clé par défaut pour cette commande est <see langword="Ctrl" /> + <see langword="U" />.</span><span class="sxs-lookup"><span data-stu-id="f8dac-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8dac-938">Lorsque la sélection est vide et le signe insertion est dans un mot, la sélection est étendue pour inclure le mot entier.</span><span class="sxs-lookup"><span data-stu-id="f8dac-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="f8dac-939">Il n’est pas nécessairement une implémentation réelle qui répond à cette commande sur n’importe quel objet donné ; dans de nombreux cas, l’implémentation qui répond à une commande est la responsabilité de l’enregistreur de l’application.</span><span class="sxs-lookup"><span data-stu-id="f8dac-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="f8dac-940">Cette commande est prise en charge native <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f8dac-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8dac-941">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="f8dac-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f8dac-942">L’exemple suivant montre comment appeler une commande d’édition sur un objet qui prend en charge de la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="f8dac-943">Pour cet exemple, un <xref:System.Windows.Controls.RichTextBox> sert de cible de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="f8dac-944">Notez que <xref:System.Windows.Controls.RichTextBox> implémente le <xref:System.Windows.IInputElement> interface (héritée de <xref:System.Windows.FrameworkElement>), et qu’il inclut une prise en charge native de nombreuses commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-945">Le premier argument pour le <xref:System.Windows.Input.RoutedCommand.Execute%2A> méthode est un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="f8dac-946">Les commandes d’édition plus ignorent le paramètre de commande ; en règle générale, ce paramètre doit être `null` pour les commandes d’édition.</span><span class="sxs-lookup"><span data-stu-id="f8dac-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="f8dac-947">Le deuxième argument spécifie l’objet auquel la commande sera routée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="f8dac-948">Cet objet doit implémenter le <xref:System.Windows.IInputElement> interface et doit inclure un gestionnaire pour la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f8dac-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="f8dac-949">En règle générale, une commande est ignorée lorsqu’elle est appelée sur un objet qui ne gère pas la commande.</span><span class="sxs-lookup"><span data-stu-id="f8dac-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>