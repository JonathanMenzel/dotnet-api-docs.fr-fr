<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LifetimeContext.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e6df31d56ae5b6086311f6e6e39a28e33806ed5c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6df31d56ae5b6086311f6e6e39a28e33806ed5c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.1,netcore-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>Represents a node in the lifetime tree.</source>
          <target state="translated">Représente un nœud dans l’arborescence de la durée de vie.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>The <ph id="ph1">&lt;xref:System.Composition.Hosting.Core.LifetimeContext&gt;</ph> object is the unit of sharing for shared parts.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Composition.Hosting.Core.LifetimeContext&gt;</ph> objet est l’unité de partage de fichiers pour les composants partagés.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>It controls the disposal of bound parts and can be used to retrieve instances, either as part of an existing composition operation or as the basis of a new composition operation.</source>
          <target state="translated">Il contrôle la disposition des parties liées et peut être utilisé pour récupérer des instances, soit dans le cadre d’une opération de composition existante comme base d’une nouvelle opération de composition.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>An individual lifetime context can be marked to contain parts that are constrained by particular sharing boundaries.</source>
          <target state="translated">Un contexte de la durée de vie individuels peut être marqué pour qu’il contienne les parties qui sont limitées par les limites de partage particuliers.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>This object contains two pieces of independently protected shared state: shared part instances and bound part instances.</source>
          <target state="translated">Cet objet contienne deux éléments d’un état partagé protégé de façon indépendante : partagé des instances de composant et liée d’instances du composant.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>A shared part instance is lock-free, readable, and does not result in issues if it is added to during disposal.</source>
          <target state="translated">Une instance de composant partagé est accessible en lecture, sans verrou et n’entraîne pas de problèmes, s’il est ajouté au cours de suppression.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>It is protected by being locked itself.</source>
          <target state="translated">Il est protégé par lui-même verrouillés.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>Activation logic is unavoidably called under this lock.</source>
          <target state="translated">Logique d’activation est appelée inévitablement sous ce verrou.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>A bound part instance is always protected by locking <ph id="ph1">&lt;see langword="this" /&gt;</ph>, and should never be written to after disposal.</source>
          <target state="translated">Une instance de composant dépendant soit toujours protégée par un verrouillage <ph id="ph1">&lt;see langword="this" /&gt;</ph>et ne doit jamais être écrite dans après la sortie.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>A bound part instance is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> under a lock in the <ph id="ph2">&lt;xref:System.Composition.Hosting.Core.LifetimeContext.Dispose&gt;</ph> method.</source>
          <target state="translated">Une instance de composant liée est définie sur <ph id="ph1">&lt;see langword="null" /&gt;</ph> d’un verrou dans le <ph id="ph2">&lt;xref:System.Composition.Hosting.Core.LifetimeContext.Dispose&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>If writing were allowed after disposal for a bound part instance, it would result in disposable parts not being released.</source>
          <target state="translated">Si l’écriture est autorisée après la sortie pour une instance de composant dépendant, il entraînerait des parties supprimables ne pas libérés.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>The dispose method on a bound part is called outside of the lock.</source>
          <target state="translated">La méthode dispose sur une partie liée est appelée en dehors du verrou.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AddBoundInstance(System.IDisposable)">
          <source>The part.</source>
          <target state="translated">Partie.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AddBoundInstance(System.IDisposable)">
          <source>Binds the lifetime of a disposable part to this lifetime context.</source>
          <target state="translated">Relie la durée de vie d'un composant jetable à la durée de vie de ce contexte.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AddBoundInstance(System.IDisposable)">
          <source>The operation was performed on a disposed object.</source>
          <target state="translated">L’opération a été effectuée sur un objet supprimé.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AllocateSharingId">
          <source>Generates an identifier that can be used to locate shared part instances.</source>
          <target state="translated">Génère un identificateur qui peut être utilisé pour localiser les instances de composant partagées.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AllocateSharingId">
          <source>A new unique identifier.</source>
          <target state="translated">Nouvel identificateur unique.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.Dispose">
          <source>Releases the lifetime context and any part instances bound to it.</source>
          <target state="translated">Libère le contexte de durée de vie et toutes les instances des composants liées à celui-ci.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)">
          <source>The sharing boundary to find a lifetime context within.</source>
          <target state="translated">La limite de partage dans laquelle rechercher un contexte de durée de vie.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)">
          <source>Finds the broadest lifetime context within all of the specified sharing boundaries.</source>
          <target state="translated">Recherche le contexte de plus grande durée de vie dans toutes les limites de partage spécifiées.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)">
          <source>The broadest lifetime context within all of the specified sharing boundaries.</source>
          <target state="translated">Contexte de plus grande durée de vie dans toutes les limites de partage spécifiées.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)">
          <source>Currently, the root cannot be a boundary.</source>
          <target state="translated">Actuellement, la racine ne peut pas être une limite.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>The ID of the shared part.</source>
          <target state="translated">ID du composant partagé.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>An operation in which to create a part, if necessary.</source>
          <target state="translated">Opération dans laquelle créer un composant, si nécessaire.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>An activator that can activate a new part instance, if necessary.</source>
          <target state="translated">Activateur qui peut activer une nouvelle instance de composant, si nécessaire.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>Retrieves a shared part instance with the specified ID, or if the part instance can not be found, creates and shares a part instance using the specified creator within the specified operation.</source>
          <target state="translated">Récupère une instance de composant partagée avec l’ID spécifié ou, si l’instance de composant est introuvable, crée et partage une instance de composant à l’aide de l’auteur spécifié dans l’opération spécifiée.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>The new or retrieved part.</source>
          <target state="translated">Composant nouveau ou extrait.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>This method is lock-free if the part instance already exists.</source>
          <target state="translated">Cette méthode est sans verrou si l’instance de composant existe déjà.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>If the part instance must be created, a lock will be taken that will serialize other writes that use this method (concurrent reads will continue to be safe and lock-free).</source>
          <target state="translated">Si l’instance de composant doit être créé, un verrou à entreprendre qui sérialise autres écritures qui utilisent cette méthode (lectures simultanées continuera à être sécurisées et sans verrou).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>It is important that the composition, and thus lock acquisition, is strictly leaf-to-root in the lifetime tree.</source>
          <target state="translated">Il est important que la composition et par conséquent, l’acquisition de verrou, est strictement feuille racine dans l’arborescence de la durée de vie.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.ToString">
          <source>Returns the string representation of this <ph id="ph1">&lt;see cref="T:System.Composition.Hosting.Core.LifetimeContext" /&gt;</ph> object.</source>
          <target state="translated">Retourne la représentation sous forme de chaîne de cet objet <ph id="ph1">&lt;see cref="T:System.Composition.Hosting.Core.LifetimeContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Composition.Hosting.Core.LifetimeContext" /&gt;</ph> object.</source>
          <target state="translated">Représentation sous forme de chaîne de cet objet <ph id="ph1">&lt;see cref="T:System.Composition.Hosting.Core.LifetimeContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)">
          <source>The contract.</source>
          <target state="translated">Contrat.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)">
          <source>After this method returns, contains the contract instance if available; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Après le retour de cette méthode, contient l’instance de contrat si elle est disponible ; sinon, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)">
          <source>Retrieves a contract instance from the composition context.</source>
          <target state="translated">Récupère une instance de contrat du contexte de composition.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance was retrieved; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instance a été récupérée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>