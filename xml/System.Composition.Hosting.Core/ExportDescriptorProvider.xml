<Type Name="ExportDescriptorProvider" FullName="System.Composition.Hosting.Core.ExportDescriptorProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65dba250d9a093ba121c83428dc0e82d7864c083" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49135362" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExportDescriptorProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExportDescriptorProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Hosting.Core.ExportDescriptorProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExportDescriptorProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportDescriptorProvider abstract" />
  <TypeSignature Language="F#" Value="type ExportDescriptorProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Hosting</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
    <AssemblyVersion>1.0.33.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit la description d’une exportation pour un composant connu du moteur de composition.</summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExportDescriptorProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.ExportDescriptorProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExportDescriptorProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Composition.Hosting.Core.ExportDescriptorProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il s’agit d’un constructeur protégé qui peut être appelé uniquement à partir de classes dérivées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportDescriptors">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.ExportDescriptorPromise&gt; GetExportDescriptors (System.Composition.Hosting.Core.CompositionContract contract, System.Composition.Hosting.Core.DependencyAccessor descriptorAccessor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Composition.Hosting.Core.ExportDescriptorPromise&gt; GetExportDescriptors(class System.Composition.Hosting.Core.CompositionContract contract, class System.Composition.Hosting.Core.DependencyAccessor descriptorAccessor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.ExportDescriptorProvider.GetExportDescriptors(System.Composition.Hosting.Core.CompositionContract,System.Composition.Hosting.Core.DependencyAccessor)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExportDescriptors (contract As CompositionContract, descriptorAccessor As DependencyAccessor) As IEnumerable(Of ExportDescriptorPromise)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Composition::Hosting::Core::ExportDescriptorPromise ^&gt; ^ GetExportDescriptors(System::Composition::Hosting::Core::CompositionContract ^ contract, System::Composition::Hosting::Core::DependencyAccessor ^ descriptorAccessor);" />
      <MemberSignature Language="F#" Value="abstract member GetExportDescriptors : System.Composition.Hosting.Core.CompositionContract * System.Composition.Hosting.Core.DependencyAccessor -&gt; seq&lt;System.Composition.Hosting.Core.ExportDescriptorPromise&gt;" Usage="exportDescriptorProvider.GetExportDescriptors (contract, descriptorAccessor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.ExportDescriptorPromise&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="descriptorAccessor" Type="System.Composition.Hosting.Core.DependencyAccessor" />
      </Parameters>
      <Docs>
        <param name="contract">Clé d’exportation exigée par un autre composant.</param>
        <param name="descriptorAccessor">Accesseur aux autres descripteurs de la composition.</param>
        <summary>Récupère des descripteurs d’exportation de promesses pour la clé d’exportation spécifiée.</summary>
        <returns>Collection de promesses pour de nouveaux descripteurs d'exportation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un fournisseur doivent uniquement être interrogé qu’une seule fois pour chaque clé d’exportation unique. L’accesseur de descripteur peut uniquement être interrogée immédiatement si le descripteur promis d’en cours est un adaptateur, tel que <see cref="Lazy{T}"/>; sinon, dépendances doivent uniquement être interrogées au sein de l’exécution de la fonction fournie pour le <xref:System.Composition.Hosting.Core.ExportDescriptorPromise>. Les descripteurs réels fournies par cette méthode, ne doivent pas fermer sur ou faire référence à n’importe quel aspect de la structure de dépendance/promesse, comme cela empêcherait la structure d’une garbage collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoDependencies">
      <MemberSignature Language="C#" Value="protected static readonly Func&lt;System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.CompositionDependency&gt;&gt; NoDependencies;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly class System.Func`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Composition.Hosting.Core.CompositionDependency&gt;&gt; NoDependencies" />
      <MemberSignature Language="DocId" Value="F:System.Composition.Hosting.Core.ExportDescriptorProvider.NoDependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly NoDependencies As Func(Of IEnumerable(Of CompositionDependency)) " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly Func&lt;System::Collections::Generic::IEnumerable&lt;System::Composition::Hosting::Core::CompositionDependency ^&gt; ^&gt; ^ NoDependencies;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoDependencies : Func&lt;seq&lt;System.Composition.Hosting.Core.CompositionDependency&gt;&gt;" Usage="System.Composition.Hosting.Core.ExportDescriptorProvider.NoDependencies" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.CompositionDependency&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique un manque de dépendances.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="NoExportDescriptors">
      <MemberSignature Language="C#" Value="protected static readonly System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.ExportDescriptorPromise&gt; NoExportDescriptors;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly class System.Collections.Generic.IEnumerable`1&lt;class System.Composition.Hosting.Core.ExportDescriptorPromise&gt; NoExportDescriptors" />
      <MemberSignature Language="DocId" Value="F:System.Composition.Hosting.Core.ExportDescriptorProvider.NoExportDescriptors" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly NoExportDescriptors As IEnumerable(Of ExportDescriptorPromise) " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Collections::Generic::IEnumerable&lt;System::Composition::Hosting::Core::ExportDescriptorPromise ^&gt; ^ NoExportDescriptors;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoExportDescriptors : seq&lt;System.Composition.Hosting.Core.ExportDescriptorPromise&gt;" Usage="System.Composition.Hosting.Core.ExportDescriptorProvider.NoExportDescriptors" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.ExportDescriptorPromise&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique un manque de descripteurs d'exportation.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="NoMetadata">
      <MemberSignature Language="C#" Value="protected static readonly System.Collections.Generic.IDictionary&lt;string,object&gt; NoMetadata;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly class System.Collections.Generic.IDictionary`2&lt;string, object&gt; NoMetadata" />
      <MemberSignature Language="DocId" Value="F:System.Composition.Hosting.Core.ExportDescriptorProvider.NoMetadata" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly NoMetadata As IDictionary(Of String, Object) " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ NoMetadata;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoMetadata : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.Composition.Hosting.Core.ExportDescriptorProvider.NoMetadata" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique un manque de métadonnées.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>