<Type Name="TrackingService" FullName="System.Workflow.Runtime.Tracking.TrackingService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1819eb05b65c1f431d253479d6736ab5bf7a40e0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37735103" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TrackingService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrackingService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrackingService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type TrackingService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit l'interface de base entre un service de suivi et l'infrastructure de suivi d'exécution.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Un service de suivi est chargé de fournir des canaux de suivi et des profils de suivi au moteur d'exécution de workflow. Le moteur d'exécution de workflow demande un <xref:System.Workflow.Runtime.Tracking.TrackingChannel> à un service de suivi pour chaque instance de workflow pour laquelle il a un <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. Le moteur d'exécution de workflow utilise ce <xref:System.Workflow.Runtime.Tracking.TrackingChannel> pour envoyer les enregistrements de suivi associés à cette instance de workflow. Un <xref:System.Workflow.Runtime.Tracking.TrackingProfile> contient des trackpoints qui spécifient un ensemble d'événements de suivi pour lesquels l'infrastructure de suivi d'exécution doit envoyer des enregistrements de suivi. Un <xref:System.Workflow.Runtime.Tracking.TrackingProfile> peut spécifier également les données à extraire de l'instance de workflow lorsque l'un de ces événements de suivi se produit.  
  
 L'infrastructure de suivi d'exécution utilise un <xref:System.Workflow.Runtime.Tracking.TrackingProfile> pour filtrer les événements de suivi émis par une instance de workflow. Lorsqu'un événement de suivi émis correspondant à un trackpoint dans le <xref:System.Workflow.Runtime.Tracking.TrackingProfile>, l'infrastructure de suivi d'exécution extrait toutes les données spécifiées dans le <xref:System.Workflow.Runtime.Tracking.TrackingProfile> à partir de l'instance de workflow et encapsule ces données et informations relatives à l'événement de suivi dans un enregistrement de suivi. Cet enregistrement de suivi est ensuite envoyé sur le <xref:System.Workflow.Runtime.Tracking.TrackingChannel> associé à l'instance de workflow. Un enregistrement de suivi peut être l'un des types suivants :  
  
 <xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord>  
  
 <xref:System.Workflow.Runtime.Tracking.UserTrackingRecord>  
  
 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>  
  
 L'application hôte peut utiliser l'enregistrement de suivi de n'importe quelle façon. Par exemple, elle peut stocker les informations de suivi dans une base de données et les utiliser pour implémenter une interface utilisateur sophistiquée, ou elle peut utiliser les informations pour informer un administrateur d'une condition qui requiert une action. Vous pouvez inscrire un service de suivi auprès du moteur d'exécution de workflow en appelant <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A?displayProperty=nameWithType> ou en incluant l'entrée appropriée dans le fichier de configuration de l'application.  
  
 Tous les services de suivi doivent hériter de la classe abstraite <xref:System.Workflow.Runtime.Tracking.TrackingService>. Cette classe définit l'interface de base entre un service de suivi et l'infrastructure de suivi d'exécution. Le moteur d'exécution de workflow demande un <xref:System.Workflow.Runtime.Tracking.TrackingProfile> pour une instance de workflow ou un <xref:System.Type> de workflow spécifique en appelant une des méthodes <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> surchargées ou la méthode <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A>. Le moteur d'exécution de workflow appelle <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A> pour demander un <xref:System.Workflow.Runtime.Tracking.TrackingChannel>.  
  
 Le runtime de suivi de workflow appelle les méthodes <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> et <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> chaque fois qu'une instance de workflow est créée ou chargée à partir du magasin de persistance. La surcharge associée à ces appels peut être coûteuse pour le service de suivi (de nombreux appels de base de données, par exemple). Vous pouvez implémenter l'interface <xref:System.Workflow.Runtime.Tracking.IProfileNotification> dans votre service de suivi pour contourner ce mécanisme basé sur les appels et utiliser des événements pour informer le moteur d'exécution de workflow des modifications apportées à un <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. Pour les services de suivi qui implémentent l'interface <xref:System.Workflow.Runtime.Tracking.IProfileNotification>, le moteur d'exécution de workflow s'abonne aux événements <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileUpdated> et <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileRemoved>. Votre service de suivi peut déclencher l'événement approprié lorsqu'une modification de l'un de ses profils de suivi se produit. La classe <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> implémente cette interface.  
  
 Le moteur d'exécution de workflow appelle la méthode <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> pour tester si un <xref:System.Workflow.Runtime.Tracking.TrackingProfile> a été mis à jour ou supprimé suite à un appel explicite par un hôte ou un service à <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A> sur une instance de workflow. Ce processus permet à un hôte ou un service de modifier dynamiquement le modèle de suivi utilisé pour une instance de workflow spécifique.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>-Lorsque vous héritez de <see cref="T:System.Workflow.Runtime.Tracking.TrackingService" />, vous devez substituer les membres suivants : <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)" /></para>
    </block>
    <altmember cref="T:System.Workflow.Runtime.Tracking.IProfileNotification" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrackingService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TrackingService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Lors de l'implémentation dans une classe dérivée, initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Runtime.Tracking.TrackingService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple suivant indique comment créer une nouvelle instance d'un objet `TerminationTrackingService`, d'un type qui dérive de `TrackingService`. Cet exemple est tiré de l'exemple du Kit de développement logiciel Termination Tracking Service (SDK). Pour plus d’informations, consultez [exemple de Service de suivi arrêt](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#111](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#111)]
 [!code-vb[WF_Samples#111](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProfile">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Doit être substitué dans la classe dérivée et, en cas d'implémentation, obtient le modèle de suivi pour une instance de workflow ou un type de workflow spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un service de suivi est chargé de gérer les profils de suivi disponibles pour des types de workflow spécifiques et des instances de workflow spécifiques. Vous pouvez implémenter cette gestion comme bon vous semble. Par exemple, vous pouvez retourner le même <xref:System.Workflow.Runtime.Tracking.TrackingProfile> pour chaque <xref:System.Type> de workflow et instance de workflow ; ou vous pouvez gérer un magasin de profils de suivi sophistiqué référencé par instance de workflow, <xref:System.Type> de workflow et <xref:System.Version>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingProfile GetProfile(valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetProfile (workflowInstanceId As Guid) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingProfile ^ GetProfile(Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="abstract member GetProfile : Guid -&gt; System.Workflow.Runtime.Tracking.TrackingProfile" Usage="trackingService.GetProfile workflowInstanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowInstanceId">
          <see cref="T:System.Guid" /> de l'instance de workflow.</param>
        <summary>Doit être substitué dans la classe dérivée et, en cas d'implémentation, retourne le modèle de suivi pour l'instance de workflow spécifiée.</summary>
        <returns>Modèle de suivi pour l'instance de flux de travail spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un service de suivi est chargé de gérer les profils de suivi disponibles pour des types de workflow spécifiques et des instances de workflow spécifiques. Vous pouvez implémenter cette gestion comme bon vous semble. Par exemple, vous pouvez retourner le même <xref:System.Workflow.Runtime.Tracking.TrackingProfile> pour chaque <xref:System.Type> de workflow et instance de workflow ; ou vous pouvez gérer un magasin de profils de suivi sophistiqué référencé par instance de workflow, <xref:System.Type> de workflow et <xref:System.Version>.  
  
   
  
## Examples  
 L'exemple suivant illustre une implémentation de la méthode `GetProfile`. Dans cet exemple, plusieurs surcharges de la `GetProfile` appel de méthode privée unique `GetProfile` (méthode), qui retourne une valeur par défaut codée en dur, profil de suivi. Cet exemple provient de l'exemple du Kit de développement logiciel Termination Tracking Service (SDK). Pour plus d’informations, consultez [exemple de Service de suivi arrêt](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#115](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#115)]
 [!code-vb[WF_Samples#115](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Type workflowType, Version profileVersionId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingProfile GetProfile(class System.Type workflowType, class System.Version profileVersionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetProfile (workflowType As Type, profileVersionId As Version) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingProfile ^ GetProfile(Type ^ workflowType, Version ^ profileVersionId);" />
      <MemberSignature Language="F#" Value="abstract member GetProfile : Type * Version -&gt; System.Workflow.Runtime.Tracking.TrackingProfile" Usage="trackingService.GetProfile (workflowType, profileVersionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="profileVersionId" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <see cref="T:System.Type" /> du workflow.</param>
        <param name="profileVersionId">
          <see cref="T:System.Version" /> du modèle de suivi.</param>
        <summary>Doit être substitué dans la classe dérivée et, en cas d'implémentation, retourne le modèle de suivi, qualifié par version, pour le <see cref="T:System.Type" /> de workflow spécifié.</summary>
        <returns>Modèle de suivi pour le type de flux de travail spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un service de suivi est chargé de gérer les profils de suivi disponibles pour des types de workflow spécifiques et des instances de workflow spécifiques. Vous pouvez implémenter cette gestion comme bon vous semble. Par exemple, vous pouvez retourner le même <xref:System.Workflow.Runtime.Tracking.TrackingProfile> pour chaque <xref:System.Type> de workflow et instance de workflow ; ou vous pouvez gérer un magasin de profils de suivi sophistiqué référencé par instance de workflow, <xref:System.Type> de workflow et <xref:System.Version>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrackingChannel">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel (System.Workflow.Runtime.Tracking.TrackingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel(class System.Workflow.Runtime.Tracking.TrackingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetTrackingChannel (parameters As TrackingParameters) As TrackingChannel" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingChannel ^ GetTrackingChannel(System::Workflow::Runtime::Tracking::TrackingParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member GetTrackingChannel : System.Workflow.Runtime.Tracking.TrackingParameters -&gt; System.Workflow.Runtime.Tracking.TrackingChannel" Usage="trackingService.GetTrackingChannel parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Workflow.Runtime.Tracking.TrackingParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <see cref="T:System.Workflow.Runtime.Tracking.TrackingParameters" /> associé à l'instance de workflow.</param>
        <summary>Doit être substitué dans la classe dérivée et, en cas d'implémentation, retourne le canal que l'infrastructure de suivi d'exécution utilise pour envoyer des enregistrements de suivi au service de suivi.</summary>
        <returns>
          <see cref="T:System.Workflow.Runtime.Tracking.TrackingChannel" /> utilisé pour envoyer des enregistrements de suivi au service de suivi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'infrastructure de suivi d'exécution utilise un <xref:System.Workflow.Runtime.Tracking.TrackingChannel> pour chaque service de suivi pour chaque instance de workflow. Le moteur d'exécution de workflow appelle <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A> sur chaque service de suivi pour obtenir le <xref:System.Workflow.Runtime.Tracking.TrackingChannel> pour ce service. Vous pouvez utiliser les informations passées dans <xref:System.Workflow.Runtime.Tracking.TrackingParameters> pour associer les données de suivi envoyées sur le <xref:System.Workflow.Runtime.Tracking.TrackingChannel> pour votre service de suivi avec une instance de workflow racine particulière.  
  
   
  
## Examples  
 L'exemple suivant illustre une implémentation de la méthode `GetTrackingChannel`. Cet exemple provient de l'exemple du Kit de développement logiciel Termination Tracking Service (SDK). Pour plus d’informations, consultez [exemple de Service de suivi arrêt](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#113](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#113)]
 [!code-vb[WF_Samples#113](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#113)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryGetProfile (Type workflowType, out System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryGetProfile(class System.Type workflowType, [out] class System.Workflow.Runtime.Tracking.TrackingProfile&amp; profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryGetProfile (workflowType As Type, ByRef profile As TrackingProfile) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryGetProfile(Type ^ workflowType, [Runtime::InteropServices::Out] System::Workflow::Runtime::Tracking::TrackingProfile ^ % profile);" />
      <MemberSignature Language="F#" Value="abstract member TryGetProfile : Type *  -&gt; bool" Usage="trackingService.TryGetProfile (workflowType, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <see cref="T:System.Type" /> du workflow pour lequel obtenir le modèle de suivi.</param>
        <param name="profile">Cette méthode retourne le <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> à charger. Ce paramètre est passé sans être initialisé.</param>
        <summary>Doit être substitué dans la classe dérivée et, en cas d'implémentation, récupère le modèle de suivi pour le type de workflow spécifié s'il y en a un disponible.</summary>
        <returns>
          <see langword="true" /> si un <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> pour le <see cref="T:System.Type" /> de workflow spécifié est disponible ; sinon, <see langword="false" />. Si <see langword="true" />, le <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> est retourné dans <paramref name="profile" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un service de suivi est chargé de gérer les profils de suivi disponibles pour des types de workflow spécifiques et des instances de workflow spécifiques. Vous pouvez implémenter cette gestion comme bon vous semble. Par exemple, vous pouvez retourner le même <xref:System.Workflow.Runtime.Tracking.TrackingProfile> pour chaque <xref:System.Type> de workflow et instance de workflow ; ou vous pouvez gérer un magasin de profils de suivi sophistiqué référencé par instance de workflow, <xref:System.Type> de workflow et <xref:System.Version>.  
  
   
  
## Examples  
 L'exemple suivant illustre une implémentation de la méthode `TryGetProfile`, qui appelle une méthode `GetProfile` privée. Cet exemple provient de l'exemple du Kit de développement logiciel Termination Tracking Service (SDK). Pour plus d’informations, consultez [exemple de Service de suivi arrêt](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[Wf_samples#209](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#209)]
 [!code-vb[Wf_samples#209](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#209)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReloadProfile">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryReloadProfile (Type workflowType, Guid workflowInstanceId, out System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryReloadProfile(class System.Type workflowType, valuetype System.Guid workflowInstanceId, [out] class System.Workflow.Runtime.Tracking.TrackingProfile&amp; profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryReloadProfile (workflowType As Type, workflowInstanceId As Guid, ByRef profile As TrackingProfile) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryReloadProfile(Type ^ workflowType, Guid workflowInstanceId, [Runtime::InteropServices::Out] System::Workflow::Runtime::Tracking::TrackingProfile ^ % profile);" />
      <MemberSignature Language="F#" Value="abstract member TryReloadProfile : Type * Guid *  -&gt; bool" Usage="trackingService.TryReloadProfile (workflowType, workflowInstanceId, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <see cref="T:System.Type" /> de l'instance de workflow.</param>
        <param name="workflowInstanceId">
          <see cref="T:System.Guid" /> de l'instance de workflow.</param>
        <param name="profile">Cette méthode retourne le <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> à charger. Ce paramètre est passé sans être initialisé.</param>
        <summary>Doit être substitué dans la classe dérivée et, en cas d'implémentation, récupère un nouveau modèle de suivi pour l'instance de workflow spécifiée si le modèle de suivi a changé depuis son dernier chargement.</summary>
        <returns>
          <see langword="true" /> si un nouveau <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> doit être chargé ; sinon, <see langword="false" />. Si <see langword="true" />, le <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> est retourné dans <paramref name="profile" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> est appelé par l'infrastructure de suivi d'exécution afin de déterminer si un nouveau <xref:System.Workflow.Runtime.Tracking.TrackingProfile> doit être chargé pour l'instance de workflow spécifiée. Si un nouveau <xref:System.Workflow.Runtime.Tracking.TrackingProfile> est requis, il est retourné dans `profile`. Si vous souhaitez que l'infrastructure de suivi d'exécution cesse d'effectuer le suivi d'une instance de workflow, votre service de suivi doit retourner `true` et définir `profile` à une valeur égale à une référence Null (`Nothing` en Visual Basic). Votre service de suivi peut utiliser `workflowType` ou `workflowInstanceId` comme bon vous semble pour déterminer si un profil de suivi doit être rechargé. Par exemple, <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> utilise uniquement `workflowInstanceId` pour décider si le modèle de suivi doit être rechargé. La méthode <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> est appelée par l'infrastructure de suivi d'exécution d'après sa propre sémantique de suivi, ou en réponse à l'appel d'un hôte ou d'un service à la méthode <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A?displayProperty=nameWithType>  sur une instance de flux de travail.  
  
   
  
## Examples  
 L'exemple suivant illustre une implémentation de base de la méthode `TryReloadProfile`. Cet exemple provient de l'exemple du Kit de développement logiciel Termination Tracking Service (SDK). Pour plus d’informations, consultez [exemple de Service de suivi arrêt](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#116](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#116)]
 [!code-vb[WF_Samples#116](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#116)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>