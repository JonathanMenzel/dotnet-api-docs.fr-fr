<Type Name="TextFormatter" FullName="System.Windows.Media.TextFormatting.TextFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="33f32246a089b102f57295e06fe0840aa9c29cdf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36490994" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextFormatter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextFormatter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextFormatter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextFormatter abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type TextFormatter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fournit des services pour la mise en forme de texte et la coupure de lignes de texte à l'aide d'un client de disposition de texte personnalisée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> est le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] moteur de texte qui fournit des services pour la mise en forme de texte et dernières lignes de texte. <xref:System.Windows.Media.TextFormatting.TextFormatter> peut gérer différents formats de caractères et les styles de paragraphe et inclut la prise en charge de la présentation de texte internationale.  
  
 Contrairement à un texte traditionnelle [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], le <xref:System.Windows.Media.TextFormatting.TextFormatter> interagit avec un client de mise en page de texte via un ensemble de méthodes de rappel. Il nécessite le client fournisse ces méthodes dans une implémentation de la <xref:System.Windows.Media.TextFormatting.TextSource> classe. Le diagramme suivant illustre l’interaction entre le client de formateur de texte et le client de mise en page de texte.  
  
 ![Diagramme du client de disposition du texte et TextFormatter](~/add/media/textformatter01.png "diagramme du client de disposition du texte et TextFormatter")  
Interaction entre le client de mise en page de texte et l’objet TextFormatter  
  
## <a name="text-formatting-services"></a>Services de mise en forme du texte  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> prend en charge les fonctionnalités de texte, telles que la typographie OpenType, ainsi que la prise en charge de la séquence de texte, des lignes et des fonctionnalités au niveau du paragraphe.  
  
 Le tableau suivant est une liste de la clé <xref:System.Windows.Media.TextFormatting.TextFormatter> pris en charge des services pour les fonctionnalités de texte.  
  
|Fonctionnalité|Description |  
|-------------|-----------------|  
|Pinceau d’arrière-plan|Le <xref:System.Windows.Media.Brush> qui est utilisé pour la couleur d’arrière-plan. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextRunProperties.BackgroundBrush%2A>.|  
|Alignement de la ligne de base|Détermine la distance de la ligne de base de la ligne. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextRunProperties.BaselineAlignment%2A>.|  
|Liaison de polices|Fournit la police de liaison via l’utilisation de polices composites.|  
|Pinceau de premier plan|Le <xref:System.Windows.Media.Brush> qui est utilisé pour la couleur de premier plan. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextRunProperties.ForegroundBrush%2A>.|  
|OpenType|Fonctionnalités typographiques OpenType avancées, ces variantes contextuelles et des ligatures standard. Consultez le <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties> propriétés de classe.|  
|Type de caractères|Détermine la police, ainsi que le poids, le style et le stretch. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextRunProperties.Typeface%2A>.|  
|Décoration de texte|Fournit la prise en charge de <xref:System.Windows.TextDecoration> objets, tels que le souligné ou barré. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextRunProperties.TextDecorations%2A>.|  
|Effets de texte|Fournit la prise en charge de <xref:System.Windows.Media.TextEffect> objets. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextRunProperties.TextEffects%2A>.|  
  
 Le tableau suivant est une liste de la clé <xref:System.Windows.Media.TextFormatting.TextFormatter> pris en charge des services pour les fonctionnalités au niveau du paragraphe.  
  
|Fonctionnalité|Description |  
|-------------|-----------------|  
|Sens du flux|Flux de direction du paragraphe, de gauche à droite ou de droite à gauche. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.FlowDirection%2A>.|  
|Mise en retrait de ligne|Mise en retrait pour chaque ligne du paragraphe. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.Indent%2A>.|  
|Marqueur|Caractéristiques de marqueur de la première ligne du paragraphe. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.TextMarkerProperties%2A>.|  
|Mise en retrait du paragraphe|Mise en retrait de la première ligne du paragraphe. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.ParagraphIndent%2A>.|  
|Tabulations|Prend en charge l’alignement des tabulations et les caractères de suite.|  
|Largeur|Déterminez la largeur de paragraphe minimale et maximale. Consultez le <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth%2A> méthodes.|  
|Retour automatique à la ligne|Déterminer l’habillage du texte lorsqu’il atteint le bord de flux. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.TextWrapping%2A>.|  
  
 Le tableau suivant est une liste de la clé <xref:System.Windows.Media.TextFormatting.TextFormatter> pris en charge des services pour les fonctionnalités de niveau ligne.  
  
|Fonctionnalité|Description |  
|-------------|-----------------|  
|Alignement|Alignement du texte : gauche, droite, centré ou justifié. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.TextAlignment%2A>.|  
|Hauteur de ligne|Hauteur de la ligne. Voir la propriété <xref:System.Windows.Media.TextFormatting.TextLine.Height%2A>.|  
|Réduction de la ligne|Prise en charge en mode de réduction de la ligne. Consultez le <xref:System.Windows.Media.TextFormatting.TextLine.Collapse%2A> (méthode).|  
|Mesure de boîte noire|Représente la métrique utilisée pour effectuer la mise en page d'un caractère dans une police de périphérique. Voir la classe <xref:System.Windows.Media.CharacterMetrics>.|  
|Prise en charge du point d’insertion|Navigation du signe insertion et modification de prise en charge. Consultez le <xref:System.Windows.Media.TextFormatting.TextLine> propriétés, telles que de caractère atteint <xref:System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit%2A> et <xref:System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit%2A>.|  
  
 Le tableau suivant est une liste de la clé <xref:System.Windows.Media.TextFormatting.TextFormatter> pris en charge des services pour les fonctionnalités de niveau d’exécution de texte.  
  
|Fonctionnalité|Description |  
|-------------|-----------------|  
|Exécution cachée|Plage de caractères qui ne sont pas visibles. Consultez le <xref:System.Windows.Media.TextFormatting.TextHidden> objet.|  
|Rupture|La ligne et saut de paragraphe.|  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser un <xref:System.Windows.Media.TextFormatting.TextFormatter> objet pour générer des lignes mises en forme de texte qui peuvent être affichées comme objets de dessin.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet1)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée une instance de la classe <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.TextFormatting.TextFormatter Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.TextFormatting.TextFormatter Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As TextFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::TextFormatting::TextFormatter ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Windows.Media.TextFormatting.TextFormatter" Usage="System.Windows.Media.TextFormatting.TextFormatter.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextFormatter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une instance de la classe <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />. Il s'agit d'une méthode statique.</summary>
        <returns>Nouvelle instance de <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.TextFormatting.TextFormatter Create (System.Windows.Media.TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.TextFormatting.TextFormatter Create(valuetype System.Windows.Media.TextFormattingMode textFormattingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.Create(System.Windows.Media.TextFormattingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::TextFormatting::TextFormatter ^ Create(System::Windows::Media::TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="F#" Value="static member Create : System.Windows.Media.TextFormattingMode -&gt; System.Windows.Media.TextFormatting.TextFormatter" Usage="System.Windows.Media.TextFormatting.TextFormatter.Create textFormattingMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" />
      </Parameters>
      <Docs>
        <param name="textFormattingMode">
          <see cref="T:System.Windows.Media.TextFormattingMode" /> qui spécifie la mise en forme du texte pour <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</param>
        <summary>Crée une nouvelle instance de la classe <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> avec le mode de mise en forme spécifié. Il s'agit d'une méthode statique.</summary>
        <returns>Nouvelle instance de <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.TextFormattingMode" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textFormatter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources managées et non managées utilisées par l'objet <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FormatLine">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée un <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> qui est utilisé pour mettre en forme et afficher le contenu de document.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FormatLine">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextLine FormatLine (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, double paragraphWidth, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextLine FormatLine(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, float64 paragraphWidth, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, class System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextLine ^ FormatLine(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, double paragraphWidth, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties, System::Windows::Media::TextFormatting::TextLineBreak ^ previousLineBreak);" />
      <MemberSignature Language="F#" Value="abstract member FormatLine : System.Windows.Media.TextFormatting.TextSource * int * double * System.Windows.Media.TextFormatting.TextParagraphProperties * System.Windows.Media.TextFormatting.TextLineBreak -&gt; System.Windows.Media.TextFormatting.TextLine" Usage="textFormatter.FormatLine (textSource, firstCharIndex, paragraphWidth, paragraphProperties, previousLineBreak)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphWidth" Type="System.Double" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
        <Parameter Name="previousLineBreak" Type="System.Windows.Media.TextFormatting.TextLineBreak" />
      </Parameters>
      <Docs>
        <param name="textSource">Valeur <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> qui représente la source de texte pour la ligne.</param>
        <param name="firstCharIndex">Valeur <see cref="T:System.Int32" /> qui spécifie l'index de caractère du caractère initial de la ligne.</param>
        <param name="paragraphWidth">Valeur <see cref="T:System.Double" /> qui spécifie la largeur du paragraphe que la ligne remplit.</param>
        <param name="paragraphProperties">Valeur <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> qui représente les propriétés de paragraphe, telles que le sens du déroulement, l'alignement ou la mise en retrait.</param>
        <param name="previousLineBreak">Valeur <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> qui spécifie l'état du formateur de texte, en terme d'endroit où la ligne précédente du paragraphe a été coupée par le processus de mise en forme du texte.</param>
        <summary>Crée un <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> qui est utilisé pour mettre en forme et afficher le contenu de document.</summary>
        <returns>Valeur <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> qui représente une ligne de texte qui peut être affichée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatLine%2A> méthode pour retourner une mise en forme <xref:System.Windows.Media.TextFormatting.TextLine>.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet2)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatLine">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextLine FormatLine (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, double paragraphWidth, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak, System.Windows.Media.TextFormatting.TextRunCache textRunCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextLine FormatLine(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, float64 paragraphWidth, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, class System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak, class System.Windows.Media.TextFormatting.TextRunCache textRunCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak,System.Windows.Media.TextFormatting.TextRunCache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextLine ^ FormatLine(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, double paragraphWidth, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties, System::Windows::Media::TextFormatting::TextLineBreak ^ previousLineBreak, System::Windows::Media::TextFormatting::TextRunCache ^ textRunCache);" />
      <MemberSignature Language="F#" Value="abstract member FormatLine : System.Windows.Media.TextFormatting.TextSource * int * double * System.Windows.Media.TextFormatting.TextParagraphProperties * System.Windows.Media.TextFormatting.TextLineBreak * System.Windows.Media.TextFormatting.TextRunCache -&gt; System.Windows.Media.TextFormatting.TextLine" Usage="textFormatter.FormatLine (textSource, firstCharIndex, paragraphWidth, paragraphProperties, previousLineBreak, textRunCache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphWidth" Type="System.Double" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
        <Parameter Name="previousLineBreak" Type="System.Windows.Media.TextFormatting.TextLineBreak" />
        <Parameter Name="textRunCache" Type="System.Windows.Media.TextFormatting.TextRunCache" />
      </Parameters>
      <Docs>
        <param name="textSource">Objet <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> qui représente la source de texte pour la ligne.</param>
        <param name="firstCharIndex">Valeur <see cref="T:System.Int32" /> qui spécifie l'index de caractère du caractère initial de la ligne.</param>
        <param name="paragraphWidth">Valeur <see cref="T:System.Double" /> qui spécifie la largeur du paragraphe que la ligne remplit.</param>
        <param name="paragraphProperties">Objet <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> qui représente les propriétés de paragraphe, telles que le sens du déroulement, l'alignement ou la mise en retrait.</param>
        <param name="previousLineBreak">Objet <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> qui spécifie l'état du formateur de texte, en terme d'endroit où la ligne précédente du paragraphe a été coupée par le processus de mise en forme du texte.</param>
        <param name="textRunCache">Objet <see cref="T:System.Windows.Media.TextFormatting.TextRunCache" /> qui représente le mécanisme de mise en cache pour la disposition du texte.</param>
        <summary>Crée un <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> qui est utilisé pour mettre en forme et afficher le contenu de document.</summary>
        <returns>Valeur <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> qui représente une ligne de texte qui peut être affichée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée pour améliorer les performances dans les applications où le <xref:System.Windows.Media.TextFormatting.TextLine> a des implications en matière de performances significatifs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FormatMinMaxParagraphWidth">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne une valeur qui représente la largeur de paragraphe la plus petite et la plus grande possible pouvant contenir entièrement le contenu de texte spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FormatMinMaxParagraphWidth">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::MinMaxParagraphWidth FormatMinMaxParagraphWidth(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties);" />
      <MemberSignature Language="F#" Value="abstract member FormatMinMaxParagraphWidth : System.Windows.Media.TextFormatting.TextSource * int * System.Windows.Media.TextFormatting.TextParagraphProperties -&gt; System.Windows.Media.TextFormatting.MinMaxParagraphWidth" Usage="textFormatter.FormatMinMaxParagraphWidth (textSource, firstCharIndex, paragraphProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.MinMaxParagraphWidth</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
      </Parameters>
      <Docs>
        <param name="textSource">Objet <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> qui représente la source de texte pour la ligne.</param>
        <param name="firstCharIndex">Valeur <see cref="T:System.Int32" /> qui spécifie l'index de caractère du caractère initial de la ligne.</param>
        <param name="paragraphProperties">Objet <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> qui représente les propriétés de paragraphe, telles que le sens du déroulement, l'alignement ou la mise en retrait.</param>
        <summary>Retourne une valeur qui représente la largeur de paragraphe la plus petite et la plus grande possible pouvant contenir entièrement le contenu de texte spécifié.</summary>
        <returns>Valeur <see cref="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth" /> qui représente la largeur de paragraphe la plus petite et la plus grande possible pouvant contenir entièrement le contenu de texte spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le texte suivant utilise la largeur de paragraphe minimale pour le texte source, qui affiche plusieurs lignes. La largeur de paragraphe minimale correspond au mot ayant la plus grande largeur : dans ce cas, le mot « a sauté ». Notez que plusieurs mots peuvent apparaître sur la même ligne, tant que la largeur totale ne dépasse pas la largeur de paragraphe minimale.  
  
 ![Formateur de texte à l’aide de la largeur de paragraphe minimale](~/add/media/textformatter03.png "formateur de texte à l’aide de la largeur de paragraphe minimale")  
Largeur de paragraphe minimale  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser la <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth%2A> méthode pour générer la largeur de paragraphe minimale pour les lignes de mise en forme du texte.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet3)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatMinMaxParagraphWidth">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, System.Windows.Media.TextFormatting.TextRunCache textRunCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, class System.Windows.Media.TextFormatting.TextRunCache textRunCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextRunCache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::MinMaxParagraphWidth FormatMinMaxParagraphWidth(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties, System::Windows::Media::TextFormatting::TextRunCache ^ textRunCache);" />
      <MemberSignature Language="F#" Value="abstract member FormatMinMaxParagraphWidth : System.Windows.Media.TextFormatting.TextSource * int * System.Windows.Media.TextFormatting.TextParagraphProperties * System.Windows.Media.TextFormatting.TextRunCache -&gt; System.Windows.Media.TextFormatting.MinMaxParagraphWidth" Usage="textFormatter.FormatMinMaxParagraphWidth (textSource, firstCharIndex, paragraphProperties, textRunCache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.MinMaxParagraphWidth</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
        <Parameter Name="textRunCache" Type="System.Windows.Media.TextFormatting.TextRunCache" />
      </Parameters>
      <Docs>
        <param name="textSource">Objet <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> qui représente la source de texte pour la ligne.</param>
        <param name="firstCharIndex">Valeur <see cref="T:System.Int32" /> qui spécifie l'index de caractère du caractère initial de la ligne.</param>
        <param name="paragraphProperties">Objet <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> qui représente les propriétés de paragraphe, telles que le sens du déroulement, l'alignement ou la mise en retrait.</param>
        <param name="textRunCache">Objet <see cref="T:System.Windows.Media.TextFormatting.TextRunCache" /> qui représente le mécanisme de mise en cache pour la disposition du texte.</param>
        <summary>Retourne une valeur qui représente la largeur de paragraphe la plus petite et la plus grande possible pouvant contenir entièrement le contenu de texte spécifié.</summary>
        <returns>Valeur <see cref="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth" /> qui représente la largeur de paragraphe la plus petite et la plus grande possible pouvant contenir entièrement le contenu de texte spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>