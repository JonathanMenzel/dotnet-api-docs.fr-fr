<Type Name="CharacterBufferRange" FullName="System.Windows.Media.TextFormatting.CharacterBufferRange">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ab36777ae530c23c0933a697739b5b6590de5cc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30668233" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CharacterBufferRange : IEquatable&lt;System.Windows.Media.TextFormatting.CharacterBufferRange&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CharacterBufferRange extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Media.TextFormatting.CharacterBufferRange&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.CharacterBufferRange" />
  <TypeSignature Language="VB.NET" Value="Public Structure CharacterBufferRange&#xA;Implements IEquatable(Of CharacterBufferRange)" />
  <TypeSignature Language="C++ CLI" Value="public value class CharacterBufferRange : IEquatable&lt;System::Windows::Media::TextFormatting::CharacterBufferRange&gt;" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Media.TextFormatting.CharacterBufferRange&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="315eb-101">Décrit une chaîne de caractères.</span>
      <span class="sxs-lookup">
        <span data-stu-id="315eb-101">Describes a string of characters.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="315eb-102">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-102">Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterBufferRange (char* unsafeCharacterString, int characterLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* unsafeCharacterString, int32 characterLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterBufferRange(char* unsafeCharacterString, int characterLength);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="unsafeCharacterString" Type="System.Char*" />
        <Parameter Name="characterLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unsafeCharacterString">
          <span data-ttu-id="315eb-103">Une référence de pointeur non managé vers une chaîne de caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-103">An unmanaged pointer reference to a character string.</span>
          </span>
        </param>
        <param name="characterLength">
          <span data-ttu-id="315eb-104">Nombre de caractères de <c>unsafecharacterString</c> à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-104">The number of characters in <c>unsafecharacterString</c> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315eb-105">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à partir d’une chaîne de caractères non managée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-105">Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure from a unmanaged character string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315eb-106">L’appelant a besoin des autorisations de code non managé pour appeler le <xref:System.Windows.Media.TextFormatting.CharacterBufferRange.%23ctor%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="315eb-106">The caller needs unmanaged code permission in order to invoke the <xref:System.Windows.Media.TextFormatting.CharacterBufferRange.%23ctor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterBufferRange (char[] characterArray, int offsetToFirstChar, int characterLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] characterArray, int32 offsetToFirstChar, int32 characterLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (characterArray As Char(), offsetToFirstChar As Integer, characterLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterBufferRange(cli::array &lt;char&gt; ^ characterArray, int offsetToFirstChar, int characterLength);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="characterArray" Type="System.Char[]" />
        <Parameter Name="offsetToFirstChar" Type="System.Int32" />
        <Parameter Name="characterLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="characterArray">
          <span data-ttu-id="315eb-107">Tableau de caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-107">The character array.</span>
          </span>
        </param>
        <param name="offsetToFirstChar">
          <span data-ttu-id="315eb-108">Offset de la mémoire tampon de caractères par rapport au premier caractère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-108">The character buffer offset to the first character.</span>
          </span>
        </param>
        <param name="characterLength">
          <span data-ttu-id="315eb-109">Nombre de caractères de <c>characterArray</c> à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-109">The number of characters in <c>characterArray</c> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315eb-110">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à partir d'un tableau de caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-110">Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure from a character array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterBufferRange (string characterString, int offsetToFirstChar, int characterLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string characterString, int32 offsetToFirstChar, int32 characterLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (characterString As String, offsetToFirstChar As Integer, characterLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterBufferRange(System::String ^ characterString, int offsetToFirstChar, int characterLength);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="characterString" Type="System.String" />
        <Parameter Name="offsetToFirstChar" Type="System.Int32" />
        <Parameter Name="characterLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="characterString">
          <span data-ttu-id="315eb-111">La chaîne de caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-111">The character string.</span>
          </span>
        </param>
        <param name="offsetToFirstChar">
          <span data-ttu-id="315eb-112">Offset de la mémoire tampon de caractères par rapport au premier caractère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-112">The character buffer offset to the first character.</span>
          </span>
        </param>
        <param name="characterLength">
          <span data-ttu-id="315eb-113">Nombre de caractères de <c>characterString</c> à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-113">The number of characters in <c>characterString</c> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315eb-114">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à partir d'une chaîne de caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-114">Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure from a character string.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterBufferReference">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterBufferReference CharacterBufferReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.TextFormatting.CharacterBufferReference CharacterBufferReference" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.CharacterBufferRange.CharacterBufferReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharacterBufferReference As CharacterBufferReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::TextFormatting::CharacterBufferReference CharacterBufferReference { System::Windows::Media::TextFormatting::CharacterBufferReference get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterBufferReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="315eb-115">Obtient une référence à la mémoire tampon de caractères d'une chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-115">Gets a reference to the character buffer of a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="315eb-116">Valeur <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> représentant la mémoire tampon de caractères d'une chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-116">A <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> value representing the character buffer of a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.TextFormatting.CharacterBufferRange Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.TextFormatting.CharacterBufferRange Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.CharacterBufferRange.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As CharacterBufferRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::TextFormatting::CharacterBufferRange Empty { System::Windows::Media::TextFormatting::CharacterBufferRange get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterBufferRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="315eb-117">Obtient une chaîne de caractères vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-117">Gets an empty character string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="315eb-118">Objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> dont le <see cref="P:System.Windows.Media.TextFormatting.CharacterBufferRange.Length" /> est égal à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-118">A <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object whose <see cref="P:System.Windows.Media.TextFormatting.CharacterBufferRange.Length" /> is equal to 0.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="315eb-119">Détermine si l'objet spécifié est identique à l'objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-119">Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="315eb-120">
            <see cref="T:System.Object" /> à comparer avec l'objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-120">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315eb-121">Détermine si l'objet spécifié est identique à l'objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-121">Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="315eb-122">
            <see langword="true" /> si <paramref name="o" /> est égal à l’objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> actuel ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-122">
              <see langword="true" /> if <paramref name="o" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="315eb-123">Si <paramref name="o" /> n'est pas un objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" />, <see langword="false" /> est retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-123">If <paramref name="o" /> is not a <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object, <see langword="false" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315eb-124">Deux <xref:System.Windows.Media.TextFormatting.CharacterBufferRange> objets sont égales si le <xref:System.Windows.Media.TextFormatting.CharacterBufferRange.CharacterBufferReference%2A> les propriétés sont égales.</span><span class="sxs-lookup"><span data-stu-id="315eb-124">Two <xref:System.Windows.Media.TextFormatting.CharacterBufferRange> objects are equal if the <xref:System.Windows.Media.TextFormatting.CharacterBufferRange.CharacterBufferReference%2A> properties are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.TextFormatting.CharacterBufferRange value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Media.TextFormatting.CharacterBufferRange value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.Equals(System.Windows.Media.TextFormatting.CharacterBufferRange)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As CharacterBufferRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Media::TextFormatting::CharacterBufferRange value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.TextFormatting.CharacterBufferRange" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="315eb-125">
            <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à comparer avec l'objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-125">The <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315eb-126">Détermine si l'objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> est égal à l'objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-126">Determines whether the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="315eb-127">
            <see langword="true" /> si <paramref name="value" /> est égal à l’objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> actuel ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-127">
              <see langword="true" /> if <paramref name="value" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="315eb-128">Si <paramref name="value" /> n'est pas un objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" />, <see langword="false" /> est retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-128">If <paramref name="value" /> is not a <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object, <see langword="false" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315eb-129">Deux <xref:System.Windows.Media.TextFormatting.CharacterBufferRange> objets sont égales si le <xref:System.Windows.Media.TextFormatting.CharacterBufferRange.CharacterBufferReference%2A> les propriétés sont égales.</span><span class="sxs-lookup"><span data-stu-id="315eb-129">Two <xref:System.Windows.Media.TextFormatting.CharacterBufferRange> objects are equal if the <xref:System.Windows.Media.TextFormatting.CharacterBufferRange.CharacterBufferReference%2A> properties are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="315eb-130">Sert de fonction de hachage pour la <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-130">Serves as a hash function for <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" />.</span>
          </span>
          <span data-ttu-id="315eb-131">Son utilisation est indiquée dans les algorithmes de hachage et les structures de données telles qu’une table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-131">It is suitable for use in hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="315eb-132">Une valeur <see cref="T:System.Int32" /> qui représente le code de hachage pour l'objet actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-132">An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.CharacterBufferRange.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="315eb-133">Obtient le nombre de caractères dans le magasin de caractères sources de texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-133">Gets the number of characters in the text source character store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="315eb-134">Valeur <see cref="T:System.Int32" /> qui représente le nombre total de caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-134">An <see cref="T:System.Int32" /> value that represents the total number of characters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.TextFormatting.CharacterBufferRange left, System.Windows.Media.TextFormatting.CharacterBufferRange right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.TextFormatting.CharacterBufferRange left, valuetype System.Windows.Media.TextFormatting.CharacterBufferRange right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.op_Equality(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Windows.Media.TextFormatting.CharacterBufferRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CharacterBufferRange, right As CharacterBufferRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::TextFormatting::CharacterBufferRange left, System::Windows::Media::TextFormatting::CharacterBufferRange right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.CharacterBufferRange" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.CharacterBufferRange" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="315eb-135">Première instance du <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-135">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="315eb-136">Deuxième instance de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-136">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315eb-137">Compare deux chaînes <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> pour vérifier leur égalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-137">Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> strings for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="315eb-138">
            <see langword="true" /> pour indiquer que les objets <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> spécifiés sont égaux ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-138">
              <see langword="true" /> to show the specified <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.TextFormatting.CharacterBufferRange left, System.Windows.Media.TextFormatting.CharacterBufferRange right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.TextFormatting.CharacterBufferRange left, valuetype System.Windows.Media.TextFormatting.CharacterBufferRange right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.op_Inequality(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Windows.Media.TextFormatting.CharacterBufferRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CharacterBufferRange, right As CharacterBufferRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::TextFormatting::CharacterBufferRange left, System::Windows::Media::TextFormatting::CharacterBufferRange right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.CharacterBufferRange" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.CharacterBufferRange" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="315eb-139">Première instance du <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-139">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="315eb-140">Deuxième instance de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-140">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315eb-141">Compare deux chaînes <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> pour vérifier leur inégalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-141">Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> strings for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="315eb-142">
            <see langword="false" /> pour indiquer que <paramref name="left" /> est égal à <paramref name="right" /> ; sinon, <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="315eb-142">
              <see langword="false" /> to show <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>