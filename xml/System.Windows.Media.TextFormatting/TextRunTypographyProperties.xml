<Type Name="TextRunTypographyProperties" FullName="System.Windows.Media.TextFormatting.TextRunTypographyProperties">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe1a109ee564faaacd9f511483d43f59cfd96918" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37497577" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextRunTypographyProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextRunTypographyProperties extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextRunTypographyProperties" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextRunTypographyProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextRunTypographyProperties abstract" />
  <TypeSignature Language="F#" Value="type TextRunTypographyProperties = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une classe abstraite pour la prise en charge des propriétés de typographie pour les objets <see cref="T:System.Windows.Media.TextFormatting.TextRun" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le client de disposition du texte utilise la <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties> classe pour générer un ensemble de fonctionnalités qui sont traités par le moteur de présentation OpenType.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextRunTypographyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextRunTypographyProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextRunTypographyProperties();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.TextFormatting.TextRunTypographyProperties" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationAlternates">
      <MemberSignature Language="C#" Value="public abstract int AnnotationAlternates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AnnotationAlternates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.AnnotationAlternates" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AnnotationAlternates As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int AnnotationAlternates { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AnnotationAlternates : int" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.AnnotationAlternates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'index d'un format d'annotation autre.</summary>
        <value>Index du formulaire d'annotation de substitution. La valeur par défaut est 0 (zéro).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formes d’annotation incluent des glyphes placés dans les cercles ouverts ou solides, carrés, parenthèses, carreau ou zones arrondies.  
  
 Si la valeur de <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties.AnnotationAlternates%2A> est supérieure à 0 et le texte sélectionné police ne prend pas en charge l’annotation autres, le formulaire par défaut de la lettre s’affiche.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capitals">
      <MemberSignature Language="C#" Value="public abstract System.Windows.FontCapitals Capitals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontCapitals Capitals" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.Capitals" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Capitals As FontCapitals" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::FontCapitals Capitals { System::Windows::FontCapitals get(); };" />
      <MemberSignature Language="F#" Value="member this.Capitals : System.Windows.FontCapitals" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.Capitals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontCapitals</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique la forme majuscule de la police sélectionnée.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.FontCapitals" />. La valeur par défaut est <see cref="F:System.Windows.FontCapitals.Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les majuscules représentent un jeu de formes typographiques qui restituent le texte dans des glyphes de type majuscule. En règle générale, quand le texte est entièrement restitué en majuscules, l’espacement entre les lettres peut sembler trop serré et le poids et la proportion des lettres trop lourds. OpenType prend en charge un nombre de formats de style pour les majuscules, y compris les petites majuscules, les majuscules menues, des titres et l’espacement des majuscules. Ces formats de style permettent de contrôler l’apparence des majuscules.  
  
 Le texte suivant présente des majuscules standard avec la police Pescadero, suivies de lettres de type « SmallCaps » et « AllSmallCaps ». Dans ce cas, la taille de police utilisée est identique pour les trois mots.  
  
 ![Texte utilisant des majuscules OpenType](~/add/media/opentypefont11.gif "texte utilisant des majuscules OpenType")  
Exemple de majuscules  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.CapitalSpacing" />
      </Docs>
    </Member>
    <Member MemberName="CapitalSpacing">
      <MemberSignature Language="C#" Value="public abstract bool CapitalSpacing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CapitalSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.CapitalSpacing" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CapitalSpacing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CapitalSpacing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CapitalSpacing : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.CapitalSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si l'espacement entre les glyphes pour le texte en majuscules est ajusté globalement pour améliorer la lisibilité.</summary>
        <value>
          <see langword="true" /> si l'espacement est ajusté ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’espacement des majuscules est une fonctionnalité qui permet d’accroître l’espacement du texte quand celui-ci se compose uniquement de majuscules. Les majuscules sont généralement conçues pour se mêler aux minuscules. L’espacement employé entre une majuscule et une minuscule peut paraître trop serré quand toutes les lettres sont des majuscules. Le texte suivant présente l’espacement normal et l’espacement de majuscules avec la police Pescadero.  
  
 ![Texte à l’aide de l’espacement des majuscules OpenType](~/add/media/opentypefont21.gif "texte à l’aide de l’espacement des majuscules OpenType")  
Exemple de l’espacement normal et de capital  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.Capitals" />
      </Docs>
    </Member>
    <Member MemberName="CaseSensitiveForms">
      <MemberSignature Language="C#" Value="public abstract bool CaseSensitiveForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitiveForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.CaseSensitiveForms" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CaseSensitiveForms As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CaseSensitiveForms { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CaseSensitiveForms : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.CaseSensitiveForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si les glyphes ajustent leur position verticale pour mieux s'aligner avec les glyphes majuscules.</summary>
        <value>
          <see langword="true" /> si la position verticale est ajustée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualAlternates">
      <MemberSignature Language="C#" Value="public abstract bool ContextualAlternates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContextualAlternates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualAlternates" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ContextualAlternates As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool ContextualAlternates { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextualAlternates : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualAlternates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si les formats de glyphe personnalisés peuvent être utilisés suivant le contexte du texte restitué.</summary>
        <value>
          <see langword="true" /> si les jeux de glyphe personnalisés peuvent être utilisés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les alternatives contextuelles aléatoires proposent plusieurs glyphes de substitution pour un même caractère. Quand elle est implémentée avec des polices de caractères d’écriture, cette fonctionnalité peut simuler l’écriture manuscrite à partir d’un jeu de glyphes choisis de façon aléatoire avec de légères différences d’apparence. Le texte suivant présente des alternatives contextuelles aléatoires avec la police Lindsey. Notez que la lettre « a » présente de légères variations.  
  
 ![Texte utilisant les alternatives contextuelles aléatoires OpenType](~/add/media/opentypefont23.gif "texte utilisant les alternatives contextuelles aléatoires OpenType")  
Exemple d’alternatives contextuelles aléatoires  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticAlternates" />
      </Docs>
    </Member>
    <Member MemberName="ContextualLigatures">
      <MemberSignature Language="C#" Value="public abstract bool ContextualLigatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContextualLigatures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualLigatures" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ContextualLigatures As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool ContextualLigatures { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextualLigatures : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualLigatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si les ligatures contextuelles sont activées.</summary>
        <value>
          <see langword="true" /> si les ligatures contextuelles sont activées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les ligatures contextuelles sont conçues pour améliorer la lisibilité en fournissant le meilleur comportement de jointure entre les caractères qui composent la ligature.  
  
 Si la valeur de <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualLigatures%2A> est `true` et la police sélectionnée ne prend pas en charge les ligatures contextuelles, le formulaire par défaut de la lettre s’affiche.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.DiscretionaryLigatures" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.HistoricalLigatures" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StandardLigatures" />
      </Docs>
    </Member>
    <Member MemberName="ContextualSwashes">
      <MemberSignature Language="C#" Value="public abstract int ContextualSwashes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContextualSwashes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualSwashes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ContextualSwashes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int ContextualSwashes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextualSwashes : int" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualSwashes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui spécifie l'index d'un format de paraphes contextuel.</summary>
        <value>Index du format de paraphes standard. La valeur par défaut est 0 (zéro).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines combinaisons de glyphes à lettres ornées peuvent donner des résultats peu esthétiques, avec notamment le chevauchement de hampes descendantes dans les lettres adjacentes. En utilisant des lettres ornées contextuelles, vous pouvez obtenir un meilleur résultat visuel. Le texte suivant présente le même mot avant et après l’application d’une lettre ornée contextuelle.  
  
 ![Texte utilisant des glyphes ornés contextuels OpenType](~/add/media/opentypefont19.gif "texte utilisant des glyphes ornés contextuels OpenType")  
Exemple d’une lettre ornée contextuelle  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StandardSwashes" />
      </Docs>
    </Member>
    <Member MemberName="DiscretionaryLigatures">
      <MemberSignature Language="C#" Value="public abstract bool DiscretionaryLigatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DiscretionaryLigatures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.DiscretionaryLigatures" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DiscretionaryLigatures As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool DiscretionaryLigatures { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DiscretionaryLigatures : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.DiscretionaryLigatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si les ligatures discrétionnaires sont activées.</summary>
        <value>
          <see langword="true" /> si les ligatures discrétionnaires sont activées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ligatures discrétionnaires sont conçus pour être fins esthétiques et ne sont pas spécifiquement conçus pour une meilleure lisibilité. Le texte suivant présente des glyphes à ligatures discrétionnaires avec la police Pericles.  
  
 ![Texte utilisant des ligatures discrétionnaires OpenType](~/add/media/opentypefont05.gif "texte utilisant des ligatures discrétionnaires OpenType")  
Exemple d’un jeu des ligatures discrétionnaire  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualLigatures" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.HistoricalLigatures" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StandardLigatures" />
      </Docs>
    </Member>
    <Member MemberName="EastAsianExpertForms">
      <MemberSignature Language="C#" Value="public abstract bool EastAsianExpertForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EastAsianExpertForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianExpertForms" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EastAsianExpertForms As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool EastAsianExpertForms { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EastAsianExpertForms : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianExpertForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si les formats de police japonais standard ont été remplacés par les formats typographiques préférés correspondants.</summary>
        <value>
          <see langword="true" /> si les formats de polices japonaises standard ont été remplacés par les formats typographiques favoris correspondants ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianLanguage" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianWidths" />
      </Docs>
    </Member>
    <Member MemberName="EastAsianLanguage">
      <MemberSignature Language="C#" Value="public abstract System.Windows.FontEastAsianLanguage EastAsianLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontEastAsianLanguage EastAsianLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianLanguage" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EastAsianLanguage As FontEastAsianLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::FontEastAsianLanguage EastAsianLanguage { System::Windows::FontEastAsianLanguage get(); };" />
      <MemberSignature Language="F#" Value="member this.EastAsianLanguage : System.Windows.FontEastAsianLanguage" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontEastAsianLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique la version de glyphes à utiliser pour un système d'écriture ou un langage spécifique.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.FontEastAsianLanguage" />. La valeur par défaut est <see cref="F:System.Windows.FontEastAsianLanguage.Normal" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianExpertForms" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianWidths" />
      </Docs>
    </Member>
    <Member MemberName="EastAsianWidths">
      <MemberSignature Language="C#" Value="public abstract System.Windows.FontEastAsianWidths EastAsianWidths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontEastAsianWidths EastAsianWidths" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianWidths" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EastAsianWidths As FontEastAsianWidths" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::FontEastAsianWidths EastAsianWidths { System::Windows::FontEastAsianWidths get(); };" />
      <MemberSignature Language="F#" Value="member this.EastAsianWidths : System.Windows.FontEastAsianWidths" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianWidths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontEastAsianWidths</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique la largeur proportionnelle à utiliser pour les caractères latins dans une police d'Extrême-Orient.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.FontEastAsianWidths" />. La valeur par défaut est <see cref="F:System.Windows.FontEastAsianWidths.Normal" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianExpertForms" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.EastAsianLanguage" />
      </Docs>
    </Member>
    <Member MemberName="Fraction">
      <MemberSignature Language="C#" Value="public abstract System.Windows.FontFraction Fraction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontFraction Fraction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.Fraction" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Fraction As FontFraction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::FontFraction Fraction { System::Windows::FontFraction get(); };" />
      <MemberSignature Language="F#" Value="member this.Fraction : System.Windows.FontFraction" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.Fraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontFraction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique le style de fraction.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.FontFraction" />. La valeur par défaut est <see cref="F:System.Windows.FontFraction.Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les polices OpenType prennent en charge les styles pour les fractions, y compris barré et sur deux.  
  
 Le texte suivant présente des styles de fraction avec la police Palatino Linotype.  
  
 ![Texte à l’aide de OpenType des barres obliques et fractions](~/add/media/opentypefont12.gif "texte à l’aide de OpenType fractions barrées et empilées")  
Exemple de styles de fraction barré et empilées  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HistoricalForms">
      <MemberSignature Language="C#" Value="public abstract bool HistoricalForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HistoricalForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.HistoricalForms" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HistoricalForms As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HistoricalForms { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HistoricalForms : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.HistoricalForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si les formats historiques sont activés.</summary>
        <value>
          <see langword="true" /> si les formats historiques sont activés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les formes historiques sont des conventions typographiques qui étaient courantes dans le passé. Le texte suivant présente l’expression « Boston, Massachusetts » à l’aide d’une forme historique de glyphes pour la police Palatino Linotype.  
  
 ![Texte utilisant des formes historiques OpenType](~/add/media/opentypefont10.gif "texte à l’aide de formes historiques OpenType")  
Exemple de formes historiques  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.HistoricalLigatures" />
      </Docs>
    </Member>
    <Member MemberName="HistoricalLigatures">
      <MemberSignature Language="C#" Value="public abstract bool HistoricalLigatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HistoricalLigatures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.HistoricalLigatures" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HistoricalLigatures As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HistoricalLigatures { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HistoricalLigatures : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.HistoricalLigatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si les ligatures historiques sont activées.</summary>
        <value>
          <see langword="true" /> si les ligatures historiques sont activées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ligatures historiques sont des formats typographiques utilisés dans la typographie historique que les concepteurs de police peuvent ajouter à leurs polices.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualLigatures" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.DiscretionaryLigatures" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.HistoricalForms" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StandardLigatures" />
      </Docs>
    </Member>
    <Member MemberName="Kerning">
      <MemberSignature Language="C#" Value="public abstract bool Kerning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Kerning" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.Kerning" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Kerning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool Kerning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Kerning : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.Kerning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le crénage est activé.</summary>
        <value>
          <see langword="true" /> si le crénage est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le crénage est une fonction typographique qui ajuste l’espacement entre les caractères pour améliorer la forme de word.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MathematicalGreek">
      <MemberSignature Language="C#" Value="public abstract bool MathematicalGreek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MathematicalGreek" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.MathematicalGreek" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MathematicalGreek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool MathematicalGreek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MathematicalGreek : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.MathematicalGreek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si les formats de police typographiques standard des glyphes grecs ont été remplacés par les formats de police correspondants utilisés communément dans la notation mathématique.</summary>
        <value>
          <see langword="true" /> si les formats mathématiques grecs sont activés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la valeur de <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties.MathematicalGreek%2A> est `true` et la police sélectionnée ne prend pas en charge les formats mathématiques grecs, le formulaire par défaut de la lettre s’affiche.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumeralAlignment">
      <MemberSignature Language="C#" Value="public abstract System.Windows.FontNumeralAlignment NumeralAlignment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontNumeralAlignment NumeralAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.NumeralAlignment" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NumeralAlignment As FontNumeralAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::FontNumeralAlignment NumeralAlignment { System::Windows::FontNumeralAlignment get(); };" />
      <MemberSignature Language="F#" Value="member this.NumeralAlignment : System.Windows.FontNumeralAlignment" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.NumeralAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'alignement des largeurs lors de l'utilisation de chiffres.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.FontNumeralAlignment" />. La valeur par défaut est <see cref="F:System.Windows.FontNumeralAlignment.Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les polices OpenType prennent en charge une fonctionnalité proportionnels et tabulaires pour contrôler l’alignement des largeurs lors de l’utilisation des chiffres. Les chiffres proportionnels sont considérés comme ayant chacun une largeur différente (« 1 » est plus étroit que « 5 »). Les chiffres tabulaires sont traitées comme des chiffres de largeur égale afin qu’ils s’alignent verticalement, ce qui augmente la lisibilité des informations numériques.  
  
 Le texte ci-dessous présente deux chiffres proportionnels dans la première colonne avec la police Miramonte. Comme vous pouvez le constater, les chiffres « 5 » et « 1 » n’ont pas la même largeur. La deuxième colonne présente ces deux mêmes valeurs numériques avec des largeurs ajustées au moyen de la fonctionnalité des chiffres tabulaires.  
  
 ![Texte utilisant les chiffres tabulaires et proportionnels OpenType](~/add/media/opentypefont22.gif "texte utilisant les chiffres tabulaires et proportionnels OpenType")  
Exemple de chiffres proportionnels et à onglets  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.NumeralStyle" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.SlashedZero" />
      </Docs>
    </Member>
    <Member MemberName="NumeralStyle">
      <MemberSignature Language="C#" Value="public abstract System.Windows.FontNumeralStyle NumeralStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontNumeralStyle NumeralStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.NumeralStyle" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NumeralStyle As FontNumeralStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::FontNumeralStyle NumeralStyle { System::Windows::FontNumeralStyle get(); };" />
      <MemberSignature Language="F#" Value="member this.NumeralStyle : System.Windows.FontNumeralStyle" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.NumeralStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique le jeu de glyphes utilisé pour restituer des formats de police autres numériques.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.FontNumeralStyle" />. La valeur par défaut est <see cref="F:System.Windows.FontNumeralStyle.Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les polices OpenType prennent en charge un format numérique de style ancien. Ce format est utile pour présenter les chiffres dans des styles qui ne sont plus courants. Le texte suivant affiche une date du 18e siècle dans des formats de chiffres standards et de style ancien pour la police Palatino Linotype.  
  
 ![Texte à l’aide de chiffres OpenType de style ancien](~/add/media/opentypefont24.gif "texte à l’aide de chiffres OpenType de style ancien")  
Exemple de chiffres standards et de style ancien  
  
 Le texte suivant présente des chiffres standard pour la police Palatino Linotype, suivie des chiffres de style ancien.  
  
 ![Texte à l’aide de jeux de chiffres de style ancien OpenType](~/add/media/opentypefont13.gif "texte à l’aide de jeux de chiffres de style ancien OpenType")  
Exemple de jeux de chiffres standards et de style ancien  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.NumeralAlignment" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.SlashedZero" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertiesChanged">
      <MemberSignature Language="C#" Value="protected void OnPropertiesChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnPropertiesChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextRunTypographyProperties.OnPropertiesChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnPropertiesChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnPropertiesChanged();" />
      <MemberSignature Language="F#" Value="member this.OnPropertiesChanged : unit -&gt; unit" Usage="textRunTypographyProperties.OnPropertiesChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Corrige l'état interne pour une classe dérivée <see cref="T:System.Windows.Media.TextFormatting.TextRunTypographyProperties" /> lorsqu'une propriété <see cref="T:System.Windows.Media.TextFormatting.TextRunTypographyProperties" /> modifie sa valeur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez cette méthode d’accesseurs set d’une <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties> substitution de propriété, si la valeur change dans le cadre de la méthode setter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlashedZero">
      <MemberSignature Language="C#" Value="public abstract bool SlashedZero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SlashedZero" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.SlashedZero" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SlashedZero As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool SlashedZero { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SlashedZero : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.SlashedZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un format de police nul nominal doit être remplacé par un zéro barré.</summary>
        <value>
          <see langword="true" /> si les formats à zéro barré sont activés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les polices OpenType prennent en charge un barré un format numérique zéro pour mettre en évidence la différence entre la lettre « O » et le chiffre « 0 ». Le chiffre zéro barré est souvent utilisé pour les identificateurs dans les informations financières et commerciales.  
  
 Le texte suivant présente un exemple d’identificateur de commande avec la police Miramonte. La première ligne contient des chiffres standard. La deuxième ligne contient des chiffres zéro barré pour mieux les distinguer de la lettre « O » majuscule.  
  
 ![Texte à l’aide de OpenType des chiffres zéro barré](~/add/media/opentypefont17.gif "texte à l’aide de OpenType des chiffres zéro barré")  
Exemple des chiffres zéro barré  
  
 Si la valeur de <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties.SlashedZero%2A> est `true` et la police sélectionnée n’est pas prise en charge les formats à zéro barré, le format par défaut du chiffre s’affiche.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.NumeralAlignment" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.NumeralStyle" />
      </Docs>
    </Member>
    <Member MemberName="StandardLigatures">
      <MemberSignature Language="C#" Value="public abstract bool StandardLigatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StandardLigatures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StandardLigatures" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StandardLigatures As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StandardLigatures { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardLigatures : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StandardLigatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si les ligatures standard sont activées.</summary>
        <value>
          <see langword="true" /> si les ligatures standard sont activées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le texte suivant présente des glyphes à ligatures standard avec la police Pericles.  
  
 ![Texte utilisant des ligatures standard OpenType](~/add/media/opentypefont04.gif "texte utilisant des ligatures standard OpenType")  
Exemple d’un ensemble standard de ligatures  
  
 Par défaut, les polices OpenType dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] autorisent les ligatures standard. Par exemple, si vous utilisez la police Palatino Linotype, les ligatures standard « fi », « ff » et « fl » apparaissent comme un glyphe de caractères combinés. Notez que les caractères de chaque ligature standard touchent.  
  
 ![Texte utilisant des ligatures standard OpenType](~/add/media/opentypefont06.gif "texte utilisant des ligatures standard OpenType")  
Exemple de ligatures standard activées par défaut  
  
 Vous pouvez cependant désactiver les fonctionnalités de ligature standard de sorte qu’une ligature standard comme « ff » s’affiche comme deux glyphes distincts et non comme un glyphe de caractères combinés.  
  
 ![Texte utilisant des ligatures standard OpenType désactivées](~/add/media/opentypefont07.gif "texte utilisant des ligatures standard OpenType désactivées")  
Exemple de ligatures standard désactivées  
  
 Si la valeur de <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StandardLigatures%2A> est `true` et la police sélectionnée ne prend pas en charge les ligatures standard, le formulaire par défaut de la lettre s’affiche.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualLigatures" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.DiscretionaryLigatures" />
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.HistoricalLigatures" />
      </Docs>
    </Member>
    <Member MemberName="StandardSwashes">
      <MemberSignature Language="C#" Value="public abstract int StandardSwashes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StandardSwashes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StandardSwashes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StandardSwashes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int StandardSwashes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardSwashes : int" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StandardSwashes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'index d'un format de paraphes standard.</summary>
        <value>Index du format de paraphes standard. La valeur par défaut est 0 (zéro).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les lettres ornées sont des glyphes décoratifs qui utilisent une ornementation élaborée souvent associée à la calligraphie. Le texte suivant présente des glyphes standard et des glyphes à lettres ornées avec la police Pescadero.  
  
 ![Texte utilisant des glyphes standard et ornés OpenType](~/add/media/opentypefont08.gif "texte utilisant des glyphes standard et ornés OpenType")  
Exemple de glyphes standard et ornés  
  
 Les lettres ornées sont souvent utilisés comme éléments décoratifs dans des expressions courtes annonçant par exemple un événement. Le texte suivant utilise des lettres ornées pour mettre en relief les majuscules du nom de l’événement.  
  
 ![Texte utilisant des glyphes ornés OpenType](~/add/media/opentypefont09.gif "texte utilisant des glyphes ornés OpenType")  
Exemple de paraphes utilisés pour les lettres majuscules  
  
 Si la valeur de <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StandardSwashes%2A> est supérieure à 0 et le texte sélectionné police ne prend pas en charge les paraphes standard à la valeur d’index donnée, le formulaire par défaut de la lettre s’affiche.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualSwashes" />
      </Docs>
    </Member>
    <Member MemberName="StylisticAlternates">
      <MemberSignature Language="C#" Value="public abstract int StylisticAlternates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StylisticAlternates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticAlternates" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticAlternates As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int StylisticAlternates { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticAlternates : int" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticAlternates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'index d'un format de remplaçants stylistiques.</summary>
        <value>L'index du format de remplaçants stylistiques. La valeur par défaut est 0 (zéro).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les alternatives sont des glyphes qui peuvent être remplacés par un glyphe standard. Les polices OpenType, telles que la police Pericles utilisée dans les exemples suivants, contiennent des glyphes autres que vous pouvez utiliser pour créer différentes apparences pour le texte. Le texte suivant présente des glyphes standard avec la police Pericles.  
  
 ![Texte utilisant des glyphes standard OpenType](~/add/media/opentypefont01.gif "texte utilisant des glyphes standard OpenType")  
Exemple d’un ensemble standard de glyphes  
  
 La police OpenType Pericles contient des glyphes supplémentaires qui offrent des remplaçants stylistiques au jeu de glyphes standard. Le texte suivant présente des glyphes de style alternatif.  
  
 ![Texte utilisant des glyphes de substitution OpenType](~/add/media/opentypefont02.gif "texte utilisant des glyphes de substitution OpenType")  
Exemple de glyphes de style alternatif  
  
 Le texte suivant présente plusieurs glyphes de style alternatif pour la police Pericles.  
  
 ![Texte utilisant des glyphes de substitution OpenType](~/add/media/opentypefont03.gif "texte utilisant des glyphes de substitution OpenType")  
Exemple d’autres glyphes de style alternatif  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.ContextualAlternates" />
      </Docs>
    </Member>
    <Member MemberName="StylisticSet1">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet1 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet1 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet1 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet10">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet10 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet10" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet10" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet10 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet10 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet10 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet10" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet11">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet11 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet11" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet11" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet11 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet11 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet11 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet11" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet12">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet12 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet12" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet12" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet12 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet12 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet12 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet12" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet13">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet13 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet13" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet13" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet13 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet13 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet13 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet13" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet14">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet14 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet14" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet14" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet14 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet14 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet14 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet14" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet15">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet15" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet15" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet15 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet15 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet15 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet16">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet16 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet16" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet16" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet16 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet16 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet16 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet16" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet17">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet17 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet17" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet17" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet17 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet17 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet17 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet17" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet18">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet18 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet18" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet18" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet18 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet18 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet18 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet18" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet19">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet19 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet19" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet19" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet19 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet19 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet19 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet19" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet2">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet2" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet2 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet2 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet2 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet20">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet20 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet20" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet20" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet20 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet20 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet20 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet20" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet3">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet3" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet3" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet3 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet3 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet3 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet4">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet4" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet4" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet4 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet4 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet4 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet5">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet5" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet5" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet5 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet5 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet5 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet6">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet6" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet6" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet6 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet6 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet6 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet7">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet7" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet7" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet7 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet7 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet7 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet8">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet8 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet8" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet8" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet8 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet8 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet8 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylisticSet9">
      <MemberSignature Language="C#" Value="public abstract bool StylisticSet9 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StylisticSet9" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet9" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StylisticSet9 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool StylisticSet9 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StylisticSet9 : bool" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.StylisticSet9" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un ensemble stylistique de format de police est activé.</summary>
        <value>
          <see langword="true" /> si le jeu stylistique du format de police est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certaines polices contiennent des glyphes de variantes stylistiques qui correspondent aux parties d’un jeu de caractères. Glyphes de jeux stylistiques peuvent être conçues pour harmoniser visuellement, interagir de façon particulière ou par d’autres moyens, fonctionnent ensemble.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Variants">
      <MemberSignature Language="C#" Value="public abstract System.Windows.FontVariants Variants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontVariants Variants" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextRunTypographyProperties.Variants" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Variants As FontVariants" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::FontVariants Variants { System::Windows::FontVariants get(); };" />
      <MemberSignature Language="F#" Value="member this.Variants : System.Windows.FontVariants" Usage="System.Windows.Media.TextFormatting.TextRunTypographyProperties.Variants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontVariants</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique une variation du format typographique standard à utiliser.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.FontVariants" />. La valeur par défaut est <see cref="F:System.Windows.FontVariants.Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Variantes sont semblables aux formats de police exposant ou indice. Il est possible pour un format de police contenir des ensembles de glyphes différents entre exposant et le format ordinal, ou entre les formats indice et inférieur. Le <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties.Variants%2A> propriété vous permet de définir des valeurs d’exposant et indice pour une police OpenType.  
  
 Le texte suivant présente des exposants avec la police Palatino Linotype.  
  
 ![Texte utilisant des exposants OpenType](~/add/media/opentypefont14.gif "texte utilisant des exposants OpenType")  
Exemple d’exposants  
  
 Le texte suivant présente des indices avec la police Palatino Linotype.  
  
 ![Texte utilisant des indices OpenType](~/add/media/opentypefont15.gif "texte utilisant des indices OpenType")  
Exemple d’indices  
  
 Les polices qui ne prennent pas en charge les variantes peuvent avoir une approximation algorithmique format de police.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>