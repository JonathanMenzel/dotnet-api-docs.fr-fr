<Type Name="PartBuilder&lt;T&gt;" FullName="System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class PartBuilder&lt;T&gt; : System.ComponentModel.Composition.Registration.PartBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PartBuilder`1&lt;T&gt; extends System.ComponentModel.Composition.Registration.PartBuilder" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
  <TypeSignature Language="VB.NET" Value="Public Class PartBuilder(Of T)&#xA;Inherits PartBuilder" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class PartBuilder : System::ComponentModel::Composition::Registration::PartBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Registration.PartBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="6a0b8-101">Type de la cible.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-101">The type of the target.</span></span></typeparam>
    <summary><span data-ttu-id="6a0b8-102">Étend la classe <see cref="T:System.ComponentModel.Composition.Registration.PartBuilder" /> pour permettre l'utilisation d'expressions pour la sélection de membres.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-102">Extends the <see cref="T:System.ComponentModel.Composition.Registration.PartBuilder" /> class to allow the use of expressions to select members.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="ExportProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6a0b8-103">Spécifie qu'une propriété doit être exportée.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-103">Specifies a property that should be exported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportProperty">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt; ExportProperty (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder`1&lt;!T&gt; ExportProperty(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperty (propertyFilter As Expression(Of Func(Of T, Object))) As PartBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder&lt;T&gt; ^ ExportProperty(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="6a0b8-104">Expression qui résulte en une référence à la propriété cible.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-104">An expression that results in a reference to the target property.</span></span></param>
        <summary><span data-ttu-id="6a0b8-105">Spécifie qu'une propriété doit être exportée.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-105">Specifies a property that should be exported.</span></span></summary>
        <returns><span data-ttu-id="6a0b8-106">Objet actif permettant d'effectuer un chaînage.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-106">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a0b8-107"><paramref name="propertyFilter" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-107"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportProperty">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt; ExportProperty (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; propertyFilter, Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder`1&lt;!T&gt; ExportProperty(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertyFilter, class System.Action`1&lt;class System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperty (propertyFilter As Expression(Of Func(Of T, Object)), exportConfiguration As Action(Of ExportBuilder)) As PartBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder&lt;T&gt; ^ ExportProperty(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ propertyFilter, Action&lt;System::ComponentModel::Composition::Registration::ExportBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="6a0b8-108">Expression qui résulte en une référence à la propriété cible.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-108">An expression that results in a reference to the target property.</span></span></param>
        <param name="exportConfiguration"><span data-ttu-id="6a0b8-109">Objet qui contient des informations de configuration sur l'exportation.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-109">An object that contains configuration information about the export.</span></span> <span data-ttu-id="6a0b8-110">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-110">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6a0b8-111">Spécifie une propriété qui doit être exportée et fournit les informations de configuration pour l'exportation résultante.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-111">Specifies a property that should be exported, and provides configuration information for the resulting export.</span></span></summary>
        <returns><span data-ttu-id="6a0b8-112">Objet actif permettant d'effectuer un chaînage.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-112">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a0b8-113"><paramref name="propertyFilter" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-113"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportProperty&lt;TContract&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt; ExportProperty&lt;TContract&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder`1&lt;!T&gt; ExportProperty&lt;TContract&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperty(Of TContract) (propertyFilter As Expression(Of Func(Of T, Object))) As PartBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContract&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder&lt;T&gt; ^ ExportProperty(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContract" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContract"><span data-ttu-id="6a0b8-114">Type du contrat.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-114">The type of the contract.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="6a0b8-115">Expression qui résulte en une référence à la propriété cible.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-115">An expression that results in a reference to the target property.</span></span></param>
        <summary><span data-ttu-id="6a0b8-116">Spécifie une propriété qui doit être exporté comme type de contrat spécifié.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-116">Specifies a property that should be exported as the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="6a0b8-117">Objet actif permettant d'effectuer un chaînage.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-117">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a0b8-118"><paramref name="propertyFilter" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-118"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportProperty&lt;TContract&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt; ExportProperty&lt;TContract&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; propertyFilter, Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder`1&lt;!T&gt; ExportProperty&lt;TContract&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertyFilter, class System.Action`1&lt;class System.ComponentModel.Composition.Registration.ExportBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperty(Of TContract) (propertyFilter As Expression(Of Func(Of T, Object)), exportConfiguration As Action(Of ExportBuilder)) As PartBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContract&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder&lt;T&gt; ^ ExportProperty(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ propertyFilter, Action&lt;System::ComponentModel::Composition::Registration::ExportBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContract" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.ComponentModel.Composition.Registration.ExportBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContract"><span data-ttu-id="6a0b8-119">Type du contrat.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-119">The type of the contract.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="6a0b8-120">Expression qui résulte en une référence à la propriété cible.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-120">An expression that results in a reference to the target property.</span></span></param>
        <param name="exportConfiguration"><span data-ttu-id="6a0b8-121">Objet qui contient des informations de configuration sur l'exportation.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-121">An object that contains configuration information about the export.</span></span> <span data-ttu-id="6a0b8-122">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-122">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6a0b8-123">Spécifie une propriété qui doit être exportée comme type de contrat spécifié et fournit les informations de configuration pour l'exportation résultante.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-123">Specifies a property that should be exported as the specified contract type, and provides configuration information for the resulting export.</span></span></summary>
        <returns><span data-ttu-id="6a0b8-124">Objet actif permettant d'effectuer un chaînage.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-124">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a0b8-125"><paramref name="propertyFilter" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-125"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6a0b8-126">Spécifie qu'une propriété doit être importée.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-126">Specifies that a property should be imported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportProperty">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt; ImportProperty (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder`1&lt;!T&gt; ImportProperty(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperty (propertyFilter As Expression(Of Func(Of T, Object))) As PartBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder&lt;T&gt; ^ ImportProperty(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="6a0b8-127">Expression qui résulte en une référence à la propriété cible.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-127">An expression that results in a reference to the target property.</span></span></param>
        <summary><span data-ttu-id="6a0b8-128">Spécifie qu'une propriété doit être importée.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-128">Specifies that a property should be imported.</span></span></summary>
        <returns><span data-ttu-id="6a0b8-129">Objet actif permettant d'effectuer un chaînage.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-129">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a0b8-130"><paramref name="propertyFilter" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-130"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportProperty">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt; ImportProperty (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; propertyFilter, Action&lt;System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder`1&lt;!T&gt; ImportProperty(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertyFilter, class System.Action`1&lt;class System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperty (propertyFilter As Expression(Of Func(Of T, Object)), importConfiguration As Action(Of ImportBuilder)) As PartBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder&lt;T&gt; ^ ImportProperty(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ propertyFilter, Action&lt;System::ComponentModel::Composition::Registration::ImportBuilder ^&gt; ^ importConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.ComponentModel.Composition.Registration.ImportBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="6a0b8-131">Expression qui résulte en une référence à la propriété cible.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-131">An expression that results in a reference to the target property.</span></span></param>
        <param name="importConfiguration"><span data-ttu-id="6a0b8-132">Objet qui contient des informations de configuration sur l'importation.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-132">An object that contains configuration information about the import.</span></span> <span data-ttu-id="6a0b8-133">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-133">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6a0b8-134">Spécifie qu'une propriété doit être importée et fournit les informations de configuration pour l'importation résultante.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-134">Specifies that a property should be imported, and provides configuration information for the resulting import.</span></span></summary>
        <returns><span data-ttu-id="6a0b8-135">Objet actif permettant d'effectuer un chaînage.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-135">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a0b8-136"><paramref name="propertyFilter" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-136"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportProperty&lt;TContract&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt; ImportProperty&lt;TContract&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder`1&lt;!T&gt; ImportProperty&lt;TContract&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperty(Of TContract) (propertyFilter As Expression(Of Func(Of T, Object))) As PartBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContract&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder&lt;T&gt; ^ ImportProperty(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContract" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContract"><span data-ttu-id="6a0b8-137">Type de contrat à utiliser.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-137">The contract type to use.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="6a0b8-138">Expression qui résulte en une référence à la propriété cible.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-138">An expression that results in a reference to the target property.</span></span></param>
        <summary><span data-ttu-id="6a0b8-139">Spécifie qu'une propriété doit être importée à l'aide du nom de contrat spécifié.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-139">Specifies that a property should be imported using the specified contract name.</span></span></summary>
        <returns><span data-ttu-id="6a0b8-140">Objet actif permettant d'effectuer un chaînage.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-140">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a0b8-141"><paramref name="propertyFilter" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-141"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportProperty&lt;TContract&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt; ImportProperty&lt;TContract&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; propertyFilter, Action&lt;System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder`1&lt;!T&gt; ImportProperty&lt;TContract&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!T, object&gt;&gt; propertyFilter, class System.Action`1&lt;class System.ComponentModel.Composition.Registration.ImportBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperty(Of TContract) (propertyFilter As Expression(Of Func(Of T, Object)), importConfiguration As Action(Of ImportBuilder)) As PartBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContract&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder&lt;T&gt; ^ ImportProperty(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ propertyFilter, Action&lt;System::ComponentModel::Composition::Registration::ImportBuilder ^&gt; ^ importConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContract" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.ComponentModel.Composition.Registration.ImportBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContract"><span data-ttu-id="6a0b8-142">Nom du contrat à utiliser.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-142">The contract name to use.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="6a0b8-143">Expression qui résulte en une référence à la propriété cible.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-143">An expression that results in a reference to the target property.</span></span></param>
        <param name="importConfiguration"><span data-ttu-id="6a0b8-144">Objet qui contient des informations de configuration sur l'importation.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-144">An object that contains configuration information about the import.</span></span> <span data-ttu-id="6a0b8-145">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-145">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6a0b8-146">Spécifie qu'une propriété doit être importée à l'aide du nom de contrat spécifié et fournit les informations de configuration pour l'importation résultante.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-146">Specifies that a property should be imported using the specified contract name, and provides configuration information for the resulting import.</span></span></summary>
        <returns><span data-ttu-id="6a0b8-147">Objet actif permettant d'effectuer un chaînage.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-147">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a0b8-148"><paramref name="propertyFilter" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-148"><paramref name="propertyFilter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectConstructor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt; SelectConstructor (System.Linq.Expressions.Expression&lt;Func&lt;System.ComponentModel.Composition.Registration.ParameterImportBuilder,T&gt;&gt; constructorFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder`1&lt;!T&gt; SelectConstructor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.ComponentModel.Composition.Registration.ParameterImportBuilder, !T&gt;&gt; constructorFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectConstructor (constructorFilter As Expression(Of Func(Of ParameterImportBuilder, T))) As PartBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder&lt;T&gt; ^ SelectConstructor(System::Linq::Expressions::Expression&lt;Func&lt;System::ComponentModel::Composition::Registration::ParameterImportBuilder ^, T&gt; ^&gt; ^ constructorFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorFilter" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.ComponentModel.Composition.Registration.ParameterImportBuilder,T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="constructorFilter"><span data-ttu-id="6a0b8-149">Expression qui construit <c>T</c> à l’aide du constructeur souhaité.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-149">An expression that constructs <c>T</c> by using the desired constructor.</span></span> <span data-ttu-id="6a0b8-150">Elle est utilisée uniquement pour référence, n'est en fait pas appelée.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-150">It is used only for reference, not actually invoked.</span></span></param>
        <summary><span data-ttu-id="6a0b8-151">Spécifie le constructeur qui doit être utilisé comme constructeur d'importation.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-151">Specifies the constructor that should be used as an importing constructor.</span></span></summary>
        <returns><span data-ttu-id="6a0b8-152">Objet actif permettant d'effectuer un chaînage.</span><span class="sxs-lookup"><span data-stu-id="6a0b8-152">The current object, to allow chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>