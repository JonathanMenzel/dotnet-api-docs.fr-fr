<Type Name="NodeRangeIterator" FullName="System.Xml.Xsl.Runtime.NodeRangeIterator">
  <TypeSignature Language="C#" Value="public struct NodeRangeIterator" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit NodeRangeIterator extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />
  <TypeSignature Language="VB.NET" Value="Public Structure NodeRangeIterator" />
  <TypeSignature Language="C++ CLI" Value="public value class NodeRangeIterator" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlXml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d4493-101">Itère sur le nœud singleton si le nœud de démarrage est le même nœud que le nœud de fin.</span><span class="sxs-lookup"><span data-stu-id="d4493-101">Iterates over the singleton node if the starting node is the same node as the ending node.</span></span> <span data-ttu-id="d4493-102">Itère à la fin du document si le nœud de démarrage est situé après le nœud de fin ou se trouve dans un document différent.</span><span class="sxs-lookup"><span data-stu-id="d4493-102">Iterates to the end of the document if the starting node is after the ending node or is in a different document.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4493-103">Itérer sur les nœuds dans l’ordre du document, commençant par le nœud de démarrage via tous les nœuds de contenu typé qui suivent le nœud de démarrage, jusqu'à ce que le nœud de fin est atteint.</span><span class="sxs-lookup"><span data-stu-id="d4493-103">Iterate over the nodes in document order, beginning with the start node through all content-typed nodes that follow the starting node, until the ending node is reached.</span></span> <span data-ttu-id="d4493-104">Les nœuds qui ne correspondent pas au test de prédicat sont filtrées.</span><span class="sxs-lookup"><span data-stu-id="d4493-104">Nodes that do not match the predicate test are filtered out.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Xml.XPath.XPathNavigator start, System.Xml.Xsl.Runtime.XmlNavigatorFilter filter, System.Xml.XPath.XPathNavigator end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Xml.XPath.XPathNavigator start, class System.Xml.Xsl.Runtime.XmlNavigatorFilter filter, class System.Xml.XPath.XPathNavigator end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.NodeRangeIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create (start As XPathNavigator, filter As XmlNavigatorFilter, end As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Xml::XPath::XPathNavigator ^ start, System::Xml::Xsl::Runtime::XmlNavigatorFilter ^ filter, System::Xml::XPath::XPathNavigator ^ end);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="filter" Type="System.Xml.Xsl.Runtime.XmlNavigatorFilter" />
        <Parameter Name="end" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="d4493-105">Nœud auquel l'itération commence.</span><span class="sxs-lookup"><span data-stu-id="d4493-105">Node at which iteration begins.</span></span></param>
        <param name="filter"><span data-ttu-id="d4493-106">Expression de test qui détermine si un nœud sera éliminé par filtrage.</span><span class="sxs-lookup"><span data-stu-id="d4493-106">Test expression that determines whether a node is to be filtered out.</span></span></param>
        <param name="end"><span data-ttu-id="d4493-107">Nœud auquel se termine l'itération.</span><span class="sxs-lookup"><span data-stu-id="d4493-107">Node at which iteration ends.</span></span></param>
        <summary><span data-ttu-id="d4493-108">Initialise la <see cref="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />.</span><span class="sxs-lookup"><span data-stu-id="d4493-108">Initializes the <see cref="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4493-109">La méthode effectue une itération sur les nœuds dans l’ordre du document, commençant par le nœud de démarrage via tous les nœuds de contenu typé qui suivent le nœud de démarrage, jusqu'à ce que le nœud de fin est atteint.</span><span class="sxs-lookup"><span data-stu-id="d4493-109">The method iterates over the nodes in document order, beginning with the start node through all content-typed nodes that follow the starting node, until the ending node is reached.</span></span> <span data-ttu-id="d4493-110">Les nœuds qui ne correspondent pas au test de prédicat sont filtrées.</span><span class="sxs-lookup"><span data-stu-id="d4493-110">Nodes that do not match the predicate test are filtered out.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XPath.XPathNavigator Current" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.Runtime.NodeRangeIterator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XPath::XPathNavigator ^ Current { System::Xml::XPath::XPathNavigator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d4493-111">Retourne le navigateur de résultats en cours.</span><span class="sxs-lookup"><span data-stu-id="d4493-111">Returns the current result navigator.</span></span></summary>
        <value><span data-ttu-id="d4493-112">Navigateur de résultats actuel.</span><span class="sxs-lookup"><span data-stu-id="d4493-112">The current result navigator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4493-113">L’état d’if uniquement des modifications de navigateur la <xref:System.Xml.Xsl.Runtime.NodeRangeIterator.MoveNext%2A> méthode a retourné `true`.</span><span class="sxs-lookup"><span data-stu-id="d4493-113">The state of the navigator changes only if the <xref:System.Xml.Xsl.Runtime.NodeRangeIterator.MoveNext%2A> method has returned `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.NodeRangeIterator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4493-114">Positionne l'itérateur sur le nœud suivant.</span><span class="sxs-lookup"><span data-stu-id="d4493-114">Positions the iterator on the next node.</span></span></summary>
        <returns>
          <span data-ttu-id="d4493-115"><see langword="true" /> si le nœud suivant existe ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d4493-115"><see langword="true" /> if the next node exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4493-116">Si le nœud suivant existe, la <xref:System.Xml.Xsl.Runtime.NodeRangeIterator.MoveNext%2A> méthode définit la <xref:System.Xml.Xsl.Runtime.NodeRangeIterator.Current%2A> propriété navigateur de résultats actuel ; sinon, le <xref:System.Xml.Xsl.Runtime.NodeRangeIterator.Current%2A> propriété reste inchangée.</span><span class="sxs-lookup"><span data-stu-id="d4493-116">If the next node exists, the <xref:System.Xml.Xsl.Runtime.NodeRangeIterator.MoveNext%2A> method sets the <xref:System.Xml.Xsl.Runtime.NodeRangeIterator.Current%2A> property to the current result navigator; otherwise, the <xref:System.Xml.Xsl.Runtime.NodeRangeIterator.Current%2A> property remains unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>