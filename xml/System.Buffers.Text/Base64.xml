<Type Name="Base64" FullName="System.Buffers.Text.Base64">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ccdcbb33753dfa1bd9ba714a6c438e823c9f8a0f" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56354752" /></Metadata><TypeSignature Language="C#" Value="public static class Base64" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Base64 extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Base64" />
  <TypeSignature Language="VB.NET" Value="Public Class Base64" />
  <TypeSignature Language="C++ CLI" Value="public ref class Base64 abstract sealed" />
  <TypeSignature Language="F#" Value="type Base64 = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ac007-101">Conversions entre les données binaires et le texte codé UTF-8 qui est représenté en base 64.</span><span class="sxs-lookup"><span data-stu-id="ac007-101">Converts between binary data and UTF-8 encoded text that is represented in base 64.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DecodeFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8 (ReadOnlySpan&lt;byte&gt; utf8, Span&lt;byte&gt; bytes, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8 (utf8 As ReadOnlySpan(Of Byte), bytes As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  *  * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8 (utf8, bytes, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="utf8"><span data-ttu-id="ac007-102">L’étendue d’entrée qui contient du texte codé UTF-8 en base 64 qui doit être décodé.</span><span class="sxs-lookup"><span data-stu-id="ac007-102">The input span that contains UTF-8 encoded text in base 64 that needs to be decoded.</span></span></param>
        <param name="bytes"><span data-ttu-id="ac007-103">L’étendue de sortie qui contient le résultat de l’opération, autrement dit, les données binaires décodées.</span><span class="sxs-lookup"><span data-stu-id="ac007-103">The output span that contains the result of the operation, that is, the decoded binary data.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="ac007-104">Le nombre d’octets d’entrée consommés pendant l’opération.</span><span class="sxs-lookup"><span data-stu-id="ac007-104">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="ac007-105">Cela peut servir à découper l’entrée pour les appels suivants, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="ac007-105">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ac007-106">Le nombre d’octets écrits dans l’étendue de sortie.</span><span class="sxs-lookup"><span data-stu-id="ac007-106">The number of bytes written into the output span.</span></span> <span data-ttu-id="ac007-107">Cela peut servir à découper la sortie pour les appels suivants, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="ac007-107">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="ac007-108"><see langword="true" /> (valeur par défaut) si l’étendue d’entrée contient la totalité des données à décoder.</span><span class="sxs-lookup"><span data-stu-id="ac007-108"><see langword="true" /> (default) if the input span contains the entire data to decode.</span></span> <span data-ttu-id="ac007-109"><see langword="false" /> si l’étendue d’entrée contient des données partielles avec plus de données à suivre.</span><span class="sxs-lookup"><span data-stu-id="ac007-109"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="ac007-110">Décode l’étendue du texte codé en UTF-8 représenté en tant que base 64 dans les données binaires.</span><span class="sxs-lookup"><span data-stu-id="ac007-110">Decodes the span of UTF-8 encoded text represented as base 64 into binary data.</span></span> <span data-ttu-id="ac007-111">Si l’entrée n’est pas un multiple de 4, il décodera autant que possible, au multiple de 4 le plus proche.</span><span class="sxs-lookup"><span data-stu-id="ac007-111">If the input is not a multiple of 4, it will decode as much as it can, to the closest multiple of 4.</span></span></summary>
        <returns><span data-ttu-id="ac007-112">L'une des valeurs d’énumération qui indique l’état de l’opération de décodage.</span><span class="sxs-lookup"><span data-stu-id="ac007-112">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ac007-113">La valeur de retour peut être comme suit :</span><span class="sxs-lookup"><span data-stu-id="ac007-113">The return value can be as follows:</span></span>

- <span data-ttu-id="ac007-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Traitement de la plage d’entrée complète a réussi.</span><span class="sxs-lookup"><span data-stu-id="ac007-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="ac007-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: Ne comporte pas suffisamment d’espace dans l’étendue de sortie pour écrire l’entrée décodée.</span><span class="sxs-lookup"><span data-stu-id="ac007-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There is not enough space in the output span to write the decoded input.</span></span>
- <span data-ttu-id="ac007-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` est `false` et l’entrée n’est pas un multiple de 4.</span><span class="sxs-lookup"><span data-stu-id="ac007-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false` and the input is not a multiple of 4.</span></span> <span data-ttu-id="ac007-117">Sinon, l’entrée partielle est considéré comme <xref:System.Buffers.OperationStatus.InvalidData>.</span><span class="sxs-lookup"><span data-stu-id="ac007-117">Otherwise, the partial input is considered <xref:System.Buffers.OperationStatus.InvalidData>.</span></span>
- <span data-ttu-id="ac007-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: L’entrée contient les octets en dehors de la plage de base 64 attendue, n’a plus de deux caractères de remplissage ou non valides ou est incomplet (autrement dit, pas un multiple de 4) et `isFinalBlock` est `true`.</span><span class="sxs-lookup"><span data-stu-id="ac007-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4) and `isFinalBlock` is `true`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8InPlace (Span&lt;byte&gt; buffer, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8InPlace(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8InPlace (buffer As Span(Of Byte), ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf8InPlace(Span&lt;System::Byte&gt; buffer, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8InPlace : Span&lt;byte&gt; *  -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8InPlace (buffer, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ac007-119">L’étendue d’entrée qui contient les données de texte en base 64 qui doit être décodé.</span><span class="sxs-lookup"><span data-stu-id="ac007-119">The input span that contains the base-64 text data that needs to be decoded.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ac007-120">Le nombre d’octets écrits dans la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="ac007-120">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="ac007-121">Décode l’étendue du texte codé en UTF-8 en base 64 (sur place) dans les données binaires.</span><span class="sxs-lookup"><span data-stu-id="ac007-121">Decodes the span of UTF-8 encoded text in base 64 (in-place) into binary data.</span></span> <span data-ttu-id="ac007-122">La sortie binaire décodée est plus petite que les données de texte contenues dans l’entrée (l’opération dégonfle des données).</span><span class="sxs-lookup"><span data-stu-id="ac007-122">The decoded binary output is smaller than the text data contained in the input (the operation deflates the data).</span></span> <span data-ttu-id="ac007-123">Si l’entrée n’est pas un multiple de 4, la méthode ne décodera aucune donnée.</span><span class="sxs-lookup"><span data-stu-id="ac007-123">If the input is not a multiple of 4, the method will not decode any data.</span></span></summary>
        <returns><span data-ttu-id="ac007-124">L'une des valeurs d’énumération qui indique l’état de l’opération de décodage.</span><span class="sxs-lookup"><span data-stu-id="ac007-124">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ac007-125">La valeur de retour peut être comme suit :</span><span class="sxs-lookup"><span data-stu-id="ac007-125">The return value can be as follows:</span></span>

- <span data-ttu-id="ac007-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Traitement de la plage d’entrée complète a réussi.</span><span class="sxs-lookup"><span data-stu-id="ac007-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="ac007-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: L’entrée contient les octets en dehors de la plage de base 64 attendue, n’a plus de deux caractères de remplissage ou non valides ou est incomplet (autrement dit, pas un multiple de 4).</span><span class="sxs-lookup"><span data-stu-id="ac007-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4).</span></span>

<span data-ttu-id="ac007-128">Cette méthode ne peut pas retourner la <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> et <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> valeurs.</span><span class="sxs-lookup"><span data-stu-id="ac007-128">This method cannot return the <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> values.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8 (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;byte&gt; utf8, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;unsigned int8&gt; utf8, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8 (bytes As ReadOnlySpan(Of Byte), utf8 As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  *  * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8 (bytes, utf8, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="utf8" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="ac007-129">L’étendue d’entrée qui contient les données binaires qui doivent être codées.</span><span class="sxs-lookup"><span data-stu-id="ac007-129">The input span that contains binary data that needs to be encoded.</span></span></param>
        <param name="utf8"><span data-ttu-id="ac007-130">L’étendue de sortie qui contient le résultat de l’opération, autrement dit, le texte codé UTF-8 en base 64.</span><span class="sxs-lookup"><span data-stu-id="ac007-130">The output span that contains the result of the operation, that is, the UTF-8 encoded text in base 64.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="ac007-131">Le nombre d’octets d’entrée consommés pendant l’opération.</span><span class="sxs-lookup"><span data-stu-id="ac007-131">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="ac007-132">Cela peut servir à découper l’entrée pour les appels suivants, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="ac007-132">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ac007-133">Le nombre d’octets écrits dans l’étendue de sortie.</span><span class="sxs-lookup"><span data-stu-id="ac007-133">The number of bytes written into the output span.</span></span> <span data-ttu-id="ac007-134">Cela peut servir à découper la sortie pour les appels suivants, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="ac007-134">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="ac007-135"><see langword="true" /> (valeur par défaut) si l’étendue d’entrée contient la totalité des données à coder.</span><span class="sxs-lookup"><span data-stu-id="ac007-135"><see langword="true" /> (the default) if the input span contains the entire data to encode.</span></span> <span data-ttu-id="ac007-136"><see langword="false" /> si l’étendue d’entrée contient des données partielles avec plus de données à suivre.</span><span class="sxs-lookup"><span data-stu-id="ac007-136"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="ac007-137">Code l’étendue des données binaires en texte codé UTF-8 représenté en tant que base 64.</span><span class="sxs-lookup"><span data-stu-id="ac007-137">Encodes the span of binary data into UTF-8 encoded text represented as base 64.</span></span></summary>
        <returns><span data-ttu-id="ac007-138">L'une des valeurs d’énumération qui indique l’état de l’opération de codage.</span><span class="sxs-lookup"><span data-stu-id="ac007-138">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ac007-139">La valeur de retour peut être comme suit :</span><span class="sxs-lookup"><span data-stu-id="ac007-139">The return value can be as follows:</span></span>

- <span data-ttu-id="ac007-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Traitement de la plage d’entrée complète a réussi.</span><span class="sxs-lookup"><span data-stu-id="ac007-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="ac007-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: Il n’est pas suffisamment d’espace dans l’étendue de la sortie en fonction de l’entrée encodée.</span><span class="sxs-lookup"><span data-stu-id="ac007-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the output span to fit the encoded input.</span></span>
- <span data-ttu-id="ac007-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` est `false`.</span><span class="sxs-lookup"><span data-stu-id="ac007-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false`.</span></span> <span data-ttu-id="ac007-143">Sinon, si `isFinalBlock` est `true`, la sortie est complétée si l’entrée n’est pas un multiple de 3.</span><span class="sxs-lookup"><span data-stu-id="ac007-143">Otherwise, if `isFinalBlock` is `true`, the output is padded if the input is not a multiple of 3.</span></span>

<span data-ttu-id="ac007-144">Cette méthode ne peut pas retourner <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> car qui n’est pas possible pour le codage en base 64.</span><span class="sxs-lookup"><span data-stu-id="ac007-144">This method cannot return <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> since that is not possible for base-64 encoding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8InPlace (Span&lt;byte&gt; buffer, int dataLength, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, int32 dataLength, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8InPlace(System.Span{System.Byte},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8InPlace (buffer As Span(Of Byte), dataLength As Integer, ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus EncodeToUtf8InPlace(Span&lt;System::Byte&gt; buffer, int dataLength, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8InPlace : Span&lt;byte&gt; * int *  -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8InPlace (buffer, dataLength, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="dataLength" Type="System.Int32" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ac007-145">L’étendue d’entrée qui contient les données binaires qui doivent être codées.</span><span class="sxs-lookup"><span data-stu-id="ac007-145">The input span that contains binary data that needs to be encoded.</span></span> <span data-ttu-id="ac007-146">Étant donné que la méthode effectue une conversion sur place, elle doit être suffisamment grande pour stocker le résultat de l’opération.</span><span class="sxs-lookup"><span data-stu-id="ac007-146">Because the method performs an in-place conversion, it needs to be large enough to store the result of the operation.</span></span></param>
        <param name="dataLength"><span data-ttu-id="ac007-147">Le nombre d’octets de données binaires contenues dans la mémoire tampon qui doit être codé.</span><span class="sxs-lookup"><span data-stu-id="ac007-147">The number of bytes of binary data contained within the buffer that needs to be encoded.</span></span> <span data-ttu-id="ac007-148">Cette valeur doit être inférieure à la longueur de la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="ac007-148">This value must be smaller than the buffer length.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ac007-149">Le nombre d’octets écrits dans la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="ac007-149">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="ac007-150">Code l’étendue des données binaires (sur place) en texte codé UTF-8 représenté en tant que base 64.</span><span class="sxs-lookup"><span data-stu-id="ac007-150">Encodes the span of binary data (in-place) into UTF-8 encoded text represented as base 64.</span></span> <span data-ttu-id="ac007-151">La sortie du texte codé est plus grande que les données binaires contenues dans l’entrée (l’opération gonfle les données).</span><span class="sxs-lookup"><span data-stu-id="ac007-151">The encoded text output is larger than the binary data contained in the input (the operation inflates the data).</span></span></summary>
        <returns><span data-ttu-id="ac007-152">L'une des valeurs d’énumération qui indique l’état de l’opération de codage.</span><span class="sxs-lookup"><span data-stu-id="ac007-152">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ac007-153">La valeur de retour peut être comme suit :</span><span class="sxs-lookup"><span data-stu-id="ac007-153">The return value can be as follows:</span></span>

- <span data-ttu-id="ac007-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Traitement de la mémoire tampon entière a réussi.</span><span class="sxs-lookup"><span data-stu-id="ac007-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire buffer succeeded.</span></span>
- <span data-ttu-id="ac007-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: Il n’est pas suffisamment d’espace dans la mémoire tampon au-delà `dataLength` pour tenir le résultat de l’encodage de l’entrée.</span><span class="sxs-lookup"><span data-stu-id="ac007-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the buffer beyond `dataLength` to fit the result of encoding the input.</span></span>

<span data-ttu-id="ac007-156">Cette méthode ne peut pas retourner <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> et <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ac007-156">This method cannot return <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxDecodedFromUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxDecodedFromUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxDecodedFromUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxDecodedFromUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxDecodedFromUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxDecodedFromUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary><span data-ttu-id="ac007-157">Retourne la longueur maximale (en octets) du résultat, si vous deviez décoder le texte codé en base 64 dans une étendue d’octets de taille <paramref name="length" />.</span><span class="sxs-lookup"><span data-stu-id="ac007-157">Returns the maximum length (in bytes) of the result if you were to decode base-64 encoded text within a byte span of size <paramref name="length" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ac007-158"><paramref name="length" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="ac007-158"><paramref name="length" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaxEncodedToUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxEncodedToUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxEncodedToUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxEncodedToUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxEncodedToUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxEncodedToUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary><span data-ttu-id="ac007-159">Retourne la longueur maximale (en octets) du résultat, si vous deviez coder les données binaires dans une étendue d’octets de taille <paramref name="length" />.</span><span class="sxs-lookup"><span data-stu-id="ac007-159">Returns the maximum length (in bytes) of the result if you were to encode binary data within a byte span of size <paramref name="length" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ac007-160"><paramref name="length" /> est inférieur à 0 ou supérieur à 1610612733 (étant donné que le codage gonfle les données de 4/3).</span><span class="sxs-lookup"><span data-stu-id="ac007-160"><paramref name="length" /> is less than 0 or larger than 1610612733 (since encode inflates the data by 4/3).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>