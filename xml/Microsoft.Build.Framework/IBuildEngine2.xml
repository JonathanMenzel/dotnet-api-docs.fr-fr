<Type Name="IBuildEngine2" FullName="Microsoft.Build.Framework.IBuildEngine2">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9ae6208b5acc92040f48951469ee5a51a141c4f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37725155" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBuildEngine2 : Microsoft.Build.Framework.IBuildEngine" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBuildEngine2 implements class Microsoft.Build.Framework.IBuildEngine" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.IBuildEngine2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBuildEngine2&#xA;Implements IBuildEngine" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBuildEngine2 : Microsoft::Build::Framework::IBuildEngine" />
  <TypeSignature Language="F#" Value="type IBuildEngine2 = interface&#xA;    interface IBuildEngine" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Offre un moyen aux auteurs de la tâche d’utiliser une partie des fonctionnalités du moteur MSBuild.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Build.Framework.IBuildEngine2> étend <xref:Microsoft.Build.Framework.IBuildEngine>, ce qui vous permet de générer plusieurs fichiers projet en parallèle sur des systèmes contenant plusieurs processeurs ou processeurs à plusieurs cœurs.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildProjectFile">
      <MemberSignature Language="C#" Value="public bool BuildProjectFile (string projectFileName, string[] targetNames, System.Collections.IDictionary globalProperties, System.Collections.IDictionary targetOutputs, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BuildProjectFile(string projectFileName, string[] targetNames, class System.Collections.IDictionary globalProperties, class System.Collections.IDictionary targetOutputs, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine2.BuildProjectFile(System.String,System.String[],System.Collections.IDictionary,System.Collections.IDictionary,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildProjectFile (projectFileName As String, targetNames As String(), globalProperties As IDictionary, targetOutputs As IDictionary, toolsVersion As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BuildProjectFile(System::String ^ projectFileName, cli::array &lt;System::String ^&gt; ^ targetNames, System::Collections::IDictionary ^ globalProperties, System::Collections::IDictionary ^ targetOutputs, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="abstract member BuildProjectFile : string * string[] * System.Collections.IDictionary * System.Collections.IDictionary * string -&gt; bool" Usage="iBuildEngine2.BuildProjectFile (projectFileName, targetNames, globalProperties, targetOutputs, toolsVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileName" Type="System.String" />
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="globalProperties" Type="System.Collections.IDictionary" />
        <Parameter Name="targetOutputs" Type="System.Collections.IDictionary" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFileName">Nom du fichier projet à générer.</param>
        <param name="targetNames">Noms de la cible dans le projet à générer. Séparez plusieurs cibles par un point-virgule (;). Les valeurs <see langword="Null" /> sont acceptables.</param>
        <param name="globalProperties">
          <see cref="T:System.Collections.IDictionary" /> de propriétés globales supplémentaires à appliquer au projet. La clé et la valeur doivent être des types de données <see langword="String" />.</param>
        <param name="targetOutputs">Sorties de chaque cible spécifiée. Les valeurs <see langword="Null" /> sont acceptables.</param>
        <param name="toolsVersion">Valeur par défaut = "3.5". Spécifie la version de l'ensemble d'outils que la build doit utiliser. Les valeurs <see langword="Null" /> sont acceptables.</param>
        <summary>Initialise une génération d'un fichier projet. Si la génération est réussie, les sorties des cibles spécifiées sont retournées, le cas échéant.</summary>
        <returns>
          <see langword="true" /> si la génération a réussi ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si aucune cible n’est spécifié, [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] génère les cibles par défaut du projet.  
  
 Sorties cibles sont retournées en tant que <xref:Microsoft.Build.Framework.ITaskItem> tableaux indexés par nom de cible.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildProjectFilesInParallel">
      <MemberSignature Language="C#" Value="public bool BuildProjectFilesInParallel (string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.IDictionary[] targetOutputsPerProject, string[] toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, class System.Collections.IDictionary[] globalProperties, class System.Collections.IDictionary[] targetOutputsPerProject, string[] toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine2.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.IDictionary[],System.String[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildProjectFilesInParallel (projectFileNames As String(), targetNames As String(), globalProperties As IDictionary(), targetOutputsPerProject As IDictionary(), toolsVersion As String(), useResultsCache As Boolean, unloadProjectsOnCompletion As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BuildProjectFilesInParallel(cli::array &lt;System::String ^&gt; ^ projectFileNames, cli::array &lt;System::String ^&gt; ^ targetNames, cli::array &lt;System::Collections::IDictionary ^&gt; ^ globalProperties, cli::array &lt;System::Collections::IDictionary ^&gt; ^ targetOutputsPerProject, cli::array &lt;System::String ^&gt; ^ toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion);" />
      <MemberSignature Language="F#" Value="abstract member BuildProjectFilesInParallel : string[] * string[] * System.Collections.IDictionary[] * System.Collections.IDictionary[] * string[] * bool * bool -&gt; bool" Usage="iBuildEngine2.BuildProjectFilesInParallel (projectFileNames, targetNames, globalProperties, targetOutputsPerProject, toolsVersion, useResultsCache, unloadProjectsOnCompletion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileNames" Type="System.String[]" />
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="globalProperties" Type="System.Collections.IDictionary[]" />
        <Parameter Name="targetOutputsPerProject" Type="System.Collections.IDictionary[]" />
        <Parameter Name="toolsVersion" Type="System.String[]" />
        <Parameter Name="useResultsCache" Type="System.Boolean" />
        <Parameter Name="unloadProjectsOnCompletion" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="projectFileNames">Noms des fichiers projet à générer.</param>
        <param name="targetNames">Noms des cibles dans le projet à générer. Séparez plusieurs cibles par un point-virgule (;). Les valeurs <see langword="Null" /> sont acceptables.</param>
        <param name="globalProperties">
          <see cref="T:System.Collections.IDictionary" /> de propriétés globales supplémentaires à appliquer au projet. La clé et la valeur doivent être des types de données <see langword="String" />. Les entrées de tableau peuvent être <see langword="null" />.</param>
        <param name="targetOutputsPerProject">Sorties de chaque cible spécifiée. Les valeurs <see langword="Null" /> sont acceptables.</param>
        <param name="toolsVersion">Valeur par défaut = "3.5". Spécifie la version de l'ensemble d'outils que la build doit utiliser. Les valeurs <see langword="Null" /> sont acceptables.</param>
        <param name="useResultsCache">Si <see langword="true" />, l'opération s'exécute uniquement si le cache ne contient pas déjà le résultat. Après l'opération, le résultat est stocké dans le cache.</param>
        <param name="unloadProjectsOnCompletion">Si <see langword="true" />, le projet est déchargé une fois l'opération complète.</param>
        <summary>Permet aux tâches d'initialiser des générations parallèles des fichiers projet spécifiés sur des systèmes avec plusieurs processeurs ou des processeurs avec de multiples cœurs. Si les générations sont réussies, les sorties des cibles spécifiées sont retournées, le cas échéant.</summary>
        <returns>
          <see langword="True" /> si la génération a réussi ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les deux `targetNames` et `targetOutputs` accepter `null` valeurs. Si aucune cible n’est spécifié, les cibles par défaut sont générés. Sorties cibles sont retournées en tant que <xref:Microsoft.Build.Framework.ITaskItem> tableaux indexés par nom de cible.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunningMultipleNodes">
      <MemberSignature Language="C#" Value="public bool IsRunningMultipleNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunningMultipleNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.IBuildEngine2.IsRunningMultipleNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunningMultipleNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunningMultipleNodes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunningMultipleNodes : bool" Usage="Microsoft.Build.Framework.IBuildEngine2.IsRunningMultipleNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si le système est exécuté en mode monoprocesseur ou multiprocesseur.</summary>
        <value>
          <see langword="true" /> si le système est exécuté en mode multiprocesseur ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le moteur de génération est en mode de monoprocesseur (`IsRunningMultipleNodes` = `false`) lorsqu’elle est initialisée avec le nombre de processeurs égales à 1 et le moteur de génération n’est pas un moteur enfant. Le moteur de génération est en mode multiprocesseur (`IsRunningMultipleNodes` = `true`) lorsqu’il est initialisé avec un nombre d’UC supérieure à 1, ou lorsque le moteur de génération est un moteur enfant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>