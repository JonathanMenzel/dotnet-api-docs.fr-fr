<Type Name="ITaskFactory2" FullName="Microsoft.Build.Framework.ITaskFactory2">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a99d31fcce2d7003fbb5aea715f1d5d30ce444e" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36735514" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITaskFactory2 : Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITaskFactory2 implements class Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ITaskFactory2" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITaskFactory2&#xA;Implements ITaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITaskFactory2 : Microsoft::Build::Framework::ITaskFactory" />
  <TypeSignature Language="F#" Value="type ITaskFactory2 = interface&#xA;    interface ITaskFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Décrit une interface <see cref="T:Microsoft.Build.Framework.ITaskFactory" /> étendue devant être implémentée par une instance de la fabrique de tâches.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, System.Collections.Generic.IDictionary&lt;string,string&gt; taskIdentityParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; taskIdentityParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (taskFactoryLoggingHost As IBuildEngine, taskIdentityParameters As IDictionary(Of String, String)) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ taskIdentityParameters);" />
      <MemberSignature Language="F#" Value="abstract member CreateTask : Microsoft.Build.Framework.IBuildEngine * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Build.Framework.ITask" Usage="iTaskFactory2.CreateTask (taskFactoryLoggingHost, taskIdentityParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
        <Parameter Name="taskIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="taskFactoryLoggingHost">L'hôte d'enregistrement de la fabrique de tâches enregistrera les messages dans le contexte de la tâche.</param>
        <param name="taskIdentityParameters">Paramètres spéciaux que la fabrique de tâches peut utiliser pour modifier la façon dont elle exécute des tâches, telles que Runtime et Architecture.</param>
        <summary>Créer une instance de la tâche à utiliser, avec un jeu facultatif de paramètres « spéciaux » définis sur l'appel de tâche individuelle à l'aide des paramètres de tâche par défaut MSBuildRuntime et MSBuildArchitecture. MSBuild fournit une implémentation de cette interface, TaskHostFactory, qui utilise « MSBuildRuntime », avec les valeurs « CLR2 », « CLR4 », « CurrentRuntime » et « * » (N’importe laquelle) ; et « MSBuildArchitecture », avec les valeurs « x86 », « x64 », « CurrentArchitecture » et « \* » (N’importe laquelle). Implémenteur d'ITaskFactory2 peut choisir d'utiliser ces valeurs prédéfinies de MSBuildRuntime et de MSBuildArchitecture, ou peut spécifier de nouvelles valeurs pour ces paramètres.</summary>
        <returns>Tâche générée ou valeur <c>Null</c> si la création de la tâche a échoué.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si une fabrique de tâches implémente ITaskFactory2, MSBuild appelle cette méthode au lieu de ITaskFactory.CreateTask.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,string&gt; factoryIdentityParameters, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; factoryIdentityParameters, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, factoryIdentityParameters As IDictionary(Of String, String), parameterGroup As IDictionary(Of String, TaskPropertyInfo), taskBody As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ factoryIdentityParameters, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ parameterGroup, System::String ^ taskBody, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool" Usage="iTaskFactory2.Initialize (taskName, factoryIdentityParameters, parameterGroup, taskBody, taskFactoryLoggingHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="factoryIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="parameterGroup" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" />
        <Parameter Name="taskBody" Type="System.String" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskName">Nom de la tâche.</param>
        <param name="factoryIdentityParameters">Paramètres spéciaux que la fabrique de tâches peut utiliser pour modifier la façon dont elle exécute des tâches, telles que Runtime et Architecture. La clé est le nom du paramètre et la valeur est la valeur du paramètre. Il s'agit du jeu de paramètres défini dans UsingTask, par exemple, les paramètres UsingTask Runtime et Architecture.</param>
        <param name="parameterGroup">Groupe de paramètres.</param>
        <param name="taskBody">Corps de tâche.</param>
        <param name="taskFactoryLoggingHost">Hôte d'enregistrement de la fabrique de tâches.</param>
        <summary>Initialise cette fabrique pour l'instanciation de tâches avec un bloc de tâche inline particulier et un jeu de paramètres UsingTask. MSBuild fournit une implémentation de cette interface, TaskHostFactory, qui utilise « Runtime », avec les valeurs « CLR2 », « CLR4 », « CurrentRuntime » et « * » (N’importe laquelle) ; et « Architecture », avec les valeurs « x86 », « x64 », « CurrentArchitecture » et « \* » (N’importe laquelle). Implémenteur d'ITaskFactory2 peut choisir d'utiliser ces valeurs prédéfinies de Runtime et de Architecture, ou peut spécifier de nouvelles valeurs pour ces paramètres.</summary>
        <returns>Valeur indiquant si l'initialisation a abouti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le moteur MSBuild appellera cette méthode pour initialiser la fabrique. Cette action doit initialiser suffisamment la fabrique pour qu'il soit possible de lui demander si les noms de tâches peuvent ou non être créés par elle. Si une fabrique de tâches implémente ITaskFactory2, cette méthode Initialize est appelée à la place de ITaskFactory.Initialize.  
  
 Le taskFactoryLoggingHost enregistrera des messages dans le contexte de la cible où la tâche est utilisée en premier.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>