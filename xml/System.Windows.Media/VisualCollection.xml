<Type Name="VisualCollection" FullName="System.Windows.Media.VisualCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b800078576abb97f6cef67dd84cd15a031c9513" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52224699" /></Metadata><TypeSignature Language="C#" Value="public sealed class VisualCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualCollection sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type VisualCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5e0ea-101">Représente une collection ordonnée d’objets <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-101">Represents an ordered collection of <see cref="T:System.Windows.Media.Visual" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-102">Un <xref:System.Windows.Media.VisualCollection> a impliqué l’affinité de contexte.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-102">A <xref:System.Windows.Media.VisualCollection> has implied context affinity.</span></span> <span data-ttu-id="5e0ea-103">Si une procédure tente d’accéder à la <xref:System.Windows.Media.VisualCollection> à partir d’un contexte différent du contexte du propriétaire <xref:System.Windows.Media.ContainerVisual>, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-103">If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e0ea-104">L’exemple suivant montre comment créer un <xref:System.Windows.Media.VisualCollection> et ajouter des membres.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-104">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="5e0ea-105">Pour obtenir un exemple complet, consultez [Test de positionnement à l’aide de DrawingVisuals, exemple](https://go.microsoft.com/fwlink/?LinkID=159994).</span><span class="sxs-lookup"><span data-stu-id="5e0ea-105">For the complete sample, see [Hit Test Using DrawingVisuals Sample](https://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualCollection (System.Windows.Media.Visual parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualCollection(System::Windows::Media::Visual ^ parent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.VisualCollection : System.Windows.Media.Visual -&gt; System.Windows.Media.VisualCollection" Usage="new System.Windows.Media.VisualCollection parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="5e0ea-106">Objet visuel parent dont la <see cref="T:System.Windows.Media.VisualCollection" /> est retournée.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-106">The parent visual object whose <see cref="T:System.Windows.Media.VisualCollection" /> is returned.</span></span></param>
        <summary><span data-ttu-id="5e0ea-107">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-107">Initializes a new instance of the <see cref="T:System.Windows.Media.VisualCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Media.Visual -&gt; int" Usage="visualCollection.Add visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="5e0ea-108"><see cref="T:System.Windows.Media.Visual" /> à ajouter à <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-108">The <see cref="T:System.Windows.Media.Visual" /> to append to the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="5e0ea-109">Ajoute le <see cref="T:System.Windows.Media.Visual" /> à la fin de la <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-109">Appends a <see cref="T:System.Windows.Media.Visual" /> to the end of the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <returns><span data-ttu-id="5e0ea-110">Index dans la collection auquel <paramref name="visual" /> a été ajouté.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-110">The index in the collection at which <paramref name="visual" /> was added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-111">Ajout d’un <xref:System.Windows.Media.Visual> dont la valeur est `null` est autorisée et ne lève pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-111">Adding a <xref:System.Windows.Media.Visual> whose value is `null` is permitted and does not raise an exception.</span></span>  
  
 <span data-ttu-id="5e0ea-112">Le <xref:System.Windows.Media.VisualCollection.Add%2A> méthode définit également la relation parent-enfant entre le parent visuel, qui est le propriétaire de la <xref:System.Windows.Media.VisualCollection>et l’enfant `visual`.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-112">The <xref:System.Windows.Media.VisualCollection.Add%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="5e0ea-113">Si vous avez besoin d’un contrôle de bas niveau supérieur sur l’implémentation sous-jacente de stockage d’objets enfants visuels d’une classe personnalisée, envisagez d’utiliser le <xref:System.Windows.Media.Visual.AddVisualChild%2A> et <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-113">If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="5e0ea-114">Lorsque vous utilisez ces méthodes, vous devez définir votre propre implémentation de stockage et que vous n’utilisez pas <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-114">When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e0ea-115">L’exemple suivant montre comment créer un <xref:System.Windows.Media.VisualCollection> et ajouter des membres.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-115">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="5e0ea-116">Pour obtenir un exemple complet, consultez [Test de positionnement à l’aide de DrawingVisuals, exemple](https://go.microsoft.com/fwlink/?LinkID=159994).</span><span class="sxs-lookup"><span data-stu-id="5e0ea-116">For the complete sample, see [Hit Test Using DrawingVisuals Sample](https://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e0ea-117">Une <see cref="T:System.ArgumentException" /> est levée si le <see cref="T:System.Windows.Media.Visual" /> est un élément racine.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-117">An <see cref="T:System.ArgumentException" /> is thrown if the <see cref="T:System.Windows.Media.Visual" /> is a root element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Windows.Media.VisualCollection.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e0ea-118">Obtient ou définit le nombre d'éléments que <see cref="T:System.Windows.Media.VisualCollection" /> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-118">Gets or sets the number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span></span></summary>
        <value><span data-ttu-id="5e0ea-119">Nombre initial d'éléments que <see cref="T:System.Windows.Media.VisualCollection" /> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-119">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-120">La valeur de <xref:System.Windows.Media.VisualCollection.Capacity%2A> est le nombre d’éléments qui le <xref:System.Windows.Media.VisualCollection> est capable de stocker.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-120">The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span> <span data-ttu-id="5e0ea-121"><xref:System.Windows.Media.VisualCollection.Count%2A> est le nombre d’éléments visuels réellement contenus dans le <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-121"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="5e0ea-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> est toujours supérieur ou égal à <xref:System.Windows.Media.VisualCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>.</span></span> <span data-ttu-id="5e0ea-123">Si <xref:System.Windows.Media.VisualCollection.Count%2A> dépasse <xref:System.Windows.Media.VisualCollection.Capacity%2A> lors de l’ajout d’éléments, la capacité de la <xref:System.Windows.Media.VisualCollection> est augmentée.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-123">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased.</span></span> <span data-ttu-id="5e0ea-124">Par défaut <xref:System.Windows.Media.VisualCollection.Capacity%2A> est égal à zéro.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-124">By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e0ea-125">La valeur affectée à <see cref="P:System.Windows.Media.VisualCollection.Capacity" /> est inférieure à <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-125"><see cref="P:System.Windows.Media.VisualCollection.Capacity" /> is set to a value that is less than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="visualCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e0ea-126">Supprime tous les éléments de <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-126">Removes all elements from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-127">Le <xref:System.Windows.Media.VisualCollection.Count%2A> est remis à zéro.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-127">The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero.</span></span> <span data-ttu-id="5e0ea-128">La valeur de la <xref:System.Windows.Media.VisualCollection.Capacity%2A> reste inchangé.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-128">The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="5e0ea-129">Pour rétablir la capacité de la <xref:System.Windows.Media.VisualCollection>, définissez le <xref:System.Windows.Media.VisualCollection.Capacity%2A> propriété à la taille souhaitée.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-129">To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Media.Visual -&gt; bool" Usage="visualCollection.Contains visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="5e0ea-130"><see cref="T:System.Windows.Media.Visual" /> à rechercher dans la collection.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-130">The <see cref="T:System.Windows.Media.Visual" /> to search for in the collection.</span></span></param>
        <summary><span data-ttu-id="5e0ea-131">Retourne une valeur <see cref="T:System.Boolean" /> qui indique si le <see cref="T:System.Windows.Media.Visual" /> spécifié est contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-131">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified <see cref="T:System.Windows.Media.Visual" /> is contained in the collection.</span></span></summary>
        <returns><span data-ttu-id="5e0ea-132"><see langword="true" /> si <paramref name="visual" /> se trouve dans la collection ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-132"><see langword="true" /> if <paramref name="visual" /> is contained in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-133">Le pire scénario d’exécution de cette fonction est `O(n)`, où `n` est le nombre d’éléments dans le <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-133">The worst-case runtime scenario of this function is `O(n)`, where `n` is the number of items in the <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e0ea-134">Copie la collection actuelle dans le tableau passé.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-134">Copies the current collection into the passed array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="visualCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="5e0ea-135"><see cref="T:System.Array" /> unidimensionnel constituant la destination des éléments qui sont copiés à partir de la <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-135">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements that are copied from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="5e0ea-136">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-136">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="5e0ea-137">Copie les éléments de la collection dans un tableau, en commençant par un index de tableau spécifique.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-137">Copies the items in the collection to an array, starting at a specific array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Visual[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Media.Visual[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Visual(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Media::Visual ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Windows.Media.Visual[] * int -&gt; unit" Usage="visualCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Visual[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="5e0ea-138">Tableau d'objets <see cref="T:System.Windows.Media.Visual" /> (dont l'indexation doit commencer par un).</span><span class="sxs-lookup"><span data-stu-id="5e0ea-138">An array of <see cref="T:System.Windows.Media.Visual" /> objects (which must have zero-based indexing).</span></span></param>
        <param name="index"><span data-ttu-id="5e0ea-139">Index pour commencer la copie à partir de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-139">The index to start copying from within <paramref name="array" />.</span></span></param>
        <summary><span data-ttu-id="5e0ea-140">Copie la collection actuelle dans le tableau <see cref="T:System.Windows.Media.Visual" /> passé.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-140">Copies the current collection into the passed <see cref="T:System.Windows.Media.Visual" /> array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Media.VisualCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e0ea-141">Obtient le nombre d’éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-141">Gets the number of elements in the collection.</span></span></summary>
        <value><span data-ttu-id="5e0ea-142">Nombre d'éléments que <see cref="T:System.Windows.Media.VisualCollection" /> contient.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-142">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> contains.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-143"><xref:System.Windows.Media.VisualCollection.Count%2A> est le nombre d’éléments réellement contenus dans le <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-143"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="5e0ea-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> est le nombre d’éléments qui le <xref:System.Windows.Media.VisualCollection> est capable de stocker.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span>  
  
 <span data-ttu-id="5e0ea-145"><xref:System.Windows.Media.VisualCollection.Count%2A> est toujours inférieure ou égale à <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-145"><xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</span></span> <span data-ttu-id="5e0ea-146">Si <xref:System.Windows.Media.VisualCollection.Count%2A> dépasse <xref:System.Windows.Media.VisualCollection.Capacity%2A> lors de l’ajout d’éléments, la capacité de la liste est doublée en réallouant automatiquement le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-146">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.VisualCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As VisualCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualCollection::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.Media.VisualCollection.Enumerator" Usage="visualCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e0ea-147">Récupère un énumérateur qui peut parcourir la <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-147">Retrieves an enumerator that can iterate through the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <returns><span data-ttu-id="5e0ea-148">Énumérateur permettant d'effectuer une itération au sein de la collection.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-148">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Media.Visual -&gt; int" Usage="visualCollection.IndexOf visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="5e0ea-149"><see cref="T:System.Windows.Media.Visual" /> à rechercher dans <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-149">The <see cref="T:System.Windows.Media.Visual" /> to locate in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="5e0ea-150">Retourne l'index de base zéro de <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-150">Returns the zero-based index of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="5e0ea-151">Index de <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-151">The index of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-152">Si le <xref:System.Windows.Media.Visual> n’est pas dans le <xref:System.Windows.Media.VisualCollection>, -1 est retourné.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-152">If the <xref:System.Windows.Media.Visual> is not in the <xref:System.Windows.Media.VisualCollection>, -1 is returned.</span></span> <span data-ttu-id="5e0ea-153">Si `null` est passé à la méthode, l’index de la première entrée qui a `null` est retourné.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-153">If `null` is passed to the method, the index of the first entry that has `null` is returned.</span></span> <span data-ttu-id="5e0ea-154">S’il n’y a aucune entrée null, -1 est retourné.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-154">If there is no null entry, -1 is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Media.Visual -&gt; unit" Usage="visualCollection.Insert (index, visual)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5e0ea-155">Index de base zéro auquel la valeur doit être insérée.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-155">The zero-based index at which the value should be inserted.</span></span></param>
        <param name="visual"><span data-ttu-id="5e0ea-156"><see cref="T:System.Windows.Media.Visual" /> à insérer dans le <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-156">The <see cref="T:System.Windows.Media.Visual" /> to insert into the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="5e0ea-157">Insère un élément dans la classe <see cref="T:System.Windows.Media.VisualCollection" /> au niveau de l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-157">Inserts an element into the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-158">Si <xref:System.Windows.Media.VisualCollection.Count%2A> est déjà égale à <xref:System.Windows.Media.VisualCollection.Capacity%2A>, la capacité de la <xref:System.Windows.Media.VisualCollection> est augmentée avant que le nouveau <xref:System.Windows.Media.Visual> est inséré.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-158">If <xref:System.Windows.Media.VisualCollection.Count%2A> already equals <xref:System.Windows.Media.VisualCollection.Capacity%2A>, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased before the new <xref:System.Windows.Media.Visual> is inserted.</span></span> <span data-ttu-id="5e0ea-159">Si `index` est égal à <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` est ajouté à la fin de <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-159">If `index` is equal to <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` is added to the end of <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="5e0ea-160">Tous objets visuels existants qui sont supérieure ou égale à `index` sont déplacés pour s’adapter au nouveau <xref:System.Windows.Media.Visual>, et leurs valeurs d’index sont mises à jour.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-160">Any existing visual objects that are equal to or greater than `index` are shifted to accommodate the new <xref:System.Windows.Media.Visual>, and their index values are updated.</span></span>  
  
 <span data-ttu-id="5e0ea-161">Le <xref:System.Windows.Media.VisualCollection.Insert%2A> méthode définit également la relation parent-enfant entre le parent visuel, qui est le propriétaire de la <xref:System.Windows.Media.VisualCollection>et l’enfant `visual`.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-161">The <xref:System.Windows.Media.VisualCollection.Insert%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="5e0ea-162">Si vous avez besoin d’un contrôle de bas niveau supérieur sur l’implémentation sous-jacente de stockage d’objets enfants visuels, envisagez d’utiliser le <xref:System.Windows.Media.Visual.AddVisualChild%2A> et <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-162">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="5e0ea-163">Lorsque vous utilisez ces méthodes, vous définissez votre propre implémentation de stockage et que vous n’utilisez pas <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-163">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e0ea-164"><paramref name="index" /> est inférieur à 0 ou supérieur à <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-164"><paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e0ea-165">Obtient une valeur qui indique si l'objet <see cref="T:System.Windows.Media.VisualCollection" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-165">Gets a value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="5e0ea-166">Valeur qui indique si <see cref="T:System.Windows.Media.VisualCollection" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-166">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-167">Cette propriété est toujours `false` pour tous les <xref:System.Windows.Media.VisualCollection> objets.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-167">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e0ea-168">Obtient une valeur qui indique si l’accès à <see cref="T:System.Windows.Media.VisualCollection" /> est synchronisé (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="5e0ea-168">Gets a value that indicates whether access to the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="5e0ea-169">Valeur qui indique si la <see cref="T:System.Windows.Media.VisualCollection" /> est synchronisée (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="5e0ea-169">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-170">Cette propriété est toujours `false` pour tous les <xref:System.Windows.Media.VisualCollection> objets.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-170">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ default[int] { System::Windows::Media::Visual ^ get(int index); void set(int index, System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Media.Visual with get, set" Usage="System.Windows.Media.VisualCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5e0ea-171">Index de base zéro de <see cref="T:System.Windows.Media.VisualCollection" /> à partir duquel obtenir ou définir <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-171">The zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" /> from which to get or set the <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <summary><span data-ttu-id="5e0ea-172">Obtient ou définit le <see cref="T:System.Windows.Media.Visual" /> stocké à l'index de base zéro de <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-172">Gets or sets the <see cref="T:System.Windows.Media.Visual" /> that is stored at the zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <value><span data-ttu-id="5e0ea-173"><see cref="T:System.Windows.Media.Visual" /> stocké à <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-173">The <see cref="T:System.Windows.Media.Visual" /> that is stored at <paramref name="index" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-174">Cette propriété fournit la possibilité d’accéder à un spécifique <xref:System.Windows.Media.Visual> dans le <xref:System.Windows.Media.VisualCollection> à l’aide d’un index.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-174">This property provides the ability to access a specific <xref:System.Windows.Media.Visual> in the <xref:System.Windows.Media.VisualCollection> by using an index.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e0ea-175"><paramref name="index" /> est inférieur à zéro, ou <paramref name="index" /> est égal ou supérieur à <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-175"><paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e0ea-176">Le nouvel élément enfant a déjà un parent, ou la valeur à l'index spécifié n'est pas <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-176">The new child element already has a parent, or the value at the specified index is not <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Media.Visual -&gt; unit" Usage="visualCollection.Remove visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="5e0ea-177"><see cref="T:System.Windows.Media.Visual" /> à supprimer de <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-177">The <see cref="T:System.Windows.Media.Visual" /> to remove from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="5e0ea-178">Supprime l'objet <see cref="T:System.Windows.Media.Visual" /> spécifié de la <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-178">Removes the specified <see cref="T:System.Windows.Media.Visual" /> object from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-179">Les objets visuels qui suivent l’objet supprimé sont déplacés pour occuper la position libérée, et leurs valeurs d’index sont mises à jour.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-179">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span> <span data-ttu-id="5e0ea-180">Si `visual` est `null`, le premier `null` entrée est supprimée.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-180">If `visual` is `null`, the first `null` entry is removed.</span></span> <span data-ttu-id="5e0ea-181">Notez que la suppression un `null` entrée est linéaire dans la taille de la collection.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-181">Note that removing a `null` entry is linear in the size of the collection.</span></span>  
  
 <span data-ttu-id="5e0ea-182">Le <xref:System.Windows.Media.VisualCollection.Remove%2A> méthode supprime également la relation parent-enfant entre le parent visuel, qui est le propriétaire de la <xref:System.Windows.Media.VisualCollection>et l’enfant `visual`.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-182">The <xref:System.Windows.Media.VisualCollection.Remove%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="5e0ea-183">Si vous avez besoin d’un contrôle de bas niveau supérieur sur l’implémentation sous-jacente de stockage d’objets enfants visuels, envisagez d’utiliser le <xref:System.Windows.Media.Visual.AddVisualChild%2A> et <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-183">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="5e0ea-184">Lorsque vous utilisez ces méthodes, vous définissez votre propre implémentation de stockage et que vous n’utilisez pas <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-184">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="visualCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5e0ea-185">Index de base zéro de l'objet visuel à supprimer.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-185">The zero-based index of the visual to remove.</span></span></param>
        <summary><span data-ttu-id="5e0ea-186">Supprime l'objet visuel à l'index spécifié dans la <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-186">Removes the visual object at the specified index in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-187">Les objets visuels qui suivent l’objet supprimé sont déplacés pour occuper la position libérée, et leurs valeurs d’index sont mises à jour.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-187">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span>  
  
 <span data-ttu-id="5e0ea-188">Le <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> méthode supprime également la relation parent-enfant entre le parent visuel, qui est le propriétaire de la <xref:System.Windows.Media.VisualCollection>et l’enfant `visual`.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-188">The <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="5e0ea-189">Si vous avez besoin d’un contrôle de bas niveau supérieur sur l’implémentation sous-jacente de stockage d’objets enfants visuels, envisagez d’utiliser le <xref:System.Windows.Media.Visual.AddVisualChild%2A> et <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-189">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="5e0ea-190">Lorsque vous utilisez ces méthodes, vous définissez votre propre implémentation de stockage et que vous n’utilisez pas <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-190">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e0ea-191"><paramref name="index" /> est inférieur à zéro, ou <paramref name="index" /> est égal ou supérieur à <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-191"><paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : int * int -&gt; unit" Usage="visualCollection.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5e0ea-192">Index de base zéro de la plage d'éléments à supprimer.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-192">The zero-based index of the range of elements to remove.</span></span></param>
        <param name="count"><span data-ttu-id="5e0ea-193">Nombre d'éléments à supprimer.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-193">The number of elements to remove.</span></span></param>
        <summary><span data-ttu-id="5e0ea-194">Supprime une plage d'objets visuels de la <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-194">Removes a range of visual objects from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e0ea-195">Les objets visuels qui suivent les objets supprimés sont déplacés pour occuper les positions libérées, et leurs valeurs d’index sont mises à jour.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-195">The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.</span></span>  
  
 <span data-ttu-id="5e0ea-196">Le <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> méthode supprime également les relations parent-enfant entre le parent visuel, qui est le propriétaire de la <xref:System.Windows.Media.VisualCollection>et la plage de visuels enfants.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-196">The <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> method also removes the parent-child relationships between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the range of child visuals.</span></span>  
  
 <span data-ttu-id="5e0ea-197">Si vous avez besoin d’un contrôle de bas niveau supérieur sur l’implémentation sous-jacente de stockage d’objets enfants visuels, envisagez d’utiliser le <xref:System.Windows.Media.Visual.AddVisualChild%2A> et <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-197">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="5e0ea-198">Lorsque vous utilisez ces méthodes, vous définissez votre propre implémentation de stockage et que vous n’utilisez pas <xref:System.Windows.Media.VisualCollection>.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-198">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e0ea-199"><paramref name="index" /> est inférieur à zéro ou <paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-199"><paramref name="index" /> is less than zero or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e0ea-200"><paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide d'éléments dans <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-200"><paramref name="index" /> and <paramref name="count" /> do not refer to a valid range of elements in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e0ea-201">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Windows.Media.VisualCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-201">Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <value><span data-ttu-id="5e0ea-202">Valeur de type <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-202">A value of type <see cref="T:System.Object" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e0ea-203">Ce membre prend en charge l’infrastructure [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] et n’est pas destiné à être directement utilisé à partir de votre code.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-203">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span> <span data-ttu-id="5e0ea-204">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-204">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="5e0ea-205">Objet pouvant être utilisé pour itérer au sein de la collection.</span><span class="sxs-lookup"><span data-stu-id="5e0ea-205">An object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>