<Type Name="FormattedText" FullName="System.Windows.Media.FormattedText">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b893a34823f131d7a5e8f16694ab42f4ed8c687b" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48672650" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormattedText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormattedText extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FormattedText" />
  <TypeSignature Language="VB.NET" Value="Public Class FormattedText" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormattedText" />
  <TypeSignature Language="F#" Value="type FormattedText = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit un contrôle de bas niveau pour dessiner du texte dans les applications WPF (Windows Presentation Foundation).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Media.FormattedText> objet permet de dessiner du texte multiligne, dans lequel chaque caractère du texte peut être mis en forme individuellement. L’exemple suivant montre un texte auquel plusieurs formats sont appliqués.  
  
 ![Texte affiché avec l’objet FormattedText](~/add/media/formattedtext01.jpg "texte affiché avec l’objet FormattedText")  
Exemple de chaîne de texte mis en forme  
  
 En termes de fonctionnalités de texte dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], <xref:System.Windows.Media.FormattedText> est considéré comme « de bas niveau » parce qu’il traite le texte comme éléments graphiques. Autres aspects du texte dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] gère le texte dans le contexte des contrôles qui sont dédiés au texte (<xref:System.Windows.Controls.TextBlock>, <xref:System.Windows.Controls.TextBox>), implémenter le modèle de document dynamique (consultez [vue d’ensemble du Document de flux](~/docs/framework/wpf/advanced/flow-document-overview.md)), ou prend en charge la [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] modèle de document (voir [Documents dans WPF](~/docs/framework/wpf/advanced/documents-in-wpf.md)).  
  
 Un grand nombre des méthodes setter dans <xref:System.Windows.Media.FormattedText> ont des similitudes avec les propriétés jointes qui sont pris en charge par <xref:System.Windows.Documents.TextElement>, mais la <xref:System.Windows.Documents.TextElement> propriétés jointes appliquent au texte de niveau supérieur prennent en charge pour le flux ou [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)].  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Media.FormattedText> de l’objet et applique ensuite plusieurs styles de mise en forme au texte.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.GlyphRun" />
    <altmember cref="T:System.Windows.Media.DrawingContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Texte à afficher.</param>
        <param name="culture">Culture propre au texte.</param>
        <param name="flowDirection">Sens de lecture du texte.</param>
        <param name="typeface">Famille de polices, poids, style et étirement avec lesquels le texte doit être mis en forme.</param>
        <param name="emSize">Taille de police avec laquelle le texte doit être mis en forme.</param>
        <param name="foreground">Pinceau utilisé pour peindre chaque glyphe.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.FormattedText" /> avec le texte, la culture, le sens de déroulement, le type de caractères, la taille de police et le pinceau spécifiés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * double -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, pixelsPerDip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Texte à afficher.</param>
        <param name="culture">Culture propre au texte.</param>
        <param name="flowDirection">Sens de lecture du texte.</param>
        <param name="typeface">Famille de polices, poids, style et étirement avec lesquels le texte doit être mis en forme.</param>
        <param name="emSize">La taille de police de la mesure em du texte, spécifiée en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">Pinceau utilisé pour peindre chaque glyphe.</param>
        <param name="pixelsPerDip">La valeur Pixels par pixel indépendant de densité, qui est l’équivalent du facteur d’échelle. Par exemple, si les ppp d’un écran s’élèvent à 120 (ou 1,25 car 120/96 = 1.25), 1,25 pixel par pixel indépendant de densité est dessiné. ppp est l’unité de mesure utilisée par WPF pour être indépendant de la résolution et des ppp de l’appareil .</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.FormattedText" /> avec le texte, la culture, le sens du flux, la police, la taille de police, le pinceau de premier plan et la valeur pixelsPerDip spécifiés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Texte à afficher.</param>
        <param name="culture">Culture propre au texte.</param>
        <param name="flowDirection">Sens de lecture du texte.</param>
        <param name="typeface">Famille de polices, poids, style et étirement avec lesquels le texte doit être mis en forme.</param>
        <param name="emSize">La taille de police de la mesure em du texte, spécifiée en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">Pinceau utilisé pour peindre chaque glyphe.</param>
        <param name="numberSubstitution">Le comportement de la substitution des nombres à appliquer au texte.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.FormattedText" />, avec le texte, la culture, le sens de déroulement, le type de caractères, la taille de police, le pinceau et le comportement de substitution des nombres spécifiés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution * double -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution, pixelsPerDip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Texte à afficher.</param>
        <param name="culture">Culture propre au texte.</param>
        <param name="flowDirection">Sens de lecture du texte.</param>
        <param name="typeface">Famille de polices, poids, style et étirement avec lesquels le texte doit être mis en forme.</param>
        <param name="emSize">La taille de police de la mesure em du texte, spécifiée en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">Pinceau utilisé pour peindre chaque glyphe.</param>
        <param name="numberSubstitution">Spécifie comment les nombres d’un texte sont affichés, en fonction de <see cref="T:System.Windows.Media.NumberSubstitution" />. Cette valeur peut être <see langword="null" />.</param>
        <param name="pixelsPerDip">La valeur Pixels par pixel indépendant de densité, qui est l’équivalent du facteur d’échelle. Par exemple, si les ppp d’un écran s’élèvent à 120 (ou 1,25 car 120/96 = 1.25), 1,25 pixel par pixel indépendant de densité est dessiné. ppp est l’unité de mesure utilisée par WPF pour être indépendant de la résolution et des ppp de l’appareil .</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.FormattedText" /> avec le texte, la culture, le sens du flux, la police, la taille de police, le pinceau de premier plan, le comportement de substitution de nombres et la valeur pixelsPerDip spécifiés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, System.Windows.Media.TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, valuetype System.Windows.Media.TextFormattingMode textFormattingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Windows.Media.TextFormattingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, System::Windows::Media::TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution * System.Windows.Media.TextFormattingMode -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution, textFormattingMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Texte à afficher.</param>
        <param name="culture">Culture propre au texte.</param>
        <param name="flowDirection">Sens de lecture du texte.</param>
        <param name="typeface">Famille de polices, poids, style et étirement avec lesquels le texte doit être mis en forme.</param>
        <param name="emSize">La taille de police de la mesure em du texte, spécifiée en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">Pinceau utilisé pour peindre chaque glyphe.</param>
        <param name="numberSubstitution">Le comportement de la substitution des nombres à appliquer au texte.</param>
        <param name="textFormattingMode">
          <see cref="T:System.Windows.Media.TextFormattingMode" /> à appliquer au texte.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.FormattedText" />, avec le texte, la culture, le sens de déroulement, le type de caractères, la taille de police, le pinceau, le comportement de substitution des nombres et le mode de mise en forme du texte spécifiés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, System.Windows.Media.TextFormattingMode textFormattingMode, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, valuetype System.Windows.Media.TextFormattingMode textFormattingMode, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Windows.Media.TextFormattingMode,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, System::Windows::Media::TextFormattingMode textFormattingMode, double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution * System.Windows.Media.TextFormattingMode * double -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution, textFormattingMode, pixelsPerDip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">Texte à afficher.</param>
        <param name="culture">Culture propre au texte.</param>
        <param name="flowDirection">Sens de lecture du texte.</param>
        <param name="typeface">Famille de polices, poids, style et étirement avec lesquels le texte doit être mis en forme.</param>
        <param name="emSize">La taille de police de la mesure em du texte, spécifiée en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">Pinceau utilisé pour peindre chaque glyphe.</param>
        <param name="numberSubstitution">Spécifie comment les nombres d’un texte sont affichés, en fonction de <see cref="T:System.Windows.Media.NumberSubstitution" />. Cette valeur peut être <see langword="null" />.</param>
        <param name="textFormattingMode">Le mode de mise en forme qui affecte la façon dont WPF affiche le texte.</param>
        <param name="pixelsPerDip">La valeur Pixels par pixel indépendant de densité, qui est l’équivalent du facteur d’échelle. Par exemple, si les ppp d’un écran s’élèvent à 120 (ou 1,25 car 120/96 = 1.25), 1,25 pixel par pixel indépendant de densité est dessiné. ppp est l’unité de mesure utilisée par WPF pour être indépendant de la résolution et des ppp de l’appareil .</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.FormattedText" /> avec le texte, la culture, le sens du flux, la police, la taille de police, le pinceau de premier plan, le comportement de substitution de nombres et la valeur pixelsPerDip spécifiés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Baseline { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Baseline : double" Usage="System.Windows.Media.FormattedText.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la distance du haut de la première ligne à la ligne de base de la première ligne d'un objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <value>La distance du haut de la première ligne à la ligne de base de la première ligne, fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildGeometry (System.Windows.Point origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildGeometry(valuetype System.Windows.Point origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildGeometry(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildGeometry (origin As Point) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildGeometry(System::Windows::Point origin);" />
      <MemberSignature Language="F#" Value="member this.BuildGeometry : System.Windows.Point -&gt; System.Windows.Media.Geometry" Usage="formattedText.BuildGeometry origin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="origin">L'origine supérieure gauche de la géométrie résultante.</param>
        <summary>Renvoie un objet <see cref="T:System.Windows.Media.Geometry" /> qui représente le texte mis en forme, dont tous les glyphes et décorations de texte.</summary>
        <returns>La représentation d'objet <see cref="T:System.Windows.Media.Geometry" /> du texte mis en forme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le texte est converti en un <xref:System.Windows.Media.Geometry> de l’objet, il n’est plus une collection de caractères, vous ne pouvez pas modifier les caractères dans la chaîne de texte. Vous pouvez néanmoins modifier l’apparence du texte converti en changeant ses propriétés de trait et de remplissage.  
  
 Les exemples suivants illustrent plusieurs façons de créer des effets visuels en modifiant le trait et le remplissage de texte converti.  
  
 ![Texte avec différentes couleurs de trait et de remplissage](~/add/media/outlinedtext03.jpg "texte avec différentes couleurs de trait et de remplissage")  
Exemple de définition du trait et du remplissage de différentes couleurs  
  
 ![Texte avec pinceau image appliqué au trait](~/add/media/outlinedtext04.jpg "texte avec pinceau image appliqué au trait")  
Exemple de pinceau image appliqué au trait  
  
 Texte qui est converti et restitué en tant qu’un <xref:System.Windows.Media.Geometry> objet ne peut-être pas la même apparence que du texte restitué directement :  
  
-   Le texte converti en un <xref:System.Windows.Media.Geometry> objet n’est pas restitué avec ClearType. En outre, la ligne de base converti n’est pas aligné sur un pixel d’affichage complet.  
  
-   Petites polices, tels que ceux couramment utilisés dans le corps de texte, peuvent perdre de leur lisibilité flou et varient en apparence.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Windows.Media.FormattedText> objet et récupérer les géométries du texte mis en forme et son cadre englobant.  
  
 [!code-csharp[OutlineTextControlViewer#CreateText](~/samples/snippets/csharp/VS_Snippets_Wpf/OutlineTextControlViewer/CSharp/OutlineTextControl.cs#createtext)]
 [!code-vb[OutlineTextControlViewer#CreateText](~/samples/snippets/visualbasic/VS_Snippets_Wpf/OutlineTextControlViewer/visualbasic/outlinetextcontrol.vb#createtext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BuildHighlightGeometry">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Renvoie un objet <see cref="T:System.Windows.Media.Geometry" /> qui représente le cadre englobant de surbrillance du texte mis en forme.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BuildHighlightGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildHighlightGeometry (System.Windows.Point origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildHighlightGeometry(valuetype System.Windows.Point origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildHighlightGeometry (origin As Point) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildHighlightGeometry(System::Windows::Point origin);" />
      <MemberSignature Language="F#" Value="member this.BuildHighlightGeometry : System.Windows.Point -&gt; System.Windows.Media.Geometry" Usage="formattedText.BuildHighlightGeometry origin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="origin">L'origine de la région de surbrillance.</param>
        <summary>Renvoie un objet <see cref="T:System.Windows.Media.Geometry" /> qui représente le cadre englobant de surbrillance du texte mis en forme.</summary>
        <returns>L'objet <see cref="T:System.Windows.Media.Geometry" /> qui représente le cadre englobant de surbrillance du texte mis en forme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La région de cadre englobant contient la zone de texte mis en forme entière en commençant par le point spécifié par `origin`. Retourné <xref:System.Windows.Media.Geometry> objet contient uniquement le cadre englobant du texte en surbrillance et ne contient pas de texte restitué.  
  
 L’exemple suivant illustre un moyen de créer des effets visuels en modifiant le trait et surbrillance du texte converti.  
  
 ![Texte avec pinceau image appliqué au trait](~/add/media/outlinedtext05.jpg "texte avec pinceau image appliqué au trait")  
Exemple de pinceau image appliqué au trait et surbrillance  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Windows.Media.FormattedText> objet et récupérer les géométries du texte mis en forme et son cadre englobant.  
  
 [!code-csharp[OutlineTextControlViewer#CreateText](~/samples/snippets/csharp/VS_Snippets_Wpf/OutlineTextControlViewer/CSharp/OutlineTextControl.cs#createtext)]
 [!code-vb[OutlineTextControlViewer#CreateText](~/samples/snippets/visualbasic/VS_Snippets_Wpf/OutlineTextControlViewer/visualbasic/outlinetextcontrol.vb#createtext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildHighlightGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildHighlightGeometry (System.Windows.Point origin, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildHighlightGeometry(valuetype System.Windows.Point origin, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(System.Windows.Point,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildHighlightGeometry (origin As Point, startIndex As Integer, count As Integer) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildHighlightGeometry(System::Windows::Point origin, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.BuildHighlightGeometry : System.Windows.Point * int * int -&gt; System.Windows.Media.Geometry" Usage="formattedText.BuildHighlightGeometry (origin, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="origin">L'origine de la région de surbrillance.</param>
        <param name="startIndex">L'index du caractère initial pour lequel les limites de surbrillance devraient être obtenues.</param>
        <param name="count">Le nombre de caractères que les limites de surbrillance devraient contenir.</param>
        <summary>Renvoie un objet <see cref="T:System.Windows.Media.Geometry" /> qui représente le cadre englobant de surbrillance pour une sous-chaîne spécifiée du texte mis en forme.</summary>
        <returns>L'objet <see cref="T:System.Windows.Media.Geometry" /> qui représente le cadre englobant de surbrillance de la sous-chaîne du texte mis en forme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Retourné <xref:System.Windows.Media.Geometry> objet contient uniquement le cadre englobant du texte en surbrillance et ne contient pas de texte restitué.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extent">
      <MemberSignature Language="C#" Value="public double Extent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Extent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Extent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extent As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Extent { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Extent : double" Usage="System.Windows.Media.FormattedText.Extent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la distance du pixel le plus élevé de la première ligne au pixel le plus bas de la dernière ligne.</summary>
        <value>La distance du pixel le plus haut de la première ligne au pixel le plus bas de la dernière ligne, fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’étendue incorpore tous les éléments graphiques qui peuvent être présents dans un glyphe, y compris les éléments décoratifs qui peuvent sortir de la hauteur de ligne, ligne de base ou déborder. Cette valeur dépend de caractères s’affichant sur la ligne et n’est donc pas utilisée (et ne doit pas être utilisée) pour dériver l’interligne. Il peut toutefois être utilisé pour aligner le haut ou le bas des paragraphes avec des éléments graphiques, ou pour le test de positionnement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : System.Windows.FlowDirection with get, set" Usage="System.Windows.Media.FormattedText.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Windows.FlowDirection" /> d'un objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <value>Le <see cref="T:System.Windows.FlowDirection" /> du texte mis en forme.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxTextWidths">
      <MemberSignature Language="C#" Value="public double[] GetMaxTextWidths ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] GetMaxTextWidths() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.GetMaxTextWidths" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMaxTextWidths () As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ GetMaxTextWidths();" />
      <MemberSignature Language="F#" Value="member this.GetMaxTextWidths : unit -&gt; double[]" Usage="formattedText.GetMaxTextWidths " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère un tableau de largeurs de texte. Chaque élément dans le tableau représente la largeur maximum de texte des lignes séquentielles de texte.</summary>
        <returns>Un tableau des largeurs maximum de texte, chaque largeur fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si les lignes de texte dépassent le nombre d’éléments dans le tableau, la dernière valeur de l’élément est utilisée pour les lignes restantes. Si le tableau des longueurs n’est pas `null`, les valeurs de tableau de <xref:System.Windows.Media.FormattedText.GetMaxTextWidths%2A> sont utilisées au lieu du <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A> valeur de propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="System.Windows.Media.FormattedText.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la distance du haut de la première ligne au bas de la dernière ligne de l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <value>La distance du haut de la première ligne au bas de la dernière ligne, fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineHeight : double with get, set" Usage="System.Windows.Media.FormattedText.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la hauteur de ligne, ou interligne, entre des lignes de texte.</summary>
        <value>L'interligne entre des lignes de texte, fourni dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La hauteur de ligne par défaut est automatiquement calculée et est basée sur la valeur de police qui est passée en tant que paramètre à la <xref:System.Windows.Media.FormattedText.%23ctor%2A> constructeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLineCount">
      <MemberSignature Language="C#" Value="public int MaxLineCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxLineCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLineCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLineCount : int with get, set" Usage="System.Windows.Media.FormattedText.MaxLineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre maximum de lignes à afficher. Le texte qui dépasse le <see cref="P:System.Windows.Media.FormattedText.MaxLineCount" /> ne sera pas affiché.</summary>
        <value>Le nombre maximum de lignes à afficher.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Media.FormattedText.Trimming%2A> propriété pour contrôler comment du texte omis est représentée lorsque le texte dépasse la <xref:System.Windows.Media.FormattedText.MaxLineCount%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTextHeight">
      <MemberSignature Language="C#" Value="public double MaxTextHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxTextHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxTextHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTextHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxTextHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxTextHeight : double with get, set" Usage="System.Windows.Media.FormattedText.MaxTextHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la hauteur maximum d'une colonne de texte.</summary>
        <value>La hauteur maximum d'une colonne de texte, fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La dernière ligne de texte affichée est la dernière ligne entière qu’ils tiennent dans le <xref:System.Windows.Media.FormattedText.MaxTextHeight%2A> limite ou le numéro de ligne qui ne dépasse pas le <xref:System.Windows.Media.FormattedText.MaxLineCount%2A> propriété, selon ce qui se produit en premier.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Media.FormattedText> de l’objet et applique ensuite plusieurs styles de mise en forme au texte, y compris <xref:System.Windows.Media.FormattedText.MaxTextHeight%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTextWidth">
      <MemberSignature Language="C#" Value="public double MaxTextWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxTextWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxTextWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTextWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxTextWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxTextWidth : double with get, set" Usage="System.Windows.Media.FormattedText.MaxTextWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la largeur maximum de texte (longueur) pour une ligne de texte.</summary>
        <value>La largeur maximum de texte pour une ligne de texte, fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le texte s’ajuste pour éviter de dépasser le <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A> limite.  
  
 Bords d’alignement de glyphe doivent être maintenus dans les limites de nombre de ligne. Étant donné que de polices contiennent des glyphes qui dépassent légèrement leurs bords d’alignement, accorder de marge d’em (taille de police) au moins 1/6 dépasse le nombre de lignes demandé, laisser la tels dépassements.  
  
 Une valeur zéro pour le nombre de lignes est traitée comme un nombre infini de ligne.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Media.FormattedText> de l’objet et applique ensuite plusieurs styles de mise en forme au texte, y compris <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public double MinWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MinWidth : double" Usage="System.Windows.Media.FormattedText.MinWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la plus petite largeur de texte possible pouvant pleinement accueillir le contenu de texte spécifié.</summary>
        <value>La largeur minimale de texte du texte source, fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le texte illustré suivant utilise la largeur minimale de texte pour le texte source, qui affiche sous forme de plusieurs lignes. La largeur minimale de texte correspond au mot qui a la plus grande largeur — dans ce cas, le mot « a sauté ». Notez que plusieurs mots peuvent apparaître sur la même ligne, tant que leur largeur totale ne dépasse pas la largeur minimale de texte.  
  
 ![Formateur de texte à l’aide de la largeur de paragraphe minimale](~/add/media/textformatter03.png "formateur de texte à l’aide de la largeur de paragraphe minimale")  
Largeur minimale de texte  
  
 Si la valeur passée à <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A> est supérieure ou égale à la valeur de <xref:System.Windows.Media.FormattedText.MinWidth%2A>, le texte est mis en forme sans points de suspension.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Windows.Media.FormattedText.MinWidth%2A> propriété pour générer la largeur minimale de texte pour les lignes de mise en forme du texte.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets3)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangAfter">
      <MemberSignature Language="C#" Value="public double OverhangAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangAfter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangAfter As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangAfter { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangAfter : double" Usage="System.Windows.Media.FormattedText.OverhangAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la distance du bas de la dernière ligne de texte au pixel le plus bas.</summary>
        <value>La distance du bas de la dernière ligne au pixel ancré le plus bas, fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur est positive si pixel le plus bas est inférieure à la ligne vers le bas et est un nombre négatif si elle se trouve dans (on ou version ultérieure) la ligne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangLeading">
      <MemberSignature Language="C#" Value="public double OverhangLeading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangLeading" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangLeading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangLeading As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangLeading { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangLeading : double" Usage="System.Windows.Media.FormattedText.OverhangLeading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la distance maximale du point d'alignement principal au pixel principal d'une ligne.</summary>
        <value>La distance maximale du point d'alignement principal au pixel principal d'une ligne, fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le point d’alignement principal précède le pixel principal, la valeur est négative.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangTrailing">
      <MemberSignature Language="C#" Value="public double OverhangTrailing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangTrailing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangTrailing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangTrailing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangTrailing { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangTrailing : double" Usage="System.Windows.Media.FormattedText.OverhangTrailing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la distance maximale du pixel de fin au point d'alignement de fin d'une ligne.</summary>
        <value>La distance maximale du pixel de fin au point d'alignement de fin d'une ligne, fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Media.FormattedText.OverhangTrailing%2A> valeur sera positive lorsque le pixel de fin précède le point d’alignement à droite.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.FormattedText.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur PixelsPerDip à laquelle le texte doit être affiché.</summary>
        <value>Valeur <see cref="P:System.Windows.Media.FormattedText.PixelsPerDip" /> en cours.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCulture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit les <see cref="T:System.Globalization.CultureInfo" /> pour le texte mis en forme.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCulture">
      <MemberSignature Language="C#" Value="public void SetCulture (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCulture(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCulture (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCulture(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.SetCulture : System.Globalization.CultureInfo -&gt; unit" Usage="formattedText.SetCulture culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> à utiliser pour la mise en forme du texte.</param>
        <summary>Définit <see cref="T:System.Globalization.CultureInfo" /> pour le jeu entier de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureInfo> classe contient des informations spécifiques à la culture, telles que la langue associée sous-langue, pays/région, calendrier et conventions culturelles. Cette classe fournit également l’accès aux instances spécifiques à la culture du <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, et <xref:System.Globalization.TextInfo>. Ces objets contiennent les informations requises pour les opérations spécifiques à la culture, telles que la mise en majuscules, de mise en forme des dates et des nombres et de comparaison des chaînes.  
  
 Cette méthode définit la valeur d’informations de culture pour la chaîne de caractères. Pour définir la valeur d’informations de culture pour un sous-ensemble de la chaîne de texte, utilisez le <xref:System.Windows.Media.FormattedText.SetCulture%28System.Globalization.CultureInfo%2CSystem.Int32%2CSystem.Int32%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCulture">
      <MemberSignature Language="C#" Value="public void SetCulture (System.Globalization.CultureInfo culture, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCulture(class System.Globalization.CultureInfo culture, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCulture (culture As CultureInfo, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCulture(System::Globalization::CultureInfo ^ culture, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetCulture : System.Globalization.CultureInfo * int * int -&gt; unit" Usage="formattedText.SetCulture (culture, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> à utiliser pour la mise en forme du texte.</param>
        <param name="startIndex">L'index de début de caractère initial auquel appliquer la modification.</param>
        <param name="count">Le nombre des caractères auxquels la modification devrait être appliquée.</param>
        <summary>Définit les <see cref="T:System.Globalization.CultureInfo" /> pour un sous-ensemble spécifié de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureInfo> classe contient des informations spécifiques à la culture, telles que la langue associée sous-langue, pays/région, calendrier et conventions culturelles. Cette classe fournit également l’accès aux instances spécifiques à la culture du <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, et <xref:System.Globalization.TextInfo>. Ces objets contiennent les informations requises pour les opérations spécifiques à la culture, telles que la mise en majuscules, de mise en forme des dates et des nombres et de comparaison des chaînes.  
  
 Pour définir la valeur d’informations de culture pour la chaîne de caractères, utilisez le <xref:System.Windows.Media.FormattedText.SetCulture%28System.Globalization.CultureInfo%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontFamily">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit la famille de polices pour l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (string fontFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(string fontFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontFamily (fontFamily As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::String ^ fontFamily);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : string -&gt; unit" Usage="formattedText.SetFontFamily fontFamily" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fontFamily">Une chaîne qui construit le <see cref="T:System.Windows.Media.FontFamily" /> à utiliser pour la mise en forme du texte. Les polices de secours sont autorisées ; pour plus de détails, consultez <see cref="T:System.Windows.Media.FontFamily" />.</param>
        <summary>Définit la famille de polices pour le jeu entier de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode définit la valeur de famille de polices pour la chaîne de caractères. Pour définir la valeur de famille de polices pour un sous-ensemble de la chaîne de texte, utilisez le <xref:System.Windows.Media.FormattedText.SetFontFamily%28System.String%2CSystem.Int32%2CSystem.Int32%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (System.Windows.Media.FontFamily fontFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(class System.Windows.Media.FontFamily fontFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::Windows::Media::FontFamily ^ fontFamily);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : System.Windows.Media.FontFamily -&gt; unit" Usage="formattedText.SetFontFamily fontFamily" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.Windows.Media.FontFamily" />
      </Parameters>
      <Docs>
        <param name="fontFamily">
          <see cref="T:System.Windows.Media.FontFamily" /> à utiliser pour la mise en forme du texte.</param>
        <summary>Définit la famille de polices pour un objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode définit la valeur de famille de polices pour la chaîne de caractères. Pour définir la valeur de famille de polices pour un sous-ensemble de la chaîne de texte, utilisez le <xref:System.Windows.Media.FormattedText.SetFontFamily%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (string fontFamily, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(string fontFamily, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontFamily (fontFamily As String, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::String ^ fontFamily, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : string * int * int -&gt; unit" Usage="formattedText.SetFontFamily (fontFamily, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fontFamily">Une chaîne qui construit le <see cref="T:System.Windows.Media.FontFamily" /> à utiliser pour la mise en forme du texte. Les polices de secours sont autorisées ; pour plus de détails, consultez <see cref="T:System.Windows.Media.FontFamily" />.</param>
        <param name="startIndex">L'index de départ du caractère initial auquel appliquer la modification de famille de polices.</param>
        <param name="count">Le nombre des caractères auxquels la modification devrait s'appliquer.</param>
        <summary>Définit la famille de polices pour un sous-ensemble spécifié de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour définir la valeur de famille de polices pour la chaîne de caractères, utilisez le <xref:System.Windows.Media.FormattedText.SetFontFamily%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (System.Windows.Media.FontFamily fontFamily, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(class System.Windows.Media.FontFamily fontFamily, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::Windows::Media::FontFamily ^ fontFamily, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : System.Windows.Media.FontFamily * int * int -&gt; unit" Usage="formattedText.SetFontFamily (fontFamily, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.Windows.Media.FontFamily" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fontFamily">
          <see cref="T:System.Windows.Media.FontFamily" /> à utiliser pour la mise en forme du texte.</param>
        <param name="startIndex">L'index de départ du caractère initial auquel appliquer la modification de famille de polices.</param>
        <param name="count">Le nombre des caractères auxquels la modification devrait s'appliquer.</param>
        <summary>Définit la famille de polices pour un sous-ensemble spécifié de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour définir la valeur de famille de polices pour la chaîne de caractères, utilisez le <xref:System.Windows.Media.FormattedText.SetFontFamily%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontSize">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit la taille de la police.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontSize">
      <MemberSignature Language="C#" Value="public void SetFontSize (double emSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontSize(float64 emSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontSize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontSize (emSize As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontSize(double emSize);" />
      <MemberSignature Language="F#" Value="member this.SetFontSize : double -&gt; unit" Usage="formattedText.SetFontSize emSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emSize" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="emSize">La mesure em de la taille de la police, fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <summary>Définit la taille de la police pour le jeu entier de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode définit la valeur de taille de police pour la chaîne de caractères. Pour définir la valeur de taille de police pour un sous-ensemble de la chaîne de texte, utilisez le <xref:System.Windows.Media.FormattedText.SetFontSize%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontSize">
      <MemberSignature Language="C#" Value="public void SetFontSize (double emSize, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontSize(float64 emSize, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontSize(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontSize (emSize As Double, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontSize(double emSize, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontSize : double * int * int -&gt; unit" Usage="formattedText.SetFontSize (emSize, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="emSize">La mesure em de la taille de la police, fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="startIndex">L'index de début du caractère initial auquel appliquer la taille de la police.</param>
        <param name="count">Le nombre de caractères auxquels appliquer la taille de la police.</param>
        <summary>Définit la taille de la police pour un sous-ensemble spécifié de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour définir la valeur de taille de police pour la chaîne de caractères, utilisez le <xref:System.Windows.Media.FormattedText.SetFontSize%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Media.FormattedText> de l’objet et applique ensuite plusieurs styles de mise en forme au texte, y compris <xref:System.Windows.Media.FormattedText.SetFontSize%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontStretch">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit la valeur de l'étirement de la police pour l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontStretch">
      <MemberSignature Language="C#" Value="public void SetFontStretch (System.Windows.FontStretch stretch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStretch(valuetype System.Windows.FontStretch stretch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStretch(System.Windows.FontStretch)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStretch (stretch As FontStretch)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStretch(System::Windows::FontStretch stretch);" />
      <MemberSignature Language="F#" Value="member this.SetFontStretch : System.Windows.FontStretch -&gt; unit" Usage="formattedText.SetFontStretch stretch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stretch" Type="System.Windows.FontStretch" />
      </Parameters>
      <Docs>
        <param name="stretch">La valeur <see cref="T:System.Windows.FontStretch" /> désirée à utiliser pour la mise en forme du texte.</param>
        <summary>Définit la valeur de l'étirement de la police pour le jeu entier de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur d’étirement de police fait référence au degré auquel une police est étirée sur l’écran. <xref:System.Windows.FontStretch> prend en charge type tel que le comportement de conversion que les valeurs statiques de la <xref:System.Windows.FontStretches> classe peut être utilisée pour initialiser <xref:System.Windows.FontStretch> et remplir les paramètres qui sont de type <xref:System.Windows.FontStretch>. Vous pouvez également appeler <xref:System.Windows.FontStretch.FromOpenTypeStretch%2A> pour créer correctement initialisée <xref:System.Windows.FontStretch>.  
  
 Cette méthode définit la valeur d’étirement de police pour la chaîne de caractères. Pour définir la valeur d’étirement de police pour un sous-ensemble de la chaîne de texte, utilisez le <xref:System.Windows.Media.FormattedText.SetFontStretch%28System.Windows.FontStretch%2CSystem.Int32%2CSystem.Int32%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontStretch">
      <MemberSignature Language="C#" Value="public void SetFontStretch (System.Windows.FontStretch stretch, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStretch(valuetype System.Windows.FontStretch stretch, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStretch(System.Windows.FontStretch,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStretch (stretch As FontStretch, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStretch(System::Windows::FontStretch stretch, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontStretch : System.Windows.FontStretch * int * int -&gt; unit" Usage="formattedText.SetFontStretch (stretch, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stretch" Type="System.Windows.FontStretch" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stretch">La valeur <see cref="T:System.Windows.FontStretch" /> désirée à utiliser pour la mise en forme du texte.</param>
        <param name="startIndex">L'index de début du caractère initial auquel appliquer l'étirement de la police.</param>
        <param name="count">Le nombre de caractères auxquels appliquer l'étirement de la police.</param>
        <summary>Définit la valeur d'étirement de la police pour un sous-ensemble spécifié de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur d’étirement de police fait référence au degré auquel une police est étirée sur l’écran.  
  
 <xref:System.Windows.FontStretch> prend en charge type tel que le comportement de conversion que les valeurs statiques de la <xref:System.Windows.FontStretches> classe peut être utilisée pour initialiser <xref:System.Windows.FontStretch> et remplir les paramètres qui sont de type <xref:System.Windows.FontStretch>. Vous pouvez également appeler <xref:System.Windows.FontStretch.FromOpenTypeStretch%2A> pour créer correctement initialisée <xref:System.Windows.FontStretch>.  
  
 Pour définir la valeur d’étirement de police pour la chaîne de caractères, utilisez le <xref:System.Windows.Media.FormattedText.SetFontStretch%28System.Windows.FontStretch%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontStyle">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit le style de la police pour l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontStyle">
      <MemberSignature Language="C#" Value="public void SetFontStyle (System.Windows.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStyle(valuetype System.Windows.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStyle(System.Windows.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStyle (style As FontStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStyle(System::Windows::FontStyle style);" />
      <MemberSignature Language="F#" Value="member this.SetFontStyle : System.Windows.FontStyle -&gt; unit" Usage="formattedText.SetFontStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Windows.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">La valeur <see cref="T:System.Windows.FontStyle" /> à utiliser pour la mise en forme du texte.</param>
        <summary>Définit le style de la police pour le jeu entier de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontStyle> prend en charge type tel que le comportement de conversion que les valeurs statiques de la <xref:System.Windows.FontStyles> classe peut être utilisée pour initialiser <xref:System.Windows.FontStyle> et remplir les paramètres qui sont de type <xref:System.Windows.FontStyle>.  
  
 Cette méthode définit le style de police pour la chaîne de caractères. Pour définir le style de police pour un sous-ensemble de la chaîne de texte, utilisez le <xref:System.Windows.Media.FormattedText.SetFontStyle%28System.Windows.FontStyle%2CSystem.Int32%2CSystem.Int32%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontStyle">
      <MemberSignature Language="C#" Value="public void SetFontStyle (System.Windows.FontStyle style, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStyle(valuetype System.Windows.FontStyle style, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStyle(System.Windows.FontStyle,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStyle (style As FontStyle, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStyle(System::Windows::FontStyle style, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontStyle : System.Windows.FontStyle * int * int -&gt; unit" Usage="formattedText.SetFontStyle (style, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Windows.FontStyle" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="style">La valeur <see cref="T:System.Windows.FontStyle" /> à utiliser pour la mise en forme du texte.</param>
        <param name="startIndex">L'index de début du caractère initial auquel appliquer le style de la police.</param>
        <param name="count">Le nombre de caractères auxquels appliquer le style de la police.</param>
        <summary>Définit le style de la police pour un sous-ensemble spécifié de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontStyle> prend en charge type tel que le comportement de conversion que les valeurs statiques de la <xref:System.Windows.FontStyles> classe peut être utilisée pour initialiser <xref:System.Windows.FontStyle> et remplir les paramètres qui sont de type <xref:System.Windows.FontStyle>.  
  
 Pour définir le style de police pour la chaîne de caractères, utilisez le <xref:System.Windows.Media.FormattedText.SetFontStyle%28System.Windows.FontStyle%29> (méthode).  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Media.FormattedText> de l’objet et applique ensuite plusieurs styles de mise en forme au texte, y compris <xref:System.Windows.Media.FormattedText.SetFontStyle%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontTypeface">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit le type de caractères de la police pour l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontTypeface">
      <MemberSignature Language="C#" Value="public void SetFontTypeface (System.Windows.Media.Typeface typeface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontTypeface(class System.Windows.Media.Typeface typeface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontTypeface(System.Windows.Media.Typeface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontTypeface(System::Windows::Media::Typeface ^ typeface);" />
      <MemberSignature Language="F#" Value="member this.SetFontTypeface : System.Windows.Media.Typeface -&gt; unit" Usage="formattedText.SetFontTypeface typeface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
      </Parameters>
      <Docs>
        <param name="typeface">
          <see cref="T:System.Windows.Media.Typeface" /> à utiliser pour la mise en forme du texte.</param>
        <summary>Définit le type de caractères de la police pour le jeu entier de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Typeface> représente une combinaison de <xref:System.Windows.Media.FontFamily>, <xref:System.Windows.FontWeight>, <xref:System.Windows.FontStyle>, et <xref:System.Windows.FontStretch>. <xref:System.Windows.Media.Typeface> prend en charge des constructeurs multiples, les constructions selon un type de caractères les valeurs de nom, un autre qui accepte discrète pour <xref:System.Windows.Media.FontFamily>, <xref:System.Windows.FontWeight>, <xref:System.Windows.FontStyle>, et <xref:System.Windows.FontStretch>.  
  
 Cette méthode définit la police de caractère pour la chaîne de caractères. Pour définir la police de caractère pour un sous-ensemble de la chaîne de texte, utilisez le <xref:System.Windows.Media.FormattedText.SetFontTypeface%28System.Windows.Media.Typeface%2CSystem.Int32%2CSystem.Int32%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontTypeface">
      <MemberSignature Language="C#" Value="public void SetFontTypeface (System.Windows.Media.Typeface typeface, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontTypeface(class System.Windows.Media.Typeface typeface, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontTypeface(System.Windows.Media.Typeface,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontTypeface(System::Windows::Media::Typeface ^ typeface, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontTypeface : System.Windows.Media.Typeface * int * int -&gt; unit" Usage="formattedText.SetFontTypeface (typeface, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="typeface">
          <see cref="T:System.Windows.Media.Typeface" /> à utiliser pour la mise en forme du texte.</param>
        <param name="startIndex">L'index de début du caractère initial auquel appliquer le type de caractères de la police.</param>
        <param name="count">Le nombre de caractères auxquels appliquer le type de caractères de la police.</param>
        <summary>Définit le type de caractères de la police pour un sous-ensemble spécifié de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Typeface> représente une combinaison de <xref:System.Windows.Media.FontFamily>, <xref:System.Windows.FontWeight>, <xref:System.Windows.FontStyle>, et <xref:System.Windows.FontStretch>. <xref:System.Windows.Media.Typeface> prend en charge des constructeurs multiples, les constructions selon un type de caractères les valeurs de nom, un autre qui accepte discrète pour <xref:System.Windows.Media.FontFamily>, <xref:System.Windows.FontWeight>, <xref:System.Windows.FontStyle>, et <xref:System.Windows.FontStretch>.  
  
 Pour définir la police de caractère pour la chaîne de caractères, utilisez le <xref:System.Windows.Media.FormattedText.SetFontTypeface%28System.Windows.Media.Typeface%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontWeight">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit l'épaisseur de police pour l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontWeight">
      <MemberSignature Language="C#" Value="public void SetFontWeight (System.Windows.FontWeight weight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontWeight(valuetype System.Windows.FontWeight weight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontWeight(System.Windows.FontWeight)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontWeight (weight As FontWeight)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontWeight(System::Windows::FontWeight weight);" />
      <MemberSignature Language="F#" Value="member this.SetFontWeight : System.Windows.FontWeight -&gt; unit" Usage="formattedText.SetFontWeight weight" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weight" Type="System.Windows.FontWeight" />
      </Parameters>
      <Docs>
        <param name="weight">
          <see cref="T:System.Windows.FontWeight" /> à utiliser pour la mise en forme du texte.</param>
        <summary>Définit l'épaisseur de la police pour le jeu entier de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontWeight> prend en charge type tel que le comportement de conversion que les valeurs statiques de la <xref:System.Windows.FontWeights> classe peut être utilisée pour initialiser <xref:System.Windows.FontWeight> et remplir les paramètres qui sont de type <xref:System.Windows.FontWeight>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontWeight">
      <MemberSignature Language="C#" Value="public void SetFontWeight (System.Windows.FontWeight weight, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontWeight(valuetype System.Windows.FontWeight weight, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontWeight(System.Windows.FontWeight,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontWeight (weight As FontWeight, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontWeight(System::Windows::FontWeight weight, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontWeight : System.Windows.FontWeight * int * int -&gt; unit" Usage="formattedText.SetFontWeight (weight, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weight" Type="System.Windows.FontWeight" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="weight">L'épaisseur de la police à utiliser pour la mise en forme du texte.</param>
        <param name="startIndex">L'index de début du caractère initial auquel appliquer l'épaisseur de la police.</param>
        <param name="count">Le nombre de caractères auxquels appliquer l'épaisseur de la police.</param>
        <summary>Modifie le <see cref="T:System.Windows.FontWeight" /> pour du texte spécifié dans un objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontWeight> prend en charge type tel que le comportement de conversion que les valeurs statiques de la <xref:System.Windows.FontWeights> classe peut être utilisée pour initialiser <xref:System.Windows.FontWeight> et remplir les paramètres qui sont de type <xref:System.Windows.FontWeight>.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Media.FormattedText> de l’objet et applique ensuite plusieurs styles de mise en forme au texte, y compris <xref:System.Windows.Media.FormattedText.SetFontWeight%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetForegroundBrush">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Modifie le pinceau de premier plan utilisé pour dessiner du texte.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetForegroundBrush">
      <MemberSignature Language="C#" Value="public void SetForegroundBrush (System.Windows.Media.Brush foregroundBrush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetForegroundBrush(class System.Windows.Media.Brush foregroundBrush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetForegroundBrush(System.Windows.Media.Brush)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetForegroundBrush (foregroundBrush As Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetForegroundBrush(System::Windows::Media::Brush ^ foregroundBrush);" />
      <MemberSignature Language="F#" Value="member this.SetForegroundBrush : System.Windows.Media.Brush -&gt; unit" Usage="formattedText.SetForegroundBrush foregroundBrush" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foregroundBrush" Type="System.Windows.Media.Brush" />
      </Parameters>
      <Docs>
        <param name="foregroundBrush">Le pinceau à utiliser pour le premier plan de texte.</param>
        <summary>Modifie le premier plan <see cref="T:System.Windows.Media.Brush" /> pour un objet <see cref="T:System.Windows.Media.FormattedText" /> entier.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode définit le pinceau de premier plan pour la chaîne de caractères. Pour définir le pinceau de premier plan pour un sous-ensemble de la chaîne de texte, utilisez le <xref:System.Windows.Media.FormattedText.SetForegroundBrush%28System.Windows.Media.Brush%2CSystem.Int32%2CSystem.Int32%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetForegroundBrush">
      <MemberSignature Language="C#" Value="public void SetForegroundBrush (System.Windows.Media.Brush foregroundBrush, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetForegroundBrush(class System.Windows.Media.Brush foregroundBrush, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetForegroundBrush(System.Windows.Media.Brush,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetForegroundBrush (foregroundBrush As Brush, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetForegroundBrush(System::Windows::Media::Brush ^ foregroundBrush, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetForegroundBrush : System.Windows.Media.Brush * int * int -&gt; unit" Usage="formattedText.SetForegroundBrush (foregroundBrush, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foregroundBrush" Type="System.Windows.Media.Brush" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="foregroundBrush">Le pinceau à utiliser pour le premier plan de texte.</param>
        <param name="startIndex">L'index de début du caractère initial auquel appliquer le pinceau de premier plan.</param>
        <param name="count">Le nombre de caractères auxquels appliquer le pinceau de premier plan.</param>
        <summary>Modifie le <see cref="T:System.Windows.Media.Brush" /> de premier plan pour du texte spécifié dans un objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour définir le pinceau de premier plan pour la chaîne de caractères, utilisez le <xref:System.Windows.Media.FormattedText.SetForegroundBrush%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Media.FormattedText> de l’objet et applique ensuite plusieurs styles de mise en forme au texte, y compris <xref:System.Windows.Media.FormattedText.SetForegroundBrush%2A>.  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxTextWidths">
      <MemberSignature Language="C#" Value="public void SetMaxTextWidths (double[] maxTextWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMaxTextWidths(float64[] maxTextWidths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetMaxTextWidths(System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMaxTextWidths (maxTextWidths As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMaxTextWidths(cli::array &lt;double&gt; ^ maxTextWidths);" />
      <MemberSignature Language="F#" Value="member this.SetMaxTextWidths : double[] -&gt; unit" Usage="formattedText.SetMaxTextWidths maxTextWidths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxTextWidths" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="maxTextWidths">Un tableau des largeurs maximum de texte, chaque largeur fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <summary>Définit un tableau de largeurs maximum de texte dans le <see cref="T:System.Windows.Media.FormattedText" />, ligne par ligne. Chaque élément dans le tableau représente la largeur maximum de texte des lignes séquentielles de texte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si les lignes de texte dépassent le nombre d’éléments dans le tableau, la dernière valeur dans le tableau est utilisée pour les lignes restantes. Fournir un tableau valide <xref:System.Windows.Media.FormattedText.SetMaxTextWidths%2A> remplace toute valeur fournie pour le <xref:System.Windows.Media.FormattedText.MaxTextWidth%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNumberSubstitution">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit le comportement de substitution de nombre pour l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNumberSubstitution">
      <MemberSignature Language="C#" Value="public void SetNumberSubstitution (System.Windows.Media.NumberSubstitution numberSubstitution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNumberSubstitution(class System.Windows.Media.NumberSubstitution numberSubstitution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetNumberSubstitution(System.Windows.Media.NumberSubstitution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNumberSubstitution(System::Windows::Media::NumberSubstitution ^ numberSubstitution);" />
      <MemberSignature Language="F#" Value="member this.SetNumberSubstitution : System.Windows.Media.NumberSubstitution -&gt; unit" Usage="formattedText.SetNumberSubstitution numberSubstitution" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
      </Parameters>
      <Docs>
        <param name="numberSubstitution">Le comportement de substitution de nombre à appliquer au texte ; peut être <see langword="null" />, auquel cas la méthode de substitution de nombre par défaut pour la culture de texte est utilisée.</param>
        <summary>Définit le comportement de substitution de nombre pour le jeu entier de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Media.NumberSubstitution> classe spécifie comment les nombres d’un texte doivent être affichées. Cette méthode définit le comportement de substitution de nombre pour la chaîne de caractères. Pour définir le comportement de substitution de nombre pour un sous-ensemble de la chaîne de texte, utilisez le <xref:System.Windows.Media.FormattedText.SetNumberSubstitution%28System.Windows.Media.NumberSubstitution%2CSystem.Int32%2CSystem.Int32%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNumberSubstitution">
      <MemberSignature Language="C#" Value="public void SetNumberSubstitution (System.Windows.Media.NumberSubstitution numberSubstitution, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNumberSubstitution(class System.Windows.Media.NumberSubstitution numberSubstitution, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetNumberSubstitution(System.Windows.Media.NumberSubstitution,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNumberSubstitution(System::Windows::Media::NumberSubstitution ^ numberSubstitution, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetNumberSubstitution : System.Windows.Media.NumberSubstitution * int * int -&gt; unit" Usage="formattedText.SetNumberSubstitution (numberSubstitution, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberSubstitution">Le comportement de substitution de nombre à appliquer au texte ; peut être <see langword="null" />, auquel cas la méthode de substitution de nombre par défaut pour la culture de texte est utilisée.</param>
        <param name="startIndex">L'index de début de caractère initial auquel appliquer la modification.</param>
        <param name="count">Le nombre des caractères auxquels la modification devrait être appliquée.</param>
        <summary>Définit le comportement de substitution de nombre pour du texte spécifié dans un objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Media.NumberSubstitution> classe spécifie comment les nombres d’un texte doivent être affichées. Pour définir le comportement de substitution de nombre pour la chaîne de caractères, utilisez le <xref:System.Windows.Media.FormattedText.SetNumberSubstitution%28System.Windows.Media.NumberSubstitution%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetTextDecorations">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit la <see cref="T:System.Windows.TextDecorationCollection" /> pour l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetTextDecorations">
      <MemberSignature Language="C#" Value="public void SetTextDecorations (System.Windows.TextDecorationCollection textDecorations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextDecorations(class System.Windows.TextDecorationCollection textDecorations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetTextDecorations(System.Windows.TextDecorationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTextDecorations (textDecorations As TextDecorationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTextDecorations(System::Windows::TextDecorationCollection ^ textDecorations);" />
      <MemberSignature Language="F#" Value="member this.SetTextDecorations : System.Windows.TextDecorationCollection -&gt; unit" Usage="formattedText.SetTextDecorations textDecorations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Windows.TextDecorationCollection" />
      </Parameters>
      <Docs>
        <param name="textDecorations">
          <see cref="T:System.Windows.TextDecorationCollection" /> à appliquer au texte.</param>
        <summary>Définit <see cref="T:System.Windows.TextDecorationCollection" /> pour le jeu entier de caractères dans l'objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.TextDecorationCollection> classe spécifie les types de décorations de texte à appliquer au texte. Il existe quatre types de décorations de texte : souligné, ligne de base, barré et surligné. Ceux-ci sont décrits en tant que <xref:System.Windows.TextDecorationLocation> valeurs qui sont définies sur chaque élément dans le <xref:System.Windows.TextDecorationCollection>. Il est courant que les <xref:System.Windows.TextDecorationCollection> collection contient uniquement une décoration, mais la propriété utilise la collection pour fournir à des effets de décoration plus avancés en appliquant des ornements multiples au même texte.  
  
 L’illustration suivante montre les emplacements des ornements de texte par rapport au texte.  
  
 ![Diagramme des emplacements de décoration de texte](~/add/media/textdecoration01.gif "diagramme des emplacements de décoration de texte")  
Exemple de types de décoration de texte  
  
 Cette méthode définit le <xref:System.Windows.TextDecorationCollection> pour la chaîne de caractères. Pour définir le <xref:System.Windows.TextDecorationCollection> pour un sous-ensemble de la chaîne de texte, utilisez le <xref:System.Windows.Media.FormattedText.SetTextDecorations%28System.Windows.TextDecorationCollection%2CSystem.Int32%2CSystem.Int32%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextDecorations">
      <MemberSignature Language="C#" Value="public void SetTextDecorations (System.Windows.TextDecorationCollection textDecorations, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextDecorations(class System.Windows.TextDecorationCollection textDecorations, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetTextDecorations(System.Windows.TextDecorationCollection,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTextDecorations (textDecorations As TextDecorationCollection, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTextDecorations(System::Windows::TextDecorationCollection ^ textDecorations, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetTextDecorations : System.Windows.TextDecorationCollection * int * int -&gt; unit" Usage="formattedText.SetTextDecorations (textDecorations, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Windows.TextDecorationCollection" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textDecorations">
          <see cref="T:System.Windows.TextDecorationCollection" /> à appliquer au texte.</param>
        <param name="startIndex">L'index de début du caractère initial auquel appliquer les ornements de texte</param>
        <param name="count">Le nombre de caractères auxquels appliquer les décorations de texte.</param>
        <summary>Définit la <see cref="T:System.Windows.TextDecorationCollection" /> pour du texte spécifié dans un objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.TextDecorationCollection> classe spécifie les types de décorations de texte à appliquer au texte. Il existe quatre types de décorations de texte : souligné, ligne de base, barré et surligné. Ceux-ci sont décrits en tant que <xref:System.Windows.TextDecorationLocation> valeurs qui sont définies sur chaque élément dans le <xref:System.Windows.TextDecorationCollection>. Il est courant que les <xref:System.Windows.TextDecorationCollection> collection contient uniquement une décoration, mais la propriété utilise la collection pour fournir à des effets de décoration plus avancés en appliquant des ornements multiples au même texte.  
  
 L’illustration suivante montre les emplacements des ornements de texte par rapport au texte.  
  
 ![Diagramme des emplacements de décoration de texte](~/add/media/textdecoration01.gif "diagramme des emplacements de décoration de texte")  
Exemple de types de décoration de texte  
  
 Pour définir le <xref:System.Windows.TextDecorationCollection> pour la chaîne de caractères, utilisez le <xref:System.Windows.Media.FormattedText.SetTextDecorations%28System.Windows.TextDecorationCollection%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Windows.Media.FormattedText.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'affichage de la chaîne de texte.</summary>
        <value>La chaîne de texte à afficher.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété n’est pas définissable sur un construit <xref:System.Windows.Media.FormattedText> objet. Vous devez construire un nouveau <xref:System.Windows.Media.FormattedText> afin de définir un texte différent.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush)" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Media.FormattedText.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'alignement du texte dans un objet <see cref="T:System.Windows.Media.FormattedText" />.</summary>
        <value>L'une des valeurs <see cref="T:System.Windows.TextAlignment" /> qui spécifient l'alignement du texte dans un objet <see cref="T:System.Windows.Media.FormattedText" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trimming">
      <MemberSignature Language="C#" Value="public System.Windows.TextTrimming Trimming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextTrimming Trimming" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Trimming" />
      <MemberSignature Language="VB.NET" Value="Public Property Trimming As TextTrimming" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextTrimming Trimming { System::Windows::TextTrimming get(); void set(System::Windows::TextTrimming value); };" />
      <MemberSignature Language="F#" Value="member this.Trimming : System.Windows.TextTrimming with get, set" Usage="System.Windows.Media.FormattedText.Trimming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TextTrimming</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les moyens d'indiquer l'omission de texte.</summary>
        <value>L'une des valeurs <see cref="T:System.Windows.TextTrimming" /> qui spécifient comment l'omission de texte est indiquée. La valeur par défaut est <see cref="F:System.Windows.TextTrimming.WordEllipsis" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="System.Windows.Media.FormattedText.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la largeur entre le point d'alignement principal et le point de fin d'une ligne, à l'exclusion de tout espace blanc de fin.</summary>
        <value>La largeur entre le point d'alignement principal et le point de fin d'une ligne, à l'exclusion de tout espace blanc de fin. Fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour le texte multiligne, la ligne la plus longue est utilisée pour le <xref:System.Windows.Media.FormattedText.Width%2A> valeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthIncludingTrailingWhitespace">
      <MemberSignature Language="C#" Value="public double WidthIncludingTrailingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WidthIncludingTrailingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WidthIncludingTrailingWhitespace As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double WidthIncludingTrailingWhitespace { double get(); };" />
      <MemberSignature Language="F#" Value="member this.WidthIncludingTrailingWhitespace : double" Usage="System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la largeur entre le point d'alignement principal et le point de fin d'une ligne, y compris tout espace blanc de fin.</summary>
        <value>La largeur entre le point d'alignement principal et le point de fin d'une ligne, y compris tout espace blanc de fin. Fournie dans [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour le texte multiligne, la ligne la plus longue est utilisée pour le <xref:System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace%2A> valeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>