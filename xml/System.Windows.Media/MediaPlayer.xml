<Type Name="MediaPlayer" FullName="System.Windows.Media.MediaPlayer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f2e40b0c1cb0bdd69ad7647882ff48b0b0af25a7" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53503893" /></Metadata><TypeSignature Language="C#" Value="public class MediaPlayer : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaPlayer extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.MediaPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class MediaPlayer&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MediaPlayer : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type MediaPlayer = class&#xA;    inherit Animatable&#xA;    interface DUCE.IResource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit la lecture du média pour les dessins.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bien que vous puissiez déclarer une instance de cette classe dans [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], vous ne pouvez pas charger et lire son média sans utiliser de code. Pour lire des médias dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] uniquement, utilisez un <xref:System.Windows.Controls.MediaElement>. En outre, si vous déclarez une instance dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], la seule utilisation pratique consiste à remplir la syntaxe d’élément de propriété pour le <xref:System.Windows.Media.VideoDrawing.Player%2A> propriété.  
  
 Lorsque vous distribuez un contenu multimédia avec votre application, vous ne pouvez pas utiliser de fichier multimédia comme ressource de projet. Dans votre fichier projet, vous devez plutôt définir le type de média sur `Content` et définir `CopyToOutputDirectory` sur `PreserveNewest` ou `Always`.  
  
 <xref:System.Windows.Media.MediaPlayer> peut être utilisé dans deux modes différents, selon ce qui dirige le lecteur : en mode indépendant ou en mode horloge. En mode indépendant, le <xref:System.Windows.Media.MediaPlayer> est analogue à une image et le média ouvert via le <xref:System.Windows.Media.MediaPlayer.Open%2A> la lecture de lecteurs de méthode. En mode horloge, la <xref:System.Windows.Media.MediaPlayer> peut être considéré comme une cible d’une animation, et il aura donc correspondant <xref:System.Windows.Media.Animation.Timeline> et <xref:System.Windows.Media.Animation.Clock> entrées dans le déroulement d’arborescence qui contrôle la lecture. Pour plus d’informations sur les modes média, consultez le [vue d’ensemble du multimédia](~/docs/framework/wpf/graphics-multimedia/multimedia-overview.md).  
  
 <xref:System.Windows.Media.MediaPlayer> est différent à partir d’un <xref:System.Windows.Controls.MediaElement> car il n’est pas un contrôle qui ne peut être ajouté directement à la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] d’une application. Pour afficher le média chargé à l’aide <xref:System.Windows.Media.MediaPlayer>, un <xref:System.Windows.Media.VideoDrawing> ou <xref:System.Windows.Media.DrawingContext> doit être utilisé.  
  
   
  
## Examples  
 [Guide pratique pour Lire le média à l’aide d’un VideoDrawing](~/docs/framework/wpf/graphics-multimedia/how-to-play-media-using-a-videodrawing.md)  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Drawing" />
    <altmember cref="T:System.Windows.Media.VideoDrawing" />
    <altmember cref="T:System.Windows.Media.DrawingContext" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.MediaPlayer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Balance">
      <MemberSignature Language="C#" Value="public double Balance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Balance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Balance" />
      <MemberSignature Language="VB.NET" Value="Public Property Balance As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Balance { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Balance : double with get, set" Usage="System.Windows.Media.MediaPlayer.Balance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'équilibre entre les volumes des haut-parleurs gauche et droit.</summary>
        <value>Le taux de distribution du volume dans les haut-parleurs gauche et droit est situé dans une plage comprise entre -1 et 1. La valeur par défaut est 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur -1 représente 100 % des haut-parleurs gauche et 1 représente 100 % des haut-parleurs côté droit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingEnded">
      <MemberSignature Language="C#" Value="public event EventHandler BufferingEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BufferingEnded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.BufferingEnded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferingEnded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BufferingEnded;" />
      <MemberSignature Language="F#" Value="member this.BufferingEnded : EventHandler " Usage="member this.BufferingEnded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la mise en mémoire tampon est terminée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingProgress">
      <MemberSignature Language="C#" Value="public double BufferingProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 BufferingProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.BufferingProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferingProgress As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double BufferingProgress { double get(); };" />
      <MemberSignature Language="F#" Value="member this.BufferingProgress : double" Usage="System.Windows.Media.MediaPlayer.BufferingProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le pourcentage de la mise en mémoire tampon complété pour le contenu en continu.</summary>
        <value>Le pourcentage de la mise en mémoire tampon complété pour le contenu en continu représentait une valeur comprise entre 0 et 1.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingStarted">
      <MemberSignature Language="C#" Value="public event EventHandler BufferingStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BufferingStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.BufferingStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferingStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BufferingStarted;" />
      <MemberSignature Language="F#" Value="member this.BufferingStarted : EventHandler " Usage="member this.BufferingStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la mise en mémoire tampon a démarré.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPause">
      <MemberSignature Language="C#" Value="public bool CanPause { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPause" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.CanPause" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPause { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPause : bool" Usage="System.Windows.Media.MediaPlayer.CanPause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le média peut être suspendu.</summary>
        <value>true si le média peut être mis en pause ; sinon, faux.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.MediaClock Clock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.MediaClock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Clock" />
      <MemberSignature Language="VB.NET" Value="Public Property Clock As MediaClock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::MediaClock ^ Clock { System::Windows::Media::MediaClock ^ get(); void set(System::Windows::Media::MediaClock ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.MediaClock with get, set" Usage="System.Windows.Media.MediaPlayer.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.MediaClock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'<see cref="T:System.Windows.Media.MediaClock" /> associé à la <see cref="T:System.Windows.Media.MediaTimeline" /> à lire.</summary>
        <value>Horloge associée à la <see cref="T:System.Windows.Media.MediaTimeline" /> à lire. La valeur par défaut correspond à la valeur null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définition de cette propriété indique le <xref:System.Windows.Media.MediaPlayer> être piloté par une horloge et utilisera le moteur de minutage, plaçant le lecteur en mode horloge. Tous les médias de lecture sont arrêté et le <xref:System.Uri> associé à la nouvelle horloge est ouvert.  
  
 Lorsque le lecteur est en mode horloge, recherche à l’aide de <xref:System.Windows.Media.MediaPlayer.Position%2A> ou en appelant le <xref:System.Windows.Media.MediaPlayer.Play%2A>, <xref:System.Windows.Media.MediaPlayer.Pause%2A>, ou <xref:System.Windows.Media.MediaPlayer.Stop%2A> méthodes lèvent une <xref:System.InvalidOperationException>. Ces opérations sont disponibles uniquement lorsque le joueur <xref:System.Windows.Media.MediaPlayer.Clock%2A> a la valeur null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="mediaPlayer.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><see cref="T:System.Windows.Media.MediaPlayer" /> à cloner.</param>
        <summary>Convertit cette instance en copie complète de l’objet <see cref="T:System.Windows.Media.MediaPlayer" /> spécifié. Pendant la copie des propriétés de dépendance, cette méthode copie les références de ressources et les liaisons de données (qui risquent toutefois de ne plus pouvoir se résoudre), mais pas les animations ni leurs valeurs actuelles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par le <xref:System.Windows.Freezable.Clone%2A> (méthode) et ne doit pas être appelée directement à partir de votre code, à l’exception lors de l’appel de l’implémentation de base lors de la substitution de cette méthode. Pour créer une copie modifiable de l’objet en cours, appelez <xref:System.Windows.Freezable.Clone%2A> au lieu d’appeler cette méthode directement.  
  
 Pour plus d'informations, consultez <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="mediaPlayer.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><see cref="T:System.Windows.Media.MediaPlayer" /> à cloner.</param>
        <summary>Convertit cette instance en copie complète modifiable de l’objet <see cref="T:System.Windows.Media.MediaPlayer" /> spécifié à l’aide des valeurs de propriété actuelles. Contrairement à leurs valeurs actuelles, les références de ressources, les liaisons de données et les animations ne sont pas copiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par le <xref:System.Windows.Freezable.CloneCurrentValue%2A> (méthode) et ne doit pas être appelée directement à partir de votre code, à l’exception lors de l’appel de l’implémentation de base lors de la substitution de cette méthode. Pour créer une copie modifiable de l’objet en cours, appelez <xref:System.Windows.Freezable.CloneCurrentValue%2A> au lieu d’appeler cette méthode directement.  
  
 Pour plus d'informations, consultez <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="mediaPlayer.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ferme le média sous-jacent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Media.MediaPlayer> peut être ouvert à nouveau en appelant le <xref:System.Windows.Media.MediaPlayer.Open%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="mediaPlayer.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une instance <see cref="T:System.Windows.Media.MediaPlayer" />.</summary>
        <returns>Nouvelle instance de <see cref="T:System.Windows.Media.MediaPlayer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgress">
      <MemberSignature Language="C#" Value="public double DownloadProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DownloadProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.DownloadProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DownloadProgress As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DownloadProgress { double get(); };" />
      <MemberSignature Language="F#" Value="member this.DownloadProgress : double" Usage="System.Windows.Media.MediaPlayer.DownloadProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le pourcentage de progression du téléchargement pour le contenu localisé au niveau d'un serveur distant.</summary>
        <value>Pourcentage de progression du téléchargement pour le contenu localisé au niveau d'un serveur distant représenté par une valeur comprise entre 0 et 1. La valeur par défaut est 0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="mediaPlayer.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Objet <see cref="T:System.Windows.Media.MediaPlayer" /> à cloner et à figer.</param>
        <summary>Convertit cette instance en un clone de l’objet <see cref="T:System.Windows.Media.MediaPlayer" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pendant la copie des propriétés de dépendance, cette méthode copie les références de ressources et les liaisons de données (qui risquent toutefois de ne plus pouvoir se résoudre), mais pas les animations ni leurs valeurs actuelles. Notez que si ces propriétés contiennent des références de ressource ou des liaisons de données, <xref:System.Windows.Freezable.GetAsFrozen%2A> échoue lorsque la tentative de figer l’objet et lève un <xref:System.InvalidOperationException>.  
  
 Cette méthode est appelée par le <xref:System.Windows.Freezable.GetAsFrozen%2A> (méthode) et ne doit pas être appelée directement à partir de votre code, à l’exception lors de l’appel de l’implémentation de base lors de la substitution de cette méthode. Pour créer une copie figée de l’objet en cours, appelez <xref:System.Windows.Freezable.GetAsFrozen%2A> au lieu d’appeler cette méthode directement.  
  
 Pour plus d'informations, consultez <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAudio">
      <MemberSignature Language="C#" Value="public bool HasAudio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAudio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.HasAudio" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAudio As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAudio { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAudio : bool" Usage="System.Windows.Media.MediaPlayer.HasAudio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le média possède une sortie audio.</summary>
        <value>true si le média possède une sortie audio ; sinon, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVideo">
      <MemberSignature Language="C#" Value="public bool HasVideo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVideo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.HasVideo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVideo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVideo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasVideo : bool" Usage="System.Windows.Media.MediaPlayer.HasVideo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le média possède une sortie vidéo.</summary>
        <value>true si le média possède une sortie vidéo ; sinon, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuffering">
      <MemberSignature Language="C#" Value="public bool IsBuffering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.IsBuffering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuffering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBuffering : bool" Usage="System.Windows.Media.MediaPlayer.IsBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le média est mis en mémoire tampon.</summary>
        <value>true si le média est mis en mémoire tampon ; sinon, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMuted">
      <MemberSignature Language="C#" Value="public bool IsMuted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMuted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.IsMuted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMuted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMuted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMuted : bool with get, set" Usage="System.Windows.Media.MediaPlayer.IsMuted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le média est muet.</summary>
        <value>true si le média est muet ; sinon, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaEnded">
      <MemberSignature Language="C#" Value="public event EventHandler MediaEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MediaEnded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaEnded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaEnded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MediaEnded;" />
      <MemberSignature Language="F#" Value="member this.MediaEnded : EventHandler " Usage="member this.MediaEnded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la lecture du média est terminée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; MediaFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Media.ExceptionEventArgs&gt; MediaFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaFailed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaFailed As EventHandler(Of ExceptionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Media::ExceptionEventArgs ^&gt; ^ MediaFailed;" />
      <MemberSignature Language="F#" Value="member this.MediaFailed : EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; " Usage="member this.MediaFailed : System.EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une erreur est rencontrée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MediaFailed"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object MediaFailed="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaOpened">
      <MemberSignature Language="C#" Value="public event EventHandler MediaOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MediaOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MediaOpened;" />
      <MemberSignature Language="F#" Value="member this.MediaOpened : EventHandler " Usage="member this.MediaOpened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le média est ouvert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration NaturalDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration NaturalDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration NaturalDuration { System::Windows::Duration get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalDuration : System.Windows.Duration" Usage="System.Windows.Media.MediaPlayer.NaturalDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la durée naturelle du média.</summary>
        <value>Durée naturelle du média. La valeur par défaut est <see cref="P:System.Windows.Duration.Automatic" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.MediaPlayer.NaturalDuration%2A> ne peut pas être déterminé tant que <xref:System.Windows.Media.MediaPlayer.MediaOpened> s’est produite.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalVideoHeight">
      <MemberSignature Language="C#" Value="public int NaturalVideoHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalVideoHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalVideoHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalVideoHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NaturalVideoHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalVideoHeight : int" Usage="System.Windows.Media.MediaPlayer.NaturalVideoHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la hauteur en pixels de la vidéo.</summary>
        <value>Hauteur en pixels de la vidéo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur NULL est retournée si le type de média est audio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalVideoWidth">
      <MemberSignature Language="C#" Value="public int NaturalVideoWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalVideoWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalVideoWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalVideoWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NaturalVideoWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalVideoWidth : int" Usage="System.Windows.Media.MediaPlayer.NaturalVideoWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la largeur en pixels de la vidéo.</summary>
        <value>Largeur en pixels de la vidéo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur NULL est retournée si le type de média est audio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Open(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (source As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Open : Uri -&gt; unit" Usage="mediaPlayer.Open source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source"><see cref="T:System.Uri" /> de la source du média.</param>
        <summary>Ouvre l'<see cref="T:System.Uri" /> donné pour la lecture multimédia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="mediaPlayer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Suspend la lecture multimédia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel <xref:System.Windows.Media.MediaPlayer.Pause%2A> lorsqu’un lecteur a associé à un <xref:System.Windows.Media.MediaPlayer.Clock%2A> lèvera une <xref:System.InvalidOperationException>. <xref:System.Windows.Media.MediaPlayer.Pause%2A> ne peut pas être appelée lorsque le moteur de minutage la lecture du média.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberSignature Language="F#" Value="member this.Play : unit -&gt; unit" Usage="mediaPlayer.Play " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lit le média à partir de la <see cref="P:System.Windows.Media.MediaPlayer.Position" /> actuelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel <xref:System.Windows.Media.MediaPlayer.Play%2A> lorsqu’un lecteur a associé à un <xref:System.Windows.Media.MediaPlayer.Clock%2A> lèvera une <xref:System.InvalidOperationException>. <xref:System.Windows.Media.MediaPlayer.Play%2A> ne peut pas être appelée lorsque le moteur de minutage la lecture du média.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public TimeSpan Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Position { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Position : TimeSpan with get, set" Usage="System.Windows.Media.MediaPlayer.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la position actuelle du média.</summary>
        <value>Position actuelle du média.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le lecteur est associé à un <xref:System.Windows.Media.MediaPlayer.Clock%2A>, la définition <xref:System.Windows.Media.MediaPlayer.Position%2A> lèvera une <xref:System.InvalidOperationException>. <xref:System.Windows.Media.MediaPlayer.Position%2A> ne peut pas être défini lorsque le moteur de minutage la lecture du média.  
  
<a name="xamlTextUsage_Position"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Généralement pas utilisé dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPreamble">
      <MemberSignature Language="C#" Value="protected void ReadPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.ReadPreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadPreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadPreamble();" />
      <MemberSignature Language="F#" Value="override this.ReadPreamble : unit -&gt; unit" Usage="mediaPlayer.ReadPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Garantit que le lecteur multimédia est accessible à partir d'un thread valide.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptCommand">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; ScriptCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Media.MediaScriptCommandEventArgs&gt; ScriptCommand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.ScriptCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ScriptCommand As EventHandler(Of MediaScriptCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Media::MediaScriptCommandEventArgs ^&gt; ^ ScriptCommand;" />
      <MemberSignature Language="F#" Value="member this.ScriptCommand : EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; " Usage="member this.ScriptCommand : System.EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit en cas de rencontre d'une commande de script dans la média.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ScriptCommand"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object ScriptCommand="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?linkid=57417">IWMPEventsScriptCommand</related>
      </Docs>
    </Member>
    <Member MemberName="ScrubbingEnabled">
      <MemberSignature Language="C#" Value="public bool ScrubbingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrubbingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.ScrubbingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrubbingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrubbingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScrubbingEnabled : bool with get, set" Usage="System.Windows.Media.MediaPlayer.ScrubbingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le préchargement est activé.</summary>
        <value><see langword="true" /> si le préchargement est activé ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri" Usage="System.Windows.Media.MediaPlayer.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le média <see cref="T:System.Uri" />.</summary>
        <value><see cref="T:System.Uri" /> actuel du média.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.MediaPlayer.Source%2A> est en lecture seule. Cette propriété obtient le <xref:System.Uri> qui est ouverte via le <xref:System.Windows.Media.MediaPlayer.Open%2A> méthode ou le <xref:System.Uri> associé à la <xref:System.Windows.Media.MediaPlayer.Clock%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.MediaPlayer.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le taux de variation de la vitesse à laquelle le média est lu.</summary>
        <value>Le taux de variation de la vitesse de lecture du média est représenté par une valeur comprise entre 0 et la valeur double la plus élevée. La valeur par défaut est 1.0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les valeurs inférieures à 1 produisent plus lent que lecture normale, alors que les valeurs supérieures à 1 produisent plus rapidement que lecture normale.  
  
 Si le lecteur est associé à un <xref:System.Windows.Media.MediaPlayer.Clock%2A>, la définition <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> n’est pas autorisée. <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> ne peut pas être défini lorsque le moteur de minutage la lecture du média.  
  
 Lecture audio n’est pas garantie lorsque <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A> n’est pas `1`.  
  
<a name="xamlTextUsage_SpeedRatio"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Généralement pas utilisé dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="mediaPlayer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Arrête la lecture multimédia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel <xref:System.Windows.Media.MediaPlayer.Stop%2A> lorsqu’un lecteur a associé à un <xref:System.Windows.Media.MediaPlayer.Clock%2A> lèvera une <xref:System.InvalidOperationException>. <xref:System.Windows.Media.MediaPlayer.Stop%2A> ne peut pas être appelée lorsque le moteur de minutage la lecture du média.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public double Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Volume { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Volume : double with get, set" Usage="System.Windows.Media.MediaPlayer.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le volume du média.</summary>
        <value>Volume du média représenté sur une échelle linéaire comprise entre 0 et 1. La valeur par défaut est 0.5.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_Volume"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Généralement pas utilisé dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePreamble">
      <MemberSignature Language="C#" Value="protected void WritePreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.WritePreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePreamble();" />
      <MemberSignature Language="F#" Value="override this.WritePreamble : unit -&gt; unit" Usage="mediaPlayer.WritePreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Vérifie que le lecteur multimédia n'est pas figé et que son accès s'effectue à partir d'un contexte de thread valide.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>