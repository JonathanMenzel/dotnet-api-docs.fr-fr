<Type Name="FontFamily" FullName="System.Windows.Media.FontFamily">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="640c5f9acf1bdd14bc14cc7e35b3461699673c10" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37496729" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontFamily" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontFamily extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FontFamily" />
  <TypeSignature Language="VB.NET" Value="Public Class FontFamily" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontFamily" />
  <TypeSignature Language="F#" Value="type FontFamily = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.FontFamilyConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.FontFamilyValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a family of related fonts.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une famille de polices est un ensemble de types de caractères qui partagent le même nom de famille, par exemple « Times New Roman », mais des fonctionnalités différentes. Ces différences de fonctionnalité incluent <xref:System.Windows.Media.Typeface.Style%2A>, tels que l’italique, et <xref:System.Windows.Media.Typeface.Weight%2A>, tels que le gras.  
  
 ![Polices](~/add/media/fonts.PNG "polices")  
Exemple de types de caractères qui sont membres de la famille de polices « Times New Roman »  
  
 La plupart des [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] éléments, tels que <xref:System.Windows.Controls.Button> et <xref:System.Windows.Controls.TextBlock>, fournir un <xref:System.Windows.Controls.Control.FontFamily%2A> propriété qui peut être utilisée pour spécifier une police pour le contenu de texte d’un contrôle. Vous définissez la police en définissant cette propriété avec un <xref:System.Windows.Media.FontFamily> valeur. Les exemples suivants montrent comment référencer une police, dans [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] et dans le code.  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet3)]
 [!code-vb[FontSnippets#FontFallbackSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet3)]
 [!code-xaml[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet3)]  
  
 Dans l’exemple précédent, la police qui est référencée, « Comique Sans MS », est appelée par son *nom convivial*. En outre, dans cet exemple, la police est supposée se trouver dans la collection de polices système.  
  
## <a name="specifying-fonts-in-alternate-directories"></a>Spécifier des polices dans des répertoires différents  
 Un [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] application peut spécifier un répertoire, autre que le répertoire qui contient la collection de police système, pour résoudre des références de police. Le nom convivial de la police peut spécifier une absolue [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] valeur pour résoudre la référence de police, comme illustré dans l’exemple suivant [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] et exemples de code.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet6)]
 [!code-vb[FontSnippets#FontPackageSnippet6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet6)]
 [!code-xaml[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet6)]  
  
 Le nom convivial de la police peut également spécifier une [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur, ce qui nécessite une base de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] pour résoudre la référence de police. Le <xref:System.Windows.Media.FontFamily.BaseUri%2A> propriété de la <xref:System.Windows.Media.FontFamily> objet correspond à la base de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur. L’exemple de code suivant montre comment créer une référence de police qui est composée d’une base de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur et relatif [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet7)]
 [!code-vb[FontSnippets#FontPackageSnippet7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet7)]  
  
 Vous pouvez utiliser une base de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur lorsque vous référencez une police qui est empaquetée en tant que partie de l’application. Par exemple, la base de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur peut être un « pack://application » [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], qui vous permet de référencer des polices qui sont empaquetés en tant que ressources de l’application. L’exemple de code suivant montre une référence de police qui est composée d’une base de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur et relatif [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 Lorsqu’un <xref:System.Windows.Media.FontFamily> est spécifié en tant qu’attribut dans le balisage, la base de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur est implicite, sa valeur est le [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] page. La base implicite [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur est utilisée avec relatif [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur dans la chaîne de nom convivial pour obtenir l’emplacement de la police. Dans l’exemple suivant [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] exemple, notez que relatif [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur utilise le «. / « notation, ce qui signifie « dans le dossier actif » de la base de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur.  
  
 [!code-xaml[FontSnippets#FontPackageSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet1)]  
  
 Un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application pouvez empaqueter des polices comme un élément de contenu, un élément de ressource ou un élément de ressource de bibliothèque. Pour plus d’informations, consultez [Empaquetage de polices avec des applications](~/docs/framework/wpf/advanced/packaging-fonts-with-applications.md).  
  
## <a name="font-fallback"></a>Police de base  
 Police de substitution fait référence à la substitution automatique d’une police autre que la police sélectionnée par l’application cliente. Il existe deux raisons principales pourquoi la police de secours est appelée :  
  
-   La police spécifiée par l’application cliente n’existe pas sur le système.  
  
-   La police spécifiée par l’application cliente ne contient-elle pas les glyphes qui sont requises pour restituer le texte.  
  
 Dans[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], le mécanisme de police de secours utilise la famille de polices de secours par défaut, « Global User Interface », comme police de substitution. Cette police est définie comme une police composite, dont le nom est « GlobalUserInterface.CompositeFont ». Pour plus d’informations sur les polices composites, consultez la section polices composites dans cette rubrique.  
  
 Le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] mécanisme de secours de police remplace la précédente [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] technologies de substitution de police.  
  
## <a name="defining-a-font-fallback-sequence-in-code"></a>Définition d’une séquence de secours de police dans le Code  
 Vous pouvez définir une séquence de secours de police dans votre code, ce qui vous permet de définir une substitution de polices. Lorsque vous créez un <xref:System.Windows.Media.FontFamily> d’objet, de fournir une police plusieurs noms de famille, séparés par des virgules, pour le <xref:System.String> paramètre, comme « Comique Sans MS, Verdana ». Dans ce cas, si les glyphes à partir de la police « Comique Sans MS » ne sont pas disponibles, les glyphes à partir de la police « Verdana » sont utilisés. Si ni « Comique Sans MS » ni « Verdana » ont les glyphes requis, la famille de polices de secours du type de caractères est utilisée, ce qui est « Global User Interface » par défaut.  
  
 Les exemples suivants montrent comment définir une séquence de substitution de police dans [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] et dans le code.  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet1)]
 [!code-vb[FontSnippets#FontFallbackSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet1)]
 [!code-xaml[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet1)]  
  
 L’une des polices dans la séquence de secours peut spécifier des emplacements de police. Dans les exemples suivants, « Pericles Light » est référencée comme une ressource d’application, et « Verdana » est référencée en tant que membre d’une collection de polices système.  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet2)]
 [!code-vb[FontSnippets#FontFallbackSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet2)]
 [!code-xaml[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet2)]  
  
## <a name="composite-fonts"></a>Polices composites  
 Le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] plateforme fournit une fonctionnalité de police composite pour autoriser la construction de la gamme complète de polices multilingues et éviter d’afficher des glyphes manquants. Polices composites remplacent le [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] la liaison de polices, police de secours, liaison de la police, association de police et mécanismes d’end-user-defined characters (EUDC).  
  
 Une famille de polices composites est disponible pour les applications via le <xref:System.Windows.Media.FontFamily> et <xref:System.Windows.Media.Typeface> constructeurs tout comme n’importe quel autre famille de polices. Chaque famille de polices composites est nommé et, en tant qu’autres polices, peut fournir des variantes localisées de son nom dans plusieurs langues.  
  
 L’exemple de balisage suivant montre comment une famille de polices composites peut être définie en tant qu’un fichier de disque. Ce fichier peut être stocké dans la valeur par défaut [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] répertoire de polices comme avec n’importe quel autre police est installé, ou peut être référencée dans n’importe quel emplacement, en incluant ses [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] lors du référencement de la famille par nom.  
  
 L’exemple suivant montre le balisage de famille de polices dans un ». Fichier de CompositeFont ».  
  
 [!code-xaml[CompositeFontMarkup#CF](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositeFontMarkup/CS/comp.xaml#cf)]  
  
 Les quatre polices composites suivantes apparaissent dans le répertoire de police Windows par défaut dans le cadre de l’installation de WPF.  
  
|Police|Notes|  
|----------|-----------|  
|GlobalMonospace.CompositeFont|Restitue le texte à l’aide d’une police à espacement fixe, par exemple, « Courier New » pour les caractères latins.|  
|GlobalSanSerif.CompositeFont|Restitue le texte à l’aide d’une police sans serif, par exemple, « Arial » pour les caractères latins.|  
|GlobalSerif.CompositeFont|Restitue le texte à l’aide d’une police sans serif, par exemple, « Times New Roman » pour les caractères latins.|  
|GlobalUserInterface.CompositeFont|Restitue le texte à l’aide d’une police par défaut, par exemple, « Times New Roman » pour les caractères latins.|  
  
<a name="xamlAttributeUsage_FontFamily"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object FontFamily="fontFamilyName"/>  
- or -  
<object FontFamily="fontFamilyNamesList"/>  
- or -  
<object FontFamily="fontFamilyFolderReference"/>  
- or -  
<object FontFamily="fontFamilyUriReference"/>  
```  
  
<a name="xamlValues_FontFamily"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *fontFamilyName*  
 Chaîne spécifiant un nom de famille de polices.  Par exemple, `"Arial"` ou `"Century Gothic"`.  
  
 *fontFamilyNamesList*  
 Chaîne spécifiant plusieurs noms de famille de polices, séparés par une virgule (les espaces après une virgule sont ignoré).  La première famille de polices spécifiée sert de la famille de polices principale ; familles de polices suivantes servent de familles de secours à utiliser dans les cas où la famille de polices principale est indisponible ou non applicable.  Par exemple, `"Arial, Century Gothic"` spécifie Arial en tant que la famille de polices principale, avec siècle Gothic en tant que la famille de polices de secours.  
  
 *fontFamilyFolderReference*  
 Chaîne spécifiant un dossier contenant la police, ainsi que d’un nom de famille de polices.  Le dossier et le nom de famille de polices sont délimités par un caractère #.  La référence au dossier peut être absolu ou relatif.  Par exemple, `"Custom Fonts\#My Custom Font"`.  
  
 *fontFamilyUriReference*  
 Chaîne spécifiant un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] pour la police, ainsi que d’un nom de famille de polices.  Le [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] et le nom de famille de polices sont délimités par un caractère #.  Par exemple, `"http://MyFontServer/Fonts/#My Custom Font"`.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Fonts" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamily" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of an anonymous <see cref="T:System.Windows.Media.FontFamily" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur par défaut lorsque vous souhaitez créer une police composite par programme. Cela signifie que vous n’êtes pas obligé de spécifier un nom de famille de polices pour le constructeur, mais vous devez remplir les collections dans le <xref:System.Windows.Media.FontFamily.FamilyMaps%2A> et <xref:System.Windows.Media.FontFamily.FamilyNames%2A> collections avant d’utiliser l’instance construite.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::String ^ familyName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FontFamily : string -&gt; System.Windows.Media.FontFamily" Usage="new System.Windows.Media.FontFamily familyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="familyName">The family name or names that comprise the new <see cref="T:System.Windows.Media.FontFamily" />. Multiple family names should be separated by commas.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamily" /> class from the specified font family name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque nom de famille est spécifié dans le `familyName` paramètre peut être précédé d’une référence d’emplacement à un répertoire ou un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]. La référence d’emplacement est séparée à partir du nom de famille par un dièse (`#`) caractères. Plusieurs noms de famille sont spécifiés dans le `familyName` paramètre doit être séparé par des virgules.  
  
 Chaque famille peut être une vraie police qui représente directement un ensemble de fichiers de polices qui partagent le même nom de famille, ou peut être une référence à un nom de famille est défini dans un fichier de police composite.  
  
 Lorsque plusieurs familles sont identifiées, les familles de polices suivantes servent de familles de secours, gestion des points de code qui ne sont pas pris en charge par la première famille de polices. Chaque point de code qui n’est pas pris en charge par la première famille de polices, chaque famille suivante est vérifiée à son tour.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#103](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#103)]
 [!code-vb[FontSnippets#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="familyName" /> cannot be <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (Uri baseUri, string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(Uri ^ baseUri, System::String ^ familyName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FontFamily : Uri * string -&gt; System.Windows.Media.FontFamily" Usage="new System.Windows.Media.FontFamily (baseUri, familyName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">Specifies the base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] that is used to resolve <c>familyName</c>.</param>
        <param name="familyName">The family name or names that comprise the new <see cref="T:System.Windows.Media.FontFamily" />. Multiple family names should be separated by commas.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamily" /> class from the specified font family name and an optional base [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `familyName` valeur peut spécifier une [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur, ce qui nécessite une base de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] pour résoudre la référence de police. Le `baseUri` valeur peut être `null`.  
  
   
  
## Examples  
 Le code suivant montre une référence de police qui est composée d’une base de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur et relatif [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] valeur.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Baseline { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Baseline : double with get, set" Usage="System.Windows.Media.FontFamily.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the distance between the baseline and the character cell top.</summary>
        <value>Un <see cref="T:System.Double" /> qui indique la distance entre la ligne de base et le haut de la cellule de caractère, exprimé comme une fraction de la taille em de police.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Windows.Media.FontFamily.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the base [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] that is used to resolve a font family name.</summary>
        <value>Valeur de type <see cref="T:System.Uri" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de retour est `null` si le nom de famille de polices ne repose pas sur une base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] pour résoudre la référence de police. Pour récupérer le nom de famille de polices qui est utilisé pour construire le <xref:System.Windows.Media.FontFamily> de l’objet, utilisez le <xref:System.Windows.Media.FontFamily.Source%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre les résultats de la récupération du <xref:System.Windows.Media.FontFamily.BaseUri%2A> propriété à partir d’un <xref:System.Windows.Media.FontFamily> objet.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet9)]
 [!code-vb[FontSnippets#FontPackageSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fontFamily.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The <see cref="T:System.Windows.Media.FontFamily" /> object to compare.</param>
        <summary>Gets a value that indicates whether the current font family object and the specified font family object are the same.</summary>
        <returns>
          <see langword="true" /> if <paramref name="o" /> is equal to the current <see cref="T:System.Windows.Media.FontFamily" /> object; otherwise, <see langword="false" />. If <paramref name="o" /> is not a <see cref="T:System.Windows.Media.FontFamily" /> object, <see langword="false" /> is returned.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyMaps">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamilyMapCollection FamilyMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamilyMapCollection FamilyMaps" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyMaps As FontFamilyMapCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamilyMapCollection ^ FamilyMaps { System::Windows::Media::FontFamilyMapCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyMaps : System.Windows.Media.FontFamilyMapCollection" Usage="System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamilyMapCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of <see cref="T:System.Windows.Media.FontFamilyMap" /> objects.</summary>
        <value>Collection <see cref="T:System.Windows.Media.FontFamilyMapCollection" /> qui contient des objets <see cref="T:System.Windows.Media.FontFamilyMap" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour <xref:System.Windows.Media.FontFamily> objets qui sont créés à l’aide d’un nom de famille de polices, la <xref:System.Windows.Media.FontFamily.FamilyMaps%2A> propriété retourne une collection vide et en lecture seule.  
  
 Le <xref:System.Windows.Media.FontFamilyMap> objet définit la police à utiliser pour afficher un ensemble spécifié de caractères Unicode d’une culture spécifiée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyNames">
      <MemberSignature Language="C#" Value="public System.Windows.Media.LanguageSpecificStringDictionary FamilyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.LanguageSpecificStringDictionary FamilyNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyNames As LanguageSpecificStringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::LanguageSpecificStringDictionary ^ FamilyNames { System::Windows::Media::LanguageSpecificStringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyNames : System.Windows.Media.LanguageSpecificStringDictionary" Usage="System.Windows.Media.FontFamily.FamilyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.LanguageSpecificStringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of strings and <see cref="T:System.Globalization.CultureInfo" /> values that represent the font family names of the <see cref="T:System.Windows.Media.FontFamily" /> object.</summary>
        <value>Un <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> qui représente les noms de famille de polices.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#106](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#106)]
 [!code-vb[FontSnippets#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyTypefaces">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyTypefaces As FamilyTypefaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FamilyTypefaceCollection ^ FamilyTypefaces { System::Windows::Media::FamilyTypefaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyTypefaces : System.Windows.Media.FamilyTypefaceCollection" Usage="System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FamilyTypefaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of typefaces for the <see cref="T:System.Windows.Media.FontFamily" /> object.</summary>
        <value>Un <see cref="T:System.Windows.Media.FamilyTypefaceCollection" /> qui représente une collection de types de caractères pour le <see cref="T:System.Windows.Media.FontFamily" /> objet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_FamilyTypefaces"></a>   
## <a name="xaml-property-element-usage"></a>Utilisation des éléments de propriété XAML  
  
```  
<object>  
  <object.FamilyTypefaces>  
    <OneOrMoreFontFamilyTypefaces/>  
  </object.FamilyTypefaces>  
</object>  
```  
  
<a name="xamlValues_FamilyTypefaces"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *OneOrMoreFontFamilyTypefaces*  
 Un ou plusieurs des caractères pour le <xref:System.Windows.Media.FontFamily> objet.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#107](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#107)]
 [!code-vb[FontSnippets#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fontFamily.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serves as a hash function for <see cref="T:System.Windows.Media.FontFamily" />. It is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
        <returns>An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypefaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt; GetTypefaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.Typeface&gt; GetTypefaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypefaces () As ICollection(Of Typeface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Windows::Media::Typeface ^&gt; ^ GetTypefaces();" />
      <MemberSignature Language="F#" Value="member this.GetTypefaces : unit -&gt; System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;" Usage="fontFamily.GetTypefaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a collection of <see cref="T:System.Windows.Media.Typeface" /> objects that represent the type faces in the default system font location.</summary>
        <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Media.Typeface" /> objects.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#104](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#104)]
 [!code-vb[FontSnippets#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineSpacing">
      <MemberSignature Language="C#" Value="public double LineSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.LineSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property LineSpacing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineSpacing { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineSpacing : double with get, set" Usage="System.Windows.Media.FontFamily.LineSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the line spacing value for the <see cref="T:System.Windows.Media.FontFamily" /> object. The line spacing is the recommended baseline-to-baseline distance for the text in this font relative to the em size.</summary>
        <value>Un <see cref="T:System.Double" /> qui représente l’interligne pour le <see cref="T:System.Windows.Media.FontFamily" /> objet.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Windows.Media.FontFamily.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font family name that is used to construct the <see cref="T:System.Windows.Media.FontFamily" /> object.</summary>
        <value>Le nom de famille de polices de la <see cref="T:System.Windows.Media.FontFamily" /> objet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour retourner la base [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] valeur d’un <xref:System.Windows.Media.FontFamily> de l’objet, utilisez le <xref:System.Windows.Media.FontFamily.BaseUri%2A>.  
  
 Si le <xref:System.Windows.Media.FontFamily> objet a été créé sans spécifier un nom de famille de polices, la valeur de retour est <xref:System.String.Empty>.  
  
   
  
## Examples  
 L’exemple suivant montre les résultats de la récupération du <xref:System.Windows.Media.FontFamily.BaseUri%2A> et <xref:System.Windows.Media.FontFamily.Source%2A> des valeurs de propriété à partir d’un <xref:System.Windows.Media.FontFamily> objet.  
  
 [!code-csharp[FontSnippets#FontPackageSnippet10](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet10)]
 [!code-vb[FontSnippets#FontPackageSnippet10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fontFamily.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of the <see cref="P:System.Windows.Media.FontFamily.Source" /> property.</summary>
        <returns>The source location of the <see cref="T:System.Windows.Media.FontFamily" /> object, including the directory or [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] location reference.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Windows.Media.FontFamily> objet a été créé sans spécifier un nom de famille de polices, la valeur de retour est <xref:System.String.Empty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>