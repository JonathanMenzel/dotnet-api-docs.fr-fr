<Type Name="ArcSegment" FullName="System.Windows.Media.ArcSegment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4eac42157c7c3bbcc8a9f42f6ff68371b1699da5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39861937" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ArcSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ArcSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.ArcSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ArcSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArcSegment sealed : System::Windows::Media::PathSegment" />
  <TypeSignature Language="F#" Value="type ArcSegment = class&#xA;    inherit PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un arc elliptique entre deux points.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez un <xref:System.Windows.Media.PathFigure> objet à stocker <xref:System.Windows.Media.ArcSegment> objets et les autres segments.  
  
 Un arc elliptique est défini par ses points de début et fin, x et y radius, l’axe des x facteur de rotation, une valeur indiquant si l’arc doit être supérieur à 180 degrés et une valeur qui décrit la direction dans laquelle l’arc est dessiné. Le <xref:System.Windows.Media.ArcSegment> classe ne contient pas une propriété pour le point de départ de l’arc ; elle définit uniquement le point de destination de l’arc qu’elle représente. Le point de début de l’arc est le point actuel de la <xref:System.Windows.Media.PathFigure> auquel le <xref:System.Windows.Media.ArcSegment> est ajouté.  
  
 Les illustrations suivantes montrent le point de terminaison différents, <xref:System.Windows.Media.ArcSegment.Size%2A>, et <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> paramètres.  
  
 ![ArcSegments avec différents paramètres Point](~/add/media/arcsegment-point.png "ArcSegments avec différents paramètres Point")  
  
 ![ArcSegments avec différents paramètres Size](~/add/media/arcsegment-size.png "ArcSegments avec différents paramètres Size")  
  
 ![ArcSegments avec différents paramètres RotationAngle](~/add/media/arcsegment-rotationangle.png "ArcSegments avec différents paramètres RotationAngle")  
  
## <a name="islargearc-and-sweepdirection"></a>IsLargeArc et SweepDirection  
 Pour la plupart des arcs d’une position particulière, la taille et la rotation, il existe quatre façons différentes qui peuvent être dessinées ; le <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> et <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propriétés indiquent l’arc à utiliser.  
  
 Les quatre balayages d’arc, deux représentent de grands arcs avec balayages de 180 degrés ou plus de deux représentent de plus petits arcs jusqu'à 180 degrés ou moins. Si <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> est **true**, parmi les deux balayages d’arc supérieurs qui est choisi ; sinon, si est **false**, l’un de l’arc plus petits balayages sont choisi. Les deux arcs possibles restants sont chacun dessinés dans une direction différente : <xref:System.Windows.Media.SweepDirection.Counterclockwise> ou <xref:System.Windows.Media.SweepDirection.Clockwise>. Le <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propriété spécifie l’objet à utiliser.  
  
 Les illustrations suivantes montrent différents <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> et <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> paramètres.  
  
 ![ArcSegments avec différents paramètres IsLargeArc](~/add/media/arcsegment-islargearc.png "ArcSegments avec différents paramètres IsLargeArc")  
Objets ArcSegment avec différents paramètres IsLargeArc  
  
 ![ArcSegments avec différents paramètres SweepDirection](~/add/media/arcsegment-sweepdirection.png "ArcSegments avec différents paramètres SweepDirection")  
Objets ArcSegment avec différents paramètres SweepDirection  
  
## <a name="freezable-features"></a>Fonctionnalités Freezable  
 Un <xref:System.Windows.Media.ArcSegment> est un type de <xref:System.Windows.Freezable> objet. Pour plus d’informations sur <xref:System.Windows.Freezable> fonctionnalités, telles que le gel et le clonage, consultez le [vue d’ensemble des objets Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.ArcSegment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Media.ArcSegment> classe définit uniquement le point de destination de l’arc qu’elle représente ; le point de début de l’arc est le point actuel de la <xref:System.Windows.Media.PathFigure>, à qui le <xref:System.Windows.Media.ArcSegment> est ajouté.  
  
 Pour obtenir des arcs elliptiques plus d’une position particulière, la taille et la rotation, il existe quatre façons différentes qui peuvent être dessinées ; le `largeArc` et `sweepDirection` paramètres indiquent l’arc à utiliser.  
  
 Les quatre balayages d’arc, deux représentent de grands arcs avec balayages de 180 degrés ou plus de deux représentent de plus petits arcs jusqu'à 180 degrés ou moins. Si `largeArc` est **true**, parmi les deux balayages d’arc supérieurs qui est choisi ; sinon, si `largeArc` est **false**, l’un de l’arc plus petits balayages sont choisi.  
  
 Si `sweepDirection` est <xref:System.Windows.Media.SweepDirection.Clockwise>, l’arc est dessiné dans une direction d’angle positif. Si `sweepDirection` est <xref:System.Windows.Media.SweepDirection.Counterclockwise>, l’arc est dessiné dans une direction d’angle négatif.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArcSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArcSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.ArcSegment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Media.ArcSegment> classe définit uniquement le point de destination de l’arc qu’elle représente ; le point de début de l’arc est le point actuel de la <xref:System.Windows.Media.PathFigure>, à qui le <xref:System.Windows.Media.ArcSegment> est ajouté.  
  
 Pour obtenir des arcs elliptiques plus d’une position particulière, la taille et la rotation, il existe quatre façons différentes qui peuvent être dessinées ; le `largeArc` et `sweepDirection` paramètres indiquent l’arc à utiliser.  
  
 Les quatre balayages d’arc, deux représentent de grands arcs avec balayages de 180 degrés ou plus de deux représentent de plus petits arcs jusqu'à 180 degrés ou moins. Si `largeArc` est **true**, parmi les deux balayages d’arc supérieurs qui est choisi ; sinon, si `largeArc` est **false**, l’un de l’arc plus petits balayages sont choisi.  
  
 Si `sweepDirection` est <xref:System.Windows.Media.SweepDirection.Clockwise>, l’arc est dessiné dans une direction d’angle positif. Si `sweepDirection` est <xref:System.Windows.Media.SweepDirection.Counterclockwise>, l’arc est dessiné dans une direction d’angle négatif.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArcSegment (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArcSegment(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.ArcSegment : System.Windows.Point * System.Windows.Size * double * bool * System.Windows.Media.SweepDirection * bool -&gt; System.Windows.Media.ArcSegment" Usage="new System.Windows.Media.ArcSegment (point, size, rotationAngle, isLargeArc, sweepDirection, isStroked)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">Point de destination de l’arc. Le point de départ de l’arc correspond à la somme du point actuel de <see cref="T:System.Windows.Media.PathFigure" /> et de <see cref="T:System.Windows.Media.ArcSegment" />.</param>
        <param name="size">Rayons X et Y de l’arc. Le rayon X est spécifié par la propriété <see cref="P:System.Windows.Size.Width" /> de la structure <see cref="T:System.Windows.Size" />, et le rayon Y par la propriété <see cref="P:System.Windows.Size.Height" /> de la structure <see cref="T:System.Windows.Size" />.</param>
        <param name="rotationAngle">Rotation de l’axe X de l’ellipse.</param>
        <param name="isLargeArc">Indique si l’arc doit être supérieur à 180 degrés.</param>
        <param name="sweepDirection">
          <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> pour dessiner l’arc dans une direction d’angle positif ; <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> pour dessiner l’arc dans une direction d’angle négatif.</param>
        <param name="isStroked">Défini sur <c>true</c> pour tracer l’arc quand un <see cref="T:System.Windows.Media.Pen" /> est utilisé pour restituer le segment ; sinon, <c>false</c>.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.ArcSegment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Media.ArcSegment> classe définit uniquement le point de destination de l’arc qu’elle représente ; le point de début de l’arc est le point actuel de la <xref:System.Windows.Media.PathFigure>, à qui le <xref:System.Windows.Media.ArcSegment> est ajouté.  
  
 Pour obtenir des arcs elliptiques plus d’une position particulière, la taille et la rotation, il existe quatre façons différentes qui peuvent être dessinées ; le `largeArc` et `sweepDirection` paramètres indiquent l’arc à utiliser.  
  
 Les quatre balayages d’arc, deux représentent de grands arcs avec balayages de 180 degrés ou plus de deux représentent de plus petits arcs jusqu'à 180 degrés ou moins. Si `largeArc` est **true**, parmi les deux balayages d’arc supérieurs qui est choisi ; sinon, si `largeArc` est **false**, l’un de l’arc plus petits balayages sont choisi.  
  
 Si `sweepDirection` est <xref:System.Windows.Media.SweepDirection.Clockwise>, l’arc est dessiné dans une direction d’angle positif. Si `sweepDirection` est <xref:System.Windows.Media.SweepDirection.Counterclockwise>, l’arc est dessiné dans une direction d’angle négatif.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ArcSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.ArcSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ArcSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::ArcSegment ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.ArcSegment" Usage="arcSegment.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ArcSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un clone modifiable de ce <see cref="T:System.Windows.Media.ArcSegment" />, en créant des copies complètes des valeurs de cet objet. Pendant la copie des propriétés de dépendance, cette méthode copie les références de ressources et les liaisons de données (qui risquent toutefois de ne plus pouvoir se résoudre), mais pas les animations ni leurs valeurs actuelles.</summary>
        <returns>Clone modifiable de l'objet actif. La propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l’objet cloné sera <see langword="false" />, même si la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source était <see langword="true." />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée pour générer des copies modifiables de figé <xref:System.Windows.Freezable> objets (ou n’importe quel <xref:System.Windows.Freezable> objet). Pour des raisons pratiques, cette méthode occulte la version héritée avec une implémentation fortement typée.  
  
 Pour plus d'informations, consultez <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ArcSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.ArcSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ArcSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::ArcSegment ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.ArcSegment" Usage="arcSegment.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ArcSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un clone modifiable de cet objet <see cref="T:System.Windows.Media.ArcSegment" />, en effectuant une copie complète des valeurs actuelles de cet objet. Contrairement à leurs valeurs actuelles, les références de ressources, les liaisons de données et les animations ne sont pas copiées.</summary>
        <returns>Clone modifiable de l'objet actif. La valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l'objet cloné est <see langword="false" />, même si la valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source était <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée pour générer des copies modifiables de figé <xref:System.Windows.Freezable> objets (ou n’importe quel <xref:System.Windows.Freezable> objet). Pour des raisons pratiques, cette méthode occulte la version héritée avec une implémentation fortement typée.  
  
 Pour plus d'informations, consultez <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="arcSegment.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLargeArc">
      <MemberSignature Language="C#" Value="public bool IsLargeArc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLargeArc" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.IsLargeArc" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLargeArc As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLargeArc { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsLargeArc : bool with get, set" Usage="System.Windows.Media.ArcSegment.IsLargeArc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l’arc doit être supérieur à 180 degrés.</summary>
        <value>**true** si l’arc doit être supérieur à 180 degrés ; sinon, **false**. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour la plupart des arcs d’une position particulière, la taille et la rotation, il existe quatre façons différentes qui peuvent être dessinées ; le <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> et <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propriétés indiquent l’arc à utiliser.  
  
 Les quatre balayages d’arc, deux représentent de grands arcs avec balayages de 180 degrés ou plus de deux représentent de plus petits arcs jusqu'à 180 degrés ou moins. Si <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> est **true**, parmi les deux balayages d’arc supérieurs qui est choisi ; sinon, si est **false**, l’un de l’arc plus petits balayages sont choisi. Les deux arcs possibles restants sont chacun dessinés dans une direction différente : <xref:System.Windows.Media.SweepDirection.Counterclockwise> ou <xref:System.Windows.Media.SweepDirection.Clockwise>. Le <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propriété spécifie l’objet à utiliser.  
  
 L’illustration suivante montre deux arcs elliptiques qui sont identiques à l’exception de leurs <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> paramètres.  
  
 ![ArcSegments avec différents paramètres IsLargeArc](~/add/media/arcsegment-islargearc.png "ArcSegments avec différents paramètres IsLargeArc")  
Objets ArcSegment avec différents paramètres IsLargeArc  
  
<a name="dependencyPropertyInfo_IsLargeArc"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|  
|La valeur des propriétés de métadonnées **true**|Aucun.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLargeArcProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsLargeArcProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsLargeArcProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.IsLargeArcProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsLargeArcProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsLargeArcProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsLargeArcProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.IsLargeArcProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.Point" />
      <MemberSignature Language="VB.NET" Value="Public Property Point As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point : System.Windows.Point with get, set" Usage="System.Windows.Media.ArcSegment.Point" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le point de terminaison de l’arc elliptique.</summary>
        <value>Point où l’arc est dessiné. La valeur par défaut est (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Media.ArcSegment> classe définit uniquement le point de destination de l’arc qu’elle représente ; le point de début de l’arc est le point actuel de la <xref:System.Windows.Media.PathFigure> auquel le <xref:System.Windows.Media.ArcSegment> est ajouté.  
  
 Si le point de départ et le point de terminaison du segment d’arc de cercle sont identiques, aucun arc n’est dessiné.  
  
 Pour la plupart des arcs d’une position particulière, la taille et la rotation, il existe quatre façons différentes qui peuvent être dessinées ; le <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> et <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propriétés indiquent l’arc à utiliser.  
  
 Les quatre balayages d’arc, deux représentent de grands arcs avec balayages de 180 degrés ou plus de deux représentent de plus petits arcs jusqu'à 180 degrés ou moins. Si <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> est **true**, parmi les deux balayages d’arc supérieurs qui est choisi ; sinon, si est **false**, l’un de l’arc plus petits balayages sont choisi. Les deux arcs possibles restants sont chacun dessinés dans une direction différente : <xref:System.Windows.Media.SweepDirection.Counterclockwise> ou <xref:System.Windows.Media.SweepDirection.Clockwise>. Le <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propriété spécifie l’objet à utiliser.  
  
 L’illustration suivante montre plusieurs arcs elliptiques qui sont identiques à l’exception de leurs <xref:System.Windows.Media.ArcSegment.Point%2A> paramètres.  
  
 ![ArcSegments avec différents paramètres Point](~/add/media/arcsegment-point.png "ArcSegments avec différents paramètres Point")  
Plusieurs objets ArcSegment avec différents paramètres Point  
  
<a name="dependencyPropertyInfo_Point"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Media.ArcSegment.PointProperty>|  
|La valeur des propriétés de métadonnées **true**|Aucun.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.PointProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PointProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PointProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PointProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.PointProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Media.ArcSegment.Point" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngle">
      <MemberSignature Language="C#" Value="public double RotationAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RotationAngle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.RotationAngle" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationAngle As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RotationAngle { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RotationAngle : double with get, set" Usage="System.Windows.Media.ArcSegment.RotationAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le degré de rotation de l’ellipse par rapport à l’axe x.</summary>
        <value>Degré de rotation de l’ellipse par rapport à l’axe x. La valeur par défaut est 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’illustration suivante montre plusieurs arcs elliptiques qui sont identiques à l’exception de leurs <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> paramètres.  
  
 ![ArcSegments avec différents paramètres RotationAngle](~/add/media/arcsegment-rotationangle.png "ArcSegments avec différents paramètres RotationAngle")  
Plusieurs objets ArcSegment avec différents paramètres RotationAngle  
  
 Notez que, si la largeur et la hauteur de l’arc sont identiques, cette propriété n’a aucun effet.  
  
<a name="dependencyPropertyInfo_RotationAngle"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|  
|La valeur des propriétés de métadonnées **true**|Aucun.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RotationAngleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RotationAngleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.RotationAngleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RotationAngleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RotationAngleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RotationAngleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.RotationAngleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Media.ArcSegment.RotationAngle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Windows.Size with get, set" Usage="System.Windows.Media.ArcSegment.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le rayon x et le rayon y de l'arc sous la forme d'une structure <see cref="T:System.Windows.Size" />.</summary>
        <value>Un <see cref="T:System.Windows.Size" /> structure qui décrit le rayon x et y de l’arc elliptique. Le <see cref="T:System.Windows.Size" /> la structure <see cref="P:System.Windows.Size.Width" /> propriété spécifie le rayon x de l’arc ; sa <see cref="P:System.Windows.Size.Height" /> propriété spécifie le rayon y de l’arc. La valeur par défaut est 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’illustration suivante montre plusieurs arcs elliptiques qui sont identiques à l’exception de leurs <xref:System.Windows.Media.ArcSegment.Size%2A> paramètres.  
  
 ![ArcSegments avec différents paramètres Size](~/add/media/arcsegment-size.png "ArcSegments avec différents paramètres Size")  
Plusieurs objets ArcSegment avec différents paramètres Size  
  
<a name="dependencyPropertyInfo_Size"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Media.ArcSegment.SizeProperty>|  
|La valeur des propriétés de métadonnées **true**|Aucun.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.SizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.SizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Media.ArcSegment.Size" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Media.SweepDirection SweepDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.SweepDirection SweepDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.SweepDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property SweepDirection As SweepDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::SweepDirection SweepDirection { System::Windows::Media::SweepDirection get(); void set(System::Windows::Media::SweepDirection value); };" />
      <MemberSignature Language="F#" Value="member this.SweepDirection : System.Windows.Media.SweepDirection with get, set" Usage="System.Windows.Media.ArcSegment.SweepDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.SweepDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si l'arc est dessiné dans la direction <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> ou <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />.</summary>
        <value>Valeur qui spécifie le sens dans lequel l’arc est dessiné. La valeur par défaut est <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour un <xref:System.Windows.Media.ArcSegment> avec une donnée <xref:System.Windows.Media.ArcSegment.Size%2A>, <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>, de point de départ et de fin <xref:System.Windows.Media.ArcSegment.Point%2A>, de quatre façons différentes sont possibles. En spécifiant le <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> propriété réduit le nombre d’arcs possibles à deux : un arc dessiné à partir du point de début à la fin <xref:System.Windows.Media.ArcSegment.Point%2A> dans un <xref:System.Windows.Media.SweepDirection.Clockwise> direction et un arc dessiné du point de départ pour le point de terminaison dans un <xref:System.Windows.Media.SweepDirection.Counterclockwise> direction.  
  
 L’illustration suivante montre deux arcs elliptiques qui sont identiques à l’exception de leurs <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> paramètres.  
  
 ![ArcSegments avec différents paramètres SweepDirection](~/add/media/arcsegment-sweepdirection.png "ArcSegments avec différents paramètres SweepDirection")  
Objets ArcSegment avec différents paramètres SweepDirection  
  
<a name="dependencyPropertyInfo_SweepDirection"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|  
|La valeur des propriétés de métadonnées **true**|Aucun.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SweepDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SweepDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.SweepDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SweepDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SweepDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SweepDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.SweepDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Media.ArcSegment.SweepDirection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>