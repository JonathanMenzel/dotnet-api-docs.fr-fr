<Type Name="Matrix" FullName="System.Windows.Media.Matrix">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92482b7a1cc4ccd88a8cc95b8a9a1044e1b59735" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36467733" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Matrix : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Matrix extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public Structure Matrix&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Matrix : IFormattable" />
  <TypeSignature Language="F#" Value="type Matrix = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.MatrixConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.MatrixValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="acac1-101">Represents a 3x3 affine transformation matrix used for transformations in 2-D space.</span>
      <span class="sxs-lookup">
        <span data-stu-id="acac1-101">Represents a 3x3 affine transformation matrix used for transformations in 2-D space.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-102">Une matrice 3 x 3 est utilisée pour les transformations dans un [!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)] plan x-y.</span><span class="sxs-lookup"><span data-stu-id="acac1-102">A 3x3 matrix is used for transformations in a [!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)] x-y plane.</span></span> <span data-ttu-id="acac1-103">Les matrices de transformation affine peuvent être multipliées pour former de n’importe quel nombre de transformations linéaires, telles que la rotation et l’inclinaison (inclinaison), suivi par la conversion.</span><span class="sxs-lookup"><span data-stu-id="acac1-103">Affine transformation matrices can be multiplied to form any number of linear transformations, such as rotation and skew (shear), followed by translation.</span></span> <span data-ttu-id="acac1-104">Une matrice de transformation affine la dernière colonne est égale à (0, 0, 1), par conséquent, seuls les membres dans le deux premières colonnes doivent être spécifiés.</span><span class="sxs-lookup"><span data-stu-id="acac1-104">An affine transformation matrix has its final column equal to (0, 0, 1), so only the members in the first two columns need to be specified.</span></span>  <span data-ttu-id="acac1-105">Notez que les vecteurs sont exprimés sous forme de ligne-vecteurs, pas les vecteurs de colonne.</span><span class="sxs-lookup"><span data-stu-id="acac1-105">Note that vectors are expressed as row-vectors, not column vectors.</span></span>  
  
 <span data-ttu-id="acac1-106">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix> est stocké dans l’ordre ligne-champ et a la structure suivante :</span><span class="sxs-lookup"><span data-stu-id="acac1-106">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix> is stored using row-major order and has the following structure:</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="acac1-107">0</span><span class="sxs-lookup"><span data-stu-id="acac1-107">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="acac1-108">0</span><span class="sxs-lookup"><span data-stu-id="acac1-108">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="acac1-109">1</span><span class="sxs-lookup"><span data-stu-id="acac1-109">1</span></span>|  
  
 <span data-ttu-id="acac1-110">Les membres de la dernière ligne, <xref:System.Windows.Media.Matrix.OffsetX%2A> et <xref:System.Windows.Media.Matrix.OffsetY%2A>, représentent les valeurs de translation.</span><span class="sxs-lookup"><span data-stu-id="acac1-110">The members in the last row, <xref:System.Windows.Media.Matrix.OffsetX%2A> and <xref:System.Windows.Media.Matrix.OffsetY%2A>, represent translation values.</span></span>  
  
 <span data-ttu-id="acac1-111">Dans les méthodes et propriétés, la matrice de transformation est généralement spécifiée comme un vecteur à six membres seulement, comme suit :</span><span class="sxs-lookup"><span data-stu-id="acac1-111">In methods and properties, the transformation matrix is usually specified as a vector with only six members, as follows:</span></span>  
  
 <span data-ttu-id="acac1-112">(<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)</span><span class="sxs-lookup"><span data-stu-id="acac1-112">(<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)</span></span>  
  
 <span data-ttu-id="acac1-113">Bien que vous puissiez utiliser un <xref:System.Windows.Media.Matrix> structure directement pour convertir des points individuels, ou avec un <xref:System.Windows.Media.MatrixTransform> pour transformer des objets, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] fournit également un ensemble de classes qui vous permettent de transformer des objets travailler directement avec des matrices : <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, et <xref:System.Windows.Media.TranslateTransform>.</span><span class="sxs-lookup"><span data-stu-id="acac1-113">Although you can use a <xref:System.Windows.Media.Matrix> structure directly to translate individual points, or with a <xref:System.Windows.Media.MatrixTransform> to transform objects, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] also provides a set of classes that enable you to transform objects without working directly with matrices: <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, and <xref:System.Windows.Media.TranslateTransform>.</span></span>  
  
<a name="xamlAttributeUsage_Matrix"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="acac1-114">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="acac1-114">XAML Attribute Usage</span></span>  
  
```  
<object property="m11, m12, m21, m22, offsetX, offsetY"/>  
- or -  
<object property="Identity"/>  
```  
  
<a name="xamlValues_Matrix"></a>   
## <a name="xaml-values"></a><span data-ttu-id="acac1-115">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="acac1-115">XAML Values</span></span>  
 <span data-ttu-id="acac1-116">*m11*</span><span class="sxs-lookup"><span data-stu-id="acac1-116">*m11*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="acac1-117">La valeur dans la première ligne et la première colonne de ce <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-117">The value in the first row and first column of this <xref:System.Windows.Media.Matrix>.</span></span> <span data-ttu-id="acac1-118">Pour plus d'informations, consultez la propriété <xref:System.Windows.Media.Matrix.M11%2A>.</span><span class="sxs-lookup"><span data-stu-id="acac1-118">For more information, see the <xref:System.Windows.Media.Matrix.M11%2A> property.</span></span>  
  
 <span data-ttu-id="acac1-119">*m12*</span><span class="sxs-lookup"><span data-stu-id="acac1-119">*m12*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="acac1-120">La valeur dans la première ligne et la deuxième colonne.</span><span class="sxs-lookup"><span data-stu-id="acac1-120">The value in the first row and second column.</span></span> <span data-ttu-id="acac1-121">Pour plus d'informations, consultez la propriété <xref:System.Windows.Media.Matrix.M12%2A>.</span><span class="sxs-lookup"><span data-stu-id="acac1-121">For more information, see the <xref:System.Windows.Media.Matrix.M12%2A> property.</span></span>  
  
 <span data-ttu-id="acac1-122">*m21*</span><span class="sxs-lookup"><span data-stu-id="acac1-122">*m21*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="acac1-123">La valeur dans la deuxième ligne et la première colonne.</span><span class="sxs-lookup"><span data-stu-id="acac1-123">The value in the second row and first column.</span></span> <span data-ttu-id="acac1-124">Pour plus d'informations, consultez la propriété <xref:System.Windows.Media.Matrix.M21%2A>.</span><span class="sxs-lookup"><span data-stu-id="acac1-124">For more information, see the <xref:System.Windows.Media.Matrix.M21%2A> property.</span></span>  
  
 <span data-ttu-id="acac1-125">*m22*</span><span class="sxs-lookup"><span data-stu-id="acac1-125">*m22*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="acac1-126">La valeur dans la deuxième ligne et la deuxième colonne.</span><span class="sxs-lookup"><span data-stu-id="acac1-126">The value in the second row and second column.</span></span> <span data-ttu-id="acac1-127">Pour plus d'informations, consultez la propriété <xref:System.Windows.Media.Matrix.M22%2A>.</span><span class="sxs-lookup"><span data-stu-id="acac1-127">For more information, see the <xref:System.Windows.Media.Matrix.M22%2A> property.</span></span>  
  
 <span data-ttu-id="acac1-128">*offsetX*</span><span class="sxs-lookup"><span data-stu-id="acac1-128">*offsetX*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="acac1-129">La valeur dans la troisième ligne et la première colonne.</span><span class="sxs-lookup"><span data-stu-id="acac1-129">The value in the third row and first column.</span></span> <span data-ttu-id="acac1-130">Pour plus d'informations, consultez la propriété <xref:System.Windows.Media.Matrix.OffsetX%2A>.</span><span class="sxs-lookup"><span data-stu-id="acac1-130">For more information, see the <xref:System.Windows.Media.Matrix.OffsetX%2A> property.</span></span>  
  
 <span data-ttu-id="acac1-131">*offsetY*</span><span class="sxs-lookup"><span data-stu-id="acac1-131">*offsetY*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="acac1-132">La valeur dans la troisième ligne et la deuxième colonne.</span><span class="sxs-lookup"><span data-stu-id="acac1-132">The value in the third row and second column.</span></span> <span data-ttu-id="acac1-133">Pour plus d'informations, consultez la propriété <xref:System.Windows.Media.Matrix.OffsetY%2A>.</span><span class="sxs-lookup"><span data-stu-id="acac1-133">For more information, see the <xref:System.Windows.Media.Matrix.OffsetY%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (double m11, double m12, double m21, double m22, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 m11, float64 m12, float64 m21, float64 m22, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Double, m12 As Double, m21 As Double, m22 As Double, offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(double m11, double m12, double m21, double m22, double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Matrix : double * double * double * double * double * double -&gt; System.Windows.Media.Matrix" Usage="new System.Windows.Media.Matrix (m11, m12, m21, m22, offsetX, offsetY)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Double" />
        <Parameter Name="m12" Type="System.Double" />
        <Parameter Name="m21" Type="System.Double" />
        <Parameter Name="m22" Type="System.Double" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m11">
          <span data-ttu-id="acac1-134">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M11" /> coefficient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-134">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M11" /> coefficient.</span>
          </span>
        </param>
        <param name="m12">
          <span data-ttu-id="acac1-135">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M12" /> coefficient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-135">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M12" /> coefficient.</span>
          </span>
        </param>
        <param name="m21">
          <span data-ttu-id="acac1-136">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M21" /> coefficient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-136">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M21" /> coefficient.</span>
          </span>
        </param>
        <param name="m22">
          <span data-ttu-id="acac1-137">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M22" /> coefficient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-137">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M22" /> coefficient.</span>
          </span>
        </param>
        <param name="offsetX">
          <span data-ttu-id="acac1-138">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetX" /> coefficient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-138">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetX" /> coefficient.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="acac1-139">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetY" /> coefficient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-139">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetY" /> coefficient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-140">Initializes a new instance of the <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-140">Initializes a new instance of the <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Windows.Media.Matrix -&gt; unit" Usage="matrix.Append matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="acac1-141">The <see cref="T:System.Windows.Media.Matrix" /> structure to append to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-141">The <see cref="T:System.Windows.Media.Matrix" /> structure to append to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-142">Appends the specified <see cref="T:System.Windows.Media.Matrix" /> structure to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-142">Appends the specified <see cref="T:System.Windows.Media.Matrix" /> structure to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-143">Cette opération revient à multiplier cette <xref:System.Windows.Media.Matrix> structure par le paramètre `matrix`.</span><span class="sxs-lookup"><span data-stu-id="acac1-143">This operation is the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`.</span></span>  <span data-ttu-id="acac1-144">Multiplication des matrices n’est pas commutative, cette opération n’est pas identique à multiplier le paramètre `matrix` par ce <xref:System.Windows.Media.Matrix> structure ; autrement dit, (ce * `matrix`) n’est pas identique (`matrix` * cela).</span><span class="sxs-lookup"><span data-stu-id="acac1-144">Matrix multiplication is not commutative, though, so this operation is not the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure; that is, (this * `matrix`) is not the same as (`matrix` * this).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-145">L’exemple suivant montre comment ajouter un <xref:System.Windows.Media.Matrix> structure à un autre <xref:System.Windows.Media.Matrix> structure.</span><span class="sxs-lookup"><span data-stu-id="acac1-145">The following example shows how to append a <xref:System.Windows.Media.Matrix> structure to another <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Determinant">
      <MemberSignature Language="C#" Value="public double Determinant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Determinant" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.Determinant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Determinant As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Determinant { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Determinant : double" Usage="System.Windows.Media.Matrix.Determinant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-146">Gets the determinant of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-146">Gets the determinant of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acac1-147">Le déterminant de cette <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-147">The determinant of this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-148">Cet exemple montre comment obtenir le déterminant d’un <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-148">This example shows how to get the determinant of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixDeterminantExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixdeterminantexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-149">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures have the same values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-149">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures have the same values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="acac1-150">A <xref:System.Windows.Media.Matrix> stocke ses valeurs en tant que valeurs de type double.</span><span class="sxs-lookup"><span data-stu-id="acac1-150">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="acac1-151">Étant donné que la valeur d’un <xref:System.Double> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <xref:System.Double> des structures qui sont logiquement égales peuvent échouer.</span><span class="sxs-lookup"><span data-stu-id="acac1-151">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-152">L’exemple suivant montre comment vérifier deux <xref:System.Windows.Media.Matrix> structures sont égales.</span><span class="sxs-lookup"><span data-stu-id="acac1-152">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="matrix.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="acac1-153">The <see cref="T:System.Object" /> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-153">The <see cref="T:System.Object" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-154">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-154">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-155">
            <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" /> structure; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-155">
              <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" /> structure; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="acac1-156">A <xref:System.Windows.Media.Matrix> stocke ses valeurs en tant que valeurs de type double.</span><span class="sxs-lookup"><span data-stu-id="acac1-156">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="acac1-157">Étant donné que la valeur d’un <xref:System.Double> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <xref:System.Double> des structures qui sont logiquement égales peuvent échouer.</span><span class="sxs-lookup"><span data-stu-id="acac1-157">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-158">L’exemple suivant montre comment vérifier deux <xref:System.Windows.Media.Matrix> structures sont égales.</span><span class="sxs-lookup"><span data-stu-id="acac1-158">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.Matrix value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Media.Matrix value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Media::Matrix value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.Matrix -&gt; bool" Usage="matrix.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="acac1-159">The instance of <see cref="T:System.Windows.Media.Matrix" /> to compare to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-159">The instance of <see cref="T:System.Windows.Media.Matrix" /> to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-160">Determines whether the specified <see cref="T:System.Windows.Media.Matrix" /> structure is identical to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-160">Determines whether the specified <see cref="T:System.Windows.Media.Matrix" /> structure is identical to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-161">
            <see langword="true" /> if instances are equal; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-161">
              <see langword="true" /> if instances are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="acac1-162">A <xref:System.Windows.Media.Matrix> stocke ses valeurs en tant que valeurs de type double.</span><span class="sxs-lookup"><span data-stu-id="acac1-162">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="acac1-163">Étant donné que la valeur d’un <xref:System.Double> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <xref:System.Double> des structures qui sont logiquement égales peuvent échouer.</span><span class="sxs-lookup"><span data-stu-id="acac1-163">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-164">L’exemple suivant montre comment vérifier deux <xref:System.Windows.Media.Matrix> structures sont égales.</span><span class="sxs-lookup"><span data-stu-id="acac1-164">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="System.Windows.Media.Matrix.Equals (matrix1, matrix2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1">
          <span data-ttu-id="acac1-165">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-165">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span>
          </span>
        </param>
        <param name="matrix2">
          <span data-ttu-id="acac1-166">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-166">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-167">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-167">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-168">
            <see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-168">
              <see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="acac1-169">A <xref:System.Windows.Media.Matrix> stocke ses valeurs en tant que valeurs de type double.</span><span class="sxs-lookup"><span data-stu-id="acac1-169">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="acac1-170">Étant donné que la valeur d’un <xref:System.Double> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <xref:System.Double> des structures qui sont logiquement égales peuvent échouer.</span><span class="sxs-lookup"><span data-stu-id="acac1-170">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="matrix.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="acac1-171">Returns the hash code for this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-171">Returns the hash code for this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-172">The hash code for this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-172">The hash code for this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasInverse">
      <MemberSignature Language="C#" Value="public bool HasInverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasInverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.HasInverse" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasInverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasInverse { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasInverse : bool" Usage="System.Windows.Media.Matrix.HasInverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-173">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is invertible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-173">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is invertible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acac1-174">
            <see langword="true" /> Si le <see cref="T:System.Windows.Media.Matrix" /> a un inverse ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-174">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Matrix" /> has an inverse; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="acac1-175">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-175">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-176">L’exemple suivant vérifie si un <xref:System.Windows.Media.Matrix> est réversible.</span><span class="sxs-lookup"><span data-stu-id="acac1-176">The following example checks whether a <xref:System.Windows.Media.Matrix> is invertible.</span></span> <span data-ttu-id="acac1-177">S’il est réversible, le <xref:System.Windows.Media.Matrix> est inversé.</span><span class="sxs-lookup"><span data-stu-id="acac1-177">If it is invertible, the <xref:System.Windows.Media.Matrix> is inverted.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixInverseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixinverseexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.Matrix Identity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Identity As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::Matrix Identity { System::Windows::Media::Matrix get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-178">Gets an identity <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-178">Gets an identity <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acac1-179">Une matrice d’identité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-179">An identity matrix.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-180">Une matrice d’identité a la valeur 1 dans les coefficients (1,1), (2,2), [3,3] et la valeur 0 dans le reste des coefficients.</span><span class="sxs-lookup"><span data-stu-id="acac1-180">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="acac1-181">Cela correspond au paramètre <xref:System.Windows.Media.Matrix.M11%2A> et <xref:System.Windows.Media.Matrix.M22%2A> 1 et <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, et <xref:System.Windows.Media.Matrix.OffsetY%2A> à 0.</span><span class="sxs-lookup"><span data-stu-id="acac1-181">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="acac1-182">Dans une matrice affine, qui est l’implémentation qui [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] utilise pour le <xref:System.Windows.Media.Matrix>, structure, les coefficients [3,1], [3,2], [3,3] toujours ont respectivement les valeurs 0,0,1.</span><span class="sxs-lookup"><span data-stu-id="acac1-182">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix>, structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="acac1-183">1</span><span class="sxs-lookup"><span data-stu-id="acac1-183">1</span></span>|<span data-ttu-id="acac1-184">0</span><span class="sxs-lookup"><span data-stu-id="acac1-184">0</span></span>|<span data-ttu-id="acac1-185">0</span><span class="sxs-lookup"><span data-stu-id="acac1-185">0</span></span>|  
|<span data-ttu-id="acac1-186">0</span><span class="sxs-lookup"><span data-stu-id="acac1-186">0</span></span>|<span data-ttu-id="acac1-187">1</span><span class="sxs-lookup"><span data-stu-id="acac1-187">1</span></span>|<span data-ttu-id="acac1-188">0</span><span class="sxs-lookup"><span data-stu-id="acac1-188">0</span></span>|  
|<span data-ttu-id="acac1-189">0</span><span class="sxs-lookup"><span data-stu-id="acac1-189">0</span></span>|<span data-ttu-id="acac1-190">0</span><span class="sxs-lookup"><span data-stu-id="acac1-190">0</span></span>|<span data-ttu-id="acac1-191">1</span><span class="sxs-lookup"><span data-stu-id="acac1-191">1</span></span>|  
  
 <span data-ttu-id="acac1-192">Pour une matrice d’identité, le <xref:System.Windows.Media.Matrix.ToString%2A> méthode retourne la chaîne « Identité » au lieu des coefficients de la <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-192">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity" instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-193">L’exemple suivant montre comment récupérer le <xref:System.Windows.Media.Matrix.Identity%2A> matrice.</span><span class="sxs-lookup"><span data-stu-id="acac1-193">The following example shows how to retrieve the <xref:System.Windows.Media.Matrix.Identity%2A> matrix.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixIdentityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixidentityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.SetIdentity" />
        <altmember cref="P:System.Windows.Media.Matrix.IsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberSignature Language="F#" Value="member this.Invert : unit -&gt; unit" Usage="matrix.Invert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="acac1-194">Inverts this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-194">Inverts this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-195">L’exemple suivant vérifie si un <xref:System.Windows.Media.Matrix> structure est réversible.</span><span class="sxs-lookup"><span data-stu-id="acac1-195">The following example checks if a <xref:System.Windows.Media.Matrix> structure is invertible.</span></span> <span data-ttu-id="acac1-196">S’il est réversible, le <xref:System.Windows.Media.Matrix> structure est inversée.</span><span class="sxs-lookup"><span data-stu-id="acac1-196">If it is invertible, the <xref:System.Windows.Media.Matrix> structure is inverted.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixInverseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixinverseexample_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acac1-197">The <see cref="T:System.Windows.Media.Matrix" /> structure is not invertible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-197">The <see cref="T:System.Windows.Media.Matrix" /> structure is not invertible.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="System.Windows.Media.Matrix.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-198">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-198">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acac1-199">
            <see langword="true" /> Si le <see cref="T:System.Windows.Media.Matrix" /> structure est une matrice d’identité ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-199">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="acac1-200">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-200">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-201">Une matrice d’identité a la valeur 1 dans les coefficients (1,1), (2,2), [3,3] et la valeur 0 dans le reste des coefficients.</span><span class="sxs-lookup"><span data-stu-id="acac1-201">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="acac1-202">Cela correspond au paramètre <xref:System.Windows.Media.Matrix.M11%2A> et <xref:System.Windows.Media.Matrix.M22%2A> 1 et <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, et <xref:System.Windows.Media.Matrix.OffsetY%2A> à 0.</span><span class="sxs-lookup"><span data-stu-id="acac1-202">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="acac1-203">Dans une matrice affine, qui est l’implémentation qui [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] utilise pour le <xref:System.Windows.Media.Matrix> de la structure, les coefficients [3,1], [3,2], [3,3] toujours ont respectivement les valeurs 0,0,1.</span><span class="sxs-lookup"><span data-stu-id="acac1-203">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="acac1-204">1</span><span class="sxs-lookup"><span data-stu-id="acac1-204">1</span></span>|<span data-ttu-id="acac1-205">0</span><span class="sxs-lookup"><span data-stu-id="acac1-205">0</span></span>|<span data-ttu-id="acac1-206">0</span><span class="sxs-lookup"><span data-stu-id="acac1-206">0</span></span>|  
|<span data-ttu-id="acac1-207">0</span><span class="sxs-lookup"><span data-stu-id="acac1-207">0</span></span>|<span data-ttu-id="acac1-208">1</span><span class="sxs-lookup"><span data-stu-id="acac1-208">1</span></span>|<span data-ttu-id="acac1-209">0</span><span class="sxs-lookup"><span data-stu-id="acac1-209">0</span></span>|  
|<span data-ttu-id="acac1-210">0</span><span class="sxs-lookup"><span data-stu-id="acac1-210">0</span></span>|<span data-ttu-id="acac1-211">0</span><span class="sxs-lookup"><span data-stu-id="acac1-211">0</span></span>|<span data-ttu-id="acac1-212">1</span><span class="sxs-lookup"><span data-stu-id="acac1-212">1</span></span>|  
  
 <span data-ttu-id="acac1-213">Pour une matrice d’identité, le <xref:System.Windows.Media.Matrix.ToString%2A> méthode retourne la chaîne « Identité », au lieu des coefficients de la <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-213">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity", instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Matrix.Identity" />
        <altmember cref="M:System.Windows.Media.Matrix.SetIdentity" />
      </Docs>
    </Member>
    <Member MemberName="M11">
      <MemberSignature Language="C#" Value="public double M11 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M11" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M11" />
      <MemberSignature Language="VB.NET" Value="Public Property M11 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M11 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M11 : double with get, set" Usage="System.Windows.Media.Matrix.M11" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-214">Gets or sets the value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-214">Gets or sets the value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acac1-215">La valeur de la première ligne et la première colonne de ce <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-215">The value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
          <span data-ttu-id="acac1-216">La valeur par défaut est 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-216">The default value is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-217">L’exemple suivant montre comment multiplier deux <xref:System.Windows.Media.Matrix> structures et comment assigner des valeurs à un <xref:System.Windows.Media.Matrix> lorsqu’il est déclaré, et une fois que la structure est déclarée.</span><span class="sxs-lookup"><span data-stu-id="acac1-217">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M12">
      <MemberSignature Language="C#" Value="public double M12 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M12" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M12" />
      <MemberSignature Language="VB.NET" Value="Public Property M12 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M12 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M12 : double with get, set" Usage="System.Windows.Media.Matrix.M12" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-218">Gets or sets the value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-218">Gets or sets the value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acac1-219">La valeur de la première ligne et la deuxième colonne de ce <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-219">The value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
          <span data-ttu-id="acac1-220">La valeur par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-220">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-221">Le tableau suivant montre la disposition d’un <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-221">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="acac1-222">0</span><span class="sxs-lookup"><span data-stu-id="acac1-222">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="acac1-223">0</span><span class="sxs-lookup"><span data-stu-id="acac1-223">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="acac1-224">1</span><span class="sxs-lookup"><span data-stu-id="acac1-224">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="acac1-225">L’exemple suivant montre comment multiplier deux <xref:System.Windows.Media.Matrix> structures et comment assigner des valeurs à un <xref:System.Windows.Media.Matrix> lorsqu’il est déclaré, et une fois que la structure est déclarée.</span><span class="sxs-lookup"><span data-stu-id="acac1-225">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M21">
      <MemberSignature Language="C#" Value="public double M21 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M21" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M21" />
      <MemberSignature Language="VB.NET" Value="Public Property M21 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M21 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M21 : double with get, set" Usage="System.Windows.Media.Matrix.M21" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-226">Gets or sets the value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-226">Gets or sets the value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acac1-227">La valeur de la deuxième ligne et la première colonne de ce <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-227">The value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
          <span data-ttu-id="acac1-228">La valeur par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-228">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-229">Le tableau suivant montre la disposition d’un <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-229">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="acac1-230">0</span><span class="sxs-lookup"><span data-stu-id="acac1-230">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="acac1-231">0</span><span class="sxs-lookup"><span data-stu-id="acac1-231">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="acac1-232">1</span><span class="sxs-lookup"><span data-stu-id="acac1-232">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="acac1-233">L’exemple suivant montre comment multiplier deux <xref:System.Windows.Media.Matrix> structures et comment assigner des valeurs à un <xref:System.Windows.Media.Matrix> lorsqu’il est déclaré, et une fois que la structure est déclarée.</span><span class="sxs-lookup"><span data-stu-id="acac1-233">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M22">
      <MemberSignature Language="C#" Value="public double M22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M22" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M22" />
      <MemberSignature Language="VB.NET" Value="Public Property M22 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M22 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M22 : double with get, set" Usage="System.Windows.Media.Matrix.M22" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-234">Gets or sets the value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-234">Gets or sets the value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acac1-235">La valeur de la deuxième ligne et la deuxième colonne de ce <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-235">The value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
          <span data-ttu-id="acac1-236">La valeur par défaut est 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-236">The default value is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-237">Le tableau suivant montre la disposition d’un <xref:System.Windows.Media.Matrix> structure.</span><span class="sxs-lookup"><span data-stu-id="acac1-237">The following table shows the layout of a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="acac1-238">0</span><span class="sxs-lookup"><span data-stu-id="acac1-238">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="acac1-239">0</span><span class="sxs-lookup"><span data-stu-id="acac1-239">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="acac1-240">1</span><span class="sxs-lookup"><span data-stu-id="acac1-240">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="acac1-241">L’exemple suivant montre comment multiplier deux <xref:System.Windows.Media.Matrix> structures et comment assigner des valeurs à un <xref:System.Windows.Media.Matrix> lorsqu’il est déclaré, et une fois que la structure est déclarée.</span><span class="sxs-lookup"><span data-stu-id="acac1-241">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Matrix Multiply(valuetype System.Windows.Media.Matrix trans1, valuetype System.Windows.Media.Matrix trans2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (trans1 As Matrix, trans2 As Matrix) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix Multiply(System::Windows::Media::Matrix trans1, System::Windows::Media::Matrix trans2);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Multiply (trans1, trans2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="trans2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="trans1">
          <span data-ttu-id="acac1-242">The first <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-242">The first <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span>
          </span>
        </param>
        <param name="trans2">
          <span data-ttu-id="acac1-243">The second <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-243">The second <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-244">Multiplies a <see cref="T:System.Windows.Media.Matrix" /> structure by another <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-244">Multiplies a <see cref="T:System.Windows.Media.Matrix" /> structure by another <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-245">The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-245">The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-246">Multiplication des matrices n’est pas commutative.</span><span class="sxs-lookup"><span data-stu-id="acac1-246">Matrix multiplication is not commutative.</span></span> <span data-ttu-id="acac1-247">Multiplication `trans1` par `trans2` n’est pas identique à la multiplication `trans2` par `trans1`.</span><span class="sxs-lookup"><span data-stu-id="acac1-247">Multiplying `trans1` by `trans2` is not the same as multiplying `trans2` by `trans1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-248">L’exemple suivant montre comment multiplier deux <xref:System.Windows.Media.Matrix> structures.</span><span class="sxs-lookup"><span data-stu-id="acac1-248">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public double OffsetX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OffsetX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetX : double with get, set" Usage="System.Windows.Media.Matrix.OffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-249">Gets or sets the value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-249">Gets or sets the value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acac1-250">La valeur de la troisième ligne et la première colonne de ce <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-250">The value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
          <span data-ttu-id="acac1-251">La valeur par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-251">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-252">Le <xref:System.Windows.Media.Matrix.OffsetX%2A> propriété est nommée ainsi parce qu’elle spécifie la quantité pour la conversion de l’espace de coordonnée le long de l’axe des abscisses.</span><span class="sxs-lookup"><span data-stu-id="acac1-252">The <xref:System.Windows.Media.Matrix.OffsetX%2A> property is so named because it specifies the amount to translate the coordinate space along the x-axis.</span></span>  
  
 <span data-ttu-id="acac1-253">Le tableau suivant montre la disposition d’un <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-253">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="acac1-254">0</span><span class="sxs-lookup"><span data-stu-id="acac1-254">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="acac1-255">0</span><span class="sxs-lookup"><span data-stu-id="acac1-255">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="acac1-256">1</span><span class="sxs-lookup"><span data-stu-id="acac1-256">1</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public double OffsetY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OffsetY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetY : double with get, set" Usage="System.Windows.Media.Matrix.OffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-257">Gets or sets the value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-257">Gets or sets the value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acac1-258">La valeur de la troisième ligne et la deuxième colonne de ce <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-258">The value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
          <span data-ttu-id="acac1-259">La valeur par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-259">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-260">Le <xref:System.Windows.Media.Matrix.OffsetY%2A> propriété est nommée ainsi parce qu’elle spécifie la quantité pour la conversion de l’espace de coordonnée le long de l’axe des ordonnées.</span><span class="sxs-lookup"><span data-stu-id="acac1-260">The <xref:System.Windows.Media.Matrix.OffsetY%2A> property is so named because it specifies the amount to translate the coordinate space along the y-axis.</span></span>  
  
 <span data-ttu-id="acac1-261">Le tableau suivant montre la disposition d’un <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-261">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="acac1-262">0</span><span class="sxs-lookup"><span data-stu-id="acac1-262">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="acac1-263">0</span><span class="sxs-lookup"><span data-stu-id="acac1-263">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="acac1-264">1</span><span class="sxs-lookup"><span data-stu-id="acac1-264">1</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="matrix1 = matrix2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1">
          <span data-ttu-id="acac1-265">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-265">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span>
          </span>
        </param>
        <param name="matrix2">
          <span data-ttu-id="acac1-266">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-266">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-267">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-267">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-268">
            <see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-268">
              <see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="acac1-269">A <xref:System.Windows.Media.Matrix> stocke ses valeurs en tant que valeurs de type double.</span><span class="sxs-lookup"><span data-stu-id="acac1-269">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="acac1-270">Étant donné que la valeur d’un <xref:System.Double> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <xref:System.Double> des structures qui sont logiquement égales peuvent échouer.</span><span class="sxs-lookup"><span data-stu-id="acac1-270">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-271">L’exemple suivant montre comment vérifier deux <xref:System.Windows.Media.Matrix> structures sont égales.</span><span class="sxs-lookup"><span data-stu-id="acac1-271">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Media.Matrix.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="System.Windows.Media.Matrix.op_Inequality (matrix1, matrix2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1">
          <span data-ttu-id="acac1-272">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-272">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span>
          </span>
        </param>
        <param name="matrix2">
          <span data-ttu-id="acac1-273">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-273">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-274">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are not identical.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-274">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are not identical.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-275">
            <see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are not identical; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-275">
              <see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are not identical; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="acac1-276">A <xref:System.Windows.Media.Matrix> stocke ses valeurs en tant que valeurs de type double.</span><span class="sxs-lookup"><span data-stu-id="acac1-276">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="acac1-277">Étant donné que la valeur d’un <xref:System.Double> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <xref:System.Double> des structures qui sont logiquement égales peuvent échouer.</span><span class="sxs-lookup"><span data-stu-id="acac1-277">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-278">L’exemple suivant montre comment vérifier deux <xref:System.Windows.Media.Matrix> structures sont égales.</span><span class="sxs-lookup"><span data-stu-id="acac1-278">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix operator * (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Matrix op_Multiply(valuetype System.Windows.Media.Matrix trans1, valuetype System.Windows.Media.Matrix trans2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (trans1 As Matrix, trans2 As Matrix) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix operator *(System::Windows::Media::Matrix trans1, System::Windows::Media::Matrix trans2);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; System.Windows.Media.Matrix" Usage="trans1 * trans2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="trans2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="trans1">
          <span data-ttu-id="acac1-279">The first <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-279">The first <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span>
          </span>
        </param>
        <param name="trans2">
          <span data-ttu-id="acac1-280">The second <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-280">The second <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-281">Multiplies a <see cref="T:System.Windows.Media.Matrix" /> structure by another <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-281">Multiplies a <see cref="T:System.Windows.Media.Matrix" /> structure by another <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-282">The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-282">The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-283">Multiplication des matrices n’est pas commutative.</span><span class="sxs-lookup"><span data-stu-id="acac1-283">Matrix multiplication is not commutative.</span></span> <span data-ttu-id="acac1-284">Multiplication `trans1` par `trans2` n’est pas identique à la multiplication `trans2` par `trans1`.</span><span class="sxs-lookup"><span data-stu-id="acac1-284">Multiplying `trans1` by `trans2` is not the same as multiplying `trans2` by `trans1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-285">L’exemple suivant montre comment multiplier deux <xref:System.Windows.Media.Matrix> structures.</span><span class="sxs-lookup"><span data-stu-id="acac1-285">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Matrix Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="acac1-286">The <see cref="T:System.String" /> representation of the matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-286">The <see cref="T:System.String" /> representation of the matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-287">Converts a <see cref="T:System.String" /> representation of a matrix into the equivalent <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-287">Converts a <see cref="T:System.String" /> representation of a matrix into the equivalent <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-288">The equivalent <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-288">The equivalent <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-289">L’exemple suivant montre comment convertir une représentation sous forme de chaîne d’une matrice en un <xref:System.Windows.Media.Matrix> structure.</span><span class="sxs-lookup"><span data-stu-id="acac1-289">The following example shows how to convert a string representation of a matrix into a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixParseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixparseexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepend">
      <MemberSignature Language="C#" Value="public void Prepend (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Prepend(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepend(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Prepend : System.Windows.Media.Matrix -&gt; unit" Usage="matrix.Prepend matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="acac1-290">The <see cref="T:System.Windows.Media.Matrix" /> structure to prepend to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-290">The <see cref="T:System.Windows.Media.Matrix" /> structure to prepend to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-291">Prepends the specified <see cref="T:System.Windows.Media.Matrix" /> structure onto this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-291">Prepends the specified <see cref="T:System.Windows.Media.Matrix" /> structure onto this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-292">Cette opération revient à multiplier le paramètre `matrix` par ce <xref:System.Windows.Media.Matrix> structure.</span><span class="sxs-lookup"><span data-stu-id="acac1-292">This operation is the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure.</span></span> <span data-ttu-id="acac1-293">Multiplication des matrices n’est pas commutative, toutefois, cette opération n’est pas identique à multiplier cette <xref:System.Windows.Media.Matrix> structure par le paramètre `matrix`, c'est-à-dire `matrix` * cela n’est pas le même que ce * `matrix`.</span><span class="sxs-lookup"><span data-stu-id="acac1-293">Matrix multiplication is not commutative, however, so this operation is not the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`; that is, `matrix` * this is not the same as this * `matrix`.</span></span>  
  
 <span data-ttu-id="acac1-294">Dans une transformation composite, l’ordre des différentes transformations est important.</span><span class="sxs-lookup"><span data-stu-id="acac1-294">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="acac1-295">Par exemple, si vous tout d’abord faire pivoter, mettre à l’échelle, puis traduisez, vous obtenez un résultat différent que si vous convertissez tout d’abord, faire pivoter, puis mettre à l’échelle.</span><span class="sxs-lookup"><span data-stu-id="acac1-295">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="acac1-296">Un ordre est important parce que les transformations comme la rotation et de mise à l’échelle s’effectuent par rapport à l’origine du système de coordonnées.</span><span class="sxs-lookup"><span data-stu-id="acac1-296">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="acac1-297">Mise à l’échelle d’un objet qui est centré à l’origine de produit le même résultat que la mise à l’échelle d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-297">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="acac1-298">De même, la rotation d’un objet qui est centré à l’origine produit le même résultat que la rotation d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-298">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-299">L’exemple suivant montre comment ajouter un <xref:System.Windows.Media.Matrix> sur un autre <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-299">The following example shows how to prepend a <xref:System.Windows.Media.Matrix> onto another <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double angle);" />
      <MemberSignature Language="F#" Value="member this.Rotate : double -&gt; unit" Usage="matrix.Rotate angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="acac1-300">The angle of rotation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-300">The angle of rotation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-301">Applies a rotation of the specified angle about the origin of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-301">Applies a rotation of the specified angle about the origin of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-302">L’exemple suivant montre comment faire pivoter un <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-302">The following example shows how to rotate a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(double angle, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : double * double * double -&gt; unit" Usage="matrix.RotateAt (angle, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="acac1-303">The angle, in degrees, by which to rotate this matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-303">The angle, in degrees, by which to rotate this matrix.</span>
          </span>
        </param>
        <param name="centerX">
          <span data-ttu-id="acac1-304">The x-coordinate of the point about which to rotate this matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-304">The x-coordinate of the point about which to rotate this matrix.</span>
          </span>
        </param>
        <param name="centerY">
          <span data-ttu-id="acac1-305">The y-coordinate of the point about which to rotate this matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-305">The y-coordinate of the point about which to rotate this matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-306">Rotates this matrix about the specified point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-306">Rotates this matrix about the specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-307">L’exemple suivant montre comment faire pivoter un <xref:System.Windows.Media.Matrix> à un point spécifié.</span><span class="sxs-lookup"><span data-stu-id="acac1-307">The following example shows how to rotate a <xref:System.Windows.Media.Matrix> about a specified point.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAtPrepend">
      <MemberSignature Language="C#" Value="public void RotateAtPrepend (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAtPrepend(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAtPrepend (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAtPrepend(double angle, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.RotateAtPrepend : double * double * double -&gt; unit" Usage="matrix.RotateAtPrepend (angle, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="acac1-308">The rotation angle, in degrees.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-308">The rotation angle, in degrees.</span>
          </span>
        </param>
        <param name="centerX">
          <span data-ttu-id="acac1-309">The x-coordinate of the rotation center.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-309">The x-coordinate of the rotation center.</span>
          </span>
        </param>
        <param name="centerY">
          <span data-ttu-id="acac1-310">The y-coordinate of the rotation center.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-310">The y-coordinate of the rotation center.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-311">Prepends a rotation of the specified angle at the specified point to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-311">Prepends a rotation of the specified angle at the specified point to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-312">Dans une transformation composite, l’ordre des différentes transformations est important.</span><span class="sxs-lookup"><span data-stu-id="acac1-312">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="acac1-313">Par exemple, si vous tout d’abord faire pivoter, mettre à l’échelle, puis traduisez, vous obtenez un résultat différent que si vous convertissez tout d’abord, faire pivoter, puis mettre à l’échelle.</span><span class="sxs-lookup"><span data-stu-id="acac1-313">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="acac1-314">Un ordre est important parce que les transformations comme la rotation et de mise à l’échelle s’effectuent par rapport à l’origine du système de coordonnées.</span><span class="sxs-lookup"><span data-stu-id="acac1-314">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="acac1-315">Mise à l’échelle d’un objet qui est centré à l’origine de produit le même résultat que la mise à l’échelle d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-315">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="acac1-316">De même, la rotation d’un objet qui est centré à l’origine produit le même résultat que la rotation d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-316">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-317">L’exemple suivant montre comment ajouter une rotation vers une <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-317">The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependrotateexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotatePrepend">
      <MemberSignature Language="C#" Value="public void RotatePrepend (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotatePrepend(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotatePrepend (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotatePrepend(double angle);" />
      <MemberSignature Language="F#" Value="member this.RotatePrepend : double -&gt; unit" Usage="matrix.RotatePrepend angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="acac1-318">The angle of rotation to prepend.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-318">The angle of rotation to prepend.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-319">Prepends a rotation of the specified angle to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-319">Prepends a rotation of the specified angle to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-320">Dans une transformation composite, l’ordre des différentes transformations est important.</span><span class="sxs-lookup"><span data-stu-id="acac1-320">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="acac1-321">Par exemple, si vous tout d’abord faire pivoter, mettre à l’échelle, puis traduisez, vous obtenez un résultat différent que si vous convertissez tout d’abord, faire pivoter, puis mettre à l’échelle.</span><span class="sxs-lookup"><span data-stu-id="acac1-321">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="acac1-322">Un ordre est important parce que les transformations comme la rotation et de mise à l’échelle s’effectuent par rapport à l’origine du système de coordonnées.</span><span class="sxs-lookup"><span data-stu-id="acac1-322">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="acac1-323">Mise à l’échelle d’un objet qui est centré à l’origine de produit le même résultat que la mise à l’échelle d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-323">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="acac1-324">De même, la rotation d’un objet qui est centré à l’origine produit le même résultat que la rotation d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-324">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-325">L’exemple suivant montre comment ajouter une rotation vers une <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-325">The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependrotateexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Rotate(System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : double * double -&gt; unit" Usage="matrix.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="acac1-326">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-326">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="acac1-327">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-327">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-328">Appends the specified scale vector to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-328">Appends the specified scale vector to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-329">L’exemple suivant montre comment mettre à l’échelle un <xref:System.Windows.Media.Matrix> structure.</span><span class="sxs-lookup"><span data-stu-id="acac1-329">The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleAt">
      <MemberSignature Language="C#" Value="public void ScaleAt (double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleAt(float64 scaleX, float64 scaleY, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleAt (scaleX As Double, scaleY As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleAt(double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.ScaleAt : double * double * double * double -&gt; unit" Usage="matrix.ScaleAt (scaleX, scaleY, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="acac1-330">The amount by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-330">The amount by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="acac1-331">The amount by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-331">The amount by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span>
          </span>
        </param>
        <param name="centerX">
          <span data-ttu-id="acac1-332">The x-coordinate of the scale operation's center point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-332">The x-coordinate of the scale operation's center point.</span>
          </span>
        </param>
        <param name="centerY">
          <span data-ttu-id="acac1-333">The y-coordinate of the scale operation's center point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-333">The y-coordinate of the scale operation's center point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-334">Scales this <see cref="T:System.Windows.Media.Matrix" /> by the specified amount about the specified point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-334">Scales this <see cref="T:System.Windows.Media.Matrix" /> by the specified amount about the specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-335">L’exemple suivant montre comment mettre à l’échelle un <xref:System.Windows.Media.Matrix> structure.</span><span class="sxs-lookup"><span data-stu-id="acac1-335">The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleAtPrepend">
      <MemberSignature Language="C#" Value="public void ScaleAtPrepend (double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleAtPrepend(float64 scaleX, float64 scaleY, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleAtPrepend (scaleX As Double, scaleY As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleAtPrepend(double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.ScaleAtPrepend : double * double * double * double -&gt; unit" Usage="matrix.ScaleAtPrepend (scaleX, scaleY, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="acac1-336">The x-axis scale factor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-336">The x-axis scale factor.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="acac1-337">The y-axis scale factor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-337">The y-axis scale factor.</span>
          </span>
        </param>
        <param name="centerX">
          <span data-ttu-id="acac1-338">The x-coordinate of the point about which the scale operation is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-338">The x-coordinate of the point about which the scale operation is performed.</span>
          </span>
        </param>
        <param name="centerY">
          <span data-ttu-id="acac1-339">The y-coordinate of the point about which the scale operation is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-339">The y-coordinate of the point about which the scale operation is performed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-340">Prepends the specified scale about the specified point of this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-340">Prepends the specified scale about the specified point of this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-341">Dans une transformation composite, l’ordre des différentes transformations est important.</span><span class="sxs-lookup"><span data-stu-id="acac1-341">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="acac1-342">Par exemple, si vous tout d’abord faire pivoter, mettre à l’échelle, puis traduisez, vous obtenez un résultat différent que si vous convertissez tout d’abord, faire pivoter, puis mettre à l’échelle.</span><span class="sxs-lookup"><span data-stu-id="acac1-342">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="acac1-343">Un ordre est important parce que les transformations comme la rotation et de mise à l’échelle s’effectuent par rapport à l’origine du système de coordonnées.</span><span class="sxs-lookup"><span data-stu-id="acac1-343">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="acac1-344">Mise à l’échelle d’un objet qui est centré à l’origine de produit le même résultat que la mise à l’échelle d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-344">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="acac1-345">De même, la rotation d’un objet qui est centré à l’origine produit le même résultat que la rotation d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-345">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-346">L’exemple suivant montre comment ajouter une échelle à un <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-346">The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScalePrepend">
      <MemberSignature Language="C#" Value="public void ScalePrepend (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScalePrepend(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScalePrepend (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScalePrepend(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.ScalePrepend : double * double -&gt; unit" Usage="matrix.ScalePrepend (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="acac1-347">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> structure along the x-axis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-347">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> structure along the x-axis.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="acac1-348">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> structure along the y-axis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-348">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> structure along the y-axis.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-349">Prepends the specified scale vector to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-349">Prepends the specified scale vector to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-350">Dans une transformation composite, l’ordre des différentes transformations est important.</span><span class="sxs-lookup"><span data-stu-id="acac1-350">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="acac1-351">Par exemple, si vous tout d’abord faire pivoter, mettre à l’échelle, puis traduisez, vous obtenez un résultat différent que si vous convertissez tout d’abord, faire pivoter, puis mettre à l’échelle.</span><span class="sxs-lookup"><span data-stu-id="acac1-351">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="acac1-352">Un ordre est important parce que les transformations comme la rotation et de mise à l’échelle s’effectuent par rapport à l’origine du système de coordonnées.</span><span class="sxs-lookup"><span data-stu-id="acac1-352">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="acac1-353">Mise à l’échelle d’un objet qui est centré à l’origine de produit le même résultat que la mise à l’échelle d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-353">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="acac1-354">De même, la rotation d’un objet qui est centré à l’origine produit le même résultat que la rotation d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-354">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-355">L’exemple suivant montre comment ajouter une échelle à un <xref:System.Windows.Media.Matrix> structure.</span><span class="sxs-lookup"><span data-stu-id="acac1-355">The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SetIdentity">
      <MemberSignature Language="C#" Value="public void SetIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.SetIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIdentity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIdentity();" />
      <MemberSignature Language="F#" Value="member this.SetIdentity : unit -&gt; unit" Usage="matrix.SetIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="acac1-356">Changes this <see cref="T:System.Windows.Media.Matrix" /> structure into an identity matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-356">Changes this <see cref="T:System.Windows.Media.Matrix" /> structure into an identity matrix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-357">Une matrice d’identité a la valeur 1 dans les coefficients (1,1), (2,2), [3,3] et la valeur 0 dans le reste des coefficients.</span><span class="sxs-lookup"><span data-stu-id="acac1-357">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="acac1-358">Cela correspond au paramètre <xref:System.Windows.Media.Matrix.M11%2A> et <xref:System.Windows.Media.Matrix.M22%2A> 1 et <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, et <xref:System.Windows.Media.Matrix.OffsetY%2A> à 0.</span><span class="sxs-lookup"><span data-stu-id="acac1-358">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="acac1-359">Dans une matrice affine, qui est l’implémentation qui [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] utilise pour le <xref:System.Windows.Media.Matrix> de la structure, les coefficients [3,1], [3,2], [3,3] toujours ont respectivement les valeurs 0,0,1.</span><span class="sxs-lookup"><span data-stu-id="acac1-359">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="acac1-360">1</span><span class="sxs-lookup"><span data-stu-id="acac1-360">1</span></span>|<span data-ttu-id="acac1-361">0</span><span class="sxs-lookup"><span data-stu-id="acac1-361">0</span></span>|<span data-ttu-id="acac1-362">0</span><span class="sxs-lookup"><span data-stu-id="acac1-362">0</span></span>|  
|<span data-ttu-id="acac1-363">0</span><span class="sxs-lookup"><span data-stu-id="acac1-363">0</span></span>|<span data-ttu-id="acac1-364">1</span><span class="sxs-lookup"><span data-stu-id="acac1-364">1</span></span>|<span data-ttu-id="acac1-365">0</span><span class="sxs-lookup"><span data-stu-id="acac1-365">0</span></span>|  
|<span data-ttu-id="acac1-366">0</span><span class="sxs-lookup"><span data-stu-id="acac1-366">0</span></span>|<span data-ttu-id="acac1-367">0</span><span class="sxs-lookup"><span data-stu-id="acac1-367">0</span></span>|<span data-ttu-id="acac1-368">1</span><span class="sxs-lookup"><span data-stu-id="acac1-368">1</span></span>|  
  
 <span data-ttu-id="acac1-369">Pour une matrice d’identité, le <xref:System.Windows.Media.Matrix.ToString%2A> méthode retourne la chaîne « Identité », au lieu des coefficients de la <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="acac1-369">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity", instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-370">L’exemple suivant montre comment activer un <xref:System.Windows.Media.Matrix> structure dans une matrice d’identité.</span><span class="sxs-lookup"><span data-stu-id="acac1-370">The following example shows how to turn a <xref:System.Windows.Media.Matrix> structure into an identity matrix.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixIdentityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixidentityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Matrix.Identity" />
        <altmember cref="P:System.Windows.Media.Matrix.IsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Skew">
      <MemberSignature Language="C#" Value="public void Skew (double skewX, double skewY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Skew(float64 skewX, float64 skewY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Skew (skewX As Double, skewY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Skew(double skewX, double skewY);" />
      <MemberSignature Language="F#" Value="member this.Skew : double * double -&gt; unit" Usage="matrix.Skew (skewX, skewY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skewX" Type="System.Double" />
        <Parameter Name="skewY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="skewX">
          <span data-ttu-id="acac1-371">The angle in the x dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-371">The angle in the x dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </param>
        <param name="skewY">
          <span data-ttu-id="acac1-372">The angle in the y dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-372">The angle in the y dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-373">Appends a skew of the specified degrees in the x and y dimensions to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-373">Appends a skew of the specified degrees in the x and y dimensions to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-374">Cet exemple montre comment incliner un <xref:System.Windows.Media.Matrix> structure.</span><span class="sxs-lookup"><span data-stu-id="acac1-374">This example shows how to skew a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixSkewExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixskewexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SkewPrepend">
      <MemberSignature Language="C#" Value="public void SkewPrepend (double skewX, double skewY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkewPrepend(float64 skewX, float64 skewY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkewPrepend (skewX As Double, skewY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkewPrepend(double skewX, double skewY);" />
      <MemberSignature Language="F#" Value="member this.SkewPrepend : double * double -&gt; unit" Usage="matrix.SkewPrepend (skewX, skewY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skewX" Type="System.Double" />
        <Parameter Name="skewY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="skewX">
          <span data-ttu-id="acac1-375">The angle in the x dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-375">The angle in the x dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </param>
        <param name="skewY">
          <span data-ttu-id="acac1-376">The angle in the y dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-376">The angle in the y dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-377">Prepends a skew of the specified degrees in the x and y dimensions to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-377">Prepends a skew of the specified degrees in the x and y dimensions to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-378">Dans une transformation composite, l’ordre des différentes transformations est important.</span><span class="sxs-lookup"><span data-stu-id="acac1-378">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="acac1-379">Par exemple, si vous tout d’abord faire pivoter, mettre à l’échelle, puis traduisez, vous obtenez un résultat différent que si vous convertissez tout d’abord, faire pivoter, puis mettre à l’échelle.</span><span class="sxs-lookup"><span data-stu-id="acac1-379">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="acac1-380">Un ordre est important parce que les transformations comme la rotation et de mise à l’échelle s’effectuent par rapport à l’origine du système de coordonnées.</span><span class="sxs-lookup"><span data-stu-id="acac1-380">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="acac1-381">Mise à l’échelle d’un objet qui est centré à l’origine de produit le même résultat que la mise à l’échelle d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-381">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="acac1-382">De même, la rotation d’un objet qui est centré à l’origine produit le même résultat que la rotation d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-382">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-383">Cet exemple montre comment ajouter une inclinaison au début d’un <xref:System.Windows.Media.Matrix> structure.</span><span class="sxs-lookup"><span data-stu-id="acac1-383">This example shows how to prepend a skew to a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixSkewPrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixskewprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="acac1-384">The format to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-384">The format to use.</span>
          </span>
          <span data-ttu-id="acac1-385">-or-  A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-385">-or-  A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="acac1-386">The provider to use to format the value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-386">The provider to use to format the value.</span>
          </span>
          <span data-ttu-id="acac1-387">-or-  A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-387">-or-  A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-388">Formats the value of the current instance using the specified format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-388">Formats the value of the current instance using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-389">The value of the current instance in the specified format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-389">The value of the current instance in the specified format.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-390">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-390">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-391">Si cette <xref:System.Windows.Media.Matrix> structure est une matrice d’identité, la chaîne « Identité » est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="acac1-391">If this <xref:System.Windows.Media.Matrix> structure is an identity matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="matrix.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="acac1-392">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-392">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-393">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-393">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-394">Si cette <xref:System.Windows.Media.Matrix> est un <xref:System.Windows.Media.Matrix.Identity%2A> matrice, la chaîne « Identité » est retournée.</span><span class="sxs-lookup"><span data-stu-id="acac1-394">If this <xref:System.Windows.Media.Matrix> is an <xref:System.Windows.Media.Matrix.Identity%2A> matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="matrix.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="acac1-395">The culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-395">The culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-396">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure with culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-396">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure with culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-397">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-397">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-398">Si cette <xref:System.Windows.Media.Matrix> structure est une matrice d’identité, la chaîne « Identité » est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="acac1-398">If this <xref:System.Windows.Media.Matrix> structure is an identity matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="acac1-399">Transforms the specified point, array of points, vector, or array of vectors by this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-399">Transforms the specified point, array of points, vector, or array of vectors by this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-400">L’exemple suivant montre comment utiliser un <xref:System.Windows.Media.Matrix> pour transformer des points et les vecteurs.</span><span class="sxs-lookup"><span data-stu-id="acac1-400">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Point Transform (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point Transform(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point Transform(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Point -&gt; System.Windows.Point" Usage="matrix.Transform point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="acac1-401">The point to transform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-401">The point to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-402">Transforms the specified point by the <see cref="T:System.Windows.Media.Matrix" /> and returns the result.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-402">Transforms the specified point by the <see cref="T:System.Windows.Media.Matrix" /> and returns the result.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-403">The result of transforming <paramref name="point" /> by this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-403">The result of transforming <paramref name="point" /> by this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-404">L’exemple suivant montre comment utiliser un <xref:System.Windows.Media.Matrix> pour transformer des points et les vecteurs.</span><span class="sxs-lookup"><span data-stu-id="acac1-404">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Point[] -&gt; unit" Usage="matrix.Transform points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="acac1-405">The points to transform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-405">The points to transform.</span>
          </span>
          <span data-ttu-id="acac1-406">The original points in the array are replaced by their transformed values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-406">The original points in the array are replaced by their transformed values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-407">Transforms the specified points by this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-407">Transforms the specified points by this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-408">L’exemple suivant montre comment utiliser un <xref:System.Windows.Media.Matrix> pour transformer des points et les vecteurs.</span><span class="sxs-lookup"><span data-stu-id="acac1-408">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Transform (System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Vector Transform(valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Vector Transform(System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Vector -&gt; System.Windows.Vector" Usage="matrix.Transform vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector">
          <span data-ttu-id="acac1-409">The vector to transform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-409">The vector to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-410">Transforms the specified vector by this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-410">Transforms the specified vector by this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acac1-411">The result of transforming <paramref name="vector" /> by this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-411">The result of transforming <paramref name="vector" /> by this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-412">L’exemple suivant montre comment utiliser un <xref:System.Windows.Media.Matrix> pour transformer des points et les vecteurs.</span><span class="sxs-lookup"><span data-stu-id="acac1-412">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Vector[] vectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Vector[] vectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (vectors As Vector())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(cli::array &lt;System::Windows::Vector&gt; ^ vectors);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Vector[] -&gt; unit" Usage="matrix.Transform vectors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vectors" Type="System.Windows.Vector[]" />
      </Parameters>
      <Docs>
        <param name="vectors">
          <span data-ttu-id="acac1-413">The vectors to transform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-413">The vectors to transform.</span>
          </span>
          <span data-ttu-id="acac1-414">The original vectors in the array are replaced by their transformed values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-414">The original vectors in the array are replaced by their transformed values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-415">Transforms the specified vectors by this <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-415">Transforms the specified vectors by this <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-416">L’exemple suivant montre comment utiliser un <xref:System.Windows.Media.Matrix> pour transformer des points et les vecteurs.</span><span class="sxs-lookup"><span data-stu-id="acac1-416">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Translate : double * double -&gt; unit" Usage="matrix.Translate (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="acac1-417">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-417">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="acac1-418">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-418">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-419">Appends a translation of the specified offsets to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-419">Appends a translation of the specified offsets to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acac1-420">L’exemple suivant montre comment ajoute une traduction sur une <xref:System.Windows.Media.Matrix> structure.</span><span class="sxs-lookup"><span data-stu-id="acac1-420">The following example shows how append a translation onto a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTranslateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtranslateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="TranslatePrepend">
      <MemberSignature Language="C#" Value="public void TranslatePrepend (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslatePrepend(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslatePrepend (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslatePrepend(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.TranslatePrepend : double * double -&gt; unit" Usage="matrix.TranslatePrepend (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="acac1-421">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-421">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="acac1-422">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-422">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acac1-423">Prepends a translation of the specified offsets to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acac1-423">Prepends a translation of the specified offsets to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acac1-424">Dans une transformation composite, l’ordre des différentes transformations est important.</span><span class="sxs-lookup"><span data-stu-id="acac1-424">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="acac1-425">Par exemple, si vous tout d’abord faire pivoter, mettre à l’échelle, puis traduisez, vous obtenez un résultat différent que si vous convertissez tout d’abord, faire pivoter, puis mettre à l’échelle.</span><span class="sxs-lookup"><span data-stu-id="acac1-425">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="acac1-426">Un ordre est important parce que les transformations comme la rotation et de mise à l’échelle s’effectuent par rapport à l’origine du système de coordonnées.</span><span class="sxs-lookup"><span data-stu-id="acac1-426">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="acac1-427">Mise à l’échelle d’un objet qui est centré à l’origine de produit le même résultat que la mise à l’échelle d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-427">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="acac1-428">De même, la rotation d’un objet qui est centré à l’origine produit le même résultat que la rotation d’un objet qui a été déplacé en dehors de l’origine.</span><span class="sxs-lookup"><span data-stu-id="acac1-428">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acac1-429">L’exemple suivant montre comment ajoute qu’une traduction sur une <xref:System.Windows.Media.Matrix> structure.</span><span class="sxs-lookup"><span data-stu-id="acac1-429">The following example shows how prepend a translation onto a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTranslatePrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtranslateprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>