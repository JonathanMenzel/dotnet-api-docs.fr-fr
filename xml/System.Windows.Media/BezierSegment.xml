<Type Name="BezierSegment" FullName="System.Windows.Media.BezierSegment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="289d601f34a78fd5db5018f9e40be9f18ff1f579" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BezierSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BezierSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.BezierSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BezierSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class BezierSegment sealed : System::Windows::Media::PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="69252-101">Represents a cubic Bezier curve drawn between two points.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69252-101">Represents a cubic Bezier curve drawn between two points.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69252-102">Utilisez un <xref:System.Windows.Media.PathFigure> objet à stocker <xref:System.Windows.Media.BezierSegment> objets et les autres segments.</span><span class="sxs-lookup"><span data-stu-id="69252-102">Use a <xref:System.Windows.Media.PathFigure> object to store <xref:System.Windows.Media.BezierSegment> objects and other segments.</span></span>  
  
 <span data-ttu-id="69252-103">Une courbe de Bézier cubique est définie par quatre points : un point de départ, un point de terminaison (<xref:System.Windows.Media.BezierSegment.Point3%2A>), et deux points de contrôle (<xref:System.Windows.Media.BezierSegment.Point1%2A> et <xref:System.Windows.Media.BezierSegment.Point2%2A>). La <xref:System.Windows.Media.BezierSegment> classe ne contient pas une propriété pour le point de départ de la courbe ; elle définit uniquement le point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="69252-103">A cubic Bezier curve is defined by four points: a start point, an end point (<xref:System.Windows.Media.BezierSegment.Point3%2A>), and two control points (<xref:System.Windows.Media.BezierSegment.Point1%2A> and <xref:System.Windows.Media.BezierSegment.Point2%2A>).The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="69252-104">Le point de départ de la courbe est le point actuel de la <xref:System.Windows.Media.PathFigure> auquel le <xref:System.Windows.Media.BezierSegment> est ajouté.</span><span class="sxs-lookup"><span data-stu-id="69252-104">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="69252-105">Deux points de contrôle d’une courbe de Bézier cubique se comportent comme des aimants qui attirent des parties de ce qui devrait être une ligne droite vers eux et produisent une courbe.</span><span class="sxs-lookup"><span data-stu-id="69252-105">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="69252-106">Le premier point de contrôle, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affecte le début partie de la courbe ; le deuxième point de contrôle, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affecte la portion de fin de la courbe.</span><span class="sxs-lookup"><span data-stu-id="69252-106">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="69252-107">Notez que la courbe ne passe pas nécessairement par le biais de points de contrôle ; chaque point de contrôle déplace sa partie de la ligne vers lui-même, et non à travers lui-même.</span><span class="sxs-lookup"><span data-stu-id="69252-107">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
## <a name="freezable-features"></a><span data-ttu-id="69252-108">Fonctionnalités Freezable</span><span class="sxs-lookup"><span data-stu-id="69252-108">Freezable Features</span></span>  
 <span data-ttu-id="69252-109">A <xref:System.Windows.Media.BezierSegment> est un type de <xref:System.Windows.Freezable> objet.</span><span class="sxs-lookup"><span data-stu-id="69252-109">A <xref:System.Windows.Media.BezierSegment> is a type of <xref:System.Windows.Freezable> object.</span></span> <span data-ttu-id="69252-110">Pour plus d’informations sur <xref:System.Windows.Freezable> fonctionnalités, telles que le gel et le clonage, consultez le [vue d’ensemble des objets Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="69252-110">For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="69252-111">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-111">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69252-112">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-112">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69252-113">Une courbe de Bézier cubique est définie par quatre points : un point de départ, un point de terminaison (`point3`), et deux points de contrôle (`point1` et `point2`).</span><span class="sxs-lookup"><span data-stu-id="69252-113">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="69252-114">Cette méthode ne permet pas de spécifier le point de départ de la courbe ; la courbe commence au point actuel de la <xref:System.Windows.Media.PathFigure> objet auquel le <xref:System.Windows.Media.BezierSegment> est ajouté.</span><span class="sxs-lookup"><span data-stu-id="69252-114">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="69252-115">Deux points de contrôle d’une courbe de Bézier cubique se comportent comme des aimants qui attirent des parties de ce qui devrait être une ligne droite vers eux et produisent une courbe.</span><span class="sxs-lookup"><span data-stu-id="69252-115">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="69252-116">Le premier point de contrôle, `point1`, affecte le début partie de la courbe ; le deuxième point de contrôle, `point2`, affecte la portion de fin de la courbe.</span><span class="sxs-lookup"><span data-stu-id="69252-116">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="69252-117">Notez que la courbe ne passe pas nécessairement par le biais de points de contrôle ; chaque point de contrôle déplace sa partie de la ligne vers lui-même, et non à travers lui-même.</span><span class="sxs-lookup"><span data-stu-id="69252-117">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="69252-118">The first control point, which determines the beginning portion of the curve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-118">The first control point, which determines the beginning portion of the curve.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="69252-119">The second control point, which determines the ending portion of the curve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-119">The second control point, which determines the ending portion of the curve.</span>
          </span>
        </param>
        <param name="point3">
          <span data-ttu-id="69252-120">The point to which the curve is drawn.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-120">The point to which the curve is drawn.</span>
          </span>
        </param>
        <param name="isStroked">
          <span data-ttu-id="69252-121">
            <see langword="true" /> to stroke the curve when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-121">
              <see langword="true" /> to stroke the curve when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69252-122">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class with the specified control points, end point, and stroke option.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-122">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class with the specified control points, end point, and stroke option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69252-123">Une courbe de Bézier cubique est définie par quatre points : un point de départ, un point de terminaison (`point3`), et deux points de contrôle (`point1` et `point2`).</span><span class="sxs-lookup"><span data-stu-id="69252-123">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="69252-124">Cette méthode ne permet pas de spécifier le point de départ de la courbe ; la courbe commence au point actuel de la <xref:System.Windows.Media.PathFigure> objet auquel le <xref:System.Windows.Media.BezierSegment> est ajouté.</span><span class="sxs-lookup"><span data-stu-id="69252-124">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="69252-125">Deux points de contrôle d’une courbe de Bézier cubique se comportent comme des aimants qui attirent des parties de ce qui devrait être une ligne droite vers eux et produisent une courbe.</span><span class="sxs-lookup"><span data-stu-id="69252-125">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="69252-126">Le premier point de contrôle, `point1`, affecte le début partie de la courbe ; le deuxième point de contrôle, `point2`, affecte la portion de fin de la courbe.</span><span class="sxs-lookup"><span data-stu-id="69252-126">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="69252-127">Notez que la courbe ne passe pas nécessairement par le biais de points de contrôle ; chaque point de contrôle déplace sa partie de la ligne vers lui-même, et non à travers lui-même.</span><span class="sxs-lookup"><span data-stu-id="69252-127">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69252-128">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" />, making deep copies of this object's values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-128">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="69252-129">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-129">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69252-130">A modifiable clone of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-130">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="69252-131">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-131">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69252-132">Cette méthode est utilisée pour générer des copies modifiables de figé <xref:System.Windows.Freezable> objets (ou n’importe quel <xref:System.Windows.Freezable> objet).</span><span class="sxs-lookup"><span data-stu-id="69252-132">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="69252-133">Pour des raisons pratiques, cette méthode occulte la version héritée avec une implémentation fortement typée.</span><span class="sxs-lookup"><span data-stu-id="69252-133">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="69252-134">Pour plus d'informations, consultez <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="69252-134">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69252-135">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" /> object, making deep copies of this object's current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-135">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" /> object, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="69252-136">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-136">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69252-137">A modifiable clone of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-137">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="69252-138">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-138">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69252-139">Cette méthode est utilisée pour générer des copies modifiables de figé <xref:System.Windows.Freezable> objets (ou n’importe quel <xref:System.Windows.Freezable> objet).</span><span class="sxs-lookup"><span data-stu-id="69252-139">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="69252-140">Pour des raisons pratiques, cette méthode occulte la version héritée avec une implémentation fortement typée.</span><span class="sxs-lookup"><span data-stu-id="69252-140">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="69252-141">Pour plus d'informations, consultez <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="69252-141">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point1" />
      <MemberSignature Language="VB.NET" Value="Public Property Point1 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point1 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69252-142">Gets or sets the first control point of the curve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-142">Gets or sets the first control point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69252-143">Premier point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-143">The first control point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69252-144">Deux points de contrôle d’une courbe de Bézier cubique se comportent comme des aimants qui attirent des parties de ce qui devrait être une ligne droite vers eux et produisent une courbe.</span><span class="sxs-lookup"><span data-stu-id="69252-144">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="69252-145">Le premier point de contrôle, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affecte le début partie de la courbe ; le deuxième point de contrôle, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affecte la portion de fin de la courbe.</span><span class="sxs-lookup"><span data-stu-id="69252-145">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="69252-146">Notez que la courbe ne passe pas nécessairement par le biais de points de contrôle ; chaque point de contrôle déplace sa partie de la ligne vers lui-même, et non à travers lui-même.</span><span class="sxs-lookup"><span data-stu-id="69252-146">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point1"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="69252-147">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="69252-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="69252-148">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="69252-148">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point1Property>|  
|<span data-ttu-id="69252-149">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="69252-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="69252-150">Aucun</span><span class="sxs-lookup"><span data-stu-id="69252-150">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point1Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point1Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point1Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point1Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point1Property;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69252-151">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point1" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-151">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point1" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point2" />
      <MemberSignature Language="VB.NET" Value="Public Property Point2 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point2 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69252-152">Gets or sets the second control point of the curve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-152">Gets or sets the second control point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69252-153">Deuxième point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-153">The second control point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69252-154">Deux points de contrôle d’une courbe de Bézier cubique se comportent comme des aimants qui attirent des parties de ce qui devrait être une ligne droite vers eux et produisent une courbe.</span><span class="sxs-lookup"><span data-stu-id="69252-154">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="69252-155">Le premier point de contrôle, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affecte le début partie de la courbe ; le deuxième point de contrôle, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affecte la portion de fin de la courbe.</span><span class="sxs-lookup"><span data-stu-id="69252-155">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="69252-156">Notez que la courbe ne passe pas nécessairement par le biais de points de contrôle ; chaque point de contrôle déplace sa partie de la ligne vers lui-même, et non à travers lui-même.</span><span class="sxs-lookup"><span data-stu-id="69252-156">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point2"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="69252-157">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="69252-157">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="69252-158">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="69252-158">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point2Property>|  
|<span data-ttu-id="69252-159">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="69252-159">Metadata properties set to `true`</span></span>|<span data-ttu-id="69252-160">Aucun</span><span class="sxs-lookup"><span data-stu-id="69252-160">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point2Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point2Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point2Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point2Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point2Property;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69252-161">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point2" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-161">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point2" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point3" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point3" />
      <MemberSignature Language="VB.NET" Value="Public Property Point3 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point3 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69252-162">Gets or sets the end point of the curve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-162">Gets or sets the end point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69252-163">Point d’extrémité de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-163">The end point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69252-164">La <xref:System.Windows.Media.BezierSegment> classe ne contient pas une propriété pour le point de départ de la courbe ; elle définit uniquement le point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="69252-164">The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="69252-165">Le point de départ de la courbe est le point actuel de la <xref:System.Windows.Media.PathFigure> auquel le <xref:System.Windows.Media.BezierSegment> est ajouté.</span><span class="sxs-lookup"><span data-stu-id="69252-165">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
<a name="dependencyPropertyInfo_Point3"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="69252-166">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="69252-166">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="69252-167">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="69252-167">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point3Property>|  
|<span data-ttu-id="69252-168">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="69252-168">Metadata properties set to `true`</span></span>|<span data-ttu-id="69252-169">Aucun</span><span class="sxs-lookup"><span data-stu-id="69252-169">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point3Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point3Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point3Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point3Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point3Property;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69252-170">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point3" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69252-170">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point3" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>