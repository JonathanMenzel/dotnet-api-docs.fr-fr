<Type Name="BezierSegment" FullName="System.Windows.Media.BezierSegment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef68a8afc77a729d5d12d7ac9bdae62ac8e36107" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46658450" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BezierSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BezierSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.BezierSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BezierSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class BezierSegment sealed : System::Windows::Media::PathSegment" />
  <TypeSignature Language="F#" Value="type BezierSegment = class&#xA;    inherit PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ac540-101">Représente une courbe de Bézier cubique dessinée entre deux points.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac540-101">Represents a cubic Bezier curve drawn between two points.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac540-102">Utilisez un <xref:System.Windows.Media.PathFigure> objet à stocker <xref:System.Windows.Media.BezierSegment> objets et les autres segments.</span><span class="sxs-lookup"><span data-stu-id="ac540-102">Use a <xref:System.Windows.Media.PathFigure> object to store <xref:System.Windows.Media.BezierSegment> objects and other segments.</span></span>  
  
 <span data-ttu-id="ac540-103">Une courbe de Bézier cubique est définie par quatre points : un point de départ, un point de terminaison (<xref:System.Windows.Media.BezierSegment.Point3%2A>), et deux points de contrôle (<xref:System.Windows.Media.BezierSegment.Point1%2A> et <xref:System.Windows.Media.BezierSegment.Point2%2A>). Le <xref:System.Windows.Media.BezierSegment> classe ne contient pas une propriété pour le point de départ de la courbe ; elle définit uniquement le point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="ac540-103">A cubic Bezier curve is defined by four points: a start point, an end point (<xref:System.Windows.Media.BezierSegment.Point3%2A>), and two control points (<xref:System.Windows.Media.BezierSegment.Point1%2A> and <xref:System.Windows.Media.BezierSegment.Point2%2A>).The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="ac540-104">Le point de début de la courbe est le point actuel de la <xref:System.Windows.Media.PathFigure> auquel le <xref:System.Windows.Media.BezierSegment> est ajouté.</span><span class="sxs-lookup"><span data-stu-id="ac540-104">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="ac540-105">Deux points de contrôle d’une courbe de Bézier cubique se comportent comme des aimants qui attirent vers eux des parties de ce qui serait normalement une ligne droite vers eux et produisent une courbe.</span><span class="sxs-lookup"><span data-stu-id="ac540-105">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="ac540-106">Le premier point de contrôle, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affecte le début partie de la courbe ; le deuxième point de contrôle, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affecte la portion de fin de la courbe.</span><span class="sxs-lookup"><span data-stu-id="ac540-106">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="ac540-107">Notez que la courbe ne passe pas nécessairement par le biais de points de contrôle ; chaque point de contrôle déplace sa partie de la ligne vers lui-même, et non par le biais lui-même.</span><span class="sxs-lookup"><span data-stu-id="ac540-107">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
## <a name="freezable-features"></a><span data-ttu-id="ac540-108">Fonctionnalités Freezable</span><span class="sxs-lookup"><span data-stu-id="ac540-108">Freezable Features</span></span>  
 <span data-ttu-id="ac540-109">Un <xref:System.Windows.Media.BezierSegment> est un type de <xref:System.Windows.Freezable> objet.</span><span class="sxs-lookup"><span data-stu-id="ac540-109">A <xref:System.Windows.Media.BezierSegment> is a type of <xref:System.Windows.Freezable> object.</span></span> <span data-ttu-id="ac540-110">Pour plus d’informations sur <xref:System.Windows.Freezable> fonctionnalités, telles que le gel et le clonage, consultez le [vue d’ensemble des objets Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ac540-110">For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=159989">
      <span data-ttu-id="ac540-111">Géométries, exemple</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac540-111">Geometries Sample</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac540-112">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.BezierSegment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-112">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ac540-113">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.BezierSegment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-113">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac540-114">Une courbe de Bézier cubique est définie par quatre points : un point de départ, un point de terminaison (`point3`), et deux points de contrôle (`point1` et `point2`).</span><span class="sxs-lookup"><span data-stu-id="ac540-114">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="ac540-115">Cette méthode ne vous autorise pas à spécifier le point de début de la courbe ; la courbe commence au point actuel de la <xref:System.Windows.Media.PathFigure> objet vers lequel le <xref:System.Windows.Media.BezierSegment> est ajouté.</span><span class="sxs-lookup"><span data-stu-id="ac540-115">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="ac540-116">Deux points de contrôle d’une courbe de Bézier cubique se comportent comme des aimants qui attirent vers eux des parties de ce qui serait normalement une ligne droite vers eux et produisent une courbe.</span><span class="sxs-lookup"><span data-stu-id="ac540-116">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="ac540-117">Le premier point de contrôle, `point1`, affecte le début partie de la courbe ; le deuxième point de contrôle, `point2`, affecte la portion de fin de la courbe.</span><span class="sxs-lookup"><span data-stu-id="ac540-117">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="ac540-118">Notez que la courbe ne passe pas nécessairement par le biais de points de contrôle ; chaque point de contrôle déplace sa partie de la ligne vers lui-même, et non par le biais lui-même.</span><span class="sxs-lookup"><span data-stu-id="ac540-118">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.BezierSegment : System.Windows.Point * System.Windows.Point * System.Windows.Point * bool -&gt; System.Windows.Media.BezierSegment" Usage="new System.Windows.Media.BezierSegment (point1, point2, point3, isStroked)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="ac540-119">Premier point de contrôle, qui détermine la partie de début de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-119">The first control point, which determines the beginning portion of the curve.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="ac540-120">Deuxième point de contrôle, qui détermine la partie de fin de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-120">The second control point, which determines the ending portion of the curve.</span>
          </span>
        </param>
        <param name="point3">
          <span data-ttu-id="ac540-121">Point vers lequel la courbe est dessinée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-121">The point to which the curve is drawn.</span>
          </span>
        </param>
        <param name="isStroked">
          <span data-ttu-id="ac540-122">
            <see langword="true" /> pour rayer la courbe quand un <see cref="T:System.Windows.Media.Pen" /> est utilisé pour restituer le segment ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-122">
              <see langword="true" /> to stroke the curve when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac540-123">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.BezierSegment" /> avec les points de contrôle, le point de terminaison et l’option de trait spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-123">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class with the specified control points, end point, and stroke option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac540-124">Une courbe de Bézier cubique est définie par quatre points : un point de départ, un point de terminaison (`point3`), et deux points de contrôle (`point1` et `point2`).</span><span class="sxs-lookup"><span data-stu-id="ac540-124">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="ac540-125">Cette méthode ne vous autorise pas à spécifier le point de début de la courbe ; la courbe commence au point actuel de la <xref:System.Windows.Media.PathFigure> objet vers lequel le <xref:System.Windows.Media.BezierSegment> est ajouté.</span><span class="sxs-lookup"><span data-stu-id="ac540-125">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="ac540-126">Deux points de contrôle d’une courbe de Bézier cubique se comportent comme des aimants qui attirent vers eux des parties de ce qui serait normalement une ligne droite vers eux et produisent une courbe.</span><span class="sxs-lookup"><span data-stu-id="ac540-126">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="ac540-127">Le premier point de contrôle, `point1`, affecte le début partie de la courbe ; le deuxième point de contrôle, `point2`, affecte la portion de fin de la courbe.</span><span class="sxs-lookup"><span data-stu-id="ac540-127">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="ac540-128">Notez que la courbe ne passe pas nécessairement par le biais de points de contrôle ; chaque point de contrôle déplace sa partie de la ligne vers lui-même, et non par le biais lui-même.</span><span class="sxs-lookup"><span data-stu-id="ac540-128">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.BezierSegment" Usage="bezierSegment.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ac540-129">Crée un clone modifiable de ce <see cref="T:System.Windows.Media.BezierSegment" />, en créant des copies complètes des valeurs de cet objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-129">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="ac540-130">Pendant la copie des propriétés de dépendance, cette méthode copie les références de ressources et les liaisons de données (qui risquent toutefois de ne plus pouvoir se résoudre), mais pas les animations ni leurs valeurs actuelles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-130">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac540-131">Clone modifiable de l'objet actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-131">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="ac540-132">La propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l’objet cloné sera <see langword="false" />, même si la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source était <see langword="true." />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-132">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac540-133">Cette méthode est utilisée pour générer des copies modifiables de figé <xref:System.Windows.Freezable> objets (ou n’importe quel <xref:System.Windows.Freezable> objet).</span><span class="sxs-lookup"><span data-stu-id="ac540-133">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="ac540-134">Pour des raisons pratiques, cette méthode occulte la version héritée avec une implémentation fortement typée.</span><span class="sxs-lookup"><span data-stu-id="ac540-134">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="ac540-135">Pour plus d'informations, consultez <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ac540-135">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.BezierSegment" Usage="bezierSegment.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ac540-136">Crée un clone modifiable de cet objet <see cref="T:System.Windows.Media.BezierSegment" />, en effectuant une copie complète des valeurs actuelles de cet objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-136">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" /> object, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="ac540-137">Contrairement à leurs valeurs actuelles, les références de ressources, les liaisons de données et les animations ne sont pas copiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-137">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac540-138">Clone modifiable de l'objet actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-138">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="ac540-139">La valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l'objet cloné est <see langword="false" />, même si la valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source était <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-139">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac540-140">Cette méthode est utilisée pour générer des copies modifiables de figé <xref:System.Windows.Freezable> objets (ou n’importe quel <xref:System.Windows.Freezable> objet).</span><span class="sxs-lookup"><span data-stu-id="ac540-140">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="ac540-141">Pour des raisons pratiques, cette méthode occulte la version héritée avec une implémentation fortement typée.</span><span class="sxs-lookup"><span data-stu-id="ac540-141">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="ac540-142">Pour plus d'informations, consultez <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ac540-142">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="bezierSegment.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point1" />
      <MemberSignature Language="VB.NET" Value="Public Property Point1 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point1 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point1 : System.Windows.Point with get, set" Usage="System.Windows.Media.BezierSegment.Point1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac540-143">Obtient ou définit le premier point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-143">Gets or sets the first control point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ac540-144">Premier point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-144">The first control point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac540-145">Deux points de contrôle d’une courbe de Bézier cubique se comportent comme des aimants qui attirent vers eux des parties de ce qui serait normalement une ligne droite vers eux et produisent une courbe.</span><span class="sxs-lookup"><span data-stu-id="ac540-145">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="ac540-146">Le premier point de contrôle, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affecte le début partie de la courbe ; le deuxième point de contrôle, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affecte la portion de fin de la courbe.</span><span class="sxs-lookup"><span data-stu-id="ac540-146">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="ac540-147">Notez que la courbe ne passe pas nécessairement par le biais de points de contrôle ; chaque point de contrôle déplace sa partie de la ligne vers lui-même, et non par le biais lui-même.</span><span class="sxs-lookup"><span data-stu-id="ac540-147">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point1"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ac540-148">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="ac540-148">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ac540-149">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="ac540-149">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point1Property>|  
|<span data-ttu-id="ac540-150">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="ac540-150">Metadata properties set to `true`</span></span>|<span data-ttu-id="ac540-151">Aucun.</span><span class="sxs-lookup"><span data-stu-id="ac540-151">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point1Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point1Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point1Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point1Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point1Property;" />
      <MemberSignature Language="F#" Value=" staticval mutable Point1Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.BezierSegment.Point1Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac540-152">Identifie la propriété de dépendance <see cref="P:System.Windows.Media.BezierSegment.Point1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-152">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point1" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point2" />
      <MemberSignature Language="VB.NET" Value="Public Property Point2 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point2 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point2 : System.Windows.Point with get, set" Usage="System.Windows.Media.BezierSegment.Point2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac540-153">Obtient ou définit le deuxième point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-153">Gets or sets the second control point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ac540-154">Deuxième point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-154">The second control point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac540-155">Deux points de contrôle d’une courbe de Bézier cubique se comportent comme des aimants qui attirent vers eux des parties de ce qui serait normalement une ligne droite vers eux et produisent une courbe.</span><span class="sxs-lookup"><span data-stu-id="ac540-155">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="ac540-156">Le premier point de contrôle, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affecte le début partie de la courbe ; le deuxième point de contrôle, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affecte la portion de fin de la courbe.</span><span class="sxs-lookup"><span data-stu-id="ac540-156">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="ac540-157">Notez que la courbe ne passe pas nécessairement par le biais de points de contrôle ; chaque point de contrôle déplace sa partie de la ligne vers lui-même, et non par le biais lui-même.</span><span class="sxs-lookup"><span data-stu-id="ac540-157">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point2"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ac540-158">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="ac540-158">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ac540-159">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="ac540-159">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point2Property>|  
|<span data-ttu-id="ac540-160">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="ac540-160">Metadata properties set to `true`</span></span>|<span data-ttu-id="ac540-161">Aucun.</span><span class="sxs-lookup"><span data-stu-id="ac540-161">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point2Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point2Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point2Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point2Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point2Property;" />
      <MemberSignature Language="F#" Value=" staticval mutable Point2Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.BezierSegment.Point2Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac540-162">Identifie la propriété de dépendance <see cref="P:System.Windows.Media.BezierSegment.Point2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-162">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point2" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point3" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point3" />
      <MemberSignature Language="VB.NET" Value="Public Property Point3 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point3 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point3 : System.Windows.Point with get, set" Usage="System.Windows.Media.BezierSegment.Point3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac540-163">Obtient ou définit le point extrémité d’une courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-163">Gets or sets the end point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ac540-164">Point d’extrémité de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-164">The end point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac540-165">Le <xref:System.Windows.Media.BezierSegment> classe ne contient pas une propriété pour le point de départ de la courbe ; elle définit uniquement le point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="ac540-165">The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="ac540-166">Le point de début de la courbe est le point actuel de la <xref:System.Windows.Media.PathFigure> auquel le <xref:System.Windows.Media.BezierSegment> est ajouté.</span><span class="sxs-lookup"><span data-stu-id="ac540-166">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
<a name="dependencyPropertyInfo_Point3"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ac540-167">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="ac540-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ac540-168">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="ac540-168">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point3Property>|  
|<span data-ttu-id="ac540-169">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="ac540-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="ac540-170">Aucun.</span><span class="sxs-lookup"><span data-stu-id="ac540-170">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point3Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point3Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point3Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point3Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point3Property;" />
      <MemberSignature Language="F#" Value=" staticval mutable Point3Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.BezierSegment.Point3Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac540-171">Identifie la propriété de dépendance <see cref="P:System.Windows.Media.BezierSegment.Point3" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac540-171">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point3" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>