<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BitmapCache.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5aa2459498d7f6397af57a21d648de8ec248dcd93.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa2459498d7f6397af57a21d648de8ec248dcd93</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.BitmapCache">
          <source>Creates and caches a bitmap representation of a <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>.</source>
          <target state="translated">Crée et met en cache une représentation de bitmap d'un <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> class to improve rendering performance of a complex <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> classe pour améliorer les performances de rendu d’un type complexe <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> and assign it to the <ph id="ph2">&lt;xref:System.Windows.UIElement.CacheMode%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> to cache the element and its subtree as a bitmap in video memory.</source>
          <target state="translated">Créer un <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> et assignez-la à la <ph id="ph2">&lt;xref:System.Windows.UIElement.CacheMode%2A&gt;</ph> propriété d’un <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> pour mettre en cache l’élément et son sous-arbre sous forme de bitmap dans la mémoire vidéo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>This is useful when you need to animate, translate, or scale a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> as quickly as possible.</source>
          <target state="translated">Cela est utile lorsque vous devez animer, traduire ou mettre à l’échelle un <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> aussi rapidement que possible.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>This approach enables a tradeoff between performance and visual quality while content is cached.</source>
          <target state="translated">Cette approche permet un compromis entre performances et qualité visuelle pendant que le contenu est mis en cache.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> class to efficiently reuse a cached element.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> classe pour réutiliser efficacement un élément mis en cache.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property to scale the bitmap cache.</source>
          <target state="translated">Définir le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> propriété à l’échelle le cache de bitmap.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>This is useful if an element will be zoomed, and you want the element to render more clearly than it would if the cache were simply generated at the element’s native resolution.</source>
          <target state="translated">Cela est utile si un élément est un zoom avant, et que vous souhaitez que l’élément pour afficher plus clairement que c’est le cas si le cache était simplement généré à la résolution native de l’élément.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property when the cache displays content that requires pixel-alignment to render correctly, such as ClearType text.</source>
          <target state="translated">Définir le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> propriété lorsque le cache affiche un contenu qui requiert un alignement de pixels pour afficher correctement, tels que le texte ClearType.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>This property is ignored by the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Viewport2DVisual3D&gt;</ph> classes.</source>
          <target state="translated">Cette propriété est ignorée par le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Viewport2DVisual3D&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Caching a control does not affect mouse-over behavior, so mouse-over hit testing operates as if it the bitmap were a live control.</source>
          <target state="translated">Mise en cache d’un contrôle n’affecte pas le comportement de la souris, par conséquent, de la souris sur le test d’atteinte fonctionne comme s’il s’agissait de la bitmap un contrôle direct.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Cache regeneration occurs only when the structure of the <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> or its subtree changes, or when the <ph id="ph2">&lt;xref:System.Windows.Media.CacheMode&gt;</ph> settings change.</source>
          <target state="translated">Régénération de cache se produit uniquement lorsque la structure de la <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> ou sa sous-arborescence change, ou lorsque le <ph id="ph2">&lt;xref:System.Windows.Media.CacheMode&gt;</ph> modification des paramètres.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> properties causes cache regeneration.</source>
          <target state="translated">Définition de la <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> causes de propriétés la régénération de cache.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Changes to the parent visual tree of the cached <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, such as transforms, scales, opacities, and effects, do not affect the cache.</source>
          <target state="translated">Modifications apportées à l’arborescence visuelle du parent de la mise en cache <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, telles que les transformations, échelles, opacités et effets, n’affectent pas le cache.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>The cache functions when hardware acceleration is not available.</source>
          <target state="translated">Les fonctions de cache lorsque l’accélération matérielle n’est pas disponible.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>In this case, the bitmap is rendered in software, and the maximum bitmap dimensions are 2048 x 2048.</source>
          <target state="translated">Dans ce cas, l’image bitmap est rendu dans le logiciel et les dimensions de bitmap maximales sont 2048 x 2048.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.RenderOptions&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.TextOptions&gt;</ph> do not propagate through a cached element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.RenderOptions&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Media.TextOptions&gt;</ph> ne se propagent pas via un élément mis en cache.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>You may have to set these options again in child elements below the cache.</source>
          <target state="translated">Vous devrez peut-être définir ces options à nouveau dans les éléments enfants au-dessous du cache.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>The following XAML shows how to cache a <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> element.</source>
          <target state="translated">Le XAML suivant affiche comment mettre en cache un <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> élément.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>For the complete code example, see <bpt id="p1">[</bpt>How to: Improve Rendering Performance by Caching an Element<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md)</ept>.</source>
          <target state="translated">Pour l’exemple de code complet, consultez <bpt id="p1">[</bpt>Comment : améliorer les performances de rendu en mettant en cache un élément<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.BitmapCache">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.#ctor(System.Double)">
          <source>A double that scales the bitmap.</source>
          <target state="translated">Double qui met à l'échelle la bitmap.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.#ctor(System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> class with the specified scale.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> avec l'échelle spécifiée.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.BitmapCache.#ctor(System.Double)">
          <source>The following XAML shows how to create and assign a <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> to a <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> element.</source>
          <target state="translated">Le code XAML suivant montre comment créer et affecter un <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> à un <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> élément.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.BitmapCache.#ctor(System.Double)">
          <source>For the complete code example, see <bpt id="p1">[</bpt>How to: Improve Rendering Performance by Caching an Element<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md)</ept>.</source>
          <target state="translated">Pour l’exemple de code complet, consultez <bpt id="p1">[</bpt>Comment : améliorer les performances de rendu en mettant en cache un élément<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.Clone">
          <source>Creates a modifiable clone of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph>, making deep copies of the object's values.</source>
          <target state="translated">Crée un clone modifiable de <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph>, en créant des copies complètes des valeurs de l’objet.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.Clone">
          <source>When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</source>
          <target state="translated">Lors de la copie des propriétés de dépendance de l’objet, cette méthode copie les expressions (qui peuvent ne plus se résoudre), mais pas les animations ni leurs valeurs actuelles.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.Clone">
          <source>A modifiable clone of the current object.</source>
          <target state="translated">Clone modifiable de l'objet actif.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.Clone">
          <source>The cloned object's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph> even if the source's <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <ph id="ph4">&lt;see langword="true." /&gt;</ph></source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> de l’objet cloné est <ph id="ph2">&lt;see langword="false" /&gt;</ph>, même si la valeur de la propriété <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> de la source est <ph id="ph4">&lt;see langword="true." /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.CloneCurrentValue">
          <source>Creates a modifiable clone (deep copy) of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> using its current values.</source>
          <target state="translated">Crée un clone modifiable (copie complète) de <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> en utilisant ses valeurs actuelles.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.CloneCurrentValue">
          <source>A modifiable clone of the current object.</source>
          <target state="translated">Clone modifiable de l'objet actif.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.CloneCurrentValue">
          <source>The cloned object's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph> even if the source's <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <ph id="ph4">&lt;see langword="true." /&gt;</ph></source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> de l’objet cloné est <ph id="ph2">&lt;see langword="false" /&gt;</ph>, même si la valeur de la propriété <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> de la source est <ph id="ph4">&lt;see langword="true." /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>Gets or sets a value that indicates whether the bitmap is rendered with ClearType activated.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si la bitmap est restituée avec ClearType activé.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if ClearType is active; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si ClearType est actif ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property to allow ClearType text to be rendered in the cache.</source>
          <target state="translated">Définir le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> propriété pour autoriser le texte ClearType à être restitué dans le cache.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, your application must render all of its ClearType text on an opaque background.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> propriété est <ph id="ph2">`true`</ph>, votre application doit restituer tout son texte ClearType sur un arrière-plan opaque.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, text in the cache is rendered with grayscale antialiasing.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> propriété est <ph id="ph2">`false`</ph>, texte dans le cache est rendu avec anticrénelage de nuances de gris.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>ClearType text requires correct pixel alignment of rendered characters, so you should set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Texte ClearType requiert un alignement correct des pixels des caractères rendus, vous devez donc affecter la <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> propriété <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>If you do not set this property, the content may not blend correctly.</source>
          <target state="translated">Si vous ne définissez pas cette propriété, le contenu peut ne pas être fusionné correctement.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property when you know the cache is rendered on pixel boundaries, so it is safe to cache ClearType text.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> propriété lorsque vous savez que le cache est restituée sur les limites de pixel, donc il est possible de mettre en cache le texte ClearType.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>This situation occurs commonly in text-scrolling scenarios.</source>
          <target state="translated">Cette situation se produit généralement dans les scénarios de défilement de texte.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Windows.Media.BitmapCache.EnableClearTypeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Media.BitmapCache.EnableClearType" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Media.BitmapCache.EnableClearType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>Gets or sets a value that indicates the scale that is applied to the bitmap.</source>
          <target state="translated">Obtient ou définit une valeur qui indique l'échelle appliquée à la bitmap.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>The scale that is applied to the bitmap.</source>
          <target state="translated">Échelle appliquée à la bitmap.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>The default is 1.</source>
          <target state="translated">La valeur par défaut est 1.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property to render the <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> at a multiple of the normal bitmap size.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> propriété pour restituer le <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> à un multiple de la taille de bitmap normale.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>The normal size is determined by the local size of the element.</source>
          <target state="translated">La taille normale est déterminée par la taille locale de l’élément.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>Values greater than 1 increase the resolution of the bitmap relative to the native resolution of the element, and values less than 1 decrease the resolution.</source>
          <target state="translated">Les valeurs supérieures à 1 augmentent la résolution de l’image bitmap par rapport à la résolution native de l’élément et les valeurs inférieures à 1 diminuent la résolution.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property is set to 2.0, and you apply a scale transform that enlarges the content by a factor of 2, the content will have the same visual quality as the same content with <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> set to 1.0 and a transform scale of 1.</source>
          <target state="translated">Par exemple, si le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> est définie sur 2.0 et que vous appliquez une transformation d’échelle qui agrandit le contenu selon un facteur de 2, le contenu aura la même qualité visuelle que le même contenu avec <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> 1.0 et une échelle de transformation de 1 la valeur.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> is set to 0, no bitmap is rendered.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> a la valeur 0, aucune bitmap n’est restituée.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>Negative values are clamped to 0.</source>
          <target state="translated">Les valeurs négatives sont ancrées à 0.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>If you change this value, the cache is regenerated at the appropriate new resolution.</source>
          <target state="translated">Si vous modifiez cette valeur, le cache est régénéré à la nouvelle résolution appropriée.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>The following images show how the same content appears for different values of the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property.</source>
          <target state="translated">Les images suivantes montrent comment le même contenu apparaît pour différentes valeurs de la <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">**</bpt>RenderAtScale = 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>RenderAtScale = 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 1<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-1.png "</bpt>RenderAtScale = 1<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 1<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-1.png "</bpt>RenderAtScale = 1<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">**</bpt>RenderAtScale = 0.5<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>RenderAtScale = 0,5<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 0.5<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale05.png "</bpt>RenderAtScale = 0.5<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 0,5<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale05.png "</bpt>RenderAtScale = 0,5<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">**</bpt>RenderAtScale = 0.2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>RenderAtScale = 0,2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 0.2<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale02.png "</bpt>RenderAtScale = 0.2<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 0,2<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale02.png "</bpt>RenderAtScale = 0,2<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>The following image shows a zoom transform that is applied to an ancestor of the cached element.</source>
          <target state="translated">L’illustration suivante montre une transformation zoom qui est appliquée à un ancêtre de l’élément mis en cache.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>When the zoom is set to 1 and <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> is set to 1, the image quality is almost the same as when <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> is set to 2.</source>
          <target state="translated">Lorsque le zoom est défini sur 1 et <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> est définie sur 1, la qualité d’image est pratiquement le même que lorsque <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> est défini sur 2.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>But when zoom is greater than 1, setting <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> to 2 will have better image quality.</source>
          <target state="translated">Mais lorsque le zoom est supérieur à 1, le paramètre <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> 2 sera meilleure qualité d’image.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">**</bpt>RenderAtScale = 1.0<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>RenderAtScale = 1.0<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 1.0<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-10.png "</bpt>RenderAtScale = 1.0<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 1.0<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-10.png "</bpt>RenderAtScale = 1.0<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">**</bpt>RenderAtScale = 2.0<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>RenderAtScale = 2.0<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 2.0<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-20.png "</bpt>RenderAtScale = 2.0<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 2.0<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-20.png "</bpt>RenderAtScale = 2.0<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="F:System.Windows.Media.BitmapCache.RenderAtScaleProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Media.BitmapCache.RenderAtScale" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Media.BitmapCache.RenderAtScale" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>Gets or sets a value that indicates whether the bitmap is rendered with pixel snapping.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si la bitmap est restituée avec l'alignement des pixels.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if pixel snapping is active; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'alignement des pixels est actif ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property when the cache displays content that requires pixel-alignment to render correctly.</source>
          <target state="translated">Définir le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> propriété lorsque le cache affiche un contenu qui requiert un alignement de pixels restituer correctement.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>This is the case for ClearType text.</source>
          <target state="translated">C’est le cas pour le texte ClearType.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, consider setting <ph id="ph3">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> to <ph id="ph4">`true`</ph> to ensure proper rendering.</source>
          <target state="translated">Si vous définissez la <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> propriété <ph id="ph2">`true`</ph>, envisagez d’affecter <ph id="ph3">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> à <ph id="ph4">`true`</ph> pour garantir la qualité du rendu.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, you can move and scale the cached element by a fraction of a pixel, and bilinear filtering is applied.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> est définie sur <ph id="ph2">`false`</ph>, vous pouvez déplacer et mettre à l’échelle de l’élément mis en cache par une fraction d’un pixel, et le filtrage bilinéaire est appliqué.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the bitmap cache is aligned with pixel boundaries of the destination.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> est définie sur <ph id="ph2">`true`</ph>, le cache de bitmap est aligné avec les limites en pixels de la destination.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>If you move or scale the cached element by a fraction of a pixel, the bitmap snaps to the pixel grid.</source>
          <target state="translated">Si vous déplacez ou mettre à l’échelle de l’élément mis en cache par une fraction d’un pixel, la bitmap s’aligne sur la grille de pixels.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>In this case, the top-left corner of the bitmap is rounded up and snapped to the pixel grid, but the bottom-right corner is on a fractional pixel boundary.</source>
          <target state="translated">Dans ce cas, l’angle supérieur gauche de la bitmap est arrondi par excès et aligné sur la grille de pixels, mais l’angle inférieur droit se trouve sur une limite de pixel de fractions de seconde.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property is ignored by <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> and when used with a <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Viewport2DVisual3D&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> propriété est ignorée par <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> et lorsqu’il est utilisé avec un <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Viewport2DVisual3D&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="F:System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>