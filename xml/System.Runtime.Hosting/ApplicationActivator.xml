<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ApplicationActivator.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac509e881a31fa9ec7f6e692c1d532cec070a27ae58.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09e881a31fa9ec7f6e692c1d532cec070a27ae58</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Provides the base class for the activation of manifest-based assemblies.</source>
          <target state="translated">Fournit la classe de base pour l'activation d'assemblys basés sur un manifeste.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>There is a single designated instance of the <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> class in each <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> to which all activation calls are routed.</source>
          <target state="translated">Il existe une instance désignée de la <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> classe dans chaque <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> à activation tous les appels sont routés.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainManager&gt;</ph> for the current <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> can provide its own custom <ph id="ph3">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> for this purpose.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.AppDomainManager&gt;</ph> pour actuel <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> peut fournir sa propre valeur personnalisée <ph id="ph3">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> à cet effet.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>If a custom <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> is not provided, an instance of the default <ph id="ph2">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> is created.</source>
          <target state="translated">Si une personnalisée <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> n’est pas fourni, une instance de la valeur par défaut <ph id="ph2">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> est créé.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The following steps describe the behavior of the default <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A&gt;</ph> method implementation:</source>
          <target state="translated">Les étapes suivantes décrivent le comportement de la valeur par défaut <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A&gt;</ph> implémentation de méthode :</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Checks if the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> of the add-in to be activated matches the <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph> of the current domain; if not, proceeds to step 2.</source>
          <target state="translated">Vérifie si le <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> du complément à activer correspond la <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph> actuelles domaine ; sinon, passe à l’étape 2.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Otherwise, executes the assembly and returns the result wrapped in an object handle.</source>
          <target state="translated">Sinon, exécute l’assembly et retourne le résultat encapsulé dans un handle d’objet.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Activates the add-in in a new <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">Active le complément dans un nouveau <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The following steps are taken to initialize a new <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> using the <ph id="ph2">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> for the add-in.</source>
          <target state="translated">Les étapes suivantes sont effectuées pour initialiser une nouvelle <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> à l’aide de la <ph id="ph2">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> pour le complément.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Creates a new <ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph> object using an <ph id="ph2">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> object containing the activation context for the add-in.</source>
          <target state="translated">Crée un nouveau <ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph> à l’aide de l’objet une <ph id="ph2">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> objet contenant le contexte d’activation pour le complément.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Calls the <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> method to create a new domain using the <ph id="ph2">&lt;xref:System.AppDomainSetup&gt;</ph> object.</source>
          <target state="translated">Appelle le <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> méthode pour créer un nouveau domaine à l’aide du <ph id="ph2">&lt;xref:System.AppDomainSetup&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=nameWithType&gt;</ph> method to acquire an <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> object for the add-in.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> les appels de méthode le <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=nameWithType&gt;</ph> méthode pour acquérir un <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> objet pour le complément.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>If the <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A&gt;</ph> property returns <ph id="ph2">`true`</ph>, the add-in is executed.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A&gt;</ph> propriété renvoie <ph id="ph2">`true`</ph>, le complément est exécuté.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>If not, <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> throws a <ph id="ph2">&lt;xref:System.Security.Policy.PolicyException&gt;</ph> indicating that execution permission could not be acquired.</source>
          <target state="translated">Si ce n’est pas le cas, <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> lève un <ph id="ph2">&lt;xref:System.Security.Policy.PolicyException&gt;</ph> indiquant que l’autorisation d’exécution ne peut pas être acquis.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>If the add-in is trusted to run, then a new <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> is created and configured for the <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph> of the add-in, and the add-in is loaded and executed.</source>
          <target state="translated">Si le complément est approuvé pour exécution, puis une nouvelle <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> est créé et configuré pour le <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph> du complément, et le complément est chargé et exécuté.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The result of the activation of the add-in is returned, wrapped in an object handle.</source>
          <target state="translated">Le résultat de l’activation de la macro complémentaire est retourné, encapsulé dans un handle d’objet.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>A custom activator can tailor the activation of an add-in to a particular set of circumstances.</source>
          <target state="translated">Un activateur personnalisé peut adapter l’activation d’un complément à un ensemble spécifique de circonstances.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>For example, a custom activator could find an existing <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> to activate this add-in instead of creating a new domain every time.</source>
          <target state="translated">Par exemple, un activateur personnalisé a trouvé un existant <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> pour activer ce complément au lieu de créer un nouveau domaine à chaque fois.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The following steps describe the behavior of a custom <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> that activates an add-in in an existing <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>:</source>
          <target state="translated">Les étapes suivantes décrivent le comportement de personnalisé <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> qui active un complément dans existant <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The custom activator finds a domain that has the same <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> as the add-in that is being activated.</source>
          <target state="translated">L’activateur personnalisé recherche un domaine qui a le même <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> que le complément est en cours d’activation.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>If the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> has never been seen before in the process, the custom activator creates a new <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> for this <ph id="ph3">&lt;xref:System.ActivationContext&gt;</ph> by calling the <ph id="ph4">&lt;xref:System.AppDomain.CreateDomain%2A&gt;</ph> method directly, or delegating this activity to the <ph id="ph5">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> in the base class.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> n’a jamais été rencontré auparavant dans le processus, l’activateur personnalisé crée un <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> pour ce <ph id="ph3">&lt;xref:System.ActivationContext&gt;</ph> en appelant le <ph id="ph4">&lt;xref:System.AppDomain.CreateDomain%2A&gt;</ph> directement la méthode, ou en déléguant cette activité à le <ph id="ph5">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> dans la classe de base.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>If there is an existing domain with the same <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>, then the activator can delegate the <ph id="ph2">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A&gt;</ph> method call to the <ph id="ph3">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> in the target domain.</source>
          <target state="translated">S’il existe un domaine existant avec le même <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>, puis l’activateur peut déléguer la <ph id="ph2">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A&gt;</ph> appel de méthode à la <ph id="ph3">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> dans le domaine cible.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Note that this would be a cross-domain call to an <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> that resides in the target <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">Notez que cela aurait un appel entre domaines à un <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> qui réside dans la cible <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The following code example shows how to obtain an <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> object from the current <ph id="ph2">&lt;xref:System.AppDomain.DomainManager%2A&gt;</ph> for a manifest-based application.</source>
          <target state="translated">L’exemple de code suivant montre comment obtenir un <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> objet depuis le <ph id="ph2">&lt;xref:System.AppDomain.DomainManager%2A&gt;</ph> pour une application basée sur un manifeste.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Hosting.ApplicationActivator" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Runtime.Hosting.ApplicationActivator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Creates an instance of the application to be activated, using an activation context that identifies the application.</source>
          <target state="translated">Crée une instance de l'application à activer, à l'aide d'un contexte d'activation qui identifie l'application.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> that identifies the application to activate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> qui identifie l'application à activer.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)">
          <source>Creates an instance of the application to be activated, using the specified activation context.</source>
          <target state="translated">Crée une instance de l'application à activer, à l'aide du contexte d'activation spécifié.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjectHandle" /&gt;</ph> that is a wrapper for the return value of the application execution.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjectHandle" /&gt;</ph> qui est un wrapper de la valeur de retour de l'exécution de l'application.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)">
          <source>The return value must be unwrapped to access the real object.</source>
          <target state="translated">La valeur de retour doit être désencapsulée pour accéder à l'objet réel.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)">
          <source>This method is intended for the manifest-based activation of applications.</source>
          <target state="translated">Cette méthode est conçue pour l’activation basée sur un manifeste d’applications.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)">
          <source><ph id="ph1">&lt;paramref name="activationContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationContext" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> that identifies the application to activate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> qui identifie l'application à activer.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>Custom activation data.</source>
          <target state="translated">Données d'activation personnalisées.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>Creates an instance of the application to be activated, using the specified activation context  and custom activation data.</source>
          <target state="translated">Crée une instance de l’application à activer, à l’aide du contexte d’activation et des données d’activation personnalisées spécifiés.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjectHandle" /&gt;</ph> that is a wrapper for the return value of the application execution.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjectHandle" /&gt;</ph> qui est un wrapper de la valeur de retour de l'exécution de l'application.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>The return value must be unwrapped to access the real object.</source>
          <target state="translated">La valeur de retour doit être désencapsulée pour accéder à l'objet réel.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>This method is intended for the manifest-based activation of applications.</source>
          <target state="translated">Cette méthode est conçue pour l’activation basée sur un manifeste d’applications.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>The activation data consists of information such as the query string portion of a URL.</source>
          <target state="translated">Les données d’activation se comprennent d’informations, telles que la portion de chaîne de requête d’une URL.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source><ph id="ph1">&lt;paramref name="activationContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationContext" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> object whose <ph id="ph2">&lt;see cref="P:System.AppDomainSetup.ActivationArguments" /&gt;</ph> property identifies the application to activate.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> dont la propriété <ph id="ph2">&lt;see cref="P:System.AppDomainSetup.ActivationArguments" /&gt;</ph> identifie l'application à activer.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>Creates an instance of an application using the specified <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> object.</source>
          <target state="translated">Crée une instance d'une application à l'aide de l'objet <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjectHandle" /&gt;</ph> that is a wrapper for the return value of the application execution.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjectHandle" /&gt;</ph> qui est un wrapper de la valeur de retour de l'exécution de l'application.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>The return value must be unwrapped to access the real object.</source>
          <target state="translated">La valeur de retour doit être désencapsulée pour accéder à l'objet réel.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>This method is intended for the manifest-based activation of applications.</source>
          <target state="translated">Cette méthode est conçue pour l’activation basée sur un manifeste d’applications.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>The <ph id="ph1">&lt;see cref="P:System.AppDomainSetup.ActivationArguments" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="adSetup" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.AppDomainSetup.ActivationArguments" /&gt;</ph> de <ph id="ph2">&lt;paramref name="adSetup" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>The application instance failed to execute because the policy settings on the current application domain do not provide permission for this application to run.</source>
          <target state="translated">L'exécution de l'instance de l'application a échoué car les paramètres de stratégie sur le domaine d'application actuel ne fournissent pas d'autorisation pour l'exécution de cette application.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>