<Type Name="TextAutomationPeer" FullName="System.Windows.Automation.Peers.TextAutomationPeer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c71982b51ecbac2311d069ffb831a318f19e43d3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39785598" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextAutomationPeer : System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextAutomationPeer extends System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Peers.TextAutomationPeer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextAutomationPeer&#xA;Inherits FrameworkElementAutomationPeer" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextAutomationPeer abstract : System::Windows::Automation::Peers::FrameworkElementAutomationPeer" />
  <TypeSignature Language="F#" Value="type TextAutomationPeer = class&#xA;    inherit FrameworkElementAutomationPeer" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.Peers.FrameworkElementAutomationPeer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Expose les types <see cref="T:System.Windows.Automation.TextPattern" /> à UI Automation.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextAutomationPeer (System.Windows.FrameworkElement owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.FrameworkElement owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.TextAutomationPeer.#ctor(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextAutomationPeer(System::Windows::FrameworkElement ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Automation.Peers.TextAutomationPeer : System.Windows.FrameworkElement -&gt; System.Windows.Automation.Peers.TextAutomationPeer" Usage="new System.Windows.Automation.Peers.TextAutomationPeer owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Windows.Automation.TextPattern" /> associé à ce <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNameCore">
      <MemberSignature Language="C#" Value="protected override string GetNameCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetNameCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.TextAutomationPeer.GetNameCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetNameCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetNameCore();" />
      <MemberSignature Language="F#" Value="override this.GetNameCore : unit -&gt; string" Usage="textAutomationPeer.GetNameCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient l'étiquette de texte de l'élément associé à ce <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" />. Appelée par <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
        <returns>Valeur de <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> ou <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> si l'un ou l'autre est défini ; sinon, cette méthode retourne une chaîne vide.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propriété name peut être considérée comme la chaîne de texte un utilisateur utiliserait pour expliquer le contrôle qui est fait référence. Il est important de disposer d’une représentation textuelle pour tous les contrôles dans le [!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)] afin que vous pouvez faire référence par programmation au contrôle de manière localisée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>