<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Table`1.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58f2e2c57717f41b8415d2d08b9d484756b3b8509.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f2e2c57717f41b8415d2d08b9d484756b3b8509</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>The type of the data in the table.</source>
          <target state="translated">Type des données contenues dans la table.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Represents a table for a particular type in the underlying database.</source>
          <target state="translated">Représente une table pour un type particulier dans la base de données sous-jacente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>This class enables you to query over the table and add, remove, and attach objects.</source>
          <target state="translated">Cette classe vous permet de requête sur la table et ajouter, supprimer et joindre des objets.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>An application can access a <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance via <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph> or by using a strongly typed property for the strongly typed <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Une application peut accéder à un <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance via <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph> ou à l’aide d’une propriété fortement typée pour fortement typé <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>That is, when the designer generates a DataContext object, it generates properties to represent each Table.</source>
          <target state="translated">Autrement dit, lorsque le concepteur génère un objet DataContext, il génère des propriétés pour représenter chaque Table.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For example:</source>
          <target state="translated">Exemple :</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For this strongly typed DataContext, you can access the Users property to get <ph id="ph1">`Table&lt;User&gt;`</ph>.</source>
          <target state="translated">Pour ce DataContext fortement typé, vous pouvez accéder à la propriété d’utilisateurs à obtenir <ph id="ph1">`Table&lt;User&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</source>
          <target state="translated">Attache une entité à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Use the <ph id="ph1">`Attach`</ph> methods with entities that have been created in one <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, serialized to a client, and then deserialized back (with the intention to perform an update or delete operation).</source>
          <target state="translated">Utilisez le <ph id="ph1">`Attach`</ph> méthodes avec des entités qui ont été créées dans un <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, sérialisées vers un client, puis désérialisé (avec l’intention d’effectuer une mise à jour ou suppression).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>récupération des données et opérations CUD dans les Applications multicouches (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Do not try to <ph id="ph1">`Attach`</ph> an entity that has not been detached through serialization.</source>
          <target state="translated">N’essayez pas de <ph id="ph1">`Attach`</ph> une entité qui n’a pas été détachée via la sérialisation.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Entities that have not been serialized still maintain associations with deferred loaders that can cause unexpected results if the entity becomes tracked by a second data context.</source>
          <target state="translated">Les entités qui n’ont pas été sérialisées tout en conservant des associations avec des chargeurs différés qui peuvent entraîner des résultats inattendus si l’entité est suivie par un second contexte de données.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Lorsqu’une nouvelle entité est attachée, les chargeurs différés de toutes les collections enfants (par exemple, <ph id="ph1">`EntitySet`</ph> collections d’entités provenant de tableaux associés) sont initialisés.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> est appelée, les membres de l’enfant de collections sont placées dans un <ph id="ph2">`Unmodified`</ph> état.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Pour mettre à jour les membres d’une collection d’enfants, vous devez appeler explicitement <ph id="ph1">`Attach`</ph> et spécifier cette entité.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source><ph id="ph1">`Attach`</ph> attaches all entities in the object graph of the provided object.</source>
          <target state="translated"><ph id="ph1">`Attach`</ph> attache toutes les entités dans le graphique d’objets de l’objet fourni.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For example, the following C# code:</source>
          <target state="translated">Par exemple, le code c# suivant :</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>The equivalent Visual Basic code is:</source>
          <target state="translated">Le code Visual Basic équivalent est :</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Calling <ph id="ph1">`Attach`</ph> on <ph id="ph2">`Employee`</ph> attaches employee, master, and child, because the <ph id="ph3">`Employee`</ph> has relationships to both master and child.</source>
          <target state="translated">Appel de <ph id="ph1">`Attach`</ph> sur <ph id="ph2">`Employee`</ph> joint employé, maître et enfant, car le <ph id="ph3">`Employee`</ph> des relations avec maître et enfant.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>You must explicitly call <ph id="ph1">`InsertOnSubmit`</ph> to change the state from attached to inserted.</source>
          <target state="translated">Vous devez appeler explicitement <ph id="ph1">`InsertOnSubmit`</ph> pour modifier l’état d’attaché en inséré.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>The original values of the entity to be attached.</source>
          <target state="translated">Valeurs d'origine de l'entité à attacher.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Attaches a disconnected or "detached" entity to a new <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> when original values are required for optimistic concurrency checks.</source>
          <target state="translated">Attache une entité déconnectée ou détachée à une nouvelle classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> lorsque les valeurs d'origine sont requises pour permettre les contrôles d'accès concurrentiels.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Use the <ph id="ph1">`Attach`</ph> methods with entities that have been created in one <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, serialized to a client, and then deserialized back to perform an update or delete operation.</source>
          <target state="translated">Utilisez le <ph id="ph1">`Attach`</ph> méthodes avec des entités qui ont été créées dans un <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, sérialisées vers un client, puis désérialisées dans pour effectuer une mise à jour ou de l’opération de suppression.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Because the new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> has no way of tracking what the original values were for a disconnected entity, the client is responsible for supplying those values.</source>
          <target state="translated">Étant donné que la nouvelle <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> n’a aucun moyen de connaître les valeurs d’origine d’une entité déconnectée, le client est chargé de fournir ces valeurs.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>In this version of <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.Attach%2A&gt;</ph>, the entity is assumed to be in its original value state.</source>
          <target state="translated">Dans cette version de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.Attach%2A&gt;</ph>, l’entité est supposée pour être dans son état d’origine.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>After calling this method, you can then update its fields, for example with additional data sent from the client.</source>
          <target state="translated">Après avoir appelé cette méthode, vous pouvez ensuite mettre à jour ses champs, par exemple avec d’autres données sont envoyées à partir du client.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Lorsqu’une nouvelle entité est attachée, les chargeurs différés de toutes les collections enfants (par exemple, <ph id="ph1">`EntitySet`</ph> collections d’entités provenant de tableaux associés) sont initialisés.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> est appelée, les membres de l’enfant de collections sont placées dans un <ph id="ph2">`Unmodified`</ph> état.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Pour mettre à jour les membres d’une collection d’enfants, vous devez appeler explicitement <ph id="ph1">`Attach`</ph> et spécifier cette entité.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>récupération des données et opérations CUD dans les Applications multicouches (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Do not try to <ph id="ph1">`Attach`</ph> an entity that has not been detached through serialization.</source>
          <target state="translated">N’essayez pas de <ph id="ph1">`Attach`</ph> une entité qui n’a pas été détachée via la sérialisation.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Entities that have not been serialized still maintain associations with deferred loaders that can cause unexpected results if the entity becomes tracked by a second data context.</source>
          <target state="translated">Les entités qui n’ont pas été sérialisées tout en conservant des associations avec des chargeurs différés qui peuvent entraîner des résultats inattendus si l’entité est suivie par un second contexte de données.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>The entity to be attached.</source>
          <target state="translated">Entité à attacher.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attach the entity as modified; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to attach the entity as unmodified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour joindre une entité comme étant modifiée ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour joindre une entité comme étant non modifiée.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Attache une entité à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> dans un état modifié ou non modifié.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>If attaching <bpt id="p1">*</bpt>as modified<ept id="p1">*</ept>, the entity must either declare a version member or must not participate in update conflict checking.</source>
          <target state="translated">Si l’attachement <bpt id="p1">*</bpt>modifiée<ept id="p1">*</ept>, l’entité doit soit déclarer un membre de version ou ne pas prendre part dans la vérification de conflits de mise à jour.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Lorsqu’une nouvelle entité est attachée, les chargeurs différés de toutes les collections enfants (par exemple, <ph id="ph1">`EntitySet`</ph> collections d’entités provenant de tableaux associés) sont initialisés.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> est appelée, les membres de l’enfant de collections sont placées dans un <ph id="ph2">`Unmodified`</ph> état.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Pour mettre à jour les membres d’une collection d’enfants, vous devez appeler explicitement <ph id="ph1">`Attach`</ph> et spécifier cette entité.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>The entity to be attached.</source>
          <target state="translated">Entité à attacher.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>An instance of the same entity type with data members that contain the original values.</source>
          <target state="translated">Instance du même type d'entité avec des membres de données contenant les valeurs d'origine.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state by specifying both the entity and its original state.</source>
          <target state="translated">Attache une entité à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> dans un état modifié ou non modifié en spécifiant à la fois l'entité et son état d'origine.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>In the following example, the <ph id="ph1">`Customer`</ph> object is already correctly configured.</source>
          <target state="translated">Dans l’exemple suivant, la <ph id="ph1">`Customer`</ph> objet est déjà configuré correctement.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>You can call <ph id="ph1">`Attach`</ph> without having to replay the updates.</source>
          <target state="translated">Vous pouvez appeler <ph id="ph1">`Attach`</ph> sans avoir à relire les mises à jour.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Lorsqu’une nouvelle entité est attachée, les chargeurs différés de toutes les collections enfants (par exemple, <ph id="ph1">`EntitySet`</ph> collections d’entités provenant de tableaux associés) sont initialisés.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> est appelée, les membres de l’enfant de collections sont placées dans un <ph id="ph2">`Unmodified`</ph> état.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Pour mettre à jour les membres d’une collection d’enfants, vous devez appeler explicitement <ph id="ph1">`Attach`</ph> et spécifier cette entité.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Attache toutes les entités d'une collection à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> dans un état modifié ou non modifié.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>If attaching as modified, the entity must either declare a version member or must not participate in update conflict checking.</source>
          <target state="translated">Si vous attachez comme modifiée, l’entité doit soit déclarer un membre de version ou ne doit pas participer à la vérification de conflits de mise à jour.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Lorsqu’une nouvelle entité est attachée, les chargeurs différés de toutes les collections enfants (par exemple, <ph id="ph1">`EntitySet`</ph> collections d’entités provenant de tableaux associés) sont initialisés.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> est appelée, les membres de l’enfant de collections sont placées dans un <ph id="ph2">`Unmodified`</ph> état.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Pour mettre à jour les membres d’une collection d’enfants, vous devez appeler explicitement <ph id="ph1">`Attach`</ph> et spécifier cette entité.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>récupération des données et opérations CUD dans les Applications multicouches (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of entities to attach.</source>
          <target state="translated">Type d'entités à joindre.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The collection of entities.</source>
          <target state="translated">Collection d'entités.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Attache toutes les entités d'une collection à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> dans un état modifié ou non modifié.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This method attaches all entities of a collection to a new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Cette méthode attache toutes les entités d’une collection à un nouveau <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Lorsqu’une nouvelle entité est attachée, les chargeurs différés de toutes les collections enfants (par exemple, <ph id="ph1">`EntitySet`</ph> collections d’entités provenant de tableaux associés) sont initialisés.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> est appelée, les membres de l’enfant de collections sont placées dans un <ph id="ph2">`Unmodified`</ph> état.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Pour mettre à jour les membres d’une collection d’enfants, vous devez appeler explicitement <ph id="ph1">`Attach`</ph> et spécifier cette entité.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>récupération des données et opérations CUD dans les Applications multicouches (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The type of entities to attach.</source>
          <target state="translated">Type d'entités à joindre.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The collection of entities.</source>
          <target state="translated">Collection d'entités.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object has a timestamp or RowVersion member; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if original values are being used for the optimistic concurrency check.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet est horodaté ou dispose d'un membre RowVersion ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si les valeurs d'origine sont utilisées pour le contrôle d'accès concurrentiel.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Attache toutes les entités d'une collection à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> dans un état modifié ou non modifié.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>This method attaches all entities of a collection to the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> in either a <bpt id="p1">*</bpt>modified<ept id="p1">*</ept> or <bpt id="p2">*</bpt>unmodified<ept id="p2">*</ept> state.</source>
          <target state="translated">Cette méthode attache toutes les entités d’une collection à le <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> , que ce soit un <bpt id="p1">*</bpt>modifié<ept id="p1">*</ept> ou <bpt id="p2">*</bpt>non modifié<ept id="p2">*</ept> état.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>If attaching as modified, the entity must either declare a version member or must not participate in update conflict checking.</source>
          <target state="translated">Si vous attachez comme modifiée, l’entité doit soit déclarer un membre de version ou ne doit pas participer à la vérification de conflits de mise à jour.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>If attaching as unmodified, the entity is assumed to represent the original value.</source>
          <target state="translated">Si vous attachez comme non modifié, l’entité est supposée pour représenter la valeur d’origine.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>After calling this method, the entity's fields can be modified with other information from the client before <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Après avoir appelé cette méthode, les champs de l’entité peuvent être modifiés avec d’autres informations à partir du client avant <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>récupération des données et opérations CUD dans les Applications multicouches (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Lorsqu’une nouvelle entité est attachée, les chargeurs différés de toutes les collections enfants (par exemple, <ph id="ph1">`EntitySet`</ph> collections d’entités provenant de tableaux associés) sont initialisés.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> est appelée, les membres de l’enfant de collections sont placées dans un <ph id="ph2">`Unmodified`</ph> état.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Pour mettre à jour les membres d’une collection d’enfants, vous devez appeler explicitement <ph id="ph1">`Attach`</ph> et spécifier cette entité.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The following example shows how you can update an <ph id="ph1">`Order`</ph> object on a different <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance.</source>
          <target state="translated">L’exemple suivant montre comment vous pouvez mettre à jour un <ph id="ph1">`Order`</ph> objet sur un autre <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The example assumes that you have a connection to a database and have made a <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> file for it (in this case, the Northwind sample database).</source>
          <target state="translated">L’exemple part du principe que vous disposez d’une connexion à une base de données et bénéficient d’un <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> fichier (dans ce cas, il s’agit de la base de données Northwind).</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>In the following example, an entity object to be attached has a foreign key relation with another object and is stored in the cache but not attached.</source>
          <target state="translated">Dans l’exemple suivant, un objet d’entité à attacher a une relation de clé étrangère avec un autre objet et est stocké dans le cache mais pas attaché.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>, the <ph id="ph2">`ChangeProcessor`</ph> adds an <ph id="ph3">`Insert`</ph> operation for all the foreign key objects.</source>
          <target state="translated">Lorsque vous appelez <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>, le <ph id="ph2">`ChangeProcessor`</ph> ajoute une <ph id="ph3">`Insert`</ph> opération pour tous les objets de clé étrangères.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>This is a side-effect when an entity instance is re-used in a different <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance.</source>
          <target state="translated">Il s’agit d’un effet secondaire quand une instance d’entité est réutilisée dans une autre <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>For this reason, <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support re-use of objects.</source>
          <target state="translated">Pour cette raison, <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> ne prend pas en charge la réutilisation d’objets.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The following example shows a scenario in which Customer A has canceled all orders and Customer B has taken ownership of them.</source>
          <target state="translated">L’exemple suivant montre un scénario dans lequel le client A a annulé toutes les commandes et client B a pris possession.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>You can attach all orders of Customer A at the same time.</source>
          <target state="translated">Vous pouvez attacher toutes les commandes du client A en même temps.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.Context">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> that has been used to retrieve this <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</source>
          <target state="translated">Obtient l'objet <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> qui a été utilisé pour récupérer <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.Context">
          <source>The data context that has been used to retrieve this table.</source>
          <target state="translated">Contexte de données qui a été utilisé pour récupérer cette table.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements to delete.</source>
          <target state="translated">Type des éléments à supprimer.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The entities to delete.</source>
          <target state="translated">Entités à supprimer.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Puts all entities from the collection into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Place toutes les entités de la collection dans un état <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Entities that are put into the pending delete state with this method do not disappear from query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Les entités qui sont placées dans l’état de la suppression en attente avec cette méthode ne disparaissent pas de résultats de la requête jusqu'à ce qu’après <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Disconnected entities must be attached before they can be deleted.</source>
          <target state="translated">Les entités déconnectées doivent être attachées avant de pouvoir être supprimées.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>récupération des données et opérations CUD dans les Applications multicouches (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following C# snippet shows one use for this method:</source>
          <target state="translated">L’extrait de code c# suivant illustre une utilisation de cette méthode :</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>In Visual Basic:</source>
          <target state="translated">En Visual Basic :</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>The entity to be deleted.</source>
          <target state="translated">Entité à supprimer.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>Puts an entity from this table into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Place une entité de cette table dans un état <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>The removed entity does not disappear from the query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">L’entité supprimée ne disparaît pas les résultats de requête qu’après <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>Disconnected entities must first be attached before they can be deleted.</source>
          <target state="translated">Entités déconnectées doivent tout d’abord être connectées avant de pouvoir être supprimées.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>récupération des données et opérations CUD dans les Applications multicouches (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support or recognize cascade-delete operations.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> ne prend pas en charge ni ne reconnaît les opérations de suppression en cascade.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>If you want to delete a row in a table that has constraints against it, you must either set the <ph id="ph1">`ON DELETE CASCADE`</ph> rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted.</source>
          <target state="translated">Si vous souhaitez supprimer une ligne dans une table comportant des contraintes par rapport à elle, vous devez définir le <ph id="ph1">`ON DELETE CASCADE`</ph> de règle dans la contrainte de clé étrangère dans la base de données, ou utiliser votre propre code pour supprimer en premier les objets enfants qui empêchent la suppression de l’objet parent.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>Otherwise, an exception is thrown.</source>
          <target state="translated">Sinon, une exception est levée.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetEnumerator">
          <source>Gets an enumerator that iterates through the collection.</source>
          <target state="translated">Obtient un énumérateur qui itère au sein de la collection.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Énumérateur permettant d'effectuer une itération au sein de la collection.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetModifiedMembers(`0)">
          <source>The entity from which to get the array.</source>
          <target state="translated">Entité à partir de laquelle obtenir le tableau.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetModifiedMembers(`0)">
          <source>Returns an array of modified members that contain their current and original values.</source>
          <target state="translated">Retourne un tableau de membres modifiés contenant leurs valeurs actuelles et d'origine.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetModifiedMembers(`0)">
          <source>An array of modified members that contain their current and original values.</source>
          <target state="translated">Tableau de membres modifiés contenant leurs valeurs actuelles et d'origine.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetNewBindingList">
          <source>Creates a new list for binding to a data source.</source>
          <target state="translated">Crée une nouvelle liste pour la liaison à une source de données.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetNewBindingList">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.IBindingList" /&gt;</ph> for binding to a data source.</source>
          <target state="translated">Un nouveau <ph id="ph1">&lt;see cref="T:System.ComponentModel.IBindingList" /&gt;</ph> pour une liaison à une source de données.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetNewBindingList">
          <source>The returned list supports standard operations, such as additions, deletions, insertions, and updates, but saves must be explicitly managed by the programmer.</source>
          <target state="translated">La liste retournée prend en charge des opérations standards, telles que les ajouts, les suppressions, les insertions et les mises à jour, mais enregistre doit être gérées explicitement par le programmeur.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>The entity whose original state is to be returned.</source>
          <target state="translated">Entité dont l'état d'origine est à retourner.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> instance that contains the original state of the entity.</source>
          <target state="translated">Retourne une instance <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> qui contient l'état d'origine de l'entité.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> instance that contains the original state of the entity.</source>
          <target state="translated">Instance <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> qui contient l'état d'origine de l'entité.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>This method returns the original state of an entity since it was either created or attached to the current <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne l’état d’origine d’une entité, car elle a été créée ou attachée au actuel <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>The original state of an entity that has been serialized and deserialized must be provided by an independent tracking mechanism and supplied when the entity is attached to a new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">L’état d’origine d’une entité qui a été sérialisée et désérialisée doit être fourni par un mécanisme de traçage indépendant et fourni lors de l’entité est attachée à un nouveau <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>récupération des données et opérations CUD dans les Applications multicouches (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements to insert.</source>
          <target state="translated">Type des éléments à insérer.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The entities to add.</source>
          <target state="translated">Entités à ajouter.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Adds all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in a <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph> state.</source>
          <target state="translated">Ajoute toutes les entités d'une collection à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> dans un état <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The added entities will not be in query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> has been called.</source>
          <target state="translated">Les entités ajoutées ne sera pas dans les résultats de la requête jusqu'à ce qu’après <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> a été appelée.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertOnSubmit(`0)">
          <source>The entity to be added.</source>
          <target state="translated">Entité à ajouter.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertOnSubmit(`0)">
          <source>Adds an entity in a <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> state to this <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute une entité dans un état <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> à <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.InsertOnSubmit(`0)">
          <source>The added entity will not appear in query results from this table until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> has been called.</source>
          <target state="translated">L’entité ajoutée n’apparaître pas dans les résultats de la requête à partir de cette table jusqu'à ce qu’après <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> a été appelée.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.IsReadOnly">
          <source>Gets a value that indicates whether the type of the entities contained in this <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> instance has a primary key.</source>
          <target state="translated">Obtient une valeur qui indique si le type des entités contenues dans cette instance <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> dispose d'une clé primaire.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the entity type does not have a primary key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Retourne la valeur <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le type d'entité ne dispose pas d'une clé primaire ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable&amp;lt;TEntity&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein de la collection.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable&amp;lt;TEntity&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Énumérateur permettant d'effectuer une itération au sein de la collection.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein de la collection.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Énumérateur permettant d'effectuer une itération au sein de la collection.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>Gets a value that indicates whether the collection is a collection of <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects.</source>
          <target state="translated">Obtient une valeur qui indique si la collection est une collection d'objets <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is a collection of <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la collection est une collection d'objets <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source from an object that does not implement an <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> itself.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> pouvant être lié à une source de données à partir d'un objet qui, lui-même, n'implémente pas <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> qui peut être lié à une source de données.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Allows deserialized entities to be associated with a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> so that they can be updated or deleted from the database.</source>
          <target state="translated">Permet aux entités désérialisées d'être associées à une nouvelle instance d'une classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> afin de pouvoir être mises à jour ou supprimées de la base de données.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>The entity to be attached.</source>
          <target state="translated">Entité à attacher.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in an unmodified state.</source>
          <target state="translated">Attache une entité à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> dans un état non modifié.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>The entity to be attached.</source>
          <target state="translated">Entité à attacher.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attach the entity as modified; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to attached the entity as unmodified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour joindre l'entité comme étant modifiée ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour joindre l'entité comme étant non modifiée.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Attache toutes les entités d'une collection à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> dans un état modifié ou non modifié.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>The entity to be attached.</source>
          <target state="translated">Entité à attacher.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>An instance of the same entity type with data members that contain the original values.</source>
          <target state="translated">Instance du même type d'entité avec des membres de données contenant les valeurs d'origine.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state by specifying both the entity and its original state.</source>
          <target state="translated">Attache une entité à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> dans un état modifié ou non modifié en spécifiant à la fois l'entité et son état d'origine.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Attache toutes les entités d'une collection à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> dans un état modifié ou non modifié.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>The collection of entities to be attached.</source>
          <target state="translated">Collection d'entités à joindre.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Attache toutes les entités d'une collection à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> dans un état modifié ou non modifié.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>The collection of entities to be attched.</source>
          <target state="translated">Collection d'entités à joindre.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attach the entities as modified; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to attach the entities as unmodified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour joindre des entités comme étant modifiées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour joindre des entités comme étant non modifiées.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Attache toutes les entités d'une collection à la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> dans un état modifié ou non modifié.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>The entities being removed.</source>
          <target state="translated">Entités en cours de suppression.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>Puts all entities from the collection into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Place toutes les entités de la collection dans un état <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>The entity to be removed.</source>
          <target state="translated">Entité à supprimer.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>Puts an entity from this table into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Place une entité de cette table dans un état <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support or recognize cascade-delete operations.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> ne prend pas en charge ni ne reconnaît les opérations de suppression en cascade.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>If you want to delete a row in a table that has constraints against it, you must either set the <ph id="ph1">`ON DELETE CASCADE`</ph> rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted.</source>
          <target state="translated">Si vous souhaitez supprimer une ligne dans une table comportant des contraintes par rapport à elle, vous devez définir le <ph id="ph1">`ON DELETE CASCADE`</ph> de règle dans la contrainte de clé étrangère dans la base de données, ou utiliser votre propre code pour supprimer en premier les objets enfants qui empêchent la suppression de l’objet parent.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>Otherwise, an exception is thrown.</source>
          <target state="translated">Sinon, une exception est levée.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>The entity from which to obtain the modified members.</source>
          <target state="translated">Entité à partir de laquelle obtenir les membres modifiés.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>Returns an array of modified members that contain their current and original values.</source>
          <target state="translated">Retourne un tableau de membres modifiés contenant leurs valeurs actuelles et d'origine.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>An array of modified members.</source>
          <target state="translated">Tableau de membres modifiés.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>The entity whose original state is to be accessed.</source>
          <target state="translated">Entité dont l'état d'origine est accessible.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>Retrieves original values of a given entity.</source>
          <target state="translated">Extrait les valeurs d'origine d'une entité donnée.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>A copy of the original entity.</source>
          <target state="translated">Copie de l'entité d'origine.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>The collection of entities to be added.</source>
          <target state="translated">Collection d'entités à ajouter.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>Adds all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in an <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph> state.</source>
          <target state="translated">Ajoute toutes les entités d'une collection au <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> à l'état <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>The entity to add.</source>
          <target state="translated">Entité à ajouter.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>Adds an entity in a <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> state to this table.</source>
          <target state="translated">Ajoute une entité dans un état <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> à cette table.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>Gets the type of the element(s) that are returned when the expression tree associated with this object is executed.</source>
          <target state="translated">Obtient le type des éléments retournés lors de l'exécution de l'arborescence d'expression associée à cet objet.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>The type of the element(s) that are returned when the expression tree associated with this object is executed.</source>
          <target state="translated">Type des éléments retournés lors de l'exécution de l'arborescence d'expression associée à cet objet.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>Gets the expression tree that is associated with this instance of <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</source>
          <target state="translated">Obtient l'arborescence d'expression associée à cette instance de <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> that is associated with this instance of <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> associée à cette instance de l'interface <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>Gets the query provider that is associated with this data source.</source>
          <target state="translated">Obtient le fournisseur de requêtes associé à cette source de données.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryProvider" /&gt;</ph> that is associated with this data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IQueryProvider" /&gt;</ph> associé à cette source de données.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>The query expression from which the evaluation is performed.</source>
          <target state="translated">Expression de requête dont l'évaluation est exécutée.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>Constructs an <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> object that can evaluate the query represented by a specified expression tree.</source>
          <target state="translated">Construit un objet <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> capable d'évaluer la requête représentée par une arborescence d'expression spécifiée.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> that can evaluate the query represented by the specified expression tree.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> capable d'évaluer la requête représentée par l'arborescence d'expression spécifiée.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>The type of the data in the table.</source>
          <target state="translated">Type des données contenues dans la table.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>The query expression from which the evaluation is performed.</source>
          <target state="translated">Expression de requête dont l'évaluation est exécutée.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>Constructs an <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> object that can evaluate the query represented by a specified expression tree.</source>
          <target state="translated">Construit un objet <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> capable d'évaluer la requête représentée par une arborescence d'expression spécifiée.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> that can evaluate the query represented by the specified expression tree.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> capable d'évaluer la requête représentée par l'arborescence d'expression spécifiée.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>The query expression to execute.</source>
          <target state="translated">Expression de requête à exécuter.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>Executes the query represented by a specified expression tree.</source>
          <target state="translated">Exécute la requête représentée par une arborescence d'expression spécifiée.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>The value that results from executing the specified query.</source>
          <target state="translated">Valeur qui résulte de l'exécution de la requête spécifiée.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>The type of the data in the table.</source>
          <target state="translated">Type des données contenues dans la table.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>The query expression to execute.</source>
          <target state="translated">Expression de requête à exécuter.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>Executes the strongly-typed query represented by a specified expression tree.</source>
          <target state="translated">Exécute la requête fortement typée représentée par une arborescence d'expression spécifiée.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>The value that results from executing the specified query.</source>
          <target state="translated">Valeur qui résulte de l'exécution de la requête spécifiée.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.ToString">
          <source>Returns a string that represents the table.</source>
          <target state="translated">Retourne une chaîne qui représente la table.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.ToString">
          <source>A string representation of the table.</source>
          <target state="translated">Représentation sous forme de chaîne du tableau.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>