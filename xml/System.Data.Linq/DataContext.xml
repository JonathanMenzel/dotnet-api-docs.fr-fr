<Type Name="DataContext" FullName="System.Data.Linq.DataContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="614bf8b628b9e044f43fb12a554abe74af90df70" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34174260" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContext : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0d022-101">Représente le point d’entrée principal de l’infrastructure LINQ to SQL.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d022-101">Represents the main entry point for the LINQ to SQL framework.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-102">Le <xref:System.Data.Linq.DataContext> est la source de toutes les entités sont mappées sur une connexion de base de données.</span><span class="sxs-lookup"><span data-stu-id="0d022-102">The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection.</span></span> <span data-ttu-id="0d022-103">Suivi des modifications que vous avez apportées à toutes les entités récupérées et maintient un « cache d’identité » qui garantit que les entités récupérées plusieurs fois est représentées par à l’aide de la même instance d’objet.</span><span class="sxs-lookup"><span data-stu-id="0d022-103">It tracks changes that you made to all retrieved entities and maintains an "identity cache" that guarantees that entities retrieved more than one time are represented by using the same object instance.</span></span>  
  
 <span data-ttu-id="0d022-104">En règle générale, un <xref:System.Data.Linq.DataContext> instance est conçue pour avoir un « unité de travail » toutefois votre application définit ce terme.</span><span class="sxs-lookup"><span data-stu-id="0d022-104">In general, a <xref:System.Data.Linq.DataContext> instance is designed to last for one "unit of work" however your application defines that term.</span></span> <span data-ttu-id="0d022-105">A <xref:System.Data.Linq.DataContext> est léger et n’est pas difficile à créer.</span><span class="sxs-lookup"><span data-stu-id="0d022-105">A <xref:System.Data.Linq.DataContext> is lightweight and is not expensive to create.</span></span> <span data-ttu-id="0d022-106">Par défaut [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application crée <xref:System.Data.Linq.DataContext> instances au niveau de la portée de la méthode ou en tant que membre des classes de courte durée de vie qui représentent un ensemble logique de liées des opérations de base de données.</span><span class="sxs-lookup"><span data-stu-id="0d022-106">A typical [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application creates <xref:System.Data.Linq.DataContext> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-107">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-107">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span>
          </span>
          <span data-ttu-id="0d022-108">La chaîne de connexion que vous utilisez peut être une chaîne de connexion ADO.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-108">The connection string you use can be an ADO.NET connection string.</span>
          </span>
          <span data-ttu-id="0d022-109">Vous pouvez également spécifier un nom de fichier pour un fichier SQL Server Express ou SQL Server Compact.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-109">You can also specify a filename to a SQL Server Express or SQL Server Compact file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="0d022-110">Connexion utilisée par le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-110">The connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-111">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Linq.DataContext" /> en référençant la connexion utilisée par le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-111">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing the connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-112">A <xref:System.Data.Linq.DataContext> s’ouvre et ferme une connexion de base de données en fonction des besoins si vous fournissez une connexion fermée ou une chaîne de connexion.</span><span class="sxs-lookup"><span data-stu-id="0d022-112">A <xref:System.Data.Linq.DataContext> opens and closes a database connection as needed if you provide a closed connection or a connection string.</span></span> <span data-ttu-id="0d022-113">En règle générale, vous ne devriez jamais avoir à appeler `Dispose` sur un <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="0d022-113">In general, you should never have to call `Dispose` on a <xref:System.Data.Linq.DataContext>.</span></span> <span data-ttu-id="0d022-114">Si vous fournissez une connexion ouverte, la <xref:System.Data.Linq.DataContext> fermera pas.</span><span class="sxs-lookup"><span data-stu-id="0d022-114">If you provide an open connection, the <xref:System.Data.Linq.DataContext> will not close it.</span></span> <span data-ttu-id="0d022-115">Par conséquent, n’instanciez pas un <xref:System.Data.Linq.DataContext> avec une connexion ouverte, sauf si vous avez une bonne raison à cela.</span><span class="sxs-lookup"><span data-stu-id="0d022-115">Therefore, do not instantiate a <xref:System.Data.Linq.DataContext> with an open connection unless you have a good reason to do this.</span></span> <span data-ttu-id="0d022-116">Dans un <xref:System.Transactions> transaction, un <xref:System.Data.Linq.DataContext> ne sera pas ouvrir ou fermer une connexion pour éviter la promotion.</span><span class="sxs-lookup"><span data-stu-id="0d022-116">In a <xref:System.Transactions> transaction, a <xref:System.Data.Linq.DataContext> will not open or close a connection to avoid promotion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="0d022-117">Connexion utilisée par le .NET Framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-117">The connection used by the .NET Framework.</span>
          </span>
        </param>
        <param name="mapping">
          <span data-ttu-id="0d022-118">Source pour le mappage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-118">A source for mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-119">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Linq.DataContext" /> en référençant une connexion et une source de mappage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-119">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a connection and a mapping source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection">
          <span data-ttu-id="0d022-120">Cet argument peut être l’une des options suivantes : le nom d’un fichier contenant une base de données SQL Server Express.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-120">This argument can be any one of the following:  The name of a file where a SQL Server Express database resides.</span>
          </span>
          <span data-ttu-id="0d022-121">le nom d'un serveur où une base de données est présente ;</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-121">The name of a server where a database is present.</span>
          </span>
          <span data-ttu-id="0d022-122">dans ce cas le fournisseur utilise la base de données par défaut d'un utilisateur ;</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-122">In this case the provider uses the default database for a user.</span>
          </span>
          <span data-ttu-id="0d022-123">Chaîne de connexion complète.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-123">A complete connection string.</span>
          </span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="0d022-124"> passe simplement la chaîne au fournisseur sans modification.</span><span class="sxs-lookup"><span data-stu-id="0d022-124"> just passes the string to the provider without modification.</span></span></param>
        <param name="mapping">
          <span data-ttu-id="0d022-125">Source pour le mappage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-125">A source for mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-126">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Linq.DataContext" /> en référençant une source de fichier et une source de mappage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-126">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source and a mapping source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public DataContext (string connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection">To be added.</param>
        <param name="connectionString">To be added.</param>
        <summary>
          <span data-ttu-id="0d022-127">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Linq.DataContext" /> en référençant une source de fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-127">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeConflicts">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeConflictCollection ChangeConflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.ChangeConflictCollection ChangeConflicts" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeConflicts As ChangeConflictCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::ChangeConflictCollection ^ ChangeConflicts { System::Data::Linq::ChangeConflictCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeConflictCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-128">Obtient une collection des objets qui ont provoqué des conflits d'accès concurrentiel lors de l'appel à <see cref="M:System.Data.Linq.DataContext.SubmitChanges" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-128">Gets a collection of objects that caused concurrency conflicts when <see cref="M:System.Data.Linq.DataContext.SubmitChanges" /> was called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d022-129">Collection d'objets qui ont provoqué des conflits d'accès concurrentiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-129">A collection of objects that caused concurrency conflicts.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-130">L’exemple suivant montre comment la collection peut être itérée pour récupérer des informations sur les conflits.</span><span class="sxs-lookup"><span data-stu-id="0d022-130">The following example shows how the collection can be iterated over to retrieve conflict information.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-131">Obtient ou définit une valeur entière qui augmente le délai d'attente pour les requêtes qui, sinon, expireraient pendant le délai d'attente par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-131">Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d022-132">Valeur entière qui augmente le délai d'attente pour les requêtes qui, sinon, expireraient pendant le délai d'attente par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-132">An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-133">Cette propriété obtient ou définit le délai d’expiration de commande utilisé pour exécuter les commandes générées (`IDbCommands`).</span><span class="sxs-lookup"><span data-stu-id="0d022-133">This property gets or sets the command time-out used to execute generated commands (`IDbCommands`).</span></span> <span data-ttu-id="0d022-134">Pour plus d'informations, consultez <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d022-134">For more information, see <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span></span>  
  
 <span data-ttu-id="0d022-135">Lorsque cette propriété est non définie, la valeur par défaut de <xref:System.Data.IDbCommand.CommandTimeout%2A> est utilisé pour l’exécution de commande de requête.</span><span class="sxs-lookup"><span data-stu-id="0d022-135">When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution.</span></span> <span data-ttu-id="0d022-136">Cette valeur par défaut est définie par le fournisseur de stockage.</span><span class="sxs-lookup"><span data-stu-id="0d022-136">This default value is set by the storage provider.</span></span> <span data-ttu-id="0d022-137">Notez que certains fournisseurs peuvent lever des exceptions si cette valeur est définie sur une valeur différente de zéro.</span><span class="sxs-lookup"><span data-stu-id="0d022-137">Note that some providers may throw exceptions if this value is set to a non-zero value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ Connection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-138">Obtient la connexion utilisée par l'infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-138">Gets the connection used by the framework.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d022-139">Connexion utilisée par l'infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-139">The connection used by the framework.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-140">Vous pouvez utiliser cette propriété pour interagir avec le code ADO.NET relationnel.</span><span class="sxs-lookup"><span data-stu-id="0d022-140">You can use this property to interoperate with relational ADO.NET code.</span></span>  
  
 <span data-ttu-id="0d022-141">La connexion retournée va être fermée, sauf si elle a été ouverte explicitement par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="0d022-141">The returned connection will be closed unless it has been explicitly opened by the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDatabase();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d022-142">Crée une base de données sur le serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-142">Creates a database on the server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-143">Le nom de la base de données est dérivé à l’aide de l’algorithme suivant :</span><span class="sxs-lookup"><span data-stu-id="0d022-143">The name of the database is derived by using the following algorithm:</span></span>  
  
1. <span data-ttu-id="0d022-144">Si une base de données est identifiée dans la chaîne de connexion, son nom est utilisé.</span><span class="sxs-lookup"><span data-stu-id="0d022-144">If a database is identified in the connection string, its name is used.</span></span>  
1. <span data-ttu-id="0d022-145">Si un <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribut est présent, sa <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> propriété est utilisée en tant que le nom de la base de données.</span><span class="sxs-lookup"><span data-stu-id="0d022-145">If a <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribute is present, its <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> property is used as the name of the database.</span></span>  
1. <span data-ttu-id="0d022-146">S’il n’existe aucune balise de base de données dans la chaîne de connexion et fortement typé <xref:System.Data.Linq.DataContext> est utilisé, une base de données qui a le même nom que le <xref:System.Data.Linq.DataContext> héritage de classe est créée.</span><span class="sxs-lookup"><span data-stu-id="0d022-146">If there is no database tag in the connection string and a strongly typed <xref:System.Data.Linq.DataContext> is used, a database that has the same name as the <xref:System.Data.Linq.DataContext> inheriting class is created.</span></span>  
1. <span data-ttu-id="0d022-147">Si un faiblement typé <xref:System.Data.Linq.DataContext> est utilisé, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="0d022-147">If a weakly typed <xref:System.Data.Linq.DataContext> is used, an exception is thrown.</span></span>  
1. <span data-ttu-id="0d022-148">Si le <xref:System.Data.Linq.DataContext> a été créé en utilisant un nom de fichier, la base de données correspondant à ce nom de fichier est créé.</span><span class="sxs-lookup"><span data-stu-id="0d022-148">If the <xref:System.Data.Linq.DataContext> has been created by using a file name, the database corresponding to that file name is created.</span></span>  
     
  
## Examples  
 <span data-ttu-id="0d022-149">Le code suivant montre comment configurer une base de données temporaire et les supprimer.</span><span class="sxs-lookup"><span data-stu-id="0d022-149">The following code shows how to set up a temporary database and then remove it.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMethodCallQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Linq.IQueryable&lt;TResult&gt; CreateMethodCallQuery&lt;TResult&gt; (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Linq.IQueryable`1&lt;!!TResult&gt; CreateMethodCallQuery&lt;TResult&gt;(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Linq::IQueryable&lt;TResult&gt; ^ CreateMethodCallQuery(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="0d022-150">Type des éléments de la collection retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-150">The type of the elements in the returned collection.</span>
          </span>
        </typeparam>
        <param name="instance">
          <span data-ttu-id="0d022-151">Instance de l'appel de la méthode (l'objet actif).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-151">The instance of the method invocation (the current object).</span>
          </span>
        </param>
        <param name="methodInfo">
          <span data-ttu-id="0d022-152">
            <see cref="T:System.Reflection.MethodInfo" /> qui identifie la méthode CLR qui correspond à une méthode de base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-152">The <see cref="T:System.Reflection.MethodInfo" /> that identifies the CLR method that corresponds to a database method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="0d022-153">Tableau de paramètres à passer à la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-153">The array of parameters to be passed to the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-154">Exécute la fonction de base de données table associée à la méthode CLR spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-154">Executes the table-valued database function associated with the specified CLR method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-155">Collection de valeurs résultantes retournée par la requête de base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-155">A collection of resultant values returned by the database query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-156">Le <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> méthode est utilisée dans le code généré automatiquement et agit comme un proxy pour les fonctions de base de données.</span><span class="sxs-lookup"><span data-stu-id="0d022-156">The <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DatabaseExists" />
      <MemberSignature Language="VB.NET" Value="Public Function DatabaseExists () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DatabaseExists();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d022-157">Détermine si la base de données associée peut être ouverte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-157">Determines whether the associated database can be opened.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-158">
            <see langword="true" /> si la base de données spécifiée peut être ouverte ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-158">
              <see langword="true" /> if the specified database can be opened; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-159">Cette méthode utilise la connexion dans le <xref:System.Data.Linq.DataContext.Connection%2A> propriété pour essayer d’ouvrir la base de données associée.</span><span class="sxs-lookup"><span data-stu-id="0d022-159">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to attempt to open the associated database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d022-160">L’exemple suivant utilise cette méthode pour déterminer si une base de données existe déjà.</span><span class="sxs-lookup"><span data-stu-id="0d022-160">The following example uses this method to determine whether a database already exists.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool DeferredLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferredLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferredLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferredLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-161">Obtient ou définit une valeur qui indique s'il faut charger en différé les relations un-à-plusieurs ou un-à-un.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-161">Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d022-162">
            <see langword="true" /> si le chargement différé est activé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-162">
              <see langword="true" /> if deferred loading is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-163">Lorsque le code accède à l’une de ces relations, null est retournée si la relation est d’un à un, et une collection vide est retournée si elle est de type un-à-plusieurs.</span><span class="sxs-lookup"><span data-stu-id="0d022-163">When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many.</span></span> <span data-ttu-id="0d022-164">Les relations peuvent toujours être renseignées en définissant le <xref:System.Data.Linq.DataContext.LoadOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0d022-164">The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property.</span></span>  
  
 <span data-ttu-id="0d022-165">Le scénario principal de cette propriété est pour vous permettre d’extraire une partie du modèle d’objet et l’envoyer (par exemple, pour un service Web).</span><span class="sxs-lookup"><span data-stu-id="0d022-165">The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d022-166">Si cette propriété est définie sur `false` après l’exécution d’une requête, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="0d022-166">If this property is set to `false` after a query has been executed, an exception is thrown.</span></span> <span data-ttu-id="0d022-167">Consultez le **Modes valides** section ci-dessous pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="0d022-167">See the **Valid Modes** section below for more information.</span></span>  
  
## <a name="valid-modes"></a><span data-ttu-id="0d022-168">Modes valides</span><span class="sxs-lookup"><span data-stu-id="0d022-168">Valid modes</span></span>  
 <span data-ttu-id="0d022-169">Chargement différé requiert le suivi de l’objet.</span><span class="sxs-lookup"><span data-stu-id="0d022-169">Deferred loading requires object tracking.</span></span> <span data-ttu-id="0d022-170">Seuls les trois modes suivants sont valides :</span><span class="sxs-lookup"><span data-stu-id="0d022-170">Only the following three modes are valid:</span></span>  
  
-   <span data-ttu-id="0d022-171"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="0d022-171"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span></span> <span data-ttu-id="0d022-172"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> est ignoré et déduit que `false`.</span><span class="sxs-lookup"><span data-stu-id="0d022-172"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and inferred to be `false`.</span></span> <span data-ttu-id="0d022-173">Ce comportement correspond en lecture seule <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="0d022-173">This behavior corresponds to a read-only <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="0d022-174"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span><span class="sxs-lookup"><span data-stu-id="0d022-174"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span></span> <span data-ttu-id="0d022-175"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="0d022-175"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span></span> <span data-ttu-id="0d022-176">Cette situation correspond à un <xref:System.Data.Linq.DataContext> qui permet aux utilisateurs de charger un graphique d’objet à l’aide de <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, mais il n’active pas le chargement différé.</span><span class="sxs-lookup"><span data-stu-id="0d022-176">This situation corresponds to a <xref:System.Data.Linq.DataContext> that allows users to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but it does not enable deferred loading.</span></span>  
  
-   <span data-ttu-id="0d022-177">Les deux ont la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="0d022-177">Both are set to `true`.</span></span> <span data-ttu-id="0d022-178">Il s'agit de la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="0d022-178">This is the default.</span></span>  
  
 <span data-ttu-id="0d022-179">Les indicateurs ne peuvent pas être modifiées après l’exécution d’une requête.</span><span class="sxs-lookup"><span data-stu-id="0d022-179">The flags may not be changed after a query has been executed.</span></span> <span data-ttu-id="0d022-180">Toute modification apportée après l’exécution de la première requête qui utilise ce <xref:System.Data.Linq.DataContext> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="0d022-180">Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DeleteDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDatabase();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d022-181">Supprime la base de données associée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-181">Deletes the associated database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-182">Cette méthode utilise la connexion dans le <xref:System.Data.Linq.DataContext.Connection%2A> propriété pour identifier la base de données à supprimer.</span><span class="sxs-lookup"><span data-stu-id="0d022-182">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to identify the database to be deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d022-183">L’exemple suivant montre comment supprimer une base de données qui a été créé temporairement.</span><span class="sxs-lookup"><span data-stu-id="0d022-183">The following example shows how to delete a database that has been temporarily created.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.Linq.DataContext.Dispose" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-184">Libère les ressources utilisées par la classe <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-184">Releases the resources used by the <see cref="T:System.Data.Linq.DataContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d022-185">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-185">Releases all resources used by the current instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0d022-186">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-186">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-187">Libère les ressources non managées utilisées par la classe <see cref="T:System.Data.Linq.DataContext" /> et libère éventuellement la ressource managée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-187">Releases the unmanaged resources used by the <see cref="T:System.Data.Linq.DataContext" /> class and optionally releases the managed resource.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public int ExecuteCommand (string command, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteCommand(string command, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteCommand (command As String, ParamArray parameters As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteCommand(System::String ^ command, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="0d022-188">Commande SQL à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-188">The SQL command to be executed.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="0d022-189">Tableau de paramètres à passer à la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-189">The array of parameters to be passed to the command.</span>
          </span>
          <span data-ttu-id="0d022-190">Notez le comportement suivant : Si le nombre d’objets dans le tableau est inférieur au nombre le plus élevé identifié dans la chaîne de commande, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-190">Note the following behavior:  If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span>
          </span>
          <span data-ttu-id="0d022-191">Si le tableau contient des objets qui ne sont pas référencés dans la chaîne de commande, aucune exception n'est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-191">If the array contains objects that are not referenced in the command string, no exception is thrown.</span>
          </span>
          <span data-ttu-id="0d022-192">Si l'un des paramètres est null, il est converti en <see langword="DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-192">If any one of the parameters is null, it is converted to <see langword="DBNull.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-193">Exécute les commandes SQL directement sur la base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-193">Executes SQL commands directly on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-194">Nombre de lignes modifiées par la commande exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-194">The number of rows modified by the executed command.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-195">Cette méthode est un mécanisme direct pour les cas où [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] ne fournit pas suffisamment pour un scénario particulier.</span><span class="sxs-lookup"><span data-stu-id="0d022-195">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not adequately provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="0d022-196">La syntaxe de la commande est presque identique à la syntaxe utilisée pour créer un élément ADO.NET `DataCommand`.</span><span class="sxs-lookup"><span data-stu-id="0d022-196">The syntax for the command is almost the same as the syntax used to create an ADO.NET `DataCommand`.</span></span> <span data-ttu-id="0d022-197">La seule différence est dans la façon dont les paramètres sont spécifiés.</span><span class="sxs-lookup"><span data-stu-id="0d022-197">The only difference is in how the parameters are specified.</span></span> <span data-ttu-id="0d022-198">Plus précisément, vous spécifiez des paramètres en les plaçant entre accolades ({...}), les énumérer à partir de 0.</span><span class="sxs-lookup"><span data-stu-id="0d022-198">Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0.</span></span> <span data-ttu-id="0d022-199">Le paramètre est associé à l’objet de même numéro dans le tableau de paramètres.</span><span class="sxs-lookup"><span data-stu-id="0d022-199">The parameter is associated with the equally numbered object in the parameters array.</span></span>  
  
 <span data-ttu-id="0d022-200">`ExecuteQuery` et `ExecuteCommand` vous permettent de spécifier un nombre variable d’arguments pour la substitution de paramètre.</span><span class="sxs-lookup"><span data-stu-id="0d022-200">`ExecuteQuery` and `ExecuteCommand` allow you to specify a variable number of arguments for parameter substitution.</span></span> <span data-ttu-id="0d022-201">Par exemple, vous pouvez spécifier les paramètres lorsque vous appelez ExecuteQuery\<TResult > :</span><span class="sxs-lookup"><span data-stu-id="0d022-201">For example, you can specify the parameters when invoking ExecuteQuery\<TResult>:</span></span>  
  
```  
db.ExecuteQuery<Customer>("select * from dbo.Customers where City = {0}", "London");  
```  
  
 <span data-ttu-id="0d022-202">Ainsi, un autre exemple :</span><span class="sxs-lookup"><span data-stu-id="0d022-202">And, another example:</span></span>  
  
```  
db.ExecuteCommand("UPDATE Products SET QuantityPerUnit = {0} WHERE ProductID = {1}", "24 boxes", 5);  
```  
  
 <span data-ttu-id="0d022-203">L’exemple suivant ouvre une connexion et passe une SQL `UPDATE` commande au moteur SQL.</span><span class="sxs-lookup"><span data-stu-id="0d022-203">The following example opens a connection and passes a SQL `UPDATE` command to the SQL engine.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCommunicatingWithDatabase#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCommunicatingWithDatabase/cs/Program.cs#3)]
 [!code-vb[DLinqCommunicatingWithDatabase#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCommunicatingWithDatabase/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicDelete">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicDelete (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicDelete(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicDelete (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicDelete(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="0d022-204">Entité à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-204">The entity to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-205">S’exécute à l'intérieur des méthodes override de suppression pour redéléguer à [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] la tâche de génération et d’exécution de SQL dynamique pour les opérations de suppression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-205">Executes, inside delete override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for delete operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-206">Consultez <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d022-206">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicInsert">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicInsert (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicInsert(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicInsert (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicInsert(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="0d022-207">Entité à insérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-207">The entity to be inserted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-208">S’exécute à l'intérieur des méthodes override d’insertion pour redéléguer à [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] la tâche de génération et d’exécution de SQL dynamique pour les opérations d’insertion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-208">Executes, inside insert override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for insert operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-209">Notez les points suivants :</span><span class="sxs-lookup"><span data-stu-id="0d022-209">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="0d022-210">La méthode a un modificateur protected, son utilisation requiert le sous-classement <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="0d022-210">Because the method has a protected modifier, its use requires subclassing <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="0d022-211">Une exception est levée si cette opération n’est pas appelée à l’intérieur d’un <xref:System.Data.Linq.DataContext.SubmitChanges%2A> opération.</span><span class="sxs-lookup"><span data-stu-id="0d022-211">An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="0d022-212">Elle n’est pas destinée à être appelé comme une opération autonome à l’extérieur de l’étendue d’un <xref:System.Data.Linq.DataContext.SubmitChanges%2A> opération.</span><span class="sxs-lookup"><span data-stu-id="0d022-212">It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="0d022-213"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> lui-même appelle des méthodes override si elles sont implémentées et que les méthodes précédentes sont destinées à être appelées dans les méthodes de remplacement.</span><span class="sxs-lookup"><span data-stu-id="0d022-213"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.</span></span>  
  
-   <span data-ttu-id="0d022-214">Il incombe au développeur de passer de l’entité correcte.</span><span class="sxs-lookup"><span data-stu-id="0d022-214">It is the responsibility of the developer to pass in the correct entity.</span></span> <span data-ttu-id="0d022-215">L’implémentation vérifie que l’entité passée est suivie.</span><span class="sxs-lookup"><span data-stu-id="0d022-215">The implementation verifies that the passed-in entity is tracked.</span></span> <span data-ttu-id="0d022-216">Toutefois, il incombe au développeur de conserver l’ordre ou passer dans la même entité deux fois.</span><span class="sxs-lookup"><span data-stu-id="0d022-216">However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.</span></span>  
  
-   <span data-ttu-id="0d022-217">Il incombe au développeur d’appeler l’API dynamique appropriée.</span><span class="sxs-lookup"><span data-stu-id="0d022-217">It is the responsibility of the developer to invoke the correct dynamic API.</span></span> <span data-ttu-id="0d022-218">Par exemple, dans le `Update` substituer la méthode, uniquement le <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> méthode peut être appelée.</span><span class="sxs-lookup"><span data-stu-id="0d022-218">For example, in the `Update` override method, only the <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> method can be called.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="0d022-219"> ne détecte pas ni ne vérifie si la méthode dynamique appelée correspond à l'opération applicable.</span><span class="sxs-lookup"><span data-stu-id="0d022-219"> does not detect or verify whether the invoked dynamic method matches the applicable operation.</span></span> <span data-ttu-id="0d022-220">Les résultats ne sont pas définis si une méthode inapplicable est appelée (par exemple, l’appel <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> pour un objet à mettre à jour).</span><span class="sxs-lookup"><span data-stu-id="0d022-220">The results are undefined if an inapplicable method is called (for example, calling <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> for an object to be updated).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicUpdate">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicUpdate (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicUpdate(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicUpdate (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicUpdate(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="0d022-221">Entité à mettre à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-221">The entity to be updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-222">S’exécute à l'intérieur des méthodes override de mise à jour pour redéléguer à [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] la tâche de génération et d’exécution de SQL dynamique pour les opérations de mise à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-222">Executes, inside update override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for update operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-223">Consultez <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d022-223">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteMethodCall">
      <MemberSignature Language="C#" Value="protected System.Data.Linq.IExecuteResult ExecuteMethodCall (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Data.Linq.IExecuteResult ExecuteMethodCall(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Data::Linq::IExecuteResult ^ ExecuteMethodCall(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IExecuteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="0d022-224">Instance de l'appel de la méthode (l'objet actif).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-224">The instance of the method invocation (the current object).</span>
          </span>
        </param>
        <param name="methodInfo">
          <span data-ttu-id="0d022-225">Identifie la méthode CLR qui correspond à une méthode de base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-225">Identifies the CLR method that corresponds to a database method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="0d022-226">Tableau de paramètres à passer à la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-226">The array of parameters to be passed to the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-227">Exécute la procédure de base de données stockée ou la fonction scalaire associée à la méthode CLR spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-227">Executes the stored database procedure or scalar function associated with the specified CLR method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-228">Résultat (valeur de retour et paramètres de sortie) de l'exécution de la méthode spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-228">The result (the return value and output parameters) of executing the specified method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-229">Le <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> méthode est utilisée dans le code généré automatiquement et agit comme un proxy pour les fonctions de base de données.</span><span class="sxs-lookup"><span data-stu-id="0d022-229">The <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ExecuteQuery (Type elementType, string query, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable ExecuteQuery(class System.Type elementType, string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery (elementType As Type, query As String, ParamArray parameters As Object()) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ ExecuteQuery(Type ^ elementType, System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="0d022-230">Type de <see cref="T:System.Collections.Generic.IEnumerable`1" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-230">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span>
          </span>
          <span data-ttu-id="0d022-231">L’algorithme pour mettre en correspondance les colonnes du résultat de la requête aux champs ou propriétés de l’objet fonctionne comme suit : si un champ ou une propriété est mappée à un nom de colonne particulier, ce nom de colonne est attendu dans le jeu de résultats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-231">The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:  If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span>
          </span>
          <span data-ttu-id="0d022-232">Si un champ ou une propriété n'est pas mappé, une colonne de même nom que le champ ou la propriété est attendue dans le jeu de résultats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-232">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span>
          </span>
          <span data-ttu-id="0d022-233">la comparaison est effectuée en recherchant en premier une correspondance sensible à la casse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-233">The comparison is performed by looking for a case-sensitive match first.</span>
          </span>
          <span data-ttu-id="0d022-234">Si cette correspondance est introuvable, une recherche ultérieure est effectuée pour une correspondance qui ne tient pas compte de la casse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-234">If this match is not found, a subsequent search occurs for a case-insensitive match.</span>
          </span>
          <span data-ttu-id="0d022-235">La requête doit retourner tous les champs et propriétés de l’objet pour lesquels un suivi est effectué (excepté ceux qui sont chargés sur une base différée) quand toutes les conditions suivantes sont vraies : <c>T</c> est une entité explicitement suivie par <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-235">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:  <c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
          <span data-ttu-id="0d022-236">
            <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-236">
              <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="0d022-237">L'entité a une clé primaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-237">The entity has a primary key.</span>
          </span>
          <span data-ttu-id="0d022-238">Sinon, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-238">Otherwise an exception is thrown.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="0d022-239">Requête SQL à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-239">The SQL query to be executed.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="0d022-240">Tableau de paramètres à passer à la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-240">The array of parameters to be passed to the command.</span>
          </span>
          <span data-ttu-id="0d022-241">Notez le comportement suivant : Si le nombre d’objets dans le tableau est inférieur au nombre le plus élevé identifié dans la chaîne de commande, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-241">Note the following behavior:  If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span>
          </span>
          <span data-ttu-id="0d022-242">Si le tableau contient des objets qui ne sont pas référencés dans la chaîne de commande, aucune exception n'est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-242">If the array contains objects that are not referenced in the command string, no exception is thrown.</span>
          </span>
          <span data-ttu-id="0d022-243">Si un paramètre est <see langword="null" />, il est converti en <see langword="DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-243">If a parameter is <see langword="null" />, it is converted to <see langword="DBNull.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-244">Exécute des requêtes SQL directement sur la base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-244">Executes SQL queries directly on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-245">Collection <see cref="T:System.Collections.Generic.IEnumerable`1" /> d'objets retournés par la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-245">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects returned by the query.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; ExecuteQuery&lt;TResult&gt; (string query, params object[] parameters) where TResult : new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExecuteQuery&lt;.ctor TResult&gt;(string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery(Of TResult As New) (query As String, ParamArray parameters As Object()) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; where TResult : gcnew() System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ ExecuteQuery(System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="0d022-246">Type des éléments de la collection retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-246">The type of the elements in the returned collection.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="0d022-247">Requête SQL à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-247">The SQL query to be executed.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="0d022-248">Tableau de paramètres à passer à la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-248">The array of parameters to be passed to the command.</span>
          </span>
          <span data-ttu-id="0d022-249">Notez le comportement suivant : Si le nombre d’objets dans le tableau est inférieur au nombre le plus élevé identifié dans la chaîne de commande, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-249">Note the following behavior:  If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span>
          </span>
          <span data-ttu-id="0d022-250">Si le tableau contient des objets qui ne sont pas référencés dans la chaîne de commande, aucune exception n'est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-250">If the array contains objects that are not referenced in the command string, no exception is thrown.</span>
          </span>
          <span data-ttu-id="0d022-251">Si un paramètre est null, il est converti en <see langword="DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-251">If a parameter is null, it is converted to <see langword="DBNull.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-252">Exécute des requêtes SQL directement sur la base de données et retourne des objets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-252">Executes SQL queries directly on the database and returns objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-253">Collection d'objets retournés par la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-253">A collection of objects returned by the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-254">Cette méthode est un mécanisme direct pour les cas où [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] ne fournit pas d’un scénario particulier.</span><span class="sxs-lookup"><span data-stu-id="0d022-254">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="0d022-255">L’algorithme pour les colonnes correspondantes dans le résultat de la requête aux champs et propriétés de l’objet fonctionne comme suit :</span><span class="sxs-lookup"><span data-stu-id="0d022-255">The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:</span></span>  
  
-   <span data-ttu-id="0d022-256">Si un champ ou une propriété est mappé à un nom de colonne particulier, ce nom de colonne est attendu dans le jeu de résultats.</span><span class="sxs-lookup"><span data-stu-id="0d022-256">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="0d022-257">Si un champ ou une propriété n'est pas mappé, une colonne de même nom que le champ ou la propriété est attendue dans le jeu de résultats.</span><span class="sxs-lookup"><span data-stu-id="0d022-257">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="0d022-258">La comparaison est effectuée en recherchant en premier une correspondance qui respecte la casse.</span><span class="sxs-lookup"><span data-stu-id="0d022-258">The comparison is performed by first looking for a case-sensitive match.</span></span> <span data-ttu-id="0d022-259">Si une correspondance est introuvable, une recherche ultérieure se produit pour une correspondance de la casse.</span><span class="sxs-lookup"><span data-stu-id="0d022-259">If such a match is not found, a subsequent search occurs for a case-insensitive match.</span></span>  
  
-   <span data-ttu-id="0d022-260">La requête doit retourner tous les champs suivis et les propriétés de l’objet (à l’exception de ceux soumis à chargement différé) lorsque les conditions suivantes sont remplies :</span><span class="sxs-lookup"><span data-stu-id="0d022-260">The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:</span></span>  
  
    -   <span data-ttu-id="0d022-261">Si `<T>` est une entité suivie explicitement par le <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="0d022-261">If `<T>` is an entity explicitly tracked by the <xref:System.Data.Linq.DataContext>.</span></span>  
  
    -   <span data-ttu-id="0d022-262">ObjectTrackingEnabled a la valeur true.</span><span class="sxs-lookup"><span data-stu-id="0d022-262">ObjectTrackingEnabled is true.</span></span>  
  
    -   <span data-ttu-id="0d022-263">L'entité a une clé primaire.</span><span class="sxs-lookup"><span data-stu-id="0d022-263">The entity has a primary key.</span></span>  
  
     <span data-ttu-id="0d022-264">Sinon, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="0d022-264">Otherwise an exception is thrown.</span></span>  
  
-   <span data-ttu-id="0d022-265">Dans tous les autres cas, la requête peut récupérer uniquement un sous-ensemble des champs suivis et des propriétés de l’objet.</span><span class="sxs-lookup"><span data-stu-id="0d022-265">In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.</span></span>  
  
 <span data-ttu-id="0d022-266">L’extrait de code c# suivant illustre une utilisation de cette méthode :</span><span class="sxs-lookup"><span data-stu-id="0d022-266">The following C# snippet shows one use for this method:</span></span>  
  
```  
var customers = db.ExecuteQuery<Customer>(@"SELECT CustomerID, CompanyName, ContactName, ContactTitle,   
   Address, City, Region, PostalCode, Country, Phone, Fax  
   FROM   dbo.Customers  
   WHERE  City = {0}", "London");  
  
foreach (Customer c in customers)  
   Console.WriteLine(c.ContactName);  
```  
  
 <span data-ttu-id="0d022-267">En Visual Basic</span><span class="sxs-lookup"><span data-stu-id="0d022-267">In Visual Basic</span></span>  
  
```  
Dim customers = db.ExecuteQuery(Of Customer)("SELECT CustomerID, _    CompanyName, ContactName, ContactTitle, _  
   Address, City, Region, PostalCode, Country, Phone, Fax _  
   FROM dbo.Customers _  
WHERE City = {0}", "London")  
  
For Each c As Customer In customers  
    Console.WriteLine(c.ContactName)  
Next  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangeSet">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeSet GetChangeSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ChangeSet GetChangeSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetChangeSet" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChangeSet () As ChangeSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ChangeSet ^ GetChangeSet();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d022-268">Obtient les objets modifiés suivis par le <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-268">Gets the modified objects tracked by <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-269">L'ensemble des objets est retourné sous la forme de trois collections en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-269">The set of objects is returned as three read-only collections.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-270">Notez les points suivants :</span><span class="sxs-lookup"><span data-stu-id="0d022-270">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="0d022-271"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> peut avoir des effets secondaires, tels que l’inférence d’insérer et supprimer les opérations qui sont habituellement effectuées au moment de <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d022-271"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span></span> <span data-ttu-id="0d022-272">Par exemple, les objets qui sont utilisés dans les opérations suivantes peuvent créer des opérations déduites correspondantes dans la liste suivante :</span><span class="sxs-lookup"><span data-stu-id="0d022-272">For example, objects that are used in the following operations can create corresponding inferred operations in the following list:</span></span>  
  
    -   <span data-ttu-id="0d022-273"><xref:System.Data.Linq.EntitySet%601.Add%2A> pour <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d022-273"><xref:System.Data.Linq.EntitySet%601.Add%2A> to <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span></span>  
  
    -   <span data-ttu-id="0d022-274"><xref:System.Data.Linq.EntityRef%601> affectation de null (raison d’éventuellement <xref:System.Data.Linq.EntitySet%601.Remove%2A> à <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d022-274"><xref:System.Data.Linq.EntityRef%601> assignment to null (possibly because of <xref:System.Data.Linq.EntitySet%601.Remove%2A> to <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span></span>  
  
-   <span data-ttu-id="0d022-275">Le jeu ne peut pas être trié en fonction des contraintes de clé étrangère.</span><span class="sxs-lookup"><span data-stu-id="0d022-275">The set may not be ordered according to foreign key constraints.</span></span>  
  
-   <span data-ttu-id="0d022-276">Valeurs générées par la base de données (par exemple, les valeurs de clés primaires et étrangères, les horodatages, etc.) ne sont pas disponibles.</span><span class="sxs-lookup"><span data-stu-id="0d022-276">Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available.</span></span> <span data-ttu-id="0d022-277">De telles informations requièrent l’exécution de commande de base de données et peut-être la propagation d’informations récupérées (par exemple, la clé étrangère à partir de la clé primaire).</span><span class="sxs-lookup"><span data-stu-id="0d022-277">Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).</span></span>  
  
-   <span data-ttu-id="0d022-278">L’ensemble des objets modifiés est calculée au moment de l’appel.</span><span class="sxs-lookup"><span data-stu-id="0d022-278">The set of changed objects is computed at the time of the call.</span></span> <span data-ttu-id="0d022-279">Les appels suivants à <xref:System.Data.Linq.DataContext.SubmitChanges%2A> peut produire un ensemble différent si des modifications supplémentaires sont apportées.</span><span class="sxs-lookup"><span data-stu-id="0d022-279">Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made.</span></span>  
  
 <span data-ttu-id="0d022-280">Sortie lorsque aucune modification a été apportée apparaît comme suit :</span><span class="sxs-lookup"><span data-stu-id="0d022-280">Output when no changes have been made appears as follows:</span></span>  
  
 `{Added: 0, Removed: 0, Modified: 0}`  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#2](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#2)]
 [!code-vb[DLinqDebuggingSupport#2](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommand (query As IQueryable) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetCommand(System::Linq::IQueryable ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="0d022-281">Requête dont les informations de commande de SQL sont à récupérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-281">The query whose SQL command information is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-282">Obtient les informations des commandes SQL générées par [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-282">Gets the information about SQL commands generated by [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-283">Objet d'informations de la commande demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-283">The requested command information object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-284">Cette méthode est uniquement un accesseur Get et n’affecte pas <xref:System.Data.Linq.DataContext> état.</span><span class="sxs-lookup"><span data-stu-id="0d022-284">This method is only a getter and does not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
 <span data-ttu-id="0d022-285">Notez les points suivants :</span><span class="sxs-lookup"><span data-stu-id="0d022-285">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="0d022-286">L’argument doit être non null.</span><span class="sxs-lookup"><span data-stu-id="0d022-286">The argument must be non-null.</span></span> <span data-ttu-id="0d022-287">Sinon, une exception d’argument null est levée.</span><span class="sxs-lookup"><span data-stu-id="0d022-287">Otherwise, a null argument exception is thrown.</span></span>  
  
-   <span data-ttu-id="0d022-288">Exceptions de traduction de requête normales levées pendant [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] exécution de la requête s’appliquent à une requête qui ne peut pas être traduite.</span><span class="sxs-lookup"><span data-stu-id="0d022-288">Normal query translation exceptions thrown during [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] query execution apply for a query that cannot be translated.</span></span>  
  
-   <span data-ttu-id="0d022-289">La première commande de requête est retournée.</span><span class="sxs-lookup"><span data-stu-id="0d022-289">Only the first query command is returned.</span></span> <span data-ttu-id="0d022-290">Plus précisément, les commandes supplémentaires qui sont utilisés pour le chargement hâtif (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) ne sont pas inclus.</span><span class="sxs-lookup"><span data-stu-id="0d022-290">Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included.</span></span>  
  
-   <span data-ttu-id="0d022-291"><xref:System.Data.Linq.DataContext> ne suit pas ce que l’utilisateur fait avec la commande.</span><span class="sxs-lookup"><span data-stu-id="0d022-291"><xref:System.Data.Linq.DataContext> does not track what the user does with the command.</span></span> <span data-ttu-id="0d022-292">Par exemple, les résultats de l’exécution de la commande retournée ne sont pas suivies et n’affectent pas <xref:System.Data.Linq.DataContext> état.</span><span class="sxs-lookup"><span data-stu-id="0d022-292">For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#3)]
 [!code-vb[DLinqDebuggingSupport#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDbCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand GetIDbCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.IDbCommand GetIDbCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetIDbCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIDbCommand (query As IQueryable) As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbCommand ^ GetIDbCommand(System::Linq::IQueryable ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ITable GetTable (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ITable GetTable(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ITable ^ GetTable(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ITable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0d022-293">Type des objets à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-293">The type of the objects to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-294">Retourne une collection d'objets d'un type particulier, où le type est défini par le paramètre <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-294">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="type" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-295">Collection d'objets définie par le paramètre <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-295">A collection of objects defined by the <paramref name="type" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-296">Il s’agit d’une version faiblement typée de <xref:System.Data.Linq.DataContext.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d022-296">This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>.</span></span> <span data-ttu-id="0d022-297">Il est important de disposer d’une version faiblement typée, car il est relativement courant pour construire des requêtes dynamiquement.</span><span class="sxs-lookup"><span data-stu-id="0d022-297">It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically.</span></span> <span data-ttu-id="0d022-298">Il serait pas pratique forcer l’application à utiliser la réflexion pour appeler la méthode générique correcte.</span><span class="sxs-lookup"><span data-stu-id="0d022-298">It would be inconvenient to force the application to use reflection to call the correct generic method.</span></span>  
  
 <span data-ttu-id="0d022-299">S’il n’y a aucune collection pour un type particulier, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="0d022-299">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Table&lt;TEntity&gt; GetTable&lt;TEntity&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.Table`1&lt;!!TEntity&gt; GetTable&lt;class TEntity&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable(Of TEntity As Class) () As Table(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Linq::Table&lt;TEntity&gt; ^ GetTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Table&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity">
          <span data-ttu-id="0d022-300">Type des objets à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-300">The type of the objects to be returned.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="0d022-301">Retourne une collection d'objets d'un type particulier, où le type est défini par le paramètre <paramref name="TEntity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-301">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="TEntity" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-302">Collection d'objets définie par le paramètre <paramref name="TEntity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-302">A collection of objects defined by the <paramref name="TEntity" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-303">Cette méthode est le point d’entrée principal pour l’interrogation.</span><span class="sxs-lookup"><span data-stu-id="0d022-303">This method is the main entry point for querying.</span></span> <span data-ttu-id="0d022-304">Lorsqu’il est fortement typé <xref:System.Data.Linq.DataContext> est créées, de nouvelles propriétés générées encapsulent les appels à cette méthode.</span><span class="sxs-lookup"><span data-stu-id="0d022-304">When a strongly typed <xref:System.Data.Linq.DataContext> is created, new generated properties encapsulate calls to this method.</span></span> <span data-ttu-id="0d022-305">Par exemple, un `Customers` générée, qui retourne la propriété `GetTable<Customer>`.</span><span class="sxs-lookup"><span data-stu-id="0d022-305">For example, a `Customers` property is generated that returns `GetTable<Customer>`.</span></span>  
  
 <span data-ttu-id="0d022-306">S’il n’y a aucune collection pour un type particulier, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="0d022-306">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadOptions">
      <MemberSignature Language="C#" Value="public System.Data.Linq.DataLoadOptions LoadOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.DataLoadOptions LoadOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.LoadOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadOptions As DataLoadOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::DataLoadOptions ^ LoadOptions { System::Data::Linq::DataLoadOptions ^ get(); void set(System::Data::Linq::DataLoadOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.DataLoadOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-307">Obtient ou définit l'objet <see cref="T:System.Data.Linq.DataLoadOptions" /> associé à <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-307">Gets or sets the <see cref="T:System.Data.Linq.DataLoadOptions" /> associated with this <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d022-308">Options de la charge de prérécupération pour les données connexes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-308">The prefetch load options for related data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-309">Cette propriété obtient ou définit les options qui sont utilisées pour définir le comportement de prérécupération pour les membres à chargement différé et l’appartenance des collections associées.</span><span class="sxs-lookup"><span data-stu-id="0d022-309">This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Log" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Log { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-310">Obtient ou définit la destination pour écrire la requête ou la commande SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-310">Gets or sets the destination to write the SQL query or command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d022-311">
            <see cref="T:System.IO.TextReader" /> à utiliser pour écrire la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-311">The <see cref="T:System.IO.TextReader" /> to use for writing the command.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-312">Définissez cette propriété sur `null` pour désactiver la journalisation de la commande.</span><span class="sxs-lookup"><span data-stu-id="0d022-312">Set this property to `null` to disable command logging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d022-313">L’exemple suivant affiche le SQL généré dans la fenêtre de console avant d’afficher les résultats de la requête.</span><span class="sxs-lookup"><span data-stu-id="0d022-313">The following example displays generated SQL in the console window before it displays the results of the query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#2)]
 [!code-vb[System.Data.Linq.DataContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mapping">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.MetaModel Mapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaModel Mapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Mapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mapping As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::MetaModel ^ Mapping { System::Data::Linq::Mapping::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-314">Obtient le <see cref="T:System.Data.Linq.Mapping.MetaModel" /> sur laquelle est basé le mappage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-314">Gets the <see cref="T:System.Data.Linq.Mapping.MetaModel" /> on which the mapping is based.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d022-315">Mappage entre une base de données et les objets de domaine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-315">The mapping between a database and domain objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectTrackingEnabled">
      <MemberSignature Language="C#" Value="public bool ObjectTrackingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ObjectTrackingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectTrackingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ObjectTrackingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-316">Obtient ou définit une valeur qui indique si le suivi des objets est activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-316">Gets or sets a value that indicates whether object tracking is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d022-317">
            <see langword="true" /> si le suivi de l'objet est activé, sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-317">
              <see langword="true" /> if the object tracking is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0d022-318">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-318">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-319">Si cette propriété `false` améliore les performances au moment de la récupération, car il existe moins d’éléments pour effectuer le suivi.</span><span class="sxs-lookup"><span data-stu-id="0d022-319">Setting this property to `false` improves performance at retrieval time, because there are fewer items to track.</span></span>  
  
 <span data-ttu-id="0d022-320">Une exception est levée :</span><span class="sxs-lookup"><span data-stu-id="0d022-320">An exception is thrown:</span></span>  
  
-   <span data-ttu-id="0d022-321">Si la propriété est définie `false` après l’exécution d’une requête.</span><span class="sxs-lookup"><span data-stu-id="0d022-321">If the property is set to `false` after a query has been executed.</span></span>  
  
     <span data-ttu-id="0d022-322">Pour plus d’informations, consultez la section Modes valides dans <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="0d022-322">For more information, see the Valid Modes section in <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="0d022-323">Si la propriété est définie `false` et <xref:System.Data.Linq.DataContext.SubmitChanges%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="0d022-323">If the property is set to `false` and <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="0d022-324">Si <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> est `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> est ignorée et traitée en tant que `false`.</span><span class="sxs-lookup"><span data-stu-id="0d022-324">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and treated as `false`.</span></span> <span data-ttu-id="0d022-325">Dans ce cas, le <xref:System.Data.Linq.DataContext> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="0d022-325">In this case, the <xref:System.Data.Linq.DataContext> is read-only.</span></span>  
  
 <span data-ttu-id="0d022-326">Si <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> est `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> est `false`.</span><span class="sxs-lookup"><span data-stu-id="0d022-326">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is `false`.</span></span> <span data-ttu-id="0d022-327">Dans ce cas, <xref:System.Data.Linq.DataContext> vous permet de charger un graphique d’objet à l’aide <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, mais n’active pas le chargement différé.</span><span class="sxs-lookup"><span data-stu-id="0d022-327">In this case, <xref:System.Data.Linq.DataContext> allows you to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but does not enable deferred loading.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCacheEnabled">
      <MemberSignature Language="C#" Value="public bool QueryCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueryCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool QueryCacheEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-328">Actualise l'état d'objet à l'aide de données de la base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-328">Refreshes object state by using data in the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-329">Cette méthode est utile après une erreur d’accès concurrentiel optimiste pour placer des éléments dans un état pour une autre tentative.</span><span class="sxs-lookup"><span data-stu-id="0d022-329">This method is useful after an optimistic concurrency error to bring items into a state for another attempt.</span></span> <span data-ttu-id="0d022-330">Il met à jour l’état des champs primitifs et des propriétés sur les objets.</span><span class="sxs-lookup"><span data-stu-id="0d022-330">It updates the state of the primitive fields and properties on the objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d022-331">Si un objet est sur le *nombreux* côté d’une relation un-à-plusieurs, la clé étrangère sur l’objet est définie et que le pointeur d’objet pour l’autre côté de la relation sera défini à la nouvelle valeur.</span><span class="sxs-lookup"><span data-stu-id="0d022-331">If an object is on the *many* side of a one-to-many relationship, the foreign key on the object will be set and the object pointer for the other side of the relationship will be set to the new value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, System.Collections.IEnumerable entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, class System.Collections.IEnumerable entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entities As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Collections::IEnumerable ^ entities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="0d022-332">Valeur qui spécifie comment les conflits d'accès concurrentiel optimiste sont traités.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-332">A value that specifies how optimistic concurrency conflicts are handled.</span>
          </span>
        </param>
        <param name="entities">
          <span data-ttu-id="0d022-333">Collection d'entités à actualiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-333">The collection of entities to be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-334">Actualise une collection d'objets d'entité selon le mode spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-334">Refreshes a collection of entity objects according to the specified mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="0d022-335">Valeur qui spécifie comment les conflits d'accès concurrentiel optimiste sont traités.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-335">A value that specifies how optimistic concurrency conflicts are handled.</span>
          </span>
        </param>
        <param name="entity">
          <span data-ttu-id="0d022-336">Objet à actualiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-336">The object to be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-337">Actualise un objet d'entité selon le mode spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-337">Refreshes an entity object according to the specified mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, params object[] entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object[] entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, ParamArray entities As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, ... cli::array &lt;System::Object ^&gt; ^ entities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="0d022-338">Valeur qui spécifie comment les conflits d'accès concurrentiel optimiste sont traités.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-338">A value that specifies how optimistic concurrency conflicts are handled.</span>
          </span>
        </param>
        <param name="entities">
          <span data-ttu-id="0d022-339">Tableau d'objets d'entité à actualiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-339">The array of entity objects to be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-340">Actualise un tableau d'objets d'entité selon le mode spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-340">Refreshes an array of entity objects according to the specified mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubmitChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-341">Traite l'ensemble des objets modifiés à insérer, mettre à jour ou supprimer et exécute les commandes appropriées pour implémenter les modifications de la base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-341">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-342">Si les méthodes override sont présentes pour insert, update ou delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> exécute ces méthodes au lieu de la valeur par défaut [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commandes.</span><span class="sxs-lookup"><span data-stu-id="0d022-342">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 <span data-ttu-id="0d022-343"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> démarre une transaction et sera annulée si une exception se produit alors que <xref:System.Data.Linq.DataContext.SubmitChanges%2A> s’exécute.</span><span class="sxs-lookup"><span data-stu-id="0d022-343"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> starts a transaction and will roll back if an exception occurs while <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is executing.</span></span> <span data-ttu-id="0d022-344">Toutefois, cela n’annule pas les modifications en mémoire ou suivies par le <xref:System.Data.Linq.DataContext>; ces modifications devront être restaurées manuellement.</span><span class="sxs-lookup"><span data-stu-id="0d022-344">However, this does not roll back the changes in memory or tracked by the <xref:System.Data.Linq.DataContext>; those changes will need to be rolled back manually.</span></span> <span data-ttu-id="0d022-345">Vous pouvez démarrer avec une nouvelle instance de la <xref:System.Data.Linq.DataContext> si les modifications en mémoire doivent être ignorées.</span><span class="sxs-lookup"><span data-stu-id="0d022-345">You can start with a new instance of the <xref:System.Data.Linq.DataContext> if the changes in memory are to be discarded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public void SubmitChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SubmitChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubmitChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SubmitChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d022-346">Traite l'ensemble des objets modifiés à insérer, mettre à jour ou supprimer et exécute les commandes appropriées pour implémenter les modifications de la base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-346">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-347">Si les méthodes override sont présentes pour insert, update ou delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> exécute ces méthodes au lieu de la valeur par défaut [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commandes.</span><span class="sxs-lookup"><span data-stu-id="0d022-347">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public virtual void SubmitChanges (System.Data.Linq.ConflictMode failureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubmitChanges(valuetype System.Data.Linq.ConflictMode failureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubmitChanges (failureMode As ConflictMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubmitChanges(System::Data::Linq::ConflictMode failureMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="failureMode" Type="System.Data.Linq.ConflictMode" />
      </Parameters>
      <Docs>
        <param name="failureMode">
          <span data-ttu-id="0d022-348">Action à effectuer en cas d'échec de la soumission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-348">The action to be taken if the submission fails.</span>
          </span>
          <span data-ttu-id="0d022-349">Les arguments valides sont les suivants : <see cref="F:System.Data.Linq.ConflictMode.FailOnFirstConflict" /><see cref="F:System.Data.Linq.ConflictMode.ContinueOnConflict" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-349">Valid arguments are as follows:  <see cref="F:System.Data.Linq.ConflictMode.FailOnFirstConflict" /><see cref="F:System.Data.Linq.ConflictMode.ContinueOnConflict" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-350">Envoie à la base de données sous-jacente les modifications apportées aux objets récupérés, et spécifie l'action à effectuer si la soumission échoue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-350">Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-351">Mode d’échec par défaut est <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span><span class="sxs-lookup"><span data-stu-id="0d022-351">Default failure mode is <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbTransaction ^ Transaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-352">Obtient ou définit une transaction locale que [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] utilise pour accéder à la base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-352">Gets or sets a local transaction for the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to use to access the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d022-353">Objet transaction utilisé par <see cref="T:System.Data.Linq.DataContext" /> lors de l'exécution des requêtes et des commandes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-353">The transaction object used by the <see cref="T:System.Data.Linq.DataContext" /> when executing queries and commands.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-354">Le scénario principal de cette propriété est l’interopérabilité avec relationnelle [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code.</span><span class="sxs-lookup"><span data-stu-id="0d022-354">The primary scenario for this property is interoperability with relational [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code.</span></span> <span data-ttu-id="0d022-355">Par exemple, utilisez cette propriété lorsque vous écrivez votre propre `Create` / `Update` / `Delete` méthodes pour définir le `Transaction` propriété ADO `Command` objet.</span><span class="sxs-lookup"><span data-stu-id="0d022-355">For example, use this property when you write your own `Create`/`Update`/`Delete` methods to set the `Transaction` property on the ADO `Command` object.</span></span>  
  
 <span data-ttu-id="0d022-356">Notez les points suivants :</span><span class="sxs-lookup"><span data-stu-id="0d022-356">Note the following:</span></span>  
  
-   <span data-ttu-id="0d022-357">Si cette propriété n’a pas été définie explicitement, la méthode getter retourne la valeur null.</span><span class="sxs-lookup"><span data-stu-id="0d022-357">If this property has not been explicitly set, the getter returns null.</span></span>  
  
-   <span data-ttu-id="0d022-358">Si l’exécution du code dans un <xref:System.Transactions.Transaction> contexte, la définition de cette propriété lève une exception.</span><span class="sxs-lookup"><span data-stu-id="0d022-358">If the code is executing in a <xref:System.Transactions.Transaction> context, setting this property throws an exception.</span></span>  
  
-   <span data-ttu-id="0d022-359">Si cette propriété est définie et un nouveau <xref:System.Transactions.Transaction> est ouverte, une exception est levée lors de l’exécution d’une requête ou une mise à jour.</span><span class="sxs-lookup"><span data-stu-id="0d022-359">If this property is set and a new <xref:System.Transactions.Transaction> is opened, an exception is thrown when a query or update is executed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d022-360">Convertit un <see cref="T:System.Data.IDataReader" /> existant en objets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-360">Converts an existing <see cref="T:System.Data.IDataReader" /> to objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d022-361">Chaque ligne dans le <xref:System.Data.IDataReader> est convertie en un objet dans le <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="0d022-361">Each row in the <xref:System.Data.IDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
```  
public IEnumerable<T> Translate<T>(IDataReader reader) {}  
```  
  
 <span data-ttu-id="0d022-362">Description : Cette méthode est utilisée pour convertir un existant <xref:System.Data.Common.DbDataReader> aux objets.</span><span class="sxs-lookup"><span data-stu-id="0d022-362">Description: This method is used to convert an existing <xref:System.Data.Common.DbDataReader> to objects.</span></span> <span data-ttu-id="0d022-363">Chaque ligne dans le <xref:System.Data.Common.DbDataReader> est convertie en un objet dans le <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="0d022-363">Each row in the <xref:System.Data.Common.DbDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="0d022-364">**Paramètres génériques :**</span><span class="sxs-lookup"><span data-stu-id="0d022-364">**Generic parameters:**</span></span>  
  
 <span data-ttu-id="0d022-365">`T`: Consultez <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d022-365">`T`: See <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span></span>  
  
 <span data-ttu-id="0d022-366">**Paramètres :**</span><span class="sxs-lookup"><span data-stu-id="0d022-366">**Parameters:**</span></span>  
  
 <span data-ttu-id="0d022-367">`Query`: Consultez la description de la commande sous <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d022-367">`Query`: See the description for command under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="0d022-368">`Parameters`: Consultez la description des paramètres sous <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d022-368">`Parameters`: See the description for parameters under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="0d022-369">**Type de retour :**</span><span class="sxs-lookup"><span data-stu-id="0d022-369">**Return type:**</span></span>  
  
 <span data-ttu-id="0d022-370"><xref:System.Collections.Generic.IEnumerable%601>: collection d’objets retournés par la conversion.</span><span class="sxs-lookup"><span data-stu-id="0d022-370"><xref:System.Collections.Generic.IEnumerable%601>: collection of objects returned by the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Data.Linq.IMultipleResults Translate (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.IMultipleResults Translate(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (reader As DbDataReader) As IMultipleResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::IMultipleResults ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IMultipleResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0d022-371">
            <see cref="T:System.Data.IDataReader" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-371">The <see cref="T:System.Data.IDataReader" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-372">Convertit un <see cref="T:System.Data.Common.DbDataReader" /> existant en objets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-372">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-373">Liste d'objets retournés par la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-373">A list of objects returned by the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Translate (Type elementType, System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Translate(class System.Type elementType, class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (elementType As Type, reader As DbDataReader) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Translate(Type ^ elementType, System::Data::Common::DbDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="0d022-374">Type de <see cref="T:System.Collections.Generic.IEnumerable`1" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-374">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span>
          </span>
          <span data-ttu-id="0d022-375">L’algorithme pour mettre en correspondance les colonnes du résultat aux champs et propriétés de l’objet fonctionne comme suit : si un champ ou une propriété est mappée à un nom de colonne particulier, ce nom de colonne est attendu dans le jeu de résultats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-375">The algorithm for matching columns in the result to fields and properties in the object works as follows:  If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span>
          </span>
          <span data-ttu-id="0d022-376">Si un champ ou une propriété n'est pas mappé, une colonne de même nom que le champ ou la propriété est attendue dans le jeu de résultats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-376">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span>
          </span>
          <span data-ttu-id="0d022-377">la comparaison est effectuée en recherchant en premier une correspondance sensible à la casse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-377">The comparison is performed by looking for a case-sensitive match first.</span>
          </span>
          <span data-ttu-id="0d022-378">Si cette correspondance est introuvable, une recherche ultérieure est effectuée pour une correspondance qui ne tient pas compte de la casse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-378">If this match is not found, a subsequent search is occurs for a case-insensitive match.</span>
          </span>
          <span data-ttu-id="0d022-379">La requête doit retourner tous les champs et propriétés de l’objet pour lesquels un suivi est effectué (excepté ceux qui sont chargés sur une base différée) quand toutes les conditions suivantes sont vraies : <c>T</c> est une entité explicitement suivie par <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-379">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:  <c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
          <span data-ttu-id="0d022-380">
            <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-380">
              <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="0d022-381">L'entité a une clé primaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-381">The entity has a primary key.</span>
          </span>
          <span data-ttu-id="0d022-382">Sinon, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-382">Otherwise an exception is thrown.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="0d022-383">
            <see cref="T:System.Data.IDataReader" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-383">The <see cref="T:System.Data.IDataReader" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-384">Convertit un <see cref="T:System.Data.Common.DbDataReader" /> existant en objets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-384">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-385">Liste d'objets retournés par la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-385">A list of objects returned by the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; Translate&lt;TResult&gt; (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Translate&lt;TResult&gt;(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate(Of TResult) (reader As DbDataReader) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="0d022-386">Type de <see cref="T:System.Collections.Generic.IEnumerable`1" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-386">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span>
          </span>
        </typeparam>
        <param name="reader">
          <span data-ttu-id="0d022-387">
            <see cref="T:System.Data.IDataReader" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-387">The <see cref="T:System.Data.IDataReader" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d022-388">Convertit un <see cref="T:System.Data.Common.DbDataReader" /> existant en objets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-388">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d022-389">Collection d'objets retournés par la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d022-389">A collection of objects returned by the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>