<Type Name="MemberChangeConflict" FullName="System.Data.Linq.MemberChangeConflict">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c726f7c5bc72f6167fb02bbde449a0062bae32e0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36689507" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MemberChangeConflict" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MemberChangeConflict extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.MemberChangeConflict" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MemberChangeConflict" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberChangeConflict sealed" />
  <TypeSignature Language="F#" Value="type MemberChangeConflict = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="05d6c-101">Représente une situation dans laquelle une tentative de mise à jour échoue parce que les valeurs membres ont été mises à jour depuis la dernière fois que le client les a lues.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05d6c-101">Represents a situation in which an attempted update fails because member values have been updated since the client last read them.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05d6c-102">L’exemple suivant montre comment récupérer des informations sur les membres en conflit.</span><span class="sxs-lookup"><span data-stu-id="05d6c-102">The following example shows how to retrieve information about members in conflict.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.MemberChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.memberchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.MemberChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.memberchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public object CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : obj" Usage="System.Data.Linq.MemberChangeConflict.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05d6c-103">Obtient la valeur actuelle du membre en conflit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-103">Gets the current value of the member in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05d6c-104">Objet en conflit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-104">The object in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseValue">
      <MemberSignature Language="C#" Value="public object DatabaseValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DatabaseValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.DatabaseValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DatabaseValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DatabaseValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DatabaseValue : obj" Usage="System.Data.Linq.MemberChangeConflict.DatabaseValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05d6c-105">Obtient la valeur de la base de données du membre en conflit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-105">Gets the database value of the member in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05d6c-106">Valeur de l'objet en conflit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-106">The value of the object in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public bool IsModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModified" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.IsModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsModified { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsModified : bool" Usage="System.Data.Linq.MemberChangeConflict.IsModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05d6c-107">Obtient une valeur qui indique si les données de membre ont été modifiées depuis la dernière lecture ou actualisation de la base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-107">Gets a value that indicates whether the member data has been changed since the last database read or refresh.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05d6c-108">
            <see langword="True" /> si les données de membre ont été modifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-108">
              <see langword="True" /> if the member data has been changed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05d6c-109">Utilisez la propriété pour fusionner des nouvelles valeurs sans remplacer en attente de mises à jour.</span><span class="sxs-lookup"><span data-stu-id="05d6c-109">Use the property to merge new values without overwriting pending updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResolved">
      <MemberSignature Language="C#" Value="public bool IsResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResolved" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.IsResolved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsResolved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResolved { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsResolved : bool" Usage="System.Data.Linq.MemberChangeConflict.IsResolved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05d6c-110">Obtient une valeur qui indique si le conflit a été résolu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-110">Gets a value that indicates whether the conflict has been resolved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05d6c-111">
            <see langword="True" /> si le conflit a été résolu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-111">
              <see langword="True" /> if the conflict has been resolved.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05d6c-112">Cette propriété est en lecture seule et est automatiquement mis à jour les conflits sont résolus.</span><span class="sxs-lookup"><span data-stu-id="05d6c-112">This property is read-only and is automatically updated as conflicts are resolved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.Member" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Reflection.MemberInfo" Usage="System.Data.Linq.MemberChangeConflict.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05d6c-113">Obtient des informations de métadonnées relatives au membre en conflit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-113">Gets metadata information about the member in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05d6c-114">Informations relatives au membre en conflit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-114">Information about the member in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValue">
      <MemberSignature Language="C#" Value="public object OriginalValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.OriginalValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalValue : obj" Usage="System.Data.Linq.MemberChangeConflict.OriginalValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05d6c-115">Obtient la valeur d'origine du membre en conflit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-115">Gets the original value of the member in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05d6c-116">Valeur d'origine du membre en conflit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-116">The original value of the member in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05d6c-117">Résout des conflits entre membres en conservant les valeurs actuelles et en réinitialisant les valeurs d'origine de base pour qu'elles correspondent aux valeurs les plus récentes de la base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-117">Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (System.Data.Linq.RefreshMode refreshMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(valuetype System.Data.Linq.RefreshMode refreshMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.MemberChangeConflict.Resolve(System.Data.Linq.RefreshMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Data::Linq::RefreshMode refreshMode);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Data.Linq.RefreshMode -&gt; unit" Usage="memberChangeConflict.Resolve refreshMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Linq.RefreshMode" />
      </Parameters>
      <Docs>
        <param name="refreshMode">
          <span data-ttu-id="05d6c-118">Consultez <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-118">See <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05d6c-119">Utilise un paramètre <see cref="T:System.Data.Linq.RefreshMode" /> pour spécifier automatiquement la valeur à définir en tant que valeur actuelle pour le membre en conflit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-119">Uses a <see cref="T:System.Data.Linq.RefreshMode" /> parameter to automatically specify the value to set as the current value for the member in conflict.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05d6c-120">Les exemples suivants montrent les résultats sont générés à l’aide de différentes valeurs de <xref:System.Data.Linq.RefreshMode>.</span><span class="sxs-lookup"><span data-stu-id="05d6c-120">The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05d6c-121">L’exemple suivant remplace des valeurs actuelles par les valeurs de la base de données.</span><span class="sxs-lookup"><span data-stu-id="05d6c-121">The following example overwrites current values with values from the database.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.RefreshMode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#1)]  
  
 <span data-ttu-id="05d6c-122">L’exemple suivant montre comment permuter les valeurs d’origine avec les valeurs extraites de la base de données.</span><span class="sxs-lookup"><span data-stu-id="05d6c-122">The following example shows how to swap the original value with the values retrieved from the database.</span></span> <span data-ttu-id="05d6c-123">Aucune valeur actuelle n'est modifiée.</span><span class="sxs-lookup"><span data-stu-id="05d6c-123">No current value is modified.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.RefreshMode#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#2)]  
  
 <span data-ttu-id="05d6c-124">L’exemple suivant conserve les valeurs actuelles qui ont été modifiés, mais les autres valeurs des mises à jour avec les valeurs de la base de données.</span><span class="sxs-lookup"><span data-stu-id="05d6c-124">The following example keeps the current values that have been changed, but updates the other values with database values.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#3](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#3)]
 [!code-vb[System.Data.Linq.RefreshMode#3](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.MemberChangeConflict.Resolve(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Resolve : obj -&gt; unit" Usage="memberChangeConflict.Resolve value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="05d6c-125">Valeur à définir en tant que valeur actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-125">The value to set as the current value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05d6c-126">Spécifie la valeur à définir en tant que valeur actuelle pour le membre en conflit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05d6c-126">Specifies the value to set as the current value for the member in conflict.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05d6c-127">La valeur définie ici est la valeur à utiliser dans une ultérieure <xref:System.Data.Linq.DataContext.SubmitChanges%2A> opération.</span><span class="sxs-lookup"><span data-stu-id="05d6c-127">The value set here is the value to be used in a subsequent <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>