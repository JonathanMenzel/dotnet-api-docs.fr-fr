<Type Name="BinaryClientFormatterSink" FullName="System.Runtime.Remoting.Channels.BinaryClientFormatterSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a044650ab18f76297bb9b22d9f445b63d21061b7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30488573" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BinaryClientFormatterSink : System.Runtime.Remoting.Channels.IChannelSinkBase, System.Runtime.Remoting.Channels.IClientChannelSink, System.Runtime.Remoting.Channels.IClientFormatterSink, System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryClientFormatterSink extends System.Object implements class System.Runtime.Remoting.Channels.IChannelSinkBase, class System.Runtime.Remoting.Channels.IClientChannelSink, class System.Runtime.Remoting.Channels.IClientFormatterSink, class System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSink" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryClientFormatterSink&#xA;Implements IChannelSinkBase, IClientChannelSink, IClientFormatterSink, IMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryClientFormatterSink : System::Runtime::Remoting::Channels::IChannelSinkBase, System::Runtime::Remoting::Channels::IClientChannelSink, System::Runtime::Remoting::Channels::IClientFormatterSink, System::Runtime::Remoting::Messaging::IMessageSink" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSinkBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IClientChannelSink</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IClientFormatterSink</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMessageSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0f2cc-101">Fournit l'implémentation pour un récepteur de formateur client qui utilise <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f2cc-101">Provides the implementation for a client formatter sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f2cc-102">La fonction du récepteur de formateur consiste à générer les en-têtes nécessaires et à sérialiser le message dans le flux.</span><span class="sxs-lookup"><span data-stu-id="0f2cc-102">The function of the formatter sink is to generate the necessary headers and serialize the message to the stream.</span></span> <span data-ttu-id="0f2cc-103">Après le récepteur de formateur, le <xref:System.Runtime.Remoting.Messaging.IMessage> est transmis à tous les récepteurs dans la chaîne via la <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> ou <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest%2A> appels.</span><span class="sxs-lookup"><span data-stu-id="0f2cc-103">After the formatter sink, the <xref:System.Runtime.Remoting.Messaging.IMessage> is forwarded to all sinks in the chain through the <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> or <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest%2A> calls.</span></span> <span data-ttu-id="0f2cc-104">À ce stade, le message a déjà été sérialisé et est fourni en tant qu’information uniquement.</span><span class="sxs-lookup"><span data-stu-id="0f2cc-104">At this stage the message has already been serialized and is provided as information only.</span></span> <span data-ttu-id="0f2cc-105">Les récepteurs nécessaires pour créer ou modifier le message doivent être placés dans la chaîne de récepteurs avant le formateur.</span><span class="sxs-lookup"><span data-stu-id="0f2cc-105">Sinks that need to create or modify the message must be placed in the sink chain before the formatter.</span></span> <span data-ttu-id="0f2cc-106">Ceci est facilement obtenue en implémentant le <xref:System.Runtime.Remoting.Channels.IClientFormatterSink> interface, ce qui donne l’impression d’avoir une référence vers le récepteur de formateur.</span><span class="sxs-lookup"><span data-stu-id="0f2cc-106">This is easily achieved by implementing the <xref:System.Runtime.Remoting.Channels.IClientFormatterSink> interface, which gives the impression of having a reference to the formatter sink.</span></span> <span data-ttu-id="0f2cc-107">Le récepteur de formateur réel peut alors être placé ultérieurement dans la chaîne de récepteurs.</span><span class="sxs-lookup"><span data-stu-id="0f2cc-107">The real formatter sink can then be placed later in the sink chain.</span></span>  
  
|<span data-ttu-id="0f2cc-108">Property</span><span class="sxs-lookup"><span data-stu-id="0f2cc-108">Property</span></span>|<span data-ttu-id="0f2cc-109">Description </span><span class="sxs-lookup"><span data-stu-id="0f2cc-109">Description</span></span>|  
|--------------|-----------------|  
|`includeVersions`|<span data-ttu-id="0f2cc-110">Spécifie si le formateur doit inclure les informations de contrôle de version.</span><span class="sxs-lookup"><span data-stu-id="0f2cc-110">Specifies whether the formatter will include versioning information.</span></span> <span data-ttu-id="0f2cc-111">Les valeurs sont `true` ou `false`.</span><span class="sxs-lookup"><span data-stu-id="0f2cc-111">Values are `true` or `false`.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f2cc-112">À l’aide d’une instance de cet objet de données non fiables, ou sur un canal non sécurisé est un risque de sécurité.</span><span class="sxs-lookup"><span data-stu-id="0f2cc-112">Using an instance of this object with untrusted data or across an unsecure channel is a security risk.</span></span> <span data-ttu-id="0f2cc-113">Utilisez cet objet uniquement avec des données approuvées et sur un canal sécurisé.</span><span class="sxs-lookup"><span data-stu-id="0f2cc-113">Use this object only with trusted data and across a secure channel.</span></span> <span data-ttu-id="0f2cc-114">Pour plus d’informations, consultez [Validation des données](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="0f2cc-114">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryClientFormatterSink (System.Runtime.Remoting.Channels.IClientChannelSink nextSink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Remoting.Channels.IClientChannelSink nextSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.#ctor(System.Runtime.Remoting.Channels.IClientChannelSink)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nextSink As IClientChannelSink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryClientFormatterSink(System::Runtime::Remoting::Channels::IClientChannelSink ^ nextSink);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Channels.IClientChannelSink" />
      </Parameters>
      <Docs>
        <param name="nextSink">
          <span data-ttu-id="0f2cc-115">
            <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> suivant de la chaîne de récepteurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-115">The next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f2cc-116">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-116">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSink" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Messaging.IMessageSink replySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsyncProcessMessage (msg As IMessage, replySink As IMessageSink) As IMessageCtrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageCtrl ^ AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Messaging::IMessageSink ^ replySink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageCtrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="replySink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="0f2cc-117">Message à traiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-117">The message to process.</span>
          </span>
        </param>
        <param name="replySink">
          <span data-ttu-id="0f2cc-118">Récepteur qui recevra la réponse au message fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-118">The sink that will receive the reply to the provided message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f2cc-119">Traite de façon asynchrone le message fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-119">Asynchronously processes the provided message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f2cc-120">
            <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> qui fournit un moyen de contrôler le message asynchrone après sa diffusion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-120">A <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> that provides a way to control the asynchronous message after it has been dispatched.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessRequest">
      <MemberSignature Language="C#" Value="public void AsyncProcessRequest (System.Runtime.Remoting.Channels.IClientChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessRequest(class System.Runtime.Remoting.Channels.IClientChannelSinkStack sinkStack, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.AsyncProcessRequest(System.Runtime.Remoting.Channels.IClientChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AsyncProcessRequest(System::Runtime::Remoting::Channels::IClientChannelSinkStack ^ sinkStack, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IClientChannelSinkStack" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack">
          <span data-ttu-id="0f2cc-121">Pile de récepteurs de canal qui a appelé le récepteur en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-121">A stack of channel sinks that called the current sink.</span>
          </span>
        </param>
        <param name="msg">
          <span data-ttu-id="0f2cc-122">Message à traiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-122">The message to process.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="0f2cc-123">En-têtes à ajouter à l'en-tête de message sortant vers le serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-123">The headers to add to the outgoing message that is heading to the server.</span>
          </span>
        </param>
        <param name="stream">
          <span data-ttu-id="0f2cc-124">Flux dirigé vers le récepteur de transport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-124">The stream that is headed toward the transport sink.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f2cc-125">Demande le traitement asynchrone d'un appel de méthode sur le récepteur en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-125">Requests asynchronous processing of a method call on the current sink.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AsyncProcessResponse(System::Runtime::Remoting::Channels::IClientResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack">
          <span data-ttu-id="0f2cc-126">Pile de récepteurs de canal qui a appelé le récepteur en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-126">A stack of sinks that called the current sink.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0f2cc-127">Informations associées au récepteur en cours, générées du côté demande et nécessaires du côté réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-127">Information that is associated with the current sink, generated on the request side and needed on the response side.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="0f2cc-128">En-têtes récupérés du flux de réponse serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-128">The headers that are retrieved from the server response stream.</span>
          </span>
        </param>
        <param name="stream">
          <span data-ttu-id="0f2cc-129">Flux revenant du récepteur de transport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-129">The stream that is coming back from the transport sink.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f2cc-130">Demande le traitement asynchrone de la réponse à un appel de méthode sur le récepteur en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-130">Requests asynchronous processing of a response to a method call on the current sink.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Remoting.Channels.ClientChannelSinkStack" />
        <altmember cref="M:System.Runtime.Remoting.Channels.ClientChannelSinkStack.Push(System.Runtime.Remoting.Channels.IClientChannelSink,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetRequestStream (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetRequestStream(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.GetRequestStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequestStream (msg As IMessage, headers As ITransportHeaders) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetRequestStream(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="0f2cc-131">
            <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> contenant des informations sur l'appel de méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-131">The <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> that contains details about the method call.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="0f2cc-132">En-têtes à ajouter à l'en-tête de message sortant vers le serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-132">The headers to add to the outgoing message that is heading to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f2cc-133">Retourne <see cref="T:System.IO.Stream" /> dans lequel le message fourni doit être sérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-133">Returns the <see cref="T:System.IO.Stream" /> onto which the provided message is to be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f2cc-134">
            <see cref="T:System.IO.Stream" /> dans lequel le message fourni doit être sérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-134">The <see cref="T:System.IO.Stream" /> onto which the provided message is to be serialized.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f2cc-135">Le <xref:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.GetRequestStream%2A> méthode est appelée par le récepteur de formateur avant de sérialiser le message.</span><span class="sxs-lookup"><span data-stu-id="0f2cc-135">The <xref:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.GetRequestStream%2A> method is called by the formatter sink before it serializes the message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextChannelSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IClientChannelSink NextChannelSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IClientChannelSink NextChannelSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.NextChannelSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextChannelSink As IClientChannelSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Channels::IClientChannelSink ^ NextChannelSink { System::Runtime::Remoting::Channels::IClientChannelSink ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IClientChannelSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f2cc-136">Obtient le <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> suivant de la chaîne de récepteurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-136">Gets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f2cc-137">
            <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> suivant de la chaîne de récepteurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-137">The next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink NextSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.IMessageSink NextSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.NextSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSink As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::IMessageSink ^ NextSink { System::Runtime::Remoting::Messaging::IMessageSink ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f2cc-138">Obtient le <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> suivant de la chaîne de récepteurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-138">Gets the next <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> in the sink chain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f2cc-139">
            <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> suivant de la chaîne de récepteurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-139">The next <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> in the sink chain.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public void ProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, class System.IO.Stream requestStream, [out] class System.Runtime.Remoting.Channels.ITransportHeaders&amp; responseHeaders, [out] class System.IO.Stream&amp; responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.ProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessage (msg As IMessage, requestHeaders As ITransportHeaders, requestStream As Stream, ByRef responseHeaders As ITransportHeaders, ByRef responseStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ requestHeaders, System::IO::Stream ^ requestStream, [Runtime::InteropServices::Out] System::Runtime::Remoting::Channels::ITransportHeaders ^ % responseHeaders, [Runtime::InteropServices::Out] System::IO::Stream ^ % responseStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="requestHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="responseHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders&amp;" RefType="out" />
        <Parameter Name="responseStream" Type="System.IO.Stream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="0f2cc-140">Message à traiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-140">The message to process.</span>
          </span>
        </param>
        <param name="requestHeaders">
          <span data-ttu-id="0f2cc-141">En-têtes à ajouter à l'en-tête de message sortant vers le serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-141">The headers to add to the outgoing message that is heading to the server.</span>
          </span>
        </param>
        <param name="requestStream">
          <span data-ttu-id="0f2cc-142">Flux dirigé vers le récepteur de transport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-142">The stream that is headed toward the transport sink.</span>
          </span>
        </param>
        <param name="responseHeaders">
          <span data-ttu-id="0f2cc-143">Cette méthode retourne une interface <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> qui contient les en-têtes que le serveur a retournés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-143">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> interface that holds the headers that the server returned.</span>
          </span>
          <span data-ttu-id="0f2cc-144">Ce paramètre est passé sans être initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-144">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="responseStream">
          <span data-ttu-id="0f2cc-145">Cette méthode retourne un <see cref="T:System.IO.Stream" /> provenant du récepteur de transport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-145">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is coming back from the transport sink.</span>
          </span>
          <span data-ttu-id="0f2cc-146">Ce paramètre est passé sans être initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-146">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f2cc-147">Demande le traitement de messages à partir du récepteur en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-147">Requests message processing from the current sink.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f2cc-148">Obtient un <see cref="T:System.Collections.IDictionary" /> de propriétés pour le récepteur de canal en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-148">Gets a <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f2cc-149">
            <see cref="T:System.Collections.IDictionary" /> de propriétés pour le récepteur de canal en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-149">A <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f2cc-150">Pour plus d’informations, consultez [ &#91; \<topic://cpconchannelformatterconfigurationproperties >&#93;](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span><span class="sxs-lookup"><span data-stu-id="0f2cc-150">For more information, see [&#91;\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SyncProcessMessage (msg As IMessage) As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessage ^ SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="0f2cc-151">Message à traiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-151">The message to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f2cc-152">Traite de façon synchrone le message fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-152">Synchronously processes the provided message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f2cc-153">Réponse au message traité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f2cc-153">The response to the processed message.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>