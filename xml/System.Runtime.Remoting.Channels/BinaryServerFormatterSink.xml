<Type Name="BinaryServerFormatterSink" FullName="System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7bdd4eefb288bd3cb2846d81c687910a77144a8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36631732" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BinaryServerFormatterSink : System.Runtime.Remoting.Channels.IChannelSinkBase, System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryServerFormatterSink extends System.Object implements class System.Runtime.Remoting.Channels.IChannelSinkBase, class System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryServerFormatterSink&#xA;Implements IChannelSinkBase, IServerChannelSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryServerFormatterSink : System::Runtime::Remoting::Channels::IChannelSinkBase, System::Runtime::Remoting::Channels::IServerChannelSink" />
  <TypeSignature Language="F#" Value="type BinaryServerFormatterSink = class&#xA;    interface IServerChannelSink&#xA;    interface IChannelSinkBase" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSinkBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IServerChannelSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="6fc5a-101">Fournit l'implémentation pour un récepteur de formateur serveur qui utilise <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6fc5a-101">Provides the implementation for a server formatter sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc5a-102">Le flux de demande se propage à partir du récepteur de transport serveur via les récepteurs de canal serveur jusqu'à ce qu’il atteigne le récepteur de formateur approprié.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-102">The request stream propagates from the server transport sink through the server channel sinks until it reaches the appropriate formatter sink.</span></span> <span data-ttu-id="6fc5a-103">Le récepteur de formateur désérialise le message et le passe à travers le pipeline.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-103">The formatter sink deserializes the message and passes it through the pipeline.</span></span> <span data-ttu-id="6fc5a-104">Un récepteur de distribution spécial est inséré à la fin de la chaîne de récepteurs de canal par le <xref:System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain%2A?displayProperty=nameWithType> (méthode), qui est appelée par les canaux serveur pour créer des chaînes de récepteurs de canal du serveur.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-104">A special dispatch sink is inserted at the end of the channel sink chain by the <xref:System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain%2A?displayProperty=nameWithType> method, which is called by server channels to create the server channel sink chains.</span></span> <span data-ttu-id="6fc5a-105">Lorsque le message n’atteigne le récepteur de distribution, le récepteur de distribution transmet le message à l’infrastructure de communication à distance.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-105">When the message reaches the dispatch sink, the dispatch sink passes the message to the remoting infrastructure.</span></span>  
  
 <span data-ttu-id="6fc5a-106">Le tableau suivant montre le récepteur de propriétés de configuration qui peuvent être spécifiées pour le fournisseur de récepteur en cours.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-106">The following table shows the sink configuration properties that can be specified for the current sink provider.</span></span>  
  
|<span data-ttu-id="6fc5a-107">Property</span><span class="sxs-lookup"><span data-stu-id="6fc5a-107">Property</span></span>|<span data-ttu-id="6fc5a-108">Description </span><span class="sxs-lookup"><span data-stu-id="6fc5a-108">Description</span></span>|  
|--------------|-----------------|  
|`includeVersions`|<span data-ttu-id="6fc5a-109">Spécifie si le formateur doit inclure les informations de contrôle de version.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-109">Specifies whether the formatter will include versioning information.</span></span> <span data-ttu-id="6fc5a-110">Valeurs `true` ou `false`.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-110">Values `true` or `false`.</span></span>|  
|`strictBinding`|<span data-ttu-id="6fc5a-111">Indique qu'un formateur de réception essaiera d'abord d'identifier le type à l'aide des informations de version complètes si elles existent avant d'utiliser uniquement le nom du type et de l'assembly sans les informations de version.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-111">Indicates that a receiving formatter will first try to identify the type using complete version information if it exists before using only the type name and assembly name without version information.</span></span> <span data-ttu-id="6fc5a-112">Valeurs `true` ou `false`.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-112">Values `true` or `false`.</span></span> <span data-ttu-id="6fc5a-113">La valeur par défaut pour les deux formateurs fournis par le système est `false`.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-113">The default for both system-provided formatters is `false`.</span></span>|  
|`typeFilterLevel`|<span data-ttu-id="6fc5a-114">Valeur de chaîne qui spécifie le niveau de désérialisation automatique qu’un canal serveur tente de réaliser.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-114">A string value that specifies the level of automatic deserialization that a server channel attempts.</span></span> <span data-ttu-id="6fc5a-115">Valeurs prises en charge sont `Low` (la valeur par défaut) et `Full`.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-115">Supported values are `Low` (the default) and `Full`.</span></span> <span data-ttu-id="6fc5a-116">Pour plus d’informations sur les niveaux de la désérialisation, consultez [ &#91; \<topic://cpconAutomaticDeserializationInNETRemoting >&#93;](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b).</span><span class="sxs-lookup"><span data-stu-id="6fc5a-116">For details about deserialization levels, see [&#91;\<topic://cpconAutomaticDeserializationInNETRemoting>&#93;](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b).</span></span><br /><br /> <span data-ttu-id="6fc5a-117">Cette propriété est prise en charge uniquement par le .NET Framework version 1.1 sur les plateformes suivantes : Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Édition familiale, Windows XP Professionnel et Windows Server 2003 famille.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-117">This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, and Windows Server 2003 family.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="6fc5a-118">À l’aide d’une instance de cet objet de données non fiables, ou sur un canal non sécurisé est un risque de sécurité.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-118">Using an instance of this object with untrusted data or across an unsecure channel is a security risk.</span></span> <span data-ttu-id="6fc5a-119">Utilisez cet objet uniquement avec des données approuvées et sur un canal sécurisé.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-119">Use this object only with trusted data and across a secure channel.</span></span> <span data-ttu-id="6fc5a-120">Pour plus d’informations, consultez [Validation des données](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="6fc5a-120">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryServerFormatterSink (System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol protocol, System.Runtime.Remoting.Channels.IServerChannelSink nextSink, System.Runtime.Remoting.Channels.IChannelReceiver receiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Remoting.Channels.BinaryServerFormatterSink/Protocol protocol, class System.Runtime.Remoting.Channels.IServerChannelSink nextSink, class System.Runtime.Remoting.Channels.IChannelReceiver receiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryServerFormatterSink(System::Runtime::Remoting::Channels::BinaryServerFormatterSink::Protocol protocol, System::Runtime::Remoting::Channels::IServerChannelSink ^ nextSink, System::Runtime::Remoting::Channels::IChannelReceiver ^ receiver);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.BinaryServerFormatterSink : System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol * System.Runtime.Remoting.Channels.IServerChannelSink * System.Runtime.Remoting.Channels.IChannelReceiver -&gt; System.Runtime.Remoting.Channels.BinaryServerFormatterSink" Usage="new System.Runtime.Remoting.Channels.BinaryServerFormatterSink (protocol, nextSink, receiver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protocol" Type="System.Runtime.Remoting.Channels.BinaryServerFormatterSink+Protocol" />
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
        <Parameter Name="receiver" Type="System.Runtime.Remoting.Channels.IChannelReceiver" />
      </Parameters>
      <Docs>
        <param name="protocol">
          <span data-ttu-id="6fc5a-121">
            <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" /> qui sera utilisé avec l'instance actuelle de <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-121">The <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" /> that will be used with the current instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</span>
          </span>
        </param>
        <param name="nextSink">
          <span data-ttu-id="6fc5a-122">Récepteur suivant dans la chaîne de récepteurs de canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-122">The next sink in the channel sink chain.</span>
          </span>
        </param>
        <param name="receiver">
          <span data-ttu-id="6fc5a-123">Indique le canal qui recevra les messages sérialisés par la nouvelle instance de <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-123">Indicates the channel that will receive the messages that are serialized by the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc5a-124">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-124">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AsyncProcessResponse(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit&#xA;override this.AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit" Usage="binaryServerFormatterSink.AsyncProcessResponse (sinkStack, state, msg, headers, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack">
          <span data-ttu-id="6fc5a-125">Pile de récepteurs permettant de retourner au récepteur de transport serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-125">A stack of sinks that is leading back to the server transport sink.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="6fc5a-126">Informations associées au récepteur en cours, générées du côté demande et nécessaires du côté réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-126">Information that is associated with the current sink, generated on the request side, and needed on the response side.</span>
          </span>
        </param>
        <param name="msg">
          <span data-ttu-id="6fc5a-127">Message de réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-127">The response message.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="6fc5a-128">En-têtes à ajouter au message de retour envoyé au client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-128">The headers to add to the return message that is heading to the client.</span>
          </span>
        </param>
        <param name="stream">
          <span data-ttu-id="6fc5a-129">Flux retournant au récepteur de transport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-129">The stream that is heading back to the transport sink.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc5a-130">Demande le traitement de la réponse d'un appel de méthode envoyé de façon asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-130">Requests processing of the response from a method call that is sent asynchronously.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Remoting.Channels.ServerChannelSinkStack" />
        <altmember cref="M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResponseStream(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseStream (sinkStack As IServerResponseChannelSinkStack, state As Object, msg As IMessage, headers As ITransportHeaders) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetResponseStream(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream&#xA;override this.GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream" Usage="binaryServerFormatterSink.GetResponseStream (sinkStack, state, msg, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="sinkStack">
          <span data-ttu-id="6fc5a-131">Pile de récepteurs permettant de retourner au récepteur de transport serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-131">A stack of sinks that is leading back to the server transport sink.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="6fc5a-132">Informations associées au récepteur en cours, générées du côté demande et nécessaires du côté réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-132">Information that is associated with the current sink, generated on the request side, and needed on the response side.</span>
          </span>
        </param>
        <param name="msg">
          <span data-ttu-id="6fc5a-133">Message de réponse à sérialiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-133">The response message to serialize.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="6fc5a-134">En-têtes à placer dans le flux de réponse vers le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-134">The headers to put in the response stream to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc5a-135">Retourne <see cref="T:System.IO.Stream" /> sur lequel le message de réponse fourni doit être sérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-135">Returns the <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc5a-136">
            <see cref="T:System.IO.Stream" /> sur lequel le message de réponse fourni doit être sérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-136">The <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc5a-137">Cette méthode est appelée quand un flux de réponse doit être créé.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-137">This method is called when a response stream needs to be created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextChannelSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextChannelSink As IServerChannelSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Channels::IServerChannelSink ^ NextChannelSink { System::Runtime::Remoting::Channels::IServerChannelSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink" Usage="System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IServerChannelSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fc5a-138">Obtient le <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> suivant de la chaîne de récepteurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-138">Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fc5a-139">
            <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> suivant de la chaîne de récepteurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-139">The next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage(class System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, class System.Runtime.Remoting.Messaging.IMessage requestMsg, class System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, class System.IO.Stream requestStream, [out] class System.Runtime.Remoting.Messaging.IMessage&amp; responseMsg, [out] class System.Runtime.Remoting.Channels.ITransportHeaders&amp; responseHeaders, [out] class System.IO.Stream&amp; responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessMessage (sinkStack As IServerChannelSinkStack, requestMsg As IMessage, requestHeaders As ITransportHeaders, requestStream As Stream, ByRef responseMsg As IMessage, ByRef responseHeaders As ITransportHeaders, ByRef responseStream As Stream) As ServerProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Channels::ServerProcessing ProcessMessage(System::Runtime::Remoting::Channels::IServerChannelSinkStack ^ sinkStack, System::Runtime::Remoting::Messaging::IMessage ^ requestMsg, System::Runtime::Remoting::Channels::ITransportHeaders ^ requestHeaders, System::IO::Stream ^ requestStream, [Runtime::InteropServices::Out] System::Runtime::Remoting::Messaging::IMessage ^ % responseMsg, [Runtime::InteropServices::Out] System::Runtime::Remoting::Channels::ITransportHeaders ^ % responseHeaders, [Runtime::InteropServices::Out] System::IO::Stream ^ % responseStream);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing&#xA;override this.ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing" Usage="binaryServerFormatterSink.ProcessMessage (sinkStack, requestMsg, requestHeaders, requestStream, responseMsg, responseHeaders, responseStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.ServerProcessing</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerChannelSinkStack" />
        <Parameter Name="requestMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="requestHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="responseMsg" Type="System.Runtime.Remoting.Messaging.IMessage&amp;" RefType="out" />
        <Parameter Name="responseHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders&amp;" RefType="out" />
        <Parameter Name="responseStream" Type="System.IO.Stream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sinkStack">
          <span data-ttu-id="6fc5a-140">Pile de récepteurs de canal qui a appelé le récepteur en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-140">A stack of channel sinks that called the current sink.</span>
          </span>
        </param>
        <param name="requestMsg">
          <span data-ttu-id="6fc5a-141">Message qui contient la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-141">The message that contains the request.</span>
          </span>
        </param>
        <param name="requestHeaders">
          <span data-ttu-id="6fc5a-142">En-têtes récupérés du message entrant provenant du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-142">Headers that are retrieved from the incoming message from the client.</span>
          </span>
        </param>
        <param name="requestStream">
          <span data-ttu-id="6fc5a-143">Flux qui doit être traité et passé sur le récepteur de désérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-143">The stream that needs to be processed and passed on to the deserialization sink.</span>
          </span>
        </param>
        <param name="responseMsg">
          <span data-ttu-id="6fc5a-144">Cette méthode retourne un <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> contenant le message de réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-144">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message.</span>
          </span>
          <span data-ttu-id="6fc5a-145">Ce paramètre est passé sans être initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-145">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="responseHeaders">
          <span data-ttu-id="6fc5a-146">Cette méthode retourne un <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> contenant les en-têtes à ajouter au message de retour envoyé au client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-146">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to the return message that is heading to the client.</span>
          </span>
          <span data-ttu-id="6fc5a-147">Ce paramètre est passé sans être initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-147">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="responseStream">
          <span data-ttu-id="6fc5a-148">Cette méthode retourne un <see cref="T:System.IO.Stream" /> destiné au récepteur de transport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-148">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading to the transport sink.</span>
          </span>
          <span data-ttu-id="6fc5a-149">Ce paramètre est passé sans être initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-149">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc5a-150">Demande le traitement de messages à partir du récepteur en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-150">Requests message processing from the current sink.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc5a-151">Valeur d'état de <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> qui fournit des informations sur le mode de traitement du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-151">A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that provides information about how the message was processed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc5a-152">Tâche d’un proxy est de convertir un appel de méthode qu’il est reçu dans un message.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-152">The proxy's job is to convert a method call that is invoked on it into a message.</span></span> <span data-ttu-id="6fc5a-153">Le message, qui implémente le <xref:System.Runtime.Remoting.Messaging.IMessage> l’interface, est passé de la terminaison client à la fin du serveur en appelant <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> sur des objets de récepteur de messages.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-153">The message, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects.</span></span> <span data-ttu-id="6fc5a-154">Les récepteurs de messages sont chaînées ensemble, ce qui signifie que chaque récepteur de messages est chargée d’appeler <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> sur le récepteur de messages suivant après le récepteur de messages en cours a fini son travail.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-154">Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after the current message sink has finished its work.</span></span> <span data-ttu-id="6fc5a-155">Par exemple, un récepteur de messages de synchronisation peut entraîner un verrou est acquis ou libéré et délégué au récepteur de messages en aval.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-155">For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.</span></span>  
  
 <span data-ttu-id="6fc5a-156">Lorsque le récepteur de canal du formateur obtient un message qui doit être envoyé sur le canal, il appelle <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, en passant le message en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-156">When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter.</span></span> <span data-ttu-id="6fc5a-157">Le récepteur de formateur crée ensuite le tableau d’en-têtes de transport et appelle <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> sur le récepteur de formateur.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-157">The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink.</span></span> <span data-ttu-id="6fc5a-158">Cet appel est transféré vers le bas de la chaîne de récepteurs et tout récepteur peut créer un flux de demande qui sera repassé au récepteur de formateur.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-158">This call is forwarded down the sink chain, and any sink can create a request stream that will be passed back to the formatter sink.</span></span> <span data-ttu-id="6fc5a-159">Après cela, appelez retourne, le message est sérialisé, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> est appelée sur la première chaîne dans la chaîne de récepteurs et le message est passé aux récepteurs de canal.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-159">After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks.</span></span>  
  
 <span data-ttu-id="6fc5a-160">Une fois que le canal de récepteurs obtenir le message, ils peuvent écrire des données dans le flux de données, ajouter des en-têtes dans le tableau d’en-tête et s’ajoutent à la pile du récepteur avant de transférer l’appel au récepteur suivant.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-160">After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink.</span></span> <span data-ttu-id="6fc5a-161">Lorsque l’appel atteint le récepteur de transport à la fin de la chaîne, le récepteur de transport envoie les en-têtes et le message sérialisé sur le canal sur le serveur sur lequel le processus est inversé.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-161">When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.</span></span>  
  
 <span data-ttu-id="6fc5a-162">Lorsque le message atteint le côté serveur, le récepteur de transport récupère les en-têtes de message à partir du flux sérialisé et transfère ces éléments dans la chaîne de récepteurs jusqu'à ce que le récepteur de formateur est atteint.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-162">When the message gets to the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until the formatter sink is reached.</span></span> <span data-ttu-id="6fc5a-163">Puis, le récepteur de formateur désérialise le message et le transmet à l’infrastructure de communication à distance.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-163">The formatter sink then deserializes the message and forwards it to the remoting infrastructure.</span></span> <span data-ttu-id="6fc5a-164">Ensuite, l’infrastructure de communication à distance convertit le message en un appel de méthode et appelle l’objet serveur.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-164">Then, the remoting infrastructure turns the message into a method call, and calls the server object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.IDictionary" Usage="System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fc5a-165">Obtient un <see cref="T:System.Collections.IDictionary" /> de propriétés pour le récepteur de canal en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-165">Gets a <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fc5a-166">
            <see cref="T:System.Collections.IDictionary" /> de propriétés pour le récepteur de canal en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-166">A <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc5a-167">Pour plus d’informations, consultez [ &#91; \<topic://cpconchannelformatterconfigurationproperties >&#93;](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span><span class="sxs-lookup"><span data-stu-id="6fc5a-167">For more information, see [&#91;\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeFilterLevel">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.TypeFilterLevel TypeFilterLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel TypeFilterLevel" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFilterLevel As TypeFilterLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::TypeFilterLevel TypeFilterLevel { System::Runtime::Serialization::Formatters::TypeFilterLevel get(); void set(System::Runtime::Serialization::Formatters::TypeFilterLevel value); };" />
      <MemberSignature Language="F#" Value="member this.TypeFilterLevel : System.Runtime.Serialization.Formatters.TypeFilterLevel with get, set" Usage="System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.TypeFilterLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fc5a-168">Obtient ou définit la valeur de <see langword="TypeFilterLevel" /> de la désérialisation automatique effectuée par <see langword="BinaryServerFormatterSink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-168">Gets or sets the <see langword="TypeFilterLevel" /> value of automatic deserialization that the <see langword="BinaryServerFormatterSink" /> performs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fc5a-169">
            <see langword="TypeFilterLevel" /> qui représente le niveau actuel de désérialisation automatique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc5a-169">The <see langword="TypeFilterLevel" /> that represents the current automatic deserialization level.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc5a-170">Valeurs prises en charge sont `Low` (la valeur par défaut) et `Full`.</span><span class="sxs-lookup"><span data-stu-id="6fc5a-170">Supported values are `Low` (the default) and `Full`.</span></span> <span data-ttu-id="6fc5a-171">Pour plus d’informations sur les niveaux de la désérialisation, consultez [la désérialisation automatique dans .NET Remoting](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b).</span><span class="sxs-lookup"><span data-stu-id="6fc5a-171">For details about deserialization levels, see [Automatic Deserialization in .NET Remoting](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>