<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BinaryServerFormatterSink.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c3a6ca3d0edfeb864f51041f2c2b21f73be1057b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3a6ca3d0edfeb864f51041f2c2b21f73be1057b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>Provides the implementation for a server formatter sink that uses the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /&gt;</ph>.</source>
          <target state="translated">Fournit l'implémentation pour un récepteur de formateur serveur qui utilise <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>The request stream propagates from the server transport sink through the server channel sinks until it reaches the appropriate formatter sink.</source>
          <target state="translated">Le flux de demande se propage à partir du récepteur de transport serveur via les récepteurs de canal serveur jusqu'à ce qu’il atteigne le récepteur de formateur approprié.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>The formatter sink deserializes the message and passes it through the pipeline.</source>
          <target state="translated">Le récepteur de formateur désérialise le message et le passe à travers le pipeline.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>A special dispatch sink is inserted at the end of the channel sink chain by the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain%2A?displayProperty=nameWithType&gt;</ph> method, which is called by server channels to create the server channel sink chains.</source>
          <target state="translated">Un récepteur de distribution spécial est inséré à la fin de la chaîne de récepteurs de canal par le <ph id="ph1">&lt;xref:System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain%2A?displayProperty=nameWithType&gt;</ph> (méthode), qui est appelée par les canaux serveur pour créer des chaînes de récepteurs de canal du serveur.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>When the message reaches the dispatch sink, the dispatch sink passes the message to the remoting infrastructure.</source>
          <target state="translated">Lorsque le message n’atteigne le récepteur de distribution, le récepteur de distribution transmet le message à l’infrastructure de communication à distance.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>The following table shows the sink configuration properties that can be specified for the current sink provider.</source>
          <target state="translated">Le tableau suivant montre le récepteur de propriétés de configuration qui peuvent être spécifiées pour le fournisseur de récepteur en cours.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>Specifies whether the formatter will include versioning information.</source>
          <target state="translated">Spécifie si le formateur doit inclure les informations de contrôle de version.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>Values <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Valeurs <ph id="ph1">`true`</ph> ou <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>Indicates that a receiving formatter will first try to identify the type using complete version information if it exists before using only the type name and assembly name without version information.</source>
          <target state="translated">Indique qu'un formateur de réception essaiera d'abord d'identifier le type à l'aide des informations de version complètes si elles existent avant d'utiliser uniquement le nom du type et de l'assembly sans les informations de version.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>Values <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Valeurs <ph id="ph1">`true`</ph> ou <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>The default for both system-provided formatters is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">La valeur par défaut pour les deux formateurs fournis par le système est <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>A string value that specifies the level of automatic deserialization that a server channel attempts.</source>
          <target state="translated">Valeur de chaîne qui spécifie le niveau de désérialisation automatique qu’un canal serveur tente de réaliser.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>Supported values are <ph id="ph1">`Low`</ph> (the default) and <ph id="ph2">`Full`</ph>.</source>
          <target state="translated">Valeurs prises en charge sont <ph id="ph1">`Low`</ph> (la valeur par défaut) et <ph id="ph2">`Full`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>For details about deserialization levels, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://cpconAutomaticDeserializationInNETRemoting&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les niveaux de la désérialisation, consultez <bpt id="p1">[</bpt> &amp;#91; <ph id="ph1">\&lt;</ph>topic://cpconAutomaticDeserializationInNETRemoting &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, and Windows Server 2003 family.</source>
          <target state="translated">Cette propriété est prise en charge uniquement par le .NET Framework version 1.1 sur les plateformes suivantes : Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Édition familiale, Windows XP Professionnel et Windows Server 2003 famille.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>Using an instance of this object with untrusted data or across an unsecure channel is a security risk.</source>
          <target state="translated">À l’aide d’une instance de cet objet de données non fiables, ou sur un canal non sécurisé est un risque de sécurité.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>Use this object only with trusted data and across a secure channel.</source>
          <target state="translated">Utilisez cet objet uniquement avec des données approuvées et sur un canal sécurisé.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Validation des données<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" /&gt;</ph> that will be used with the current instance of <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" /&gt;</ph> qui sera utilisé avec l'instance actuelle de <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)">
          <source>The next sink in the channel sink chain.</source>
          <target state="translated">Récepteur suivant dans la chaîne de récepteurs de canal.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)">
          <source>Indicates the channel that will receive the messages that are serialized by the new instance of <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /&gt;</ph>.</source>
          <target state="translated">Indique le canal qui recevra les messages sérialisés par la nouvelle instance de <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
          <source>A stack of sinks that is leading back to the server transport sink.</source>
          <target state="translated">Pile de récepteurs permettant de retourner au récepteur de transport serveur.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
          <source>Information that is associated with the current sink, generated on the request side, and needed on the response side.</source>
          <target state="translated">Informations associées au récepteur en cours, générées du côté demande et nécessaires du côté réponse.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
          <source>The response message.</source>
          <target state="translated">Message de réponse.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
          <source>The headers to add to the return message that is heading to the client.</source>
          <target state="translated">En-têtes à ajouter au message de retour envoyé au client.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
          <source>The stream that is heading back to the transport sink.</source>
          <target state="translated">Flux retournant au récepteur de transport.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
          <source>Requests processing of the response from a method call that is sent asynchronously.</source>
          <target state="translated">Demande le traitement de la réponse d'un appel de méthode envoyé de façon asynchrone.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
          <source>A stack of sinks that is leading back to the server transport sink.</source>
          <target state="translated">Pile de récepteurs permettant de retourner au récepteur de transport serveur.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
          <source>Information that is associated with the current sink, generated on the request side, and needed on the response side.</source>
          <target state="translated">Informations associées au récepteur en cours, générées du côté demande et nécessaires du côté réponse.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
          <source>The response message to serialize.</source>
          <target state="translated">Message de réponse à sérialiser.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
          <source>The headers to put in the response stream to the client.</source>
          <target state="translated">En-têtes à placer dans le flux de réponse vers le client.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> onto which the provided response message is to be serialized.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> sur lequel le message de réponse fourni doit être sérialisé.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> onto which the provided response message is to be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> sur lequel le message de réponse fourni doit être sérialisé.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
          <source>This method is called when a response stream needs to be created.</source>
          <target state="translated">Cette méthode est appelée quand un flux de réponse doit être créé.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink">
          <source>Gets the next <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /&gt;</ph> in the sink chain.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /&gt;</ph> suivant de la chaîne de récepteurs.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink">
          <source>The next <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /&gt;</ph> in the sink chain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /&gt;</ph> suivant de la chaîne de récepteurs.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>A stack of channel sinks that called the current sink.</source>
          <target state="translated">Pile de récepteurs de canal qui a appelé le récepteur en cours.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>The message that contains the request.</source>
          <target state="translated">Message qui contient la demande.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>Headers that are retrieved from the incoming message from the client.</source>
          <target state="translated">En-têtes récupérés du message entrant provenant du client.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>The stream that needs to be processed and passed on to the deserialization sink.</source>
          <target state="translated">Flux qui doit être traité et passé sur le récepteur de désérialisation.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>When this method returns, contains a <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMessage" /&gt;</ph> that holds the response message.</source>
          <target state="translated">Cette méthode retourne un <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMessage" /&gt;</ph> contenant le message de réponse.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Ce paramètre est passé sans être initialisé.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>When this method returns, contains a <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /&gt;</ph> that holds the headers to add to the return message that is heading to the client.</source>
          <target state="translated">Cette méthode retourne un <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /&gt;</ph> contenant les en-têtes à ajouter au message de retour envoyé au client.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Ce paramètre est passé sans être initialisé.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>When this method returns, contains a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> that is heading to the transport sink.</source>
          <target state="translated">Cette méthode retourne un <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> destiné au récepteur de transport.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Ce paramètre est passé sans être initialisé.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>Requests message processing from the current sink.</source>
          <target state="translated">Demande le traitement de messages à partir du récepteur en cours.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /&gt;</ph> status value that provides information about how the message was processed.</source>
          <target state="translated">Valeur d'état de <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /&gt;</ph> qui fournit des informations sur le mode de traitement du message.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>The proxy's job is to convert a method call that is invoked on it into a message.</source>
          <target state="translated">Tâche d’un proxy est de convertir un appel de méthode qu’il est reçu dans un message.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>The message, which implements the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;</ph> interface, is passed from the client end to the server end by invoking <ph id="ph2">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;</ph> on message sink objects.</source>
          <target state="translated">Le message, qui implémente le <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;</ph> l’interface, est passé de la terminaison client à la fin du serveur en appelant <ph id="ph2">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;</ph> sur des objets de récepteur de messages.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>Message sinks are chained together, which means that every message sink is responsible for calling <ph id="ph1">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;</ph> on the next message sink after the current message sink has finished its work.</source>
          <target state="translated">Les récepteurs de messages sont chaînées ensemble, ce qui signifie que chaque récepteur de messages est chargée d’appeler <ph id="ph1">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;</ph> sur le récepteur de messages suivant après le récepteur de messages en cours a fini son travail.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.</source>
          <target state="translated">Par exemple, un récepteur de messages de synchronisation peut entraîner un verrou est acquis ou libéré et délégué au récepteur de messages en aval.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>When the formatter channel sink gets a message that needs to be sent over the channel, it calls <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;</ph>, passing the message as a parameter.</source>
          <target state="translated">Lorsque le récepteur de canal du formateur obtient un message qui doit être envoyé sur le canal, il appelle <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;</ph>, en passant le message en tant que paramètre.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>The formatter sink then creates the transport header array and calls <ph id="ph1">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt;</ph> on the formatter sink.</source>
          <target state="translated">Le récepteur de formateur crée ensuite le tableau d’en-têtes de transport et appelle <ph id="ph1">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt;</ph> sur le récepteur de formateur.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>This call is forwarded down the sink chain, and any sink can create a request stream that will be passed back to the formatter sink.</source>
          <target state="translated">Cet appel est transféré vers le bas de la chaîne de récepteurs et tout récepteur peut créer un flux de demande qui sera repassé au récepteur de formateur.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>After this call returns, the message is serialized, <ph id="ph1">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt;</ph> is called on the first chain in the sink chain, and the message is passed to the channel sinks.</source>
          <target state="translated">Après cela, appelez retourne, le message est sérialisé, <ph id="ph1">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt;</ph> est appelée sur la première chaîne dans la chaîne de récepteurs et le message est passé aux récepteurs de canal.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink.</source>
          <target state="translated">Une fois que le canal de récepteurs obtenir le message, ils peuvent écrire des données dans le flux de données, ajouter des en-têtes dans le tableau d’en-tête et s’ajoutent à la pile du récepteur avant de transférer l’appel au récepteur suivant.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.</source>
          <target state="translated">Lorsque l’appel atteint le récepteur de transport à la fin de la chaîne, le récepteur de transport envoie les en-têtes et le message sérialisé sur le canal sur le serveur sur lequel le processus est inversé.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>When the message gets to the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until the formatter sink is reached.</source>
          <target state="translated">Lorsque le message atteint le côté serveur, le récepteur de transport récupère les en-têtes de message à partir du flux sérialisé et transfère ces éléments dans la chaîne de récepteurs jusqu'à ce que le récepteur de formateur est atteint.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>The formatter sink then deserializes the message and forwards it to the remoting infrastructure.</source>
          <target state="translated">Puis, le récepteur de formateur désérialise le message et le transmet à l’infrastructure de communication à distance.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
          <source>Then, the remoting infrastructure turns the message into a method call, and calls the server object.</source>
          <target state="translated">Ensuite, l’infrastructure de communication à distance convertit le message en un appel de méthode et appelle l’objet serveur.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of properties for the current channel sink.</source>
          <target state="translated">Obtient un <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> de propriétés pour le récepteur de canal en cours.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of properties for the current channel sink.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> de propriétés pour le récepteur de canal en cours.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties">
          <source>For more information, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://cpconchannelformatterconfigurationproperties&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt> &amp;#91; <ph id="ph1">\&lt;</ph>topic://cpconchannelformatterconfigurationproperties &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe)</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel">
          <source>Gets or sets the <ph id="ph1">&lt;see langword="TypeFilterLevel" /&gt;</ph> value of automatic deserialization that the <ph id="ph2">&lt;see langword="BinaryServerFormatterSink" /&gt;</ph> performs.</source>
          <target state="translated">Obtient ou définit la valeur de <ph id="ph1">&lt;see langword="TypeFilterLevel" /&gt;</ph> de la désérialisation automatique effectuée par <ph id="ph2">&lt;see langword="BinaryServerFormatterSink" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel">
          <source>The <ph id="ph1">&lt;see langword="TypeFilterLevel" /&gt;</ph> that represents the current automatic deserialization level.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="TypeFilterLevel" /&gt;</ph> qui représente le niveau actuel de désérialisation automatique.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel">
          <source>Supported values are <ph id="ph1">`Low`</ph> (the default) and <ph id="ph2">`Full`</ph>.</source>
          <target state="translated">Valeurs prises en charge sont <ph id="ph1">`Low`</ph> (la valeur par défaut) et <ph id="ph2">`Full`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel">
          <source>For details about deserialization levels, see <bpt id="p1">[</bpt>Automatic Deserialization in .NET Remoting<ept id="p1">](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les niveaux de la désérialisation, consultez <bpt id="p1">[</bpt>la désérialisation automatique dans .NET Remoting<ept id="p1">](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>