<Type Name="ServerChannelSinkStack" FullName="System.Runtime.Remoting.Channels.ServerChannelSinkStack">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="059909f38528ba5dd1e591f568d16ee0ee4063ff" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37467921" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServerChannelSinkStack : System.Runtime.Remoting.Channels.IServerChannelSinkStack" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServerChannelSinkStack extends System.Object implements class System.Runtime.Remoting.Channels.IServerChannelSinkStack, class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.ServerChannelSinkStack" />
  <TypeSignature Language="VB.NET" Value="Public Class ServerChannelSinkStack&#xA;Implements IServerChannelSinkStack" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServerChannelSinkStack : System::Runtime::Remoting::Channels::IServerChannelSinkStack" />
  <TypeSignature Language="F#" Value="type ServerChannelSinkStack = class&#xA;    interface IServerChannelSinkStack&#xA;    interface IServerResponseChannelSinkStack" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IServerChannelSinkStack</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Holds the stack of server channel sinks.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe effectue une demande de liaison. Une exception de sécurité est levée si l’appelant immédiat n’a pas d’autorisation d’infrastructure. Consultez [demandes de liaison](~/docs/framework/misc/link-demands.md) pour plus d’informations.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec du code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerChannelSinkStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServerChannelSinkStack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.ServerChannelSinkStack" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AsyncProcessResponse(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessResponse : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit&#xA;override this.AsyncProcessResponse : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit" Usage="serverChannelSinkStack.AsyncProcessResponse (msg, headers, stream)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="msg">The message to be serialized onto the requested stream.</param>
        <param name="headers">The headers retrieved from the server response stream.</param>
        <param name="stream">The stream coming back from the transport sink.</param>
        <summary>Requests asynchronous processing of a method call on the sinks in the current sink stack.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode initialise le traitement asynchrone sur le récepteur supérieur dans la pile de récepteurs en cours. Pour plus d’informations, consultez le <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException">The current sink stack is empty.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec du code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResponseStream(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseStream (msg As IMessage, headers As ITransportHeaders) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetResponseStream(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseStream : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream&#xA;override this.GetResponseStream : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream" Usage="serverChannelSinkStack.GetResponseStream (msg, headers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack.GetResponseStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="msg">The message to be serialized onto the requested stream.</param>
        <param name="headers">The headers retrieved from the server response stream.</param>
        <summary>Returns the <see cref="T:System.IO.Stream" /> onto which the specified message is to be serialized.</summary>
        <returns>The <see cref="T:System.IO.Stream" /> onto which the specified message is to be serialized.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne le flux retourné par la <xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A?displayProperty=nameWithType> appelée avec le `msg` et `headers` paramètres (<xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A> (`msg`, `headers`)) sur le récepteur supérieur dans la pile de récepteurs en cours. Le récepteur supérieur de la pile de récepteurs reste inchangé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException">The sink stack is empty.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec du code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public object Pop (System.Runtime.Remoting.Channels.IServerChannelSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pop(class System.Runtime.Remoting.Channels.IServerChannelSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IServerChannelSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop (sink As IServerChannelSink) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Pop(System::Runtime::Remoting::Channels::IServerChannelSink ^ sink);" />
      <MemberSignature Language="F#" Value="abstract member Pop : System.Runtime.Remoting.Channels.IServerChannelSink -&gt; obj&#xA;override this.Pop : System.Runtime.Remoting.Channels.IServerChannelSink -&gt; obj" Usage="serverChannelSinkStack.Pop sink" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IServerChannelSink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
      </Parameters>
      <Docs>
        <param name="sink">The sink to remove and return from the sink stack.</param>
        <summary>Pops the information associated with all the sinks from the sink stack up to and including the specified sink.</summary>
        <returns>Information generated on the request side and associated with the specified sink.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException">The current sink stack is empty, or the specified sink was never pushed onto the current stack.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec du code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (System.Runtime.Remoting.Channels.IServerChannelSink sink, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Push(class System.Runtime.Remoting.Channels.IServerChannelSink sink, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (sink As IServerChannelSink, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Push(System::Runtime::Remoting::Channels::IServerChannelSink ^ sink, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Push : System.Runtime.Remoting.Channels.IServerChannelSink * obj -&gt; unit&#xA;override this.Push : System.Runtime.Remoting.Channels.IServerChannelSink * obj -&gt; unit" Usage="serverChannelSinkStack.Push (sink, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sink">The sink to push onto the sink stack.</param>
        <param name="state">Information generated on the request side that is needed on the response side.</param>
        <summary>Pushes the specified sink and information associated with it onto the sink stack.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les informations générées du côté demande et spécifiées dans le `state` paramètre est renvoyé dans le `state` paramètre de la <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> méthode du récepteur correspondant.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec du code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ServerCallback">
      <MemberSignature Language="C#" Value="public void ServerCallback (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ServerCallback(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ServerCallback (ar As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ServerCallback(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member ServerCallback : IAsyncResult -&gt; unit&#xA;override this.ServerCallback : IAsyncResult -&gt; unit" Usage="serverChannelSinkStack.ServerCallback ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSinkStack.ServerCallback(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">The status and state of an asynchronous operation on a remote object.</param>
        <summary>Provides a <see cref="T:System.AsyncCallback" /> delegate to handle a callback after a message has been dispatched asynchronously.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le message distribué représente un appel de méthode de demande sur un objet distant.  
  
 Le <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback%2A> méthode est conçue pour une utilisation uniquement par l’infrastructure .NET Framework remoting. Vous ne devez pas l’appeler directement.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec du code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Store">
      <MemberSignature Language="C#" Value="public void Store (System.Runtime.Remoting.Channels.IServerChannelSink sink, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Store(class System.Runtime.Remoting.Channels.IServerChannelSink sink, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Store (sink As IServerChannelSink, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Store(System::Runtime::Remoting::Channels::IServerChannelSink ^ sink, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Store : System.Runtime.Remoting.Channels.IServerChannelSink * obj -&gt; unit&#xA;override this.Store : System.Runtime.Remoting.Channels.IServerChannelSink * obj -&gt; unit" Usage="serverChannelSinkStack.Store (sink, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSinkStack.Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sink">A server channel sink.</param>
        <param name="state">The state associated with <c>sink</c>.</param>
        <summary>Stores a message sink and its associated state for later asynchronous processing.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store%2A> méthode est conçue pour une utilisation uniquement par l’infrastructure .NET Framework remoting. Vous ne devez pas l’appeler directement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException">The current sink stack is empty.  -or-  The specified sink was never pushed onto the current stack.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec du code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="StoreAndDispatch">
      <MemberSignature Language="C#" Value="public void StoreAndDispatch (System.Runtime.Remoting.Channels.IServerChannelSink sink, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreAndDispatch(class System.Runtime.Remoting.Channels.IServerChannelSink sink, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StoreAndDispatch (sink As IServerChannelSink, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StoreAndDispatch(System::Runtime::Remoting::Channels::IServerChannelSink ^ sink, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member StoreAndDispatch : System.Runtime.Remoting.Channels.IServerChannelSink * obj -&gt; unit&#xA;override this.StoreAndDispatch : System.Runtime.Remoting.Channels.IServerChannelSink * obj -&gt; unit" Usage="serverChannelSinkStack.StoreAndDispatch (sink, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSinkStack.StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sink">A server channel sink.</param>
        <param name="state">The state associated with <c>sink</c>.</param>
        <summary>Stores a message sink and its associated state, and then dispatches a message asynchronously, using the sink just stored and any other stored sinks.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch%2A> méthode est conçue pour une utilisation uniquement par l’infrastructure .NET Framework remoting. Vous ne devez pas l’appeler directement.  
  
 La méthode doit être appelée uniquement par un récepteur de transport afin d’effectuer une distribution asynchrone.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec du code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>