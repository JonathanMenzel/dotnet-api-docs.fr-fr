<Type Name="ProfileManager" FullName="System.Web.Profile.ProfileManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f2f70d5b1749f212a41f5e1536ca55e830438f7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37545518" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ProfileManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages user profile data and settings.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le profil ASP.NET est utilisé pour stocker et récupérer des paramètres utilisateur dans une source de données comme une base de données. Le profil utilisateur est accessible à l’aide de la <xref:System.Web.HttpContext.Profile%2A> propriété du courant <xref:System.Web.HttpContext>. Les valeurs d’informations et de la propriété de profil sont gérés à l’aide d’un fournisseur de profils.  
  
 Le <xref:System.Web.Profile.ProfileManager> classe est utilisée pour gérer les paramètres de profil, rechercher des profils utilisateur et supprimer des profils utilisateur qui ne sont plus en cours d’utilisation. Le <xref:System.Web.Profile.ProfileManager> classe fournit des méthodes statiques et des propriétés qui sont accessibles en référençant la <xref:System.Web.Profile.ProfileManager> classe dans votre code d’application. Pour obtenir un exemple, consultez la section exemple dans cette rubrique et des exemples supplémentaires dans les rubriques pour les membres de la <xref:System.Web.Profile.ProfileManager> classe.  
  
 Par défaut, le profil utilisateur est désactivé pour toutes les applications ASP.NET. Pour activer le profil utilisateur, définissez le `enabled` attribut de l’élément de configuration sur true, comme indiqué dans l’exemple suivant.  
  
```  
<configuration>  
  <system.web>  
    <profile enabled="true" />  
  </system.web>  
</configuration>  
```  
  
 Pour plus d’informations sur le profil utilisateur, consultez [vue d’ensemble des propriétés de profil ASP.NET](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d).  
  
 Un fournisseur de profils est utilisé pour stocker et récupérer des propriétés dans le profil utilisateur. Le .NET Framework inclut un <xref:System.Web.Profile.SqlProfileProvider> classe qui stocke les propriétés de profil utilisateur dans une base de données SQL Server. Un <xref:System.Web.Profile.SqlProfileProvider> instance nommée `AspNetSqlProvider` est spécifié dans la configuration de l’ordinateur en tant que le fournisseur de profils par défaut. Le `AspNetSqlProvider` instance se connecte à la base de données SQL Server sur le serveur Web local. Vous pouvez spécifier un <xref:System.Web.Profile.SqlProfileProvider> qui se connecte à un autre serveur SQL en tant que le fournisseur de profils par défaut à l’aide de l’élément de configuration et le `defaultProvider` attribut de l’élément de configuration, comme indiqué dans l’exemple suivant.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui utilise le <xref:System.Web.Profile.ProfileManager> classe pour gérer les profils inactifs.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDynamicProfileProperty">
      <MemberSignature Language="C#" Value="public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDynamicProfileProperty(class System.Web.Configuration.ProfilePropertySettings property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDynamicProfileProperty (property As ProfilePropertySettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDynamicProfileProperty(System::Web::Configuration::ProfilePropertySettings ^ property);" />
      <MemberSignature Language="F#" Value="static member AddDynamicProfileProperty : System.Web.Configuration.ProfilePropertySettings -&gt; unit" Usage="System.Web.Profile.ProfileManager.AddDynamicProfileProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Web.Configuration.ProfilePropertySettings" />
      </Parameters>
      <Docs>
        <param name="property">The property settings to be added.</param>
        <summary>Adds a profile property programmatically.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est fonctionnellement équivalente à l’ajout de la propriété à la `profile` section du fichier de configuration. Pour appeler cette méthode pour ajouter la propriété de profil, vous devez effectuer l’appel dans une méthode qui est marquée avec le <xref:System.Web.PreApplicationStartMethodAttribute> attribut.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application for which to store and retrieve profile information.</summary>
        <value>Le nom de l’application pour laquelle stocker et récupérer des informations de profil.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager> utilise le <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriété à associer des informations de profil à différentes applications. Cela permet à plusieurs applications d’utiliser la même base de données pour stocker des informations utilisateur sans provoquer de conflits entre les utilisateurs en double. Plusieurs applications ASP.NET peuvent utiliser la même base de données utilisateur en spécifiant la même valeur dans le <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriété. Le <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriété peut être définie par programme, ou elle peut être définie façon déclarative dans le fichier de configuration pour l’application Web à l’aide de la `applicationName` attribut.  
  
 Si une valeur n’est pas spécifiée pour le `applicationName` d’attribut dans le fichier de configuration pour l’application Web, puis utilisent les fournisseurs de profils inclus avec le .NET Framework le <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> valeur de propriété pour les applications ASP.NET. Pour les applications non-ASP.NET, la valeur par défaut est le <xref:System.Diagnostics.ProcessModule.ModuleName%2A> valeur de propriété, sans l’extension de fichier.  
  
 Le <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriété expose le <xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=nameWithType> propriété du fournisseur de profils par défaut. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, ils peuvent être configurés avec un nom d’application différent. Pour accéder au nom de l’application d’un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et l’accès le <xref:System.Configuration.SettingsProvider.ApplicationName%2A> propriété du fournisseur directement.  
  
> [!CAUTION]
>  Car une instance de fournisseur de profils par défaut unique est utilisée pour toutes les demandes prises en charge par un <xref:System.Web.HttpApplication> de l’objet, plusieurs demandes peuvent s’exécuter simultanément et tentez de définir la <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> valeur de propriété. Le <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriété n’est pas thread-safe pour les écritures multiples et la modification du <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> valeur de propriété peut entraîner un comportement inattendu pour plusieurs utilisateurs d’une application. Il est recommandé d’éviter d’écrire du code qui permet aux utilisateurs de définir la <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriété, sauf si vous en avez besoin. Un exemple d’une application où le paramètre le <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriété peut être requise est une application administrative qui gère les données de profil pour plusieurs applications. Ce type d’application doit être une application pour utilisateur unique et non une application Web.  
  
   
  
## Examples  
 L’extrait de fichier de configuration suivant montre l’élément dans la section du fichier Web.config pour une application ASP.NET. Il définit le fournisseur de profils par défaut de l’application sur un <xref:System.Web.Profile.SqlProfileProvider> instance et définit les <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> à `MyApplication`.  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
  <add name="SqlProvider"  
    type="System.Web.Profile.SqlProfileProvider"  
    connectionStringName="SqlServices"  
    applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticSaveEnabled">
      <MemberSignature Language="C#" Value="public static bool AutomaticSaveEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutomaticSaveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AutomaticSaveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutomaticSaveEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticSaveEnabled : bool" Usage="System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user profile will be automatically saved at the end of the execution of an ASP.NET page.</summary>
        <value>
          <see langword="true" /> Si le profil utilisateur sera enregistré automatiquement à la fin de l’exécution d’une page ASP.NET ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> propriété indique si l’enregistrement automatique du profil utilisateur est activé pour l’application. Si l’enregistrement automatique est activée, le <xref:System.Web.Profile.ProfileModule> déclenche l’objet le <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> événement et appelle le <xref:System.Web.Profile.ProfileBase.Save%2A> méthode pendant le <xref:System.Web.HttpApplication.EndRequest> événement à la fin de l’exécution d’une page ASP.NET.  
  
 Le <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> propriété est définie à l’aide de la `automaticSaveEnabled` attribut de l’élément dans le fichier Web.config pour une application ASP.NET.  
  
   
  
## Examples  
 L’extrait de fichier de configuration suivant montre l’élément dans la section du fichier Web.config pour une application ASP.NET. Il spécifie le fournisseur de profils par défaut de l’application à un <xref:System.Web.Profile.SqlProfileProvider> instance et définit les `automaticSaveEnabled` attribut `true`.  
  
```  
<profile enabled="true"  
  automaticSaveEnabled="true"  
  defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An attempt was made to get the <see cref="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" /> property value without at least <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member DeleteInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are deleted.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Deletes user profile data for which the last activity date and time occurred before the specified date and time.</summary>
        <returns>The number of profiles deleted from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A> méthode est utilisée pour supprimer les données de profil non utilisées à partir de la source de données pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Utilisez le `authenticationOption` paramètre pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher. Parmi les profils recherchés, tout profil avec un <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> qui survient à ou avant le texte spécifié `userInactiveSinceDate` valeur du paramètre est supprimée.  
  
 Le <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A> les appels de méthode le <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> méthode du fournisseur de profils par défaut. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, les informations de profil dans la source de données ne sont pas supprimées. Pour supprimer les profils inactifs qui sont gérés par un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et appelez le <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> méthode du fournisseur directement.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui gère des profils inactifs. Un bouton est fourni pour supprimer tous les profils qui ont été inutilisés pendant le nombre spécifié de jours et sont donc considérés inactifs.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfile">
      <MemberSignature Language="C#" Value="public static bool DeleteProfile (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteProfile(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfile (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteProfile(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteProfile : string -&gt; bool" Usage="System.Web.Profile.ProfileManager.DeleteProfile username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the profile to be deleted.</param>
        <summary>Deletes the profile for the specified user name from the data source.</summary>
        <returns>
          <see langword="true" /> if the user profile was found and deleted; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> méthode supprime toutes les informations de profil et les propriétés pour le profil utilisateur pour le texte spécifié `username` à partir de la source de données spécifié <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>.  
  
 Le <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> les appels de méthode le <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> méthode du fournisseur de profils par défaut pour effectuer l’opération de suppression. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, ils ne sont pas supprimés. Pour supprimer des propriétés de profil qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et appelez le <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> méthode du fournisseur directement.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui gère des profils inactifs. Le <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> méthode est appelée lorsqu’un seul profil est sélectionné pour être supprimé. Un profil est considéré comme inactif est basée sur la date spécifiée pour le `userInactiveSinceDate` valeur de paramètre passée à la <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> (méthode).  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteProfilecs.aspx#10)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteProfilevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string ("") or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deletes profile properties and information from the data source for a supplied list of profiles.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (string[] usernames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(string[] usernames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (usernames As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(cli::array &lt;System::String ^&gt; ^ usernames);" />
      <MemberSignature Language="F#" Value="static member DeleteProfiles : string[] -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteProfiles usernames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">A string array of user names for profiles to be deleted.</param>
        <summary>Deletes profile properties and information for the supplied list of user names.</summary>
        <returns>The number of profiles deleted from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> méthode supprime toutes les informations de profil et les propriétés pour les profils spécifiés à partir de la source de données pour l’application spécifiée par la <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriété. La liste des profils à supprimer est spécifiée comme un tableau de chaînes des noms d’utilisateur. Si les propriétés de profil et les informations existent dans la source de données pour un nom d’utilisateur dans le `usernames` paramètre, ils sont supprimés.  
  
 La valeur de retour peut différer de la longueur du tableau spécifié de `usernames`. Cela indique que certains des profils dans le tableau spécifié de `usernames` ont déjà été supprimés du magasin de données.  
  
 Le <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> les appels de méthode le <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> méthode du fournisseur de profils par défaut. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, ils ne sont pas supprimés. Pour supprimer des propriétés de profil qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et appelez le <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> méthode du fournisseur directement.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui gère des profils inactifs. Un <xref:System.Web.UI.WebControls.GridView> contrôle affiche les profils inactifs. Chaque ligne de la <xref:System.Web.UI.WebControls.GridView> contrôle inclut un bouton qui supprime le profil pour cette ligne à partir de la source de données avec un appel à la <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> (méthode).  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The length of <paramref name="usernames" /> is zero.  \- or -  One of the items in <paramref name="usernames" /> is an empty string ("") or contains a comma.  \- or -  Two or more items in <paramref name="usernames" /> have the same value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernames" /> is <see langword="null" />.  \- or -  One of the items in <paramref name="usernames" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(class System.Web.Profile.ProfileInfoCollection profiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (profiles As ProfileInfoCollection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(System::Web::Profile::ProfileInfoCollection ^ profiles);" />
      <MemberSignature Language="F#" Value="static member DeleteProfiles : System.Web.Profile.ProfileInfoCollection -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteProfiles profiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profiles" Type="System.Web.Profile.ProfileInfoCollection" />
      </Parameters>
      <Docs>
        <param name="profiles">A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> that contains profile information for profiles to be deleted.</param>
        <summary>Deletes profile properties and information from the data source for the supplied list of profiles.</summary>
        <returns>The number of profiles deleted from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> méthode supprime toutes les informations de profil et les propriétés pour les profils spécifiés à partir de la source de données pour l’application spécifiée par la <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriété. La liste des profils à supprimer est spécifiée en utilisant un <xref:System.Web.Profile.ProfileInfoCollection> qui lui est passé en tant que le `profiles` paramètre. Un <xref:System.Web.Profile.ProfileInfoCollection> peuvent être retournées par la <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>, et <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> méthodes.  
  
 Notez que la valeur de retour peut différer le <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> valeur pour fourni <xref:System.Web.Profile.ProfileInfoCollection>. Cela indique que certains des profils dans spécifié <xref:System.Web.Profile.ProfileInfoCollection> ont déjà été supprimés du magasin de données.  
  
 Le <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> les appels de méthode le <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=nameWithType> méthode du fournisseur de profils par défaut. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, ils ne sont pas supprimés. Pour supprimer des propriétés de profil qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et appelez le <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> méthode du fournisseur directement.  
  
   
  
## Examples  
 L’exemple de code suivant permet à un utilisateur de rechercher des profils à l’aide de la <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> et <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> méthodes. L’utilisateur peut supprimer ensuite les profils retournés avec un appel à la <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> (méthode).  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" /> value of zero.  \- or -  One of the <see cref="T:System.Web.Profile.ProfileInfo" /> objects in <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> that is an empty string ("") or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="profiles" /> is <see langword="null" />.  \- or -  One of the <see cref="T:System.Web.Profile.ProfileInfo" /> objects in <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> that is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public static bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Enabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool" Usage="System.Web.Profile.ProfileManager.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user profile is enabled for the application.</summary>
        <value>
          <see langword="true" /> Si le profil utilisateur est activé ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le profil utilisateur est activé pour une application qui utilise le `enabled` attribut de l’élément de configuration.  
  
   
  
## Examples  
 L’exemple de code suivant montre l’élément dans la section du fichier Web.config pour une application ASP.NET où le profil utilisateur a été activé.  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindInactiveProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves profile information for profiles in which the last activity date occurred on or before a specified date and time and the user name for the profile matches a specified name.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Retrieves profile information for all profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for inactive profiles in which the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> méthode est utilisée pour récupérer les informations de profil pour tous les profils utilisateur inutilisés de l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Cette méthode extrait uniquement les profils dont le nom du profil utilisateur correspond à fourni `usernameToMatch` valeur du paramètre. Utilisez le `authenticationOption` paramètre pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher. Parmi les profils recherchés, tout profil avec un <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> qui survient à ou avant le texte spécifié `userInactiveSinceDate` valeur de paramètre est retournée.  
  
 Vous pouvez récupérer ces informations dans les pages de données à l’aide de la surcharge pour la <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29> méthode prenant supplémentaire `pageIndex` et `pageSize` paramètres.  
  
> [!NOTE]
>  Votre fournisseur de profils peut prendre en charge les caractères génériques dans le `usernameToMatch` paramètre. Par exemple, le <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> méthode de la <xref:System.Web.Profile.SqlProfileProvider> classe prend en charge les caractères génériques dans le `usernameToMatch` paramètre.  
  
 Le <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> les appels de méthode le <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=nameWithType> méthode du fournisseur de profils par défaut. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, la source de données pour l’autre fournisseur de profil n’est pas recherchée. Pour rechercher les profils inactifs qui sont gérés par un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et appelez le <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> méthode du fournisseur directement.  
  
   
  
## Examples  
 L’exemple de code suivant permet à un utilisateur à fournir un `usernameToMatch` valeur et un <xref:System.Web.Profile.ProfileAuthenticationOption> valeur d’énumération et récupère informations de profil pour tous les profils correspondants. L’exemple permet à l’utilisateur spécifier s’il faut retourner les seuls les profils inactifs. Si l’utilisateur spécifie uniquement des profils inactifs, la <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> méthode est appelée ; sinon, le <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> méthode est appelée.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves profile information in pages of data for profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for inactive profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> méthode est utilisée pour récupérer les informations de profil pour les profils utilisateur inutilisés de l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Cette méthode extrait uniquement les profils dont le nom d’utilisateur correspond à fourni `usernameToMatch` valeur du paramètre. Utilisez le `authenticationOption` paramètre pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher. Parmi les profils recherchés, tout profil est retourné qui a un <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> qui survient à ou avant le texte spécifié `userInactiveSinceDate` valeur du paramètre.  
  
 Les résultats retournés par <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> sont contraints par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre identifie le nombre maximal de <xref:System.Web.Profile.ProfileInfo> objets à retourner dans le <xref:System.Web.Profile.ProfileInfoCollection> collection. Le `pageIndex` paramètre identifie la page de résultats à retourner ; 0 identifie la première page. Le `totalRecords` paramètre est un `out` paramètre est défini sur le nombre total de profils utilisateur inactifs pour configuré `applicationName`, selon le `authenticationOption` et `userInactiveSinceDate` paramètres. Par exemple, si 13 utilisateurs pour le `applicationName`et le `pageIndex` valeur est égale à 1 avec un `pageSize` de 5, le <xref:System.Web.Profile.ProfileInfoCollection> retournée est contient les sixième à dixième profils inactifs. Le `totalRecords` paramètre est défini sur 13.  
  
 Notez que votre fournisseur de profils peut prendre en charge les caractères génériques dans le `usernameToMatch` paramètre. Par exemple, le <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> méthode de la <xref:System.Web.Profile.SqlProfileProvider> classe prend en charge les caractères génériques dans le `usernameToMatch` paramètre.  
  
 Le <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> les appels de méthode le <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> méthode du fournisseur de profils par défaut. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, la source de données pour l’autre fournisseur de profil n’est pas recherchée. Pour rechercher les profils inactifs qui sont gérés par un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et appelez le <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> méthode du fournisseur directement.  
  
   
  
## Examples  
 L’exemple de code suivant permet à un utilisateur à fournir un `usernameToMatch` valeur et un <xref:System.Web.Profile.ProfileAuthenticationOption> valeur et récupère les informations de profil pour tous les profils correspondants. L’exemple permet à l’utilisateur spécifier s’il faut retourner exclusivement les profils inactifs. Si l’utilisateur spécifie uniquement des profils inactifs, la <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> méthode est appelée ; sinon, le <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> méthode est appelée.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("").  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves profile information for profiles in which the user name matches a specified name.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindProfilesByUserName (authenticationOption, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <summary>Retrieves all profile information for profiles in which the user name matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> méthode retourne une liste de toutes les informations de profil pour lequel le nom d’utilisateur correspond à fourni `usernameToMatch` valeur de paramètre pour configuré <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> valeur de propriété. Utilisez le `authenticationOption` paramètre pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher.  
  
 Vous pouvez récupérer des informations de profil pour les profils utilisateur dans les pages de données à l’aide de la surcharge pour la <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> méthode prenant supplémentaire `pageIndex` et `pageSize` paramètres.  
  
 Notez que votre fournisseur de profils peut prendre en charge les caractères génériques dans le `usernameToMatch` paramètre. Par exemple, le <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> méthode de la <xref:System.Web.Profile.SqlProfileProvider> classe prend en charge les caractères génériques dans le `usernameToMatch` paramètre.  
  
 Le <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> les appels de méthode le <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> méthode du fournisseur de profils par défaut. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, la source de données pour l’autre fournisseur de profil n’est pas recherchée. Pour rechercher des profils qui sont gérés par un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et appelez le <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> méthode du fournisseur directement.  
  
   
  
## Examples  
 L’exemple de code suivant permet à un utilisateur à fournir un `usernameToMatch` valeur et un <xref:System.Web.Profile.ProfileAuthenticationOption> valeur d’énumération et récupère informations de profil pour tous les profils correspondants. L’exemple permet à l’utilisateur spécifier s’il faut retourner exclusivement les profils inactifs. Si l’utilisateur spécifie uniquement des profils inactifs, la <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> méthode est appelée ; sinon, le <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> méthode est appelée.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindProfilesByUserName (authenticationOption, usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves profile information in pages of data for profiles in which the user name matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> méthode retourne une liste des informations de profil pour lesquels le nom du profil utilisateur correspond au fourni `usernameToMatch` de la valeur du paramètre <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>. Utilisez le `authenticationOption` paramètre pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher.  
  
 Notez que votre fournisseur de profils peut prendre en charge les caractères génériques dans le `usernameToMatch` paramètre. Par exemple, le <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> méthode de la <xref:System.Web.Profile.SqlProfileProvider> classe prend en charge les caractères génériques dans le `usernameToMatch` paramètre.  
  
 Les résultats retournés par <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> sont contraints par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre identifie le nombre maximal de <xref:System.Web.Profile.ProfileInfo> objets à retourner dans le <xref:System.Web.Profile.ProfileInfoCollection>. Le `pageIndex` paramètre identifie la page de résultats à retourner, 0 correspondant à la première page. Le `totalRecords` paramètre est un `out` paramètre est défini sur le nombre total de profils utilisateur inactifs pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration, en fonction de fourni `authenticationOption`. Par exemple, si 13 utilisateurs pour le `applicationName`et le `pageIndex` valeur est égale à 1 avec un `pageSize` de 5, le <xref:System.Web.Profile.ProfileInfoCollection> retournée est contient les sixième à dixième profils. Le `totalRecords` paramètre est défini sur 13.  
  
 Le <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> les appels de méthode le <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> méthode du fournisseur de profils par défaut. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, la source de données pour l’autre fournisseur de profil n’est pas recherchée. Pour rechercher des profils qui sont gérés par un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et appelez le <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> méthode du fournisseur directement.  
  
   
  
## Examples  
 L’exemple de code suivant permet à un utilisateur à fournir un `usernameToMatch` valeur et un <xref:System.Web.Profile.ProfileAuthenticationOption> et récupère informations de profil pour tous les profils correspondants. L’exemple permet à l’utilisateur spécifier s’il faut retourner exclusivement les profils inactifs. Si l’utilisateur spécifie uniquement des profils inactifs, la <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> méthode est appelée ; sinon, le <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> méthode est appelée.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("").  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllInactiveProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves user profile data for profiles in which the last activity date occurred on or before a specified date and time.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Retrieves all user profile data for profiles in which the last activity date occurred on or before the specified date and time.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information about the inactive profiles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> méthode est utilisée pour récupérer des informations de profil à partir de la source de données pour tous les profils utilisateur inutilisés de l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Utilisez le `authenticationOption` paramètre pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher. Parmi les profils recherchés, tout profil est retourné qui a un <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> qui survient à ou avant le texte spécifié `userInactiveSinceDate` valeur du paramètre.  
  
 Vous pouvez récupérer des informations de profil pour les profils utilisateur inactifs dans les pages de données à l’aide de la surcharge pour la <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> méthode prenant supplémentaire `pageIndex` et `pageSize` paramètres.  
  
 Le <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> les appels de méthode le <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> méthode du fournisseur de profils par défaut. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, la source de données pour l’autre fournisseur de profil n’est pas recherchée. Pour rechercher les profils inutilisés qui sont gérés par un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et appelez le <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> méthode du fournisseur directement.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui gère des profils inactifs. Un bouton est fourni pour supprimer tous les profils inactifs. Un profil est considéré comme inactif est basée sur la date spécifiée pour le `userInactiveSinceDate` paramètre.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfiles2cs.aspx#7)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfiles2vb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves a page of <see cref="T:System.Web.Profile.ProfileInfo" /> objects for user profiles in which the last activity date occurred on or before the specified date and time.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information about the inactive profiles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> méthode est utilisée pour récupérer des informations de profil à partir de la source de données pour les profils utilisateur inutilisés de l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Utilisez le `authenticationOption` paramètre pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher. Parmi les profils recherchés, tout profil est retourné qui a un <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> qui se produit avant le texte spécifié `userInactiveSinceDate` valeur du paramètre.  
  
 Les résultats retournés par <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> sont contraints par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre identifie le nombre maximal de <xref:System.Web.Profile.ProfileInfo> objets à retourner dans le <xref:System.Web.Profile.ProfileInfoCollection>. Le `pageIndex` paramètre identifie la page de résultats à retourner, 0 correspondant à la première page. Le `totalRecords` paramètre est un `out` paramètre est défini sur le nombre total de profils utilisateur inactifs pour configuré `applicationName`, selon le `authenticationOption` et `userInactiveSinceDate` paramètres. Par exemple, si 13 utilisateurs pour le `applicationName`et le `pageIndex` valeur est l’une avec un `pageSize` de 5, le <xref:System.Web.Profile.ProfileInfoCollection> retournée est contient les sixième à dixième profils inactifs. Le `totalRecords` paramètre est défini sur 13.  
  
 Le <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> les appels de méthode le <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> méthode du fournisseur de profils par défaut. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, la source de données pour l’autre fournisseur de profil n’est pas recherchée. Pour rechercher des profils qui sont gérés par un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et appelez le <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> méthode du fournisseur directement.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page Web ASP.NET qui gère des profils inactifs. Un bouton est fourni pour supprimer tous les profils inactifs. Un profil est considéré comme inactif est basée sur la date spécifiée pour le `userInactiveSinceDate` paramètre.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves user profile data for profiles in the data source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="F#" Value="static member GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllProfiles authenticationOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <summary>Retrieves user profile data for profiles in the data source.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for all of the profiles in the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> méthode est utilisée pour récupérer des informations de profil à partir de la source de données pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Utilisez le `authenticationOption` paramètre pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher.  
  
 Vous pouvez récupérer des pages de <xref:System.Web.Profile.ProfileInfo> objets pour les profils utilisateur à l’aide de la surcharge pour la <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> méthode prenant supplémentaire `pageIndex` et `pageSize` paramètres.  
  
 Le <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> les appels de méthode le <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> méthode du fournisseur de profils par défaut. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, la source de données pour l’autre fournisseur de profil n’est pas recherchée. Pour rechercher des profils qui sont gérés par un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et appelez le <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> méthode du fournisseur directement.  
  
   
  
## Examples  
 L’exemple de code suivant affiche des informations de profil pour tous les profils pour le `applicationName`.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllProfiles (authenticationOption, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves pages of user profile data.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for all of the profiles in the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> méthode est utilisée pour récupérer des informations de profil à partir de la source de données pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Utilisez le `authenticationOption` paramètre pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher.  
  
 Les résultats retournés par <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> sont contraints par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre identifie le nombre maximal de <xref:System.Web.Profile.ProfileInfo> objets à retourner dans le <xref:System.Web.Profile.ProfileInfoCollection>. Le `pageIndex` paramètre identifie la page de résultats à retourner, 0 correspondant à la première page. Le `totalRecords` paramètre est un `out` paramètre est défini sur le nombre total de profils utilisateur inactifs pour configuré `applicationName`, en fonction de fourni `authenticationOption`. Par exemple, si 13 utilisateurs pour le `applicationName`et le `pageIndex` valeur est l’une avec un `pageSize` de 5, le <xref:System.Web.Profile.ProfileInfoCollection> retournée est contient les sixième à dixième profils. Le `totalRecords` paramètre est défini sur 13.  
  
 Le <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> les appels de méthode le <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> méthode du fournisseur de profils par défaut. Le fournisseur de profils par défaut est spécifié en utilisant le `defaultProvider` attribut de l’élément de configuration. Si le profil utilisateur contient des propriétés qui sont gérées par un fournisseur de profils autre que le fournisseur par défaut, la source de données pour l’autre fournisseur de profil n’est pas recherchée. Pour rechercher des profils qui sont gérés par un fournisseur de profils autre que le fournisseur par défaut, obtenez une référence au fournisseur de profils à l’aide de la <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété et appelez le <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> méthode du fournisseur directement.  
  
   
  
## Examples  
 L’exemple de code suivant affiche des informations de profil pour tous les profils configuré `applicationName` dans les pages de données.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfilescs.aspx#3)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfilesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member GetNumberOfInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> object that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Gets the number of profiles in which the last activity date occurred on or before the specified date.</summary>
        <returns>The number of profiles in the data source for which the last activity date occurred before the specified date and time.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A> méthode est utilisée pour récupérer le nombre de tous les profils utilisateur inutilisés dans la source de données pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Utilisez le `authenticationOption` paramètre pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher. Parmi les profils recherchés, tous les profils sont comptés ayant un <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> qui survient à ou avant le texte spécifié `userInactiveSinceDate` valeur du paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant permet à un utilisateur afficher et supprimer des informations pour les profils actifs et inactifs selon des critères de recherche. Un nombre de profils inactifs est affiché à l’aide des résultats de la <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A> (méthode).  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfProfiles (authenticationOption As ProfileAuthenticationOption) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="F#" Value="static member GetNumberOfProfiles : System.Web.Profile.ProfileAuthenticationOption -&gt; int" Usage="System.Web.Profile.ProfileManager.GetNumberOfProfiles authenticationOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <summary>Gets the number of profiles in the data source.</summary>
        <returns>The number of profiles in the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.GetNumberOfProfiles%2A> méthode est utilisée pour récupérer le nombre de tous les profils utilisateur à partir de la source de données pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Utilisez le `authenticationOption` paramètre pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher.  
  
   
  
## Examples  
 L’exemple de code suivant affiche des informations de profil pour tous les profils configuré `applicationName` et retourne également le nombre de profils.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As ProfileProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProvider ^ Provider { System::Web::Profile::ProfileProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Profile.ProfileProvider" Usage="System.Web.Profile.ProfileManager.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the default profile provider for the application.</summary>
        <value>Le fournisseur de profils par défaut pour l’application.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.Provider%2A> propriété vous permet de référencer le fournisseur de profils par défaut pour une application directement. Elle est couramment utilisée pour accéder aux membres personnalisés du fournisseur de profils qui ne sont pas dans le cadre de la <xref:System.Web.Profile.ProfileProvider> classe de base abstraite.  
  
   
  
## Examples  
 L’exemple de code suivant répertorie les propriétés du fournisseur de profils par défaut.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providercs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providervb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An attempt was made to get the <see cref="P:System.Web.Profile.ProfileManager.Provider" /> property value without at least <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</exception>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As ProfileProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProviderCollection ^ Providers { System::Web::Profile::ProfileProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Profile.ProfileProviderCollection" Usage="System.Web.Profile.ProfileManager.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of the profile providers for the ASP.NET application.</summary>
        <value>Un <see cref="T:System.Web.Profile.ProfileProviderCollection" /> fournisseurs de profils configurés pour l’application ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileManager.Providers%2A> propriété fait référence à tous les fournisseurs de profils activés pour une application, notamment les fournisseurs ajoutés dans la configuration d’ordinateur et les fournisseurs ajoutés dans tous les fichiers Web.config. Vous pouvez contrôler quels profils fournisseurs sont disponibles pour une application à l’aide de l’élément de la section dans le fichier de configuration. Par exemple, le fichier Web.config suivant supprime les fournisseurs de profils spécifiés dans les fichiers de configuration parents et ajoute une <xref:System.Web.Profile.SqlProfileProvider> instance en tant que fournisseur de profils pour l’application.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile enabled="true" defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Lorsque vous spécifiez la section, vous devez spécifier un fournisseur par défaut en définissant le `defaultProvider` attribut. Si vous ne spécifiez pas une section dans votre fichier Web.config, les valeurs à partir de la configuration d’ordinateur sont utilisées et le <xref:System.Web.Profile.SqlProfileProvider> instance nommée AspNetSqlProvider est établie comme fournisseur par défaut.  
  
 Vous pouvez obtenir une référence fortement typée à un fournisseur à partir de la <xref:System.Web.Profile.ProfileManager.Providers%2A> collection en indexant le fournisseur de profils par nom et un cast en tant que le type souhaité.  
  
   
  
## Examples  
 L’exemple de code suivant répertorie les fournisseurs activés pour une application et leurs types respectifs.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providerscs.aspx#9)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providersvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An attempt was made to get the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> property value without at least <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</exception>
      </Docs>
    </Member>
  </Members>
</Type>