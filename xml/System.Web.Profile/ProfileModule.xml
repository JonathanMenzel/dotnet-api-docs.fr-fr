<Type Name="ProfileModule" FullName="System.Web.Profile.ProfileModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec1c2259b1472edf29b8e1c9176eb64b118bc79a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36398632" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProfileModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProfileModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProfileModule&#xA;Implements IHttpModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileModule sealed : System::Web::IHttpModule" />
  <TypeSignature Language="F#" Value="type ProfileModule = class&#xA;    interface IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Gère la création des événements de profil utilisateur et de profil. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le profil utilisateur est activé, ASP.NET utilise le <xref:System.Web.Profile.ProfileModule> pour créer le profil utilisateur et le stocker dans le <xref:System.Web.HttpContext.Profile%2A> propriété actuelles <xref:System.Web.HttpContext>.  
  
 Le <xref:System.Web.Profile.ProfileModule> expose les événements suivants, vous pouvez gérer pour configurer l’authentification dans votre application :  
  
-   Le <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> événement, pour migrer les paramètres de profil d’un profil anonyme vers un profil authentifié lorsqu’un utilisateur anonyme se connecte.  
  
-   Le <xref:System.Web.Profile.ProfileModule.Personalize> événement, afin de personnaliser la façon dont le profil utilisateur est créé.  
  
-   Le <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> événement, afin de contrôler comment le profil utilisateur est enregistré lorsque le <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> est définie sur `true`.  
  
 Pour plus d’informations sur l’activation du profil utilisateur, consultez [profile, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd).  
  
   
  
## Examples  
 L’exemple suivant montre un fichier Web.config qui active l’identification anonyme et les propriétés de profil qui prennent en charge les utilisateurs anonymes.  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="AspNetSqlProvider">  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="CityAndState" allowAnonymous="true" />  
        <add name="StockSymbols" type="System.Collections.ArrayList" allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Le code suivant exemple illustre le <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> événement inclus dans le fichier Global.asax d’une application ASP.NET. Le <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> événement copie les valeurs de propriété de profil à partir du profil anonyme pour le profil pour l’utilisateur actuel.  
  
 [!code-csharp[System.Web.Profile.ProfileManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/global.asax#1)]
 [!code-vb[System.Web.Profile.ProfileManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Profile.ProfileModule" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur n’est pas destiné à être appelé à partir de code d’application.  
  
 Un <xref:System.Web.HttpApplication> est créée au démarrage d’une application ASP.NET. Le <xref:System.Web.HttpApplication> appelle la <xref:System.Web.Profile.ProfileModule> constructeur pour créer le <xref:System.Web.Profile.ProfileModule> pour l’application. Le <xref:System.Web.Profile.ProfileModule> est spécifié dans la configuration d’une application.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="profileModule.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par <see cref="T:System.Web.Profile.ProfileModule" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode n’est pas destinée à être appelée à partir de code d’application.  
  
 Un <xref:System.Web.HttpApplication> est créée au démarrage d’une application ASP.NET. Le <xref:System.Web.HttpApplication> crée et initialise le <xref:System.Web.Profile.ProfileModule> pour l’application et appelle le <xref:System.Web.Profile.ProfileModule.Dispose%2A> méthode lorsque l’objet est libéré. Le <xref:System.Web.Profile.ProfileModule> est spécifié dans la configuration d’une application.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberSignature Language="F#" Value="abstract member Init : System.Web.HttpApplication -&gt; unit&#xA;override this.Init : System.Web.HttpApplication -&gt; unit" Usage="profileModule.Init app" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">Application actuelle.</param>
        <summary>Appelle le code d'initialisation lorsqu'un objet <see cref="T:System.Web.Profile.ProfileModule" /> est créé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode n’est pas destinée à être appelée à partir de code d’application.  
  
 Un <xref:System.Web.HttpApplication> est créée au démarrage d’une application ASP.NET. Le <xref:System.Web.HttpApplication> appelle la <xref:System.Web.Profile.ProfileModule.Init%2A> méthode lorsqu’il crée le <xref:System.Web.Profile.ProfileModule> pour l’application. Le <xref:System.Web.Profile.ProfileModule> est spécifié dans la configuration d’une application.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrateAnonymous">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.MigrateAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MigrateAnonymous As ProfileMigrateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileMigrateEventHandler ^ MigrateAnonymous;" />
      <MemberSignature Language="F#" Value="member this.MigrateAnonymous : System.Web.Profile.ProfileMigrateEventHandler " Usage="member this.MigrateAnonymous : System.Web.Profile.ProfileMigrateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileMigrateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque l'utilisateur anonyme pour un profil se connecte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez accéder à la <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> l’événement de la <xref:System.Web.Profile.ProfileModule> classe dans le fichier Global.asax de votre application ASP.NET à l’aide de la `Profile_MigrateAnonymous` événement global, comme illustré dans l’exemple de cette rubrique.  
  
 Vous pouvez utiliser la <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> événement pour copier la propriété de profil les valeurs à partir d’un profil anonyme vers un profil authentifié lorsqu’un utilisateur qui a utilisé votre application de manière anonyme se connecte.  
  
 Au démarrage d’une application qui a le profil d’utilisateur activé, ASP.NET crée une nouvelle classe de type `ProfileCommon`, qui hérite de la <xref:System.Web.Profile.ProfileBase> classe. Des accesseurs fortement typés sont ajoutés à la `ProfileCommon` classe pour chaque propriété définie dans la section de configuration. A `GetProfile` méthode vous permet de récupérer un `ProfileCommon` objet basé sur un nom d’utilisateur. Vous pouvez utiliser la `GetProfile` méthode du profil authentifié actuel pour récupérer les valeurs de propriété du profil anonyme. Les valeurs de propriété anonymes peuvent alors être copiés dans le profil actuel pour l’utilisateur authentifié.  
  
   
  
## Examples  
 L’exemple suivant montre un fichier Web.config qui active l’identification anonyme et les propriétés de profil qui prennent en charge les utilisateurs anonymes.  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="AspNetSqlProvider">  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="CityAndState" allowAnonymous="true" />  
        <add name="StockSymbols" type="System.Collections.ArrayList" allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Le code suivant exemple illustre le <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> événement inclus dans le fichier Global.asax d’une application ASP.NET. Le <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> événement copie les valeurs de propriété de profil à partir du profil anonyme pour le profil pour l’utilisateur actuel.  
  
 [!code-csharp[System.Web.Profile.ProfileManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/global.asax#1)]
 [!code-vb[System.Web.Profile.ProfileManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Personalize">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileEventHandler Personalize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileEventHandler Personalize" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.Personalize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Personalize As ProfileEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileEventHandler ^ Personalize;" />
      <MemberSignature Language="F#" Value="member this.Personalize : System.Web.Profile.ProfileEventHandler " Usage="member this.Personalize : System.Web.Profile.ProfileEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant la création du profil utilisateur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileModule.Personalize> événement est déclenché pendant le <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=nameWithType> événement. Vous pouvez accéder à la <xref:System.Web.Profile.ProfileModule.Personalize> l’événement de la <xref:System.Web.Profile.ProfileModule> classe dans le fichier Global.asax de votre application ASP.NET à l’aide du `Profile_Personalize` global des événements comme indiqué dans l’exemple de cette rubrique.  
  
 Vous pouvez utiliser la <xref:System.Web.Profile.ProfileModule.Personalize> événement afin de spécifier un profil utilisateur personnalisé. Si le <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=nameWithType> valeur de la propriété spécifiée pour le <xref:System.Web.Profile.ProfileEventHandler> Gestionnaire d’événements pour le <xref:System.Web.Profile.ProfileModule.Personalize> événement est défini sur une valeur qui n’est pas `null` lors de la <xref:System.Web.Profile.ProfileModule.Personalize> terminaisons de l’événement, le <xref:System.Web.Profile.ProfileModule> utilisera la valeur spécifiée de la <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=nameWithType> propriété en tant que la valeur de la <xref:System.Web.HttpContext.Profile%2A> propriété actuelles <xref:System.Web.HttpContext>.  
  
   
  
## Examples  
 Le code suivant exemple illustre le <xref:System.Web.Profile.ProfileModule.Personalize> événement déclaré dans le fichier Global.asax d’une application. Le code d’événement charge un profil utilisateur pour un utilisateur selon l’appartenance au rôle.  
  
 [!code-csharp[System.Web.Profile.ProfileManager.Personalize#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.Personalize/CS/global.asax#12)]
 [!code-vb[System.Web.Profile.ProfileManager.Personalize#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.Personalize/VB/global.asax#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileAutoSaving">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.ProfileAutoSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProfileAutoSaving As ProfileAutoSaveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileAutoSaveEventHandler ^ ProfileAutoSaving;" />
      <MemberSignature Language="F#" Value="member this.ProfileAutoSaving : System.Web.Profile.ProfileAutoSaveEventHandler " Usage="member this.ProfileAutoSaving : System.Web.Profile.ProfileAutoSaveEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileAutoSaveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit à la fin de l'exécution de la page si l'enregistrement de profil automatique est activé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> événement est déclenché à la fin de l’exécution de la page si le <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=nameWithType> propriété est `true`. Vous pouvez accéder à la <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> l’événement de la <xref:System.Web.Profile.ProfileModule> classe dans le fichier Global.asax de votre application ASP.NET à l’aide du `Profile_ProfileAutoSaving` événement global, comme illustré dans l’exemple de cette rubrique.  
  
 Le <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=nameWithType> méthode vérifie le <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> pour chaque valeur de la propriété <xref:System.Configuration.SettingsPropertyValue> dans le profil utilisateur pour déterminer si les propriétés de types primitifs, chaînes, ou <xref:System.DateTime> objets ont été modifiés. Le <xref:System.Configuration.SettingsBase.Save%2A> méthode ne peut pas déterminer explicitement si une classe personnalisée a été modifiée. Vous pouvez utiliser la <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> événement pour déterminer si un objet personnalisé a été modifié, puis continuer avec l’automatique sauvegarde des objets modifiés ou annuler la sauvegarde automatique si aucun objet n’a été modifié.  
  
 Pour annuler l’opération d’enregistrement automatique du profil, affectez le <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> propriété `false` dans les <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> événement ; sinon, la valeur la <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> propriété `true`.  
  
 Il peut y avoir plusieurs abonnés à la <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> événement. Le <xref:System.Web.Profile.ProfileModule> sera la dernière valeur qui le <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> a la valeur de propriété. Par conséquent, il est recommandé de définir explicitement la <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> propriété dans le <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> événement que vous annuliez ou poursuivre automatique enregistrer, car vous devrez peut-être remplacer la valeur définie par un précédent abonné.  
  
   
  
## Examples  
 Le code suivant exemple illustre le <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> événement inclus dans le fichier Global.asax d’une application ASP.NET.  
  
 [!code-csharp[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/CS/global.asax#11)]
 [!code-vb[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/VB/global.asax#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>