<Type Name="SqlProfileProvider" FullName="System.Web.Profile.SqlProfileProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f91af7f95a00d1681cf47bee47643208639444e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540803" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlProfileProvider : System.Web.Profile.ProfileProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlProfileProvider extends System.Web.Profile.ProfileProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.SqlProfileProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlProfileProvider&#xA;Inherits ProfileProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlProfileProvider : System::Web::Profile::ProfileProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Profile.ProfileProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gère le stockage des informations de profil pour une application ASP.NET dans une base de données SQL Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le profil ASP.NET est utilisé pour stocker et récupérer des paramètres utilisateur dans une source de données comme une base de données. Le profil utilisateur est accessible à l’aide de la <xref:System.Web.HttpContext.Profile%2A> propriété actuelles <xref:System.Web.HttpContext>. Valeurs des informations et de la propriété de profil sont gérés à l’aide d’un fournisseur de profils.  
  
 La <xref:System.Web.Profile.SqlProfileProvider> classe est utilisée par ASP.NET pour stocker et récupérer les paramètres de profil pour une application ASP.NET qui utilise une base de données SQL Server. Pour utiliser un <xref:System.Web.Profile.SqlProfileProvider>, vous devez d’abord créer la base de données SQL Server utilisée par le <xref:System.Web.Profile.SqlProfileProvider>. Pour créer la base de données utilisée par le <xref:System.Web.Profile.SqlProfileProvider>, exécutez l’outil aspnet_regsql.exe, qui se trouve dans le [*lecteur*:] \WINDOWS\Microsoft.NET\Framework\\ `2.0versionNumber` dossier et spécifiez le **-p ** option. La commande suivante illustre comment vous pouvez utiliser l’exécutable aspnet_regsql.exe :  
  
```  
aspnet_regsql.exe -A p  
```  
  
 L’exemple ci-dessus ne spécifie pas un nom pour la base de données est créé, donc le nom par défaut sera utilisé. Le nom de la base de données par défaut est Aspnetdb.  
  
 La configuration de l’ordinateur contient une valeur par défaut <xref:System.Web.Profile.SqlProfileProvider> instance nommée AspNetSqlProvider qui se connecte à SQL Server sur l’ordinateur local. Vous pouvez utiliser cette instance du fournisseur, ou spécifier votre propre dans le fichier Web.config de votre application ASP.NET.  
  
> [!NOTE]
>  Si le fournisseur de profils est configuré avec une chaîne de connexion qui utilise la sécurité intégrée, le compte de processus de l’application ASP.NET doit disposer des droits pour se connecter à la base de données SQL Server.  
  
   
  
## Examples  
 L’exemple de code suivant montre le fichier Web.config pour une application ASP.NET configurée pour utiliser un <xref:System.Web.Profile.SqlProfileProvider>.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"   
      userIsOnlineTimeWindow="15">  
      <providers>  
        <clear/>  
        <add name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="SampleApplication"  
          enablePasswordRetrieval="true"  
          enablePasswordReset="true"  
          passwordFormat="Encrypted"  
          requiresQuestionAndAnswer="true" />  
      </providers>  
    </membership>  
  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="SampleApplication"  
          description="SqlProfileProvider for SampleApplication" />  
      </providers>  
  
      <properties>  
        <add name="ZipCode" />  
        <add name="CityAndState" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlProfileProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlProfileProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crée une instance de la classe <see cref="T:System.Web.Profile.SqlProfileProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET appelle le <xref:System.Web.Profile.SqlProfileProvider.%23ctor%2A> constructeur pour créer une instance de la <xref:System.Web.Profile.SqlProfileProvider> classe en utilisant les valeurs spécifiées dans le fichier de configuration de l’application. Ce constructeur n’est pas destiné à être utilisé à partir de votre code.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.SqlProfileProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'application pour laquelle stocker et récupérer des informations de profil.</summary>
        <value>Nom de l'application pour laquelle stocker et récupérer des informations de profil. La valeur par défaut est la valeur <see cref="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> propriété est utilisée par le <xref:System.Web.Profile.SqlProfileProvider> pour associer des informations de profil à différentes applications. Cela permet à plusieurs applications d’utiliser la même base de données pour stocker les informations utilisateur sans provoquer de conflits entre les utilisateurs en double. Plusieurs applications ASP.NET peuvent utiliser la même base de données utilisateur en spécifiant la même valeur dans le <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> propriété. Le <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> propriété peut être définie par programme, ou il peut être définie de manière déclarative dans le fichier de configuration pour l’application Web en utilisant le `applicationName` attribut.  
  
 Si une valeur n’est pas spécifiée pour le `applicationName` attribut dans le fichier de configuration de l’application Web, puis le <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> valeur est utilisée pour les applications ASP.NET. Pour les applications non-ASP.NET, la valeur par défaut est le <xref:System.Diagnostics.ProcessModule.ModuleName%2A> valeur sans l’extension de fichier.  
  
> [!CAUTION]
>  Car une instance de fournisseur de profils par défaut unique est utilisée pour toutes les demandes traitées par un <xref:System.Web.HttpApplication> de l’objet, vous pouvez avoir plusieurs demandes exécutées concurremment et tentez de définir la <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> valeur de propriété. Le <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> propriété n’est pas thread-safe pour les écritures multiples et la modification du <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> valeur de propriété peut entraîner un comportement inattendu pour plusieurs utilisateurs d’une application. Il est recommandé d’éviter d’écrire du code qui permet aux utilisateurs de définir la <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> propriété, sauf si vous devez. Un exemple d’une application où le paramètre le <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> propriété peut être requise est une application d’administration qui gère les données de profil de plusieurs applications. Une telle application doit être une application utilisateur unique et non une application Web.  
  
   
  
## Examples  
 L’exemple de code suivant montre l’élément dans la `system.web` section du fichier Web.config pour une application ASP.NET. Il spécifie l’application <xref:System.Web.Profile.SqlProfileProvider> instance et définit les <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> valeur de la propriété `MyApplication`.  
  
```  
<profile defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
   </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Une tentative a été faite pour définir la propriété <see cref="P:System.Web.Profile.SqlProfileProvider.ApplicationName" /> par un appelant qui n'a pas autorisation d'hébergement ASP.NET <see cref="F:System.Web.AspNetHostingPermissionLevel.High" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une tentative a été exécutée pour définir la propriété <see cref="P:System.Web.Profile.SqlProfileProvider.ApplicationName" /> sur une chaîne qui comprend plus de 256 caractères.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteInactiveProfiles">
      <MemberSignature Language="C#" Value="public override int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 DeleteInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int DeleteInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Une des valeurs <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> spécifiant si le type de profil anonyme, authentifié, ou les deux sont supprimés.</param>
        <param name="userInactiveSinceDate">
          <see cref="T:System.DateTime" /> qui identifie quels profils utilisateur sont considérés inactifs. Si la <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> d'un profil utilisateur survient à ou avant cette date et cette heure, le profil est considéré comme inactif.</param>
        <summary>Supprime les données de profil utilisateur pour les profils dans lesquels la dernière date d'activité s'est produite avant la date et l'heure spécifiées.</summary>
        <returns>Nombre de profils supprimés de la source de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles%2A> méthode est utilisée pour supprimer les données de profil inutilisées de la source de données pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Utilisez le `authenticationOption` pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher. Parmi les profils recherchés, tout profil avec un <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> qui se produit à ou avant la `userInactiveSinceDate` la valeur du paramètre est supprimée.  
  
 Les mises à jour de la base de données qui sont effectuées lors de l’appel à la <xref:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles%2A> méthode sont effectuées dans une transaction. Si une erreur s’est produite, la transaction est annulée et aucune mise à jour n’est effectuées.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui gère des profils inactifs. Un bouton est fourni pour supprimer tous les profils qui n’ont pas accédés depuis la date spécifiée pour considérer qu’un profil comme étant inactif.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Supprime les propriétés et les informations relatives au profil de la source de données.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public override int DeleteProfiles (string[] usernames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 DeleteProfiles(string[] usernames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteProfiles (usernames As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int DeleteProfiles(cli::array &lt;System::String ^&gt; ^ usernames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tableau de chaînes des noms d'utilisateurs des profils à supprimer.</param>
        <summary>Supprime les propriétés et les informations de profil de la source de données pour la liste fournie de noms d'utilisateurs.</summary>
        <returns>Nombre de profils supprimés de la source de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> méthode supprime toutes les informations de profil et les propriétés des profils spécifiés à partir de la source de données pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. La liste des profils à supprimer est spécifiée comme un tableau de chaînes des noms d’utilisateur. Si les propriétés de profil et les informations existent dans la source de données pour un nom d’utilisateur dans le `usernames` paramètre, ils sont supprimés.  
  
 La valeur de retour peut différer de la longueur du tableau spécifié de `usernames`. Cela indique que certains des profils dans le tableau spécifié de `usernames` ont déjà été supprimés du magasin de données.  
  
 Les mises à jour de la base de données qui sont effectuées lors de l’appel à la <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> méthode sont effectuées dans une transaction. Si une erreur s’est produite, la transaction est annulée et aucune mise à jour n’est effectuées.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui gère des profils inactifs. A <xref:System.Web.UI.WebControls.GridView> contrôle affiche les profils inactifs. Chaque ligne de la <xref:System.Web.UI.WebControls.GridView> contrôle inclut un bouton qui supprime le profil pour cette ligne à partir de la source de données avec un appel à la <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> (méthode).  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La longueur de <paramref name="usernames" /> est égale à zéro.  
  
 \- ou -  
  
 L'un des éléments dans <paramref name="usernames" /> correspond à une chaîne vide (""), comprend plus de 256 caractères ou contient une virgule.  
  
 \- ou -  
  
 Deux éléments ou plus dans <paramref name="usernames" /> ont la même valeur.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernames" /> est <see langword="null" />.  
  
 \- ou -  
  
 L'un des éléments dans <paramref name="usernames" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public override int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 DeleteProfiles(class System.Web.Profile.ProfileInfoCollection profiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteProfiles (profiles As ProfileInfoCollection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int DeleteProfiles(System::Web::Profile::ProfileInfoCollection ^ profiles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profiles" Type="System.Web.Profile.ProfileInfoCollection" />
      </Parameters>
      <Docs>
        <param name="profiles">
          <see cref="T:System.Web.Profile.ProfileInfoCollection" /> qui contient des informations de profil pour les profils à supprimer.</param>
        <summary>Supprime les propriétés et les informations relatives au profil pour la liste des profils dans la source de données.</summary>
        <returns>Nombre de profils supprimés de la source de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> méthode supprime toutes les informations de profil et les propriétés des profils spécifiés à partir de la source de données pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. La liste des profils à supprimer est spécifiée en utilisant un <xref:System.Web.Profile.ProfileInfoCollection> qui est passé en tant que le `profiles` paramètre. A <xref:System.Web.Profile.ProfileInfoCollection> peuvent être retournées à partir de la <xref:System.Web.Profile.SqlProfileProvider.GetAllProfiles%2A>, <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>, et <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> méthodes.  
  
 La valeur de retour peut différer de la <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> valeur fourni <xref:System.Web.Profile.ProfileInfoCollection>. Cela indique que certains des profils dans spécifié <xref:System.Web.Profile.ProfileInfoCollection> ont été trouvés ne sont plus dans le magasin de données.  
  
 Les mises à jour de la base de données qui sont effectuées lors de l’appel à la <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> méthode sont effectuées dans une transaction. Si une erreur s’est produite, la transaction est annulée et aucune mise à jour n’est effectuées.  
  
   
  
## Examples  
 L’exemple de code suivant permet à un utilisateur de rechercher des profils à l’aide de la <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> et <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> méthodes. L’utilisateur peut supprimer ensuite les profils retournés avec un appel à la <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> (méthode).  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="profiles" /> a une valeur <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" /> de zéro.  
  
 \- ou -  
  
 L'un des objets <see cref="T:System.Web.Profile.ProfileInfo" /> dans <paramref name="profiles" /> a un <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> qui correspond à une chaîne vide (""), comprend plus de 256 caractères ou contient une virgule.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="profiles" /> est <see langword="null" />.  
  
 \- ou -  
  
 L'un des objets <see cref="T:System.Web.Profile.ProfileInfo" /> dans <paramref name="profiles" /> a un <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> qui est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public override System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Une des valeurs <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> spécifiant si le type de profil anonyme, authentifié, ou les deux sont retournés.</param>
        <param name="usernameToMatch">Nom d'utilisateur à rechercher.</param>
        <param name="userInactiveSinceDate">
          <see cref="T:System.DateTime" /> qui identifie quels profils utilisateur sont considérés inactifs. Si la <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> d'un profil utilisateur survient à ou avant cette date et cette heure, le profil est considéré comme inactif.</param>
        <param name="pageIndex">Index de la page de résultats à retourner. <c>pageIndex</c> est de base zéro.</param>
        <param name="pageSize">Taille de la page de résultats à retourner.</param>
        <param name="totalRecords">Lorsque cette méthode est retournée, contient un entier qui identifie le nombre total de profils. Ce paramètre est passé sans être initialisé.</param>
        <summary>Récupère des informations de profil pour les profils dans lesquels la dernière date d'activité s'est produite à ou avant la date et l'heure spécifiées et le nom d'utilisateur pour le profil correspond au nom spécifié.</summary>
        <returns>
          <see cref="T:System.Web.Profile.ProfileInfoCollection" /> contenant les informations sur les profils utilisateur pour les profils inactifs où le nom d'utilisateur correspond au paramètre <paramref name="usernameToMatch" /> fourni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> méthode est utilisée pour récupérer les informations de profil pour les profils utilisateur inutilisés de l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Cette méthode récupère uniquement les profils dont le nom d’utilisateur pour le profil correspond à l’élément `usernameToMatch` la valeur du paramètre. Utilisez le `authenticationOption` pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher. Parmi les profils recherchés, tout profil avec un <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> qui se produit avant la `userInactiveSinceDate` la valeur du paramètre est retournée.  
  
 Le <xref:System.Web.Profile.SqlProfileProvider> recherche une correspondance de la `usernameToMatch` valeur de paramètre à l’aide du `LIKE` (mot clé) et prend en charge des caractères génériques, tels que le signe de pourcentage (%). Par exemple, si le `usernameToMatch` paramètre est défini sur « user1 », puis les informations de profil pour le profil avec le nom d’utilisateur de « user1 » sont retournées, si elle existe. Si le `usernameToMatch` paramètre est défini sur « User% », puis les informations de profil pour les profils avec le nom d’utilisateur de « user1 », « user2 », « user_admin » et ainsi de suite sont retournés. Les utilisateurs sont retournés dans l’ordre que leurs profils ont été ajoutés au magasin de données.  
  
 Les résultats retournés par <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> sont limitées par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre identifie le nombre maximal de <xref:System.Web.Profile.ProfileInfo> objets à retourner dans le <xref:System.Web.Profile.ProfileInfoCollection>. Le `pageIndex` paramètre identifie la page de résultats à retourner ; 0 identifie la première page. Le `totalRecords` paramètre est un `out` paramètre qui est défini sur le nombre total de profils utilisateur inactifs pour configuré `applicationName`, en fonction de la `authenticationOption` et `userInactiveSinceDate` paramètres. Par exemple, si 13 utilisateurs pour le `applicationName`et le `pageIndex` valeur est égale à 1 avec un `pageSize` de 5, le <xref:System.Web.Profile.ProfileInfoCollection> retournée contient les sixième à dixième profils inactifs. Le `totalRecords` paramètre est défini sur 13.  
  
   
  
## Examples  
 L’exemple de code suivant permet à un utilisateur à fournir un `usernameToMatch` valeur et un <xref:System.Web.Profile.ProfileAuthenticationOption> et récupère informations de profil pour tous les profils correspondants. L’exemple permet également à l’utilisateur de spécifier s’il faut retourner uniquement les profils inactifs. Si l’utilisateur spécifie uniquement des profils inactifs, la <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> méthode est appelée ; sinon, le <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> méthode est appelée.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> est une chaîne vide ("") ou contient plus de 256 caractères.  
  
 \- ou -  
  
 <paramref name="pageIndex" /> est inférieur à zéro.  
  
 \- ou -  
  
 <paramref name="pageSize" /> est inférieur à un.  
  
 \- ou -  
  
 <paramref name="pageIndex" /> multiplié par <paramref name="pageSize" /> est supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public override System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Une des valeurs <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> spécifiant si le type de profil anonyme, authentifié, ou les deux sont retournés.</param>
        <param name="usernameToMatch">Nom d'utilisateur à rechercher.</param>
        <param name="pageIndex">Index de la page de résultats à retourner. <c>pageIndex</c> est de base zéro.</param>
        <param name="pageSize">Taille de la page de résultats à retourner.</param>
        <param name="totalRecords">Lorsque cette méthode est retournée, contient un entier qui identifie le nombre total de profils. Ce paramètre est passé sans être initialisé.</param>
        <summary>Récupère des informations de profil pour les profils dans lesquels le nom d'utilisateur correspond au nom spécifié.</summary>
        <returns>
          <see cref="T:System.Web.Profile.ProfileInfoCollection" /> contenant des informations sur les profils utilisateur pour les profils où le nom d'utilisateur correspond au paramètre <paramref name="usernameToMatch" /> fourni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> méthode retourne une liste d’informations de profil pour lesquels le nom d’utilisateur pour le profil correspond au fourni `usernameToMatch` valeur de paramètre pour le <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A>. Utilisez le `authenticationOption` pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher.  
  
 Le <xref:System.Web.Profile.SqlProfileProvider> recherche une correspondance de la `usernameToMatch` valeur de paramètre à l’aide du `LIKE` (mot clé) et prend en charge des caractères génériques, tels que le signe de pourcentage (%). Par exemple, si le `usernameToMatch` paramètre est défini sur « user1 », puis les informations de profil pour le profil avec le nom d’utilisateur de « user1 » sont retournées, si elle existe. Si le `usernameToMatch` paramètre est défini sur « User% », puis les informations de profil pour les profils avec le nom d’utilisateur de « user1 », « user2 », « user_admin » et ainsi de suite sont retournés. Les utilisateurs sont retournés dans l’ordre que leurs profils ont été ajoutés au magasin de données.  
  
 Les résultats retournés par <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> sont limitées par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre identifie le nombre maximal de <xref:System.Web.Profile.ProfileInfo> objets à retourner dans le <xref:System.Web.Profile.ProfileInfoCollection>. Le `pageIndex` paramètre identifie la page de résultats à retourner ; 0 identifie la première page. Le `totalRecords` paramètre est un `out` paramètre qui est défini sur le nombre total de profils utilisateur inactifs pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration basé sur le `authenticationOption` et `userInactiveSinceDate` paramètres. Par exemple, si 13 utilisateurs pour le `applicationName`et le `pageIndex` valeur est égale à 1 avec un `pageSize` de 5, le <xref:System.Web.Profile.ProfileInfoCollection> retournée contient les sixième à dixième profils. Le `totalRecords` paramètre est défini sur 13.  
  
   
  
## Examples  
 L’exemple de code suivant permet à un utilisateur à fournir un `usernameToMatch` valeur et un <xref:System.Web.Profile.ProfileAuthenticationOption> et récupère informations de profil pour tous les profils correspondants. L’exemple permet également à l’utilisateur de spécifier s’il faut retourner uniquement les profils inactifs. Si l’utilisateur spécifie uniquement des profils inactifs, la <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> méthode est appelée ; sinon, le <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> méthode est appelée.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> est une chaîne vide ("") ou contient plus de 256 caractères.  
  
 \- ou -  
  
 <paramref name="pageIndex" /> est inférieur à zéro.  
  
 \- ou -  
  
 <paramref name="pageSize" /> est inférieur à un.  
  
 \- ou -  
  
 <paramref name="pageIndex" /> multiplié par <paramref name="pageSize" /> est supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public override System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Une des valeurs <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> spécifiant si le type de profil anonyme, authentifié, ou les deux sont retournés.</param>
        <param name="userInactiveSinceDate">
          <see cref="T:System.DateTime" /> qui identifie quels profils utilisateur sont considérés inactifs. Si la <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> d'un profil utilisateur survient à ou avant cette date et cette heure, le profil est considéré comme inactif.</param>
        <param name="pageIndex">Index de la page de résultats à retourner. <c>pageIndex</c> est de base zéro.</param>
        <param name="pageSize">Taille de la page de résultats à retourner.</param>
        <param name="totalRecords">Lorsque cette méthode est retournée, contient un entier qui identifie le nombre total de profils. Ce paramètre est passé sans être initialisé.</param>
        <summary>Récupère les données de profil utilisateur pour les profils dans lesquels la dernière date d'activité s'est produite avant la date et l'heure spécifiées.</summary>
        <returns>
          <see cref="T:System.Web.Profile.ProfileInfoCollection" /> contenant des informations sur les profils utilisateur inactifs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A> méthode est utilisée pour récupérer des informations de profil à partir de la source de données pour les profils utilisateur inutilisés de l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Utilisez le `authenticationOption` pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher. Parmi les profils recherchés, tout profil avec un <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> qui se produit avant la `userInactiveSinceDate` la valeur du paramètre est retournée.  
  
 Les résultats retournés par <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A> sont limitées par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre identifie le nombre maximal de <xref:System.Web.Profile.ProfileInfo> objets à retourner dans le <xref:System.Web.Profile.ProfileInfoCollection>. Le `pageIndex` paramètre identifie la page de résultats à retourner ; 0 identifie la première page. Le `totalRecords` paramètre est un `out` paramètre qui est défini sur le nombre total de profils utilisateur inactifs pour configuré `applicationName`, en fonction de la `authenticationOption` et `userInactiveSinceDate` paramètres. Par exemple, si 13 utilisateurs pour le `applicationName`et le `pageIndex` valeur est égale à 1 avec un `pageSize` de 5, le <xref:System.Web.Profile.ProfileInfoCollection> retournée contient les sixième à dixième profils inactifs. Le `totalRecords` paramètre est défini sur 13.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui gère des profils inactifs. Un bouton est fourni pour supprimer tous les profils inactifs. Un profil est considéré comme inactif est basée sur la date spécifiée pour le `userInactiveSinceDate` paramètre.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> est inférieur à zéro.  
  
 \- ou -  
  
 <paramref name="pageSize" /> est inférieur à un.  
  
 \- ou -  
  
 <paramref name="pageIndex" /> multiplié par <paramref name="pageSize" /> est supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public override System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Une des valeurs <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> spécifiant si le type de profil anonyme, authentifié, ou les deux sont retournés.</param>
        <param name="pageIndex">Index de la page de résultats à retourner. <c>pageIndex</c> est de base zéro.</param>
        <param name="pageSize">Taille de la page de résultats à retourner.</param>
        <param name="totalRecords">Lorsque cette méthode est retournée, contient un entier qui identifie le nombre total de profils. Ce paramètre est passé sans être initialisé.</param>
        <summary>Récupère des données du profil utilisateur pour les profils dans la source de données.</summary>
        <returns>
          <see cref="T:System.Web.Profile.ProfileInfoCollection" /> qui contient les informations sur les profils utilisateur pour tous les profils de la source de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.SqlProfileProvider.GetAllProfiles%2A> méthode est utilisée pour récupérer les informations de profil pour les profils à partir de la source de données pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Utilisez le `authenticationOption` pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher.  
  
 Les résultats retournés par <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A> sont limitées par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre identifie le nombre maximal de <xref:System.Web.Profile.ProfileInfo> objets à retourner dans le <xref:System.Web.Profile.ProfileInfoCollection>. Le `pageIndex` paramètre identifie la page de résultats à retourner ; 0 identifie la première page. Le `totalRecords` paramètre est un `out` paramètre qui est défini sur le nombre total de profils utilisateur inactifs pour configuré `applicationName`, en fonction de la `authenticationOption` et `userInactiveSinceDate` paramètres. Par exemple, si 13 utilisateurs pour le `applicationName`et le `pageIndex` valeur est égale à 1 avec un `pageSize` de 5, le <xref:System.Web.Profile.ProfileInfoCollection> retournée contient les sixième à dixième profils. Le `totalRecords` paramètre est défini sur 13.  
  
   
  
## Examples  
 L’exemple de code suivant affiche des informations de profil pour tous les profils pour le `applicationName` dans les pages de données.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/ShowProfilescs.aspx#3)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/ShowProfilesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> est inférieur à zéro.  
  
 \- ou -  
  
 <paramref name="pageSize" /> est inférieur à un.  
  
 \- ou -  
  
 <paramref name="pageIndex" /> multiplié par <paramref name="pageSize" /> est supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfInactiveProfiles">
      <MemberSignature Language="C#" Value="public override int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Une des valeurs <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> spécifiant si le type de profil anonyme, authentifié, ou les deux sont retournés.</param>
        <param name="userInactiveSinceDate">
          <see cref="T:System.DateTime" /> qui identifie quels profils utilisateur sont considérés inactifs. Si la <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> d'un profil utilisateur survient à ou avant cette date et cette heure, le profil est considéré comme inactif.</param>
        <summary>Obtient le nombre de profils dans la source de données pour lesquels la dernière date d'activité s'est produite à ou avant la <paramref name="userInactiveSinceDate" /> spécifiée.</summary>
        <returns>Nombre de profils dans la source de données pour lesquels la dernière date d'activité s'est produite avant la date et l'heure spécifiées.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles%2A> méthode est utilisée pour récupérer le nombre de tous les profils utilisateur inutilisés dans la source de données pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Utilisez le `authenticationOption` pour spécifier si vous souhaitez que seuls les profils anonymes, authentifiées uniquement des profils ou tous les profils à rechercher. Parmi les profils recherchés, tous les profils avec une <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> qui se produit à ou avant la `userInactiveSinceDate` la valeur du paramètre sont pris en compte.  
  
   
  
## Examples  
 L’exemple de code suivant permet à un utilisateur afficher et supprimer les informations de profils actifs et inactifs selon des critères de recherche. Un nombre de profils inactifs est affiché à l’aide des résultats de la <xref:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles%2A> (méthode).  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext sc, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext sc, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertyValues (sc As SettingsContext, properties As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ sc, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sc" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="sc">
          <see cref="T:System.Configuration.SettingsContext" /> qui contient des informations de profil utilisateur.</param>
        <param name="properties">
          <see cref="T:System.Configuration.SettingsPropertyCollection" /> qui contient des informations de profil pour les propriétés à récupérer.</param>
        <summary>Récupère des valeurs et des informations de propriété de profil dans une base de données de profils SQL Server.</summary>
        <returns>
          <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> qui contient des valeurs et des informations de propriété de profil.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.SqlProfileProvider.GetPropertyValues%2A> méthode est utilisée par le <xref:System.Web.Profile.ProfileBase> classe pour récupérer les propriétés de profil pour la demande en cours qui sont gérés par le <xref:System.Web.Profile.SqlProfileProvider>. Les valeurs de propriété sont retournées à partir de la source de données pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Valeurs de propriété et les informations de propriété supplémentaires sont retournées comme une collection de <xref:System.Configuration.SettingsPropertyValue> objets.  
  
   
  
## Examples  
 L’exemple de code suivant répertorie les propriétés de profil et les valeurs identifiées dans le profil actuel.  
  
 [!code-csharp[System.Web.Profile.SqlProfileProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/getpropertyvaluescs.aspx#1)]
 [!code-vb[System.Web.Profile.SqlProfileProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/getpropertyvaluesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l'instance de <see cref="T:System.Web.Profile.SqlProfileProvider" /> à initialiser.</param>
        <param name="config">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> qui contient les noms et les valeurs des options de configuration pour le fournisseur de profils.</param>
        <summary>Initialise le fournisseur de profils SQL Server avec les valeurs de propriété spécifiées dans le fichier de configuration de l'application ASP.NET. Cette méthode n'est pas destinée à être utilisée directement depuis votre code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET utilise cette méthode pour initialiser le <xref:System.Web.Profile.SqlProfileProvider> avec les valeurs de propriété spécifiées dans le fichier de configuration de l’application ASP.NET (Web.config). Cette méthode n'est pas destinée à être utilisée directement depuis votre code.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'attribut <see langword="connectionStringName" /> est une chaîne vide ("") ou n'est pas spécifié dans le fichier de configuration de l'application de cette instance de <see cref="T:System.Web.Profile.SqlProfileProvider" />.  
  
 \- ou -  
  
 La valeur de la chaîne de connexion spécifiée dans la valeur d'attribut <see langword="connectionStringName" /> est vide ou la valeur <see langword="connectionStringName" /> spécifiée n'existe pas dans le fichier de configuration de l'application pour cette instance de <see cref="T:System.Web.Profile.SqlProfileProvider" />.  
  
 \- ou -  
  
 La valeur d'attribut <see langword="applicationName" /> dépasse 256 caractères.  
  
 \- ou -  
  
 Le fichier de configuration de l'application de cette instance de <see cref="T:System.Web.Profile.SqlProfileProvider" /> contient un attribut non reconnu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException">Le niveau de confiance en cours est inférieur à <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public override void SetPropertyValues (System.Configuration.SettingsContext sc, System.Configuration.SettingsPropertyValueCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPropertyValues(class System.Configuration.SettingsContext sc, class System.Configuration.SettingsPropertyValueCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetPropertyValues (sc As SettingsContext, properties As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetPropertyValues(System::Configuration::SettingsContext ^ sc, System::Configuration::SettingsPropertyValueCollection ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sc" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="sc">
          <see cref="T:System.Configuration.SettingsContext" /> qui contient des informations de profil utilisateur.</param>
        <param name="properties">
          <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> qui contient des valeurs et des informations de profil pour les propriétés à mettre à jour.</param>
        <summary>Met à jour la base de données de profil SQL Server avec les valeurs de propriété spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Profile.SqlProfileProvider.SetPropertyValues%2A> méthode est utilisée par les services de profil ASP.NET pour mettre à jour la base de données de profil SQL Server lorsque les valeurs de propriété sont définies pour la requête actuelle. Les valeurs de propriété sont définies dans la source de données pour l’application spécifiée par la `applicationName` attribut dans le fichier de configuration. Profiler des informations sur les propriétés et valeurs à être mis à jour par le <xref:System.Web.Profile.SqlProfileProvider> sont spécifiées comme une collection de <xref:System.Configuration.SettingsPropertyValue> objets.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Profile.SqlProfileProvider.SetPropertyValues%2A> méthode permettant de modifier les valeurs de propriété de profil.  
  
 [!code-csharp[System.Web.Profile.SqlProfileProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/setpropertyvaluescs.aspx#2)]
 [!code-vb[System.Web.Profile.SqlProfileProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/setpropertyvaluesvb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>