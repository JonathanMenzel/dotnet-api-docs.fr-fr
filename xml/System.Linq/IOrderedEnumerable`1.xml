<Type Name="IOrderedEnumerable&lt;TElement&gt;" FullName="System.Linq.IOrderedEnumerable&lt;TElement&gt;">
  <TypeSignature Language="C#" Value="public interface IOrderedEnumerable&lt;TElement&gt; : System.Collections.Generic.IEnumerable&lt;TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOrderedEnumerable`1&lt;TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IOrderedEnumerable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOrderedEnumerable(Of TElement)&#xA;Implements IEnumerable(Of TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TElement&gt;&#xA;public interface class IOrderedEnumerable : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TElement" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TElement"><span data-ttu-id="26308-101">Type des éléments de la séquence.</span><span class="sxs-lookup"><span data-stu-id="26308-101">The type of the elements of the sequence.</span></span></typeparam>
    <summary><span data-ttu-id="26308-102">Représente une séquence triée.</span><span class="sxs-lookup"><span data-stu-id="26308-102">Represents a sorted sequence.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26308-103">Ce type est énumérable car il hérite <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="26308-103">This type is enumerable because it inherits from <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="26308-104">Les méthodes d’extension <xref:System.Linq.Enumerable.ThenBy%2A> et <xref:System.Linq.Enumerable.ThenByDescending%2A> opèrent sur des objets de type <xref:System.Linq.IOrderedEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="26308-104">The extension methods <xref:System.Linq.Enumerable.ThenBy%2A> and <xref:System.Linq.Enumerable.ThenByDescending%2A> operate on objects of type <xref:System.Linq.IOrderedEnumerable%601>.</span></span> <span data-ttu-id="26308-105">Un objet de type <xref:System.Linq.IOrderedEnumerable%601> peut être obtenu en appelant une des méthodes de tri principal, <xref:System.Linq.Enumerable.OrderBy%2A> ou <xref:System.Linq.Enumerable.OrderByDescending%2A>, qui retournent un <xref:System.Linq.IOrderedEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="26308-105">An object of type <xref:System.Linq.IOrderedEnumerable%601> can be obtained by calling one of the primary sort methods, <xref:System.Linq.Enumerable.OrderBy%2A> or <xref:System.Linq.Enumerable.OrderByDescending%2A>, which return an <xref:System.Linq.IOrderedEnumerable%601>.</span></span> <span data-ttu-id="26308-106"><xref:System.Linq.Enumerable.ThenBy%2A> et <xref:System.Linq.Enumerable.ThenByDescending%2A>, les méthodes de tri subordonnées, retournent ensuite également un objet de type <xref:System.Linq.IOrderedEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="26308-106"><xref:System.Linq.Enumerable.ThenBy%2A> and <xref:System.Linq.Enumerable.ThenByDescending%2A>, the subordinate sort methods, in turn also return an object of type <xref:System.Linq.IOrderedEnumerable%601>.</span></span> <span data-ttu-id="26308-107">Cette conception permet de n’importe quel nombre d’appels consécutifs de <xref:System.Linq.Enumerable.ThenBy%2A> ou <xref:System.Linq.Enumerable.ThenByDescending%2A>, où chaque appel effectue un classement secondaire des données triées retournées à partir de l’appel précédent.</span><span class="sxs-lookup"><span data-stu-id="26308-107">This design allows for any number of consecutive calls to <xref:System.Linq.Enumerable.ThenBy%2A> or <xref:System.Linq.Enumerable.ThenByDescending%2A>, where each call performs a subordinate ordering on the sorted data returned from the previous call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26308-108">L’exemple suivant montre comment effectuer un tri principal et secondaire sur un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="26308-108">The following example demonstrates how to perform a primary and secondary ordering on an array of strings.</span></span> <span data-ttu-id="26308-109">Il montre également que résultant <xref:System.Linq.IOrderedEnumerable%601> est énumérable.</span><span class="sxs-lookup"><span data-stu-id="26308-109">It also demonstrates that the resulting <xref:System.Linq.IOrderedEnumerable%601> is enumerable.</span></span>  
  
 [!code-csharp[System.Linq.IOrderedEnumerable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IOrderedEnumerable/CS/IOrderedEnumerable.cs#1)]
 [!code-vb[System.Linq.IOrderedEnumerable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IOrderedEnumerable/VB/IOrderedEnumerable.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateOrderedEnumerable&lt;TKey&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IOrderedEnumerable&lt;TElement&gt; CreateOrderedEnumerable&lt;TKey&gt; (Func&lt;TElement,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer, bool descending);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IOrderedEnumerable`1&lt;!TElement&gt; CreateOrderedEnumerable&lt;TKey&gt;(class System.Func`2&lt;!TElement, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer, bool descending) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateOrderedEnumerable(Of TKey) (keySelector As Func(Of TElement, TKey), comparer As IComparer(Of TKey), descending As Boolean) As IOrderedEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey&gt;&#xA; System::Linq::IOrderedEnumerable&lt;TElement&gt; ^ CreateOrderedEnumerable(Func&lt;TElement, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer, bool descending);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keySelector" Type="System.Func&lt;TElement,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
        <Parameter Name="descending" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="26308-110">Le type de la clé de produit par <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="26308-110">The type of the key produced by <c>keySelector</c>.</span></span></typeparam>
        <param name="keySelector"><span data-ttu-id="26308-111"><see cref="T:System.Func`2" /> utilisé pour extraire la clé de chaque élément.</span><span class="sxs-lookup"><span data-stu-id="26308-111">The <see cref="T:System.Func`2" /> used to extract the key for each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="26308-112"><see cref="T:System.Collections.Generic.IComparer`1" /> utilisé pour comparer des clés en vue de leur positionnement dans la séquence retournée.</span><span class="sxs-lookup"><span data-stu-id="26308-112">The <see cref="T:System.Collections.Generic.IComparer`1" /> used to compare keys for placement in the returned sequence.</span></span></param>
        <param name="descending">
          <span data-ttu-id="26308-113"><see langword="true" /> pour trier les éléments par ordre décroissant ; <see langword="false" /> pour trier les éléments par ordre croissant.</span><span class="sxs-lookup"><span data-stu-id="26308-113"><see langword="true" /> to sort the elements in descending order; <see langword="false" /> to sort the elements in ascending order.</span></span></param>
        <summary><span data-ttu-id="26308-114">Effectue un classement postérieur sur les éléments d'un <see cref="T:System.Linq.IOrderedEnumerable`1" /> d'après une clé.</span><span class="sxs-lookup"><span data-stu-id="26308-114">Performs a subsequent ordering on the elements of an <see cref="T:System.Linq.IOrderedEnumerable`1" /> according to a key.</span></span></summary>
        <returns><span data-ttu-id="26308-115"><see cref="T:System.Linq.IOrderedEnumerable`1" /> dont les éléments sont triés selon une clé.</span><span class="sxs-lookup"><span data-stu-id="26308-115">An <see cref="T:System.Linq.IOrderedEnumerable`1" /> whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26308-116">Les fonctionnalités fournies par cette méthode sont fournie comme cela par <xref:System.Linq.Enumerable.ThenBy%2A> ou <xref:System.Linq.Enumerable.ThenByDescending%2A>, selon que `descending` est `true` ou `false`.</span><span class="sxs-lookup"><span data-stu-id="26308-116">The functionality provided by this method is like that provided by <xref:System.Linq.Enumerable.ThenBy%2A> or <xref:System.Linq.Enumerable.ThenByDescending%2A>, depending on whether `descending` is `true` or `false`.</span></span> <span data-ttu-id="26308-117">Toutes deux effectuent un classement secondaire sur une séquence déjà triée de type <xref:System.Linq.IOrderedEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="26308-117">They both perform a subordinate ordering of an already sorted sequence of type <xref:System.Linq.IOrderedEnumerable%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26308-118">L’exemple de code suivant montre comment utiliser <xref:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable*> pour effectuer un classement secondaire sur un <xref:System.Linq.IOrderedEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="26308-118">The following code example demonstrates how to use <xref:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable*> to perform a secondary ordering on an <xref:System.Linq.IOrderedEnumerable%601>.</span></span>  
  
 [!code-csharp[System.Linq.IOrderedEnumerable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IOrderedEnumerable/CS/IOrderedEnumerable.cs#2)]
 [!code-vb[System.Linq.IOrderedEnumerable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IOrderedEnumerable/VB/IOrderedEnumerable.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>