<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IGrouping`2.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59e71d248df88103d9f119e78296e2f797fe22dfa.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e71d248df88103d9f119e78296e2f797fe22dfa</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The type of the key of the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Type de la clé de <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The type of the values in the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Type des valeurs de <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Linq.IGrouping`2">
          <source>Represents a collection of objects that have a common key.</source>
          <target state="translated">Représente une collection d’objets qui ont une clé commune.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>An <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> is an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> that additionally has a key.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> est un <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> qui a plus d’une clé.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The key represents the attribute that is common to each value in the <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</source>
          <target state="translated">La clé représente l’attribut commun à chaque valeur dans la <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The values of an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> are accessed much as the elements of an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> are accessed.</source>
          <target state="translated">Les valeurs d’une <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> beaucoup accessibles en tant que les éléments d’un <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> sont accessibles.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>For example, you can access the values by using a <ph id="ph1">`foreach`</ph> in <ph id="ph2">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> or <ph id="ph3">`For Each`</ph> in <ph id="ph4">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> loop to iterate through the <ph id="ph5">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.</source>
          <target state="translated">Par exemple, vous pouvez accéder aux valeurs à l’aide un <ph id="ph1">`foreach`</ph> dans <ph id="ph2">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> ou <ph id="ph3">`For Each`</ph> dans <ph id="ph4">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> pour effectuer une itération via la <ph id="ph5">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The Example section contains a code example that shows you how to access both the key and the values of an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.</source>
          <target state="translated">La section exemple contient un exemple de code qui montre comment accéder à la clé et les valeurs d’une <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> type is used by the <ph id="ph2">&lt;xref:System.Linq.Enumerable.GroupBy%2A&gt;</ph> standard query operator methods, which return a sequence of elements of type <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> type est utilisé par le <ph id="ph2">&lt;xref:System.Linq.Enumerable.GroupBy%2A&gt;</ph> les méthodes d’opérateur de requête standard qui retournent une séquence d’éléments de type <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The following example demonstrates how to work with an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.</source>
          <target state="translated">L’exemple suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>In this example, <ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> is called on the array of <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects returned by <ph id="ph3">&lt;xref:System.Type.GetMembers%2A&gt;</ph>.</source>
          <target state="translated">Dans cet exemple, <ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> est appelé sur le tableau de <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objets retournés par <ph id="ph3">&lt;xref:System.Type.GetMembers%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source><ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> groups the objects based on the value of their <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> regroupe les objets en fonction de la valeur de leur <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>Each unique value for <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> in the array of <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects becomes a key for a new <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object, and the <ph id="ph4">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects that have that key form the <ph id="ph5">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object's sequence of values.</source>
          <target state="translated">Chaque valeur unique de <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> dans le tableau de <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objets devient une clé pour un nouveau <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objet et le <ph id="ph4">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objets qui ont cette clé forment la <ph id="ph5">&lt;xref:System.Linq.IGrouping%602&gt;</ph> séquence de valeurs de l’objet.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A&gt;</ph> method is called on the sequence of <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objects to obtain just the first <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.</source>
          <target state="translated">Enfin, le <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A&gt;</ph> méthode est appelée sur la séquence de <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objets pour obtenir le premier <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The example then outputs the key of the <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph> property of each value in the <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object's sequence of values.</source>
          <target state="translated">L’exemple renvoie ensuite la clé de la <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objet et la <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph> propriété de chaque valeur dans la <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> séquence de valeurs de l’objet.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>Notice that to access an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object's sequence of values, you simply use the <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> variable itself.</source>
          <target state="translated">Notez que pour accéder à un <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> séquence de valeurs de l’objet, vous utilisez simplement le <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> proprement dite.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Linq.IGrouping`2.Key">
          <source>Gets the key of the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Obtient la clé de <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The key of the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Clé de <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The key of an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> represents the attribute that is common to each value in the <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</source>
          <target state="translated">La clé d’un <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> représente l’attribut commun à chaque valeur dans la <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Linq.IGrouping%602.Key%2A&gt;</ph> property to label each <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object in a sequence of <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objects.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Linq.IGrouping%602.Key%2A&gt;</ph> à étiqueter chaque propriété <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objet dans une séquence de <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> method is used to obtain a sequence of <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objects.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> méthode est utilisée pour obtenir une séquence de <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The <ph id="ph1">`foreach`</ph> in <ph id="ph2">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> or <ph id="ph3">`For Each`</ph> in <ph id="ph4">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> loop then iterates through each <ph id="ph5">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object, outputting its key and the number of values it contains.</source>
          <target state="translated">Le <ph id="ph1">`foreach`</ph> dans <ph id="ph2">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> ou <ph id="ph3">`For Each`</ph> dans <ph id="ph4">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> boucle parcourt ensuite chaque <ph id="ph5">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objet, en renvoyant sa clé et le nombre de valeurs qu’il contient.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>