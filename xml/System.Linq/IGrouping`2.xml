<Type Name="IGrouping&lt;TKey,TElement&gt;" FullName="System.Linq.IGrouping&lt;TKey,TElement&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="437dfcb6e83ef51b61ada590d84a404bfdbf3010" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51316980" /></Metadata><TypeSignature Language="C#" Value="public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGrouping`2&lt;+ TKey, + TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IGrouping`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGrouping(Of Out TKey, Out TElement)&#xA;Implements IEnumerable(Of Out TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TElement&gt;&#xA;public interface class IGrouping : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <TypeSignature Language="F#" Value="type IGrouping&lt;'Key, 'Element&gt; = interface&#xA;    interface seq&lt;'Element&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">Type de la clé de <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
    <typeparam name="TElement">Type des valeurs de <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
    <summary>Représente une collection d’objets qui ont une clé commune.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Linq.IGrouping%602> est un <xref:System.Collections.Generic.IEnumerable%601> qui a en outre une clé. La clé représente l’attribut commun à chaque valeur dans le <xref:System.Linq.IGrouping%602>.  
  
 Les valeurs d’une <xref:System.Linq.IGrouping%602> sont accessibles beaucoup en tant que les éléments d’un <xref:System.Collections.Generic.IEnumerable%601> sont accessibles. Par exemple, vous pouvez accéder aux valeurs à l’aide un `foreach` en Visual c# ou `For Each` in Visual Basic pour itérer au sein du <xref:System.Linq.IGrouping%602> objet. La section exemple contient un exemple de code qui vous montre comment accéder à la clé et les valeurs d’un <xref:System.Linq.IGrouping%602> objet.  
  
 Le <xref:System.Linq.IGrouping%602> type est utilisé par le <xref:System.Linq.Enumerable.GroupBy%2A> les méthodes d’opérateur de requête standard qui retournent une séquence d’éléments de type <xref:System.Linq.IGrouping%602>.  
  
   
  
## Examples  
 L’exemple suivant montre comment travailler avec un <xref:System.Linq.IGrouping%602> objet.  
  
 Dans cet exemple, <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> est appelé sur le tableau de <xref:System.Reflection.MemberInfo> objets retournés par <xref:System.Type.GetMembers%2A>. <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> regroupe les objets en fonction de la valeur de leur <xref:System.Reflection.MemberInfo.MemberType%2A> propriété. Chaque valeur unique de <xref:System.Reflection.MemberInfo.MemberType%2A> dans le tableau de <xref:System.Reflection.MemberInfo> objets devient la clé d’un nouveau <xref:System.Linq.IGrouping%602> objet et le <xref:System.Reflection.MemberInfo> objets qui ont cette clé forment la <xref:System.Linq.IGrouping%602> séquence de valeurs de l’objet.  
  
 Enfin, le <xref:System.Linq.Enumerable.First%2A> méthode est appelée sur la séquence de <xref:System.Linq.IGrouping%602> objets à obtenir simplement le premier <xref:System.Linq.IGrouping%602> objet.  
  
 L’exemple renvoie ensuite la clé de la <xref:System.Linq.IGrouping%602> objet et le <xref:System.Reflection.MemberInfo.Name%2A> propriété de chaque valeur dans la <xref:System.Linq.IGrouping%602> séquence de valeurs de l’objet. Notez que pour accéder à un <xref:System.Linq.IGrouping%602> séquence de valeurs de l’objet, vous utilisez simplement la <xref:System.Linq.IGrouping%602> variable elle-même.  
  
 [!code-csharp[System.Linq.IGrouping#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#1)]
 [!code-vb[System.Linq.IGrouping#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IGrouping`2.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As TKey" />
      <MemberSignature Language="F#" Value="member this.Key : 'Key" Usage="System.Linq.IGrouping&lt;'Key, 'Element&gt;.Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TKey Key { TKey get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la clé de <see cref="T:System.Linq.IGrouping`2" />.</summary>
        <value>Clé de <see cref="T:System.Linq.IGrouping`2" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clé d’un <xref:System.Linq.IGrouping%602> représente l’attribut commun à chaque valeur dans le <xref:System.Linq.IGrouping%602>.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Linq.IGrouping%602.Key%2A> à étiqueter chaque propriété <xref:System.Linq.IGrouping%602> objet dans une séquence de <xref:System.Linq.IGrouping%602> objets. Le <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> méthode est utilisée pour obtenir une séquence de <xref:System.Linq.IGrouping%602> objets. Le `foreach` en Visual c# ou `For Each` en Visual Basic boucle effectue ensuite une itération à travers chacune <xref:System.Linq.IGrouping%602> objet, en renvoyant sa clé et le nombre de valeurs qu’il contient.  
  
 [!code-csharp[System.Linq.IGrouping#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#2)]
 [!code-vb[System.Linq.IGrouping#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>