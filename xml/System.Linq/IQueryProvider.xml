<Type Name="IQueryProvider" FullName="System.Linq.IQueryProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="55935c99f25450552a9c9cd972bb5f510c7eae8d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37650015" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IQueryProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IQueryProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryProvider" />
  <TypeSignature Language="F#" Value="type IQueryProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Définit des méthodes destinées à créer et exécuter des requêtes décrites par un objet <see cref="T:System.Linq.IQueryable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Linq.IQueryProvider> interface est destinée à être mise en œuvre par les fournisseurs de requêtes.  
  
 Pour plus d’informations sur la façon de créer votre propre fournisseur LINQ, consultez [LINQ : création d’un fournisseur IQueryable](http://go.microsoft.com/fwlink/?LinkID=112370) sur les Blogs MSDN.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Linq.Queryable" />
    <altmember cref="T:System.Linq.IQueryable`1" />
  </Docs>
  <Members>
    <Member MemberName="CreateQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable CreateQuery (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable CreateQuery(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::IQueryable ^ CreateQuery(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member CreateQuery : System.Linq.Expressions.Expression -&gt; System.Linq.IQueryable" Usage="iQueryProvider.CreateQuery expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">Arborescence d'expression qui représente une requête [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)].</param>
        <summary>Construit un objet <see cref="T:System.Linq.IQueryable" /> capable d'évaluer la requête représentée par une arborescence d'expression spécifiée.</summary>
        <returns>Objet <see cref="T:System.Linq.IQueryable" /> capable d'évaluer la requête représentée par l'arborescence d'expression spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Linq.IQueryable.Expression%2A> propriété de retourné <xref:System.Linq.IQueryable> objet est égal à `expression`.  
  
 Le <xref:System.Linq.IQueryProvider.CreateQuery%2A> méthode est utilisée pour créer de nouveaux <xref:System.Linq.IQueryable> objets, étant données une arborescence d’expression. La requête qui est représentée par l’objet retourné est associée à un fournisseur LINQ spécifique.  
  
 Plusieurs des méthodes d’opérateur de requête standard définis dans <xref:System.Linq.Queryable>, tel que <xref:System.Linq.Queryable.OfType%2A> et <xref:System.Linq.Queryable.Cast%2A>, appelez cette méthode. Elles lui passent un <xref:System.Linq.Expressions.MethodCallExpression> qui représente un [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] requête.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQuery&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;TElement&gt; CreateQuery&lt;TElement&gt; (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!TElement&gt; CreateQuery&lt;TElement&gt;(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Linq::IQueryable&lt;TElement&gt; ^ CreateQuery(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member CreateQuery : System.Linq.Expressions.Expression -&gt; System.Linq.IQueryable&lt;'Element&gt;" Usage="iQueryProvider.CreateQuery expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">Type des éléments du <see cref="T:System.Linq.IQueryable`1" /> retourné.</typeparam>
        <param name="expression">Arborescence d'expression qui représente une requête [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)].</param>
        <summary>Construit un objet <see cref="T:System.Linq.IQueryable`1" /> capable d'évaluer la requête représentée par une arborescence d'expression spécifiée.</summary>
        <returns>Objet <see cref="T:System.Linq.IQueryable`1" /> capable d'évaluer la requête représentée par l'arborescence d'expression spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Linq.IQueryable.Expression%2A> propriété de retourné <xref:System.Linq.IQueryable%601> objet est égal à `expression`.  
  
 Le <xref:System.Linq.IQueryProvider.CreateQuery%2A> méthode est utilisée pour créer de nouveaux <xref:System.Linq.IQueryable%601> objets, étant données une arborescence d’expression. La requête qui est représentée par l’objet retourné est associée à un fournisseur LINQ spécifique.  
  
 La plupart de la <xref:System.Linq.Queryable> méthodes d’opérateur de requête standard qui retournent des résultats énumérables appellent cette méthode. Elles lui passent un <xref:System.Linq.Expressions.MethodCallExpression> qui représente un [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] requête.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public object Execute (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Execute(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Execute(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Linq.Expressions.Expression -&gt; obj" Usage="iQueryProvider.Execute expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">Arborescence d'expression qui représente une requête [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)].</param>
        <summary>Exécute la requête représentée par une arborescence d'expression spécifiée.</summary>
        <returns>Valeur qui résulte de l'exécution de la requête spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Linq.IQueryProvider.Execute%2A> méthode exécute des requêtes qui retournent une valeur unique (au lieu d’une séquence énumérable de valeurs). Arborescences d’expressions qui représentent des requêtes qui retournent des résultats énumérables sont exécutées lorsque leur sont associées <xref:System.Linq.IQueryable> objet est énuméré.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Execute&lt;TResult&gt; (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Execute&lt;TResult&gt;(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Execute(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Linq.Expressions.Expression -&gt; 'Result" Usage="iQueryProvider.Execute expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Type de la valeur qui résulte de l'exécution de la requête.</typeparam>
        <param name="expression">Arborescence d'expression qui représente une requête [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)].</param>
        <summary>Exécute la requête fortement typée représentée par une arborescence d'expression spécifiée.</summary>
        <returns>Valeur qui résulte de l'exécution de la requête spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Linq.IQueryProvider.Execute%2A> méthode exécute des requêtes qui retournent une valeur unique (au lieu d’une séquence énumérable de valeurs). Arborescences d’expressions qui représentent des requêtes qui retournent des résultats énumérables sont exécutées lorsque le <xref:System.Linq.IQueryable%601> objet qui contient l’arborescence d’expression est énuméré.  
  
 Le <xref:System.Linq.Queryable> méthodes d’opérateur de requête standard qui retournent des résultats uniques appellent <xref:System.Linq.IQueryProvider.Execute%2A>. Elles lui passent un <xref:System.Linq.Expressions.MethodCallExpression> qui représente un [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] requête.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>