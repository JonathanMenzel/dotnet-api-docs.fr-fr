<Type Name="ImmutableArrayExtensions" FullName="System.Linq.ImmutableArrayExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7dc78be1638d594f47a3ff1cd00a15d86f2f2804" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58554776" /></Metadata><TypeSignature Language="C#" Value="public static class ImmutableArrayExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArrayExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ImmutableArrayExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArrayExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArrayExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableArrayExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.1.37.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b51e0-101">Substitutions de méthode d’extension LINQ qui offrent une plus grande efficacité pour <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> que les méthodes LINQ standard</span><span class="sxs-lookup"><span data-stu-id="b51e0-101">LINQ extension method overrides that offer greater efficiency for <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> than the standard LINQ methods</span></span> 
 <span data-ttu-id="b51e0-102">**Package NuGet** : <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">à propos des collections immuables et de leur installation</see>)</span><span class="sxs-lookup"><span data-stu-id="b51e0-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Aggregate&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,T,T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Aggregate&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`3&lt;!!T, !!T, !!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of T) (immutableArray As ImmutableArray(Of T), func As Func(Of T, T, T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, T, T&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'T, 'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Aggregate (immutableArray, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;T,T,T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-103">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-103">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-104">Collection à laquelle appliquer la fonction.</span><span class="sxs-lookup"><span data-stu-id="b51e0-104">The collection to apply the function to.</span></span></param>
        <param name="func"><span data-ttu-id="b51e0-105">Fonction à appeler sur chaque élément, de manière cumulative.</span><span class="sxs-lookup"><span data-stu-id="b51e0-105">A function to be invoked on each element, in a cumulative way.</span></span></param>
        <summary><span data-ttu-id="b51e0-106">Applique une fonction à une séquence d’éléments de manière cumulative.</span><span class="sxs-lookup"><span data-stu-id="b51e0-106">Applies a function to a sequence of elements in a cumulative way.</span></span></summary>
        <returns><span data-ttu-id="b51e0-107">Valeur finale une fois que la fonction cumulative a été appliquée à tous les éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-107">The final value after the cumulative function has been applied to all elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b51e0-108"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> méthode rend simple effectuer un calcul sur une séquence de valeurs.</span><span class="sxs-lookup"><span data-stu-id="b51e0-108"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="b51e0-109">Cette méthode fonctionne en appelant `func` une fois pour chaque élément dans la source.</span><span class="sxs-lookup"><span data-stu-id="b51e0-109">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="b51e0-110">Chaque fois `func` est appelée, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passe l’élément à partir de la séquence et une valeur agrégée (en tant que premier argument de func).</span><span class="sxs-lookup"><span data-stu-id="b51e0-110">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="b51e0-111">La valeur de la `seed` paramètre est utilisé comme valeur d’agrégation initiale.</span><span class="sxs-lookup"><span data-stu-id="b51e0-111">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="b51e0-112">Le résultat de `func` remplace la valeur agrégée précédente.</span><span class="sxs-lookup"><span data-stu-id="b51e0-112">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="b51e0-113"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Retourne le résultat final de `func`.</span><span class="sxs-lookup"><span data-stu-id="b51e0-113"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,T&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TAccumulate,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TAccumulate, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate)) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'Accumulate * Func&lt;'Accumulate, 'T, 'Accumulate&gt; -&gt; 'Accumulate" Usage="System.Linq.ImmutableArrayExtensions.Aggregate (immutableArray, seed, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate"><span data-ttu-id="b51e0-114">Type de la valeur cumulée.</span><span class="sxs-lookup"><span data-stu-id="b51e0-114">The type of the accumulated value.</span></span></typeparam>
        <typeparam name="T"><span data-ttu-id="b51e0-115">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-115">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-116">Collection à laquelle appliquer la fonction.</span><span class="sxs-lookup"><span data-stu-id="b51e0-116">The collection to apply the function to.</span></span></param>
        <param name="seed"><span data-ttu-id="b51e0-117">Valeur d'accumulation initiale.</span><span class="sxs-lookup"><span data-stu-id="b51e0-117">The initial accumulator value.</span></span></param>
        <param name="func"><span data-ttu-id="b51e0-118">Fonction à appeler sur chaque élément, de manière cumulative.</span><span class="sxs-lookup"><span data-stu-id="b51e0-118">A function to be invoked on each element, in a cumulative way.</span></span></param>
        <summary><span data-ttu-id="b51e0-119">Applique une fonction à une séquence d’éléments de manière cumulative.</span><span class="sxs-lookup"><span data-stu-id="b51e0-119">Applies a function to a sequence of elements in a cumulative way.</span></span></summary>
        <returns><span data-ttu-id="b51e0-120">Valeur d'accumulation finale.</span><span class="sxs-lookup"><span data-stu-id="b51e0-120">The final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b51e0-121"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> méthode rend simple effectuer un calcul sur une séquence de valeurs.</span><span class="sxs-lookup"><span data-stu-id="b51e0-121"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="b51e0-122">Cette méthode fonctionne en appelant `func` une fois pour chaque élément dans la source.</span><span class="sxs-lookup"><span data-stu-id="b51e0-122">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="b51e0-123">Chaque fois `func` est appelée, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passe l’élément à partir de la séquence et une valeur agrégée (en tant que premier argument de func).</span><span class="sxs-lookup"><span data-stu-id="b51e0-123">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="b51e0-124">La valeur de la `seed` paramètre est utilisé comme valeur d’agrégation initiale.</span><span class="sxs-lookup"><span data-stu-id="b51e0-124">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="b51e0-125">Le résultat de `func` remplace la valeur agrégée précédente.</span><span class="sxs-lookup"><span data-stu-id="b51e0-125">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="b51e0-126"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Retourne le résultat final de `func`.</span><span class="sxs-lookup"><span data-stu-id="b51e0-126"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,TResult,T&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TAccumulate,TResult,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TAccumulate, TResult, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, TResult, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename TResult, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'Accumulate * Func&lt;'Accumulate, 'T, 'Accumulate&gt; * Func&lt;'Accumulate, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ImmutableArrayExtensions.Aggregate (immutableArray, seed, func, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate"><span data-ttu-id="b51e0-127">Type de la valeur cumulée.</span><span class="sxs-lookup"><span data-stu-id="b51e0-127">The type of the accumulated value.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="b51e0-128">Type de résultat retourné par le sélecteur de résultat.</span><span class="sxs-lookup"><span data-stu-id="b51e0-128">The type of result returned by the result selector.</span></span></typeparam>
        <typeparam name="T"><span data-ttu-id="b51e0-129">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-129">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-130">Collection à laquelle appliquer la fonction.</span><span class="sxs-lookup"><span data-stu-id="b51e0-130">The collection to apply the function to.</span></span></param>
        <param name="seed"><span data-ttu-id="b51e0-131">Valeur d'accumulation initiale.</span><span class="sxs-lookup"><span data-stu-id="b51e0-131">The initial accumulator value.</span></span></param>
        <param name="func"><span data-ttu-id="b51e0-132">Fonction à appeler sur chaque élément, de manière cumulative.</span><span class="sxs-lookup"><span data-stu-id="b51e0-132">A function to be invoked on each element, in a cumulative way.</span></span></param>
        <param name="resultSelector">To be added.</param>
        <summary><span data-ttu-id="b51e0-133">Applique une fonction à une séquence d’éléments de manière cumulative.</span><span class="sxs-lookup"><span data-stu-id="b51e0-133">Applies a function to a sequence of elements in a cumulative way.</span></span></summary>
        <returns><span data-ttu-id="b51e0-134">Valeur d'accumulation finale.</span><span class="sxs-lookup"><span data-stu-id="b51e0-134">The final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b51e0-135"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> méthode rend simple effectuer un calcul sur une séquence de valeurs.</span><span class="sxs-lookup"><span data-stu-id="b51e0-135"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="b51e0-136">Cette méthode fonctionne en appelant `func` une fois pour chaque élément dans la source.</span><span class="sxs-lookup"><span data-stu-id="b51e0-136">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="b51e0-137">Chaque fois `func` est appelée, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passe l’élément à partir de la séquence et une valeur agrégée (en tant que premier argument de func).</span><span class="sxs-lookup"><span data-stu-id="b51e0-137">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="b51e0-138">La valeur de la `seed` paramètre est utilisé comme valeur d’agrégation initiale.</span><span class="sxs-lookup"><span data-stu-id="b51e0-138">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="b51e0-139">Le résultat de `func` remplace la valeur agrégée précédente.</span><span class="sxs-lookup"><span data-stu-id="b51e0-139">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="b51e0-140"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Retourne le résultat final de `func`.</span><span class="sxs-lookup"><span data-stu-id="b51e0-140"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="All&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.All (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-141">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-141">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-142">Tableau pour rechercher les correspondances.</span><span class="sxs-lookup"><span data-stu-id="b51e0-142">The array to check for matches.</span></span></param>
        <param name="predicate"><span data-ttu-id="b51e0-143">Prédicat.</span><span class="sxs-lookup"><span data-stu-id="b51e0-143">The predicate.</span></span></param>
        <summary><span data-ttu-id="b51e0-144">Obtient une valeur indiquant si tous les éléments de ce tableau correspondent à une condition donnée.</span><span class="sxs-lookup"><span data-stu-id="b51e0-144">Gets a value indicating whether all elements in this array match a given condition.</span></span></summary>
        <returns><span data-ttu-id="b51e0-145"><see langword="true" /> si chaque élément de la séquence source réussit le test dans le prédicat spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b51e0-145"><see langword="true" /> if every element of the source sequence passes the test in the specified predicate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member Any : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.Any immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-146">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-146">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-147">Tableau pour rechercher les éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-147">The array to check for elements.</span></span></param>
        <summary><span data-ttu-id="b51e0-148">Obtient une valeur qui indique si le tableau contient des éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-148">Gets a value indicating whether the array contains any elements.</span></span></summary>
        <returns><span data-ttu-id="b51e0-149"><see langword="true" /> si le tableau contient des éléments ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b51e0-149"><see langword="true" /> if the array contains an elements; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Any : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.Any builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-150">Type des éléments dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-150">The type of elements in the array.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="b51e0-151">Générateur pour rechercher les correspondances.</span><span class="sxs-lookup"><span data-stu-id="b51e0-151">The builder to check for matches.</span></span></param>
        <summary><span data-ttu-id="b51e0-152">Retourne une valeur qui indique si cette collection contient des éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-152">Returns a value indicating whether this collection contains any elements.</span></span></summary>
        <returns><span data-ttu-id="b51e0-153"><see langword="true" /> Si le générateur de tableaux contient des éléments ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b51e0-153"><see langword="true" /> if the array builder contains any elements; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.Any (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-154">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-154">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-155">Tableau pour rechercher les éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-155">The array to check for elements.</span></span></param>
        <param name="predicate"><span data-ttu-id="b51e0-156">Délégué qui définit la condition de correspondance d’un élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-156">The delegate that defines the condition to match to an element.</span></span></param>
        <summary><span data-ttu-id="b51e0-157">Obtient une valeur qui indique si le tableau contient des éléments qui correspondent à une condition spécifiée.</span><span class="sxs-lookup"><span data-stu-id="b51e0-157">Gets a value indicating whether the array contains any elements that match a specified condition.</span></span></summary>
        <returns><span data-ttu-id="b51e0-158"><see langword="true" /> si un élément correspond à la condition spécifiée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b51e0-158"><see langword="true" /> if an element matches the specified condition; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAt&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAt&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAt(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAt : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.ElementAt (immutableArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-159">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-159">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-160">Tableau dans lequel rechercher un élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-160">The array to find an element in.</span></span></param>
        <param name="index"><span data-ttu-id="b51e0-161">Index de l’élément à récupérer.</span><span class="sxs-lookup"><span data-stu-id="b51e0-161">The index for the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="b51e0-162">Retourne l’élément à l’index spécifié dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-162">Returns the element at a specified index in the array.</span></span></summary>
        <returns><span data-ttu-id="b51e0-163">Élément situé à l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="b51e0-163">The item at the specified index.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAtOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAtOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAtOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAtOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.ElementAtOrDefault (immutableArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-164">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-164">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-165">Tableau dans lequel rechercher un élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-165">The array to find an element in.</span></span></param>
        <param name="index"><span data-ttu-id="b51e0-166">Index de l’élément à récupérer.</span><span class="sxs-lookup"><span data-stu-id="b51e0-166">The index for the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="b51e0-167">Retourne l’élément situé à un index spécifié dans une séquence ou une valeur par défaut si l’index est hors limites.</span><span class="sxs-lookup"><span data-stu-id="b51e0-167">Returns the element at a specified index in a sequence or a default value if the index is out of range.</span></span></summary>
        <returns><span data-ttu-id="b51e0-168">Élément à l’index spécifié ou la valeur par défaut si l’index est introuvable.</span><span class="sxs-lookup"><span data-stu-id="b51e0-168">The item at the specified index, or the default value if the index is not found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member First : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.First immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-169">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-169">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-170">Tableau auprès duquel obtenir un élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-170">The array to get an item from.</span></span></param>
        <summary><span data-ttu-id="b51e0-171">Retourne le premier élément d’un tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-171">Returns the first element in an array.</span></span></summary>
        <returns><span data-ttu-id="b51e0-172">Premier élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-172">The first item in the array.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b51e0-173">Si le tableau est vide.</span><span class="sxs-lookup"><span data-stu-id="b51e0-173">If the array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member First : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.First builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-174">Type des éléments du tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-174">The type of items in the array.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="b51e0-175">Générateur auprès duquel récupérer un élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-175">The builder to retrieve an item from.</span></span></param>
        <summary><span data-ttu-id="b51e0-176">Retourne le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-176">Returns the first element in the collection.</span></span></summary>
        <returns><span data-ttu-id="b51e0-177">Premier élément de la liste.</span><span class="sxs-lookup"><span data-stu-id="b51e0-177">The first item in the list.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b51e0-178">Si le tableau est vide.</span><span class="sxs-lookup"><span data-stu-id="b51e0-178">If the array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member First : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.First (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-179">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-179">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-180">Tableau auprès duquel obtenir un élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-180">The array to get an item from.</span></span></param>
        <param name="predicate"><span data-ttu-id="b51e0-181">Délégué qui définit les conditions de l’élément à rechercher.</span><span class="sxs-lookup"><span data-stu-id="b51e0-181">The delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="b51e0-182">Retourne le premier élément d’une séquence à satisfaire à la condition spécifiée.</span><span class="sxs-lookup"><span data-stu-id="b51e0-182">Returns the first element in a sequence that satisfies a specified condition.</span></span></summary>
        <returns><span data-ttu-id="b51e0-183">Premier élément de la liste s’il satisfait la condition spécifiée par <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="b51e0-183">The first item in the list if it meets the condition specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b51e0-184">Si le tableau est vide.</span><span class="sxs-lookup"><span data-stu-id="b51e0-184">If the array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.FirstOrDefault immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-185">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-185">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-186">Tableau auprès duquel récupérer des éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-186">The array to retrieve items from.</span></span></param>
        <summary><span data-ttu-id="b51e0-187">Retourne le premier élément d’une séquence ou une valeur par défaut si la séquence ne contient aucun élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-187">Returns the first element of a sequence, or a default value if the sequence contains no elements.</span></span></summary>
        <returns><span data-ttu-id="b51e0-188">Premier élément de la liste, le cas échéant ; sinon, la valeur par défaut pour le type d’élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-188">The first item in the list, if found; otherwise the default value for the item type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.FirstOrDefault builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-189">Type d’élément dans le générateur.</span><span class="sxs-lookup"><span data-stu-id="b51e0-189">The type of item in the builder.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="b51e0-190">Générateur auprès duquel récupérer un élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-190">The builder to retrieve an element from.</span></span></param>
        <summary><span data-ttu-id="b51e0-191">Retourne le premier élément de la collection, ou la valeur par défaut si la collection est vide.</span><span class="sxs-lookup"><span data-stu-id="b51e0-191">Returns the first element in the collection, or the default value if the collection is empty.</span></span></summary>
        <returns><span data-ttu-id="b51e0-192">Premier élément de la liste, le cas échéant ; sinon, la valeur par défaut pour le type d’élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-192">The first item in the list, if found; otherwise the default value for the item type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.FirstOrDefault (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-193">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-193">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-194">Tableau auprès duquel récupérer des éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-194">The array to retrieve elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="b51e0-195">Délégué qui définit les conditions de l’élément à rechercher.</span><span class="sxs-lookup"><span data-stu-id="b51e0-195">The delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="b51e0-196">Retourne le premier élément de la séquence à satisfaire à une condition ou une valeur par défaut si aucun élément correspondant n’est trouvé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-196">Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</span></span></summary>
        <returns><span data-ttu-id="b51e0-197">Premier élément de la liste, le cas échéant ; sinon, la valeur par défaut pour le type d’élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-197">The first item in the list, if found; otherwise the default value for the item type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member Last : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Last immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-198">Type d’élément contenu dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-198">The type of element contained by the array.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-199">Tableau auprès duquel récupérer des éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-199">The array to retrieve items from.</span></span></param>
        <summary><span data-ttu-id="b51e0-200">Retourne le dernier élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-200">Returns the last element of the array.</span></span></summary>
        <returns><span data-ttu-id="b51e0-201">Dernier élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-201">The last element in the array.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b51e0-202">Levé si la collection est vide.</span><span class="sxs-lookup"><span data-stu-id="b51e0-202">Thrown if the collection is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Last : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Last builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-203">Type d’élément dans le générateur.</span><span class="sxs-lookup"><span data-stu-id="b51e0-203">The type of item in the builder.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="b51e0-204">Générateur auprès duquel récupérer des éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-204">The builder to retrieve elements from.</span></span></param>
        <summary><span data-ttu-id="b51e0-205">Retourne le dernier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-205">Returns the last element in the collection.</span></span></summary>
        <returns><span data-ttu-id="b51e0-206">Dernier élément dans le générateur.</span><span class="sxs-lookup"><span data-stu-id="b51e0-206">The last element in the builder.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b51e0-207">Levé si la collection est vide.</span><span class="sxs-lookup"><span data-stu-id="b51e0-207">Thrown if the collection is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Last : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Last (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-208">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-208">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-209">Tableau auprès duquel récupérer des éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-209">The array to retrieve elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="b51e0-210">Délégué qui définit les conditions de l’élément à récupérer.</span><span class="sxs-lookup"><span data-stu-id="b51e0-210">The delegate that defines the conditions of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="b51e0-211">Retourne le dernier élément d’une séquence à satisfaire à la condition spécifiée.</span><span class="sxs-lookup"><span data-stu-id="b51e0-211">Returns the last element of a sequence that satisfies a specified condition.</span></span></summary>
        <returns><span data-ttu-id="b51e0-212">Dernier élément du tableau qui satisfait à la condition <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="b51e0-212">The last element of the array that satisfies the <paramref name="predicate" /> condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b51e0-213">Levé si la collection est vide.</span><span class="sxs-lookup"><span data-stu-id="b51e0-213">Thrown if the collection is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.LastOrDefault immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-214">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-214">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-215">Tableau auprès duquel récupérer des éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-215">The array to retrieve items from.</span></span></param>
        <summary><span data-ttu-id="b51e0-216">Retourne le dernier élément d’une séquence ou une valeur par défaut si la séquence ne contient aucun élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-216">Returns the last element of a sequence, or a default value if the sequence contains no elements.</span></span></summary>
        <returns><span data-ttu-id="b51e0-217">Dernier élément d’une séquence, ou valeur par défaut si la séquence ne contient aucun élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-217">The last element of a sequence, or a default value if the sequence contains no elements.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.LastOrDefault builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-218">Type d’élément dans le générateur.</span><span class="sxs-lookup"><span data-stu-id="b51e0-218">The type of item in the builder.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="b51e0-219">Générateur auprès duquel récupérer un élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-219">The builder to retrieve an element from.</span></span></param>
        <summary><span data-ttu-id="b51e0-220">Retourne le dernier élément de la collection, ou la valeur par défaut si la collection est vide.</span><span class="sxs-lookup"><span data-stu-id="b51e0-220">Returns the last element in the collection, or the default value if the collection is empty.</span></span></summary>
        <returns><span data-ttu-id="b51e0-221">Dernier élément d’une séquence, ou valeur par défaut si la séquence ne contient aucun élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-221">The last element of a sequence, or a default value if the sequence contains no elements.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.LastOrDefault (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-222">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-222">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-223">Tableau auprès duquel récupérer un élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-223">The array to retrieve an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="b51e0-224">Délégué qui définit les conditions de l’élément à rechercher.</span><span class="sxs-lookup"><span data-stu-id="b51e0-224">The delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="b51e0-225">Retourne le dernier élément d’une séquence à satisfaire à une condition ou une valeur par défaut si aucun élément correspondant n’est trouvé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-225">Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</span></span></summary>
        <returns><span data-ttu-id="b51e0-226">Dernier élément d’une séquence, ou valeur par défaut si la séquence ne contient aucun élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-226">The last element of a sequence, or a default value if the sequence contains no elements.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; Select&lt;T,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Select&lt;T, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of T, TResult) (immutableArray As ImmutableArray(Of T), selector As Func(Of T, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Select(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Result&gt; -&gt; seq&lt;'Result&gt;" Usage="System.Linq.ImmutableArrayExtensions.Select (immutableArray, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;T,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-227">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-227">The type of element contained by the collection.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="b51e0-228">Type de l’élément de résultat.</span><span class="sxs-lookup"><span data-stu-id="b51e0-228">The type of the result element.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-229">Tableau immuable à partir duquel sélectionner des éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-229">The immutable array to select items from.</span></span></param>
        <param name="selector"><span data-ttu-id="b51e0-230">Fonction de transformation à appliquer à chaque élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-230">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="b51e0-231">Projette chaque élément d’une séquence dans un nouveau formulaire.</span><span class="sxs-lookup"><span data-stu-id="b51e0-231">Projects each element of a sequence into a new form.</span></span></summary>
        <returns><span data-ttu-id="b51e0-232">Une <see cref="T:System.Collections.Generic.IEnumerable`1" /> dont les éléments résultent d’un appel de la fonction de transformation sur chaque élément de source.</span><span class="sxs-lookup"><span data-stu-id="b51e0-232">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result of invoking the transform function on each element of source.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; immutableArray, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (immutableArray As ImmutableArray(Of TSource), collectionSelector As Func(Of TSource, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ SelectMany(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, seq&lt;'Collection&gt;&gt; * Func&lt;'Source, 'Collection, 'Result&gt; -&gt; seq&lt;'Result&gt;" Usage="System.Linq.ImmutableArrayExtensions.SelectMany (immutableArray, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="b51e0-233">Le type des éléments de <paramref name="immutableArray" />.</span><span class="sxs-lookup"><span data-stu-id="b51e0-233">The type of the elements of <paramref name="immutableArray" />.</span></span></typeparam>
        <typeparam name="TCollection"><span data-ttu-id="b51e0-234">Type des éléments intermédiaires collectés par <paramref name="collectionSelector" />.</span><span class="sxs-lookup"><span data-stu-id="b51e0-234">The type of the intermediate elements collected by <paramref name="collectionSelector" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="b51e0-235">Type des éléments de la séquence résultante.</span><span class="sxs-lookup"><span data-stu-id="b51e0-235">The type of the elements of the resulting sequence.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-236">Tableau immuable.</span><span class="sxs-lookup"><span data-stu-id="b51e0-236">The immutable array.</span></span></param>
        <param name="collectionSelector"><span data-ttu-id="b51e0-237">Fonction de transformation à appliquer à chaque élément de la séquence d'entrée.</span><span class="sxs-lookup"><span data-stu-id="b51e0-237">A transform function to apply to each element of the input sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="b51e0-238">Fonction de transformation à appliquer à chaque élément de la séquence intermédiaire.</span><span class="sxs-lookup"><span data-stu-id="b51e0-238">A transform function to apply to each element of the intermediate sequence.</span></span></param>
        <summary><span data-ttu-id="b51e0-239">Projette chaque élément d’une séquence sur un <see cref="T:System.Collections.Generic.IEnumerable`1" />, aplatit les séquences résultantes en une seule séquence, puis appelle une fonction de sélection de résultat sur chaque élément inclus.</span><span class="sxs-lookup"><span data-stu-id="b51e0-239">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />,             flattens the resulting sequences into one sequence, and invokes a result             selector function on each element therein.</span></span></summary>
        <returns><span data-ttu-id="b51e0-240"><see cref="T:System.Collections.Generic.IEnumerable`1" /> dont les éléments résultent d’un appel de la fonction de transformation <paramref name="collectionSelector" /> de type un-à-plusieurs sur chaque élément de <paramref name="immutableArray" /> et du mappage de chacun de ces éléments de séquence ainsi que de leur élément source correspondant à un élément de résultat.</span><span class="sxs-lookup"><span data-stu-id="b51e0-240">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result             of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each             element of <paramref name="immutableArray" /> and then mapping each of those sequence elements and their             corresponding source element to a result element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Generic.IEnumerable&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, class System.Collections.Generic.IEnumerable`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As IEnumerable(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Collections.Immutable.ImmutableArray&lt;'Base&gt; * seq&lt;#'Base&gt; * System.Collections.Generic.IEqualityComparer&lt;'Base&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.SequenceEqual (immutableArray, items, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived"><span data-ttu-id="b51e0-241">Type d’élément dans le tableau de comparaison.</span><span class="sxs-lookup"><span data-stu-id="b51e0-241">The type of element in the compared array.</span></span></typeparam>
        <typeparam name="TBase"><span data-ttu-id="b51e0-242">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-242">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-243">Tableau à utiliser pour la comparaison.</span><span class="sxs-lookup"><span data-stu-id="b51e0-243">The array to use for comparison.</span></span></param>
        <param name="items"><span data-ttu-id="b51e0-244">Éléments à utiliser pour la comparaison.</span><span class="sxs-lookup"><span data-stu-id="b51e0-244">The items to use for comparison.</span></span></param>
        <param name="comparer"><span data-ttu-id="b51e0-245">Comparateur à utiliser pour vérifier l’égalité.</span><span class="sxs-lookup"><span data-stu-id="b51e0-245">The comparer to use to check for equality.</span></span></param>
        <summary><span data-ttu-id="b51e0-246">Détermine si deux séquences sont égales selon un comparateur d’égalité.</span><span class="sxs-lookup"><span data-stu-id="b51e0-246">Determines whether two sequences are equal according to an equality comparer.</span></span></summary>
        <returns><span data-ttu-id="b51e0-247"><see langword="true" /> pour indiquer que les séquences sont égales ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b51e0-247"><see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Collections.Immutable.ImmutableArray&lt;'Base&gt; * System.Collections.Immutable.ImmutableArray&lt;#'Base&gt; * System.Collections.Generic.IEqualityComparer&lt;'Base&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.SequenceEqual (immutableArray, items, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived"><span data-ttu-id="b51e0-248">Type d’élément dans le tableau de comparaison.</span><span class="sxs-lookup"><span data-stu-id="b51e0-248">The type of element in the compared array.</span></span></typeparam>
        <typeparam name="TBase"><span data-ttu-id="b51e0-249">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-249">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-250">Tableau à utiliser pour la comparaison.</span><span class="sxs-lookup"><span data-stu-id="b51e0-250">The array to use for comparison.</span></span></param>
        <param name="items"><span data-ttu-id="b51e0-251">Éléments à utiliser pour la comparaison.</span><span class="sxs-lookup"><span data-stu-id="b51e0-251">The items to use for comparison.</span></span></param>
        <param name="comparer"><span data-ttu-id="b51e0-252">Comparateur à utiliser pour vérifier l’égalité.</span><span class="sxs-lookup"><span data-stu-id="b51e0-252">The comparer to use to check for equality.</span></span></param>
        <summary><span data-ttu-id="b51e0-253">Détermine si deux séquences sont égales selon un comparateur d’égalité.</span><span class="sxs-lookup"><span data-stu-id="b51e0-253">Determines whether two sequences are equal according to an equality comparer.</span></span></summary>
        <returns><span data-ttu-id="b51e0-254"><see langword="true" /> pour indiquer que les séquences sont égales ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b51e0-254"><see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase,TBase,bool&gt; predicate) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Func`3&lt;!!TBase, !!TBase, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), predicate As Func(Of TBase, TBase, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDerived, typename TBase&gt;&#xA; where TDerived : TBase[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Collections::Immutable::ImmutableArray&lt;TBase&gt; immutableArray, System::Collections::Immutable::ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase, TBase, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Collections.Immutable.ImmutableArray&lt;'Base&gt; * System.Collections.Immutable.ImmutableArray&lt;#'Base&gt; * Func&lt;'Base, 'Base, bool&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.SequenceEqual (immutableArray, items, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="predicate" Type="System.Func&lt;TBase,TBase,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived"><span data-ttu-id="b51e0-255">Type d’élément dans le tableau de comparaison.</span><span class="sxs-lookup"><span data-stu-id="b51e0-255">The type of element in the compared array.</span></span></typeparam>
        <typeparam name="TBase"><span data-ttu-id="b51e0-256">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-256">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-257">Tableau à utiliser pour la comparaison.</span><span class="sxs-lookup"><span data-stu-id="b51e0-257">The array to use for comparison.</span></span></param>
        <param name="items"><span data-ttu-id="b51e0-258">Éléments à utiliser pour la comparaison.</span><span class="sxs-lookup"><span data-stu-id="b51e0-258">The items to use for comparison.</span></span></param>
        <param name="predicate"><span data-ttu-id="b51e0-259">Comparateur à utiliser pour vérifier l’égalité.</span><span class="sxs-lookup"><span data-stu-id="b51e0-259">The comparer to use to check for equality.</span></span></param>
        <summary><span data-ttu-id="b51e0-260">Détermine si deux séquences sont égales selon un comparateur d’égalité.</span><span class="sxs-lookup"><span data-stu-id="b51e0-260">Determines whether two sequences are equal according to an equality comparer.</span></span></summary>
        <returns><span data-ttu-id="b51e0-261"><see langword="true" /> pour indiquer que les séquences sont égales ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b51e0-261"><see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member Single : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Single immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-262">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-262">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-263">Tableau à partir duquel récupérer l’élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-263">The array to retrieve the element from.</span></span></param>
        <summary><span data-ttu-id="b51e0-264">Retourne l’élément unique d’une séquence ou lève une exception si cette séquence ne contient pas un seul élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-264">Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</span></span></summary>
        <returns><span data-ttu-id="b51e0-265">Élément dans la séquence.</span><span class="sxs-lookup"><span data-stu-id="b51e0-265">The element in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Single : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Single (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-266">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-266">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray">To be added.</param>
        <param name="predicate">To be added.</param>
        <summary><span data-ttu-id="b51e0-267">Retourne le seul élément d’une séquence qui satisfait à une condition spécifique ou lève une exception si cette séquence contient plusieurs éléments respectant cette condition.</span><span class="sxs-lookup"><span data-stu-id="b51e0-267">Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span></span></summary>
        <returns><span data-ttu-id="b51e0-268">retourne <see cref="T:System.Boolean" /> ;</span><span class="sxs-lookup"><span data-stu-id="b51e0-268">Returns <see cref="T:System.Boolean" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.SingleOrDefault immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-269">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-269">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-270">Tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-270">The array.</span></span></param>
        <summary><span data-ttu-id="b51e0-271">Retourne l’élément unique d’un tableau ou une valeur par défaut. Cette méthode lève une exception si cette séquence contient plusieurs éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-271">Returns the only element of the array, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span></span></summary>
        <returns><span data-ttu-id="b51e0-272">Élément dans le tableau ou la valeur par défaut si le tableau est vide.</span><span class="sxs-lookup"><span data-stu-id="b51e0-272">The element in the array, or the default value if the array is empty.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b51e0-273"><paramref name="source" /> contient plusieurs éléments.</span><span class="sxs-lookup"><span data-stu-id="b51e0-273"><paramref name="source" /> contains more than one element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.SingleOrDefault (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-274">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-274">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-275">Tableau à partir duquel récupérer l’élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-275">The array to get the element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="b51e0-276">Condition que l’élément doit satisfaire.</span><span class="sxs-lookup"><span data-stu-id="b51e0-276">The condition the element must satisfy.</span></span></param>
        <summary><span data-ttu-id="b51e0-277">Retourne l’élément unique d’une séquence ou une valeur par défaut si cette séquence ne contient pas d’élément respectant cette condition. Cette méthode lève une exception si cette séquence contient plusieurs éléments satisfaisant à cette condition.</span><span class="sxs-lookup"><span data-stu-id="b51e0-277">Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span></span></summary>
        <returns><span data-ttu-id="b51e0-278">Élément s’il satisfait la condition spécifiée ; sinon, l’élément par défaut.</span><span class="sxs-lookup"><span data-stu-id="b51e0-278">The element if it satisfies the specified condition; otherwise the default element.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b51e0-279">Plusieurs éléments satisfont à la condition dans <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="b51e0-279">More than one element satisfies the condition in <paramref name="predicate" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] ToArray&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] ToArray&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToArray(Of T) (immutableArray As ImmutableArray(Of T)) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;T&gt; ^ ToArray(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member ToArray : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T[]" Usage="System.Linq.ImmutableArrayExtensions.ToArray immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-280">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-280">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray">To be added.</param>
        <summary><span data-ttu-id="b51e0-281">Copie le contenu de ce tableau dans un tableau mutable.</span><span class="sxs-lookup"><span data-stu-id="b51e0-281">Copies the contents of this array to a mutable array.</span></span></summary>
        <returns><span data-ttu-id="b51e0-282">Tableau nouvellement instancié.</span><span class="sxs-lookup"><span data-stu-id="b51e0-282">The newly instantiated array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'T&gt;" Usage="System.Linq.ImmutableArrayExtensions.ToDictionary (immutableArray, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="b51e0-283">Type de la clé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-283">The type of the key.</span></span></typeparam>
        <typeparam name="T"><span data-ttu-id="b51e0-284">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-284">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-285">Tableau à partir duquel créer un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b51e0-285">The array to create a dictionary from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="b51e0-286">Sélecteur de clé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-286">The key selector.</span></span></param>
        <summary><span data-ttu-id="b51e0-287">Crée un dictionnaire basé sur le contenu de ce tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-287">Creates a dictionary based on the contents of this array.</span></span></summary>
        <returns><span data-ttu-id="b51e0-288">Dictionnaire qui vient d’être initialisé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-288">The newly initialized dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'T&gt;" Usage="System.Linq.ImmutableArrayExtensions.ToDictionary (immutableArray, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="b51e0-289">Type de la clé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-289">The type of the key.</span></span></typeparam>
        <typeparam name="T"><span data-ttu-id="b51e0-290">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-290">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-291">Tableau à partir duquel créer un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b51e0-291">The array to create a dictionary from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="b51e0-292">Sélecteur de clé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-292">The key selector.</span></span></param>
        <param name="comparer"><span data-ttu-id="b51e0-293">Comparateur permettant d’initialiser le dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b51e0-293">The comparer to initialize the dictionary with.</span></span></param>
        <summary><span data-ttu-id="b51e0-294">Crée un dictionnaire basé sur le contenu de ce tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-294">Creates a dictionary based on the contents of this array.</span></span></summary>
        <returns><span data-ttu-id="b51e0-295">Dictionnaire qui vient d’être initialisé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-295">The newly initialized dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Key&gt; * Func&lt;'T, 'Element&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Element&gt;" Usage="System.Linq.ImmutableArrayExtensions.ToDictionary (immutableArray, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="b51e0-296">Type de la clé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-296">The type of the key.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="b51e0-297">Type de l'élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-297">The type of the element.</span></span></typeparam>
        <typeparam name="T"><span data-ttu-id="b51e0-298">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-298">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-299">Tableau à partir duquel créer un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b51e0-299">The array to create a dictionary from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="b51e0-300">Sélecteur de clé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-300">The key selector.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="b51e0-301">Sélecteur d’élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-301">The element selector.</span></span></param>
        <summary><span data-ttu-id="b51e0-302">Crée un dictionnaire basé sur le contenu de ce tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-302">Creates a dictionary based on the contents of this array.</span></span></summary>
        <returns><span data-ttu-id="b51e0-303">Dictionnaire qui vient d’être initialisé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-303">The newly initialized dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Key&gt; * Func&lt;'T, 'Element&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Element&gt;" Usage="System.Linq.ImmutableArrayExtensions.ToDictionary (immutableArray, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="b51e0-304">Type de la clé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-304">The type of the key.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="b51e0-305">Type de l'élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-305">The type of the element.</span></span></typeparam>
        <typeparam name="T"><span data-ttu-id="b51e0-306">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-306">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-307">Tableau à partir duquel créer un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b51e0-307">The array to create a dictionary from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="b51e0-308">Sélecteur de clé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-308">The key selector.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="b51e0-309">Sélecteur d’élément.</span><span class="sxs-lookup"><span data-stu-id="b51e0-309">The element selector.</span></span></param>
        <param name="comparer"><span data-ttu-id="b51e0-310">Comparateur permettant d’initialiser le dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b51e0-310">The comparer to initialize the dictionary with.</span></span></param>
        <summary><span data-ttu-id="b51e0-311">Crée un dictionnaire basé sur le contenu de ce tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-311">Creates a dictionary based on the contents of this array.</span></span></summary>
        <returns><span data-ttu-id="b51e0-312">Dictionnaire qui vient d’être initialisé.</span><span class="sxs-lookup"><span data-stu-id="b51e0-312">The newly initialized dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; Where&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; Where&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ Where(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; seq&lt;'T&gt;" Usage="System.Linq.ImmutableArrayExtensions.Where (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b51e0-313">Type d’élément contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b51e0-313">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="b51e0-314">Tableau à filtrer.</span><span class="sxs-lookup"><span data-stu-id="b51e0-314">The array to filter.</span></span></param>
        <param name="predicate"><span data-ttu-id="b51e0-315">Condition à utiliser pour filtrer le contenu du tableau.</span><span class="sxs-lookup"><span data-stu-id="b51e0-315">The condition to use for filtering the array content.</span></span></param>
        <summary><span data-ttu-id="b51e0-316">Filtre une séquence de valeurs selon un prédicat.</span><span class="sxs-lookup"><span data-stu-id="b51e0-316">Filters a sequence of values based on a predicate.</span></span></summary>
        <returns><span data-ttu-id="b51e0-317">Retourne <see cref="T:System.Collections.Generic.IEnumerable`1" /> qui contient les éléments qui répondent à la condition.</span><span class="sxs-lookup"><span data-stu-id="b51e0-317">Returns <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains elements that meet the condition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>