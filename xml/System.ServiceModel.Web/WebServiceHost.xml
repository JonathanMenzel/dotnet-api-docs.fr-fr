<Type Name="WebServiceHost" FullName="System.ServiceModel.Web.WebServiceHost">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2bf98430917ed2eba88826a9016f24b4dae6c1cc" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53485537" /></Metadata><TypeSignature Language="C#" Value="public class WebServiceHost : System.ServiceModel.ServiceHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebServiceHost extends System.ServiceModel.ServiceHost" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Web.WebServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class WebServiceHost&#xA;Inherits ServiceHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebServiceHost : System::ServiceModel::ServiceHost" />
  <TypeSignature Language="F#" Value="type WebServiceHost = class&#xA;    inherit ServiceHost" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHost</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f6a7a-101">Classe dérivée <see cref="T:System.ServiceModel.ServiceHost" /> qui complète le modèle de programmation REST Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="f6a7a-101">A <see cref="T:System.ServiceModel.ServiceHost" /> derived class that compliments the Windows Communication Foundation (WCF) REST programming model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6a7a-102">Si <xref:System.ServiceModel.Web.WebServiceHost> ne trouve aucun point de terminaison dans la description du service, il crée automatiquement un point de terminaison par défaut à l'adresse de base du service pour les adresses de base HTTP et HTTPS.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-102">If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it automatically creates a default endpoint at the service's base address for HTTP and HTTPS base addresses.</span></span> <span data-ttu-id="f6a7a-103">Il ne crée pas automatiquement un point de terminaison si l'utilisateur en a configuré un, de façon explicite, au niveau de l'adresse de base.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-103">It does not create an endpoint automatically if the user has configured an endpoint explicitly at the base address.</span></span> <span data-ttu-id="f6a7a-104"><xref:System.ServiceModel.Web.WebServiceHost> configure automatiquement la liaison du point de terminaison afin qu'il puisse profiter des paramètres de sécurité IIS (Internet Information Services) en cas d'utilisation dans un répertoire virtuel sécurisé.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-104"><xref:System.ServiceModel.Web.WebServiceHost> automatically configures the endpoint's binding to work with the associated Internet Information Services (IIS) security settings when used in a secure virtual directory.</span></span>  
  
 <span data-ttu-id="f6a7a-105">Lors de la création d'un point de terminaison HTTP par défaut, <xref:System.ServiceModel.Web.WebServiceHost> désactive également la page d'aide HTTP et la fonctionnalité WSDL (Web Services Description Language) GET afin que le point de terminaison des métadonnées n'interfère pas avec le point de terminaison HTTP par défaut. </span><span class="sxs-lookup"><span data-stu-id="f6a7a-105">When creating a default HTTP endpoint, the <xref:System.ServiceModel.Web.WebServiceHost> also disables the HTTP Help page and the Web Services Description Language (WSDL) GET functionality so the metadata endpoint does not interfere with the default HTTP endpoint.</span></span>  
  
 <span data-ttu-id="f6a7a-106">De plus, la classe <xref:System.ServiceModel.Web.WebServiceHost> ajoute <xref:System.ServiceModel.Description.WebHttpBehavior> à tous les points de terminaison qui n'ont pas déjà le comportement et qui possèdent un <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-106">In addition, the <xref:System.ServiceModel.Web.WebServiceHost> class adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to all endpoints that do not already have the behavior and that have a <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>.</span></span> <span data-ttu-id="f6a7a-107">Si toutes les opérations sur le service ont des corps de requête HTTP vides ou gèrent ceux-ci comme un flux de données, <xref:System.ServiceModel.Web.WebServiceHost> configure alors automatiquement le mappeur de type de contenu approprié pour la liaison.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-107">If all the operations on the service have either empty HTTP request bodies or deal with the HTTP request body as a stream, then the <xref:System.ServiceModel.Web.WebServiceHost> automatically configures the appropriate content type mapper for the binding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6a7a-108">L’exemple suivant montre comment utiliser le <xref:System.ServiceModel.Web.WebServiceHost> classe pour héberger un service qui rend utiliser du modèle de programmation WCF REST.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-108">The following example shows how to use the <xref:System.ServiceModel.Web.WebServiceHost> class to host a service that makes use of the WCF REST programming model.</span></span>  
  
 [!code-csharp[WebServiceHost#0](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/program.cs#0)]
 [!code-vb[WebServiceHost#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/program.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6a7a-109">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Web.WebServiceHost" />.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6a7a-110">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Web.WebServiceHost" />.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost (object singletonInstance, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object singletonInstance, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (singletonInstance As Object, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost(System::Object ^ singletonInstance, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Web.WebServiceHost : obj * Uri[] -&gt; System.ServiceModel.Web.WebServiceHost" Usage="new System.ServiceModel.Web.WebServiceHost (singletonInstance, baseAddresses)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="singletonInstance"><span data-ttu-id="f6a7a-111">Instance de service à utiliser comme instance de singleton.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-111">A service instance to be used as the singleton instance.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="f6a7a-112">Adresse de base du service.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-112">The base address of the service.</span></span></param>
        <summary><span data-ttu-id="f6a7a-113">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Web.WebServiceHost" /> avec l'instance de serveur singleton et l'adresse de base spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-113">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class with the specified singleton server instance and base address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6a7a-114">Le paramètre `baseAddresses` peut se composer d'une ou plusieurs adresses de base.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-114">The `baseAddresses` parameter can consist of one or more base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6a7a-115">L'exemple suivant montre comment appeler ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-115">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[WebServiceHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/snippets.cs#1)]
 [!code-vb[WebServiceHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost (Type serviceType, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost(Type ^ serviceType, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Web.WebServiceHost : Type * Uri[] -&gt; System.ServiceModel.Web.WebServiceHost" Usage="new System.ServiceModel.Web.WebServiceHost (serviceType, baseAddresses)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="f6a7a-116">Type de service.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-116">The service type.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="f6a7a-117">Adresse de base du service.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-117">The base address of the service.</span></span></param>
        <summary><span data-ttu-id="f6a7a-118">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Web.WebServiceHost" /> avec le type de service et l'adresse de base spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class with the specified service type and base address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6a7a-119">Le paramètre `baseAddresses` peut se composer d'une ou plusieurs adresses de base.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-119">The `baseAddresses` parameter can consist of one or more base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6a7a-120">L'exemple suivant montre comment appeler ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-120">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[WebServiceHost#2](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/snippets.cs#2)]
 [!code-vb[WebServiceHost#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected override void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.OnOpening" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpening ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpening();" />
      <MemberSignature Language="F#" Value="override this.OnOpening : unit -&gt; unit" Usage="webServiceHost.OnOpening " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6a7a-121">Appelé lors de l'ouverture de l'instance de <see cref="T:System.ServiceModel.Web.WebServiceHost" />.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-121">Called when the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> instance opens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6a7a-122">Voici ce qui se produit lorsque la méthode est appelée :</span><span class="sxs-lookup"><span data-stu-id="f6a7a-122">The following occurs when this method is called:</span></span>  
  
1.  <span data-ttu-id="f6a7a-123">Si <xref:System.ServiceModel.Web.WebServiceHost> ne trouve aucun point de terminaison dans la description du service, il crée un point de terminaison par défaut au niveau de l'adresse de base du service.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-123">If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it creates a default endpoint at the service's base address.</span></span> <span data-ttu-id="f6a7a-124"><xref:System.ServiceModel.Web.WebServiceHost> désactive automatiquement la page d'aide HTTP et la fonctionnalité WSDL GET afin que le point de terminaison de métadonnées n'interfère pas avec le point de terminaison HTTP par défaut.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-124"><xref:System.ServiceModel.Web.WebServiceHost> automatically disables the HTTP Help page and the WSDL GET functionality so that the metadata endpoint does not interfere with the default HTTP endpoint.</span></span>  
  
2.  <span data-ttu-id="f6a7a-125"><xref:System.ServiceModel.Web.WebServiceHost> vérifie tous les points de terminaison qui utilisent <xref:System.ServiceModel.WebHttpBinding> pour déterminer s'ils ont le <xref:System.ServiceModel.Description.WebHttpBehavior> requis.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-125"><xref:System.ServiceModel.Web.WebServiceHost> checks all endpoints that use the <xref:System.ServiceModel.WebHttpBinding> to see if they have the required <xref:System.ServiceModel.Description.WebHttpBehavior>.</span></span> <span data-ttu-id="f6a7a-126">S'il n'est pas présent, <xref:System.ServiceModel.Web.WebServiceHost> ajoute le <xref:System.ServiceModel.Description.WebHttpBehavior> pour le point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-126">If not present, <xref:System.ServiceModel.Web.WebServiceHost> adds the <xref:System.ServiceModel.Description.WebHttpBehavior> for the endpoint.</span></span>  
  
3.  <span data-ttu-id="f6a7a-127"><xref:System.ServiceModel.Web.WebServiceHost> configure la liaison du point de terminaison pour utiliser les paramètres de sécurité IIS associés lorsqu'ils sont utilisés dans un répertoire virtuel sécurisé.</span><span class="sxs-lookup"><span data-stu-id="f6a7a-127"><xref:System.ServiceModel.Web.WebServiceHost> configures the endpoint's binding to work with the associated IIS security settings when used in a secure virtual directory.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>