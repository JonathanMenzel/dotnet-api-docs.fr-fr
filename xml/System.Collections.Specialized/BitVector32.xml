<Type Name="BitVector32" FullName="System.Collections.Specialized.BitVector32">
  <Metadata><Meta Name="ms.openlocfilehash" Value="baed288c19241aa5dfda22b880ebe034a1938d15" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39951196" /></Metadata><TypeSignature Language="C#" Value="public struct BitVector32" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit BitVector32 extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.BitVector32" />
  <TypeSignature Language="VB.NET" Value="Public Structure BitVector32" />
  <TypeSignature Language="C++ CLI" Value="public value class BitVector32" />
  <TypeSignature Language="F#" Value="type BitVector32 = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une structure simple qui stocke des valeurs booléennes et des petits entiers dans 32 bits de mémoire.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.Specialized.BitVector32> est plus efficace que <xref:System.Collections.BitArray> pour les valeurs booléennes et des petits entiers utilisés en interne. Un <xref:System.Collections.BitArray> peut croître indéfiniment en fonction des besoins, mais il a la surcharge de mémoire et de performances qui nécessite une instance de classe. En revanche, un <xref:System.Collections.Specialized.BitVector32> utilise 32 bits uniquement.  
  
 Un <xref:System.Collections.Specialized.BitVector32> structure peut être définie afin de contenir des sections pour les petits entiers ou des indicateurs de bits pour les types booléens, mais pas les deux. Un <xref:System.Collections.Specialized.BitVector32.Section> est une fenêtre dans le <xref:System.Collections.Specialized.BitVector32> et se compose du plus petit nombre de bits consécutifs qui peut contenir la valeur maximale spécifiée dans <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>. Par exemple, une section d’une valeur maximale de 1 est composée d’un seul bit, tandis qu’une section d’une valeur maximale de 5 est composée de trois bits. Vous pouvez créer un <xref:System.Collections.Specialized.BitVector32.Section> avec une valeur maximale de 1 pour l’utiliser en tant que valeur booléenne, vous permettant ainsi de stocker des entiers et des valeurs booléennes dans le même <xref:System.Collections.Specialized.BitVector32>.  
  
 Certains membres peuvent être utilisés pour un <xref:System.Collections.Specialized.BitVector32> qui configuré sous forme de sections, tandis que d’autres membres peuvent être utilisés pour l’une qui est configuré en tant qu’indicateurs binaires. Par exemple, le <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> propriété est l’indexeur pour un <xref:System.Collections.Specialized.BitVector32> qui est configuré sous forme de sections et le <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> propriété est l’indexeur pour un <xref:System.Collections.Specialized.BitVector32> configuré en tant qu’indicateurs binaires. <xref:System.Collections.Specialized.BitVector32.CreateMask%2A> Crée une série de masques qui peut être utilisé pour accéder aux bits individuels dans un <xref:System.Collections.Specialized.BitVector32> configuré en tant qu’indicateurs binaires.  
  
 À l’aide d’un masque sur une <xref:System.Collections.Specialized.BitVector32> qui est configuré comme sections peut entraîner des résultats inattendus.  
  
   
  
## Examples  
 Le code suivant exemple utilise un <xref:System.Collections.Specialized.BitVector32> en tant que collection d’indicateurs binaires.  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_BitFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/CPP/bitvector32_bitflags.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_BitFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/CS/bitvector32_bitflags.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_BitFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/VB/bitvector32_bitflags.vb#1)]  
  
 Le code suivant exemple utilise un <xref:System.Collections.Specialized.BitVector32> comme une collection de sections.  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.BitArray" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Collections.Specialized.BitVector32" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitVector32 (System.Collections.Specialized.BitVector32 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Collections.Specialized.BitVector32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As BitVector32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitVector32(System::Collections::Specialized::BitVector32 value);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.BitVector32 : System.Collections.Specialized.BitVector32 -&gt; System.Collections.Specialized.BitVector32" Usage="new System.Collections.Specialized.BitVector32 value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32" />
      </Parameters>
      <Docs>
        <param name="value">Structure <see cref="T:System.Collections.Specialized.BitVector32" /> qui contient les données à copier.</param>
        <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Collections.Specialized.BitVector32" /> contenant les données représentées dans une structure <see cref="T:System.Collections.Specialized.BitVector32" /> existante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est une opération o (1).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitVector32 (int data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitVector32(int data);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.BitVector32 : int -&gt; System.Collections.Specialized.BitVector32" Usage="new System.Collections.Specialized.BitVector32 data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">Entier représentant les données de la nouvelle structure <see cref="T:System.Collections.Specialized.BitVector32" />.</param>
        <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Collections.Specialized.BitVector32" /> contenant les données représentées dans un entier.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est une opération o (1).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMask">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée une série de masques qui peuvent être utilisés pour récupérer des bits dans un <see cref="T:System.Collections.Specialized.BitVector32" /> configuré en tant qu'indicateurs binaires.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateMask">
      <MemberSignature Language="C#" Value="public static int CreateMask ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CreateMask() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateMask" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMask () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CreateMask();" />
      <MemberSignature Language="F#" Value="static member CreateMask : unit -&gt; int" Usage="System.Collections.Specialized.BitVector32.CreateMask " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée le premier masque d'une série de masques qui peuvent être utilisés pour récupérer des bits dans un <see cref="T:System.Collections.Specialized.BitVector32" /> configuré en tant qu'indicateurs binaires.</summary>
        <returns>Masque qui isole le premier indicateur binaire dans <see cref="T:System.Collections.Specialized.BitVector32" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez `CreateMask()` pour créer le premier masque d’une série et `CreateMask(int)` pour tous les masques suivants.  
  
 Plusieurs masques peuvent être créés pour faire référence au même indicateur binaire.  
  
 Le masque résultant n’isole qu’un indicateur binaire dans le <xref:System.Collections.Specialized.BitVector32>. Vous pouvez combiner les masques à l’aide de l’opération OR au niveau du bit pour créer un masque qui isole plusieurs indicateurs binaires dans le <xref:System.Collections.Specialized.BitVector32>.  
  
 À l’aide d’un masque sur une <xref:System.Collections.Specialized.BitVector32> qui est configuré comme sections peut entraîner des résultats inattendus.  
  
 Cette méthode est une opération o (1).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer et utiliser des masques.  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CPP/bitvector32_createmasks.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CS/bitvector32_createmasks.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/VB/bitvector32_createmasks.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMask">
      <MemberSignature Language="C#" Value="public static int CreateMask (int previous);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CreateMask(int32 previous) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateMask(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMask (previous As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CreateMask(int previous);" />
      <MemberSignature Language="F#" Value="static member CreateMask : int -&gt; int" Usage="System.Collections.Specialized.BitVector32.CreateMask previous" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previous" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="previous">Masque qui spécifie l'indicateur binaire précédent.</param>
        <summary>Crée un masque supplémentaire à la suite du masque spécifié d'une série de masques qui peuvent être utilisés pour récupérer des bits dans un <see cref="T:System.Collections.Specialized.BitVector32" /> configuré en tant qu'indicateurs binaires.</summary>
        <returns>Masque qui isole l'indicateur binaire suivant celui désigné par <paramref name="previous" /> dans <see cref="T:System.Collections.Specialized.BitVector32" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez `CreateMask()` pour créer le premier masque d’une série et `CreateMask(int)` pour tous les masques suivants.  
  
 Plusieurs masques peuvent être créés pour faire référence au même indicateur binaire.  
  
 Le masque résultant n’isole qu’un indicateur binaire dans le <xref:System.Collections.Specialized.BitVector32>. Vous pouvez combiner les masques à l’aide de l’opération OR au niveau du bit pour créer un masque qui isole plusieurs indicateurs binaires dans le <xref:System.Collections.Specialized.BitVector32>.  
  
 À l’aide d’un masque sur une <xref:System.Collections.Specialized.BitVector32> qui est configuré comme sections peut entraîner des résultats inattendus.  
  
 Cette méthode est une opération o (1).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer et utiliser des masques.  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CPP/bitvector32_createmasks.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CS/bitvector32_createmasks.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/VB/bitvector32_createmasks.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="previous" /> indique le dernier indicateur binaire de <see cref="T:System.Collections.Specialized.BitVector32" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSection">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée une série de sections qui contiennent de petits entiers.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSection">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Specialized.BitVector32/Section CreateSection(int16 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSection (maxValue As Short) As BitVector32.Section" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::BitVector32::Section CreateSection(short maxValue);" />
      <MemberSignature Language="F#" Value="static member CreateSection : int16 -&gt; System.Collections.Specialized.BitVector32.Section" Usage="System.Collections.Specialized.BitVector32.CreateSection maxValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.BitVector32+Section</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="maxValue">Entier signé 16 bits qui spécifie la valeur maximale du nouveau <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</param>
        <summary>Crée le premier <see cref="T:System.Collections.Specialized.BitVector32.Section" /> d'une série de sections qui contiennent de petits entiers.</summary>
        <returns><see cref="T:System.Collections.Specialized.BitVector32.Section" /> qui peut contenir un nombre compris entre zéro et <paramref name="maxValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Collections.Specialized.BitVector32.Section> est une fenêtre dans le <xref:System.Collections.Specialized.BitVector32> et se compose du plus petit nombre de bits consécutifs qui peut contenir la valeur maximale spécifiée dans <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>. Par exemple, une section d’une valeur maximale de 1 est composée d’un seul bit, tandis qu’une section d’une valeur maximale de 5 est composée de trois bits. Vous pouvez créer un <xref:System.Collections.Specialized.BitVector32.Section> avec une valeur maximale de 1 pour l’utiliser en tant que valeur booléenne, vous permettant ainsi de stocker des entiers et des valeurs booléennes dans le même <xref:System.Collections.Specialized.BitVector32>.  
  
 Si des sections existent déjà dans le <xref:System.Collections.Specialized.BitVector32>, elles sont toujours accessibles ; Toutefois, qui se chevauchent de sections peuvent provoquer des résultats inattendus.  
  
 Cette méthode est une opération o (1).  
  
   
  
## Examples  
 Le code suivant exemple utilise un <xref:System.Collections.Specialized.BitVector32> comme une collection de sections.  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="maxValue" /> est inférieur à 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSection">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Specialized.BitVector32/Section CreateSection(int16 maxValue, valuetype System.Collections.Specialized.BitVector32/Section previous) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSection (maxValue As Short, previous As BitVector32.Section) As BitVector32.Section" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::BitVector32::Section CreateSection(short maxValue, System::Collections::Specialized::BitVector32::Section previous);" />
      <MemberSignature Language="F#" Value="static member CreateSection : int16 * System.Collections.Specialized.BitVector32.Section -&gt; System.Collections.Specialized.BitVector32.Section" Usage="System.Collections.Specialized.BitVector32.CreateSection (maxValue, previous)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.BitVector32+Section</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int16" />
        <Parameter Name="previous" Type="System.Collections.Specialized.BitVector32+Section" />
      </Parameters>
      <Docs>
        <param name="maxValue">Entier signé 16 bits qui spécifie la valeur maximale du nouveau <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</param>
        <param name="previous"><see cref="T:System.Collections.Specialized.BitVector32.Section" /> précédent dans <see cref="T:System.Collections.Specialized.BitVector32" />.</param>
        <summary>Crée un nouveau <see cref="T:System.Collections.Specialized.BitVector32.Section" /> à la suite du <see cref="T:System.Collections.Specialized.BitVector32.Section" /> spécifié dans une série de sections qui contiennent de petits entiers.</summary>
        <returns><see cref="T:System.Collections.Specialized.BitVector32.Section" /> qui peut contenir un nombre compris entre zéro et <paramref name="maxValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Collections.Specialized.BitVector32.Section> est une fenêtre dans le <xref:System.Collections.Specialized.BitVector32> et se compose du plus petit nombre de bits consécutifs qui peut contenir la valeur maximale spécifiée dans <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>. Par exemple, une section d’une valeur maximale de 1 est composée d’un seul bit, tandis qu’une section d’une valeur maximale de 5 est composée de trois bits. Vous pouvez créer un <xref:System.Collections.Specialized.BitVector32.Section> avec une valeur maximale de 1 pour l’utiliser en tant que valeur booléenne, vous permettant ainsi de stocker des entiers et des valeurs booléennes dans le même <xref:System.Collections.Specialized.BitVector32>.  
  
 Si des sections existent déjà après `previous` dans le <xref:System.Collections.Specialized.BitVector32>, elles sont toujours accessibles ; Toutefois, qui se chevauchent de sections peuvent provoquer des résultats inattendus.  
  
 Cette méthode est une opération o (1).  
  
   
  
## Examples  
 Le code suivant exemple utilise un <xref:System.Collections.Specialized.BitVector32> comme une collection de sections.  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="maxValue" /> est inférieur à 1.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="previous" /> inclut le bit final dans <see cref="T:System.Collections.Specialized.BitVector32" />.  
  
- ou - 
 <paramref name="maxValue" /> est supérieur à la valeur la plus élevée pouvant être représentée par le nombre de bits après <paramref name="previous" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public int Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Data" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Data { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : int" Usage="System.Collections.Specialized.BitVector32.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur de <see cref="T:System.Collections.Specialized.BitVector32" /> sous la forme d'un entier.</summary>
        <value>Valeur de <see cref="T:System.Collections.Specialized.BitVector32" /> sous la forme d'un entier.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour accéder à la valeur de chaque section ou indicateurs binaires, utilisez le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété.  
  
 La récupération de la valeur de cette propriété est une opération O(1).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bitVector32.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objet à comparer au <see cref="T:System.Collections.Specialized.BitVector32" /> actif.</param>
        <summary>Détermine si l'objet spécifié est égal à <see cref="T:System.Collections.Specialized.BitVector32" />.</summary>
        <returns><see langword="true" /> si l'objet spécifié est égal à <see cref="T:System.Collections.Specialized.BitVector32" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’objet `o` est considéré comme égal à la <xref:System.Collections.Specialized.BitVector32> si le type de `o` est compatible avec le <xref:System.Collections.Specialized.BitVector32> type et si la valeur de `o` est égal à la valeur de <xref:System.Collections.Specialized.BitVector32.Data%2A>.  
  
 Cette méthode est une opération o (1).  
  
   
  
## Examples  
 Le code suivant exemple compare un <xref:System.Collections.Specialized.BitVector32> avec un autre <xref:System.Collections.Specialized.BitVector32> et avec une <xref:System.Int32>.  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/CPP/bitvector32_equals.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/CS/bitvector32_equals.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/VB/bitvector32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bitVector32.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sert de fonction de hachage pour <see cref="T:System.Collections.Specialized.BitVector32" />.</summary>
        <returns>Code de hachage pour <see cref="T:System.Collections.Specialized.BitVector32" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le code de hachage d’un <xref:System.Collections.Specialized.BitVector32> repose sur la valeur de <xref:System.Collections.Specialized.BitVector32.Data%2A>. Deux instances de <xref:System.Collections.Specialized.BitVector32> avec la même valeur pour <xref:System.Collections.Specialized.BitVector32.Data%2A> génère également le même code de hachage.  
  
 Cette méthode est une opération o (1).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient ou définit la valeur de la section ou de l'indicateur binaire spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(valuetype System.Collections.Specialized.BitVector32/Section)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(section As BitVector32.Section) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[System::Collections::Specialized::BitVector32::Section] { int get(System::Collections::Specialized::BitVector32::Section section); void set(System::Collections::Specialized::BitVector32::Section section, int value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Collections.Specialized.BitVector32.Section) : int with get, set" Usage="System.Collections.Specialized.BitVector32.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="section" Type="System.Collections.Specialized.BitVector32+Section" />
      </Parameters>
      <Docs>
        <param name="section"><see cref="T:System.Collections.Specialized.BitVector32.Section" /> qui contient la valeur à obtenir ou à définir.</param>
        <summary>Obtient ou définit la valeur stockée dans le <see cref="T:System.Collections.Specialized.BitVector32.Section" /> spécifié.</summary>
        <value>Valeur stockée dans le <see cref="T:System.Collections.Specialized.BitVector32.Section" /> spécifié.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété [Section] est l’indexeur pour un <xref:System.Collections.Specialized.BitVector32> qui est configuré sous forme de sections et le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété [int] est l’indexeur pour un <xref:System.Collections.Specialized.BitVector32> configuré en tant qu’indicateurs binaires.  
  
 Un <xref:System.Collections.Specialized.BitVector32.Section> est une fenêtre dans le <xref:System.Collections.Specialized.BitVector32> et se compose du plus petit nombre de bits consécutifs qui peut contenir la valeur maximale spécifiée dans <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>. Par exemple, une section d’une valeur maximale de 1 est composée d’un seul bit, tandis qu’une section d’une valeur maximale de 5 est composée de trois bits. Vous pouvez créer un <xref:System.Collections.Specialized.BitVector32.Section> avec une valeur maximale de 1 pour l’utiliser en tant que valeur booléenne, vous permettant ainsi de stocker des entiers et des valeurs booléennes dans le même <xref:System.Collections.Specialized.BitVector32>.  
  
 Le langage c# utilise le mot clé pour définir les indexeurs au lieu d’implémenter le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété. Visual Basic implémente <xref:System.Collections.Specialized.BitVector32.Item%2A> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.  
  
 Récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est également une opération o (1).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
        <altmember cref="T:System.Collections.Specialized.BitVector32.Section" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public bool this[int bit] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(bit As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool default[int] { bool get(int bit); void set(int bit, bool value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : bool with get, set" Usage="System.Collections.Specialized.BitVector32.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bit">Masque qui indique le bit à obtenir ou à définir.</param>
        <summary>Obtient ou définit l'état de l'indicateur binaire déterminé par le masque spécifié.</summary>
        <value><see langword="true" /> si l'indicateur binaire spécifié est activé (1) ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété [Section] est l’indexeur pour un <xref:System.Collections.Specialized.BitVector32> qui est configuré sous forme de sections et le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété [int] est l’indexeur pour un <xref:System.Collections.Specialized.BitVector32> configuré en tant qu’indicateurs binaires.  
  
 À l’aide de cette propriété sur un <xref:System.Collections.Specialized.BitVector32> qui est configuré comme sections peut entraîner des résultats inattendus.  
  
 Le langage c# utilise le mot clé pour définir les indexeurs au lieu d’implémenter le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété. Visual Basic implémente <xref:System.Collections.Specialized.BitVector32.Item%2A> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.  
  
 Récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est également une opération o (1).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.BitVector32.CreateMask" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne une chaîne qui représente un <see cref="T:System.Collections.Specialized.BitVector32" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bitVector32.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une chaîne qui représente le <see cref="T:System.Collections.Specialized.BitVector32" /> actuel.</summary>
        <returns>Chaîne qui représente le <see cref="T:System.Collections.Specialized.BitVector32" /> actuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode se substitue à <xref:System.Object.ToString%2A?displayProperty=nameWithType>.  
  
 Cette méthode est une opération o (1).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (System.Collections.Specialized.BitVector32 value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Collections.Specialized.BitVector32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As BitVector32) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Collections::Specialized::BitVector32 value);" />
      <MemberSignature Language="F#" Value="static member ToString : System.Collections.Specialized.BitVector32 -&gt; string" Usage="System.Collections.Specialized.BitVector32.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Collections.Specialized.BitVector32" /> à représenter.</param>
        <summary>Retourne une chaîne qui représente le <see cref="T:System.Collections.Specialized.BitVector32" /> spécifié.</summary>
        <returns>Chaîne qui représente le <see cref="T:System.Collections.Specialized.BitVector32" /> spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est une opération o (1).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
  </Members>
</Type>