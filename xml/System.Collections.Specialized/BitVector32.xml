<Type Name="BitVector32" FullName="System.Collections.Specialized.BitVector32">
  <Metadata><Meta Name="ms.openlocfilehash" Value="baed288c19241aa5dfda22b880ebe034a1938d15" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39951196" /></Metadata><TypeSignature Language="C#" Value="public struct BitVector32" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit BitVector32 extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.BitVector32" />
  <TypeSignature Language="VB.NET" Value="Public Structure BitVector32" />
  <TypeSignature Language="C++ CLI" Value="public value class BitVector32" />
  <TypeSignature Language="F#" Value="type BitVector32 = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="24c5a-101">Fournit une structure simple qui stocke des valeurs booléennes et des petits entiers dans 32 bits de mémoire.</span><span class="sxs-lookup"><span data-stu-id="24c5a-101">Provides a simple structure that stores Boolean values and small integers in 32 bits of memory.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-102"><xref:System.Collections.Specialized.BitVector32> est plus efficace que <xref:System.Collections.BitArray> pour les valeurs booléennes et des petits entiers utilisés en interne.</span><span class="sxs-lookup"><span data-stu-id="24c5a-102"><xref:System.Collections.Specialized.BitVector32> is more efficient than <xref:System.Collections.BitArray> for Boolean values and small integers that are used internally.</span></span> <span data-ttu-id="24c5a-103">Un <xref:System.Collections.BitArray> peut croître indéfiniment en fonction des besoins, mais il a la surcharge de mémoire et de performances qui nécessite une instance de classe.</span><span class="sxs-lookup"><span data-stu-id="24c5a-103">A <xref:System.Collections.BitArray> can grow indefinitely as needed, but it has the memory and performance overhead that a class instance requires.</span></span> <span data-ttu-id="24c5a-104">En revanche, un <xref:System.Collections.Specialized.BitVector32> utilise 32 bits uniquement.</span><span class="sxs-lookup"><span data-stu-id="24c5a-104">In contrast, a <xref:System.Collections.Specialized.BitVector32> uses only 32 bits.</span></span>  
  
 <span data-ttu-id="24c5a-105">Un <xref:System.Collections.Specialized.BitVector32> structure peut être définie afin de contenir des sections pour les petits entiers ou des indicateurs de bits pour les types booléens, mais pas les deux.</span><span class="sxs-lookup"><span data-stu-id="24c5a-105">A <xref:System.Collections.Specialized.BitVector32> structure can be set up to contain either sections for small integers or bit flags for Booleans, but not both.</span></span> <span data-ttu-id="24c5a-106">Un <xref:System.Collections.Specialized.BitVector32.Section> est une fenêtre dans le <xref:System.Collections.Specialized.BitVector32> et se compose du plus petit nombre de bits consécutifs qui peut contenir la valeur maximale spécifiée dans <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-106">A <xref:System.Collections.Specialized.BitVector32.Section> is a window into the <xref:System.Collections.Specialized.BitVector32> and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span></span> <span data-ttu-id="24c5a-107">Par exemple, une section d’une valeur maximale de 1 est composée d’un seul bit, tandis qu’une section d’une valeur maximale de 5 est composée de trois bits.</span><span class="sxs-lookup"><span data-stu-id="24c5a-107">For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</span></span> <span data-ttu-id="24c5a-108">Vous pouvez créer un <xref:System.Collections.Specialized.BitVector32.Section> avec une valeur maximale de 1 pour l’utiliser en tant que valeur booléenne, vous permettant ainsi de stocker des entiers et des valeurs booléennes dans le même <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-108">You can create a <xref:System.Collections.Specialized.BitVector32.Section> with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="24c5a-109">Certains membres peuvent être utilisés pour un <xref:System.Collections.Specialized.BitVector32> qui configuré sous forme de sections, tandis que d’autres membres peuvent être utilisés pour l’une qui est configuré en tant qu’indicateurs binaires.</span><span class="sxs-lookup"><span data-stu-id="24c5a-109">Some members can be used for a <xref:System.Collections.Specialized.BitVector32> that is set up as sections, while other members can be used for one that is set up as bit flags.</span></span> <span data-ttu-id="24c5a-110">Par exemple, le <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> propriété est l’indexeur pour un <xref:System.Collections.Specialized.BitVector32> qui est configuré sous forme de sections et le <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> propriété est l’indexeur pour un <xref:System.Collections.Specialized.BitVector32> configuré en tant qu’indicateurs binaires.</span><span class="sxs-lookup"><span data-stu-id="24c5a-110">For example, the <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as sections, and the <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as bit flags.</span></span> <span data-ttu-id="24c5a-111"><xref:System.Collections.Specialized.BitVector32.CreateMask%2A> Crée une série de masques qui peut être utilisé pour accéder aux bits individuels dans un <xref:System.Collections.Specialized.BitVector32> configuré en tant qu’indicateurs binaires.</span><span class="sxs-lookup"><span data-stu-id="24c5a-111"><xref:System.Collections.Specialized.BitVector32.CreateMask%2A> creates a series of masks that can be used to access individual bits in a <xref:System.Collections.Specialized.BitVector32> that is set up as bit flags.</span></span>  
  
 <span data-ttu-id="24c5a-112">À l’aide d’un masque sur une <xref:System.Collections.Specialized.BitVector32> qui est configuré comme sections peut entraîner des résultats inattendus.</span><span class="sxs-lookup"><span data-stu-id="24c5a-112">Using a mask on a <xref:System.Collections.Specialized.BitVector32> that is set up as sections might cause unexpected results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c5a-113">Le code suivant exemple utilise un <xref:System.Collections.Specialized.BitVector32> en tant que collection d’indicateurs binaires.</span><span class="sxs-lookup"><span data-stu-id="24c5a-113">The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of bit flags.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_BitFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/CPP/bitvector32_bitflags.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_BitFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/CS/bitvector32_bitflags.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_BitFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/VB/bitvector32_bitflags.vb#1)]  
  
 <span data-ttu-id="24c5a-114">Le code suivant exemple utilise un <xref:System.Collections.Specialized.BitVector32> comme une collection de sections.</span><span class="sxs-lookup"><span data-stu-id="24c5a-114">The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.BitArray" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24c5a-115">Initialise une nouvelle instance de la structure <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-115">Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitVector32 (System.Collections.Specialized.BitVector32 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Collections.Specialized.BitVector32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As BitVector32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitVector32(System::Collections::Specialized::BitVector32 value);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.BitVector32 : System.Collections.Specialized.BitVector32 -&gt; System.Collections.Specialized.BitVector32" Usage="new System.Collections.Specialized.BitVector32 value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="24c5a-116">Structure <see cref="T:System.Collections.Specialized.BitVector32" /> qui contient les données à copier.</span><span class="sxs-lookup"><span data-stu-id="24c5a-116">A <see cref="T:System.Collections.Specialized.BitVector32" /> structure that contains the data to copy.</span></span></param>
        <summary><span data-ttu-id="24c5a-117">Initialise une nouvelle instance de la structure <see cref="T:System.Collections.Specialized.BitVector32" /> contenant les données représentées dans une structure <see cref="T:System.Collections.Specialized.BitVector32" /> existante.</span><span class="sxs-lookup"><span data-stu-id="24c5a-117">Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure containing the data represented in an existing <see cref="T:System.Collections.Specialized.BitVector32" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-118">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-118">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitVector32 (int data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitVector32(int data);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.BitVector32 : int -&gt; System.Collections.Specialized.BitVector32" Usage="new System.Collections.Specialized.BitVector32 data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24c5a-119">Entier représentant les données de la nouvelle structure <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-119">An integer representing the data of the new <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></param>
        <summary><span data-ttu-id="24c5a-120">Initialise une nouvelle instance de la structure <see cref="T:System.Collections.Specialized.BitVector32" /> contenant les données représentées dans un entier.</span><span class="sxs-lookup"><span data-stu-id="24c5a-120">Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure containing the data represented in an integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-121">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-121">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMask">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24c5a-122">Crée une série de masques qui peuvent être utilisés pour récupérer des bits dans un <see cref="T:System.Collections.Specialized.BitVector32" /> configuré en tant qu'indicateurs binaires.</span><span class="sxs-lookup"><span data-stu-id="24c5a-122">Creates a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateMask">
      <MemberSignature Language="C#" Value="public static int CreateMask ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CreateMask() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateMask" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMask () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CreateMask();" />
      <MemberSignature Language="F#" Value="static member CreateMask : unit -&gt; int" Usage="System.Collections.Specialized.BitVector32.CreateMask " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24c5a-123">Crée le premier masque d'une série de masques qui peuvent être utilisés pour récupérer des bits dans un <see cref="T:System.Collections.Specialized.BitVector32" /> configuré en tant qu'indicateurs binaires.</span><span class="sxs-lookup"><span data-stu-id="24c5a-123">Creates the first mask in a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</span></span></summary>
        <returns><span data-ttu-id="24c5a-124">Masque qui isole le premier indicateur binaire dans <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-124">A mask that isolates the first bit flag in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-125">Utilisez `CreateMask()` pour créer le premier masque d’une série et `CreateMask(int)` pour tous les masques suivants.</span><span class="sxs-lookup"><span data-stu-id="24c5a-125">Use `CreateMask()` to create the first mask in a series and `CreateMask(int)` for all subsequent masks.</span></span>  
  
 <span data-ttu-id="24c5a-126">Plusieurs masques peuvent être créés pour faire référence au même indicateur binaire.</span><span class="sxs-lookup"><span data-stu-id="24c5a-126">Multiple masks can be created to refer to the same bit flag.</span></span>  
  
 <span data-ttu-id="24c5a-127">Le masque résultant n’isole qu’un indicateur binaire dans le <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-127">The resulting mask isolates only one bit flag in the <xref:System.Collections.Specialized.BitVector32>.</span></span> <span data-ttu-id="24c5a-128">Vous pouvez combiner les masques à l’aide de l’opération OR au niveau du bit pour créer un masque qui isole plusieurs indicateurs binaires dans le <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-128">You can combine masks using the bitwise OR operation to create a mask that isolates multiple bit flags in the <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="24c5a-129">À l’aide d’un masque sur une <xref:System.Collections.Specialized.BitVector32> qui est configuré comme sections peut entraîner des résultats inattendus.</span><span class="sxs-lookup"><span data-stu-id="24c5a-129">Using a mask on a <xref:System.Collections.Specialized.BitVector32> that is set up as sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="24c5a-130">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-130">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c5a-131">L’exemple de code suivant montre comment créer et utiliser des masques.</span><span class="sxs-lookup"><span data-stu-id="24c5a-131">The following code example shows how to create and use masks.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CPP/bitvector32_createmasks.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CS/bitvector32_createmasks.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/VB/bitvector32_createmasks.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMask">
      <MemberSignature Language="C#" Value="public static int CreateMask (int previous);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CreateMask(int32 previous) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateMask(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMask (previous As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CreateMask(int previous);" />
      <MemberSignature Language="F#" Value="static member CreateMask : int -&gt; int" Usage="System.Collections.Specialized.BitVector32.CreateMask previous" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previous" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="previous"><span data-ttu-id="24c5a-132">Masque qui spécifie l'indicateur binaire précédent.</span><span class="sxs-lookup"><span data-stu-id="24c5a-132">The mask that indicates the previous bit flag.</span></span></param>
        <summary><span data-ttu-id="24c5a-133">Crée un masque supplémentaire à la suite du masque spécifié d'une série de masques qui peuvent être utilisés pour récupérer des bits dans un <see cref="T:System.Collections.Specialized.BitVector32" /> configuré en tant qu'indicateurs binaires.</span><span class="sxs-lookup"><span data-stu-id="24c5a-133">Creates an additional mask following the specified mask in a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</span></span></summary>
        <returns><span data-ttu-id="24c5a-134">Masque qui isole l'indicateur binaire suivant celui désigné par <paramref name="previous" /> dans <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-134">A mask that isolates the bit flag following the one that <paramref name="previous" /> points to in <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-135">Utilisez `CreateMask()` pour créer le premier masque d’une série et `CreateMask(int)` pour tous les masques suivants.</span><span class="sxs-lookup"><span data-stu-id="24c5a-135">Use `CreateMask()` to create the first mask in a series and `CreateMask(int)` for all subsequent masks.</span></span>  
  
 <span data-ttu-id="24c5a-136">Plusieurs masques peuvent être créés pour faire référence au même indicateur binaire.</span><span class="sxs-lookup"><span data-stu-id="24c5a-136">Multiple masks can be created to refer to the same bit flag.</span></span>  
  
 <span data-ttu-id="24c5a-137">Le masque résultant n’isole qu’un indicateur binaire dans le <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-137">The resulting mask isolates only one bit flag in the <xref:System.Collections.Specialized.BitVector32>.</span></span> <span data-ttu-id="24c5a-138">Vous pouvez combiner les masques à l’aide de l’opération OR au niveau du bit pour créer un masque qui isole plusieurs indicateurs binaires dans le <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-138">You can combine masks using the bitwise OR operation to create a mask that isolates multiple bit flags in the <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="24c5a-139">À l’aide d’un masque sur une <xref:System.Collections.Specialized.BitVector32> qui est configuré comme sections peut entraîner des résultats inattendus.</span><span class="sxs-lookup"><span data-stu-id="24c5a-139">Using a mask on a <xref:System.Collections.Specialized.BitVector32> that is set up as sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="24c5a-140">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-140">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c5a-141">L’exemple de code suivant montre comment créer et utiliser des masques.</span><span class="sxs-lookup"><span data-stu-id="24c5a-141">The following code example shows how to create and use masks.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CPP/bitvector32_createmasks.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CS/bitvector32_createmasks.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/VB/bitvector32_createmasks.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24c5a-142"><paramref name="previous" /> indique le dernier indicateur binaire de <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-142"><paramref name="previous" /> indicates the last bit flag in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSection">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24c5a-143">Crée une série de sections qui contiennent de petits entiers.</span><span class="sxs-lookup"><span data-stu-id="24c5a-143">Creates a series of sections that contain small integers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSection">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Specialized.BitVector32/Section CreateSection(int16 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSection (maxValue As Short) As BitVector32.Section" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::BitVector32::Section CreateSection(short maxValue);" />
      <MemberSignature Language="F#" Value="static member CreateSection : int16 -&gt; System.Collections.Specialized.BitVector32.Section" Usage="System.Collections.Specialized.BitVector32.CreateSection maxValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.BitVector32+Section</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="maxValue"><span data-ttu-id="24c5a-144">Entier signé 16 bits qui spécifie la valeur maximale du nouveau <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-144">A 16-bit signed integer that specifies the maximum value for the new <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span></span></param>
        <summary><span data-ttu-id="24c5a-145">Crée le premier <see cref="T:System.Collections.Specialized.BitVector32.Section" /> d'une série de sections qui contiennent de petits entiers.</span><span class="sxs-lookup"><span data-stu-id="24c5a-145">Creates the first <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in a series of sections that contain small integers.</span></span></summary>
        <returns><span data-ttu-id="24c5a-146"><see cref="T:System.Collections.Specialized.BitVector32.Section" /> qui peut contenir un nombre compris entre zéro et <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-146">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that can hold a number from zero to <paramref name="maxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-147">Un <xref:System.Collections.Specialized.BitVector32.Section> est une fenêtre dans le <xref:System.Collections.Specialized.BitVector32> et se compose du plus petit nombre de bits consécutifs qui peut contenir la valeur maximale spécifiée dans <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-147">A <xref:System.Collections.Specialized.BitVector32.Section> is a window into the <xref:System.Collections.Specialized.BitVector32> and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span></span> <span data-ttu-id="24c5a-148">Par exemple, une section d’une valeur maximale de 1 est composée d’un seul bit, tandis qu’une section d’une valeur maximale de 5 est composée de trois bits.</span><span class="sxs-lookup"><span data-stu-id="24c5a-148">For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</span></span> <span data-ttu-id="24c5a-149">Vous pouvez créer un <xref:System.Collections.Specialized.BitVector32.Section> avec une valeur maximale de 1 pour l’utiliser en tant que valeur booléenne, vous permettant ainsi de stocker des entiers et des valeurs booléennes dans le même <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-149">You can create a <xref:System.Collections.Specialized.BitVector32.Section> with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="24c5a-150">Si des sections existent déjà dans le <xref:System.Collections.Specialized.BitVector32>, elles sont toujours accessibles ; Toutefois, qui se chevauchent de sections peuvent provoquer des résultats inattendus.</span><span class="sxs-lookup"><span data-stu-id="24c5a-150">If sections already exist in the <xref:System.Collections.Specialized.BitVector32>, those sections are still accessible; however, overlapping sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="24c5a-151">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-151">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c5a-152">Le code suivant exemple utilise un <xref:System.Collections.Specialized.BitVector32> comme une collection de sections.</span><span class="sxs-lookup"><span data-stu-id="24c5a-152">The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24c5a-153"><paramref name="maxValue" /> est inférieur à 1.</span><span class="sxs-lookup"><span data-stu-id="24c5a-153"><paramref name="maxValue" /> is less than 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSection">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Specialized.BitVector32/Section CreateSection(int16 maxValue, valuetype System.Collections.Specialized.BitVector32/Section previous) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSection (maxValue As Short, previous As BitVector32.Section) As BitVector32.Section" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::BitVector32::Section CreateSection(short maxValue, System::Collections::Specialized::BitVector32::Section previous);" />
      <MemberSignature Language="F#" Value="static member CreateSection : int16 * System.Collections.Specialized.BitVector32.Section -&gt; System.Collections.Specialized.BitVector32.Section" Usage="System.Collections.Specialized.BitVector32.CreateSection (maxValue, previous)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.BitVector32+Section</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int16" />
        <Parameter Name="previous" Type="System.Collections.Specialized.BitVector32+Section" />
      </Parameters>
      <Docs>
        <param name="maxValue"><span data-ttu-id="24c5a-154">Entier signé 16 bits qui spécifie la valeur maximale du nouveau <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-154">A 16-bit signed integer that specifies the maximum value for the new <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span></span></param>
        <param name="previous"><span data-ttu-id="24c5a-155"><see cref="T:System.Collections.Specialized.BitVector32.Section" /> précédent dans <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-155">The previous <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></param>
        <summary><span data-ttu-id="24c5a-156">Crée un nouveau <see cref="T:System.Collections.Specialized.BitVector32.Section" /> à la suite du <see cref="T:System.Collections.Specialized.BitVector32.Section" /> spécifié dans une série de sections qui contiennent de petits entiers.</span><span class="sxs-lookup"><span data-stu-id="24c5a-156">Creates a new <see cref="T:System.Collections.Specialized.BitVector32.Section" /> following the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in a series of sections that contain small integers.</span></span></summary>
        <returns><span data-ttu-id="24c5a-157"><see cref="T:System.Collections.Specialized.BitVector32.Section" /> qui peut contenir un nombre compris entre zéro et <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-157">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that can hold a number from zero to <paramref name="maxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-158">Un <xref:System.Collections.Specialized.BitVector32.Section> est une fenêtre dans le <xref:System.Collections.Specialized.BitVector32> et se compose du plus petit nombre de bits consécutifs qui peut contenir la valeur maximale spécifiée dans <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-158">A <xref:System.Collections.Specialized.BitVector32.Section> is a window into the <xref:System.Collections.Specialized.BitVector32> and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span></span> <span data-ttu-id="24c5a-159">Par exemple, une section d’une valeur maximale de 1 est composée d’un seul bit, tandis qu’une section d’une valeur maximale de 5 est composée de trois bits.</span><span class="sxs-lookup"><span data-stu-id="24c5a-159">For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</span></span> <span data-ttu-id="24c5a-160">Vous pouvez créer un <xref:System.Collections.Specialized.BitVector32.Section> avec une valeur maximale de 1 pour l’utiliser en tant que valeur booléenne, vous permettant ainsi de stocker des entiers et des valeurs booléennes dans le même <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-160">You can create a <xref:System.Collections.Specialized.BitVector32.Section> with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="24c5a-161">Si des sections existent déjà après `previous` dans le <xref:System.Collections.Specialized.BitVector32>, elles sont toujours accessibles ; Toutefois, qui se chevauchent de sections peuvent provoquer des résultats inattendus.</span><span class="sxs-lookup"><span data-stu-id="24c5a-161">If sections already exist after `previous` in the <xref:System.Collections.Specialized.BitVector32>, those sections are still accessible; however, overlapping sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="24c5a-162">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-162">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c5a-163">Le code suivant exemple utilise un <xref:System.Collections.Specialized.BitVector32> comme une collection de sections.</span><span class="sxs-lookup"><span data-stu-id="24c5a-163">The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24c5a-164"><paramref name="maxValue" /> est inférieur à 1.</span><span class="sxs-lookup"><span data-stu-id="24c5a-164"><paramref name="maxValue" /> is less than 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24c5a-165"><paramref name="previous" /> inclut le bit final dans <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-165"><paramref name="previous" /> includes the final bit in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span>  
  
<span data-ttu-id="24c5a-166">- ou -</span><span class="sxs-lookup"><span data-stu-id="24c5a-166">-or-</span></span> 
 <span data-ttu-id="24c5a-167"><paramref name="maxValue" /> est supérieur à la valeur la plus élevée pouvant être représentée par le nombre de bits après <paramref name="previous" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-167"><paramref name="maxValue" /> is greater than the highest value that can be represented by the number of bits after <paramref name="previous" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public int Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Data" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Data { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : int" Usage="System.Collections.Specialized.BitVector32.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24c5a-168">Obtient la valeur de <see cref="T:System.Collections.Specialized.BitVector32" /> sous la forme d'un entier.</span><span class="sxs-lookup"><span data-stu-id="24c5a-168">Gets the value of the <see cref="T:System.Collections.Specialized.BitVector32" /> as an integer.</span></span></summary>
        <value><span data-ttu-id="24c5a-169">Valeur de <see cref="T:System.Collections.Specialized.BitVector32" /> sous la forme d'un entier.</span><span class="sxs-lookup"><span data-stu-id="24c5a-169">The value of the <see cref="T:System.Collections.Specialized.BitVector32" /> as an integer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-170">Pour accéder à la valeur de chaque section ou indicateurs binaires, utilisez le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="24c5a-170">To access the value of the individual sections or bit flags, use the <xref:System.Collections.Specialized.BitVector32.Item%2A> property.</span></span>  
  
 <span data-ttu-id="24c5a-171">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-171">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bitVector32.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="24c5a-172">Objet à comparer au <see cref="T:System.Collections.Specialized.BitVector32" /> actif.</span><span class="sxs-lookup"><span data-stu-id="24c5a-172">The object to compare with the current <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></param>
        <summary><span data-ttu-id="24c5a-173">Détermine si l'objet spécifié est égal à <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-173">Determines whether the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></summary>
        <returns><span data-ttu-id="24c5a-174"><see langword="true" /> si l'objet spécifié est égal à <see cref="T:System.Collections.Specialized.BitVector32" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-174"><see langword="true" /> if the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-175">L’objet `o` est considéré comme égal à la <xref:System.Collections.Specialized.BitVector32> si le type de `o` est compatible avec le <xref:System.Collections.Specialized.BitVector32> type et si la valeur de `o` est égal à la valeur de <xref:System.Collections.Specialized.BitVector32.Data%2A>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-175">The object `o` is considered equal to the <xref:System.Collections.Specialized.BitVector32> if the type of `o` is compatible with the <xref:System.Collections.Specialized.BitVector32> type and if the value of `o` is equal to the value of <xref:System.Collections.Specialized.BitVector32.Data%2A>.</span></span>  
  
 <span data-ttu-id="24c5a-176">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-176">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24c5a-177">Le code suivant exemple compare un <xref:System.Collections.Specialized.BitVector32> avec un autre <xref:System.Collections.Specialized.BitVector32> et avec une <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-177">The following code example compares a <xref:System.Collections.Specialized.BitVector32> with another <xref:System.Collections.Specialized.BitVector32> and with an <xref:System.Int32>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/CPP/bitvector32_equals.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/CS/bitvector32_equals.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/VB/bitvector32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bitVector32.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24c5a-178">Sert de fonction de hachage pour <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-178">Serves as a hash function for the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></summary>
        <returns><span data-ttu-id="24c5a-179">Code de hachage pour <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-179">A hash code for the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-180">Le code de hachage d’un <xref:System.Collections.Specialized.BitVector32> repose sur la valeur de <xref:System.Collections.Specialized.BitVector32.Data%2A>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-180">The hash code of a <xref:System.Collections.Specialized.BitVector32> is based on the value of <xref:System.Collections.Specialized.BitVector32.Data%2A>.</span></span> <span data-ttu-id="24c5a-181">Deux instances de <xref:System.Collections.Specialized.BitVector32> avec la même valeur pour <xref:System.Collections.Specialized.BitVector32.Data%2A> génère également le même code de hachage.</span><span class="sxs-lookup"><span data-stu-id="24c5a-181">Two instances of <xref:System.Collections.Specialized.BitVector32> with the same value for <xref:System.Collections.Specialized.BitVector32.Data%2A> will also generate the same hash code.</span></span>  
  
 <span data-ttu-id="24c5a-182">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-182">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24c5a-183">Obtient ou définit la valeur de la section ou de l'indicateur binaire spécifié.</span><span class="sxs-lookup"><span data-stu-id="24c5a-183">Gets or sets the value of the specified section or bit flag.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(valuetype System.Collections.Specialized.BitVector32/Section)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(section As BitVector32.Section) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[System::Collections::Specialized::BitVector32::Section] { int get(System::Collections::Specialized::BitVector32::Section section); void set(System::Collections::Specialized::BitVector32::Section section, int value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Collections.Specialized.BitVector32.Section) : int with get, set" Usage="System.Collections.Specialized.BitVector32.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="section" Type="System.Collections.Specialized.BitVector32+Section" />
      </Parameters>
      <Docs>
        <param name="section"><span data-ttu-id="24c5a-184"><see cref="T:System.Collections.Specialized.BitVector32.Section" /> qui contient la valeur à obtenir ou à définir.</span><span class="sxs-lookup"><span data-stu-id="24c5a-184">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that contains the value to get or set.</span></span></param>
        <summary><span data-ttu-id="24c5a-185">Obtient ou définit la valeur stockée dans le <see cref="T:System.Collections.Specialized.BitVector32.Section" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="24c5a-185">Gets or sets the value stored in the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span></span></summary>
        <value><span data-ttu-id="24c5a-186">Valeur stockée dans le <see cref="T:System.Collections.Specialized.BitVector32.Section" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="24c5a-186">The value stored in the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-187">Le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété [Section] est l’indexeur pour un <xref:System.Collections.Specialized.BitVector32> qui est configuré sous forme de sections et le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété [int] est l’indexeur pour un <xref:System.Collections.Specialized.BitVector32> configuré en tant qu’indicateurs binaires.</span><span class="sxs-lookup"><span data-stu-id="24c5a-187">The <xref:System.Collections.Specialized.BitVector32.Item%2A> [Section] property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as sections, and the <xref:System.Collections.Specialized.BitVector32.Item%2A> [int] property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as bit flags.</span></span>  
  
 <span data-ttu-id="24c5a-188">Un <xref:System.Collections.Specialized.BitVector32.Section> est une fenêtre dans le <xref:System.Collections.Specialized.BitVector32> et se compose du plus petit nombre de bits consécutifs qui peut contenir la valeur maximale spécifiée dans <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-188">A <xref:System.Collections.Specialized.BitVector32.Section> is a window into the <xref:System.Collections.Specialized.BitVector32> and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span></span> <span data-ttu-id="24c5a-189">Par exemple, une section d’une valeur maximale de 1 est composée d’un seul bit, tandis qu’une section d’une valeur maximale de 5 est composée de trois bits.</span><span class="sxs-lookup"><span data-stu-id="24c5a-189">For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</span></span> <span data-ttu-id="24c5a-190">Vous pouvez créer un <xref:System.Collections.Specialized.BitVector32.Section> avec une valeur maximale de 1 pour l’utiliser en tant que valeur booléenne, vous permettant ainsi de stocker des entiers et des valeurs booléennes dans le même <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-190">You can create a <xref:System.Collections.Specialized.BitVector32.Section> with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="24c5a-191">Le langage c# utilise le mot clé pour définir les indexeurs au lieu d’implémenter le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="24c5a-191">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.BitVector32.Item%2A> property.</span></span> <span data-ttu-id="24c5a-192">Visual Basic implémente <xref:System.Collections.Specialized.BitVector32.Item%2A> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.</span><span class="sxs-lookup"><span data-stu-id="24c5a-192">Visual Basic implements <xref:System.Collections.Specialized.BitVector32.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="24c5a-193">Récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est également une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-193">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
        <altmember cref="T:System.Collections.Specialized.BitVector32.Section" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public bool this[int bit] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(bit As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool default[int] { bool get(int bit); void set(int bit, bool value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : bool with get, set" Usage="System.Collections.Specialized.BitVector32.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bit"><span data-ttu-id="24c5a-194">Masque qui indique le bit à obtenir ou à définir.</span><span class="sxs-lookup"><span data-stu-id="24c5a-194">A mask that indicates the bit to get or set.</span></span></param>
        <summary><span data-ttu-id="24c5a-195">Obtient ou définit l'état de l'indicateur binaire déterminé par le masque spécifié.</span><span class="sxs-lookup"><span data-stu-id="24c5a-195">Gets or sets the state of the bit flag indicated by the specified mask.</span></span></summary>
        <value><span data-ttu-id="24c5a-196"><see langword="true" /> si l'indicateur binaire spécifié est activé (1) ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-196"><see langword="true" /> if the specified bit flag is on (1); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-197">Le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété [Section] est l’indexeur pour un <xref:System.Collections.Specialized.BitVector32> qui est configuré sous forme de sections et le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété [int] est l’indexeur pour un <xref:System.Collections.Specialized.BitVector32> configuré en tant qu’indicateurs binaires.</span><span class="sxs-lookup"><span data-stu-id="24c5a-197">The <xref:System.Collections.Specialized.BitVector32.Item%2A> [Section] property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as sections, and the <xref:System.Collections.Specialized.BitVector32.Item%2A> [int] property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as bit flags.</span></span>  
  
 <span data-ttu-id="24c5a-198">À l’aide de cette propriété sur un <xref:System.Collections.Specialized.BitVector32> qui est configuré comme sections peut entraîner des résultats inattendus.</span><span class="sxs-lookup"><span data-stu-id="24c5a-198">Using this property on a <xref:System.Collections.Specialized.BitVector32> that is set up as sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="24c5a-199">Le langage c# utilise le mot clé pour définir les indexeurs au lieu d’implémenter le <xref:System.Collections.Specialized.BitVector32.Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="24c5a-199">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.BitVector32.Item%2A> property.</span></span> <span data-ttu-id="24c5a-200">Visual Basic implémente <xref:System.Collections.Specialized.BitVector32.Item%2A> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.</span><span class="sxs-lookup"><span data-stu-id="24c5a-200">Visual Basic implements <xref:System.Collections.Specialized.BitVector32.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="24c5a-201">Récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est également une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-201">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.BitVector32.CreateMask" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24c5a-202">Retourne une chaîne qui représente un <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="24c5a-202">Returns a string that represents a <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bitVector32.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24c5a-203">Retourne une chaîne qui représente le <see cref="T:System.Collections.Specialized.BitVector32" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="24c5a-203">Returns a string that represents the current <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></summary>
        <returns><span data-ttu-id="24c5a-204">Chaîne qui représente le <see cref="T:System.Collections.Specialized.BitVector32" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="24c5a-204">A string that represents the current <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-205">Cette méthode se substitue à <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="24c5a-205">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="24c5a-206">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-206">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (System.Collections.Specialized.BitVector32 value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Collections.Specialized.BitVector32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As BitVector32) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Collections::Specialized::BitVector32 value);" />
      <MemberSignature Language="F#" Value="static member ToString : System.Collections.Specialized.BitVector32 -&gt; string" Usage="System.Collections.Specialized.BitVector32.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="24c5a-207"><see cref="T:System.Collections.Specialized.BitVector32" /> à représenter.</span><span class="sxs-lookup"><span data-stu-id="24c5a-207">The <see cref="T:System.Collections.Specialized.BitVector32" /> to represent.</span></span></param>
        <summary><span data-ttu-id="24c5a-208">Retourne une chaîne qui représente le <see cref="T:System.Collections.Specialized.BitVector32" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="24c5a-208">Returns a string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></summary>
        <returns><span data-ttu-id="24c5a-209">Chaîne qui représente le <see cref="T:System.Collections.Specialized.BitVector32" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="24c5a-209">A string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c5a-210">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="24c5a-210">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
  </Members>
</Type>