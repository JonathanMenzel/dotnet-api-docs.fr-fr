<Type Name="IOrderedDictionary" FullName="System.Collections.Specialized.IOrderedDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ac6f7bdbc583a55f990475a067b26ef6a69f291" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51319294" /></Metadata><TypeSignature Language="C#" Value="public interface IOrderedDictionary : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOrderedDictionary implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.IOrderedDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOrderedDictionary&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOrderedDictionary : System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type IOrderedDictionary = interface&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3badd-101">Représente une collection indexée de paires clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="3badd-101">Represents an indexed collection of key/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3badd-102"><xref:System.Collections.Specialized.IOrderedDictionary> éléments sont accessibles avec la clé ou avec l’index.</span><span class="sxs-lookup"><span data-stu-id="3badd-102"><xref:System.Collections.Specialized.IOrderedDictionary> elements can be accessed either with the key or with the index.</span></span>  
  
 <span data-ttu-id="3badd-103">Chaque élément est une paire clé/valeur stockée dans un <xref:System.Collections.DictionaryEntry> structure.</span><span class="sxs-lookup"><span data-stu-id="3badd-103">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> structure.</span></span>  
  
 <span data-ttu-id="3badd-104">Chaque paire doit avoir une clé unique qui n’est pas `null`, mais la valeur peut être `null` et ne doivent pas être uniques.</span><span class="sxs-lookup"><span data-stu-id="3badd-104">Each pair must have a unique key that is not `null`, but the value can be `null` and does not have to be unique.</span></span> <span data-ttu-id="3badd-105">Le <xref:System.Collections.Specialized.IOrderedDictionary> interface permet les clés et les valeurs à énumérer, mais elle n’implique pas de n’importe quel ordre de tri particulier.</span><span class="sxs-lookup"><span data-stu-id="3badd-105">The <xref:System.Collections.Specialized.IOrderedDictionary> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="3badd-106">Le `foreach` instruction du langage c# (`For Each` en Visual Basic) retourne un objet du type des éléments dans la collection.</span><span class="sxs-lookup"><span data-stu-id="3badd-106">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="3badd-107">Étant donné que chaque élément de la <xref:System.Collections.IDictionary> est une paire clé/valeur, le type d’élément n’est pas le type de la clé ou le type de la valeur.</span><span class="sxs-lookup"><span data-stu-id="3badd-107">Because each element of the <xref:System.Collections.IDictionary> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="3badd-108">Au lieu de cela, le type d’élément est <xref:System.Collections.DictionaryEntry>, comme illustré dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="3badd-108">Instead, the element type is <xref:System.Collections.DictionaryEntry>, as the following example shows.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/remarks.cpp#03)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/remarks.cs#03)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/remarks.vb#03)]  
  
 <span data-ttu-id="3badd-109">La `foreach` instruction est un wrapper autour de l’énumérateur, qui permet la lecture à partir n’écrit ne pas à la collection.</span><span class="sxs-lookup"><span data-stu-id="3badd-109">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3badd-110">L’exemple de code suivant illustre l’implémentation d’une simple <xref:System.Collections.Specialized.IOrderedDictionary> selon la <xref:System.Collections.ArrayList> classe.</span><span class="sxs-lookup"><span data-stu-id="3badd-110">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="3badd-111">Implémenté <xref:System.Collections.Specialized.IOrderedDictionary> stocke les prénoms comme les clés et les noms en tant que les valeurs, avec la condition supplémentaire le fait que chaque nom est unique.</span><span class="sxs-lookup"><span data-stu-id="3badd-111">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#00)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#00)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#00)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="3badd-112">La classe d’implémentation doit avoir un moyen de comparer des clés.</span><span class="sxs-lookup"><span data-stu-id="3badd-112">The implementing class must have a means to compare keys.</span></span></para></block>
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="iOrderedDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3badd-113">Retourne un énumérateur qui itère au sein de la collection <see cref="T:System.Collections.Specialized.IOrderedDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="3badd-113">Returns an enumerator that iterates through the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></summary>
        <returns><span data-ttu-id="3badd-114"><see cref="T:System.Collections.IDictionaryEnumerator" /> pour l’intégralité de la collection <see cref="T:System.Collections.Specialized.IOrderedDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="3badd-114">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the entire <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3badd-115">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="3badd-115">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="3badd-116">L'instruction `foreach` du langage C# (`for each` en Visual Basic) se charge de la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="3badd-116">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="3badd-117">Par conséquent, l’utilisation `foreach` est recommandé au lieu de manipuler l’énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="3badd-117">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="3badd-118">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="3badd-118">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="3badd-119">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="3badd-119">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="3badd-120"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="3badd-120"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="3badd-121">À cette position, la <xref:System.Collections.IEnumerator.Current%2A> propriété n’est pas définie.</span><span class="sxs-lookup"><span data-stu-id="3badd-121">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="3badd-122">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="3badd-122">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="3badd-123"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="3badd-123"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="3badd-124"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="3badd-124"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="3badd-125">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="3badd-125">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="3badd-126">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="3badd-126">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="3badd-127">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.IEnumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="3badd-127">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="3badd-128">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="3badd-128">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="3badd-129">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="3badd-129">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="3badd-130">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="3badd-130">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="3badd-131">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="3badd-131">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="3badd-132">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="3badd-132">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="3badd-133">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="3badd-133">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3badd-134">L’exemple de code suivant illustre l’implémentation d’une simple <xref:System.Collections.Specialized.IOrderedDictionary> selon la <xref:System.Collections.ArrayList> classe.</span><span class="sxs-lookup"><span data-stu-id="3badd-134">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="3badd-135">Implémenté <xref:System.Collections.Specialized.IOrderedDictionary> stocke les prénoms comme les clés et les noms en tant que les valeurs, avec la condition supplémentaire le fait que chaque nom est unique.</span><span class="sxs-lookup"><span data-stu-id="3badd-135">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="3badd-136">Ce code fait partie d’un plus grand exemple fourni pour la <xref:System.Collections.Specialized.IOrderedDictionary> classe.</span><span class="sxs-lookup"><span data-stu-id="3badd-136">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj * obj -&gt; unit" Usage="iOrderedDictionary.Insert (index, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3badd-137">Index de base zéro auquel la paire clé/valeur doit être insérée.</span><span class="sxs-lookup"><span data-stu-id="3badd-137">The zero-based index at which the key/value pair should be inserted.</span></span></param>
        <param name="key"><span data-ttu-id="3badd-138">Objet à utiliser comme clé de l'élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="3badd-138">The object to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="3badd-139">Objet à utiliser comme valeur de l'élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="3badd-139">The object to use as the value of the element to add.</span></span>  <span data-ttu-id="3badd-140">La valeur peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3badd-140">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3badd-141">Insère une paire clé/valeur dans la collection à l’index spécifié.</span><span class="sxs-lookup"><span data-stu-id="3badd-141">Inserts a key/value pair into the collection at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3badd-142"><xref:System.Collections.Specialized.IOrderedDictionary> accepte `null` comme une valeur valide et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="3badd-142"><xref:System.Collections.Specialized.IOrderedDictionary> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="3badd-143">Si le `index` paramètre est égal à <xref:System.Collections.ICollection.Count%2A>, le `value` paramètre est ajouté à la fin de la <xref:System.Collections.Specialized.IOrderedDictionary> collection.</span><span class="sxs-lookup"><span data-stu-id="3badd-143">If the `index` parameter is equal to <xref:System.Collections.ICollection.Count%2A>, the `value` parameter is added to the end of the <xref:System.Collections.Specialized.IOrderedDictionary> collection.</span></span>  
  
 <span data-ttu-id="3badd-144">Dans des collections d’éléments contigus, telles que les listes, les éléments situés après le point d’insertion descendent afin de prendre en compte le nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="3badd-144">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="3badd-145">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="3badd-145">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="3badd-146">Ce comportement ne s’applique pas aux collections où éléments sont regroupés de manière conceptuelle, telle qu’une table de hachage.</span><span class="sxs-lookup"><span data-stu-id="3badd-146">This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3badd-147">L’exemple de code suivant illustre l’implémentation d’une simple <xref:System.Collections.Specialized.IOrderedDictionary> selon la <xref:System.Collections.ArrayList> classe.</span><span class="sxs-lookup"><span data-stu-id="3badd-147">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="3badd-148">Implémenté <xref:System.Collections.Specialized.IOrderedDictionary> stocke les prénoms comme les clés et les noms en tant que les valeurs, avec la condition supplémentaire le fait que chaque nom est unique.</span><span class="sxs-lookup"><span data-stu-id="3badd-148">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="3badd-149">Ce code fait partie d’un plus grand exemple fourni pour la <xref:System.Collections.Specialized.IOrderedDictionary> classe.</span><span class="sxs-lookup"><span data-stu-id="3badd-149">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3badd-150"><paramref name="index" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="3badd-150"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="3badd-151">- ou -</span><span class="sxs-lookup"><span data-stu-id="3badd-151">-or-</span></span> 
 <span data-ttu-id="3badd-152"><paramref name="index" /> est supérieur à <see cref="P:System.Collections.ICollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="3badd-152"><paramref name="index" /> is greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3badd-153"><paramref name="key" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3badd-153"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3badd-154">Un élément possédant la même clé existe déjà dans la collection <see cref="T:System.Collections.Specialized.IOrderedDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="3badd-154">An element with the same key already exists in the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3badd-155">La collection <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="3badd-155">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection is read-only.</span></span>  
  
<span data-ttu-id="3badd-156">- ou -</span><span class="sxs-lookup"><span data-stu-id="3badd-156">-or-</span></span> 
<span data-ttu-id="3badd-157">La taille de la collection <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> est fixe.</span><span class="sxs-lookup"><span data-stu-id="3badd-157">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.Specialized.IOrderedDictionary.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3badd-158">Index de base zéro de l'élément à obtenir ou à définir.</span><span class="sxs-lookup"><span data-stu-id="3badd-158">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="3badd-159">Obtient ou définit l'élément au niveau de l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="3badd-159">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="3badd-160">Élément au niveau de l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="3badd-160">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3badd-161"><xref:System.Collections.Specialized.IOrderedDictionary> accepte `null` comme une valeur valide et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="3badd-161"><xref:System.Collections.Specialized.IOrderedDictionary> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="3badd-162">Le langage c# utilise le mot clé pour définir les indexeurs au lieu d’implémenter le <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="3badd-162">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> property.</span></span> <span data-ttu-id="3badd-163">Visual Basic implémente <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.</span><span class="sxs-lookup"><span data-stu-id="3badd-163">Visual Basic implements <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="3badd-164">Cette propriété vous permet d’accéder à un élément spécifique dans la collection en utilisant la syntaxe suivante :</span><span class="sxs-lookup"><span data-stu-id="3badd-164">This property allows you to access a specific element in the collection by using the following syntax:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/remarks.cpp#04)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/remarks.cs#04)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/remarks.vb#04)]  
  
   
  
## Examples  
 <span data-ttu-id="3badd-165">L’exemple de code suivant illustre l’implémentation d’une simple <xref:System.Collections.Specialized.IOrderedDictionary> selon la <xref:System.Collections.ArrayList> classe.</span><span class="sxs-lookup"><span data-stu-id="3badd-165">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="3badd-166">Implémenté <xref:System.Collections.Specialized.IOrderedDictionary> stocke les prénoms comme les clés et les noms en tant que les valeurs, avec la condition supplémentaire le fait que chaque nom est unique.</span><span class="sxs-lookup"><span data-stu-id="3badd-166">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="3badd-167">Ce code fait partie d’un plus grand exemple fourni pour la <xref:System.Collections.Specialized.IOrderedDictionary> classe.</span><span class="sxs-lookup"><span data-stu-id="3badd-167">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3badd-168"><paramref name="index" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="3badd-168"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="3badd-169">- ou -</span><span class="sxs-lookup"><span data-stu-id="3badd-169">-or-</span></span> 
 <span data-ttu-id="3badd-170"><paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.ICollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="3badd-170"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iOrderedDictionary.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3badd-171">Index de base zéro de l'élément à supprimer.</span><span class="sxs-lookup"><span data-stu-id="3badd-171">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="3badd-172">Supprime l'élément au niveau de l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="3badd-172">Removes the element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3badd-173">Dans des collections d’éléments contigus, telles que les listes, les éléments qui suivent l’élément supprimé remontent pour occuper l’espace libéré.</span><span class="sxs-lookup"><span data-stu-id="3badd-173">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="3badd-174">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="3badd-174">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="3badd-175">Ce comportement ne s’applique pas aux collections où éléments sont regroupés de manière conceptuelle, telle qu’une table de hachage.</span><span class="sxs-lookup"><span data-stu-id="3badd-175">This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3badd-176">L’exemple de code suivant illustre l’implémentation d’une simple <xref:System.Collections.Specialized.IOrderedDictionary> selon la <xref:System.Collections.ArrayList> classe.</span><span class="sxs-lookup"><span data-stu-id="3badd-176">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="3badd-177">Implémenté <xref:System.Collections.Specialized.IOrderedDictionary> stocke les prénoms comme les clés et les noms en tant que les valeurs, avec la condition supplémentaire le fait que chaque nom est unique.</span><span class="sxs-lookup"><span data-stu-id="3badd-177">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="3badd-178">Ce code fait partie d’un plus grand exemple fourni pour la <xref:System.Collections.Specialized.IOrderedDictionary> classe.</span><span class="sxs-lookup"><span data-stu-id="3badd-178">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3badd-179"><paramref name="index" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="3badd-179"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="3badd-180">- ou -</span><span class="sxs-lookup"><span data-stu-id="3badd-180">-or-</span></span> 
 <span data-ttu-id="3badd-181"><paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.ICollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="3badd-181"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3badd-182">La collection <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="3badd-182">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection is read-only.</span></span>  
  
<span data-ttu-id="3badd-183">- ou -</span><span class="sxs-lookup"><span data-stu-id="3badd-183">-or-</span></span> 
<span data-ttu-id="3badd-184">La taille de la collection <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> est fixe.</span><span class="sxs-lookup"><span data-stu-id="3badd-184">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection has a fixed size.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>