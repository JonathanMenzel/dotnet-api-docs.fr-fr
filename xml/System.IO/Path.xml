<Type Name="Path" FullName="System.IO.Path">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35e3e53a83eced39983eec4a76b51d2824f57ce3" />
    <Meta Name="ms.sourcegitcommit" Value="29c771f79cf4eac4f49e5fae5f1aa8b457acf146" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/21/2018" />
    <Meta Name="ms.locfileid" Value="36298841" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Path" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Path extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Path" />
  <TypeSignature Language="VB.NET" Value="Public Class Path" />
  <TypeSignature Language="C++ CLI" Value="public ref class Path abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="37f5a-101">Effectue des opérations sur des instances de <see cref="T:System.String" /> qui contiennent des informations relatives au chemin d'accès d'un fichier ou d'un répertoire.</span>
      <span class="sxs-lookup">
        <span data-stu-id="37f5a-101">Performs operations on <see cref="T:System.String" /> instances that contain file or directory path information.</span>
      </span>
      <span data-ttu-id="37f5a-102">Ces opérations sont effectuées différemment selon la plateforme.</span>
      <span class="sxs-lookup">
        <span data-stu-id="37f5a-102">These operations are performed in a cross-platform manner.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-103">Le .NET Framework ne prend pas en charge l’accès direct aux disques physiques via les chemins d’accès qui sont des noms de périphériques, tels que «\\\\. \PHYSICALDRIVE0 ».</span><span class="sxs-lookup"><span data-stu-id="37f5a-103">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="37f5a-104">Un chemin d’accès est une chaîne qui fournit l’emplacement d’un fichier ou répertoire.</span><span class="sxs-lookup"><span data-stu-id="37f5a-104">A path is a string that provides the location of a file or directory.</span></span> <span data-ttu-id="37f5a-105">Un chemin d’accès ne pointe pas nécessairement vers un emplacement sur le disque ; par exemple, un chemin d’accès peuvent être mappées à un emplacement en mémoire ou sur un appareil.</span><span class="sxs-lookup"><span data-stu-id="37f5a-105">A path does not necessarily point to a location on disk; for example, a path might map to a location in memory or on a device.</span></span> <span data-ttu-id="37f5a-106">Le format exact d’un chemin d’accès est déterminé par la plateforme actuelle.</span><span class="sxs-lookup"><span data-stu-id="37f5a-106">The exact format of a path is determined by the current platform.</span></span> <span data-ttu-id="37f5a-107">Par exemple, sur certains systèmes, un chemin d’accès peut commencer par une lettre de lecteur ou volume, alors que cet élément n’est pas présent dans d’autres systèmes.</span><span class="sxs-lookup"><span data-stu-id="37f5a-107">For example, on some systems, a path can start with a drive or volume letter, while this element is not present in other systems.</span></span> <span data-ttu-id="37f5a-108">Sur certains systèmes, les chemins d’accès de fichier peuvent contenir des extensions, qui indiquent le type d’informations stockées dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="37f5a-108">On some systems, file paths can contain extensions, which indicate the type of information stored in the file.</span></span> <span data-ttu-id="37f5a-109">Le format d’une extension de nom de fichier est dépendante de la plateforme ; par exemple, certains systèmes limitent les extensions à trois caractères, et d’autres ne le font pas.</span><span class="sxs-lookup"><span data-stu-id="37f5a-109">The format of a file name extension is platform-dependent; for example, some systems limit extensions to three characters, and others do not.</span></span> <span data-ttu-id="37f5a-110">La plateforme actuelle détermine également le jeu de caractères utilisé pour séparer les éléments d’un chemin d’accès et le jeu de caractères qui ne peut pas être utilisé lors de la spécification des chemins d’accès.</span><span class="sxs-lookup"><span data-stu-id="37f5a-110">The current platform also determines the set of characters used to separate the elements of a path, and the set of characters that cannot be used when specifying paths.</span></span> <span data-ttu-id="37f5a-111">En raison de ces différences, les champs de la `Path` classe, ainsi que le comportement exact de certains membres de la `Path` classe sont dépendants de la plateforme.</span><span class="sxs-lookup"><span data-stu-id="37f5a-111">Because of these differences, the fields of the `Path` class as well as the exact behavior of some members of the `Path` class are platform-dependent.</span></span>  
  
 <span data-ttu-id="37f5a-112">Un chemin d’accès peut contenir des informations d’emplacement absolu ou relatif.</span><span class="sxs-lookup"><span data-stu-id="37f5a-112">A path can contain absolute or relative location information.</span></span> <span data-ttu-id="37f5a-113">Chemins d’accès absolus spécifient un emplacement : le fichier ou le répertoire peut être identifiée, quelle que soit l’emplacement actuel.</span><span class="sxs-lookup"><span data-stu-id="37f5a-113">Absolute paths fully specify a location: the file or directory can be uniquely identified regardless of the current location.</span></span> <span data-ttu-id="37f5a-114">Chemins d’accès relatifs spécifient un emplacement partiel : l’emplacement actuel est utilisé comme point de départ lors de la localisation d’un fichier spécifié avec un chemin d’accès relatif.</span><span class="sxs-lookup"><span data-stu-id="37f5a-114">Relative paths specify a partial location: the current location is used as the starting point when locating a file specified with a relative path.</span></span> <span data-ttu-id="37f5a-115">Pour déterminer le répertoire actif, appelez <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="37f5a-115">To determine the current directory, call <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="37f5a-116">La plupart des membres de la `Path` n’interagissent pas avec le système de fichiers de classe et ne pas vérifier l’existence du fichier spécifié par une chaîne de chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="37f5a-116">Most members of the `Path` class do not interact with the file system and do not verify the existence of the file specified by a path string.</span></span> <span data-ttu-id="37f5a-117">`Path` classe les membres qui modifient une chaîne de chemin d’accès, tel que <xref:System.IO.Path.ChangeExtension%2A>, n’ont aucun effet sur les noms de fichiers dans le système de fichiers.</span><span class="sxs-lookup"><span data-stu-id="37f5a-117">`Path` class members that modify a path string, such as <xref:System.IO.Path.ChangeExtension%2A>, have no effect on names of files in the file system.</span></span> <span data-ttu-id="37f5a-118">`Path` membres faire, toutefois, valider le contenu d’une chaîne de chemin d’accès spécifié et lève un <xref:System.ArgumentException> exception si la chaîne contient des caractères qui ne sont pas valides dans les chaînes de chemin d’accès, tel que défini dans les caractères renvoyés à partir de la <xref:System.IO.Path.GetInvalidPathChars%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="37f5a-118">`Path` members do, however, validate the contents of a specified path string, and throw an <xref:System.ArgumentException> exception if the string contains characters that are not valid in path strings, as defined in the characters returned from the <xref:System.IO.Path.GetInvalidPathChars%2A> method.</span></span> <span data-ttu-id="37f5a-119">Par exemple, sur les plateformes de bureau Windows, les caractères de chemin non valide peuvent inclure les guillemets («), inférieur à (\<), supérieur à (>), canal (&#124;), retour arrière (\b), null (\0) et les caractères Unicode 16 et 18 et 20 et 25.</span><span class="sxs-lookup"><span data-stu-id="37f5a-119">For example, on Windows-based desktop platforms, invalid path characters might include quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0), and Unicode characters 16 through 18 and 20 through 25.</span></span>  
  
 <span data-ttu-id="37f5a-120">Les membres de la `Path` classe permettent d’exécuter rapidement et facilement des opérations courantes telles que la détermination de si une extension de nom de fichier fait partie d’un chemin d’accès et combiner deux chaînes en un nom d’un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="37f5a-120">The members of the `Path` class enable you to quickly and easily perform common operations such as determining whether a file name extension is part of a path, and combining two strings into one path name.</span></span>  
  
 <span data-ttu-id="37f5a-121">Tous les membres de la `Path` classe sont statique et peuvent donc être appelés sans disposer d’une instance d’un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="37f5a-121">All members of the `Path` class are static and can therefore be called without having an instance of a path.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37f5a-122">Dans les membres qui acceptent un chemin d’accès sous forme de chaîne d’entrée, ce chemin d’accès doit être correctement formé ou une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="37f5a-122">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="37f5a-123">Par exemple, si un chemin d’accès est qualifié complet mais commence par un espace, le chemin d’accès n’est pas tronqué dans les méthodes de la classe.</span><span class="sxs-lookup"><span data-stu-id="37f5a-123">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="37f5a-124">Par conséquent, le chemin d’accès est incorrect et une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="37f5a-124">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="37f5a-125">De même, un chemin d’accès ou une combinaison de chemins d’accès ne peut pas être qualifiée à deux reprises.</span><span class="sxs-lookup"><span data-stu-id="37f5a-125">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="37f5a-126">Par exemple, « c:\temp c:\windows » déclenche également une exception dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="37f5a-126">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="37f5a-127">Assurez-vous que vos chemins d’accès sont corrects lors de l’utilisation des méthodes qui acceptent une chaîne de chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="37f5a-127">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="37f5a-128">Dans les membres qui acceptent un chemin d’accès, le chemin d’accès peut faire référence à un fichier ou simplement un répertoire.</span><span class="sxs-lookup"><span data-stu-id="37f5a-128">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="37f5a-129">Le chemin d’accès spécifié peut également faire référence à un chemin d’accès relatif ou un chemin d’accès UNC Universal Naming Convention () pour un nom de partage et de serveur.</span><span class="sxs-lookup"><span data-stu-id="37f5a-129">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="37f5a-130">Par exemple, tous les éléments suivants sont des chemins d’accès acceptables :</span><span class="sxs-lookup"><span data-stu-id="37f5a-130">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="37f5a-131">« c:\\\MyDir\\\MyFile.txt » en c# ou « c:\MyDir\MyFile.txt » en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="37f5a-131">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="37f5a-132">« c:\\\MyDir » en c# ou « c:\MyDir » en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="37f5a-132">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="37f5a-133">« MyDir\\\MySubdir » en c# ou « Monrépertoire\monsousrépertoire » en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="37f5a-133">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="37f5a-134">«\\\\\\\MyServer\\\MyShare » en c#, ou «\\\MyServer\MyShare » en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="37f5a-134">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="37f5a-135">Toutes ces opérations sont effectuées sur les chaînes, il est impossible de vérifier que les résultats sont valides dans tous les scénarios.</span><span class="sxs-lookup"><span data-stu-id="37f5a-135">Because all these operations are performed on strings, it is impossible to verify that the results are valid in all scenarios.</span></span> <span data-ttu-id="37f5a-136">Par exemple, le <xref:System.IO.Path.GetExtension%2A> méthode analyse une chaîne que vous passez à celui-ci et retourne l’extension de cette chaîne.</span><span class="sxs-lookup"><span data-stu-id="37f5a-136">For example, the <xref:System.IO.Path.GetExtension%2A> method parses a string that you pass to it and returns the extension from that string.</span></span> <span data-ttu-id="37f5a-137">Toutefois, cela ne signifie pas qu’un fichier avec cette extension existe sur le disque.</span><span class="sxs-lookup"><span data-stu-id="37f5a-137">However, this does not mean that a file with that extension exists on the disk.</span></span>  
  
 <span data-ttu-id="37f5a-138">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="37f5a-138">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-139">L’exemple de code suivant illustre certains membres principaux de la `Path` classe.</span><span class="sxs-lookup"><span data-stu-id="37f5a-139">The following code example demonstrates some of the main members of the `Path` class.</span></span>  
  
 [!code-cpp[path class#1](~/samples/snippets/cpp/VS_Snippets_CLR/Path Class/CPP/path class.cpp#1)]
 [!code-csharp[path class#1](~/samples/snippets/csharp/VS_Snippets_CLR/Path Class/CS/path class.cs#1)]
 [!code-vb[path class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Path Class/VB/path class.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AltDirectorySeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char AltDirectorySeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char AltDirectorySeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.AltDirectorySeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AltDirectorySeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char AltDirectorySeparatorChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37f5a-140">Fournit un caractère de remplacement spécifique à la plateforme, utilisé pour séparer les niveaux de répertoire dans une chaîne de chemin d'accès qui reflète une organisation de système de fichiers hiérarchique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-140">Provides a platform-specific alternate character used to separate directory levels in a path string that reflects a hierarchical file system organization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-141">Le caractère stocké dans ce champ ne peut pas être <xref:System.IO.Path.InvalidPathChars>.</span><span class="sxs-lookup"><span data-stu-id="37f5a-141">The character stored in this field cannot be in <xref:System.IO.Path.InvalidPathChars>.</span></span> <span data-ttu-id="37f5a-142">Ce champ peut être défini sur la même valeur que <xref:System.IO.Path.DirectorySeparatorChar>.</span><span class="sxs-lookup"><span data-stu-id="37f5a-142">This field can be set to the same value as <xref:System.IO.Path.DirectorySeparatorChar>.</span></span> <span data-ttu-id="37f5a-143">`AltDirectorySeparatorChar` et <xref:System.IO.Path.DirectorySeparatorChar> sont toutes deux valides pour séparer les niveaux de répertoire dans une chaîne de chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="37f5a-143">`AltDirectorySeparatorChar` and <xref:System.IO.Path.DirectorySeparatorChar> are both valid for separating directory levels in a path string.</span></span>  
  
 <span data-ttu-id="37f5a-144">La valeur de ce champ est une barre oblique (« / ») sur les systèmes d’exploitation Windows, UNIX et Macintosh.</span><span class="sxs-lookup"><span data-stu-id="37f5a-144">The value of this field is a slash ('/') on Windows, UNIX and Macintosh operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-145">L’exemple de code suivant illustre une utilisation de la `AltDirectorySeparatorChar` champ.</span><span class="sxs-lookup"><span data-stu-id="37f5a-145">The following code example demonstrates a use of the `AltDirectorySeparatorChar` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeExtension">
      <MemberSignature Language="C#" Value="public static string ChangeExtension (string path, string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ChangeExtension(string path, string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.ChangeExtension(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeExtension (path As String, extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ChangeExtension(System::String ^ path, System::String ^ extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="37f5a-146">Informations relatives au chemin d’accès à modifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-146">The path information to modify.</span>
          </span>
          <span data-ttu-id="37f5a-147">Le chemin d'accès ne peut contenir aucun des caractères définis dans <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-147">The path cannot contain any of the characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </param>
        <param name="extension">
          <span data-ttu-id="37f5a-148">Nouvelle extension (avec ou sans point de début).</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-148">The new extension (with or without a leading period).</span>
          </span>
          <span data-ttu-id="37f5a-149">Spécifiez <see langword="null" /> pour supprimer une extension existante de <c>path</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-149">Specify <see langword="null" /> to remove an existing extension from <c>path</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-150">Modifie l’extension d’une chaîne de chemin d’accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-150">Changes the extension of a path string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-151">Informations relatives au chemin d’accès modifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-151">The modified path information.</span>
          </span>
          <span data-ttu-id="37f5a-152">Sur les plateformes de bureau Windows, si <paramref name="path" /> est <see langword="null" /> ou est une chaîne vide (""), les informations relatives au chemin d'accès sont retournées inchangées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-152">On Windows-based desktop platforms, if <paramref name="path" /> is <see langword="null" /> or an empty string (""), the path information is returned unmodified.</span>
          </span>
          <span data-ttu-id="37f5a-153">Si <paramref name="extension" /> est <see langword="null" />, la chaîne retournée contient le chemin d'accès spécifié avec l'extension supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-153">If <paramref name="extension" /> is <see langword="null" />, the returned string contains the specified path with its extension removed.</span>
          </span>
          <span data-ttu-id="37f5a-154">Si <paramref name="path" /> ne possède pas d'extension et si <paramref name="extension" /> n'est pas <see langword="null" />, la chaîne du chemin d'accès retournée contient <paramref name="extension" />, ajouté à la fin de <paramref name="path" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-154">If <paramref name="path" /> has no extension, and <paramref name="extension" /> is not <see langword="null" />, the returned path string contains <paramref name="extension" /> appended to the end of <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-155">Si ni `path` ni `extension` contient un point (.), `ChangeExtension` ajoute le point.</span><span class="sxs-lookup"><span data-stu-id="37f5a-155">If neither `path` nor `extension` contains a period (.), `ChangeExtension` adds the period.</span></span>  
  
 <span data-ttu-id="37f5a-156">Le `extension` paramètre peut contenir plusieurs périodes et les caractères de chemin d’accès valide et peut être n’importe quelle longueur.</span><span class="sxs-lookup"><span data-stu-id="37f5a-156">The `extension` parameter can contain multiple periods and any valid path characters, and can be any length.</span></span> <span data-ttu-id="37f5a-157">Si `extension` est `null`, la chaîne retournée contient le contenu de `path` avec la dernière période et tous les caractères après celui-ci supprimé.</span><span class="sxs-lookup"><span data-stu-id="37f5a-157">If `extension` is `null`, the returned string contains the contents of `path` with the last period and all characters following it removed.</span></span>  
  
 <span data-ttu-id="37f5a-158">Si `extension` est une chaîne vide, la chaîne de chemin d’accès retournée contient le contenu de `path` avec les caractères après le dernier point supprimé.</span><span class="sxs-lookup"><span data-stu-id="37f5a-158">If `extension` is an empty string, the returned path string contains the contents of `path` with any characters following the last period removed.</span></span>  
  
 <span data-ttu-id="37f5a-159">Si `path` ne possède pas d’extension et `extension` n’est pas `null`, la chaîne retournée contient `path` suivie `extension`.</span><span class="sxs-lookup"><span data-stu-id="37f5a-159">If `path` does not have an extension and `extension` is not `null`, the returned string contains `path` followed by `extension`.</span></span>  
  
 <span data-ttu-id="37f5a-160">Si `extension` n’est pas `null` et ne contient pas de point de début, la période est ajoutée.</span><span class="sxs-lookup"><span data-stu-id="37f5a-160">If `extension` is not `null` and does not contain a leading period, the period is added.</span></span>  
  
 <span data-ttu-id="37f5a-161">Si `path` contient plusieurs extensions séparées par plusieurs points, la chaîne retournée contient le contenu de `path` avec la dernière période et tous les caractères suivant remplacé par `extension`.</span><span class="sxs-lookup"><span data-stu-id="37f5a-161">If `path` contains a multiple extension separated by multiple periods, the returned string contains the contents of `path` with the last period and all characters following it replaced by `extension`.</span></span> <span data-ttu-id="37f5a-162">Par exemple, si `path` est « \Dir1\examples\pathtests.csx.txt » et `extension` est « cs », le chemin d’accès modifié est « \Dir1\examples\pathtests.csx.cs ».</span><span class="sxs-lookup"><span data-stu-id="37f5a-162">For example, if `path` is "\Dir1\examples\pathtests.csx.txt" and `extension` is "cs", the modified path is "\Dir1\examples\pathtests.csx.cs".</span></span>  
  
 <span data-ttu-id="37f5a-163">Il n’est pas possible de vérifier que les résultats retournés sont valides dans tous les scénarios.</span><span class="sxs-lookup"><span data-stu-id="37f5a-163">It is not possible to verify that the returned results are valid in all scenarios.</span></span> <span data-ttu-id="37f5a-164">Par exemple, si `path` est vide, `extension` est ajouté.</span><span class="sxs-lookup"><span data-stu-id="37f5a-164">For example, if `path` is empty, `extension` is appended.</span></span>  
  
 <span data-ttu-id="37f5a-165">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="37f5a-165">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-166">L’exemple de code suivant illustre une utilisation de la `ChangeExtension` (méthode).</span><span class="sxs-lookup"><span data-stu-id="37f5a-166">The following code example demonstrates a use of the `ChangeExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#1)]
 [!code-csharp[System.IO.Path Members#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#1)]
 [!code-vb[System.IO.Path Members#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-167">
            <paramref name="path" /> contient un ou plusieurs caractères non valides définis dans <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-167">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Combine">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="37f5a-168">Combine des chaînes en un chemin d'accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-168">Combines strings into a path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (params string[] paths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string[] paths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (ParamArray paths As String()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(... cli::array &lt;System::String ^&gt; ^ paths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paths" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="paths">
          <span data-ttu-id="37f5a-169">Tableau de parties du chemin d’accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-169">An array of parts of the path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-170">Combine un tableau de chaînes en un chemin d’accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-170">Combines an array of strings into a path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-171">Chemins d'accès combinés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-171">The combined paths.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-172">`paths` doit être un tableau des parties du chemin d’accès à combiner.</span><span class="sxs-lookup"><span data-stu-id="37f5a-172">`paths` should be an array of the parts of the path to combine.</span></span> <span data-ttu-id="37f5a-173">Si l’un des chemins d’accès suivants est un chemin d’accès absolu, l’opération de combinaison réinitialise commençant par ce chemin d’accès absolu, en ignorant tous les chemins d’accès combinés précédents.</span><span class="sxs-lookup"><span data-stu-id="37f5a-173">If the one of the subsequent paths is an absolute path, then the combine operation resets starting with that absolute path, discarding all previous combined paths.</span></span>  
  
 <span data-ttu-id="37f5a-174">Chaînes de longueur nulle sont omises dans le chemin combiné.</span><span class="sxs-lookup"><span data-stu-id="37f5a-174">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="37f5a-175">Les paramètres ne sont pas analysés s’ils ont un espace blanc.</span><span class="sxs-lookup"><span data-stu-id="37f5a-175">The parameters are not parsed if they have white space.</span></span>  
  
 <span data-ttu-id="37f5a-176">Tous les caractères non valides pour les noms de répertoires et les fichiers sont interprétés comme étant inacceptables par la `Combine` (méthode), car vous pouvez utiliser ces caractères pour les caractères génériques de recherche.</span><span class="sxs-lookup"><span data-stu-id="37f5a-176">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="37f5a-177">Par exemple, `Path.Combine("c:\\", "*.txt")` peut être incorrect si vous deviez créer un fichier à partir de celui-ci, il est une chaîne de recherche valide.</span><span class="sxs-lookup"><span data-stu-id="37f5a-177">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="37f5a-178">Il est donc interprété correctement par le `Combine` (méthode).</span><span class="sxs-lookup"><span data-stu-id="37f5a-178">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-179">L’exemple suivant combine un tableau de chaînes en un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="37f5a-179">The following example combines an array of strings into a path.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#3)]
 [!code-vb[System.IO.Path.Combine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-180">L’une des chaînes du tableau contient un ou plusieurs des caractères non valides définis dans <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-180">One of the strings in the array contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37f5a-181">L’une des chaînes du tableau est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-181">One of the strings in the array is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" />
        <Parameter Name="path2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path1">
          <span data-ttu-id="37f5a-182">Premier chemin d'accès à combiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-182">The first path to combine.</span>
          </span>
        </param>
        <param name="path2">
          <span data-ttu-id="37f5a-183">Deuxième chemin d'accès à combiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-183">The second path to combine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-184">Combine deux chaînes en un chemin d’accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-184">Combines two strings into a path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-185">Chemins d'accès combinés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-185">The combined paths.</span>
          </span>
          <span data-ttu-id="37f5a-186">Si un des chemins d’accès spécifiés est une chaîne de longueur zéro, cette méthode retourne l’autre chemin d’accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-186">If one of the specified paths is a zero-length string, this method returns the other path.</span>
          </span>
          <span data-ttu-id="37f5a-187">Si <paramref name="path2" /> contient un chemin d'accès absolu, cette méthode retourne <paramref name="path2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-187">If <paramref name="path2" /> contains an absolute path, this method returns <paramref name="path2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-188">Si `path1` n’est pas une référence de lecteur (« C: » ou « D ») et ne se termine pas par un caractère de séparation valide comme défini dans <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, ou <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> est ajouté à `path1` avant la concaténation.</span><span class="sxs-lookup"><span data-stu-id="37f5a-188">If `path1` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` before concatenation.</span></span>  
  
 <span data-ttu-id="37f5a-189">Si `path2` n’inclut pas de racine (par exemple, si `path2` ne commence pas par un caractère de séparation ou une spécification de lecteur), le résultat est une concaténation de deux chemins, avec un caractère de séparation intermédiaire.</span><span class="sxs-lookup"><span data-stu-id="37f5a-189">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="37f5a-190">Si `path2` inclut une racine, `path2` est retourné.</span><span class="sxs-lookup"><span data-stu-id="37f5a-190">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="37f5a-191">Les paramètres ne sont pas analysés s’ils ont un espace blanc.</span><span class="sxs-lookup"><span data-stu-id="37f5a-191">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="37f5a-192">Par conséquent, si `path2` inclut un espace blanc (par exemple, « \file.txt »), le <xref:System.IO.Path.Combine%2A> méthode ajoute `path2` à `path1` au lieu de retourner uniquement `path2`.</span><span class="sxs-lookup"><span data-stu-id="37f5a-192">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1` instead of returning only `path2`.</span></span>  
  
 <span data-ttu-id="37f5a-193">Tous les caractères non valides pour les noms de répertoires et les fichiers sont interprétés comme étant inacceptables par la `Combine` (méthode), car vous pouvez utiliser ces caractères pour les caractères génériques de recherche.</span><span class="sxs-lookup"><span data-stu-id="37f5a-193">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="37f5a-194">Par exemple, `Path.Combine("c:\\", "*.txt")` peut être incorrect si vous deviez créer un fichier à partir de celui-ci, il est une chaîne de recherche valide.</span><span class="sxs-lookup"><span data-stu-id="37f5a-194">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="37f5a-195">Il est donc interprété correctement par le `Combine` (méthode).</span><span class="sxs-lookup"><span data-stu-id="37f5a-195">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
 <span data-ttu-id="37f5a-196">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="37f5a-196">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-197">L’exemple de code suivant montre comment utiliser la `Combine` méthode sur une plateforme de bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="37f5a-197">The following code example demonstrates using the `Combine` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[pathcombine#1](~/samples/snippets/cpp/VS_Snippets_CLR/pathcombine/CPP/pathcombine.cpp#1)]
 [!code-csharp[pathcombine#1](~/samples/snippets/csharp/VS_Snippets_CLR/pathcombine/CS/pathcombine.cs#1)]
 [!code-vb[pathcombine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/pathcombine/VB/pathcombine.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-198">
            <paramref name="path1" /> ou <paramref name="path2" /> contient un ou plusieurs caractères non valides définis dans <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-198">
              <paramref name="path1" /> or <paramref name="path2" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37f5a-199">
            <paramref name="path1" /> ou <paramref name="path2" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-199">
              <paramref name="path1" /> or <paramref name="path2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2, string path3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2, string path3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String, path3 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2, System::String ^ path3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" />
        <Parameter Name="path2" Type="System.String" />
        <Parameter Name="path3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path1">
          <span data-ttu-id="37f5a-200">Premier chemin d'accès à combiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-200">The first path to combine.</span>
          </span>
        </param>
        <param name="path2">
          <span data-ttu-id="37f5a-201">Deuxième chemin d'accès à combiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-201">The second path to combine.</span>
          </span>
        </param>
        <param name="path3">
          <span data-ttu-id="37f5a-202">Troisième chemin d'accès à combiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-202">The third path to combine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-203">Combine trois chaînes en un chemin d'accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-203">Combines three strings into a path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-204">Chemins d'accès combinés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-204">The combined paths.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-205">`path1` doit être un chemin d’accès absolu (par exemple, « d:\archives » ou «\\\archives\public »).</span><span class="sxs-lookup"><span data-stu-id="37f5a-205">`path1` should be an absolute path (for example, "d:\archives" or "\\\archives\public").</span></span> <span data-ttu-id="37f5a-206">Si `path2` ou `path3` est également un chemin d’accès absolu, les chemins d’accès de combiner opération ignore tout précédemment combinés et réinitialise ce chemin d’accès absolu.</span><span class="sxs-lookup"><span data-stu-id="37f5a-206">If `path2` or `path3` is also an absolute path, the combine operation discards all previously combined paths and resets to that absolute path.</span></span>  
  
 <span data-ttu-id="37f5a-207">Chaînes de longueur nulle sont omises dans le chemin combiné.</span><span class="sxs-lookup"><span data-stu-id="37f5a-207">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="37f5a-208">Si `path1` n’est pas une référence de lecteur (« C: » ou « D ») et ne se termine pas par un caractère de séparation valide comme défini dans <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, ou <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> est ajouté à `path1` avant la concaténation.</span><span class="sxs-lookup"><span data-stu-id="37f5a-208">If `path1` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` before concatenation.</span></span>  
  
 <span data-ttu-id="37f5a-209">Si `path2` n’inclut pas de racine (par exemple, si `path2` ne commence pas par un caractère de séparation ou une spécification de lecteur), le résultat est une concaténation de deux chemins, avec un caractère de séparation intermédiaire.</span><span class="sxs-lookup"><span data-stu-id="37f5a-209">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="37f5a-210">Si `path2` inclut une racine, `path2` est retourné.</span><span class="sxs-lookup"><span data-stu-id="37f5a-210">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="37f5a-211">Les paramètres ne sont pas analysés s’ils ont un espace blanc.</span><span class="sxs-lookup"><span data-stu-id="37f5a-211">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="37f5a-212">Par conséquent, si `path2` inclut un espace blanc (par exemple, « \file.txt »), le <xref:System.IO.Path.Combine%2A> méthode ajoute `path2` à `path1`.</span><span class="sxs-lookup"><span data-stu-id="37f5a-212">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1`.</span></span>  
  
 <span data-ttu-id="37f5a-213">Tous les caractères non valides pour les noms de répertoires et les fichiers sont interprétés comme étant inacceptables par la `Combine` (méthode), car vous pouvez utiliser ces caractères pour les caractères génériques de recherche.</span><span class="sxs-lookup"><span data-stu-id="37f5a-213">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="37f5a-214">Par exemple, `Path.Combine("c:\\", "*.txt")` peut être incorrect si vous deviez créer un fichier à partir de celui-ci, il est une chaîne de recherche valide.</span><span class="sxs-lookup"><span data-stu-id="37f5a-214">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="37f5a-215">Il est donc interprété correctement par le `Combine` (méthode).</span><span class="sxs-lookup"><span data-stu-id="37f5a-215">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-216">L’exemple suivant combine trois chemins d’accès.</span><span class="sxs-lookup"><span data-stu-id="37f5a-216">The following example combines three paths.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#1)]
 [!code-vb[System.IO.Path.Combine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-217">
            <paramref name="path1" />, <paramref name="path2" /> ou <paramref name="path3" /> contient un ou plusieurs caractères non valides définis dans <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-217">
              <paramref name="path1" />, <paramref name="path2" />, or <paramref name="path3" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37f5a-218">
            <paramref name="path1" />, <paramref name="path2" /> ou <paramref name="path3" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-218">
              <paramref name="path1" />, <paramref name="path2" />, or <paramref name="path3" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2, string path3, string path4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2, string path3, string path4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String, path3 As String, path4 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2, System::String ^ path3, System::String ^ path4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" />
        <Parameter Name="path2" Type="System.String" />
        <Parameter Name="path3" Type="System.String" />
        <Parameter Name="path4" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path1">
          <span data-ttu-id="37f5a-219">Premier chemin d'accès à combiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-219">The first path to combine.</span>
          </span>
        </param>
        <param name="path2">
          <span data-ttu-id="37f5a-220">Deuxième chemin d'accès à combiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-220">The second path to combine.</span>
          </span>
        </param>
        <param name="path3">
          <span data-ttu-id="37f5a-221">Troisième chemin d'accès à combiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-221">The third path to combine.</span>
          </span>
        </param>
        <param name="path4">
          <span data-ttu-id="37f5a-222">Quatrième chemin d'accès à combiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-222">The fourth path to combine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-223">Combine quatre chaînes en un chemin d'accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-223">Combines four strings into a path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-224">Chemins d'accès combinés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-224">The combined paths.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-225">`path1` doit être un chemin d’accès absolu (par exemple, « d:\archives » ou «\\\archives\public »). Si un des chemins d’accès suivants est également un chemin d’accès absolu, l’opération de combinaison ignore tous les chemins d’accès précédemment combinés et réinitialise ce chemin d’accès absolu.</span><span class="sxs-lookup"><span data-stu-id="37f5a-225">`path1` should be an absolute path (for example, "d:\archives" or "\\\archives\public").If one of the subsequent paths is also an absolute path, the combine operation discards all previously combined paths and resets to that absolute path.</span></span>  
  
 <span data-ttu-id="37f5a-226">Chaînes de longueur nulle sont omises dans le chemin combiné.</span><span class="sxs-lookup"><span data-stu-id="37f5a-226">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="37f5a-227">Si `path1` n’est pas une référence de lecteur (« C: » ou « D ») et ne se termine pas par un caractère de séparation valide comme défini dans <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, ou <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> est ajouté à `path1` avant la concaténation.</span><span class="sxs-lookup"><span data-stu-id="37f5a-227">If `path1` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` before concatenation.</span></span>  
  
 <span data-ttu-id="37f5a-228">Si `path2` n’inclut pas de racine (par exemple, si `path2` ne commence pas par un caractère de séparation ou une spécification de lecteur), le résultat est une concaténation de deux chemins, avec un caractère de séparation intermédiaire.</span><span class="sxs-lookup"><span data-stu-id="37f5a-228">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="37f5a-229">Si `path2` inclut une racine, `path2` est retourné.</span><span class="sxs-lookup"><span data-stu-id="37f5a-229">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="37f5a-230">Les paramètres ne sont pas analysés s’ils ont un espace blanc.</span><span class="sxs-lookup"><span data-stu-id="37f5a-230">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="37f5a-231">Par conséquent, si `path2` inclut un espace blanc (par exemple, « \file.txt »), le <xref:System.IO.Path.Combine%2A> méthode ajoute `path2` à `path1`.</span><span class="sxs-lookup"><span data-stu-id="37f5a-231">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1`.</span></span>  
  
 <span data-ttu-id="37f5a-232">Tous les caractères non valides pour les noms de répertoires et les fichiers sont interprétés comme étant inacceptables par la `Combine` (méthode), car vous pouvez utiliser ces caractères pour les caractères génériques de recherche.</span><span class="sxs-lookup"><span data-stu-id="37f5a-232">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="37f5a-233">Par exemple, `Path.Combine("c:\\", "*.txt")` peut être incorrect si vous deviez créer un fichier à partir de celui-ci, il est une chaîne de recherche valide.</span><span class="sxs-lookup"><span data-stu-id="37f5a-233">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="37f5a-234">Il est donc interprété correctement par le `Combine` (méthode).</span><span class="sxs-lookup"><span data-stu-id="37f5a-234">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-235">L’exemple suivant combine quatre chemins d’accès.</span><span class="sxs-lookup"><span data-stu-id="37f5a-235">The following example combines four paths.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#2)]
 [!code-vb[System.IO.Path.Combine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-236">
            <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> ou <paramref name="path4" /> contient un ou plusieurs caractères non valides définis dans <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-236">
              <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" />, or <paramref name="path4" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37f5a-237">
            <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> ou <paramref name="path4" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-237">
              <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" />, or <paramref name="path4" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DirectorySeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char DirectorySeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char DirectorySeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.DirectorySeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DirectorySeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char DirectorySeparatorChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37f5a-238">Fournit un caractère spécifique à la plateforme, utilisé pour séparer les niveaux de répertoire dans une chaîne de chemin d'accès qui reflète une organisation de système de fichiers hiérarchique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-238">Provides a platform-specific character used to separate directory levels in a path string that reflects a hierarchical file system organization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-239">Le caractère stocké dans ce champ ne peut pas être <xref:System.IO.Path.InvalidPathChars>.</span><span class="sxs-lookup"><span data-stu-id="37f5a-239">The character stored in this field cannot be in <xref:System.IO.Path.InvalidPathChars>.</span></span> <span data-ttu-id="37f5a-240"><xref:System.IO.Path.AltDirectorySeparatorChar> et `DirectorySeparatorChar` sont toutes deux valides pour séparer les niveaux de répertoire dans une chaîne de chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="37f5a-240"><xref:System.IO.Path.AltDirectorySeparatorChar> and `DirectorySeparatorChar` are both valid for separating directory levels in a path string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-241">L’exemple de code suivant illustre l’utilisation de la `DirectorySeparatorChar` champ.</span><span class="sxs-lookup"><span data-stu-id="37f5a-241">The following code example demonstrates the use of the `DirectorySeparatorChar` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryName">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetDirectoryName (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetDirectoryName(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetDirectoryName(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryName (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetDirectoryName(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryName">
      <MemberSignature Language="C#" Value="public static string GetDirectoryName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectoryName(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetDirectoryName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectoryName(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="37f5a-242">Chemin d’accès d’un fichier ou d’un répertoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-242">The path of a file or directory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-243">Retourne les informations relatives au répertoire pour la chaîne de chemin d’accès spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-243">Returns the directory information for the specified path string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-244">Informations relatives au répertoire pour <paramref name="path" />, ou <see langword="null" /> si <paramref name="path" /> indique un répertoire racine ou est null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-244">Directory information for <paramref name="path" />, or <see langword="null" /> if <paramref name="path" /> denotes a root directory or is null.</span>
          </span>
          <span data-ttu-id="37f5a-245">Retourne un élément <see cref="F:System.String.Empty" /> si <paramref name="path" /> ne contient pas d'informations relatives au répertoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-245">Returns <see cref="F:System.String.Empty" /> if <paramref name="path" /> does not contain directory information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-246">Dans la plupart des cas, la chaîne retournée par cette méthode comprend tous les caractères dans le chemin d’accès des mais sans inclure le dernier <xref:System.IO.Path.DirectorySeparatorChar> ou <xref:System.IO.Path.AltDirectorySeparatorChar>.</span><span class="sxs-lookup"><span data-stu-id="37f5a-246">In most cases, the string returned by this method consists of all characters in the path up to but not including the last <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar>.</span></span> <span data-ttu-id="37f5a-247">Si le chemin d’accès se compose d’un répertoire racine, telle que « c:\\», la valeur null est retournée.</span><span class="sxs-lookup"><span data-stu-id="37f5a-247">If the path consists of a root directory, such as "c:\\", null is returned.</span></span> <span data-ttu-id="37f5a-248">Notez que cette méthode ne prend pas en charge les chemins d’accès à l’aide de « fichier : ».</span><span class="sxs-lookup"><span data-stu-id="37f5a-248">Note that this method does not support paths using "file:".</span></span> <span data-ttu-id="37f5a-249">Étant donné que le chemin d’accès retourné n’inclut pas le <xref:System.IO.Path.DirectorySeparatorChar> ou <xref:System.IO.Path.AltDirectorySeparatorChar>, en passant le chemin d’accès retourné de nouveau la <xref:System.IO.Path.GetDirectoryName%2A> méthode entraînera la troncation d’un niveau de dossier chaque appel suivant sur la chaîne de résultat.</span><span class="sxs-lookup"><span data-stu-id="37f5a-249">Because the returned path does not include the <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar>, passing the returned path back into the <xref:System.IO.Path.GetDirectoryName%2A> method will result in the truncation of one folder level per subsequent call on the result string.</span></span> <span data-ttu-id="37f5a-250">Par exemple, en passant le chemin d’accès « C:\Directory\SubDirectory\test.txt » dans la <xref:System.IO.Path.GetDirectoryName%2A> méthode retournera « C:\Directory\SubDirectory ».</span><span class="sxs-lookup"><span data-stu-id="37f5a-250">For example, passing the path "C:\Directory\SubDirectory\test.txt" into the <xref:System.IO.Path.GetDirectoryName%2A> method will return "C:\Directory\SubDirectory".</span></span> <span data-ttu-id="37f5a-251">Passage de cette chaîne, « C:\Directory\SubDirectory », dans <xref:System.IO.Path.GetDirectoryName%2A> entraîne « C:\Directory ».</span><span class="sxs-lookup"><span data-stu-id="37f5a-251">Passing that string, "C:\Directory\SubDirectory", into <xref:System.IO.Path.GetDirectoryName%2A> will result in "C:\Directory".</span></span>  
  
 <span data-ttu-id="37f5a-252">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="37f5a-252">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-253">L’exemple de code suivant montre comment utiliser la `GetDirectoryName` méthode sur une plateforme de bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="37f5a-253">The following code example demonstrates using the `GetDirectoryName` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#3)]
 [!code-csharp[System.IO.Path Members#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#3)]
 [!code-vb[System.IO.Path Members#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-254">Le paramètre <paramref name="path" /> est vide, contient seulement des espaces blancs ou contient des caractères non valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-254">The <paramref name="path" /> parameter contains invalid characters, is empty, or contains only white spaces.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="37f5a-255">
            <block subset="none" type="note">
              <para> Dans le [.NET pour les applications du Windows Store] (http://go.microsoft.com/fwlink/?LinkID=247912) ou la [Bibliothèque de classes portable](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), interceptez l’exception de la classe de base, <see cref="T:System.IO.IOException" />, à la place.  </para>
            </block> Le paramètre <paramref name="path" /> dépasse la longueur maximale définie par le système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-255">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
              </block>  The <paramref name="path" /> parameter is longer than the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExtension(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="37f5a-256">Chaîne de chemin d’accès pour laquelle obtenir l’extension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-256">The path string from which to get the extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-257">Retourne l’extension de la chaîne de chemin d’accès spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-257">Returns the extension of the specified path string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-258">Extension du chemin d'accès spécifié (y compris le point ".") ou <see langword="null" /> ou <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-258">The extension of the specified path (including the period "."), or <see langword="null" />, or <see cref="F:System.String.Empty" />.</span>
          </span>
          <span data-ttu-id="37f5a-259">Si <paramref name="path" /> est <see langword="null" />, <see cref="M:System.IO.Path.GetExtension(System.String)" /> retourne <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-259">If <paramref name="path" /> is <see langword="null" />, <see cref="M:System.IO.Path.GetExtension(System.String)" /> returns <see langword="null" />.</span>
          </span>
          <span data-ttu-id="37f5a-260">Si <paramref name="path" /> ne contient pas d'informations relatives à l'extension, <see cref="M:System.IO.Path.GetExtension(System.String)" /> retourne <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-260">If <paramref name="path" /> does not have extension information, <see cref="M:System.IO.Path.GetExtension(System.String)" /> returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-261">L’extension de `path` s’obtient en recherchant `path` pour un point (.), en commençant par le dernier caractère du chemin d’accès et en continuant vers le début du chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="37f5a-261">The extension of `path` is obtained by searching `path` for a period (.), starting with the last character in path and continuing toward the start of path.</span></span> <span data-ttu-id="37f5a-262">Si un point est trouvé avant un <xref:System.IO.Path.DirectorySeparatorChar> ou <xref:System.IO.Path.AltDirectorySeparatorChar> caractères, la chaîne retournée contient la période et les caractères après celui-ci ; sinon, <xref:System.String.Empty> est retourné.</span><span class="sxs-lookup"><span data-stu-id="37f5a-262">If a period is found before a <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar> character, the returned string contains the period and the characters after it; otherwise, <xref:System.String.Empty> is returned.</span></span>  
  
 <span data-ttu-id="37f5a-263">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="37f5a-263">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-264">L’exemple de code suivant montre comment utiliser la `GetExtension` méthode sur une plateforme de bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="37f5a-264">The following code example demonstrates using the `GetExtension` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#4)]
 [!code-csharp[System.IO.Path Members#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#4)]
 [!code-vb[System.IO.Path Members#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-265">
            <paramref name="path" /> contient un ou plusieurs caractères non valides définis dans <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-265">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetFileName (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetFileName(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetFileName(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileName(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="37f5a-266">Chaîne de chemin d’accès à partir de laquelle obtenir le nom et l’extension de fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-266">The path string from which to obtain the file name and extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-267">Retourne le nom et l’extension de fichier de la chaîne de chemin d’accès spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-267">Returns the file name and extension of the specified path string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-268">Caractères situés après le dernier caractère du répertoire dans <paramref name="path" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-268">The characters after the last directory character in <paramref name="path" />.</span>
          </span>
          <span data-ttu-id="37f5a-269">Si le dernier caractère de <paramref name="path" /> est un caractère de séparation de répertoire ou de volume, cette méthode retourne <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-269">If the last character of <paramref name="path" /> is a directory or volume separator character, this method returns <see cref="F:System.String.Empty" />.</span>
          </span>
          <span data-ttu-id="37f5a-270">Si <paramref name="path" /> est <see langword="null" />, cette méthode retourne <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-270">If <paramref name="path" /> is <see langword="null" />, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-271">La valeur retournée est `null` si le chemin d’accès du fichier est `null`.</span><span class="sxs-lookup"><span data-stu-id="37f5a-271">The returned value is `null` if the file path is `null`.</span></span>  
  
 <span data-ttu-id="37f5a-272">Les caractères de séparation utilisés pour déterminer le début du nom de fichier sont <xref:System.IO.Path.DirectorySeparatorChar> et <xref:System.IO.Path.AltDirectorySeparatorChar>.</span><span class="sxs-lookup"><span data-stu-id="37f5a-272">The separator characters used to determine the start of the file name are <xref:System.IO.Path.DirectorySeparatorChar> and <xref:System.IO.Path.AltDirectorySeparatorChar>.</span></span>  
  
 <span data-ttu-id="37f5a-273">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="37f5a-273">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-274">L’exemple de code suivant illustre le comportement de la `GetFileName` méthode sur une plateforme de bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="37f5a-274">The following code example demonstrates the behavior of the `GetFileName` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#5)]
 [!code-csharp[System.IO.Path Members#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#5)]
 [!code-vb[System.IO.Path Members#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-275">
            <paramref name="path" /> contient un ou plusieurs caractères non valides définis dans <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-275">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileNameWithoutExtension">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetFileNameWithoutExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetFileNameWithoutExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileNameWithoutExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileNameWithoutExtension (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetFileNameWithoutExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileNameWithoutExtension">
      <MemberSignature Language="C#" Value="public static string GetFileNameWithoutExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileNameWithoutExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileNameWithoutExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileNameWithoutExtension (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileNameWithoutExtension(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="37f5a-276">Chemin d’accès au fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-276">The path of the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-277">Retourne le nom de fichier de la chaîne de chemin d’accès spécifiée sans l’extension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-277">Returns the file name of the specified path string without the extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-278">Chaîne retournée par <see cref="M:System.IO.Path.GetFileName(System.String)" />, moins le dernier point (.) et tous les caractères après celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-278">The string returned by <see cref="M:System.IO.Path.GetFileName(System.String)" />, minus the last period (.) and all characters following it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-279">Cette méthode ne vérifie pas que le chemin d’accès ou nom de fichier existe.</span><span class="sxs-lookup"><span data-stu-id="37f5a-279">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="37f5a-280">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="37f5a-280">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-281">L’exemple de code suivant illustre une utilisation de la `GetFileNameWithoutExtension` (méthode).</span><span class="sxs-lookup"><span data-stu-id="37f5a-281">The following code example demonstrates a use of the `GetFileNameWithoutExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#6)]
 [!code-csharp[System.IO.Path Members#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#6)]
 [!code-vb[System.IO.Path Members#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-282">
            <paramref name="path" /> contient un ou plusieurs caractères non valides définis dans <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-282">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullPath">
      <MemberSignature Language="C#" Value="public static string GetFullPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFullPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullPath(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="37f5a-283">Fichier ou répertoire pour lequel obtenir les informations sur le chemin d’accès absolu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-283">The file or directory for which to obtain absolute path information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-284">Retourne le chemin d’accès absolu de la chaîne de chemin d’accès spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-284">Returns the absolute path for the specified path string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-285">Emplacement qualifié complet de <paramref name="path" />, par exemple « C:\MonFichier.txt ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-285">The fully qualified location of <paramref name="path" />, such as "C:\MyFile.txt".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-286">Le .NET Framework ne prend pas en charge l’accès direct aux disques physiques via les chemins d’accès qui sont des noms de périphériques, tels que «\\\\. \PHYSICALDRIVE0 ».</span><span class="sxs-lookup"><span data-stu-id="37f5a-286">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="37f5a-287">Le chemin d’accès absolu inclut toutes les informations requises pour rechercher un fichier ou répertoire sur un système.</span><span class="sxs-lookup"><span data-stu-id="37f5a-287">The absolute path includes all information required to locate a file or directory on a system.</span></span>  
  
 <span data-ttu-id="37f5a-288">Le fichier ou le répertoire spécifié par `path` n’est pas requis pour exister.</span><span class="sxs-lookup"><span data-stu-id="37f5a-288">The file or directory specified by `path` is not required to exist.</span></span> <span data-ttu-id="37f5a-289">Par exemple, si c:\temp\newdir est le répertoire actif, l’appel `GetFullPath` sur un fichier de nom, tel que test.txt retourne c:\temp\newdir\test.txt.</span><span class="sxs-lookup"><span data-stu-id="37f5a-289">For example, if c:\temp\newdir is the current directory, calling `GetFullPath` on a file name such as test.txt returns c:\temp\newdir\test.txt.</span></span> <span data-ttu-id="37f5a-290">Le fichier ne doit pas exister.</span><span class="sxs-lookup"><span data-stu-id="37f5a-290">The file need not exist.</span></span>  
  
 <span data-ttu-id="37f5a-291">Toutefois, si `path` existe, l’appelant doit avoir l’autorisation pour obtenir des informations de chemin d’accès pour `path`.</span><span class="sxs-lookup"><span data-stu-id="37f5a-291">However, if `path` does exist, the caller must have permission to obtain path information for `path`.</span></span> <span data-ttu-id="37f5a-292">Notez que contrairement à la plupart des membres de la <xref:System.IO.Path> (classe), cette méthode accède au système de fichiers.</span><span class="sxs-lookup"><span data-stu-id="37f5a-292">Note that unlike most members of the <xref:System.IO.Path> class, this method accesses the file system.</span></span>  
  
 <span data-ttu-id="37f5a-293">Cette méthode utilise Active directory et les informations de volume actuel pour qualifier complètement `path`.</span><span class="sxs-lookup"><span data-stu-id="37f5a-293">This method uses current directory and current volume information to fully qualify `path`.</span></span> <span data-ttu-id="37f5a-294">Si vous spécifiez un fichier de nom uniquement dans `path`, `GetFullPath` retourne le chemin d’accès qualifié complet du répertoire actuel.</span><span class="sxs-lookup"><span data-stu-id="37f5a-294">If you specify a file name only in `path`, `GetFullPath` returns the fully qualified path of the current directory.</span></span>  
  
 <span data-ttu-id="37f5a-295">Si vous passez dans un nom de fichier court, il est étendu à un nom de fichier long.</span><span class="sxs-lookup"><span data-stu-id="37f5a-295">If you pass in a short file name, it is expanded to a long file name.</span></span>  
  
 <span data-ttu-id="37f5a-296">Si un chemin d’accès ne contient pas de caractères significatifs qu’il n’est pas valide, sauf si elle contient un ou plusieurs «. « caractères suivis par n’importe quel nombre d’espaces, puis il sera analysé en tant que ». « ou ».. ».</span><span class="sxs-lookup"><span data-stu-id="37f5a-296">If a path contains no significant characters it is invalid unless it contains one or more "." characters followed by any number of spaces, then it will be parsed as either "." or "..".</span></span>  
  
 <span data-ttu-id="37f5a-297">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="37f5a-297">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-298">L’exemple de code suivant montre la `GetFullPath` méthode sur une plateforme de bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="37f5a-298">The following code example demonstrates the `GetFullPath` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#7)]
 [!code-csharp[System.IO.Path Members#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#7)]
 [!code-vb[System.IO.Path Members#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-299">
            <paramref name="path" /> est une chaîne de longueur nulle, ne contient que des espaces blancs ou contient un ou plusieurs des caractères non valides définis par <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-299">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
          <span data-ttu-id="37f5a-300">- ou - Le système n’a pas pu récupérer le chemin absolu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-300">-or-  The system could not retrieve the absolute path.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="37f5a-301">L’appelant n’a pas les autorisations requises.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-301">The caller does not have the required permissions.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37f5a-302">
            <paramref name="path" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-302">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="37f5a-303">
            <paramref name="path" /> contient un caractère deux-points (« : ») qui ne fait pas partie d’un identificateur de volume (par exemple, « c:\\ »).</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-303">
              <paramref name="path" /> contains a colon (":") that is not part of a volume identifier (for example, "c:\\").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="37f5a-304">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-304">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="37f5a-305">Pour accéder au chemin d’accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-305">for access to the path.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFullPath">
      <MemberSignature Language="C#" Value="public static string GetFullPath (string path, string basePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullPath(string path, string basePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFullPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullPath (path As String, basePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullPath(System::String ^ path, System::String ^ basePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="basePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="basePath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvalidFileNameChars">
      <MemberSignature Language="C#" Value="public static char[] GetInvalidFileNameChars ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] GetInvalidFileNameChars() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetInvalidFileNameChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInvalidFileNameChars () As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ GetInvalidFileNameChars();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37f5a-306">Obtient un tableau contenant les caractères qui ne sont pas autorisés dans les noms de fichiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-306">Gets an array containing the characters that are not allowed in file names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-307">Tableau contenant les caractères qui ne sont pas autorisés dans les noms de fichiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-307">An array containing the characters that are not allowed in file names.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-308">Le tableau retourné par cette méthode n’est pas garanti pour contenir l’ensemble complet des caractères qui ne sont pas valides dans les noms de fichiers et de répertoires.</span><span class="sxs-lookup"><span data-stu-id="37f5a-308">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="37f5a-309">L’ensemble complet des caractères non valides peut varier selon le système de fichier.</span><span class="sxs-lookup"><span data-stu-id="37f5a-309">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="37f5a-310">Par exemple, sur les plateformes de bureau Windows, les caractères de chemin d’accès non valide peuvent contenir des caractères ASCII/Unicode 1 à 31, ainsi que mettre entre guillemets («), inférieur à (\<), supérieur à (>), canal (&#124;), retour arrière (\b), null (\0) et tabulation (\t).</span><span class="sxs-lookup"><span data-stu-id="37f5a-310">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-311">L’exemple de code suivant montre la <xref:System.IO.Path.GetInvalidFileNameChars%2A> (méthode) et le <xref:System.IO.Path.GetInvalidPathChars%2A> pour récupérer les caractères non valides.</span><span class="sxs-lookup"><span data-stu-id="37f5a-311">The following code example demonstrates the <xref:System.IO.Path.GetInvalidFileNameChars%2A> method and the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve invalid characters.</span></span>  
  
 [!code-cpp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/cpp/example.cpp#1)]
 [!code-csharp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/CS/example.cs#1)]
 [!code-vb[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvalidPathChars">
      <MemberSignature Language="C#" Value="public static char[] GetInvalidPathChars ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] GetInvalidPathChars() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetInvalidPathChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInvalidPathChars () As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ GetInvalidPathChars();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37f5a-312">Obtient un tableau contenant les caractères qui ne sont pas autorisés dans les noms de chemins d’accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-312">Gets an array containing the characters that are not allowed in path names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-313">Tableau contenant les caractères qui ne sont pas autorisés dans les noms de chemins d’accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-313">An array containing the characters that are not allowed in path names.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-314">Le tableau retourné par cette méthode n’est pas garanti pour contenir l’ensemble complet des caractères qui ne sont pas valides dans les noms de fichiers et de répertoires.</span><span class="sxs-lookup"><span data-stu-id="37f5a-314">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="37f5a-315">L’ensemble complet des caractères non valides peut varier selon le système de fichier.</span><span class="sxs-lookup"><span data-stu-id="37f5a-315">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="37f5a-316">Par exemple, sur les plateformes de bureau Windows, les caractères de chemin d’accès non valide peuvent contenir des caractères ASCII/Unicode 1 à 31, ainsi que mettre entre guillemets («), inférieur à (\<), supérieur à (>), canal (&#124;), retour arrière (\b), null (\0) et tabulation (\t).</span><span class="sxs-lookup"><span data-stu-id="37f5a-316">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-317">L’exemple de code suivant montre la <xref:System.IO.Path.GetInvalidFileNameChars%2A> (méthode) et le <xref:System.IO.Path.GetInvalidPathChars%2A> pour récupérer les caractères non valides.</span><span class="sxs-lookup"><span data-stu-id="37f5a-317">The following code example demonstrates the <xref:System.IO.Path.GetInvalidFileNameChars%2A> method and the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve invalid characters.</span></span>  
  
 [!code-cpp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/cpp/example.cpp#1)]
 [!code-csharp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/CS/example.cs#1)]
 [!code-vb[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathRoot">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetPathRoot (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetPathRoot(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetPathRoot(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPathRoot (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetPathRoot(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathRoot">
      <MemberSignature Language="C#" Value="public static string GetPathRoot (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPathRoot(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetPathRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPathRoot (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPathRoot(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="37f5a-318">Chemin d’accès à partir duquel obtenir les informations relatives au répertoire racine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-318">The path from which to obtain root directory information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-319">Obtient les informations relatives au répertoire racine du chemin d’accès spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-319">Gets the root directory information of the specified path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-320">Répertoire racine de <paramref name="path" />, par exemple « C:\\ », ou <see langword="null" /> si <paramref name="path" /> est <see langword="null" />, ou une chaîne vide si <paramref name="path" /> ne contient pas d’informations relatives au répertoire racine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-320">The root directory of <paramref name="path" />, such as "C:\\", or <see langword="null" /> if <paramref name="path" /> is <see langword="null" />, or an empty string if <paramref name="path" /> does not contain root directory information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-321">Cette méthode ne vérifie pas que le chemin d’accès ou nom de fichier existe.</span><span class="sxs-lookup"><span data-stu-id="37f5a-321">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="37f5a-322">Les modèles possibles pour la chaîne retournée par cette méthode sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="37f5a-322">Possible patterns for the string returned by this method are as follows:</span></span>  
  
-   <span data-ttu-id="37f5a-323">Une chaîne vide (`path` spécifié un chemin d’accès relatif sur le lecteur en cours ou le volume).</span><span class="sxs-lookup"><span data-stu-id="37f5a-323">An empty string (`path` specified a relative path on the current drive or volume).</span></span>  
  
-   <span data-ttu-id="37f5a-324">« / » (`path` spécifié un chemin d’accès absolu sur le lecteur actif).</span><span class="sxs-lookup"><span data-stu-id="37f5a-324">"/" (`path` specified an absolute path on the current drive).</span></span>  
  
-   <span data-ttu-id="37f5a-325">« X » (`path` spécifié un chemin d’accès relatif sur un lecteur, où X représente une lettre de lecteur ou volume).</span><span class="sxs-lookup"><span data-stu-id="37f5a-325">"X:" (`path` specified a relative path on a drive, where X represents a drive or volume letter).</span></span>  
  
-   <span data-ttu-id="37f5a-326">« X: / » (`path` spécifié un chemin d’accès absolu sur un lecteur donné).</span><span class="sxs-lookup"><span data-stu-id="37f5a-326">"X:/" (`path` specified an absolute path on a given drive).</span></span>  
  
-   <span data-ttu-id="37f5a-327">«\\\ComputerName\SharedFolder » (un chemin d’accès UNC).</span><span class="sxs-lookup"><span data-stu-id="37f5a-327">"\\\ComputerName\SharedFolder" (a UNC path).</span></span>  
  
 <span data-ttu-id="37f5a-328">Le .NET Framework ne prend pas en charge l’accès direct aux disques physiques via les chemins d’accès qui sont des noms de périphériques, tels que «\\\\. \PHYSICALDRIVE0 ».</span><span class="sxs-lookup"><span data-stu-id="37f5a-328">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="37f5a-329">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="37f5a-329">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-330">L’exemple de code suivant illustre une utilisation de la `GetPathRoot` (méthode).</span><span class="sxs-lookup"><span data-stu-id="37f5a-330">The following code example demonstrates a use of the `GetPathRoot` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#8)]
 [!code-csharp[System.IO.Path Members#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#8)]
 [!code-vb[System.IO.Path Members#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-331">
            <paramref name="path" /> contient un ou plusieurs caractères non valides définis dans <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-331">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
          <span data-ttu-id="37f5a-332">- ou - <see cref="F:System.String.Empty" /> a été passé à <paramref name="path" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-332">-or-  <see cref="F:System.String.Empty" /> was passed to <paramref name="path" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRandomFileName">
      <MemberSignature Language="C#" Value="public static string GetRandomFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRandomFileName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetRandomFileName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRandomFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRandomFileName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37f5a-333">Retourne un nom de dossier ou de fichier aléatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-333">Returns a random folder name or file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-334">Nom de dossier ou de fichier aléatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-334">A random folder name or file name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-335">Le <xref:System.IO.Path.GetRandomFileName%2A> méthode retourne une chaîne aléatoire et forte qui peut être utilisée comme nom de dossier ou un nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="37f5a-335">The <xref:System.IO.Path.GetRandomFileName%2A> method returns a cryptographically strong, random string that can be used as either a folder name or a file name.</span></span> <span data-ttu-id="37f5a-336">Contrairement aux <xref:System.IO.Path.GetTempFileName%2A>, <xref:System.IO.Path.GetRandomFileName%2A> ne crée pas un fichier.</span><span class="sxs-lookup"><span data-stu-id="37f5a-336">Unlike <xref:System.IO.Path.GetTempFileName%2A>, <xref:System.IO.Path.GetRandomFileName%2A> does not create a file.</span></span> <span data-ttu-id="37f5a-337">Lorsque la sécurité de votre système de fichiers est primordiale, cette méthode doit être utilisée à la place de <xref:System.IO.Path.GetTempFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="37f5a-337">When the security of your file system is paramount, this method should be used instead of <xref:System.IO.Path.GetTempFileName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-338">L’exemple suivant montre la sortie de la <xref:System.IO.Path.GetRandomFileName%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="37f5a-338">The following example show output from the <xref:System.IO.Path.GetRandomFileName%2A> method.</span></span>  
  
 [!code-csharp[System.IO.Path Members#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers20.cs#20)]
 [!code-vb[System.IO.Path Members#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers20.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelativePath">
      <MemberSignature Language="C#" Value="public static string GetRelativePath (string relativeTo, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRelativePath(string relativeTo, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetRelativePath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativePath (relativeTo As String, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRelativePath(System::String ^ relativeTo, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relativeTo">To be added.</param>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTempFileName">
      <MemberSignature Language="C#" Value="public static string GetTempFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempFileName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetTempFileName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTempFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTempFileName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37f5a-339">Crée un fichier temporaire de zéro octet nommé de façon univoque sur le disque et retourne le chemin d’accès complet de ce fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-339">Creates a uniquely named, zero-byte temporary file on disk and returns the full path of that file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-340">Chemin d’accès complet du fichier temporaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-340">The full path of the temporary file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-341">Cette méthode crée un fichier temporaire avec un. Extension de fichier TMP.</span><span class="sxs-lookup"><span data-stu-id="37f5a-341">This method creates a temporary file with a .TMP file extension.</span></span> <span data-ttu-id="37f5a-342">Le fichier temporaire est créé dans le dossier temporaire de l’utilisateur, qui est le chemin d’accès retourné par la <xref:System.IO.Path.GetTempPath%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="37f5a-342">The temporary file is created within the user’s temporary folder, which is the path returned by the <xref:System.IO.Path.GetTempPath%2A> method.</span></span>  
  
 <span data-ttu-id="37f5a-343">Le <xref:System.IO.Path.GetTempFileName%2A> méthode déclenchera un <xref:System.IO.IOException> s’il est utilisé pour créer plus de 65 535 fichiers sans supprimer les fichiers temporaires précédents.</span><span class="sxs-lookup"><span data-stu-id="37f5a-343">The <xref:System.IO.Path.GetTempFileName%2A> method will raise an <xref:System.IO.IOException> if it is used to create more than 65535 files without deleting previous temporary files.</span></span>  
  
 <span data-ttu-id="37f5a-344">Le <xref:System.IO.Path.GetTempFileName%2A> méthode déclenchera un <xref:System.IO.IOException> si aucun nom de fichier temporaire unique n’est disponible.</span><span class="sxs-lookup"><span data-stu-id="37f5a-344">The <xref:System.IO.Path.GetTempFileName%2A> method will raise an <xref:System.IO.IOException> if no unique temporary file name is available.</span></span> <span data-ttu-id="37f5a-345">Pour résoudre cette erreur, supprimez tous les fichiers temporaires inutiles.</span><span class="sxs-lookup"><span data-stu-id="37f5a-345">To resolve this error, delete all unneeded temporary files.</span></span>  
  
 <span data-ttu-id="37f5a-346">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="37f5a-346">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="37f5a-347">Une erreur d’E/S se produit, par exemple si aucun nom de fichier temporaire unique n’est disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-347">An I/O error occurs, such as no unique temporary file name is available.</span>
          </span>
          <span data-ttu-id="37f5a-348">\- - ou - Cette méthode n’a pas pu créer un fichier temporaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-348">\- or -  This method was unable to create a temporary file.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="37f5a-349">pour écrire dans le répertoire temporaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-349">for writing to the temporary directory.</span>
          </span>
          <span data-ttu-id="37f5a-350">Énumération associée : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-350">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetTempPath">
      <MemberSignature Language="C#" Value="public static string GetTempPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetTempPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTempPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTempPath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37f5a-351">Retourne le chemin d’accès du dossier temporaire de l’utilisateur actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-351">Returns the path of the current user's temporary folder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-352">Chemin d’accès au dossier temporaire, se terminant par une barre oblique inverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-352">The path to the temporary folder, ending with a backslash.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-353">Cette méthode vérifie l’existence de variables d’environnement dans l’ordre suivant et utilise le premier chemin d’accès trouvé :</span><span class="sxs-lookup"><span data-stu-id="37f5a-353">This method checks for the existence of environment variables in the following order and uses the first path found:</span></span>  
  
1.  <span data-ttu-id="37f5a-354">Le chemin d’accès spécifié par la variable d’environnement TMP.</span><span class="sxs-lookup"><span data-stu-id="37f5a-354">The path specified by the TMP environment variable.</span></span>  
  
2.  <span data-ttu-id="37f5a-355">Le chemin d’accès spécifié par la variable d’environnement TEMP.</span><span class="sxs-lookup"><span data-stu-id="37f5a-355">The path specified by the TEMP environment variable.</span></span>  
  
3.  <span data-ttu-id="37f5a-356">Le chemin d’accès spécifié par la variable d’environnement USERPROFILE.</span><span class="sxs-lookup"><span data-stu-id="37f5a-356">The path specified by the USERPROFILE environment variable.</span></span>  
  
4.  <span data-ttu-id="37f5a-357">Le répertoire Windows.</span><span class="sxs-lookup"><span data-stu-id="37f5a-357">The Windows directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-358">Le code suivant montre comment appeler la méthode <xref:System.IO.Path.GetTempPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="37f5a-358">The following code shows how to call the <xref:System.IO.Path.GetTempPath%2A> method.</span></span>  
  
```vb  
result As String = Path.GetTempPath()  
Console.WriteLine(result)  
```  
  
```csharp  
string result = Path.GetTempPath();  
Console.WriteLine(result);  
```  
  
 <span data-ttu-id="37f5a-359">Cet exemple génère la sortie est similaire à ce qui suit.</span><span class="sxs-lookup"><span data-stu-id="37f5a-359">This example produces output similar to the following.</span></span>  
  
```  
C:\Users\UserName\AppData\Local\Temp\  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="37f5a-360">L’appelant n’a pas les autorisations requises.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-360">The caller does not have the required permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">
          <span data-ttu-id="37f5a-361">pour un accès illimité aux variables d’environnement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-361">for unrestricted access to environment variables.</span>
          </span>
          <span data-ttu-id="37f5a-362">Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-362">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="HasExtension">
      <MemberSignature Language="C#" Value="public static bool HasExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.HasExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasExtension (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool HasExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasExtension">
      <MemberSignature Language="C#" Value="public static bool HasExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.HasExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasExtension (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool HasExtension(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="37f5a-363">Chemin d’accès où rechercher une extension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-363">The path to search for an extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-364">Détermine si un chemin d’accès inclut une extension de nom de fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-364">Determines whether a path includes a file name extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-365">
            <see langword="true" /> si les caractères qui suivent le dernier séparateur de répertoire (\\\ ou /) ou le dernier séparateur de volume (:) dans le chemin d’accès incluent un point (.) suivi d’un ou plusieurs caractères ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-365">
              <see langword="true" /> if the characters that follow the last directory separator (\\\ or /) or volume separator (:) in the path include a period (.) followed by one or more characters; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-366">À partir de la fin de `path`, cette méthode recherche un point (.) suivi d’au moins un caractère.</span><span class="sxs-lookup"><span data-stu-id="37f5a-366">Starting from the end of `path`, this method searches for a period (.) followed by at least one character.</span></span> <span data-ttu-id="37f5a-367">Si ce modèle est trouvé avant un <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, ou <xref:System.IO.Path.VolumeSeparatorChar> caractère est rencontré, cette méthode retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="37f5a-367">If this pattern is found before a <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar> character is encountered, this method returns `true`.</span></span>  
  
 <span data-ttu-id="37f5a-368">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="37f5a-368">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-369">L’exemple de code suivant illustre l’utilisation de la `HasExtension` (méthode).</span><span class="sxs-lookup"><span data-stu-id="37f5a-369">The following code example demonstrates the use of the `HasExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#11)]
 [!code-csharp[System.IO.Path Members#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#11)]
 [!code-vb[System.IO.Path Members#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-370">
            <paramref name="path" /> contient un ou plusieurs caractères non valides définis dans <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-370">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InvalidPathChars">
      <MemberSignature Language="C#" Value="public static readonly char[] InvalidPathChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char[] InvalidPathChars" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.InvalidPathChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvalidPathChars As Char() " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly cli::array &lt;char&gt; ^ InvalidPathChars;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("see GetInvalidPathChars and GetInvalidFileNameChars methods.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37f5a-371">Fournit un tableau de caractères (spécifique à la plateforme) qui ne peuvent pas être spécifiés dans des arguments de chaîne de chemin d'accès passés aux membres de la classe <see cref="T:System.IO.Path" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-371">Provides a platform-specific array of characters that cannot be specified in path string arguments passed to members of the <see cref="T:System.IO.Path" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-372">Le tableau retourné par cette méthode n’est pas garanti pour contenir l’ensemble complet des caractères qui ne sont pas valides dans les noms de fichiers et de répertoires.</span><span class="sxs-lookup"><span data-stu-id="37f5a-372">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="37f5a-373">L’ensemble complet des caractères non valides peut varier selon le système de fichier.</span><span class="sxs-lookup"><span data-stu-id="37f5a-373">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="37f5a-374">Par exemple, sur les plateformes de bureau Windows, les caractères de chemin d’accès non valide peuvent contenir des caractères ASCII/Unicode 1 à 31, ainsi que mettre entre guillemets («), inférieur à (\<), supérieur à (>), canal (&#124;), retour arrière (\b), null (\0) et tabulation (\t).</span><span class="sxs-lookup"><span data-stu-id="37f5a-374">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="37f5a-375">N’utilisez pas <xref:System.IO.Path.InvalidPathChars> si vous pensez que votre code peut s’exécuter dans le même domaine d’application en tant que code non fiable.</span><span class="sxs-lookup"><span data-stu-id="37f5a-375">Do not use <xref:System.IO.Path.InvalidPathChars> if you think your code might execute in the same application domain as untrusted code.</span></span> <span data-ttu-id="37f5a-376"><xref:System.IO.Path.InvalidPathChars> est un tableau, donc ses éléments peuvent être remplacés.</span><span class="sxs-lookup"><span data-stu-id="37f5a-376"><xref:System.IO.Path.InvalidPathChars> is an array, so its elements can be overwritten.</span></span> <span data-ttu-id="37f5a-377">Si le code non fiable remplace des éléments de <xref:System.IO.Path.InvalidPathChars>, elle peut entraîner votre code un dysfonctionnement d’une manière qui pourrait être exploitée.</span><span class="sxs-lookup"><span data-stu-id="37f5a-377">If untrusted code overwrites elements of <xref:System.IO.Path.InvalidPathChars>, it might cause your code to malfunction in ways that could be exploited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-378">L’exemple de code suivant illustre l’utilisation de la `InvalidPathChars` propriété.</span><span class="sxs-lookup"><span data-stu-id="37f5a-378">The following code example demonstrates the use of the `InvalidPathChars` property.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathFullyQualified">
      <MemberSignature Language="C#" Value="public static bool IsPathFullyQualified (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathFullyQualified(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathFullyQualified(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathFullyQualified (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathFullyQualified(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathFullyQualified">
      <MemberSignature Language="C#" Value="public static bool IsPathFullyQualified (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathFullyQualified(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathFullyQualified(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathFullyQualified (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathFullyQualified(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathRooted">
      <MemberSignature Language="C#" Value="public static bool IsPathRooted (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathRooted(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathRooted(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathRooted (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathRooted(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathRooted">
      <MemberSignature Language="C#" Value="public static bool IsPathRooted (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathRooted(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathRooted(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathRooted (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathRooted(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="37f5a-379">Chemin d’accès à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-379">The path to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37f5a-380">Obtient une valeur indiquant si la chaîne de chemin d’accès spécifiée contient une racine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-380">Gets a value indicating whether the specified path string contains a root.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37f5a-381">
            <see langword="true" /> si <paramref name="path" /> contient une racine ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-381">
              <see langword="true" /> if <paramref name="path" /> contains a root; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-382">Le <xref:System.IO.Path.IsPathRooted%2A> méthode retourne `true` si le premier caractère est un caractère de séparation de répertoire tel que «\\», ou si le chemin d’accès commence par une lettre de lecteur et le signe deux-points ( :).</span><span class="sxs-lookup"><span data-stu-id="37f5a-382">The <xref:System.IO.Path.IsPathRooted%2A> method returns `true` if the first character is a directory separator character such as "\\", or if the path starts with a drive letter and colon (:).</span></span> <span data-ttu-id="37f5a-383">Par exemple, elle retourne `true` pour `path` tels que des chaînes «\\\MyDir\\\MyFile.txt », « C:\\\MyDir », ou « C : mydir ».</span><span class="sxs-lookup"><span data-stu-id="37f5a-383">For example, it returns `true` for `path` strings such as "\\\MyDir\\\MyFile.txt", "C:\\\MyDir", or "C:MyDir".</span></span> <span data-ttu-id="37f5a-384">Elle retourne `false` pour `path` chaînes telles que « MyDir ».</span><span class="sxs-lookup"><span data-stu-id="37f5a-384">It returns `false` for `path` strings such as "MyDir".</span></span>  
  
 <span data-ttu-id="37f5a-385">Cette méthode ne vérifie pas que le chemin d’accès ou nom de fichier existe.</span><span class="sxs-lookup"><span data-stu-id="37f5a-385">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="37f5a-386">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="37f5a-386">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-387">L’exemple de code suivant montre comment la `IsPathRooted` méthode peut être utilisée pour tester trois chaînes.</span><span class="sxs-lookup"><span data-stu-id="37f5a-387">The following code example demonstrates how the `IsPathRooted` method can be used to test three strings.</span></span>  
  
 [!code-cpp[System.IO.Path Members#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#12)]
 [!code-csharp[System.IO.Path Members#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#12)]
 [!code-vb[System.IO.Path Members#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37f5a-388">
            <paramref name="path" /> contient un ou plusieurs caractères non valides définis dans <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-388">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.ReadOnlySpan`1&lt;char&gt; path3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), path3 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path3" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <param name="path3">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public static readonly char PathSeparator;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char PathSeparator" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathSeparator As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char PathSeparator;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37f5a-389">Caractère de séparation spécifique à la plateforme, utilisé pour séparer les chaînes de chemin d’accès dans les variables d’environnement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-389">A platform-specific separator character used to separate path strings in environment variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-390">Sur les plateformes de bureau Windows, la valeur de ce champ est le point-virgule ( ;) par défaut, mais peut varier sur d’autres plateformes.</span><span class="sxs-lookup"><span data-stu-id="37f5a-390">On Windows-based desktop platforms, the value of this field is the semicolon (;) by default, but might vary on other platforms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-391">L’exemple de code suivant illustre l’utilisation de la `PathSeparator` champ.</span><span class="sxs-lookup"><span data-stu-id="37f5a-391">The following code example demonstrates the use of the `PathSeparator` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryJoin">
      <MemberSignature Language="C#" Value="public static bool TryJoin (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryJoin(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryJoin (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryJoin(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryJoin">
      <MemberSignature Language="C#" Value="public static bool TryJoin (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3, Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryJoin(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.ReadOnlySpan`1&lt;char&gt; path3, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryJoin (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), path3 As ReadOnlySpan(Of Char), destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryJoin(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3, Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path3" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <param name="path3">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VolumeSeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char VolumeSeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char VolumeSeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.VolumeSeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VolumeSeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char VolumeSeparatorChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37f5a-392">Fournit un caractère de séparation de volume spécifique à la plateforme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37f5a-392">Provides a platform-specific volume separator character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37f5a-393">La valeur de ce champ est un signe deux-points ( :) sur Windows, Macintosh et une barre oblique (/) sur les systèmes d’exploitation UNIX.</span><span class="sxs-lookup"><span data-stu-id="37f5a-393">The value of this field is a colon (:) on Windows and Macintosh, and a slash (/) on UNIX operating systems.</span></span> <span data-ttu-id="37f5a-394">Cela est particulièrement utile pour l’analyse des chemins d’accès tel que « c:\windows » ou « Dossier MacVolume : System ».</span><span class="sxs-lookup"><span data-stu-id="37f5a-394">This is most useful for parsing paths such as "c:\windows" or "MacVolume:System Folder".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37f5a-395">L’exemple de code suivant illustre l’utilisation de la `VolumeSeparatorChar` champ.</span><span class="sxs-lookup"><span data-stu-id="37f5a-395">The following code example demonstrates the use of the `VolumeSeparatorChar` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>