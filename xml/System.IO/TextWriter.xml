<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextWriter.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac537db43c3bb762501a2a8726c80dee4afa2a84a6a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37db43c3bb762501a2a8726c80dee4afa2a84a6a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Represents a writer that can write a sequential series of characters.</source>
          <target state="translated">Représente un writer capable d'écrire une série de caractères séquentiels.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>This class is abstract.</source>
          <target state="translated">Cette classe est abstraite.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> is the abstract base class of <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.StringWriter&gt;</ph>, which write characters to streams and strings, respectively.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> est la classe de base abstraite de <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> et <ph id="ph3">&lt;xref:System.IO.StringWriter&gt;</ph>, qui écrivent des caractères dans les flux et les chaînes, respectivement.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>Create an instance of <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> to write an object to a string, write strings to a file, or to serialize XML.</source>
          <target state="translated">Créez une instance de <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> pour écrire un objet dans une chaîne, écrire des chaînes dans un fichier ou à la sérialisation XML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>You can also use an instance of <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> to write text to a custom backing store using the same APIs you would use for a string or a stream, or to add support for text formatting.</source>
          <target state="translated">Vous pouvez également utiliser une instance de <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> pour écrire du texte dans un magasin de sauvegarde personnalisé à l’aide des mêmes API que pour une chaîne ou un flux de données, ou pour ajouter la prise en charge de la mise en forme du texte.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>All the <ph id="ph1">`Write`</ph> methods of <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> having primitive data types as parameters write out the values as strings.</source>
          <target state="translated">Tous les <ph id="ph1">`Write`</ph> méthodes de <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> ayant des types de données primitifs comme paramètres écrivent les valeurs sous forme de chaînes.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> is not thread safe.</source>
          <target state="translated">Par défaut, un <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> n’est pas thread-safe.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>See <ph id="ph1">&lt;xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType&gt;</ph> for a thread-safe wrapper.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType&gt;</ph> pour un wrapper thread-safe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Ce type implémente le <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Lorsque vous avez terminé à l’aide de n’importe quel type qui dérive de ce type, vous devez la supprimer directement ou indirectement.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Pour supprimer le type directement, vous devez appeler sa <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> méthode dans un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloc.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Pour la supprimer indirectement, utiliser une construction de langage telles que <ph id="ph1">`using`</ph> (en c#) ou <ph id="ph2">`Using`</ph> (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Pour plus d’informations, consultez Suppression et la section « Utilisant un objet qui implémente IDisposable » dans la <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> rubrique de l’interface.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> est une classe abstraite.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Par conséquent, vous n’instanciez pas il dans votre code.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>The <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> class derives from <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> and provides implementations of the members for writing to a stream.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> dérive de la classe <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> et fournit des implémentations des membres pour l’écriture dans un flux de données.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>The following example shows how to write two lines that consist of string values to a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant montre comment écrire les deux lignes qui se composent de valeurs de chaîne dans un fichier texte à l’aide de la <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>Override Dispose in a derived class to provide</source>
          <target state="translated">Substituez Dispose dans une classe dérivée pour fournir</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>A derived class must minimally implement the <ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Write(System.Char)" /&gt;</ph> method to make a useful instance of <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Une classe dérivée doit au moins implémenter la <ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Write(System.Char)" /&gt;</ph> méthode pour créer une instance utile de <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor">
          <source>Use this constructor overload when you do not want to provide a value for the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property.</source>
          <target state="translated">Utilisez cette surcharge de constructeur lorsque vous ne souhaitez pas fournir une valeur pour le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor">
          <source>When the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, the culture of the current thread is used for formatting.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> propriété est <ph id="ph2">`null`</ph>, la culture du thread actuel est utilisée pour mettre en forme.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor">
          <source>Use this constructor for derived classes.</source>
          <target state="translated">Utilisez ce constructeur pour les classes dérivées.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object that controls formatting.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> qui contrôle la mise en forme.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> class with the specified format provider.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> avec le fournisseur de format spécifié.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>Use this constructor overload to provide a value for the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property.</source>
          <target state="translated">Utilisez cette surcharge de constructeur pour fournir une valeur pour le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>The value of the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property specifies the culture-specific formatting that is used when you call the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">La valeur de la <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> propriété spécifie la mise en forme de la culture spécifique qui est utilisé lorsque vous appelez le <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>If you do not want to provide a format provider, you create an instance by using the <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor&gt;</ph> constructor, which sets the <ph id="ph2">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Si vous ne souhaitez pas fournir un fournisseur de format, vous créez une instance à l’aide de la <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor&gt;</ph> constructeur, ce qui affecte le <ph id="ph2">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> propriété <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>When the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, the culture of the current thread is used for formatting.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> propriété est <ph id="ph2">`null`</ph>, la culture du thread actuel est utilisée pour mettre en forme.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Close">
          <source>Closes the current writer and releases any system resources associated with the writer.</source>
          <target state="translated">Ferme le writer actuel et libère toutes les ressources système qui lui sont associées.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>This implementation of <ph id="ph1">`Close`</ph> calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method and passes it a <ph id="ph3">`true`</ph> value.</source>
          <target state="translated">Cette implémentation de <ph id="ph1">`Close`</ph> appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> méthode et passe un <ph id="ph3">`true`</ph> valeur.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> or <ph id="ph2">`Close`</ph>.</source>
          <target state="translated">Vider le flux n’effacera pas son encodeur sous-jacent sauf si vous appelez explicitement <ph id="ph1">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> ou <ph id="ph2">`Close`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>Setting the <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Définition de la <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> propriété <ph id="ph2">`true`</ph> signifie que les données sont supprimées de la mémoire tampon dans le flux, mais l’état de l’encodeur n’est pas vidé.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Cela permet à l’encodeur de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Ce scénario affecte UTF8 et UTF7 où certains caractères peuvent être codés uniquement après que l’encodeur a reçu les caractères adjacents.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>In derived classes, do not override the <ph id="ph1">&lt;xref:System.IO.TextWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">Dans les classes dérivées, ne substituez pas la <ph id="ph1">&lt;xref:System.IO.TextWriter.Close%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>Instead, override the <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method to add code for releasing resources.</source>
          <target state="translated">Au lieu de cela, remplacez le <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> méthode pour ajouter du code pour libérer des ressources.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.IO.TextWriter.CoreNewLine">
          <source>Stores the newline characters used for this <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</source>
          <target state="translated">Stocke les caractères de saut de ligne utilisés pour ce <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextWriter.CoreNewLine">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">Libère toutes les ressources utilisées par l'objet <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">Libère toutes les ressources utilisées par l'objet <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">Appelez la méthode <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> une fois que vous avez terminé d'utiliser <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> in an unusable state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> rend le <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> inutilisable.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> was occupying.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph>, vous devez libérer toutes les références à la <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> pour que le garbage collector puisse récupérer la mémoire qui le <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> occupée.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>implémentant une méthode de suppression<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> Always call <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Remarque<ept id="p1">**</ept> Appelez toujours <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> avant de libérer votre dernière référence au <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> de l'objet <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>This method is called by <ph id="ph1">`Dispose`</ph> and <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est appelée par <ph id="ph1">`Dispose`</ph> et <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>By default, this method specifies the <ph id="ph1">`disposing`</ph> parameter as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Par défaut, cette méthode spécifie les <ph id="ph1">`disposing`</ph> paramètre en tant que <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> specifies the <ph id="ph2">`disposing`</ph> parameter as <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> Spécifie le <ph id="ph2">`disposing`</ph> paramètre en tant que <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> references.</source>
          <target state="translated">Si le paramètre <ph id="ph1">`disposing`</ph> a la valeur <ph id="ph2">`true`</ph>, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Cette méthode appelle la méthode <ph id="ph1">`Dispose`</ph> de chaque objet référencé.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /&gt;</ph> peut être appelée plusieurs fois par d'autres objets.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Lorsque vous substituez cette méthode, veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>For more information about how to implement this method, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la façon d’implémenter cette méthode, consultez <bpt id="p1">[</bpt>implémentant une méthode de suppression<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> et <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.IO.TextWriter.Encoding">
          <source>When overridden in a derived class, returns the character encoding in which the output is written.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, retourne l'encodage de caractères dans lequel la sortie est écrite.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.Encoding">
          <source>The character encoding in which the output is written.</source>
          <target state="translated">Encodage de caractères dans lequel la sortie est écrite.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.Encoding">
          <source>This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <ph id="ph1">`TextWriter`</ph>.</source>
          <target state="translated">Cette propriété est nécessaire dans certains scénarios XML où un en-tête doit être écrit, contenant l’encodage utilisé par le <ph id="ph1">`TextWriter`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.Encoding">
          <source>This enables the XML code to consume an arbitrary <ph id="ph1">`TextWriter`</ph> and generate the correct XML header.</source>
          <target state="translated">Cela permet au code XML de consommer un arbitraire <ph id="ph1">`TextWriter`</ph> et générer l’en-tête XML correct.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.Encoding">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Flush">
          <source>Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">Efface toutes les mémoires tampons pour le writer actuel et provoque l'écriture des données mises en mémoire tampon sur l'appareil sous-jacent.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</source>
          <target state="translated">Cette méthode par défaut n’exécute aucune opération, mais les classes dérivées peuvent substituer la méthode pour fournir la fonctionnalité appropriée.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Flush`</ph> or <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">Vider le flux n’effacera pas son encodeur sous-jacent sauf si vous appelez explicitement <ph id="ph1">`Flush`</ph> ou <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Paramètre <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> à <ph id="ph2">`true`</ph> signifie que les données sont supprimées de la mémoire tampon dans le flux, mais l’état de l’encodeur n’est pas vidé.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Cela permet à l’encodeur de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Ce scénario affecte UTF8 et UTF7 où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.FlushAsync">
          <source>Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">Efface de façon asynchrone toutes les mémoires tampons pour le writer actuel et provoque l'écriture des données mises en mémoire tampon sur l'appareil sous-jacent.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.FlushAsync">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">Tâche qui représente l’opération de vidage asynchrone.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.FlushAsync">
          <source>The text writer is disposed.</source>
          <target state="translated">Le writer de texte est supprimé.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.FlushAsync">
          <source>The writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer est actuellement utilisé par une opération d'écriture précédente.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.IO.TextWriter.FormatProvider">
          <source>Gets an object that controls formatting.</source>
          <target state="translated">Obtient un objet qui contrôle la mise en forme.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object for a specific culture, or the formatting of the current culture if no other culture is specified.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> pour une culture spécifique, ou mise en forme de la culture actuelle si aucune autre culture n'est spécifiée.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>The value of the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property specifies the culture-specific formatting that is used when you call the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">La valeur de la <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> propriété spécifie la mise en forme de la culture spécifique qui est utilisé lorsque vous appelez le <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>If you do not want to provide a format provider, you create an instance by using the <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor&gt;</ph> constructor, which sets the <ph id="ph2">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Si vous ne souhaitez pas fournir un fournisseur de format, vous créez une instance à l’aide de la <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor&gt;</ph> constructeur, ce qui affecte le <ph id="ph2">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> propriété <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>When the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property contains <ph id="ph2">`null`</ph>, the culture of the current thread is used for formatting.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> propriété contient <ph id="ph2">`null`</ph>, la culture du thread actuel est utilisée pour mettre en forme.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>For an example of creating a file and writing text to a file, see <bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.</source>
          <target state="translated">Pour obtenir un exemple de création d’un fichier et d’écrire du texte dans un fichier, consultez <bpt id="p1">[</bpt>Comment : écrire du texte dans un fichier<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>For an example of reading text from a file, see <bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.</source>
          <target state="translated">Pour obtenir un exemple de texte de la lecture à partir d’un fichier, consultez <bpt id="p1">[</bpt>Comment : lire le texte d’un fichier<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>For an example of reading from and writing to a binary file, see <bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.</source>
          <target state="translated">Pour obtenir un exemple de lecture et écriture dans un fichier binaire, consultez <bpt id="p1">[</bpt>Comment : lire et écrire dans un nouveau fichier de données<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.IO.TextWriter.NewLine">
          <source>Gets or sets the line terminator string used by the current <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit la chaîne de marque de fin de ligne utilisée pour le <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>The line terminator string for the current <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</source>
          <target state="translated">Chaîne de marque de fin de ligne pour le <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>The line terminator string is written to the text stream whenever one of the <ph id="ph1">`WriteLine`</ph> methods is called.</source>
          <target state="translated">La chaîne de marque de fin de ligne est écrit dans le flux de texte chaque fois qu’un seul de le <ph id="ph1">`WriteLine`</ph> méthodes est appelée.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>In order for text written by the <ph id="ph1">`TextWriter`</ph> to be readable by a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, only "\n" or "\r\n" should be used as terminator strings.</source>
          <target state="translated">Dans l’ordre pour le texte écrit par le <ph id="ph1">`TextWriter`</ph> pour être lus par un <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, uniquement « \n » ou « \r\n » doit être utilisé en tant que chaînes de terminaison.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>If <ph id="ph1">`NewLine`</ph> is set to <ph id="ph2">`null`</ph>, the default newline character is used instead.</source>
          <target state="translated">Si <ph id="ph1">`NewLine`</ph> a la valeur <ph id="ph2">`null`</ph>, le caractère de saut de ligne par défaut est utilisé à la place.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="F:System.IO.TextWriter.Null">
          <source>Provides a <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> with no backing store that can be written to, but not read from.</source>
          <target state="translated">Fournit un élément <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> sans magasin de stockage dans lequel il est possible d'écrire, mais pas de lire.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextWriter.Null">
          <source>Use <ph id="ph1">`Null`</ph> to redirect output to a stream that will not consume any operating system resources.</source>
          <target state="translated">Utilisez <ph id="ph1">`Null`</ph> pour rediriger la sortie vers un flux qui ne consomme pas les ressources du système d’exploitation.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextWriter.Null">
          <source>When the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph> methods are invoked on <ph id="ph2">`Null`</ph>, the call simply returns, and no data is actually written to any backing store.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph> méthodes sont appelées sur <ph id="ph2">`Null`</ph>, l’appel retourne simplement et aucune donnée n’est réellement écrits dans n’importe quel magasin de stockage.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextWriter.Null">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> to synchronize.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> à synchroniser.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>Creates a thread-safe wrapper around the specified <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</source>
          <target state="translated">Crée un wrapper thread-safe autour du <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>A thread-safe wrapper.</source>
          <target state="translated">Wrapper thread-safe.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>All write operations to the returned wrapper will be thread safe.</source>
          <target state="translated">Toutes les opérations dans le wrapper retourné seront thread-safe d’écriture.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>You call this method to ensure that only one thread at a time can execute the methods on the <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> instance that is returned.</source>
          <target state="translated">Vous appelez cette méthode pour vous assurer qu’un seul thread à la fois peut exécuter les méthodes sur le <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> instance qui est retournée.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>For more information about synchronization and threading, see <bpt id="p1">[</bpt>Synchronizing Data for Multithreading<ept id="p1">](~/docs/standard/threading/synchronizing-data-for-multithreading.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la synchronisation et le threading, consultez <bpt id="p1">[</bpt>synchronisation des données pour le Multithreading<ept id="p1">](~/docs/standard/threading/synchronizing-data-for-multithreading.md)</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Writes data to a text string or stream.</source>
          <target state="translated">Écrit des données dans un flux ou une chaîne de texte.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value to write.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> à écrire.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>Writes the text representation of a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'une valeur <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de la valeur spécifiée est créée en appelant le <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>This method outputs either <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode génère une <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>The character to write to the text stream.</source>
          <target state="translated">Caractère à écrire dans le flux de texte.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>Writes a character to the text string or stream.</source>
          <target state="translated">Écrit un caractère dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</source>
          <target state="translated">Cette méthode par défaut n’exécute aucune opération, mais les classes dérivées peuvent substituer la méthode pour fournir la fonctionnalité appropriée.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>The character array to write to the text stream.</source>
          <target state="translated">Tableau de caractères à écrire dans le flux de texte.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>Writes a character array to the text string or stream.</source>
          <target state="translated">Écrit un tableau de caractères dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode ne pas rechercher la chaîne spécifiée pour les caractères de saut de ligne individuels (0x000a hexadécimal) et les remplacer par <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>This default method calls the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method and passes the entire character array.</source>
          <target state="translated">Cette méthode par défaut appelle la <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> méthode et passe le tableau de caractères entière.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>If the character array is <ph id="ph1">`null`</ph>, nothing is written.</source>
          <target state="translated">Si le tableau de caractères est <ph id="ph1">`null`</ph>, rien n’est écrit.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>The decimal value to write.</source>
          <target state="translated">Valeur décimale à écrire.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>Writes the text representation of a decimal value to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'une valeur décimale dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>The 8-byte floating-point value to write.</source>
          <target state="translated">Valeur à virgule flottante de 8 octets à écrire.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>Writes the text representation of an 8-byte floating-point value to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'une valeur à virgule flottante de 8 octets dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de la valeur spécifiée est créée en appelant le <ph id="ph1">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>The 4-byte signed integer to write.</source>
          <target state="translated">Entier signé de 4 octets à écrire.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>Writes the text representation of a 4-byte signed integer to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'un entier signé de 4 octets dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de la valeur spécifiée est créée en appelant le <ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>The 8-byte signed integer to write.</source>
          <target state="translated">Entier signé de 8 octets à écrire.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>Writes the text representation of an 8-byte signed integer to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'un entier signé de 8 octets dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de la valeur spécifiée est créée en appelant le <ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : écrire du texte dans un fichier<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>The object to write.</source>
          <target state="translated">Objet à écrire.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>Writes the text representation of an object to the text string or stream by calling the <ph id="ph1">&lt;see langword="ToString" /&gt;</ph> method on that object.</source>
          <target state="translated">Écrit la représentation textuelle d'un objet dans la chaîne ou le flux de texte en appelant la méthode <ph id="ph1">&lt;see langword="ToString" /&gt;</ph> sur cet objet.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.String%29&gt;</ph> overload.</source>
          <target state="translated">Cette surcharge est équivalente à la <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.String%29&gt;</ph> de surcharge.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>If the specified object is <ph id="ph1">`null`</ph>, no action is taken and no exception is thrown.</source>
          <target state="translated">Si l’objet spécifié est <ph id="ph1">`null`</ph>, aucune action n’est effectuée et aucune exception n’est levée.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>Otherwise, the object's <ph id="ph1">`ToString`</ph> method is called to produce the string representation, and the resulting string is then written to the output stream.</source>
          <target state="translated">Dans le cas contraire, l’objet <ph id="ph1">`ToString`</ph> méthode est appelée pour générer la représentation sous forme de chaîne, et la chaîne résultante est ensuite écrites dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>The 4-byte floating-point value to write.</source>
          <target state="translated">Valeur à virgule flottante de 4 octets à écrire.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>Writes the text representation of a 4-byte floating-point value to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'une valeur à virgule flottante de 4 octets dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de la valeur spécifiée est créée en appelant le <ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>The string to write.</source>
          <target state="translated">Chaîne à écrire.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>Writes a string to the text string or stream.</source>
          <target state="translated">Écrit une chaîne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> overload.</source>
          <target state="translated">Cette surcharge est équivalente à la <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> de surcharge.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode ne pas rechercher la chaîne spécifiée pour les caractères de saut de ligne individuels (0x000a hexadécimal) et les remplacer par <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, nothing is written to the text stream.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> a la valeur <ph id="ph2">`null`</ph>, rien n'est écrit dans le flux de texte.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>The 4-byte unsigned integer to write.</source>
          <target state="translated">Entier non signé de 4 octets à écrire.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>Writes the text representation of a 4-byte unsigned integer to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'un entier non signé de 4 octets dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de la valeur spécifiée est créée en appelant le <ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>The 8-byte unsigned integer to write.</source>
          <target state="translated">Entier non signé de 8 octets à écrire.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>Writes the text representation of an 8-byte unsigned integer to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'un entier non signé de 8 octets dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de la valeur spécifiée est créée en appelant le <ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The object to format and write.</source>
          <target state="translated">Objet à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Writes a formatted string to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Écrit une chaîne mise en forme dans la chaîne ou le flux de texte, en utilisant la même sémantique que la méthode <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise la mise en forme composite pour convertir la valeur d’un objet en sa représentation sous forme de chaîne et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la fonctionnalité de mise en forme composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation sous forme de chaîne de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">La syntaxe d’un élément de format est comme suit :</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Les éléments entre crochets sont facultatifs.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme de fonctionnalité, y compris la syntaxe d’un élément de format composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>index</source>
          <target state="translated">index</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Position de base zéro dans la liste de paramètres de l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si l’objet spécifié par <bpt id="p1">*</bpt>index<ept id="p1">*</ept> est <ph id="ph1">`null`</ph>, l’élément de format est remplacé par <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Because this overload has only a single object in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0.</source>
          <target state="translated">Étant donné que cette surcharge possède un seul objet dans son paramètre de liste, la valeur de <bpt id="p1">*</bpt>index<ept id="p1">*</ept> doit toujours être 0.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">S’il n’existe pas de paramètre dans le <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, un <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Le nombre minimal de caractères dans la représentation sous forme de chaîne du paramètre.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Si elle est positive, le paramètre est aligné à droite ; s’il est négatif, il est aligné à gauche.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Chaîne de format standard ou personnalisé qui est pris en charge par l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Les valeurs possibles pour <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> sont les mêmes que les valeurs prises en charge par l’objet <ph id="ph1">`ToString(string format)`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Si <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> n’est pas spécifié et l’objet à mettre en forme implémente la <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> est passé en tant que la valeur de la <ph id="ph3">`format`</ph> paramètre qui est utilisé comme le <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> chaîne de format.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Le début et fin des accolades, « { » et «} », sont requis.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Pour spécifier une accolade littérale dans <ph id="ph1">`format`</ph>, spécifiez deux début ou fin accolades ; autrement dit, « {{ » ou «}} ».</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode ne pas rechercher la chaîne spécifiée pour les caractères de saut de ligne individuels (0x000a hexadécimal) et les remplacer par <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Si un objet spécifié n’est pas référencé dans la chaîne de format, il est ignoré.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> n'est pas une chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</source>
          <target state="translated">L'index d'un élément de format est inférieur à 0 (zéro) ou supérieur ou égal au nombre d'objets à mettre en forme (qui, pour cette surcharge de méthode, s'élève à un).</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format and write.</source>
          <target state="translated">Tableau d'objets contenant aucun, un ou plusieurs objets à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Writes a formatted string to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Écrit une chaîne mise en forme dans la chaîne ou le flux de texte, en utilisant la même sémantique que la méthode <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise la mise en forme composite pour convertir la valeur d’un objet en sa représentation sous forme de chaîne et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la fonctionnalité de mise en forme composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation sous forme de chaîne de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">La syntaxe d’un élément de format est comme suit :</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Les éléments entre crochets sont facultatifs.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme de fonctionnalité, y compris la syntaxe d’un élément de format composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>index</source>
          <target state="translated">index</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Position de base zéro dans la liste de paramètres de l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si l’objet spécifié par <bpt id="p1">*</bpt>index<ept id="p1">*</ept> est <ph id="ph1">`null`</ph>, l’élément de format est remplacé par <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Because this overload has an array in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be less than the length of the array.</source>
          <target state="translated">Étant donné que cette surcharge possède un tableau dans son paramètre de liste, la valeur de <bpt id="p1">*</bpt>index<ept id="p1">*</ept> doit toujours être inférieure à la longueur du tableau.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">S’il n’existe pas de paramètre dans le <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, un <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Le nombre minimal de caractères dans la représentation sous forme de chaîne du paramètre.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Si elle est positive, le paramètre est aligné à droite ; s’il est négatif, il est aligné à gauche.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Chaîne de format standard ou personnalisé qui est pris en charge par l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Les valeurs possibles pour <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> sont les mêmes que les valeurs prises en charge par l’objet <ph id="ph1">`ToString(string format)`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Si <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> n’est pas spécifié et l’objet à mettre en forme implémente la <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> est passé en tant que la valeur de la <ph id="ph3">`format`</ph> paramètre qui est utilisé comme le <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> chaîne de format.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Le début et fin des accolades, « { » et «} », sont requis.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Pour spécifier une accolade littérale dans <ph id="ph1">`format`</ph>, spécifiez deux début ou fin accolades ; autrement dit, « {{ » ou «}} ».</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode ne pas rechercher la chaîne spécifiée pour les caractères de saut de ligne individuels (0x000a hexadécimal) et les remplacer par <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Si un objet spécifié n’est pas référencé dans la chaîne de format, il est ignoré.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> n'est pas une chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <ph id="ph1">&lt;paramref name="arg" /&gt;</ph> array.</source>
          <target state="translated">L’index d’un élément de format est inférieur à 0 (zéro), ou supérieur ou égal à la longueur du tableau <ph id="ph1">&lt;paramref name="arg" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">Tableau de caractères à partir duquel les données doivent être écrites.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start retrieving data.</source>
          <target state="translated">Position du caractère dans la mémoire tampon à laquelle commencer la récupération des données.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Nombre de caractères à écrire.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the text string or stream.</source>
          <target state="translated">Écrit un sous-tableau de caractères dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This method will write <ph id="ph1">`count`</ph> characters of data into this <ph id="ph2">`TextWriter`</ph> from the <ph id="ph3">`buffer`</ph> character array starting at position <ph id="ph4">`index`</ph>.</source>
          <target state="translated">Cette méthode écrit <ph id="ph1">`count`</ph> caractères de données dans <ph id="ph2">`TextWriter`</ph> à partir de la <ph id="ph3">`buffer`</ph> tableau de caractères commençant à la position <ph id="ph4">`index`</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> overload for each character in <ph id="ph2">`buffer`</ph> between <ph id="ph3">`index`</ph> and (<ph id="ph4">`index`</ph><ph id="ph5"> + </ph><ph id="ph6">`count`</ph>).</source>
          <target state="translated">Cette surcharge est équivalente à la <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> de surcharge pour chaque caractère dans <ph id="ph2">`buffer`</ph> entre <ph id="ph3">`index`</ph> et (<ph id="ph4">`index`</ph><ph id="ph5"> + </ph><ph id="ph6">`count`</ph>).</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">La longueur de la mémoire tampon moins <ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieure à <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est un nombre négatif.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The first object to format and write.</source>
          <target state="translated">Premier objet à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The second object to format and write.</source>
          <target state="translated">Deuxième objet à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Writes a formatted string to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Écrit une chaîne mise en forme dans la chaîne ou le flux de texte, en utilisant la même sémantique que la méthode <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise la mise en forme composite pour convertir la valeur d’un objet en sa représentation sous forme de chaîne et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la fonctionnalité de mise en forme composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation sous forme de chaîne de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">La syntaxe d’un élément de format est comme suit :</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Les éléments entre crochets sont facultatifs.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme de fonctionnalité, y compris la syntaxe d’un élément de format composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>index</source>
          <target state="translated">index</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Position de base zéro dans la liste de paramètres de l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si l’objet spécifié par <bpt id="p1">*</bpt>index<ept id="p1">*</ept> est <ph id="ph1">`null`</ph>, l’élément de format est remplacé par <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Because this overload has two objects in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0 or 1.</source>
          <target state="translated">Étant donné que cette surcharge a deux objets dans son paramètre de liste, la valeur de <bpt id="p1">*</bpt>index<ept id="p1">*</ept> doit toujours être 0 ou 1.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">S’il n’existe pas de paramètre dans le <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, un <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Le nombre minimal de caractères dans la représentation sous forme de chaîne du paramètre.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Si elle est positive, le paramètre est aligné à droite ; s’il est négatif, il est aligné à gauche.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Chaîne de format standard ou personnalisé qui est pris en charge par l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Les valeurs possibles pour <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> sont les mêmes que les valeurs prises en charge par l’objet <ph id="ph1">`ToString(string format)`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Si <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> n’est pas spécifié et l’objet à mettre en forme implémente la <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> est passé en tant que la valeur de la <ph id="ph3">`format`</ph> paramètre qui est utilisé comme le <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> chaîne de format.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Le début et fin des accolades, « { » et «} », sont requis.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Pour spécifier une accolade littérale dans <ph id="ph1">`format`</ph>, spécifiez deux début ou fin accolades ; autrement dit, « {{ » ou «}} ».</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode ne pas rechercher la chaîne spécifiée pour les caractères de saut de ligne individuels (0x000a hexadécimal) et les remplacer par <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Si un objet spécifié n’est pas référencé dans la chaîne de format, il est ignoré.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> n'est pas une chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero) or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</source>
          <target state="translated">L'index d'un élément de format est inférieur à 0 (zéro) ou supérieur ou égal au nombre d'objets à mettre en forme (qui, pour cette surcharge de méthode, s'élève à deux).</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to format and write.</source>
          <target state="translated">Premier objet à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to format and write.</source>
          <target state="translated">Deuxième objet à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to format and write.</source>
          <target state="translated">Troisième objet à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Writes a formatted string to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Écrit une chaîne mise en forme dans la chaîne ou le flux de texte, en utilisant la même sémantique que la méthode <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise la mise en forme composite pour convertir la valeur d’un objet en sa représentation sous forme de chaîne et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la fonctionnalité de mise en forme composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation sous forme de chaîne de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">La syntaxe d’un élément de format est comme suit :</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Les éléments entre crochets sont facultatifs.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme de fonctionnalité, y compris la syntaxe d’un élément de format composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>index</source>
          <target state="translated">index</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Position de base zéro dans la liste de paramètres de l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si l’objet spécifié par <bpt id="p1">*</bpt>index<ept id="p1">*</ept> est <ph id="ph1">`null`</ph>, l’élément de format est remplacé par <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Because this overload has three objects in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0, 1, or 2.</source>
          <target state="translated">Étant donné que cette surcharge possède trois objets dans son paramètre de liste, la valeur de <bpt id="p1">*</bpt>index<ept id="p1">*</ept> doit toujours être 0, 1 ou 2.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">S’il n’existe pas de paramètre dans le <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, un <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Le nombre minimal de caractères dans la représentation sous forme de chaîne du paramètre.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Si elle est positive, le paramètre est aligné à droite ; s’il est négatif, il est aligné à gauche.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Chaîne de format standard ou personnalisé qui est pris en charge par l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Les valeurs possibles pour <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> sont les mêmes que les valeurs prises en charge par l’objet <ph id="ph1">`ToString(string format)`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Si <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> n’est pas spécifié et l’objet à mettre en forme implémente la <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> est passé en tant que la valeur de la <ph id="ph3">`format`</ph> paramètre qui est utilisé comme le <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> chaîne de format.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Le début et fin des accolades, « { » et «} », sont requis.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Pour spécifier une accolade littérale dans <ph id="ph1">`format`</ph>, spécifiez deux début ou fin accolades ; autrement dit, « {{ » ou «}} ».</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>This method does not search the specified string  for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode ne pas rechercher la chaîne spécifiée pour les caractères de saut de ligne individuels (0x000a hexadécimal) et les remplacer par <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Si un objet spécifié n’est pas référencé dans la chaîne de format, il est ignoré.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> n'est pas une chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</source>
          <target state="translated">L'index d'un élément de format est inférieur à 0 (zéro) ou supérieur ou égal au nombre d'objets à mettre en forme (qui, pour cette surcharge de méthode, s'élève à trois).</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Writes data to the text string or stream asynchronously.</source>
          <target state="translated">Écrit des données de façon asynchrone dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>The character to write to the text stream.</source>
          <target state="translated">Caractère à écrire dans le flux de texte.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>Writes a character to the text string or stream asynchronously.</source>
          <target state="translated">Écrit un caractère de façon asynchrone dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> est une classe abstraite.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Par conséquent, vous n’instanciez pas il dans votre code.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour obtenir un exemple d’utilisation de la <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> (méthode), consultez le <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>The text writer is disposed.</source>
          <target state="translated">Le writer de texte est supprimé.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer de texte est actuellement utilisé par une opération d'écriture précédente.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>The character array to write to the text stream.</source>
          <target state="translated">Tableau de caractères à écrire dans le flux de texte.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nothing is written.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> est <ph id="ph1">&lt;see langword="null" /&gt;</ph>, rien n’est écrit.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>Writes a character array to the text string or stream asynchronously.</source>
          <target state="translated">Écrit un tableau de caractères de façon asynchrone dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>The text writer is disposed.</source>
          <target state="translated">Le writer de texte est supprimé.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer de texte est actuellement utilisé par une opération d'écriture précédente.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>The string to write.</source>
          <target state="translated">Chaîne à écrire.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nothing is written to the text stream.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>, rien n’est écrit dans le flux de texte.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>Writes a string to the text string or stream asynchronously.</source>
          <target state="translated">Écrit une chaîne de façon asynchrone dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> est une classe abstraite.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Par conséquent, vous n’instanciez pas il dans votre code.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour obtenir un exemple d’utilisation de la <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> (méthode), consultez le <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>The text writer is disposed.</source>
          <target state="translated">Le writer de texte est supprimé.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer de texte est actuellement utilisé par une opération d'écriture précédente.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">Tableau de caractères à partir duquel les données doivent être écrites.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start retrieving data.</source>
          <target state="translated">Position du caractère dans la mémoire tampon à laquelle commencer la récupération des données.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Nombre de caractères à écrire.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the text string or stream asynchronously.</source>
          <target state="translated">Écrit un sous-tableau de caractères de façon asynchrone dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> est une classe abstraite.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Par conséquent, vous n’instanciez pas il dans votre code.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour obtenir un exemple d’utilisation de la <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> (méthode), consultez le <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est supérieur à la longueur de la mémoire tampon.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est un nombre négatif.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text writer is disposed.</source>
          <target state="translated">Le writer de texte est supprimé.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer de texte est actuellement utilisé par une opération d'écriture précédente.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Writes data followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit des données suivies d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine">
          <source>Writes a line terminator to the text string or stream.</source>
          <target state="translated">Écrit une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value to write.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> à écrire.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>Writes the text representation of a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'une valeur <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> suivie d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de la valeur spécifiée est créée en appelant le <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>This method outputs either <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode génère une <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>The character to write to the text stream.</source>
          <target state="translated">Caractère à écrire dans le flux de texte.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>Writes a character followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit un caractère suivi d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>This overload is equivalent to <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%29&gt;</ph> followed by <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine&gt;</ph> .</source>
          <target state="translated">Cette surcharge est équivalente à <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%29&gt;</ph> suivie <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>The character array from which data is read.</source>
          <target state="translated">Tableau de caractères dans lequel sont lues des données.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>Writes an array of characters followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit un tableau de caractères suivi d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>All the characters in <ph id="ph1">`buffer`</ph> are written to the underlying stream.</source>
          <target state="translated">Tous les caractères <ph id="ph1">`buffer`</ph> sont écrits dans le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>If the character array is <ph id="ph1">`null`</ph>, only the line terminator is written.</source>
          <target state="translated">Si le tableau de caractères a la valeur <ph id="ph1">`null`</ph>, seul la marque de fin de ligne est écrite.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>This overload is equivalent to <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> followed by <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine&gt;</ph> .</source>
          <target state="translated">Cette surcharge est équivalente à <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> suivie <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>The decimal value to write.</source>
          <target state="translated">Valeur décimale à écrire.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>Writes the text representation of a decimal value followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'une valeur décimale suivie d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>The 8-byte floating-point value to write.</source>
          <target state="translated">Valeur à virgule flottante de 8 octets à écrire.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>Writes the text representation of a 8-byte floating-point value followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'une valeur à virgule flottante de 8 octets suivie d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The 4-byte signed integer to write.</source>
          <target state="translated">Entier signé de 4 octets à écrire.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>Writes the text representation of a 4-byte signed integer followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'un entier signé de 4 octets suivie d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de la valeur spécifiée est créée en appelant le <ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The 8-byte signed integer to write.</source>
          <target state="translated">Entier signé de 8 octets à écrire.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>Writes the text representation of an 8-byte signed integer followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'un entier signé de 8 octets suivi d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de la valeur spécifiée est créée en appelant le <ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>The object to write.</source>
          <target state="translated">Objet à écrire.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only the line terminator is written.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>, seule la marque de fin de ligne est écrite.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>Writes the text representation of an object by calling the <ph id="ph1">&lt;see langword="ToString" /&gt;</ph> method on that object, followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'un objet en appelant la méthode <ph id="ph1">&lt;see langword="ToString" /&gt;</ph> sur cet objet, suivie d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29&gt;</ph> overload.</source>
          <target state="translated">Cette surcharge est équivalente à la <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29&gt;</ph> de surcharge.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>The 4-byte floating-point value to write.</source>
          <target state="translated">Valeur à virgule flottante de 4 octets à écrire.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>Writes the text representation of a 4-byte floating-point value followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'une valeur à virgule flottante de 4 octets suivie d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>The string to write.</source>
          <target state="translated">Chaîne à écrire.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only the line terminator is written.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>, seule la marque de fin de ligne est écrite.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>Writes a string followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit une chaîne suivie d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> overload.</source>
          <target state="translated">Cette surcharge est équivalente à la <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> de surcharge.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode ne pas rechercher la chaîne spécifiée pour les caractères de saut de ligne individuels (0x000a hexadécimal) et les remplacer par <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The 4-byte unsigned integer to write.</source>
          <target state="translated">Entier non signé de 4 octets à écrire.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>Writes the text representation of a 4-byte unsigned integer followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'un entier non signé de 4 octets suivie d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de la valeur spécifiée est créée en appelant le <ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The 8-byte unsigned integer to write.</source>
          <target state="translated">Entier non signé de 8 octets à écrire.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>Writes the text representation of an 8-byte unsigned integer followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit la représentation textuelle d'un entier non signé de 8 octets suivi d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de la valeur spécifiée est créée en appelant le <ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> si une propriété, pas <ph id="ph2">`null`</ph>, spécifie la mise en forme de la culture spécifique.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The object to format and write.</source>
          <target state="translated">Objet à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Writes a formatted string and a new line to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Écrit une chaîne mise en forme et une nouvelle ligne dans la chaîne ou le flux de texte, en utilisant la même sémantique que la méthode <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise la mise en forme composite pour convertir la valeur d’un objet en sa représentation sous forme de chaîne et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la fonctionnalité de mise en forme composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation sous forme de chaîne de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">La syntaxe d’un élément de format est comme suit :</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Les éléments entre crochets sont facultatifs.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme de fonctionnalité, y compris la syntaxe d’un élément de format composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>index</source>
          <target state="translated">index</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Position de base zéro dans la liste de paramètres de l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si l’objet spécifié par <bpt id="p1">*</bpt>index<ept id="p1">*</ept> est <ph id="ph1">`null`</ph>, l’élément de format est remplacé par <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Because this overload has only a single object in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0.</source>
          <target state="translated">Étant donné que cette surcharge possède un seul objet dans son paramètre de liste, la valeur de <bpt id="p1">*</bpt>index<ept id="p1">*</ept> doit toujours être 0.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">S’il n’existe pas de paramètre dans le <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, un <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Le nombre minimal de caractères dans la représentation sous forme de chaîne du paramètre.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Si elle est positive, le paramètre est aligné à droite ; s’il est négatif, il est aligné à gauche.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Chaîne de format standard ou personnalisé qui est pris en charge par l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Les valeurs possibles pour <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> sont les mêmes que les valeurs prises en charge par l’objet <ph id="ph1">`ToString(string format)`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Si <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> n’est pas spécifié et l’objet à mettre en forme implémente la <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> est passé en tant que la valeur de la <ph id="ph3">`format`</ph> paramètre qui est utilisé comme le <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> chaîne de format.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Le début et fin des accolades, « { » et «} », sont requis.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Pour spécifier une accolade littérale dans <ph id="ph1">`format`</ph>, spécifiez deux début ou fin accolades ; autrement dit, « {{ » ou «}} ».</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode ne pas rechercher la chaîne spécifiée pour les caractères de saut de ligne individuels (0x000a hexadécimal) et les remplacer par <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Si un objet spécifié n’est pas référencé dans la chaîne de format, il est ignoré.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> n'est pas une chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</source>
          <target state="translated">L'index d'un élément de format est inférieur à 0 (zéro) ou supérieur ou égal au nombre d'objets à mettre en forme (qui, pour cette surcharge de méthode, s'élève à un).</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format and write.</source>
          <target state="translated">Tableau d'objets contenant aucun, un ou plusieurs objets à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Writes out a formatted string and a new line, using the same semantics as <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Écrit une chaîne mise en forme et une nouvelle ligne, en utilisant la même sémantique que <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise la mise en forme composite pour convertir la valeur d’un objet en sa représentation sous forme de chaîne et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la fonctionnalité de mise en forme composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation sous forme de chaîne de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">La syntaxe d’un élément de format est comme suit :</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Les éléments entre crochets sont facultatifs.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme de fonctionnalité, y compris la syntaxe d’un élément de format composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>index</source>
          <target state="translated">index</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Position de base zéro dans la liste de paramètres de l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si l’objet spécifié par <bpt id="p1">*</bpt>index<ept id="p1">*</ept> est <ph id="ph1">`null`</ph>, l’élément de format est remplacé par <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Because this overload has an array in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be less than the length of the array.</source>
          <target state="translated">Étant donné que cette surcharge possède un tableau dans son paramètre de liste, la valeur de <bpt id="p1">*</bpt>index<ept id="p1">*</ept> doit toujours être inférieure à la longueur du tableau.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">S’il n’existe pas de paramètre dans le <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, un <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Le nombre minimal de caractères dans la représentation sous forme de chaîne du paramètre.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Si elle est positive, le paramètre est aligné à droite ; s’il est négatif, il est aligné à gauche.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Chaîne de format standard ou personnalisé qui est pris en charge par l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Les valeurs possibles pour <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> sont les mêmes que les valeurs prises en charge par l’objet <ph id="ph1">`ToString(string format)`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Si <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> n’est pas spécifié et l’objet à mettre en forme implémente la <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> est passé en tant que la valeur de la <ph id="ph3">`format`</ph> paramètre qui est utilisé comme le <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> chaîne de format.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Le début et fin des accolades, « { » et «} », sont requis.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Pour spécifier une accolade littérale dans <ph id="ph1">`format`</ph>, spécifiez deux début ou fin accolades ; autrement dit, « {{ » ou «}} ».</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode ne pas rechercher la chaîne spécifiée pour les caractères de saut de ligne individuels (0x000a hexadécimal) et les remplacer par <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Si un objet spécifié n’est pas référencé dans la chaîne de format, il est ignoré.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>A string or object is passed in as <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Une chaîne ou un objet est passé en tant que <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> n'est pas une chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <ph id="ph1">&lt;paramref name="arg" /&gt;</ph> array.</source>
          <target state="translated">L’index d’un élément de format est inférieur à 0 (zéro), ou supérieur ou égal à la longueur du tableau <ph id="ph1">&lt;paramref name="arg" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The character array from which data is read.</source>
          <target state="translated">Tableau de caractères dans lequel sont lues des données.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The character position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to start reading data.</source>
          <target state="translated">Position du caractère dans <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> où commencer la lecture des données.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">Nombre maximal de caractères à écrire.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters followed by a line terminator to the text string or stream.</source>
          <target state="translated">Écrit un sous-tableau de caractères suivi d'une marque de fin de ligne dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This method will write <ph id="ph1">`count`</ph> characters of data into this <ph id="ph2">`TextWriter`</ph> from the <ph id="ph3">`buffer`</ph> character array starting at position <ph id="ph4">`index`</ph>.</source>
          <target state="translated">Cette méthode écrit <ph id="ph1">`count`</ph> caractères de données dans <ph id="ph2">`TextWriter`</ph> à partir de la <ph id="ph3">`buffer`</ph> tableau de caractères commençant à la position <ph id="ph4">`index`</ph>.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This overload is equivalent to calling the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> method followed by <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> for each character in <ph id="ph3">`buffer`</ph> between <ph id="ph4">`index`</ph> and (<ph id="ph5">`index`</ph><ph id="ph6"> + </ph><ph id="ph7">`count`</ph>).</source>
          <target state="translated">Cette surcharge revient à appeler la <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> méthode suivie par <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> pour chaque caractère dans <ph id="ph3">`buffer`</ph> entre <ph id="ph4">`index`</ph> et (<ph id="ph5">`index`</ph><ph id="ph6"> + </ph><ph id="ph7">`count`</ph>).</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">La longueur de la mémoire tampon moins <ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieure à <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est un nombre négatif.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The first object to format and write.</source>
          <target state="translated">Premier objet à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The second object to format and write.</source>
          <target state="translated">Deuxième objet à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Writes a formatted string and a new line to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Écrit une chaîne mise en forme et une nouvelle ligne dans la chaîne ou le flux de texte, en utilisant la même sémantique que la méthode <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise la mise en forme composite pour convertir la valeur d’un objet en sa représentation sous forme de chaîne et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la fonctionnalité de mise en forme composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation sous forme de chaîne de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">La syntaxe d’un élément de format est comme suit :</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Les éléments entre crochets sont facultatifs.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme de fonctionnalité, y compris la syntaxe d’un élément de format composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>index</source>
          <target state="translated">index</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Position de base zéro dans la liste de paramètres de l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si l’objet spécifié par <bpt id="p1">*</bpt>index<ept id="p1">*</ept> est <ph id="ph1">`null`</ph>, l’élément de format est remplacé par <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Because this overload has two objects in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0 or 1.</source>
          <target state="translated">Étant donné que cette surcharge a deux objets dans son paramètre de liste, la valeur de <bpt id="p1">*</bpt>index<ept id="p1">*</ept> doit toujours être 0 ou 1.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">S’il n’existe pas de paramètre dans le <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, un <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Le nombre minimal de caractères dans la représentation sous forme de chaîne du paramètre.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Si elle est positive, le paramètre est aligné à droite ; s’il est négatif, il est aligné à gauche.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Chaîne de format standard ou personnalisé qui est pris en charge par l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Les valeurs possibles pour <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> sont les mêmes que les valeurs prises en charge par l’objet <ph id="ph1">`ToString(string format)`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Si <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> n’est pas spécifié et l’objet à mettre en forme implémente la <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> est passé en tant que la valeur de la <ph id="ph3">`format`</ph> paramètre qui est utilisé comme le <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> chaîne de format.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Le début et fin des accolades, « { » et «} », sont requis.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Pour spécifier une accolade littérale dans <ph id="ph1">`format`</ph>, spécifiez deux début ou fin accolades ; autrement dit, « {{ » ou «}} ».</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode ne pas rechercher la chaîne spécifiée pour les caractères de saut de ligne individuels (0x000a hexadécimal) et les remplacer par <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Si un objet spécifié n’est pas référencé dans la chaîne de format, il est ignoré.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> n'est pas une chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</source>
          <target state="translated">L'index d'un élément de format est inférieur à 0 (zéro) ou supérieur ou égal au nombre d'objets à mettre en forme (qui, pour cette surcharge de méthode, s'élève à deux).</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to format and write.</source>
          <target state="translated">Premier objet à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to format and write.</source>
          <target state="translated">Deuxième objet à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to format and write.</source>
          <target state="translated">Troisième objet à mettre en forme et à écrire.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Writes out a formatted string and a new line, using the same semantics as <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Écrit une chaîne mise en forme et une nouvelle ligne, en utilisant la même sémantique que <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise la mise en forme composite pour convertir la valeur d’un objet en sa représentation sous forme de chaîne et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la fonctionnalité de mise en forme composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation sous forme de chaîne de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">La syntaxe d’un élément de format est comme suit :</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">Les éléments entre crochets sont facultatifs.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme de fonctionnalité, y compris la syntaxe d’un élément de format composite, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>index</source>
          <target state="translated">index</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">Position de base zéro dans la liste de paramètres de l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si l’objet spécifié par <bpt id="p1">*</bpt>index<ept id="p1">*</ept> est <ph id="ph1">`null`</ph>, l’élément de format est remplacé par <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Because this overload has three objects in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0, 1, or 2.</source>
          <target state="translated">Étant donné que cette surcharge possède trois objets dans son paramètre de liste, la valeur de <bpt id="p1">*</bpt>index<ept id="p1">*</ept> doit toujours être 0, 1 ou 2.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">S’il n’existe pas de paramètre dans le <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, un <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">Le nombre minimal de caractères dans la représentation sous forme de chaîne du paramètre.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">Si elle est positive, le paramètre est aligné à droite ; s’il est négatif, il est aligné à gauche.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">Chaîne de format standard ou personnalisé qui est pris en charge par l’objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">Les valeurs possibles pour <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> sont les mêmes que les valeurs prises en charge par l’objet <ph id="ph1">`ToString(string format)`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">Si <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> n’est pas spécifié et l’objet à mettre en forme implémente la <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> est passé en tant que la valeur de la <ph id="ph3">`format`</ph> paramètre qui est utilisé comme le <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> chaîne de format.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">Le début et fin des accolades, « { » et «} », sont requis.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">Pour spécifier une accolade littérale dans <ph id="ph1">`format`</ph>, spécifiez deux début ou fin accolades ; autrement dit, « {{ » ou «}} ».</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode ne pas rechercher la chaîne spécifiée pour les caractères de saut de ligne individuels (0x000a hexadécimal) et les remplacer par <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">Si un objet spécifié n’est pas référencé dans la chaîne de format, il est ignoré.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> n'est pas une chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</source>
          <target state="translated">L'index d'un élément de format est inférieur à 0 (zéro) ou supérieur ou égal au nombre d'objets à mettre en forme (qui, pour cette surcharge de méthode, s'élève à trois).</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Writes data followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">Écrit des données suivies d'une marque de fin de ligne de façon asynchrone dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>Writes a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">Écrit une marque de fin de ligne de façon asynchrone dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>The text writer is disposed.</source>
          <target state="translated">Le writer de texte est supprimé.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer de texte est actuellement utilisé par une opération d'écriture précédente.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The character to write to the text stream.</source>
          <target state="translated">Caractère à écrire dans le flux de texte.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>Writes a character followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">Écrit un caractère suivi d'une marque de fin de ligne de façon asynchrone dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> est une classe abstraite.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Par conséquent, vous n’instanciez pas il dans votre code.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour obtenir un exemple d’utilisation de la <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> (méthode), consultez le <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The text writer is disposed.</source>
          <target state="translated">Le writer de texte est supprimé.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer de texte est actuellement utilisé par une opération d'écriture précédente.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>The character array to write to the text stream.</source>
          <target state="translated">Tableau de caractères à écrire dans le flux de texte.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>If the character array is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only the line terminator is written.</source>
          <target state="translated">Si le tableau de caractères a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>, seul la marque de fin de ligne est écrite.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>Writes an array of characters followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">Écrit un tableau de caractères suivi d'une marque de fin de ligne de façon asynchrone dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>The text writer is disposed.</source>
          <target state="translated">Le writer de texte est supprimé.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer de texte est actuellement utilisé par une opération d'écriture précédente.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The string to write.</source>
          <target state="translated">Chaîne à écrire.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>If the value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only a line terminator is written.</source>
          <target state="translated">Si la valeur est <ph id="ph1">&lt;see langword="null" /&gt;</ph>, seul une marque de fin de ligne est écrite.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>Writes a string followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">Écrit une chaîne suivie d'une marque de fin de ligne de façon asynchrone dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> est une classe abstraite.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Par conséquent, vous n’instanciez pas il dans votre code.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour obtenir un exemple d’utilisation de la <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> (méthode), consultez le <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The text writer is disposed.</source>
          <target state="translated">Le writer de texte est supprimé.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer de texte est actuellement utilisé par une opération d'écriture précédente.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">Tableau de caractères à partir duquel les données doivent être écrites.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start retrieving data.</source>
          <target state="translated">Position du caractère dans la mémoire tampon à laquelle commencer la récupération des données.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Nombre de caractères à écrire.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">Écrit un sous-tableau de caractères suivi d'une marque de fin de ligne de façon asynchrone dans la chaîne ou le flux de texte.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> est une classe abstraite.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Par conséquent, vous n’instanciez pas il dans votre code.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour obtenir un exemple d’utilisation de la <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> (méthode), consultez le <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est supérieur à la longueur de la mémoire tampon.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est un nombre négatif.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text writer is disposed.</source>
          <target state="translated">Le writer de texte est supprimé.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer de texte est actuellement utilisé par une opération d'écriture précédente.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>