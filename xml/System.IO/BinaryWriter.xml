<Type Name="BinaryWriter" FullName="System.IO.BinaryWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91346e80613a3552f90c35107e339390f1f7bd47" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48729590" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BinaryWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit BinaryWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.BinaryWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryWriter : IDisposable" />
  <TypeSignature Language="F#" Value="type BinaryWriter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7625d-101">Écrit des types primitifs en binaire dans un flux et prend en charge l'écriture de chaînes dans un codage spécifique.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7625d-101">Writes primitive types in binary to a stream and supports writing strings in a specific encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-102">Le <xref:System.IO.BinaryWriter> classe fournit des méthodes qui simplifient l’écriture de types de données primitifs dans un flux.</span><span class="sxs-lookup"><span data-stu-id="7625d-102">The <xref:System.IO.BinaryWriter> class provides methods that simplify writing primitive data types to a stream.</span></span> <span data-ttu-id="7625d-103">Par exemple, vous pouvez utiliser la <xref:System.IO.BinaryWriter.Write%2A> méthode pour écrire une valeur booléenne dans le flux comme une valeur d’un octet.</span><span class="sxs-lookup"><span data-stu-id="7625d-103">For example, you can use the <xref:System.IO.BinaryWriter.Write%2A> method to write a Boolean value to the stream as a one-byte value.</span></span> <span data-ttu-id="7625d-104">La classe inclut des méthodes d’écriture qui prennent en charge différents types de données.</span><span class="sxs-lookup"><span data-stu-id="7625d-104">The class includes write methods that support different data types.</span></span>  
  
 <span data-ttu-id="7625d-105">Lorsque vous créez une nouvelle instance de la <xref:System.IO.BinaryWriter> (classe), vous fournissez le flux pour y écrire et éventuellement spécifiez le type de codage et s’il faut maintenir le flux ouvrir après avoir supprimé le <xref:System.IO.BinaryWriter> objet.</span><span class="sxs-lookup"><span data-stu-id="7625d-105">When you create a new instance of the <xref:System.IO.BinaryWriter> class, you provide the stream to write to, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryWriter> object.</span></span> <span data-ttu-id="7625d-106">Si vous ne spécifiez pas un type de codage, UTF-8 est utilisé.</span><span class="sxs-lookup"><span data-stu-id="7625d-106">If you do not specify an encoding type, UTF-8 is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7625d-107">Ce type implémente le <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="7625d-107">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="7625d-108">Lorsque vous avez fini d’utiliser le type, vous devez supprimer il directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="7625d-108">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="7625d-109">Pour supprimer le type directement, appelez sa <xref:System.IDisposable.Dispose%2A> méthode dans un `try` / `catch` bloc.</span><span class="sxs-lookup"><span data-stu-id="7625d-109">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="7625d-110">Pour supprimer indirectement, utiliser une construction de langage tel que `using` (en c#) ou `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="7625d-110">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="7625d-111">Pour plus d’informations, consultez la section « À l’aide un objet qui implémente IDisposable » dans le <xref:System.IDisposable> rubrique de l’interface.</span><span class="sxs-lookup"><span data-stu-id="7625d-111">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="7625d-112">Une classe dérivée peut substituer les méthodes de cette classe pour donner des encodages de caractères uniques.</span><span class="sxs-lookup"><span data-stu-id="7625d-112">A derived class can override the methods of this class to give unique character encodings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-113">L’exemple de code suivant montre comment stocker et récupérer des paramètres d’application dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-113">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md">
      <span data-ttu-id="7625d-114">Comment : lire et écrire dans un fichier de données créé récemment</span>
      <span class="sxs-lookup">
        <span data-stu-id="7625d-114">How to: Read and Write to a Newly Created Data File</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/index.md">
      <span data-ttu-id="7625d-115">Fichier et flux de données E/S</span>
      <span class="sxs-lookup">
        <span data-stu-id="7625d-115">File and Stream I/O</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
      <span data-ttu-id="7625d-116">Comment : lire du texte dans un fichier</span>
      <span class="sxs-lookup">
        <span data-stu-id="7625d-116">How to: Read Text from a File</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
      <span data-ttu-id="7625d-117">Comment : écrire du texte dans un fichier</span>
      <span class="sxs-lookup">
        <span data-stu-id="7625d-117">How to: Write Text to a File</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7625d-118">Initialise une nouvelle instance de la classe <see cref="T:System.IO.BinaryWriter" /> qui écrit dans un flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-118">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class that writes to a stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinaryWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BinaryWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7625d-119">Initialise une nouvelle instance de la classe <see cref="T:System.IO.BinaryWriter" /> qui écrit dans un flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-119">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class that writes to a stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-120">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-120">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-121">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-121">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-122">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-122">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-123">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-123">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryWriter (System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryWriter(System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="new System.IO.BinaryWriter : System.IO.Stream -&gt; System.IO.BinaryWriter" Usage="new System.IO.BinaryWriter output" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="7625d-124">Flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-124">The output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-125">Initialise une nouvelle instance de la classe <see cref="T:System.IO.BinaryWriter" /> en fonction du flux spécifié et à l'aide de l'encodage UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-125">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class based on the specified stream and using UTF-8 encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-126">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-126">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-127">L’exemple de code suivant montre comment stocker et récupérer des paramètres d’application dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-127">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7625d-128">Le flux ne prend pas en charge l’écriture ou bien il est déjà fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-128">The stream does not support writing or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7625d-129">
            <paramref name="output" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-129">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-130">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-130">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-131">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-131">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-132">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-132">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryWriter (System.IO.Stream output, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream output, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryWriter(System::IO::Stream ^ output, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.IO.BinaryWriter : System.IO.Stream * System.Text.Encoding -&gt; System.IO.BinaryWriter" Usage="new System.IO.BinaryWriter (output, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="7625d-133">Flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-133">The output stream.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="7625d-134">Encodage des caractères à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-134">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-135">Initialise une nouvelle instance de la classe <see cref="T:System.IO.BinaryWriter" /> en fonction du flux et l'encodage de caractères spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-135">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class based on the specified stream and character encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-136">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-136">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7625d-137">Le flux ne prend pas en charge l’écriture ou bien il est déjà fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-137">The stream does not support writing or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7625d-138">
            <paramref name="output" /> ou <paramref name="encoding" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-138">
              <paramref name="output" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-139">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-139">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-140">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-140">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-141">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-141">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryWriter (System.IO.Stream output, System.Text.Encoding encoding, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream output, class System.Text.Encoding encoding, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryWriter(System::IO::Stream ^ output, System::Text::Encoding ^ encoding, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.BinaryWriter : System.IO.Stream * System.Text.Encoding * bool -&gt; System.IO.BinaryWriter" Usage="new System.IO.BinaryWriter (output, encoding, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="7625d-142">Flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-142">The output stream.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="7625d-143">Encodage des caractères à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-143">The character encoding to use.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="7625d-144">
            <see langword="true" /> pour maintenir le flux ouvert après avoir supprimé l'objet <see cref="T:System.IO.BinaryWriter" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-144">
              <see langword="true" /> to leave the stream open after the <see cref="T:System.IO.BinaryWriter" /> object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-145">Initialise une nouvelle instance de la classe <see cref="T:System.IO.BinaryWriter" /> en fonction du flux et de l'encodage de caractères spécifiés, et permet éventuellement de laisser le flux ouvert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-145">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class based on the specified stream and character encoding, and optionally leaves the stream open.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7625d-146">Le flux ne prend pas en charge l’écriture ou bien il est déjà fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-146">The stream does not support writing or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7625d-147">
            <paramref name="output" /> ou <paramref name="encoding" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-147">
              <paramref name="output" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-148">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-148">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-149">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-149">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-150">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-150">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.BinaryWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.BinaryWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7625d-151">Obtient le flux sous-jacent de <see cref="T:System.IO.BinaryWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-151">Gets the underlying stream of the <see cref="T:System.IO.BinaryWriter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7625d-152">Flux sous-jacent associé à l'élément <see langword="BinaryWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-152">The underlying stream associated with the <see langword="BinaryWriter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-153">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-153">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-154">L’exemple de code suivant montre comment lire et écrire `Double` données vers la mémoire à l’aide de la <xref:System.IO.BinaryReader> et `BinaryWriter` classes en haut de la <xref:System.IO.MemoryStream> classe.</span><span class="sxs-lookup"><span data-stu-id="7625d-154">The following code example shows how to read and write `Double` data to memory by using the <xref:System.IO.BinaryReader> and `BinaryWriter` classes on top of the <xref:System.IO.MemoryStream> class.</span></span> <span data-ttu-id="7625d-155">`MemoryStream` uniquement les lectures et écritures `Byte` données.</span><span class="sxs-lookup"><span data-stu-id="7625d-155">`MemoryStream` only reads and writes `Byte` data.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-156">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-156">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-157">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-157">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-158">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-158">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="binaryWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7625d-159">Ferme le <see cref="T:System.IO.BinaryWriter" /> actuel et le flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-159">Closes the current <see cref="T:System.IO.BinaryWriter" /> and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-160">Cette implémentation de `Close` appelle le <xref:System.IO.BinaryWriter.Dispose%2A> méthode en passant un `true` valeur.</span><span class="sxs-lookup"><span data-stu-id="7625d-160">This implementation of `Close` calls the <xref:System.IO.BinaryWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="7625d-161">Vider le flux ne videra pas son encodeur sous-jacent, sauf si vous appelez explicitement <xref:System.IO.BinaryWriter.Flush%2A> ou `Close`.</span><span class="sxs-lookup"><span data-stu-id="7625d-161">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.BinaryWriter.Flush%2A> or `Close`.</span></span> <span data-ttu-id="7625d-162">Paramètre <xref:System.IO.StreamWriter.AutoFlush%2A> à `true` signifie que les données sont vidées de la mémoire tampon dans le flux, mais l’état de l’encodeur n’est pas vidé.</span><span class="sxs-lookup"><span data-stu-id="7625d-162">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="7625d-163">Ainsi, l’encodeur afin de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</span><span class="sxs-lookup"><span data-stu-id="7625d-163">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="7625d-164">Ce scénario affecte UTF8 et UTF7, où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</span><span class="sxs-lookup"><span data-stu-id="7625d-164">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-165">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-165">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-166">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-166">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-167">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-167">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7625d-168">Libère les ressources utilisées par le <see cref="T:System.IO.BinaryWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-168">Releases the resources used by the <see cref="T:System.IO.BinaryWriter" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="binaryWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7625d-169">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.IO.BinaryWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-169">Releases all resources used by the current instance of the <see cref="T:System.IO.BinaryWriter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="binaryWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="7625d-170">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-170">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-171">Libère les ressources non managées utilisées par <see cref="T:System.IO.BinaryWriter" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-171">Releases the unmanaged resources used by the <see cref="T:System.IO.BinaryWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-172">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-172">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-173">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-173">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-174">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-174">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="binaryWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7625d-175">Efface toutes les mémoires tampons pour le writer actuel et provoque l'écriture des données mises en mémoire tampon sur l'appareil sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-175">Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-176">Toutes les classes dérivées doivent substituer `Flush` pour vous assurer que toutes les données mises en mémoire tampon est envoyé vers le flux.</span><span class="sxs-lookup"><span data-stu-id="7625d-176">All derived classes should override `Flush` to ensure that all buffered data is sent to the stream.</span></span>  
  
 <span data-ttu-id="7625d-177">Vider le flux ne videra pas son encodeur sous-jacent, sauf si vous appelez explicitement `Flush` ou <xref:System.IO.BinaryWriter.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="7625d-177">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.BinaryWriter.Close%2A>.</span></span> <span data-ttu-id="7625d-178">Paramètre <xref:System.IO.StreamWriter.AutoFlush%2A> à `true` signifie que les données sont vidées de la mémoire tampon dans le flux, mais l’état de l’encodeur n’est pas vidé.</span><span class="sxs-lookup"><span data-stu-id="7625d-178">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="7625d-179">Ainsi, l’encodeur afin de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</span><span class="sxs-lookup"><span data-stu-id="7625d-179">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="7625d-180">Ce scénario affecte UTF8 et UTF7, où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</span><span class="sxs-lookup"><span data-stu-id="7625d-180">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="7625d-181">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-181">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-182">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-182">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-183">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-183">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-184">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-184">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.BinaryWriter Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.BinaryWriter Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.BinaryWriter.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As BinaryWriter " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::BinaryWriter ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.BinaryWriter" Usage="System.IO.BinaryWriter.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.BinaryWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7625d-185">Spécifie <see cref="T:System.IO.BinaryWriter" /> sans magasin de sauvegarde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-185">Specifies a <see cref="T:System.IO.BinaryWriter" /> with no backing store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-186">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-186">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-187">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-187">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-188">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-188">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-189">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-189">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OutStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OutStream;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.IO.Stream OutStream" />
      <MemberSignature Language="DocId" Value="F:System.IO.BinaryWriter.OutStream" />
      <MemberSignature Language="VB.NET" Value="Protected OutStream As Stream " />
      <MemberSignature Language="C++ CLI" Value="protected: System::IO::Stream ^ OutStream;" />
      <MemberSignature Language="F#" Value="val mutable OutStream : System.IO.Stream" Usage="System.IO.BinaryWriter.OutStream" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7625d-190">Contient le flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-190">Holds the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-191">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-191">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-192">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-192">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-193">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-193">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-194">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-194">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public virtual long Seek (int offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Seek(int32 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Seek (offset As Integer, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long Seek(int offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="abstract member Seek : int * System.IO.SeekOrigin -&gt; int64&#xA;override this.Seek : int * System.IO.SeekOrigin -&gt; int64" Usage="binaryWriter.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="7625d-195">Offset d’octet par rapport à <c>origin</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-195">A byte offset relative to <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="7625d-196">Champ de <see cref="T:System.IO.SeekOrigin" /> indiquant le point de référence à partir duquel la nouvelle position doit être obtenue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-196">A field of <see cref="T:System.IO.SeekOrigin" /> indicating the reference point from which the new position is to be obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-197">Définit la position dans le flux actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-197">Sets the position within the current stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7625d-198">Position dans le flux actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-198">The position with the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-199">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-199">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-200">L’exemple suivant écrit une série de valeurs d’octets dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-200">The following example writes a series of byte values to a file.</span></span> <span data-ttu-id="7625d-201">L’exemple utilise <xref:System.IO.BinaryWriter.Seek%2A> déplacer à différents emplacements dans le fichier, puis écrit les octets de marqueur à l’aide du <xref:System.IO.BinaryWriter.Write%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7625d-201">The example uses <xref:System.IO.BinaryWriter.Seek%2A> to move to various locations in the file, and then writes marker bytes by using the <xref:System.IO.BinaryWriter.Write%2A> method.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CPP/source3.cpp#5)]
 [!code-csharp[System.IO.BinaryReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source3.cs#5)]
 [!code-vb[System.IO.BinaryReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source3.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-202">Le pointeur de fichier a été déplacé vers un emplacement non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-202">The file pointer was moved to an invalid location.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7625d-203">La valeur <see cref="T:System.IO.SeekOrigin" /> n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-203">The <see cref="T:System.IO.SeekOrigin" /> value is invalid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-204">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-204">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-205">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-205">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-206">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-206">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7625d-207">Écrit une valeur dans le flux actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-207">Writes a value to the current stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(bool value);" />
      <MemberSignature Language="F#" Value="abstract member Write : bool -&gt; unit&#xA;override this.Write : bool -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-208">Valeur <see langword="Boolean" /> à écrire (0 ou 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-208">The <see langword="Boolean" /> value to write (0 or 1).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-209">Écrit une valeur <see langword="Boolean" /> de 1 octet dans le flux actuel, 0 représentant <see langword="false" /> et 1 représentant <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-209">Writes a one-byte <see langword="Boolean" /> value to the current stream, with 0 representing <see langword="false" /> and 1 representing <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-210">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-210">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-211">L’exemple de code suivant montre comment stocker et récupérer des paramètres d’application dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-211">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-212">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-212">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-213">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-213">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-214">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-214">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-215">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-215">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-216">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-216">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Byte value);" />
      <MemberSignature Language="F#" Value="abstract member Write : byte -&gt; unit&#xA;override this.Write : byte -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-217">Octet non signé à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-217">The unsigned byte to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-218">Écrit un octet non signé dans le flux actuel et avance la position du flux d’un octet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-218">Writes an unsigned byte to the current stream and advances the stream position by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-219">En raison de conflits de mise en forme de données, l’utilisation de cette méthode avec les encodages suivants n’est pas recommandée :</span><span class="sxs-lookup"><span data-stu-id="7625d-219">Because of data formatting conflicts, using this method with the following encodings is not recommended:</span></span>  
  
-   <span data-ttu-id="7625d-220">UTF-7</span><span class="sxs-lookup"><span data-stu-id="7625d-220">UTF-7</span></span>  
  
-   <span data-ttu-id="7625d-221">ISO-2022-JP</span><span class="sxs-lookup"><span data-stu-id="7625d-221">ISO-2022-JP</span></span>  
  
-   <span data-ttu-id="7625d-222">ISCII</span><span class="sxs-lookup"><span data-stu-id="7625d-222">ISCII</span></span>  
  
 <span data-ttu-id="7625d-223">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-223">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-224">L’exemple de code suivant montre comment écrire des données binaires à l’aide de la mémoire comme magasin de stockage et vérifiez que les données ont été écrites correctement.</span><span class="sxs-lookup"><span data-stu-id="7625d-224">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CPP/rwbyte.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CS/rwbyte.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/VB/rwbyte.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-225">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-225">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-226">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-226">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-227">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-227">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-228">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-228">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-229">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-229">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] -&gt; unit&#xA;override this.Write : byte[] -&gt; unit" Usage="binaryWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="7625d-230">Tableau d’octets contenant les données à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-230">A byte array containing the data to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-231">Écrit un tableau d’octets dans le flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-231">Writes a byte array to the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-232">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-232">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-233">L’exemple de code suivant montre comment écrire des données binaires à l’aide de la mémoire comme magasin de stockage et vérifiez que les données ont été écrites correctement.</span><span class="sxs-lookup"><span data-stu-id="7625d-233">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CPP/rwbytes.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CS/rwbytes.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/VB/rwbytes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-234">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-234">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-235">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-235">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7625d-236">
            <paramref name="buffer" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-236">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-237">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-237">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-238">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-238">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-239">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-239">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(char ch);" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="binaryWriter.Write ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="7625d-240">Caractère Unicode de non-substitution à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-240">The non-surrogate, Unicode character to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-241">Écrit un caractère Unicode dans le flux actuel et avance la position actuelle du flux en fonction du <see langword="Encoding" /> utilisé et des caractères spécifiques en cours d’écriture dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-241">Writes a Unicode character to the current stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific characters being written to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-242">En raison de conflits de mise en forme de données, l’utilisation de cette méthode avec les encodages suivants n’est pas recommandée :</span><span class="sxs-lookup"><span data-stu-id="7625d-242">Because of data formatting conflicts, using this method with the following encodings is not recommended:</span></span>  
  
-   <span data-ttu-id="7625d-243">UTF-7</span><span class="sxs-lookup"><span data-stu-id="7625d-243">UTF-7</span></span>  
  
-   <span data-ttu-id="7625d-244">ISO-2022-JP</span><span class="sxs-lookup"><span data-stu-id="7625d-244">ISO-2022-JP</span></span>  
  
-   <span data-ttu-id="7625d-245">ISCII</span><span class="sxs-lookup"><span data-stu-id="7625d-245">ISCII</span></span>  
  
 <span data-ttu-id="7625d-246">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-246">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 <span data-ttu-id="7625d-247">Les caractères de substitution Unicode doivent être écrites en tant que paires dans le même appel, plutôt qu’individuellement.</span><span class="sxs-lookup"><span data-stu-id="7625d-247">Unicode surrogate characters must be written out as pairs together in the same call, not individually.</span></span> <span data-ttu-id="7625d-248">Si vous avez besoin prise en charge pour les paires de substitution dans votre application, envisagez d’utiliser un tableau de caractères et le <xref:System.IO.BinaryWriter.Write%2A> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="7625d-248">If you require support for surrogate pairs in your application, consider using a character array and the <xref:System.IO.BinaryWriter.Write%2A> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-249">L’exemple de code suivant montre comment lire et écrire des données à l’aide de la mémoire comme magasin de stockage.</span><span class="sxs-lookup"><span data-stu-id="7625d-249">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CPP/rwchar.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CS/rwchar.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/VB/rwchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-250">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-250">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-251">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-251">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7625d-252">
            <paramref name="ch" /> est un caractère de substitution unique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-252">
              <paramref name="ch" /> is a single surrogate character.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-253">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-253">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-254">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-254">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-255">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-255">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (chars As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ chars);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] -&gt; unit&#xA;override this.Write : char[] -&gt; unit" Usage="binaryWriter.Write chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="7625d-256">Tableau de caractères contenant les données à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-256">A character array containing the data to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-257">Écrit un tableau de caractères dans le flux actuel et avance la position actuelle du flux en fonction du <see langword="Encoding" /> utilisé et des caractères spécifiques en cours d’écriture dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-257">Writes a character array to the current stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific characters being written to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-258">Le tableau suivant répertorie des exemples d’autres tâches d’e/s courantes ou apparentées.</span><span class="sxs-lookup"><span data-stu-id="7625d-258">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="7625d-259">Pour...</span><span class="sxs-lookup"><span data-stu-id="7625d-259">To do this...</span></span>|<span data-ttu-id="7625d-260">Consultez l'exemple décrit dans cette rubrique...</span><span class="sxs-lookup"><span data-stu-id="7625d-260">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="7625d-261">Créer un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="7625d-261">Create a text file.</span></span>|[<span data-ttu-id="7625d-262">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="7625d-262">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="7625d-263">Écrire dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="7625d-263">Write to a text file.</span></span>|[<span data-ttu-id="7625d-264">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="7625d-264">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="7625d-265">Lire un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="7625d-265">Read from a text file.</span></span>|[<span data-ttu-id="7625d-266">Comment : lire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="7625d-266">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="7625d-267">Ajouter du texte dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-267">Append text to a file.</span></span>|[<span data-ttu-id="7625d-268">Comment : ouvrir un fichier journal et y ajouter des éléments</span><span class="sxs-lookup"><span data-stu-id="7625d-268">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-269">Obtenir la taille d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-269">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-270">Obtenir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-270">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-271">Définissez les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-271">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-272">Déterminer si un fichier existe.</span><span class="sxs-lookup"><span data-stu-id="7625d-272">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-273">Lire à partir d’un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="7625d-273">Read from a binary file.</span></span>|[<span data-ttu-id="7625d-274">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="7625d-274">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="7625d-275">Écrire dans un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="7625d-275">Write to a binary file.</span></span>|[<span data-ttu-id="7625d-276">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="7625d-276">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="7625d-277">L’exemple de code suivant montre comment lire et écrire des données à l’aide de la mémoire comme magasin de stockage.</span><span class="sxs-lookup"><span data-stu-id="7625d-277">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CPP/rwchars.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CS/rwchars.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/VB/rwchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7625d-278">
            <paramref name="chars" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-278">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-279">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-279">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-280">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-280">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-281">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-281">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-282">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-282">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-283">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-283">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member Write : decimal -&gt; unit&#xA;override this.Write : decimal -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-284">Valeur décimale à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-284">The decimal value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-285">Écrit une valeur décimale dans le flux actuel et avance la position du flux de 16 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-285">Writes a decimal value to the current stream and advances the stream position by sixteen bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-286">Le tableau suivant répertorie des exemples d’autres tâches d’e/s courantes ou apparentées.</span><span class="sxs-lookup"><span data-stu-id="7625d-286">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="7625d-287">Pour...</span><span class="sxs-lookup"><span data-stu-id="7625d-287">To do this...</span></span>|<span data-ttu-id="7625d-288">Consultez l'exemple décrit dans cette rubrique...</span><span class="sxs-lookup"><span data-stu-id="7625d-288">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="7625d-289">Créer un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="7625d-289">Create a text file.</span></span>|[<span data-ttu-id="7625d-290">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="7625d-290">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="7625d-291">Écrire dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="7625d-291">Write to a text file.</span></span>|[<span data-ttu-id="7625d-292">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="7625d-292">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="7625d-293">Lire un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="7625d-293">Read from a text file.</span></span>|[<span data-ttu-id="7625d-294">Comment : lire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="7625d-294">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="7625d-295">Ajouter du texte dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-295">Append text to a file.</span></span>|[<span data-ttu-id="7625d-296">Comment : ouvrir un fichier journal et y ajouter des éléments</span><span class="sxs-lookup"><span data-stu-id="7625d-296">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-297">Obtenir la taille d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-297">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-298">Obtenir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-298">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-299">Définissez les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-299">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-300">Déterminer si un fichier existe.</span><span class="sxs-lookup"><span data-stu-id="7625d-300">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-301">Lire à partir d’un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="7625d-301">Read from a binary file.</span></span>|[<span data-ttu-id="7625d-302">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="7625d-302">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="7625d-303">Écrire dans un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="7625d-303">Write to a binary file.</span></span>|[<span data-ttu-id="7625d-304">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="7625d-304">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-305">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-305">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-306">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-306">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-307">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-307">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-308">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-308">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-309">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-309">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(double value);" />
      <MemberSignature Language="F#" Value="abstract member Write : double -&gt; unit&#xA;override this.Write : double -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-310">Valeur à virgule flottante de 8 octets à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-310">The eight-byte floating-point value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-311">Écrit une valeur à virgule flottante de 8 octets dans le flux actuel et avance la position du flux de 8 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-311">Writes an eight-byte floating-point value to the current stream and advances the stream position by eight bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-312">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-312">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-313">L’exemple de code suivant montre comment lire et écrire `Double` données vers la mémoire à l’aide de la <xref:System.IO.BinaryReader> et `BinaryWriter` classes en haut de la <xref:System.IO.MemoryStream> classe.</span><span class="sxs-lookup"><span data-stu-id="7625d-313">The following code example shows how to read and write `Double` data to memory by using the <xref:System.IO.BinaryReader> and `BinaryWriter` classes on top of the <xref:System.IO.MemoryStream> class.</span></span> <span data-ttu-id="7625d-314">`MemoryStream` uniquement les lectures et écritures `Byte` données.</span><span class="sxs-lookup"><span data-stu-id="7625d-314">`MemoryStream` only reads and writes `Byte` data.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-315">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-315">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-316">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-316">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-317">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-317">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-318">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-318">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-319">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-319">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(short value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int16 -&gt; unit&#xA;override this.Write : int16 -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-320">Entier signé de 2 octets à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-320">The two-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-321">Écrit un entier signé de 2 octets dans le flux actuel et avance la position du flux de 2 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-321">Writes a two-byte signed integer to the current stream and advances the stream position by two bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-322">`BinaryWriter` stocke ce type de données au format little endian.</span><span class="sxs-lookup"><span data-stu-id="7625d-322">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="7625d-323">Le tableau suivant répertorie des exemples d’autres tâches d’e/s courantes ou apparentées.</span><span class="sxs-lookup"><span data-stu-id="7625d-323">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="7625d-324">Pour...</span><span class="sxs-lookup"><span data-stu-id="7625d-324">To do this...</span></span>|<span data-ttu-id="7625d-325">Consultez l'exemple décrit dans cette rubrique...</span><span class="sxs-lookup"><span data-stu-id="7625d-325">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="7625d-326">Créer un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="7625d-326">Create a text file.</span></span>|[<span data-ttu-id="7625d-327">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="7625d-327">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="7625d-328">Écrire dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="7625d-328">Write to a text file.</span></span>|[<span data-ttu-id="7625d-329">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="7625d-329">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="7625d-330">Lire un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="7625d-330">Read from a text file.</span></span>|[<span data-ttu-id="7625d-331">Comment : lire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="7625d-331">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="7625d-332">Ajouter du texte dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-332">Append text to a file.</span></span>|[<span data-ttu-id="7625d-333">Comment : ouvrir un fichier journal et y ajouter des éléments</span><span class="sxs-lookup"><span data-stu-id="7625d-333">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-334">Obtenir la taille d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-334">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-335">Obtenir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-335">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-336">Définissez les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-336">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-337">Déterminer si un fichier existe.</span><span class="sxs-lookup"><span data-stu-id="7625d-337">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="7625d-338">Lire à partir d’un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="7625d-338">Read from a binary file.</span></span>|[<span data-ttu-id="7625d-339">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="7625d-339">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="7625d-340">Écrire dans un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="7625d-340">Write to a binary file.</span></span>|[<span data-ttu-id="7625d-341">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="7625d-341">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-342">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-342">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-343">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-343">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-344">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-344">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-345">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-345">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-346">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-346">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(int value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit&#xA;override this.Write : int -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-347">Entier signé de 4 octets à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-347">The four-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-348">Écrit un entier signé de 4 octets dans le flux actuel et avance la position du flux de 4 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-348">Writes a four-byte signed integer to the current stream and advances the stream position by four bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-349">`BinaryWriter` stocke ce type de données au format little endian.</span><span class="sxs-lookup"><span data-stu-id="7625d-349">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="7625d-350">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-350">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-351">L’exemple de code suivant montre comment stocker et récupérer des paramètres d’application dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-351">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-352">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-352">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-353">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-353">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-354">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-354">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-355">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-355">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-356">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-356">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(long value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int64 -&gt; unit&#xA;override this.Write : int64 -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-357">Entier signé de 8 octets à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-357">The eight-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-358">Écrit un entier signé de 8 octets dans le flux actuel et avance la position du flux de 8 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-358">Writes an eight-byte signed integer to the current stream and advances the stream position by eight bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-359">`BinaryWriter` stocke ce type de données au format little endian.</span><span class="sxs-lookup"><span data-stu-id="7625d-359">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="7625d-360">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-360">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-361">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-361">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-362">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-362">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-363">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-363">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-364">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-364">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-365">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-365">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : ReadOnlySpan&lt;byte&gt; -&gt; unit&#xA;override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="binaryWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (chars As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="abstract member Write : ReadOnlySpan&lt;char&gt; -&gt; unit&#xA;override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="binaryWriter.Write chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::SByte value);" />
      <MemberSignature Language="F#" Value="abstract member Write : sbyte -&gt; unit&#xA;override this.Write : sbyte -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-366">Octet signé à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-366">The signed byte to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-367">Écrit un octet signé dans le flux actuel et avance la position du flux d’un octet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-367">Writes a signed byte to the current stream and advances the stream position by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-368">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-368">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-369">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-369">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-370">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-370">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-371">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-371">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-372">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-372">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-373">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-373">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(float value);" />
      <MemberSignature Language="F#" Value="abstract member Write : single -&gt; unit&#xA;override this.Write : single -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-374">Valeur à virgule flottante de 4 octets à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-374">The four-byte floating-point value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-375">Écrit une valeur à virgule flottante de 4 octets dans le flux actuel et avance la position du flux de 4 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-375">Writes a four-byte floating-point value to the current stream and advances the stream position by four bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-376">`BinaryWriter` stocke ce type de données au format little endian.</span><span class="sxs-lookup"><span data-stu-id="7625d-376">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="7625d-377">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-377">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-378">L’exemple de code suivant montre comment stocker et récupérer des paramètres d’application dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-378">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-379">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-379">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-380">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-380">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-381">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-381">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-382">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-382">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-383">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-383">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-384">Valeur à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-384">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-385">Écrit dans ce flux une chaîne préfixée par sa longueur dans l’encodage actuel de <see cref="T:System.IO.BinaryWriter" /> et avance la position actuelle du flux en fonction de l’encodage utilisé et des caractères spécifiques écrits dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-385">Writes a length-prefixed string to this stream in the current encoding of the <see cref="T:System.IO.BinaryWriter" />, and advances the current position of the stream in accordance with the encoding used and the specific characters being written to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-386">Préfixée par sa longueur de signifie que cette méthode écrit d’abord la longueur de la chaîne, en octets, quand encodé avec le <xref:System.IO.BinaryWriter> encodage actuel de l’instance dans le flux.</span><span class="sxs-lookup"><span data-stu-id="7625d-386">Length-prefixed means that this method first writes the length of the string, in bytes, when encoded with the <xref:System.IO.BinaryWriter> instance's current encoding to the stream.</span></span> <span data-ttu-id="7625d-387">Cette valeur est écrite sous forme d’entier non signé.</span><span class="sxs-lookup"><span data-stu-id="7625d-387">This value is written as an unsigned integer.</span></span> <span data-ttu-id="7625d-388">Cette méthode écrit ensuite ce nombre d’octets dans le flux.</span><span class="sxs-lookup"><span data-stu-id="7625d-388">This method then writes that many bytes to the stream.</span></span>  
  
 <span data-ttu-id="7625d-389">Par exemple, la chaîne « A » a une longueur de 1, mais quand encodé en UTF-16 ; la longueur est de 2 octets, par conséquent, la valeur écrite dans le préfixe est 2, et 3 octets sont écrits dans le flux, y compris le préfixe.</span><span class="sxs-lookup"><span data-stu-id="7625d-389">For example, the string "A" has a length of 1, but when encoded with UTF-16; the length is 2 bytes, so the value written in the prefix is 2, and 3 bytes are written to the stream, including the prefix.</span></span>  
  
 <span data-ttu-id="7625d-390">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-390">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-391">L’exemple de code suivant montre comment stocker et récupérer des paramètres d’application dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="7625d-391">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-392">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-392">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7625d-393">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-393">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-394">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-394">The stream is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-395">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-395">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-396">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-396">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-397">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-397">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint16 -&gt; unit&#xA;override this.Write : uint16 -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-398">Entier non signé de 2 octets à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-398">The two-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-399">Écrit un entier non signé de 2 octets dans le flux actuel et avance la position du flux de 2 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-399">Writes a two-byte unsigned integer to the current stream and advances the stream position by two bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-400">`BinaryWriter` stocke ce type de données au format little endian.</span><span class="sxs-lookup"><span data-stu-id="7625d-400">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="7625d-401">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-401">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-402">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-402">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-403">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-403">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-404">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-404">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-405">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-405">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-406">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-406">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint32 -&gt; unit&#xA;override this.Write : uint32 -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-407">Entier non signé de 4 octets à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-407">The four-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-408">Écrit un entier non signé de 4 octets dans le flux actuel et avance la position du flux de 4 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-408">Writes a four-byte unsigned integer to the current stream and advances the stream position by four bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-409">`BinaryWriter` stocke ce type de données au format little endian.</span><span class="sxs-lookup"><span data-stu-id="7625d-409">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="7625d-410">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-410">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-411">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-411">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-412">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-412">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-413">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-413">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-414">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-414">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-415">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-415">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint64 -&gt; unit&#xA;override this.Write : uint64 -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-416">Entier non signé de 8 octets à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-416">The eight-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-417">Écrit un entier non signé de 8 octets dans le flux actuel et avance la position du flux de 8 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-417">Writes an eight-byte unsigned integer to the current stream and advances the stream position by eight bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-418">`BinaryWriter` stocke ce type de données au format little endian.</span><span class="sxs-lookup"><span data-stu-id="7625d-418">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="7625d-419">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-419">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-420">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-420">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-421">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-421">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-422">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-422">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-423">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-423">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-424">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-424">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] * int * int -&gt; unit&#xA;override this.Write : byte[] * int * int -&gt; unit" Usage="binaryWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="7625d-425">Tableau d’octets contenant les données à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-425">A byte array containing the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7625d-426">L’index du premier octet à lire à partir du <c>tampon</c> et à écrire dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-426">The index of the first byte to read from <c>buffer</c> and to write to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="7625d-427">Le nombre d’octets à lire à partir du <c>tampon</c> et à écrire dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-427">The number of bytes to read from <c>buffer</c> and to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-428">Écrit une zone d’un tableau d’octets dans le flux actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-428">Writes a region of a byte array to the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-429">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-429">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-430">L’exemple de code suivant montre comment écrire des données binaires à l’aide de la mémoire comme magasin de stockage et vérifiez que les données ont été écrites correctement.</span><span class="sxs-lookup"><span data-stu-id="7625d-430">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/CS/rwreadbytes.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/VB/rwreadbytes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7625d-431">La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-431">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7625d-432">
            <paramref name="buffer" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-432">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7625d-433">
            <paramref name="index" /> ou <paramref name="count" /> est un nombre négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-433">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-434">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-434">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-435">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-435">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-436">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-436">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-437">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-437">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-438">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-438">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (chars As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="binaryWriter.Write (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="7625d-439">Tableau de caractères contenant les données à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-439">A character array containing the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7625d-440">L’index du premier caractère à lire à partir de <c>chars</c> et à écrire dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-440">The index of the first character to read from <c>chars</c> and to write to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="7625d-441">Le nombre de caractères à lire à partir de <c>chars</c> et à écrire dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-441">The number of characters to read from <c>chars</c> and to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-442">Écrit dans le flux actuel une section d’un tableau de caractères et avance la position actuelle du flux en fonction du <see langword="Encoding" /> utilisé et éventuellement des caractères spécifiques écrits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-442">Writes a section of a character array to the current stream, and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and perhaps the specific characters being written to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-443">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-443">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7625d-444">L’exemple de code suivant montre comment lire et écrire des données à l’aide de la mémoire comme magasin de stockage.</span><span class="sxs-lookup"><span data-stu-id="7625d-444">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CPP/rwreadchars.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CS/rwreadchars.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/VB/rwreadchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7625d-445">La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-445">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7625d-446">
            <paramref name="chars" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-446">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7625d-447">
            <paramref name="index" /> ou <paramref name="count" /> est un nombre négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-447">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-448">Une erreur d’E/S se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-448">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-449">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-449">The stream is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7625d-450">Fichier et flux de données E/S</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-450">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7625d-451">Comment : lire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-451">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7625d-452">Comment : écrire du texte dans un fichier</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-452">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write7BitEncodedInt">
      <MemberSignature Language="C#" Value="protected void Write7BitEncodedInt (int value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Write7BitEncodedInt(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Write7BitEncodedInt (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Write7BitEncodedInt(int value);" />
      <MemberSignature Language="F#" Value="member this.Write7BitEncodedInt : int -&gt; unit" Usage="binaryWriter.Write7BitEncodedInt value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7625d-453">Entier 32 bits à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-453">The 32-bit integer to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7625d-454">Écrit un nombre entier 32 bits dans un format compressé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-454">Writes a 32-bit integer in a compressed format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7625d-455">Entier de la `value` paramètre est écrit par sept bits à la fois, en commençant par les sept bits les moins significatifs.</span><span class="sxs-lookup"><span data-stu-id="7625d-455">The integer of the `value` parameter is written out seven bits at a time, starting with the seven least-significant bits.</span></span> <span data-ttu-id="7625d-456">Le bit de poids fort d’un octet indique s’il existe davantage d’octets à écrire après celui-ci.</span><span class="sxs-lookup"><span data-stu-id="7625d-456">The high bit of a byte indicates whether there are more bytes to be written after this one.</span></span>  
  
 <span data-ttu-id="7625d-457">Si `value` tiendront dans sept bits, il faut un seul octet d’espace.</span><span class="sxs-lookup"><span data-stu-id="7625d-457">If `value` will fit in seven bits, it takes only one byte of space.</span></span> <span data-ttu-id="7625d-458">Si `value` ne tient pas dans sept bits, le bit de poids fort est défini sur le premier octet et écrit. `value` est alors déplacé de sept bits et l’autre octet est écrit.</span><span class="sxs-lookup"><span data-stu-id="7625d-458">If `value` will not fit in seven bits, the high bit is set on the first byte and written out. `value` is then shifted by seven bits and the next byte is written.</span></span> <span data-ttu-id="7625d-459">Ce processus est répété jusqu'à ce que la totalité de l’entier a été écrit.</span><span class="sxs-lookup"><span data-stu-id="7625d-459">This process is repeated until the entire integer has been written.</span></span>  
  
 <span data-ttu-id="7625d-460">Pour obtenir la liste des tâches d’e/s courantes, consultez [des tâches d’e/s courantes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="7625d-460">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="7625d-461">La fin du flux est atteinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-461">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7625d-462">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-462">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7625d-463">Le flux est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7625d-463">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>