<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileSystemWatcher.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f524b1e2438cea1c3c824aa9514a36244ccff373.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f524b1e2438cea1c3c824aa9514a36244ccff373</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.FileSystemWatcher">
          <source>Listens to the file system change notifications and raises events when a directory, or file in a directory, changes.</source>
          <target state="translated">Écoute les notifications de modifications du système de fichiers et déclenche un événement quand un répertoire ou un fichier d'un répertoire est modifié.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Use <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> to watch for changes in a specified directory.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> pour surveiller les modifications dans un répertoire spécifié.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>You can watch for changes in files and subdirectories of the specified directory.</source>
          <target state="translated">Vous pouvez surveiller les modifications de fichiers et sous-répertoires du répertoire spécifié.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>You can create a component to watch files on a local computer, a network drive, or a remote computer.</source>
          <target state="translated">Vous pouvez créer un composant pour surveiller les fichiers sur un ordinateur local, un lecteur réseau ou un ordinateur distant.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>To watch for changes in all files, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to an empty string ("") or use wildcards ("*.<ph id="ph2">\*</ph>").</source>
          <target state="translated">Pour surveiller les modifications apportées à tous les fichiers, la valeur du <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriété à une chaîne vide (« ») ou utiliser des caractères génériques (« *.<ph id="ph2">\*</ph>»).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>To watch a specific file, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to the file name.</source>
          <target state="translated">Pour visionner un fichier spécifique, définissez la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriété le nom de fichier.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For example, to watch for changes in the file MyDoc.txt, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to "MyDoc.txt".</source>
          <target state="translated">Par exemple, pour surveiller les modifications apportées au fichier mondoc.txt, définissez le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriété « Doit être mondoc.txt ».</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>You can also watch for changes in a certain type of file.</source>
          <target state="translated">Vous pouvez également surveiller les modifications apportées à un certain type de fichier.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For example, to watch for changes in text files, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to "<ph id="ph2">\*</ph>.txt".</source>
          <target state="translated">Par exemple, pour surveiller les modifications dans les fichiers texte, définissez la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriété »<ph id="ph2">\*</ph>.txt ».</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>There are several types of changes you can watch for in a directory or file.</source>
          <target state="translated">Il existe plusieurs types de modifications que vous pouvez surveiller les dans un fichier ou répertoire.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For example, you can watch for changes in <ph id="ph1">`Attributes`</ph>, the <ph id="ph2">`LastWrite`</ph> date and time, or the <ph id="ph3">`Size`</ph> of files or directories.</source>
          <target state="translated">Par exemple, vous pouvez surveiller les modifications de <ph id="ph1">`Attributes`</ph>, le <ph id="ph2">`LastWrite`</ph> date et l’heure, ou le <ph id="ph3">`Size`</ph> de fichiers ou répertoires.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>This is done by setting the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> property to one of the <ph id="ph2">&lt;xref:System.IO.NotifyFilters&gt;</ph> values.</source>
          <target state="translated">Cela en définissant le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> la propriété de la <ph id="ph2">&lt;xref:System.IO.NotifyFilters&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For more information on the type of changes you can watch, see <ph id="ph1">&lt;xref:System.IO.NotifyFilters&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur le type de modifications que vous pouvez regarder, consultez <ph id="ph1">&lt;xref:System.IO.NotifyFilters&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>You can watch for renaming, deletion, or creation of files or directories.</source>
          <target state="translated">Vous pouvez surveiller les renommer, la suppression ou la création de fichiers ou répertoires.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For example, to watch for renaming of text files, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to "*.txt" and call the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;</ph> method with a <ph id="ph3">&lt;xref:System.IO.WatcherChangeTypes.Renamed&gt;</ph> specified for its parameter.</source>
          <target state="translated">Par exemple, pour surveiller le changement de nom des fichiers texte, définissez la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriété sur « *.txt » et appelez le <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;</ph> méthode avec un <ph id="ph3">&lt;xref:System.IO.WatcherChangeTypes.Renamed&gt;</ph> spécifié pour son paramètre.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The Windows operating system notifies your component of file changes in a buffer created by the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Le système d’exploitation Windows notifie votre composant de modifications de fichier dans une mémoire tampon créée par le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>If there are many changes in a short time, the buffer can overflow.</source>
          <target state="translated">Si plusieurs modifications sont apportées dans une courte période, la mémoire tampon risque de déborder.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</source>
          <target state="translated">Cela entraîne le composant de perdre la trace des modifications dans le répertoire et ne donnera qu’une notification standard.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Increasing the size of the buffer with the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> property is expensive, as it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small yet large enough to not miss any file change events.</source>
          <target state="translated">Augmentation de la taille de la mémoire tampon avec le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriété est coûteuse, car elle provient d’une mémoire non paginée ne peut pas être transférée sur le disque, donc conserver la mémoire tampon en tant que petite encore grand suffisant pour disposer de n’importe quel fichier événements de modification.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>To avoid a buffer overflow, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> properties so you can filter out unwanted change notifications.</source>
          <target state="translated">Pour éviter un dépassement de capacité de mémoire tampon, utilisez la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> notifications de modification des propriétés pour que vous pouvez éliminer par filtrage indésirables.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, see the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Pour obtenir la liste de valeurs de propriété initiales d’une instance de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, consultez la <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.%23ctor%2A&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Please note the following when using the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> class.</source>
          <target state="translated">Notez les points suivants lorsque vous utilisez la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Hidden files are not ignored.</source>
          <target state="translated">Fichiers masqués ne sont pas ignorés.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>In some systems, <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> reports changes to files using the short 8.3 file name format.</source>
          <target state="translated">Dans certains systèmes, <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> signale des modifications apportées aux fichiers utilisant le format de nom de 8.3 fichier court.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For example, a change to  "LongFileName.LongExtension" could be reported as "LongFil~.Lon".</source>
          <target state="translated">Par exemple, une modification apportée à « LongFileName.LongExtension » peut être signalée comme « LongFi ~. LON ».</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">Cette classe contient une demande de liaison et une demande d’héritage au niveau de la classe qui s’applique à tous les membres.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> est levée lorsque l’appelant immédiat ou la classe dérivée n’a pas d’autorisations de confiance totale.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les demandes de sécurité, consultez <bpt id="p1">[</bpt>les demandes de liaison<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The maximum size you can set for the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> property for monitoring a directory over the network is 64 KB.</source>
          <target state="translated">La taille maximale que vous pouvez définir pour le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriété pour l’analyse d’un répertoire sur le réseau est de 64 Ko.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Running <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> on Windows 98 is not supported.</source>
          <target state="translated">En cours d’exécution <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> sur Windows 98 n’est pas pris en charge.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Copying and moving folders</source>
          <target state="translated">Copier et déplacer des dossiers</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The operating system and <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> object interpret a cut-and-paste action or a move action as a rename action for a folder and its contents.</source>
          <target state="translated">Le système d’exploitation et <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objet interpréter une action Couper-coller ou une action de déplacement comme une action de changement de nom pour un dossier et son contenu.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>If you cut and paste a folder with files into a folder being watched, the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> object reports only the folder as new, but not its contents because they are essentially only renamed.</source>
          <target state="translated">Si vous coupez et collez un dossier avec des fichiers dans un dossier surveillé, le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objet signale uniquement le dossier en tant que nouvelle, mais pas son contenu, car ils sont essentiellement renommés.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>To be notified that the contents of folders have been moved or copied into a watched folder, provide <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnRenamed%2A&gt;</ph> event handler methods as suggested in the following table.</source>
          <target state="translated">Pour être averti que le contenu des dossiers ont été déplacé ou copié dans un dossier de contrôle, vous devez fournir <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnRenamed%2A&gt;</ph> méthodes du Gestionnaire d’événements comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Event Handler</source>
          <target state="translated">Gestionnaire d’événements</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Events Handled</source>
          <target state="translated">Événements gérés</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Performs</source>
          <target state="translated">Effectue</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Report changes in file attributes, created files, and deleted files.</source>
          <target state="translated">Enregistrer les modifications apportées dans les attributs de fichier, les fichiers créés et aux fichiers supprimés.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>List the old and new paths of renamed files and folders, expanding recursively if needed.</source>
          <target state="translated">Répertorier les anciens et nouveaux chemins d’accès des fichiers renommés et des dossiers, développez de manière récursive si nécessaire.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Events and Buffer Sizes</source>
          <target state="translated">Les événements et les tailles de mémoires tampons</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Note that several factors can affect which file system change events are raised, as described by the following:</source>
          <target state="translated">Notez que plusieurs facteurs peuvent affecter les événements de changement de système de fichiers sont déclenchées, comme décrit par le texte suivant :</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Common file system operations might raise more than one event.</source>
          <target state="translated">Les opérations courantes de système de fichiers peuvent déclencher plusieurs événements.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For example, when a file is moved from one directory to another, several <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> and some <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> events might be raised.</source>
          <target state="translated">Par exemple, lorsqu’un fichier est déplacé d’un répertoire vers un autre, plusieurs <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> et certains <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> peuvent être déclenchés.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</source>
          <target state="translated">Déplacement de qu'un fichier est une opération complexe qui se compose de plusieurs opérations simples, déclenchant donc plusieurs événements.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">De même, certaines applications (par exemple, un logiciel antivirus) peuvent entraîner des événements de système de fichiers supplémentaires qui sont détectés par <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> can watch disks as long as they are not switched or removed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> peut surveiller les disques tant qu’ils ne sont pas basculés ou supprimés.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> does not raise events for CDs and DVDs, because time stamps and properties cannot change.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> ne déclenche pas d’événements pour les CD et DVD, étant donné que les horodatages et les propriétés ne peuvent pas modifier.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Remote computers must have one of the required platforms installed for the component to function properly.</source>
          <target state="translated">Les ordinateurs à distance doivent avoir une des plateformes requises pour le composant de fonctionner correctement.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>If multiple <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objects are watching the same UNC path in Windows XP prior to Service Pack 1, or Windows 2000 SP2 or earlier, then only one of the objects will raise an event.</source>
          <target state="translated">Si plusieurs <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> observent les objets du même chemin d’accès UNC dans Windows XP antérieure au Service Pack 1 ou Windows 2000 SP2 ou version antérieure, seul un des objets déclenchera un événement.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>On machines running Windows XP SP1 and newer, Windows 2000 SP3 or newer or Windows Server 2003, all <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objects will raise the appropriate events.</source>
          <target state="translated">Sur les ordinateurs exécutant Windows XP SP1 et versions ultérieures, Windows 2000 SP3 ou version ultérieure ou Windows Server 2003, toutes les <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objets déclenche les événements appropriés.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Note that a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> may miss an event when the buffer size is exceeded.</source>
          <target state="translated">Notez qu’un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> peut manquer un événement lorsque la taille de mémoire tampon est dépassée.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>To avoid missing events, follow these guidelines:</source>
          <target state="translated">Pour éviter de manquer des événements, suivez ces instructions :</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Increase the buffer size by setting the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> property.</source>
          <target state="translated">Augmenter la taille de mémoire tampon en définissant le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Avoid watching files with long file names, because a long file name contributes to filling up the buffer.</source>
          <target state="translated">Évitez d’observation des fichiers portant des noms de fichiers longs, car un nom de fichier long contribue au remplissage de la mémoire tampon.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Consider renaming these files using shorter names.</source>
          <target state="translated">Pensez à renommer ces fichiers à l’aide des noms plus courts.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Keep your event handling code as short as possible.</source>
          <target state="translated">Conservez votre événement autant que possible du code de gestion.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> to watch the directory specified at run time.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> à surveiller le répertoire spécifié au moment de l’exécution.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The component is set to watch for changes in <ph id="ph1">`LastWrite`</ph> and <ph id="ph2">`LastAccess`</ph> time, the creation, deletion, or renaming of text files in the directory.</source>
          <target state="translated">Le composant est défini pour surveiller les modifications apportées à <ph id="ph1">`LastWrite`</ph> et <ph id="ph2">`LastAccess`</ph> du temps, la création, suppression ou changement de nom des fichiers texte dans le répertoire.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>If a file is changed, created, or deleted, the path to the file prints to the console.</source>
          <target state="translated">Si un fichier est modifié, créé ou supprimé, le chemin d’accès au fichier s’imprime sur la console.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>When a file is renamed, the old and new paths print to the console.</source>
          <target state="translated">Lorsqu’un fichier est renommé, les chemins d’accès de l’ancien et nouveau impriment sur la console.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces for this example.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> et <ph id="ph2">&lt;xref:System.IO&gt;</ph> espaces de noms pour cet exemple.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>for deriving from the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessStartInfo" /&gt;</ph> class.</source>
          <target state="translated">pour dériver la <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessStartInfo" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>; Named Permission Sets: <ph id="ph2">&lt;see langword="FullTrust" /&gt;</ph>.</source>
          <target state="translated">Valeur de la demande : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>; Jeux d’autorisations nommés : <ph id="ph2">&lt;see langword="FullTrust" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="T:System.IO.FileSystemWatcher">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>You cannot watch a remote computer that does not have Windows NT or Windows 2000.</source>
          <target state="translated">Vous ne pouvez pas surveiller un ordinateur distant qui ne dispose pas de Windows NT ou Windows 2000.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</source>
          <target state="translated">Vous ne pouvez pas surveiller un ordinateur Windows NT 4.0 distant à partir d’un ordinateur Windows NT 4.0.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>Initial Value</source>
          <target state="translated">Valeur initiale</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>bitwise OR combination of <ph id="ph1">`LastWrite`</ph>, <ph id="ph2">`FileName`</ph>, and <ph id="ph3">`DirectoryName`</ph></source>
          <target state="translated">combinaison d’opérations OR <ph id="ph1">`LastWrite`</ph>, <ph id="ph2">`FileName`</ph>, et <ph id="ph3">`DirectoryName`</ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>"*.<ph id="ph1">\*</ph>" (Watch all files.)</source>
          <target state="translated">"*. <ph id="ph1">\*</ph>« (Analyse de tous les fichiers.)</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>8192</source>
          <target state="translated">8192</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>empty string ("")</source>
          <target state="translated">Une chaîne vide (« »)</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>The component will not watch the specified directory until the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> is set, and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Le composant ne surveillera pas le répertoire spécifié jusqu'à ce que le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> est défini, et <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> object to watch the directory specified at run time.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objet à surveiller le répertoire spécifié au moment de l’exécution.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> object watches for changes in <ph id="ph2">`LastWrite`</ph> and <ph id="ph3">`LastAccess`</ph> times, and for the creation, deletion, or renaming of text files in the directory.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objet surveille les modifications apportées dans <ph id="ph2">`LastWrite`</ph> et <ph id="ph3">`LastAccess`</ph> heures et pour la création, suppression ou changement de nom du texte de fichiers dans le répertoire.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>If a file is changed, created, or deleted, the path to the file displays to the console.</source>
          <target state="translated">Si un fichier est modifié, créé ou supprimé, le chemin d’accès au fichier s’affiche dans la console.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>When a file is renamed, the old and new paths display to the console.</source>
          <target state="translated">Lorsqu’un fichier est renommé, les chemins d’accès de l’ancien et nouveau affichent dans la console.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> et <ph id="ph2">&lt;xref:System.IO&gt;</ph> espaces de noms.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">pour la confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</source>
          <target state="translated">Répertoire à surveiller, en notation standard ou UNC (Universal Naming Convention).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> class, given the specified directory to monitor.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> en fonction du répertoire spécifié à surveiller.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The component will not watch the specified directory until the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> is set, and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Le composant ne surveillera pas le répertoire spécifié jusqu'à ce que le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> est défini, et <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The component can watch files on your personal computer, a network drive, or a remote computer.</source>
          <target state="translated">Le composant peut surveiller les fichiers sur votre ordinateur personnel, un lecteur réseau ou un ordinateur distant.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>You cannot watch a remote computer that does not have Windows NT or Windows 2000.</source>
          <target state="translated">Vous ne pouvez pas surveiller un ordinateur distant qui ne dispose pas de Windows NT ou Windows 2000.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</source>
          <target state="translated">Vous ne pouvez pas surveiller un ordinateur Windows NT 4.0 distant à partir d’un ordinateur Windows NT 4.0.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property is set by default to watch all files.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriété a la valeur par défaut à surveiller tous les fichiers.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="path" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is an empty string ("").</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="path" /&gt;</ph> est une chaîne vide ("").</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The path specified through the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter does not exist.</source>
          <target state="translated">Le chemin d'accès spécifié via le paramètre <ph id="ph1">&lt;paramref name="path" /&gt;</ph> n'existe pas.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is too long.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> est trop longue.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">pour la confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</source>
          <target state="translated">Répertoire à surveiller, en notation standard ou UNC (Universal Naming Convention).</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The type of files to watch.</source>
          <target state="translated">Type des fichiers à surveiller.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>For example, "*.txt" watches for changes to all text files.</source>
          <target state="translated">Par exemple, "*.txt" permet de surveiller les modifications apportées à tous les fichiers texte.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> class, given the specified directory and type of files to monitor.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> en fonction du répertoire et du type de fichiers à surveiller spécifiés.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The component will not watch the specified directory until the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> is set, and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Le composant ne surveillera pas le répertoire spécifié jusqu'à ce que le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> est défini, et <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The component can watch files on your personal computer, a network drive, or a remote computer.</source>
          <target state="translated">Le composant peut surveiller les fichiers sur votre ordinateur personnel, un lecteur réseau ou un ordinateur distant.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>You cannot watch a remote computer that does not have Windows NT or Windows 2000.</source>
          <target state="translated">Vous ne pouvez pas surveiller un ordinateur distant qui ne dispose pas de Windows NT ou Windows 2000.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</source>
          <target state="translated">Vous ne pouvez pas surveiller un ordinateur Windows NT 4.0 distant à partir d’un ordinateur Windows NT 4.0.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="path" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="filter" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="filter" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is an empty string ("").</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="path" /&gt;</ph> est une chaîne vide ("").</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The path specified through the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter does not exist.</source>
          <target state="translated">Le chemin d'accès spécifié via le paramètre <ph id="ph1">&lt;paramref name="path" /&gt;</ph> n'existe pas.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is too long.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> est trop longue.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">pour la confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.BeginInit">
          <source>Begins the initialization of a <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> used on a form or used by another component.</source>
          <target state="translated">Lance l'initialisation d'un élément <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> utilisé sur un formulaire ou par un autre composant.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.BeginInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">L'initialisation se produit au moment de l'exécution.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.BeginInit">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> design environment uses this method to start the initialization of a component used on a form or used by another component.</source>
          <target state="translated">Le <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> conception environnement utilise cette méthode pour démarrer l’initialisation d’un composant utilisé dans un formulaire ou par un autre composant.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;</ph> méthode termine l’initialisation.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.BeginInit">
          <source>Using the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">À l’aide de la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;</ph> méthodes empêche le contrôle avant son initialisation complète.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>Occurs when a file or directory in the specified <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> is changed.</source>
          <target state="translated">Se produit quand un fichier ou un répertoire du <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> spécifié est modifié.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> event is raised when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> événement est déclenché lorsque des modifications sont apportées à la taille, les attributs système, la dernière écriture, heure du dernier accès, autorisations de sécurité d’un fichier ou un répertoire dans le répertoire en cours d’analyse.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>Common file system operations might raise more than one event.</source>
          <target state="translated">Les opérations courantes de système de fichiers peuvent déclencher plusieurs événements.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>For example, when a file is moved from one directory to another, several <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> and some <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> events might be raised.</source>
          <target state="translated">Par exemple, lorsqu’un fichier est déplacé d’un répertoire vers un autre, plusieurs <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> et certains <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> peuvent être déclenchés.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</source>
          <target state="translated">Déplacement de qu'un fichier est une opération complexe qui se compose de plusieurs opérations simples, déclenchant donc plusieurs événements.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">De même, certaines applications (par exemple, un logiciel antivirus) peuvent entraîner des événements de système de fichiers supplémentaires qui sont détectés par <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>Use <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> to restrict the number of notifications raised when this event is handled.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> pour restreindre le nombre de notifications générées lors du traitement de cet événement.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> event is raised unexpectedly when a file is renamed, but is not raised when a directory is renamed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> événement est déclenché de manière inopinée lorsqu’un fichier est renommé, mais n’est pas déclenché lorsqu’un répertoire est renommé.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>To watch for renaming, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> event.</source>
          <target state="translated">Pour surveiller le changement de nom, utilisez le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>The order in which the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> event is raised in relation to the other <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> events may change when the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> property is not <ph id="ph4">`null`</ph>.</source>
          <target state="translated">L’ordre dans lequel le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> événement est déclenché par rapport à l’autre <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> événements peuvent changer lors la <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> propriété n’est pas <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> event to display the file path to the console whenever the watched file is changed.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> événement afin d’afficher le chemin d’accès à la console chaque fois que le fichier de contrôle est modifié.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="E:System.IO.FileSystemWatcher.Created">
          <source>Occurs when a file or directory in the specified <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> is created.</source>
          <target state="translated">Se produit quand un fichier ou un répertoire du <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> spécifié est créé.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</source>
          <target state="translated">Certaines occurrences courantes, telles que la copie ou déplace un fichier ou répertoire, ne correspondent pas directement à un événement, mais ces occurrences provoquent le déclenchement d’événements.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>When you copy a file or directory, the system raises a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event in the directory to which the file was copied, if that directory is being watched.</source>
          <target state="translated">Lorsque vous copiez un fichier ou un répertoire, le système génère un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement dans le répertoire dans lequel le fichier a été copié, si le suivi de ce répertoire.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>If the directory from which you copied was being watched by another instance of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, no event would be raised.</source>
          <target state="translated">Si le répertoire à partir duquel vous avez copié est surveillé par une autre instance de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, aucun événement.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>For example, you create two instances of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Par exemple, vous créez deux instances de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</source>
          <target state="translated">FileSystemWatcher1 est défini pour surveiller les « C:\My Documents » et FileSystemWatcher2 est défini pour surveiller les « Documents C:\Your ».</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>If you copy a file from "My Documents" into "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</source>
          <target state="translated">Si vous copiez un fichier à partir de « Mes Documents » dans « Vos Documents », un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement sera déclenché par FileSystemWatcher2, mais aucun événement est déclenché par FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>Unlike copying, moving a file or directory would raise two events.</source>
          <target state="translated">Contrairement à la copie, déplacement d’un fichier ou répertoire déclenche deux événements.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>From the previous example, if you moved a file from "My Documents" to "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event would be raised by FileSystemWatcher2 and a <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> event would be raised by FileSystemWatcher1.</source>
          <target state="translated">À partir de l’exemple précédent, si vous déplacez un fichier à partir de « Mes Documents » vers « Vos Documents », un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement est déclenché par FileSystemWatcher2 et un <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> événement est déclenché par FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>Common file system operations might raise more than one event.</source>
          <target state="translated">Les opérations courantes de système de fichiers peuvent déclencher plusieurs événements.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>For example, when a file is moved from one directory to another, several <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> and some <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> events might be raised.</source>
          <target state="translated">Par exemple, lorsqu’un fichier est déplacé d’un répertoire vers un autre, plusieurs <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> et certains <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> peuvent être déclenchés.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</source>
          <target state="translated">Déplacement de qu'un fichier est une opération complexe qui se compose de plusieurs opérations simples, déclenchant donc plusieurs événements.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">De même, certaines applications (par exemple, un logiciel antivirus) peuvent entraîner des événements de système de fichiers supplémentaires qui sont détectés par <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>The order in which the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event is raised in relation to the other <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> events may change when the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> property is not <ph id="ph4">`null`</ph>.</source>
          <target state="translated">L’ordre dans lequel le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement est déclenché par rapport à l’autre <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> événements peuvent changer lors la <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> propriété n’est pas <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> event is raised as soon as a file is created.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> événement est déclenché dès qu’un fichier est créé.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>If a file is being copied or transferred into a watched directory, the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> event will be raised immediately, followed by one or more <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> events.</source>
          <target state="translated">Si un fichier est copié ou transféré vers un répertoire surveillé, le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> événement est déclenché immédiatement, suivi par un ou plusieurs <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> événements.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event to display the file path to the console whenever the watched file is created.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement afin d’afficher le chemin d’accès à la console chaque fois que le fichier de contrôle est créé.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>Occurs when a file or directory in the specified <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> is deleted.</source>
          <target state="translated">Se produit quand un fichier ou un répertoire du <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> spécifié est supprimé.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</source>
          <target state="translated">Certaines occurrences courantes, telles que la copie ou déplace un fichier ou répertoire, ne correspondent pas directement à un événement, mais ces occurrences provoquent le déclenchement d’événements.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>When you copy a file or directory, the system raises a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event in the directory to which the file was copied, if that directory is being watched.</source>
          <target state="translated">Lorsque vous copiez un fichier ou un répertoire, le système génère un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement dans le répertoire dans lequel le fichier a été copié, si le suivi de ce répertoire.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>If the directory from which you copied was being watched by another instance of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, no event would be raised.</source>
          <target state="translated">Si le répertoire à partir duquel vous avez copié est surveillé par une autre instance de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, aucun événement.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>For example, you create two instances of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Par exemple, vous créez deux instances de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</source>
          <target state="translated">FileSystemWatcher1 est défini pour surveiller les « C:\My Documents » et FileSystemWatcher2 est défini pour surveiller les « Documents C:\Your ».</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>If you copy a file from "My Documents" into "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</source>
          <target state="translated">Si vous copiez un fichier à partir de « Mes Documents » dans « Vos Documents », un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement sera déclenché par FileSystemWatcher2, mais aucun événement est déclenché par FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>Unlike copying, moving a file or directory would raise two events.</source>
          <target state="translated">Contrairement à la copie, déplacement d’un fichier ou répertoire déclenche deux événements.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>From the previous example, if you moved a file from "My Documents" to "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event would be raised by FileSystemWatcher2 and a <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> event would be raised by FileSystemWatcher1.</source>
          <target state="translated">À partir de l’exemple précédent, si vous déplacez un fichier à partir de « Mes Documents » vers « Vos Documents », un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement est déclenché par FileSystemWatcher2 et un <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> événement est déclenché par FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>Common file system operations might raise more than one event.</source>
          <target state="translated">Les opérations courantes de système de fichiers peuvent déclencher plusieurs événements.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>For example, when a file is moved from one directory to another, several <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> and some <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> events might be raised.</source>
          <target state="translated">Par exemple, lorsqu’un fichier est déplacé d’un répertoire vers un autre, plusieurs <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> et certains <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> peuvent être déclenchés.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</source>
          <target state="translated">Déplacement de qu'un fichier est une opération complexe qui se compose de plusieurs opérations simples, déclenchant donc plusieurs événements.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">De même, certaines applications (par exemple, un logiciel antivirus) peuvent entraîner des événements de système de fichiers supplémentaires qui sont détectés par <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>The order in which the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> event is raised in relation to the other <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> events may change when the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> property is not <ph id="ph4">`null`</ph>.</source>
          <target state="translated">L’ordre dans lequel le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> événement est déclenché par rapport à l’autre <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> événements peuvent changer lors la <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> propriété n’est pas <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> event to display the file path to the console whenever the watched file is deleted.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> événement afin d’afficher le chemin d’accès à la console chaque fois que le fichier de contrôle est supprimé.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode est appelée par le public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> appelle la méthode protégée <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Dispose%2A&gt;</ph> méthode avec la <ph id="ph3">`disposing`</ph> paramètre la valeur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Dispose%2A&gt;</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> appelle <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Dispose%2A&gt;</ph> avec <ph id="ph3">`disposing`</ph> la valeur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> references.</source>
          <target state="translated">Si le paramètre <ph id="ph1">`disposing`</ph> a la valeur <ph id="ph2">`true`</ph>, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <ph id="ph3">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">Cette méthode appelle la méthode <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> de chaque objet référencé.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> peut être appelée plusieurs fois par d'autres objets.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /&gt;</ph> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’implémentation <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /&gt;</ph>, consultez <bpt id="p1">[</bpt>implémentant une méthode de suppression<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> et <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>Gets or sets a value indicating whether the component is enabled.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si le composant est activé.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the component is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le composant est activé ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>If you are using the component on a designer in <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>, the default is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Si vous utilisez le composant sur un concepteur dans <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>, la valeur par défaut est <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The component will not raise events unless you set <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Le composant déclenche des événements, sauf si vous définissez <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> à <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The component will not watch the specified directory until the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property has been set and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Le composant ne surveillera pas le répertoire spécifié jusqu'à ce que le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriété a été définie et <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;</ph> method allows event handlers to be invoked to respond to file changes even if this property is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;</ph> méthode permet de gestionnaires d’événements à appeler pour répondre aux modifications de fichier même si cette propriété est définie sur <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> to watch the directory specified at run time.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> à surveiller le répertoire spécifié au moment de l’exécution.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The component is set to watch for changes in <ph id="ph1">`LastWrite`</ph> and <ph id="ph2">`LastAccess`</ph> time, the creation, deletion, or renaming of text files in the directory.</source>
          <target state="translated">Le composant est défini pour surveiller les modifications apportées à <ph id="ph1">`LastWrite`</ph> et <ph id="ph2">`LastAccess`</ph> du temps, la création, suppression ou changement de nom des fichiers texte dans le répertoire.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>If a file is changed, created, or deleted, the path to the file prints to the console.</source>
          <target state="translated">Si un fichier est modifié, créé ou supprimé, le chemin d’accès au fichier s’imprime sur la console.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>When a file is renamed, the old and new paths print to the console.</source>
          <target state="translated">Lorsqu’un fichier est renommé, les chemins d’accès de l’ancien et nouveau impriment sur la console.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces for this example.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> et <ph id="ph2">&lt;xref:System.IO&gt;</ph> espaces de noms pour cet exemple.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> object has been disposed.</source>
          <target state="translated">L’objet <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The current operating system is not Microsoft Windows NT or later.</source>
          <target state="translated">Le système d’exploitation actuel n’est pas Microsoft Windows NT ou version ultérieure.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The directory specified in <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> could not be found.</source>
          <target state="translated">Le répertoire spécifié dans <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> est introuvable.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source><ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> has not been set or is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> n'a pas été défini ou n'est pas valide.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.EndInit">
          <source>Ends the initialization of a <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> used on a form or used by another component.</source>
          <target state="translated">Termine l'initialisation d'un élément <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> utilisé sur un formulaire ou par un autre composant.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.EndInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">L'initialisation se produit au moment de l'exécution.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.EndInit">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> design environment uses this method to end the initialization of a component used on a form or used by another component.</source>
          <target state="translated">Le <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> conception environnement utilise cette méthode pour terminer l’initialisation d’un composant utilisé dans un formulaire ou par un autre composant.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;</ph> method starts the initialization.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;</ph> méthode démarre l’initialisation.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.EndInit">
          <source>Using the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">À l’aide de la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;</ph> méthodes empêche le contrôle avant son initialisation complète.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="E:System.IO.FileSystemWatcher.Error">
          <source>Occurs when the instance of <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> is unable to continue monitoring changes or when the internal buffer overflows.</source>
          <target state="translated">Se produit quand l'instance de <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> ne peut pas continuer à surveiller des modifications ou quand il y a un dépassement de mémoire tampon interne.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>This event is raised whenever something prevents the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> object from monitoring changes.</source>
          <target state="translated">Cet événement est déclenché chaque fois qu’un élément empêche la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objet à partir de la surveillance des modifications.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>For example, if the object is monitoring changes in a remote directory and the connection to that directory is lost, the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Error&gt;</ph> event is raised.</source>
          <target state="translated">Par exemple, si l’objet est surveiller les modifications apportées dans un répertoire distant et la connexion à ce répertoire est perdue, la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Error&gt;</ph> événement est déclenché.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>The system notifies you of file changes, and it stores those changes in a buffer that the component creates and passes to the APIs.</source>
          <target state="translated">Le système vous notifie des modifications de fichier, et stocke ces modifications dans une mémoire tampon que le composant crée et passe aux API.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>If there are many changes in a short time, the buffer can overflow.</source>
          <target state="translated">Si plusieurs modifications sont apportées dans une courte période, la mémoire tampon risque de déborder.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</source>
          <target state="translated">Cela entraîne le composant de perdre la trace des modifications dans le répertoire et ne donnera qu’une notification standard.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>Increasing the size of the buffer is expensive, because it comes from non paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</source>
          <target state="translated">Augmentation de la taille de la mémoire tampon est coûteuse, car elle provient de non à la mémoire paginée ne peut pas être transférée sur le disque, c’est le cas conserver la mémoire tampon plus petite possible.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>To avoid a buffer overflow, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> properties to filter out unwanted change notifications.</source>
          <target state="translated">Pour éviter un dépassement de capacité de mémoire tampon, utilisez la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> notifications de modification des propriétés à filtrer indésirables.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>Common file system operations might raise more than one event.</source>
          <target state="translated">Les opérations courantes de système de fichiers peuvent déclencher plusieurs événements.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>For example, when a file is moved from one directory to another, several <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> and some <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> events might be raised.</source>
          <target state="translated">Par exemple, lorsqu’un fichier est déplacé d’un répertoire vers un autre, plusieurs <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> et certains <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> peuvent être déclenchés.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</source>
          <target state="translated">Déplacement de qu'un fichier est une opération complexe qui se compose de plusieurs opérations simples, déclenchant donc plusieurs événements.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">De même, certaines applications (par exemple, un logiciel antivirus) peuvent entraîner des événements de système de fichiers supplémentaires qui sont détectés par <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Gets or sets the filter string used to determine what files are monitored in a directory.</source>
          <target state="translated">Obtient ou définit la chaîne de filtrage utilisée pour déterminer les fichiers à surveiller dans un répertoire.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>The filter string.</source>
          <target state="translated">Chaîne de filtrage.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>The default is "*.<ph id="ph1">\*</ph>" (Watches all files.)</source>
          <target state="translated">La valeur par défaut est « *. <ph id="ph1">\*</ph>« (Surveille tous les fichiers.)</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>To watch changes in all files, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to an empty string ("").</source>
          <target state="translated">Pour effectuer le suivi des modifications dans tous les fichiers, définissez le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriété à une chaîne vide (« »).</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>To watch a specific file, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to the file name.</source>
          <target state="translated">Pour visionner un fichier spécifique, définissez la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriété le nom de fichier.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>For example, to watch for changes in the file MyDoc.txt, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to "MyDoc.txt".</source>
          <target state="translated">Par exemple, pour surveiller les modifications apportées au fichier mondoc.txt, définissez le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriété « Doit être mondoc.txt ».</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>You can also watch for changes in a certain type of file.</source>
          <target state="translated">Vous pouvez également surveiller les modifications apportées à un certain type de fichier.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>For example, to watch for changes in any text files, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to "*.txt".</source>
          <target state="translated">Par exemple, pour surveiller les modifications dans les fichiers texte, définissez la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriété « *.txt ».</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Use of multiple filters such as "<ph id="ph1">\*</ph>.txt&amp;#124;<ph id="ph2">\*</ph>.doc" is not supported.</source>
          <target state="translated">Utilisation de plusieurs filtres tels que «<ph id="ph1">\*</ph>.txt&amp;#124;<ph id="ph2">\*</ph>.doc » n’est pas pris en charge.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property can be changed after the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> object has started receiving events.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriété peut être modifiée après le <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objet a commencé à recevoir des événements.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>For more information about filtering out unwanted notifications, see the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> properties.</source>
          <target state="translated">Pour plus d’informations sur le filtrage de notifications inutiles, consultez le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> accepts wildcards for matching files, as shown in the following examples.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> accepte les caractères génériques pour les fichiers correspondants, comme indiqué dans les exemples suivants.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Filter string</source>
          <target state="translated">Chaîne de filtre</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Watches the following files</source>
          <target state="translated">Surveille les fichiers suivants</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>*.<ph id="ph1">\*</ph></source>
          <target state="translated">*.<ph id="ph1">\*</ph></target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>All files (default).</source>
          <target state="translated">Tous les fichiers (par défaut).</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>An empty string ("") also watches all files.</source>
          <target state="translated">Une chaîne vide (« ») également surveille tous les fichiers.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>*.txt</source>
          <target state="translated">*.txt</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>All files with a "txt" extension.</source>
          <target state="translated">Tous les fichiers avec une extension « txt ».</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>*recipe.doc</source>
          <target state="translated">*recipe.doc</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>All files ending in "recipe" with a "doc" extension.</source>
          <target state="translated">Tous les fichiers se terminant par « recette » avec une extension « document ».</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>win*.xml</source>
          <target state="translated">win*.xml</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>All files beginning with "win" with an "xml" extension.</source>
          <target state="translated">Tous les fichiers commençant par « win » avec l’extension « xml ».</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Sales*200?.xls</source>
          <target state="translated">Ventes * 200 ?. xls</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Matches the following:</source>
          <target state="translated">Correspond à la suivante :</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Sales July 2001.xlsSales Aug 2002.xlsSales March 2004.xls</source>
          <target state="translated">Ventes juillet 2001.xlsSales août 2002.xlsSales mars 2004.xls</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>but does not match:</source>
          <target state="translated">mais ne correspond pas à :</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Sales Nov 1999.xls</source>
          <target state="translated">Novembre ventes 1999.xls</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>MyReport.Doc</source>
          <target state="translated">MyReport.Doc</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Watches only MyReport.doc</source>
          <target state="translated">Surveille uniquement le suivi de MyReport.doc</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> to watch the directory specified at run time.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> à surveiller le répertoire spécifié au moment de l’exécution.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>The component is set to watch for changes in <ph id="ph1">`LastWrite`</ph> and <ph id="ph2">`LastAccess`</ph> time, the creation, deletion, or renaming of text files in the directory.</source>
          <target state="translated">Le composant est défini pour surveiller les modifications apportées à <ph id="ph1">`LastWrite`</ph> et <ph id="ph2">`LastAccess`</ph> du temps, la création, suppression ou changement de nom des fichiers texte dans le répertoire.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>If a file is changed, created, or deleted, the path to the file prints to the console.</source>
          <target state="translated">Si un fichier est modifié, créé ou supprimé, le chemin d’accès au fichier s’imprime sur la console.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>When a file is renamed, the old and new paths print to the console.</source>
          <target state="translated">Lorsqu’un fichier est renommé, les chemins d’accès de l’ancien et nouveau impriment sur la console.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces for this example.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> et <ph id="ph2">&lt;xref:System.IO&gt;</ph> espaces de noms pour cet exemple.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>Gets or sets a value indicating whether subdirectories within the specified path should be monitored.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si les sous-répertoires du chemin d’accès spécifié doivent être surveillés.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if you want to monitor subdirectories; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si vous voulez surveiller les sous-répertoires ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>Set <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> to <ph id="ph2">`true`</ph> when you want to watch for change notifications for files and directories contained within the directory specified through the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property, and its subdirectories.</source>
          <target state="translated">Définissez <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> à <ph id="ph2">`true`</ph> lorsque vous souhaitez surveiller les notifications de modification des fichiers et répertoires contenus dans le répertoire spécifié par le biais du <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriété et ses sous-répertoires.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>Setting the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> property to <ph id="ph2">`false`</ph> helps reduce the number of notifications sent to the internal buffer.</source>
          <target state="translated">Définition de la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> propriété <ph id="ph2">`false`</ph> contribue à réduire le nombre de notifications envoyées vers la mémoire tampon interne.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>For more information on filtering out unwanted notifications, see the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> properties.</source>
          <target state="translated">Pour plus d’informations sur le filtrage de notifications inutiles, consultez le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>When <ph id="ph1">`true`</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> is recursive through the entire sub tree, not just the immediate child directories.</source>
          <target state="translated">Lorsque <ph id="ph1">`true`</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> est récurrente à travers la totalité du sous-arbre, et pas uniquement dans les répertoires enfants immédiats.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>The relative path to a file or directory within the sub tree returns in the <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.Name%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.IO.FileSystemEventArgs&gt;</ph> and the <ph id="ph3">&lt;xref:System.IO.RenamedEventArgs.OldName%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.IO.RenamedEventArgs&gt;</ph>, depending on changes you are watching for.</source>
          <target state="translated">Le chemin d’accès relatif à un fichier ou répertoire dans le sous-arbre retourne dans le <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.Name%2A&gt;</ph> propriété du <ph id="ph2">&lt;xref:System.IO.FileSystemEventArgs&gt;</ph> et <ph id="ph3">&lt;xref:System.IO.RenamedEventArgs.OldName%2A&gt;</ph> propriété de <ph id="ph4">&lt;xref:System.IO.RenamedEventArgs&gt;</ph>, selon les modifications suivies.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>You can get the fully qualified path from the <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.FullPath%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.IO.FileSystemEventArgs&gt;</ph> and the <ph id="ph3">&lt;xref:System.IO.RenamedEventArgs.OldFullPath%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.IO.RenamedEventArgs&gt;</ph>, depending on the changes you are watching for.</source>
          <target state="translated">Vous pouvez obtenir le chemin d’accès complet à partir de la <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.FullPath%2A&gt;</ph> propriété du <ph id="ph2">&lt;xref:System.IO.FileSystemEventArgs&gt;</ph> et <ph id="ph3">&lt;xref:System.IO.RenamedEventArgs.OldFullPath%2A&gt;</ph> propriété de <ph id="ph4">&lt;xref:System.IO.RenamedEventArgs&gt;</ph>, selon les modifications suivies.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>If a directory is created in the sub tree of the directory you are watching, and <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> is <ph id="ph2">`true`</ph>, that directory will automatically be watched.</source>
          <target state="translated">Si un répertoire est créé dans le sous-arbre du répertoire que vous surveillez et <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> est <ph id="ph2">`true`</ph>, ce répertoire sera automatiquement surveillé.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>Gets or sets the size (in bytes) of the internal buffer.</source>
          <target state="translated">Obtient ou définit la taille (en octets) de la mémoire tampon interne.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>The internal buffer size in bytes.</source>
          <target state="translated">Taille de la mémoire tampon interne en octets.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>The default is 8192 (8 KB).</source>
          <target state="translated">La valeur par défaut est 8 192 (8 Ko).</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>You can set the buffer to 4 KB or larger, but it must not exceed 64 KB.</source>
          <target state="translated">Vous pouvez définir la mémoire tampon de 4 Ko ou plus, mais il ne doit pas dépasser 64 Ko.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>If you try to set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> property to less than 4096 bytes, your value is discarded and the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> property is set to 4096 bytes.</source>
          <target state="translated">Si vous essayez de définir la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriété inférieure à 4 096 octets, votre valeur est ignorée et la <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> est définie sur 4 096 octets.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>For best performance, use a multiple of 4 KB on Intel-based computers.</source>
          <target state="translated">Pour de meilleures performances, utilisez un multiple de 4 Ko sur les ordinateurs Intel.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>The system notifies the component of file changes, and it stores those changes in a buffer the component creates and passes to the APIs.</source>
          <target state="translated">Le système notifie le composant des modifications de fichier, et stocke ces modifications dans une mémoire tampon le composant crée et passe aux API.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>Each event can use up to 16 bytes of memory, not including the file name.</source>
          <target state="translated">Chaque événement peut utiliser jusqu'à 16 octets de mémoire, sans le nom de fichier.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>If there are many changes in a short time, the buffer can overflow.</source>
          <target state="translated">Si plusieurs modifications sont apportées dans une courte période, la mémoire tampon risque de déborder.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</source>
          <target state="translated">Cela entraîne le composant de perdre la trace des modifications dans le répertoire et ne donnera qu’une notification standard.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>Increasing the size of the buffer can prevent missing file system change events.</source>
          <target state="translated">Augmenter la taille de la mémoire tampon peut empêcher manquant de système de fichiers des événements de modification.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>However, increasing buffer size is expensive, because it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</source>
          <target state="translated">Toutefois, l’augmentation de taille de mémoire tampon est coûteuse, car elle provient d’une mémoire non paginée ne peut pas être transférée sur le disque, donc conserver la mémoire tampon aussi petite que possible.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>To avoid a buffer overflow, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> properties to filter out unwanted change notifications.</source>
          <target state="translated">Pour éviter un dépassement de capacité de mémoire tampon, utilisez la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> notifications de modification des propriétés à filtrer indésirables.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>Gets or sets the type of changes to watch for.</source>
          <target state="translated">Obtient ou définit le type de modifications à surveiller.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.NotifyFilters" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.IO.NotifyFilters" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>The default is the bitwise OR combination of <ph id="ph1">&lt;see langword="LastWrite" /&gt;</ph>, <ph id="ph2">&lt;see langword="FileName" /&gt;</ph>, and <ph id="ph3">&lt;see langword="DirectoryName" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est la combinaison OR au niveau du bit de <ph id="ph1">&lt;see langword="LastWrite" /&gt;</ph>, <ph id="ph2">&lt;see langword="FileName" /&gt;</ph> et <ph id="ph3">&lt;see langword="DirectoryName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>You can combine the members of the <ph id="ph1">&lt;xref:System.IO.NotifyFilters&gt;</ph> enumeration to watch for more than one type of change at a time.</source>
          <target state="translated">Vous pouvez combiner les membres de le <ph id="ph1">&lt;xref:System.IO.NotifyFilters&gt;</ph> énumération pour surveiller plusieurs types de modification à la fois.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>For example, you can watch for changes in size of a file, and for changes in the <ph id="ph1">`LastWrite`</ph> time.</source>
          <target state="translated">Par exemple, vous pouvez voir les modifications apportées à la taille d’un fichier et les modifications apportées à la <ph id="ph1">`LastWrite`</ph> heure.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>This raises an event anytime there is a change in file or folder size, or a change in the <ph id="ph1">`LastWrite`</ph> time of the file or folder.</source>
          <target state="translated">Cela déclenche un événement lorsqu’une modification de la taille du fichier ou dossier, ou une modification dans le <ph id="ph1">`LastWrite`</ph> heure du fichier ou du dossier.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>This is one way to filter out unwanted notifications.</source>
          <target state="translated">Il s’agit d’une façon de filtrer les notifications inutiles.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>For more information on filtering out unwanted notifications, see the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> properties.</source>
          <target state="translated">Pour plus d’informations sur le filtrage de notifications inutiles, consultez le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> to watch the directory specified at run time.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> à surveiller le répertoire spécifié au moment de l’exécution.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>The component is set to watch for changes in <ph id="ph1">`LastWrite`</ph> and <ph id="ph2">`LastAccess`</ph> time, the creation, deletion, or renaming of text files in the directory.</source>
          <target state="translated">Le composant est défini pour surveiller les modifications apportées à <ph id="ph1">`LastWrite`</ph> et <ph id="ph2">`LastAccess`</ph> du temps, la création, suppression ou changement de nom des fichiers texte dans le répertoire.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>If a file is changed, created, or deleted, the path to the file prints to the console.</source>
          <target state="translated">Si un fichier est modifié, créé ou supprimé, le chemin d’accès au fichier s’imprime sur la console.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>When a file is renamed, the old and new paths print to the console.</source>
          <target state="translated">Lorsqu’un fichier est renommé, les chemins d’accès de l’ancien et nouveau impriment sur la console.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces for this example.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> et <ph id="ph2">&lt;xref:System.IO&gt;</ph> espaces de noms pour cet exemple.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>The value is not a valid bitwise OR combination of the <ph id="ph1">&lt;see cref="T:System.IO.NotifyFilters" /&gt;</ph> values.</source>
          <target state="translated">La valeur n'est pas une combinaison d'opérations de bits OR valide des valeurs <ph id="ph1">&lt;see cref="T:System.IO.NotifyFilters" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>The value that is being set is not valid.</source>
          <target state="translated">La valeur qui est définie n'est pas valide.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileSystemEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileSystemEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Changed" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Changed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> is called when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> est appelée lorsque des modifications sont apportées à la taille, les attributs système, heure de dernière écriture, heure du dernier accès, autorisations de sécurité d’un fichier ou un répertoire dans le répertoire en cours d’analyse.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> property to restrict the number of events raised when the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> event is handled.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> propriété pour limiter le nombre d’événements déclenchés lorsque le <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> l’événement est géré.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> event is raised as soon as a file is created.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> événement est déclenché dès qu’un fichier est créé.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>If a file is being copied or transferred into a watched directory, the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> event will be raised immediately, followed by one or more <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> events.</source>
          <target state="translated">Si un fichier est copié ou transféré vers un répertoire surveillé, le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> événement est déclenché immédiatement, suivi par un ou plusieurs <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> événements.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileSystemEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileSystemEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Created" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Created" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> is called when a file or directory is created in the directory being monitored.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> est appelé lorsqu’un fichier ou répertoire est créé dans le répertoire surveillé.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</source>
          <target state="translated">Certaines occurrences courantes, telles que la copie ou déplace un fichier ou répertoire, ne correspondent pas directement à un événement, mais ces occurrences provoquent le déclenchement d’événements.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>When you copy a file or directory, the system raises a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event in the directory to which the file was copied, if that directory is being watched.</source>
          <target state="translated">Lorsque vous copiez un fichier ou un répertoire, le système génère un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement dans le répertoire dans lequel le fichier a été copié, si le suivi de ce répertoire.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>If the directory from which you copied was being watched by another instance of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, no event would be raised.</source>
          <target state="translated">Si le répertoire à partir duquel vous avez copié est surveillé par une autre instance de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, aucun événement.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>For example, you create two instances of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Par exemple, vous créez deux instances de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</source>
          <target state="translated">FileSystemWatcher1 est défini pour surveiller les « C:\My Documents » et FileSystemWatcher2 est défini pour surveiller les « Documents C:\Your ».</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>If you copy a file from "My Documents" and paste it into "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event will be raised in FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</source>
          <target state="translated">Si vous copiez un fichier à partir de « Mes Documents » et collez-le dans « Vos Documents », un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement sera déclenché par FileSystemWatcher2, mais aucun événement est déclenché par FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>Unlike copying, moving a file or directory raises two events.</source>
          <target state="translated">Contrairement à la copie, le déplacement d’un fichier ou répertoire déclenche deux événements.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>From the previous example, if you moved a file from "My Documents" to "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event would be raised in FileSystemWatcher2 and a <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> event would be raised in FileSystemWatcher1.</source>
          <target state="translated">À partir de l’exemple précédent, si vous déplacez un fichier à partir de « Mes Documents » vers « Vos Documents », un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement est déclenché par FileSystemWatcher2 et un <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> événement est déclenché par FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> event is raised as soon as a file is created.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> événement est déclenché dès qu’un fichier est créé.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>If a file is being copied or transferred into a watched directory, the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> event will be raised immediately, followed by one or more <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> events.</source>
          <target state="translated">Si un fichier est copié ou transféré vers un répertoire surveillé, le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> événement est déclenché immédiatement, suivi par un ou plusieurs <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> événements.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileSystemEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileSystemEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Deleted" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Deleted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> is called when a file or directory, within the directory being monitored, is deleted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> est appelé lorsqu’un fichier ou répertoire, dans le répertoire surveillé, est supprimé.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</source>
          <target state="translated">Certaines occurrences courantes, telles que la copie ou déplace un fichier ou répertoire, ne correspondent pas directement à un événement, mais ces occurrences provoquent le déclenchement d’événements.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>When you copy a file or directory, the system raises a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event in the directory to which the file was copied, if that directory is being watched.</source>
          <target state="translated">Lorsque vous copiez un fichier ou un répertoire, le système génère un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement dans le répertoire dans lequel le fichier a été copié, si le suivi de ce répertoire.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>If the directory from which you copied was being watched by another instance of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, no event would be raised.</source>
          <target state="translated">Si le répertoire à partir duquel vous avez copié est surveillé par une autre instance de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, aucun événement.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>For example, you create two instances of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Par exemple, vous créez deux instances de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</source>
          <target state="translated">FileSystemWatcher1 est défini pour surveiller les « C:\My Documents » et FileSystemWatcher2 est défini pour surveiller les « Documents C:\Your ».</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>If you copy a file from "My Documents" into "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</source>
          <target state="translated">Si vous copiez un fichier à partir de « Mes Documents » dans « Vos Documents », un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement sera déclenché par FileSystemWatcher2, mais aucun événement est déclenché par FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>Unlike copying, moving a file or directory raises two events.</source>
          <target state="translated">Contrairement à la copie, le déplacement d’un fichier ou répertoire déclenche deux événements.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>From the previous example, if you moved a file from "My Documents" to "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event would be raised by FileSystemWatcher2 and a <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> event would be raised by FileSystemWatcher1.</source>
          <target state="translated">À partir de l’exemple précédent, si vous déplacez un fichier à partir de « Mes Documents » vers « Vos Documents », un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> événement est déclenché par FileSystemWatcher2 et un <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> événement est déclenché par FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IO.ErrorEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.ErrorEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Error" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Error" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnError%2A&gt;</ph> is called when an error occurs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnError%2A&gt;</ph> est appelé lorsqu’une erreur se produit.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.RenamedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.RenamedEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Renamed" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Renamed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnRenamed%2A&gt;</ph> is called when a file or directory within the directory being monitored is renamed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnRenamed%2A&gt;</ph> est appelé lorsqu’un fichier ou répertoire dans le répertoire surveillé est renommé.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>Its <ph id="ph1">&lt;xref:System.IO.RenamedEventArgs&gt;</ph> argument contains information about the renaming operation, such as the type of change, the old and new path, and the old and new name.</source>
          <target state="translated">Son <ph id="ph1">&lt;xref:System.IO.RenamedEventArgs&gt;</ph> argument contient des informations sur l’opération de changement de nom, tel que le type de modification, le chemin d’accès de l’ancien et le nouveau et le nom de l’ancien et le nouveau.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>Note that its <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.Name&gt;</ph> property may be null for renamed events if the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> does not get matching old and new name events from the operating system.</source>
          <target state="translated">Notez que sa <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.Name&gt;</ph> propriété peut être null pour renommer des événements si le <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> ne correspondent pas événements ancien et le nouveau nom du système d’exploitation.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Path">
          <source>Gets or sets the path of the directory to watch.</source>
          <target state="translated">Obtient ou définit le chemin d’accès du répertoire à surveiller.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The path to monitor.</source>
          <target state="translated">Chemin d'accès à surveiller.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The default is an empty string ("").</source>
          <target state="translated">La valeur par défaut est une chaîne vide ("").</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>This is a fully qualified path to a directory.</source>
          <target state="translated">Il s’agit d’un chemin d’accès complet à un répertoire.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>If the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, this directory is the root at which the system watches for changes; otherwise it is the only directory watched.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> propriété est <ph id="ph2">`true`</ph>, ce répertoire est la racine à laquelle le système surveille les modifications ; sinon, il est le seul répertoire observé.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>To watch a specific file, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property to the fully qualified, correct directory, and the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to the file name.</source>
          <target state="translated">Pour surveiller un fichier spécifique, la valeur du <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> au répertoire complet, correct et le <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriété le nom de fichier.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property supports Universal Naming Convention (UNC) paths.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriété prend en charge les chemins d’accès UNC Universal Naming Convention ().</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>This property must be set before the component can watch for changes.</source>
          <target state="translated">Cette propriété doit être définie avant que le composant peut surveiller les modifications apportées.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>When a directory is renamed, the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> automatically reattaches itself to the newly renamed item.</source>
          <target state="translated">Lorsqu’un répertoire est renommé, la <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> rattache automatiquement à l’élément qui vient d’être renommé.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>For example, if you set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property to "C:\My Documents" and then manually rename the directory to "C:\Your Documents", the component continues listening for change notifications on the newly renamed directory.</source>
          <target state="translated">Par exemple, si vous définissez le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriété « C:\My Documents » et puis renommez manuellement le répertoire « C:\Your Documents », le composant continue à écouter les notifications de modifications sur le répertoire.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>However, when you ask for the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property, it contains the old path.</source>
          <target state="translated">Toutefois, lorsque vous demandez le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriété, elle contient l’ancien chemin d’accès.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>This happens because the component determines what directory watches based on the handle, rather than the name of the directory.</source>
          <target state="translated">Cela se produit car le composant détermine le répertoire à surveiller en fonction de la poignée, plutôt que le nom du répertoire.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>Renaming does not affect the handle.</source>
          <target state="translated">Changement de nom n’affecte pas le handle.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>So, if you destroy the component, and then recreate it without updating the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property, your application will fail because the directory no longer exists.</source>
          <target state="translated">Par conséquent, si vous détruisez le composant, puis recréez sans mettre à jour le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriété, votre application échouera, car le répertoire n’existe plus.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> to watch the directory specified at run time.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> à surveiller le répertoire spécifié au moment de l’exécution.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The component is set to watch for changes in <ph id="ph1">`LastWrite`</ph> and <ph id="ph2">`LastAccess`</ph> time, the creation, deletion, or renaming of text files in the directory.</source>
          <target state="translated">Le composant est défini pour surveiller les modifications apportées à <ph id="ph1">`LastWrite`</ph> et <ph id="ph2">`LastAccess`</ph> du temps, la création, suppression ou changement de nom des fichiers texte dans le répertoire.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>If a file is changed, created, or deleted, the path to the file prints to the console.</source>
          <target state="translated">Si un fichier est modifié, créé ou supprimé, le chemin d’accès au fichier s’imprime sur la console.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>When a file is renamed, the old and new paths print to the console.</source>
          <target state="translated">Lorsqu’un fichier est renommé, les chemins d’accès de l’ancien et nouveau impriment sur la console.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces for this example.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> et <ph id="ph2">&lt;xref:System.IO&gt;</ph> espaces de noms pour cet exemple.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The specified path does not exist or could not be found.</source>
          <target state="translated">Le chemin d'accès spécifié n'existe pas ou est introuvable.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Path">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The specified path contains wildcard characters.</source>
          <target state="translated">Le chemin d'accès spécifié contient des caractères génériques.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Path">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The specified path contains invalid path characters.</source>
          <target state="translated">Le chemin d'accès spécifié contient des caractères de chemin non valides.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>Occurs when a file or directory in the specified <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> is renamed.</source>
          <target state="translated">Se produit quand un fichier ou un répertoire du <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> spécifié est renommé.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>The <ph id="ph1">`Renamed`</ph> event is an <ph id="ph2">&lt;xref:System.IO.RenamedEventHandler&gt;</ph> delegate that has the following signature:</source>
          <target state="translated">Le <ph id="ph1">`Renamed`</ph> événement est un <ph id="ph2">&lt;xref:System.IO.RenamedEventHandler&gt;</ph> délégué qui possède la signature suivante :</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>The <ph id="ph1">&lt;xref:System.IO.RenamedEventArgs&gt;</ph> object provides information about the renaming operation, such as the type of the rename (the <ph id="ph2">&lt;xref:System.IO.FileSystemEventArgs.ChangeType&gt;</ph> property), the old and new name, and the old and new path.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.RenamedEventArgs&gt;</ph> objet fournit des informations sur l’opération de changement de nom, tel que le type de la modification du nom (le <ph id="ph2">&lt;xref:System.IO.FileSystemEventArgs.ChangeType&gt;</ph> propriété), le nom de l’ancien et le nouveau et le chemin d’accès des ancienne et nouvel.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>Note that the <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.Name&gt;</ph> property may be null for renamed events if the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> does not get matching old and new name events from the operating system.</source>
          <target state="translated">Notez que la <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.Name&gt;</ph> propriété peut être null pour renommer des événements si le <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> ne correspondent pas événements ancien et le nouveau nom du système d’exploitation.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>Renaming the directory you are watching will not raise a notification.</source>
          <target state="translated">Modification du nom de répertoire que vous surveillez ne génère pas d’une notification.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>Notifications are only raised for entries inside the directory you are watching.</source>
          <target state="translated">Des notifications sont déclenchées uniquement pour les entrées dans le répertoire que vous surveillez.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> event to display the file path to the console whenever the watched file is renamed.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> événement afin d’afficher le chemin d’accès à la console chaque fois que le fichier de contrôle est renommé.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Site">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit un élément <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> pour l'élément <ph id="ph2">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> pour <ph id="ph2">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Site">
          <source>Sites bind a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> to a <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.Container%2A&gt;</ph> and enable communication between them, as well as provide a way for the container to manage its components.</source>
          <target state="translated">Sites lient un <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> à un <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.Container%2A&gt;</ph> et activer la communication entre eux, ainsi que fournir un moyen pour le conteneur de gérer ses composants.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>Gets or sets the object used to marshal the event handler calls issued as a result of a directory change.</source>
          <target state="translated">Obtient ou définit l’objet utilisé pour marshaler les appels du gestionnaire d’événements consécutifs à un changement de répertoire.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph> that represents the object used to marshal the event handler calls issued as a result of a directory change.</source>
          <target state="translated">Élément <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph> qui représente l'objet utilisé pour marshaler les appels du gestionnaire d'événements consécutifs à un changement de répertoire.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>When <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> is <ph id="ph2">`null`</ph>, methods handling the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph5">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph>, and <ph id="ph6">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> events are called on a thread from the system thread pool.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> est <ph id="ph2">`null`</ph>, méthodes qui gèrent les <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph5">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph>, et <ph id="ph6">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> événements sont appelés sur un thread du pool de threads système.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>For more information on system thread pools, see <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur les pools de threads système, consultez <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>When the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph>, and <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> events are handled by a visual Windows Forms component, such as a <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph>, accessing the component through the system thread pool might not work, or may result in an exception.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph>, et <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> événements sont gérés par un composant Windows Forms visuel, comme un <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph>, l’accès au composant via le pool de threads système peut ne pas fonctionner ou peut provoquer une exception.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>Avoid this by setting <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> to a Windows Forms component, which causes the methods that handle the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph>, and <ph id="ph5">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> events to be called on the same thread on which the component was created.</source>
          <target state="translated">Éviter ce problème en définissant <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> à un composant Windows Forms, ce qui entraîne les méthodes qui gèrent les <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph>, et <ph id="ph5">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> événements à appeler sur le même thread que celui sur lequel le composant a été créé.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>If the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> is used inside <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> in a Windows Forms designer, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> automatically sets to the control that contains the <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> est utilisé à l’intérieur de <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> dans un concepteur Windows Forms, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> définit automatiquement le contrôle qui contient le <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>For example, if you place a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> on a designer for Form1 (which inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>) the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> is set to the instance of Form1.</source>
          <target state="translated">Par exemple, si vous placez un <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> sur un concepteur pour Form1 (qui hérite de <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>) le <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> propriété du <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> est définie sur l’instance de Form1.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="T:System.IO.FileSystemWatcher">
          <source>A synchronous method that returns a structure that contains specific information on the change that occurred.</source>
          <target state="translated">Méthode synchrone qui retourne une structure contenant des informations spécifiques sur les modifications apportées.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.WatcherChangeTypes" /&gt;</ph> to watch for.</source>
          <target state="translated">Élément <ph id="ph1">&lt;see cref="T:System.IO.WatcherChangeTypes" /&gt;</ph> à surveiller.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.</source>
          <target state="translated">Méthode synchrone qui retourne une structure contenant des informations spécifiques sur les modifications apportées, en fonction du type de modifications à surveiller.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.WaitForChangedResult" /&gt;</ph> that contains specific information on the change that occurred.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.WaitForChangedResult" /&gt;</ph> qui contient des informations spécifiques sur les modifications apportées.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>This method waits indefinitely until the first change occurs and then returns.</source>
          <target state="translated">Cette méthode attend indéfiniment jusqu'à ce que la première modification se produit, puis le retourne.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>This is the same as using <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;</ph> with the <ph id="ph2">`timeout`</ph> parameter set to -1.</source>
          <target state="translated">Il est identique à l’aide de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;</ph> avec la <ph id="ph2">`timeout`</ph> paramètre la valeur -1.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>This method allows an event handler to be invoked to respond to file changes even if the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Cette méthode permet à un gestionnaire d’événements à appeler pour répondre à un fichier modifications même si le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> est définie sur <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>In some systems, <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> reports changes to files using the short 8.3 file name format.</source>
          <target state="translated">Dans certains systèmes, <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> signale des modifications apportées aux fichiers utilisant le format de nom de 8.3 fichier court.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</source>
          <target state="translated">Par exemple, une modification apportée à « LongFileName.LongExtension » peut être signalée comme « LongFi ~. LON ».</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.WatcherChangeTypes" /&gt;</ph> to watch for.</source>
          <target state="translated">Élément <ph id="ph1">&lt;see cref="T:System.IO.WatcherChangeTypes" /&gt;</ph> à surveiller.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>The time (in milliseconds) to wait before timing out.</source>
          <target state="translated">Délai d'attente, en millisecondes, avant l'expiration.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.</source>
          <target state="translated">Méthode synchrone qui retourne une structure contenant des informations spécifiques sur les modifications apportées, en fonction des types de modifications à surveiller et du délai d’attente (en millisecondes).</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.WaitForChangedResult" /&gt;</ph> that contains specific information on the change that occurred.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.WaitForChangedResult" /&gt;</ph> qui contient des informations spécifiques sur les modifications apportées.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>This method waits until a change occurs or it has timed out. A value of -1 for the <ph id="ph1">`timeout`</ph> parameter means wait indefinitely.</source>
          <target state="translated">Cette méthode attend jusqu'à ce qu’une modification se produit, ou il a expiré. La valeur -1 pour le <ph id="ph1">`timeout`</ph> paramètre signifie que l’attente indéfiniment.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>This method allows an event handler to be invoked to respond to file changes even if the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Cette méthode permet à un gestionnaire d’événements à appeler pour répondre à un fichier modifications même si le <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> est définie sur <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>In some systems, <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> reports changes to files using the short 8.3 file name format.</source>
          <target state="translated">Dans certains systèmes, <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> signale des modifications apportées aux fichiers utilisant le format de nom de 8.3 fichier court.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</source>
          <target state="translated">Par exemple, une modification apportée à « LongFileName.LongExtension » peut être signalée comme « LongFi ~. LON ».</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>