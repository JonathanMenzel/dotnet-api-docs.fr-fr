<Type Name="FileSystemWatcher" FullName="System.IO.FileSystemWatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10cab9d5d130cd5e31ba2f2a3417bc5bac002972" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37652566" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FileSystemWatcher : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileSystemWatcher extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileSystemWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class FileSystemWatcher&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemWatcher : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type FileSystemWatcher = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Changed")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.IO.IODescription("")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d4bab-101">Listens to the file system change notifications and raises events when a directory, or file in a directory, changes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4bab-101">Listens to the file system change notifications and raises events when a directory, or file in a directory, changes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-102">Utilisez <xref:System.IO.FileSystemWatcher> pour surveiller les modifications dans un répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="d4bab-102">Use <xref:System.IO.FileSystemWatcher> to watch for changes in a specified directory.</span></span> <span data-ttu-id="d4bab-103">Vous pouvez surveiller les modifications de fichiers et sous-répertoires du répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="d4bab-103">You can watch for changes in files and subdirectories of the specified directory.</span></span> <span data-ttu-id="d4bab-104">Vous pouvez créer un composant pour regarder les fichiers sur un ordinateur local, un lecteur réseau ou un ordinateur distant.</span><span class="sxs-lookup"><span data-stu-id="d4bab-104">You can create a component to watch files on a local computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="d4bab-105">Pour surveiller les modifications dans tous les fichiers, définissez le <xref:System.IO.FileSystemWatcher.Filter%2A> propriété sur une chaîne vide (« ») ou utiliser des caractères génériques (« *.\*»).</span><span class="sxs-lookup"><span data-stu-id="d4bab-105">To watch for changes in all files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to an empty string ("") or use wildcards ("*.\*").</span></span> <span data-ttu-id="d4bab-106">Pour visionner un fichier spécifique, définissez la <xref:System.IO.FileSystemWatcher.Filter%2A> propriété le nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="d4bab-106">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span> <span data-ttu-id="d4bab-107">Par exemple, pour surveiller les modifications apportées au fichier mondoc.txt, définissez le <xref:System.IO.FileSystemWatcher.Filter%2A> propriété « Doit être mondoc.txt ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-107">For example, to watch for changes in the file MyDoc.txt, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "MyDoc.txt".</span></span> <span data-ttu-id="d4bab-108">Vous pouvez également surveiller les modifications apportées à un certain type de fichier.</span><span class="sxs-lookup"><span data-stu-id="d4bab-108">You can also watch for changes in a certain type of file.</span></span> <span data-ttu-id="d4bab-109">Par exemple, pour surveiller les modifications apportées aux fichiers de texte, définissez la <xref:System.IO.FileSystemWatcher.Filter%2A> propriété à «\*.txt ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-109">For example, to watch for changes in text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt".</span></span>  
  
 <span data-ttu-id="d4bab-110">Il existe plusieurs types de modifications que vous pouvez surveiller les dans un fichier ou répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-110">There are several types of changes you can watch for in a directory or file.</span></span> <span data-ttu-id="d4bab-111">Par exemple, vous pouvez observer les modifications de `Attributes`, le `LastWrite` date et l’heure, ou le `Size` de fichiers ou répertoires.</span><span class="sxs-lookup"><span data-stu-id="d4bab-111">For example, you can watch for changes in `Attributes`, the `LastWrite` date and time, or the `Size` of files or directories.</span></span> <span data-ttu-id="d4bab-112">Cela en définissant le <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> propriété de la <xref:System.IO.NotifyFilters> valeurs.</span><span class="sxs-lookup"><span data-stu-id="d4bab-112">This is done by setting the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> property to one of the <xref:System.IO.NotifyFilters> values.</span></span> <span data-ttu-id="d4bab-113">Pour plus d’informations sur le type de modifications que vous pouvez regarder, consultez <xref:System.IO.NotifyFilters>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-113">For more information on the type of changes you can watch, see <xref:System.IO.NotifyFilters>.</span></span>  
  
 <span data-ttu-id="d4bab-114">Vous pouvez regarder de changement de nom, suppression ou la création de fichiers ou répertoires.</span><span class="sxs-lookup"><span data-stu-id="d4bab-114">You can watch for renaming, deletion, or creation of files or directories.</span></span> <span data-ttu-id="d4bab-115">Par exemple, pour surveiller le changement de nom des fichiers texte, définissez la <xref:System.IO.FileSystemWatcher.Filter%2A> propriété « \*.txt » et appelez le <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> méthode avec un <xref:System.IO.WatcherChangeTypes.Renamed> spécifié pour son paramètre.</span><span class="sxs-lookup"><span data-stu-id="d4bab-115">For example, to watch for renaming of text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt" and call the <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> method with a <xref:System.IO.WatcherChangeTypes.Renamed> specified for its parameter.</span></span>  
  
 <span data-ttu-id="d4bab-116">Le système d’exploitation Windows notifie votre composant de modifications de fichiers dans une mémoire tampon créée par le <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-116">The Windows operating system notifies your component of file changes in a buffer created by the <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="d4bab-117">Si plusieurs modifications sont apportées dans une courte période, la mémoire tampon peut provoquer un débordement.</span><span class="sxs-lookup"><span data-stu-id="d4bab-117">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="d4bab-118">Cela entraîne le composant de perdre la trace des modifications dans le répertoire, et il ne sera qu’une notification standard.</span><span class="sxs-lookup"><span data-stu-id="d4bab-118">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="d4bab-119">Augmentation de la taille de la mémoire tampon avec la <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriété est coûteuse, car elle provient d’une mémoire non paginée ne peut pas être transférée sur le disque, donc conserver la mémoire tampon en tant que petite encore une grande suffisant pour ne manquez pas n’importe quel fichier événements de modification.</span><span class="sxs-lookup"><span data-stu-id="d4bab-119">Increasing the size of the buffer with the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property is expensive, as it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small yet large enough to not miss any file change events.</span></span> <span data-ttu-id="d4bab-120">Pour éviter un dépassement de capacité de mémoire tampon, utilisez le <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> et <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> notifications de modifications de propriétés afin de filtrer les indésirables.</span><span class="sxs-lookup"><span data-stu-id="d4bab-120">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties so you can filter out unwanted change notifications.</span></span>  
  
 <span data-ttu-id="d4bab-121">Pour obtenir la liste des valeurs initiales des propriétés d’une instance de <xref:System.IO.FileSystemWatcher>, consultez le <xref:System.IO.FileSystemWatcher.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="d4bab-121">For a list of initial property values for an instance of <xref:System.IO.FileSystemWatcher>, see the <xref:System.IO.FileSystemWatcher.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="d4bab-122">Notez les points suivants lorsque vous utilisez la <xref:System.IO.FileSystemWatcher> classe.</span><span class="sxs-lookup"><span data-stu-id="d4bab-122">Please note the following when using the <xref:System.IO.FileSystemWatcher> class.</span></span>  
  
-   <span data-ttu-id="d4bab-123">Fichiers masqués ne sont pas ignorés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-123">Hidden files are not ignored.</span></span>  
  
-   <span data-ttu-id="d4bab-124">Dans certains systèmes, <xref:System.IO.FileSystemWatcher> signale les modifications apportées aux fichiers à l’aide du format de nom de 8.3 fichier court.</span><span class="sxs-lookup"><span data-stu-id="d4bab-124">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="d4bab-125">Par exemple, une modification apportée à « LongFileName.LongExtension » peut être signalée comme « LongFi ~. LON ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-125">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFil~.Lon".</span></span>  
  
-   <span data-ttu-id="d4bab-126">Cette classe contient une demande de liaison et une demande d’héritage au niveau de la classe qui s’applique à tous les membres.</span><span class="sxs-lookup"><span data-stu-id="d4bab-126">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="d4bab-127">Un <xref:System.Security.SecurityException> est levée lorsque l’appelant immédiat ou la classe dérivée n’a pas d’autorisations de confiance totale.</span><span class="sxs-lookup"><span data-stu-id="d4bab-127">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="d4bab-128">Pour plus d’informations sur les demandes de sécurité, consultez [demandes de liaison](~/docs/framework/misc/link-demands.md).</span><span class="sxs-lookup"><span data-stu-id="d4bab-128">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
-   <span data-ttu-id="d4bab-129">La taille maximale que vous pouvez définir pour le <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriété pour la surveillance d’un répertoire sur le réseau est de 64 Ko.</span><span class="sxs-lookup"><span data-stu-id="d4bab-129">The maximum size you can set for the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property for monitoring a directory over the network is 64 KB.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-130">En cours d’exécution <xref:System.IO.FileSystemWatcher> sur Windows 98 n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="d4bab-130">Running <xref:System.IO.FileSystemWatcher> on Windows 98 is not supported.</span></span>  
  
## <a name="copying-and-moving-folders"></a><span data-ttu-id="d4bab-131">Copier et déplacer des dossiers</span><span class="sxs-lookup"><span data-stu-id="d4bab-131">Copying and moving folders</span></span>  
 <span data-ttu-id="d4bab-132">Le système d’exploitation et <xref:System.IO.FileSystemWatcher> objet interpréter une action Couper-coller ou une action de déplacement comme une action de changement de nom pour un dossier et son contenu.</span><span class="sxs-lookup"><span data-stu-id="d4bab-132">The operating system and <xref:System.IO.FileSystemWatcher> object interpret a cut-and-paste action or a move action as a rename action for a folder and its contents.</span></span> <span data-ttu-id="d4bab-133">Si vous coupez et collez un dossier avec des fichiers dans un dossier suivi, le <xref:System.IO.FileSystemWatcher> objet signale uniquement le dossier en tant que nouveau, mais pas son contenu, car ils sont essentiellement renommés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-133">If you cut and paste a folder with files into a folder being watched, the <xref:System.IO.FileSystemWatcher> object reports only the folder as new, but not its contents because they are essentially only renamed.</span></span>  
  
 <span data-ttu-id="d4bab-134">Pour être averti que le contenu des dossiers ont été déplacé ou copié dans un dossier de contrôle, fournir <xref:System.IO.FileSystemWatcher.OnChanged%2A> et <xref:System.IO.FileSystemWatcher.OnRenamed%2A> méthodes de gestionnaire d’événements comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="d4bab-134">To be notified that the contents of folders have been moved or copied into a watched folder, provide <xref:System.IO.FileSystemWatcher.OnChanged%2A> and <xref:System.IO.FileSystemWatcher.OnRenamed%2A> event handler methods as suggested in the following table.</span></span>  
  
|<span data-ttu-id="d4bab-135">Gestionnaire d’événements</span><span class="sxs-lookup"><span data-stu-id="d4bab-135">Event Handler</span></span>|<span data-ttu-id="d4bab-136">Événements gérés</span><span class="sxs-lookup"><span data-stu-id="d4bab-136">Events Handled</span></span>|<span data-ttu-id="d4bab-137">Effectue</span><span class="sxs-lookup"><span data-stu-id="d4bab-137">Performs</span></span>|  
|-------------------|--------------------|--------------|  
|<xref:System.IO.FileSystemWatcher.OnChanged%2A>|<span data-ttu-id="d4bab-138"><xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted></span><span class="sxs-lookup"><span data-stu-id="d4bab-138"><xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted></span></span>|<span data-ttu-id="d4bab-139">Signaler les modifications dans les attributs de fichier, les fichiers créés et les fichiers supprimés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-139">Report changes in file attributes, created files, and deleted files.</span></span>|  
|<xref:System.IO.FileSystemWatcher.OnRenamed%2A>|<xref:System.IO.FileSystemWatcher.Renamed>|<span data-ttu-id="d4bab-140">Répertorier les anciens et nouveaux chemins d’accès des fichiers renommés et des dossiers, développez de manière récursive si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-140">List the old and new paths of renamed files and folders, expanding recursively if needed.</span></span>|  
  
## <a name="events-and-buffer-sizes"></a><span data-ttu-id="d4bab-141">Événements et les tailles de mémoire tampon</span><span class="sxs-lookup"><span data-stu-id="d4bab-141">Events and Buffer Sizes</span></span>  
 <span data-ttu-id="d4bab-142">Notez que plusieurs facteurs peuvent affecter les événements de changement de système de fichiers sont déclenchés, comme décrit par ce qui suit :</span><span class="sxs-lookup"><span data-stu-id="d4bab-142">Note that several factors can affect which file system change events are raised, as described by the following:</span></span>  
  
-   <span data-ttu-id="d4bab-143">Opérations de système de fichiers courantes peuvent déclencher plusieurs événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-143">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="d4bab-144">Par exemple, lorsqu’un fichier est déplacé d’un répertoire à un autre, plusieurs <xref:System.IO.FileSystemWatcher.OnChanged%2A> et certains <xref:System.IO.FileSystemWatcher.OnCreated%2A> et <xref:System.IO.FileSystemWatcher.OnDeleted%2A> événements peuvent être déclenchés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-144">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="d4bab-145">Déplacement de qu'un fichier est une opération complexe qui se compose de plusieurs opérations simples, déclenchant donc plusieurs événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-145">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="d4bab-146">De même, certaines applications (par exemple, les logiciels antivirus) peuvent entraîner des événements de système de fichiers supplémentaires qui sont détectés par <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-146">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
-   <span data-ttu-id="d4bab-147">Le <xref:System.IO.FileSystemWatcher> peut regarder les disques tant qu’ils ne sont pas basculés ou supprimés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-147">The <xref:System.IO.FileSystemWatcher> can watch disks as long as they are not switched or removed.</span></span> <span data-ttu-id="d4bab-148">Le <xref:System.IO.FileSystemWatcher> ne déclenche pas d’événements pour les CD et DVD, étant donné que les horodatages et les propriétés ne peuvent pas modifier.</span><span class="sxs-lookup"><span data-stu-id="d4bab-148">The <xref:System.IO.FileSystemWatcher> does not raise events for CDs and DVDs, because time stamps and properties cannot change.</span></span> <span data-ttu-id="d4bab-149">Ordinateurs distants doivent avoir une des plateformes requises installés pour le composant de fonctionner correctement.</span><span class="sxs-lookup"><span data-stu-id="d4bab-149">Remote computers must have one of the required platforms installed for the component to function properly.</span></span>  
  
-   <span data-ttu-id="d4bab-150">Si plusieurs <xref:System.IO.FileSystemWatcher> objets voient le même chemin d’accès UNC dans XP de Windows antérieure au Service Pack 1 ou Windows 2000 SP2 ou version antérieure, seul un des objets déclenchera un événement.</span><span class="sxs-lookup"><span data-stu-id="d4bab-150">If multiple <xref:System.IO.FileSystemWatcher> objects are watching the same UNC path in Windows XP prior to Service Pack 1, or Windows 2000 SP2 or earlier, then only one of the objects will raise an event.</span></span> <span data-ttu-id="d4bab-151">Sur les ordinateurs exécutant Windows XP SP1 et versions ultérieures, Windows 2000 SP3 ou version ultérieure ou Windows Server 2003, tous les <xref:System.IO.FileSystemWatcher> objets déclenche les événements appropriés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-151">On machines running Windows XP SP1 and newer, Windows 2000 SP3 or newer or Windows Server 2003, all <xref:System.IO.FileSystemWatcher> objects will raise the appropriate events.</span></span>  
  
 <span data-ttu-id="d4bab-152">Notez qu’un <xref:System.IO.FileSystemWatcher> peut manquer un événement lorsque la taille de mémoire tampon est dépassée.</span><span class="sxs-lookup"><span data-stu-id="d4bab-152">Note that a <xref:System.IO.FileSystemWatcher> may miss an event when the buffer size is exceeded.</span></span> <span data-ttu-id="d4bab-153">Pour éviter de manquer des événements, suivez ces instructions :</span><span class="sxs-lookup"><span data-stu-id="d4bab-153">To avoid missing events, follow these guidelines:</span></span>  
  
-   <span data-ttu-id="d4bab-154">Augmenter la taille du tampon en définissant le <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d4bab-154">Increase the buffer size by setting the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property.</span></span>  
  
-   <span data-ttu-id="d4bab-155">Évitez de regarder les fichiers portant des noms de fichiers longs, car un nom de fichier long contribue au remplissage de la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="d4bab-155">Avoid watching files with long file names, because a long file name contributes to filling up the buffer.</span></span> <span data-ttu-id="d4bab-156">Pensez à renommer ces fichiers à l’aide des noms plus courts.</span><span class="sxs-lookup"><span data-stu-id="d4bab-156">Consider renaming these files using shorter names.</span></span>  
  
-   <span data-ttu-id="d4bab-157">Gardez votre événement aussi court que possible du code de gestion.</span><span class="sxs-lookup"><span data-stu-id="d4bab-157">Keep your event handling code as short as possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4bab-158">L’exemple suivant crée un <xref:System.IO.FileSystemWatcher> à surveiller le répertoire spécifié au moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="d4bab-158">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="d4bab-159">Le composant est défini pour surveiller les modifications de `LastWrite` et `LastAccess` du temps, la création, suppression, ou le changement de nom des fichiers texte dans le répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-159">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="d4bab-160">Si un fichier est modifié, créé ou supprimé, le chemin d’accès au fichier s’imprime sur la console.</span><span class="sxs-lookup"><span data-stu-id="d4bab-160">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="d4bab-161">Lorsqu’un fichier est renommé, les chemins d’accès nouvelles et anciennes impriment sur la console.</span><span class="sxs-lookup"><span data-stu-id="d4bab-161">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="d4bab-162">Utilisez le <xref:System.Diagnostics> et <xref:System.IO> espaces de noms pour cet exemple.</span><span class="sxs-lookup"><span data-stu-id="d4bab-162">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="d4bab-163">pour dériver la <see cref="T:System.Diagnostics.ProcessStartInfo" /> classe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4bab-163">for deriving from the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class.</span>
      </span>
      <span data-ttu-id="d4bab-164">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Jeux d’autorisations nommés : <see langword="FullTrust" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4bab-164">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Named Permission Sets: <see langword="FullTrust" />.</span>
      </span>
    </permission>
    <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
    <altmember cref="T:System.IO.NotifyFilters" />
    <altmember cref="T:System.IO.FileSystemEventArgs" />
    <altmember cref="T:System.IO.FileSystemEventHandler" />
    <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
    <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
    <altmember cref="T:System.IO.InternalBufferOverflowException" />
    <altmember cref="T:System.IO.RenamedEventArgs" />
    <altmember cref="T:System.IO.RenamedEventHandler" />
    <altmember cref="T:System.IO.WaitForChangedResult" />
    <altmember cref="T:System.IO.WatcherChangeTypes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-165">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-165">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-166">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-166">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-167">Vous ne pouvez pas surveiller un ordinateur distant qui n’a pas de Windows NT ou Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="d4bab-167">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="d4bab-168">Vous ne pouvez pas surveiller un ordinateur distant de Windows NT 4.0 à partir d’un ordinateur Windows NT 4.0.</span><span class="sxs-lookup"><span data-stu-id="d4bab-168">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span>  
  
 <span data-ttu-id="d4bab-169">Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-169">The following table shows initial property values for an instance of <xref:System.IO.FileSystemWatcher>.</span></span>  
  
|<span data-ttu-id="d4bab-170">Propriété</span><span class="sxs-lookup"><span data-stu-id="d4bab-170">Property</span></span>|<span data-ttu-id="d4bab-171">Valeur initiale</span><span class="sxs-lookup"><span data-stu-id="d4bab-171">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>|<span data-ttu-id="d4bab-172">combinaison d’opérations OR `LastWrite`, `FileName`, et `DirectoryName`</span><span class="sxs-lookup"><span data-stu-id="d4bab-172">bitwise OR combination of `LastWrite`, `FileName`, and `DirectoryName`</span></span>|  
|<xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A>|`false`|  
|<xref:System.IO.FileSystemWatcher.Filter%2A>|<span data-ttu-id="d4bab-173">"*. \*« (Analyse de tous les fichiers.)</span><span class="sxs-lookup"><span data-stu-id="d4bab-173">"*.\*" (Watch all files.)</span></span>|  
|<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>|`false`|  
|<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>|<span data-ttu-id="d4bab-174">8192</span><span class="sxs-lookup"><span data-stu-id="d4bab-174">8192</span></span>|  
|<xref:System.IO.FileSystemWatcher.Path%2A>|<span data-ttu-id="d4bab-175">une chaîne vide ( » »)</span><span class="sxs-lookup"><span data-stu-id="d4bab-175">empty string ("")</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-176">Le composant ne surveillera pas le répertoire spécifié jusqu'à ce que le <xref:System.IO.FileSystemWatcher.Path%2A> est défini, et <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> est `true`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-176">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4bab-177">L’exemple suivant crée un <xref:System.IO.FileSystemWatcher> objet à surveiller le répertoire spécifié au moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="d4bab-177">The following example creates a <xref:System.IO.FileSystemWatcher> object to watch the directory specified at run time.</span></span> <span data-ttu-id="d4bab-178">Le <xref:System.IO.FileSystemWatcher> objet surveille les modifications apportées dans `LastWrite` et `LastAccess` heures et pour la création, suppression ou modification du nom du texte de fichiers dans le répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-178">The <xref:System.IO.FileSystemWatcher> object watches for changes in `LastWrite` and `LastAccess` times, and for the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="d4bab-179">Si un fichier est modifié, créé ou supprimé, le chemin d’accès au fichier s’affiche dans la console.</span><span class="sxs-lookup"><span data-stu-id="d4bab-179">If a file is changed, created, or deleted, the path to the file displays to the console.</span></span> <span data-ttu-id="d4bab-180">Lorsqu’un fichier est renommé, les chemins d’accès nouvelles et anciennes affichent dans la console.</span><span class="sxs-lookup"><span data-stu-id="d4bab-180">When a file is renamed, the old and new paths display to the console.</span></span>  
  
 <span data-ttu-id="d4bab-181">Cet exemple utilise le <xref:System.Diagnostics> et <xref:System.IO> espaces de noms.</span><span class="sxs-lookup"><span data-stu-id="d4bab-181">This example uses the <xref:System.Diagnostics> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="d4bab-182">pour la confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-182">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d4bab-183">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-183">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.FileSystemWatcher : string -&gt; System.IO.FileSystemWatcher" Usage="new System.IO.FileSystemWatcher path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="d4bab-184">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-184">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4bab-185">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory to monitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-185">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory to monitor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-186">Le composant ne surveillera pas le répertoire spécifié jusqu'à ce que le <xref:System.IO.FileSystemWatcher.Path%2A> est défini, et <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> est `true`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-186">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="d4bab-187">Le composant peut surveiller les fichiers sur votre ordinateur personnel, un lecteur réseau ou un ordinateur distant.</span><span class="sxs-lookup"><span data-stu-id="d4bab-187">The component can watch files on your personal computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="d4bab-188">Vous ne pouvez pas surveiller un ordinateur distant qui n’a pas de Windows NT ou Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="d4bab-188">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="d4bab-189">Vous ne pouvez pas surveiller un ordinateur distant de Windows NT 4.0 à partir d’un ordinateur Windows NT 4.0.</span><span class="sxs-lookup"><span data-stu-id="d4bab-189">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span> <span data-ttu-id="d4bab-190">Le <xref:System.IO.FileSystemWatcher.Filter%2A> propriété est définie par défaut à surveiller tous les fichiers.</span><span class="sxs-lookup"><span data-stu-id="d4bab-190">The <xref:System.IO.FileSystemWatcher.Filter%2A> property is set by default to watch all files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d4bab-191">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-191">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4bab-192">The <paramref name="path" /> parameter is an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-192">The <paramref name="path" /> parameter is an empty string ("").</span>
          </span>
          <span data-ttu-id="d4bab-193">-or-  The path specified through the <paramref name="path" /> parameter does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-193">-or-  The path specified through the <paramref name="path" /> parameter does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="d4bab-194">
            <paramref name="path" /> is too long.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-194">
              <paramref name="path" /> is too long.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="d4bab-195">pour la confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-195">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d4bab-196">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-196">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher (string path, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher(System::String ^ path, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="new System.IO.FileSystemWatcher : string * string -&gt; System.IO.FileSystemWatcher" Usage="new System.IO.FileSystemWatcher (path, filter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="d4bab-197">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-197">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="d4bab-198">The type of files to watch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-198">The type of files to watch.</span>
          </span>
          <span data-ttu-id="d4bab-199">For example, "\*.txt" watches for changes to all text files.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-199">For example, "\*.txt" watches for changes to all text files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4bab-200">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory and type of files to monitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-200">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory and type of files to monitor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-201">Le composant ne surveillera pas le répertoire spécifié jusqu'à ce que le <xref:System.IO.FileSystemWatcher.Path%2A> est défini, et <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> est `true`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-201">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="d4bab-202">Le composant peut surveiller les fichiers sur votre ordinateur personnel, un lecteur réseau ou un ordinateur distant.</span><span class="sxs-lookup"><span data-stu-id="d4bab-202">The component can watch files on your personal computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="d4bab-203">Vous ne pouvez pas surveiller un ordinateur distant qui n’a pas de Windows NT ou Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="d4bab-203">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="d4bab-204">Vous ne pouvez pas surveiller un ordinateur distant de Windows NT 4.0 à partir d’un ordinateur Windows NT 4.0.</span><span class="sxs-lookup"><span data-stu-id="d4bab-204">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d4bab-205">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-205">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d4bab-206">-or-  The <paramref name="filter" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-206">-or-  The <paramref name="filter" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4bab-207">The <paramref name="path" /> parameter is an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-207">The <paramref name="path" /> parameter is an empty string ("").</span>
          </span>
          <span data-ttu-id="d4bab-208">-or-  The path specified through the <paramref name="path" /> parameter does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-208">-or-  The path specified through the <paramref name="path" /> parameter does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="d4bab-209">
            <paramref name="path" /> is too long.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-209">
              <paramref name="path" /> is too long.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="d4bab-210">pour la confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-210">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d4bab-211">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-211">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="fileSystemWatcher.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-212">Begins the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-212">Begins the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="d4bab-213">The initialization occurs at run time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-213">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-214">Le [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] conception environnement utilise cette méthode pour démarrer l’initialisation d’un composant utilisé dans un formulaire ou par un autre composant.</span><span class="sxs-lookup"><span data-stu-id="d4bab-214">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component used on a form or used by another component.</span></span> <span data-ttu-id="d4bab-215">Le <xref:System.IO.FileSystemWatcher.EndInit%2A> méthode termine l’initialisation.</span><span class="sxs-lookup"><span data-stu-id="d4bab-215">The <xref:System.IO.FileSystemWatcher.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="d4bab-216">À l’aide de la <xref:System.IO.FileSystemWatcher.BeginInit%2A> et <xref:System.IO.FileSystemWatcher.EndInit%2A> méthodes empêche le contrôle de l’utilisation avant son initialisation complète.</span><span class="sxs-lookup"><span data-stu-id="d4bab-216">Using the <xref:System.IO.FileSystemWatcher.BeginInit%2A> and <xref:System.IO.FileSystemWatcher.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : System.IO.FileSystemEventHandler " Usage="member this.Changed : System.IO.FileSystemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory change matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-217">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-217">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-218">Le <xref:System.IO.FileSystemWatcher.Changed> événement est déclenché lorsque des modifications sont apportées à la taille, les attributs système, la dernière écriture heure, heure du dernier accès, autorisations de sécurité d’un fichier ou un répertoire dans le répertoire surveillé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-218">The <xref:System.IO.FileSystemWatcher.Changed> event is raised when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-219">Opérations de système de fichiers courantes peuvent déclencher plusieurs événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-219">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="d4bab-220">Par exemple, lorsqu’un fichier est déplacé d’un répertoire à un autre, plusieurs <xref:System.IO.FileSystemWatcher.OnChanged%2A> et certains <xref:System.IO.FileSystemWatcher.OnCreated%2A> et <xref:System.IO.FileSystemWatcher.OnDeleted%2A> événements peuvent être déclenchés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-220">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="d4bab-221">Déplacement de qu'un fichier est une opération complexe qui se compose de plusieurs opérations simples, déclenchant donc plusieurs événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-221">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="d4bab-222">De même, certaines applications (par exemple, les logiciels antivirus) peuvent entraîner des événements de système de fichiers supplémentaires qui sont détectés par <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-222">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
 <span data-ttu-id="d4bab-223">Utilisez <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> pour restreindre le nombre de notifications générées lors du traitement de cet événement.</span><span class="sxs-lookup"><span data-stu-id="d4bab-223">Use <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> to restrict the number of notifications raised when this event is handled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-224">Le <xref:System.IO.FileSystemWatcher.Changed> événement est déclenché de manière inattendue lorsqu’un fichier est renommé, mais n’est pas déclenché lorsqu’un répertoire est renommé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-224">The <xref:System.IO.FileSystemWatcher.Changed> event is raised unexpectedly when a file is renamed, but is not raised when a directory is renamed.</span></span> <span data-ttu-id="d4bab-225">Pour surveiller le changement de nom, utilisez le <xref:System.IO.FileSystemWatcher.Renamed> événement.</span><span class="sxs-lookup"><span data-stu-id="d4bab-225">To watch for renaming, use the <xref:System.IO.FileSystemWatcher.Renamed> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-226">L’ordre dans lequel le <xref:System.IO.FileSystemWatcher.Changed> événement est déclenché par rapport à l’autre <xref:System.IO.FileSystemWatcher> événements peuvent changer lors du <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> propriété n’est pas `null`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-226">The order in which the <xref:System.IO.FileSystemWatcher.Changed> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4bab-227">L’exemple suivant utilise le <xref:System.IO.FileSystemWatcher.Changed> événement pour afficher le chemin d’accès à la console chaque fois que le fichier surveillé est modifié.</span><span class="sxs-lookup"><span data-stu-id="d4bab-227">The following example uses the <xref:System.IO.FileSystemWatcher.Changed> event to display the file path to the console whenever the watched file is changed.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Created;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Created" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Created" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Created As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Created;" />
      <MemberSignature Language="F#" Value="member this.Created : System.IO.FileSystemEventHandler " Usage="member this.Created : System.IO.FileSystemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory creation matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-228">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-228">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-229">Certaines occurrences courantes, telles que la copie ou déplace un fichier ou répertoire, ne correspondent pas directement à un événement, mais ces occurrences provoquent le déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-229">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="d4bab-230">Lorsque vous copiez un fichier ou répertoire, le système déclenche un <xref:System.IO.FileSystemWatcher.Created> événement dans le répertoire dans lequel le fichier a été copié, si le suivi de ce répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-230">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="d4bab-231">Si le répertoire à partir duquel vous avez copié suivi est assuré par une autre instance de <xref:System.IO.FileSystemWatcher>, aucun événement ne serait déclenché.</span><span class="sxs-lookup"><span data-stu-id="d4bab-231">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="d4bab-232">Par exemple, vous créez deux instances de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-232">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="d4bab-233">FileSystemWatcher1 est défini pour surveiller les « C:\My Documents » et FileSystemWatcher2 est défini pour surveiller les « Documents C:\Your ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-233">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="d4bab-234">Si vous copiez un fichier à partir de « Mes Documents » dans « Vos Documents », un <xref:System.IO.FileSystemWatcher.Created> événement sera déclenché par FileSystemWatcher2, mais aucun événement n’est déclenché par FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="d4bab-234">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="d4bab-235">Contrairement à copier, déplacer un fichier ou répertoire déclenche deux événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-235">Unlike copying, moving a file or directory would raise two events.</span></span> <span data-ttu-id="d4bab-236">À partir de l’exemple précédent, si vous déplacez un fichier à partir de « Mes Documents » vers « Vos Documents », un <xref:System.IO.FileSystemWatcher.Created> aurait été déclenché par FileSystemWatcher2 et un <xref:System.IO.FileSystemWatcher.Deleted> aurait été déclenché par FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="d4bab-236">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-237">Opérations de système de fichiers courantes peuvent déclencher plusieurs événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-237">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="d4bab-238">Par exemple, lorsqu’un fichier est déplacé d’un répertoire à un autre, plusieurs <xref:System.IO.FileSystemWatcher.OnChanged%2A> et certains <xref:System.IO.FileSystemWatcher.OnCreated%2A> et <xref:System.IO.FileSystemWatcher.OnDeleted%2A> événements peuvent être déclenchés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-238">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="d4bab-239">Déplacement de qu'un fichier est une opération complexe qui se compose de plusieurs opérations simples, déclenchant donc plusieurs événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-239">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="d4bab-240">De même, certaines applications (par exemple, les logiciels antivirus) peuvent entraîner des événements de système de fichiers supplémentaires qui sont détectés par <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-240">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-241">L’ordre dans lequel le <xref:System.IO.FileSystemWatcher.Created> événement est déclenché par rapport à l’autre <xref:System.IO.FileSystemWatcher> événements peuvent changer lors du <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> propriété n’est pas `null`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-241">The order in which the <xref:System.IO.FileSystemWatcher.Created> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
 <span data-ttu-id="d4bab-242">Le <xref:System.IO.FileSystemWatcher.OnCreated%2A> événement est déclenché dès qu’un fichier est créé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-242">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="d4bab-243">Si un fichier est copié ou transféré vers un répertoire surveillé, le <xref:System.IO.FileSystemWatcher.OnCreated%2A> événement est déclenché immédiatement, suivi par un ou plusieurs <xref:System.IO.FileSystemWatcher.OnChanged%2A> événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-243">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4bab-244">L’exemple suivant utilise le <xref:System.IO.FileSystemWatcher.Created> événement pour afficher le chemin d’accès à la console chaque fois que le fichier à suivre est créé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-244">The following example uses the <xref:System.IO.FileSystemWatcher.Created> event to display the file path to the console whenever the watched file is created.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.IO.FileSystemEventHandler " Usage="member this.Deleted : System.IO.FileSystemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory deletion matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-245">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is deleted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-245">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-246">Certaines occurrences courantes, telles que la copie ou déplace un fichier ou répertoire, ne correspondent pas directement à un événement, mais ces occurrences provoquent le déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-246">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="d4bab-247">Lorsque vous copiez un fichier ou répertoire, le système déclenche un <xref:System.IO.FileSystemWatcher.Created> événement dans le répertoire dans lequel le fichier a été copié, si le suivi de ce répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-247">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="d4bab-248">Si le répertoire à partir duquel vous avez copié suivi est assuré par une autre instance de <xref:System.IO.FileSystemWatcher>, aucun événement ne serait déclenché.</span><span class="sxs-lookup"><span data-stu-id="d4bab-248">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="d4bab-249">Par exemple, vous créez deux instances de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-249">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="d4bab-250">FileSystemWatcher1 est défini pour surveiller les « C:\My Documents » et FileSystemWatcher2 est défini pour surveiller les « Documents C:\Your ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-250">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="d4bab-251">Si vous copiez un fichier à partir de « Mes Documents » dans « Vos Documents », un <xref:System.IO.FileSystemWatcher.Created> événement sera déclenché par FileSystemWatcher2, mais aucun événement n’est déclenché par FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="d4bab-251">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="d4bab-252">Contrairement à copier, déplacer un fichier ou répertoire déclenche deux événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-252">Unlike copying, moving a file or directory would raise two events.</span></span> <span data-ttu-id="d4bab-253">À partir de l’exemple précédent, si vous déplacez un fichier à partir de « Mes Documents » vers « Vos Documents », un <xref:System.IO.FileSystemWatcher.Created> aurait été déclenché par FileSystemWatcher2 et un <xref:System.IO.FileSystemWatcher.Deleted> aurait été déclenché par FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="d4bab-253">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-254">Opérations de système de fichiers courantes peuvent déclencher plusieurs événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-254">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="d4bab-255">Par exemple, lorsqu’un fichier est déplacé d’un répertoire à un autre, plusieurs <xref:System.IO.FileSystemWatcher.OnChanged%2A> et certains <xref:System.IO.FileSystemWatcher.OnCreated%2A> et <xref:System.IO.FileSystemWatcher.OnDeleted%2A> événements peuvent être déclenchés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-255">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="d4bab-256">Déplacement de qu'un fichier est une opération complexe qui se compose de plusieurs opérations simples, déclenchant donc plusieurs événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-256">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="d4bab-257">De même, certaines applications (par exemple, les logiciels antivirus) peuvent entraîner des événements de système de fichiers supplémentaires qui sont détectés par <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-257">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-258">L’ordre dans lequel le <xref:System.IO.FileSystemWatcher.Deleted> événement est déclenché par rapport à l’autre <xref:System.IO.FileSystemWatcher> événements peuvent changer lors du <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> propriété n’est pas `null`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-258">The order in which the <xref:System.IO.FileSystemWatcher.Deleted> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4bab-259">L’exemple suivant utilise le <xref:System.IO.FileSystemWatcher.Deleted> événement pour afficher le chemin d’accès à la console chaque fois que le fichier à suivre est supprimé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-259">The following example uses the <xref:System.IO.FileSystemWatcher.Deleted> event to display the file path to the console whenever the watched file is deleted.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="fileSystemWatcher.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fileSystemWatcher.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="d4bab-260">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-260">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4bab-261">Releases the unmanaged resources used by the <see cref="T:System.IO.FileSystemWatcher" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-261">Releases the unmanaged resources used by the <see cref="T:System.IO.FileSystemWatcher" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-262">Cette méthode est appelée par le public <xref:System.ComponentModel.Component.Dispose%2A> (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d4bab-262">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="d4bab-263"><xref:System.ComponentModel.Component.Dispose%2A> appelle la méthode protégée <xref:System.IO.FileSystemWatcher.Dispose%2A> méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-263"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.FileSystemWatcher.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="d4bab-264"><xref:System.Object.Finalize%2A> appelle <xref:System.IO.FileSystemWatcher.Dispose%2A> avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-264"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.FileSystemWatcher.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="d4bab-265">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.IO.Compression.DeflateStream>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-265">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references.</span></span> <span data-ttu-id="d4bab-266">Cette méthode appelle la méthode <xref:System.ComponentModel.Component.Dispose%2A> de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-266">This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d4bab-267">
            <para>
              <see cref="M:System.ComponentModel.Component.Dispose" /> peut être appelée plusieurs fois par d’autres objets. Lors de la substitution <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see cref="M:System.ComponentModel.Component.Dispose" />. Pour plus d’informations sur l’implémentation <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />, consultez [implémentation d’un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Pour plus d’informations sur <see cref="M:System.ComponentModel.Component.Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [nettoyage des non managé Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-267">
              <para>
                <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />. For more information about how to implement <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EnableRaisingEvents">
      <MemberSignature Language="C#" Value="public bool EnableRaisingEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRaisingEvents" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.EnableRaisingEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRaisingEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRaisingEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableRaisingEvents : bool with get, set" Usage="System.IO.FileSystemWatcher.EnableRaisingEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("Flag to indicate if this instance is active")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-268">Gets or sets a value indicating whether the component is enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-268">Gets or sets a value indicating whether the component is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4bab-269">
            <see langword="true" /> si le composant est activé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-269">
              <see langword="true" /> if the component is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d4bab-270">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-270">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d4bab-271">Si vous utilisez le composant sur un concepteur dans [ ! Include[vsprvslong](~/Includes/vsprvslong-MD.MD)], la valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-271">If you are using the component on a designer in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], the default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-272">Le composant déclenche des événements, sauf si vous définissez <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> à `true`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-272">The component will not raise events unless you set <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-273">Le composant ne surveillera pas le répertoire spécifié jusqu'à ce que le <xref:System.IO.FileSystemWatcher.Path%2A> propriété a été définie et <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> est `true`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-273">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> property has been set and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="d4bab-274">Le <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> méthode permet de gestionnaires d’événements à appeler pour répondre aux modifications de fichier même si cette propriété est définie sur `false`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-274">The <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> method allows event handlers to be invoked to respond to file changes even if this property is set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4bab-275">L’exemple suivant crée un <xref:System.IO.FileSystemWatcher> à surveiller le répertoire spécifié au moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="d4bab-275">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="d4bab-276">Le composant est défini pour surveiller les modifications de `LastWrite` et `LastAccess` du temps, la création, suppression, ou le changement de nom des fichiers texte dans le répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-276">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="d4bab-277">Si un fichier est modifié, créé ou supprimé, le chemin d’accès au fichier s’imprime sur la console.</span><span class="sxs-lookup"><span data-stu-id="d4bab-277">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="d4bab-278">Lorsqu’un fichier est renommé, les chemins d’accès nouvelles et anciennes impriment sur la console.</span><span class="sxs-lookup"><span data-stu-id="d4bab-278">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="d4bab-279">Utilisez le <xref:System.Diagnostics> et <xref:System.IO> espaces de noms pour cet exemple.</span><span class="sxs-lookup"><span data-stu-id="d4bab-279">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d4bab-280">The <see cref="T:System.IO.FileSystemWatcher" /> object has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-280">The <see cref="T:System.IO.FileSystemWatcher" /> object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="d4bab-281">The current operating system is not Microsoft Windows NT or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-281">The current operating system is not Microsoft Windows NT or later.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d4bab-282">The directory specified in <see cref="P:System.IO.FileSystemWatcher.Path" /> could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-282">The directory specified in <see cref="P:System.IO.FileSystemWatcher.Path" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4bab-283">
            <see cref="P:System.IO.FileSystemWatcher.Path" /> has not been set or is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-283">
              <see cref="P:System.IO.FileSystemWatcher.Path" /> has not been set or is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="fileSystemWatcher.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-284">Ends the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-284">Ends the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="d4bab-285">The initialization occurs at run time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-285">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-286">Le [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] conception environnement utilise cette méthode pour terminer l’initialisation d’un composant utilisé dans un formulaire ou par un autre composant.</span><span class="sxs-lookup"><span data-stu-id="d4bab-286">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component used on a form or used by another component.</span></span> <span data-ttu-id="d4bab-287">Le <xref:System.IO.FileSystemWatcher.BeginInit%2A> méthode démarre l’initialisation.</span><span class="sxs-lookup"><span data-stu-id="d4bab-287">The <xref:System.IO.FileSystemWatcher.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="d4bab-288">À l’aide de la <xref:System.IO.FileSystemWatcher.BeginInit%2A> et <xref:System.IO.FileSystemWatcher.EndInit%2A> méthodes empêche le contrôle de l’utilisation avant son initialisation complète.</span><span class="sxs-lookup"><span data-stu-id="d4bab-288">Using the <xref:System.IO.FileSystemWatcher.BeginInit%2A> and <xref:System.IO.FileSystemWatcher.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event System.IO.ErrorEventHandler Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.ErrorEventHandler Error" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Error" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Error As ErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::ErrorEventHandler ^ Error;" />
      <MemberSignature Language="F#" Value="member this.Error : System.IO.ErrorEventHandler " Usage="member this.Error : System.IO.ErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.ErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-289">Occurs when the instance of <see cref="T:System.IO.FileSystemWatcher" /> is unable to continue monitoring changes or when the internal buffer overflows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-289">Occurs when the instance of <see cref="T:System.IO.FileSystemWatcher" /> is unable to continue monitoring changes or when the internal buffer overflows.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-290">Cet événement est déclenché chaque fois que quelque chose empêche le <xref:System.IO.FileSystemWatcher> objet à partir de la surveillance des modifications.</span><span class="sxs-lookup"><span data-stu-id="d4bab-290">This event is raised whenever something prevents the <xref:System.IO.FileSystemWatcher> object from monitoring changes.</span></span> <span data-ttu-id="d4bab-291">Par exemple, si l’objet contrôle les modifications dans un répertoire distant et la connexion à ce répertoire est perdue, le <xref:System.IO.FileSystemWatcher.Error> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d4bab-291">For example, if the object is monitoring changes in a remote directory and the connection to that directory is lost, the <xref:System.IO.FileSystemWatcher.Error> event is raised.</span></span>  
  
 <span data-ttu-id="d4bab-292">Le système vous informe des modifications de fichier, et stocke ces modifications dans une mémoire tampon que le composant crée et passe aux API.</span><span class="sxs-lookup"><span data-stu-id="d4bab-292">The system notifies you of file changes, and it stores those changes in a buffer that the component creates and passes to the APIs.</span></span> <span data-ttu-id="d4bab-293">Si plusieurs modifications sont apportées dans une courte période, la mémoire tampon peut provoquer un débordement.</span><span class="sxs-lookup"><span data-stu-id="d4bab-293">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="d4bab-294">Cela entraîne le composant de perdre la trace des modifications dans le répertoire, et il ne sera qu’une notification standard.</span><span class="sxs-lookup"><span data-stu-id="d4bab-294">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="d4bab-295">Augmentation de la taille de la mémoire tampon est coûteuse, car elle provient de non à la mémoire paginée ne peut pas être transférée sur le disque, c’est le cas conserver la mémoire tampon aussi réduite que possible.</span><span class="sxs-lookup"><span data-stu-id="d4bab-295">Increasing the size of the buffer is expensive, because it comes from non paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</span></span> <span data-ttu-id="d4bab-296">Pour éviter un dépassement de capacité de mémoire tampon, utilisez le <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.Filter%2A>, et <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> notifications de modifications de propriétés à filtrer les indésirables.</span><span class="sxs-lookup"><span data-stu-id="d4bab-296">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.Filter%2A>, and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties to filter out unwanted change notifications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-297">Opérations de système de fichiers courantes peuvent déclencher plusieurs événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-297">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="d4bab-298">Par exemple, lorsqu’un fichier est déplacé d’un répertoire à un autre, plusieurs <xref:System.IO.FileSystemWatcher.OnChanged%2A> et certains <xref:System.IO.FileSystemWatcher.OnCreated%2A> et <xref:System.IO.FileSystemWatcher.OnDeleted%2A> événements peuvent être déclenchés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-298">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="d4bab-299">Déplacement de qu'un fichier est une opération complexe qui se compose de plusieurs opérations simples, déclenchant donc plusieurs événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-299">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="d4bab-300">De même, certaines applications (par exemple, les logiciels antivirus) peuvent entraîner des événements de système de fichiers supplémentaires qui sont détectés par <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-300">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.ErrorEventArgs" />
        <altmember cref="T:System.IO.ErrorEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.IO.FileSystemWatcher.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("*.*")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("File name filter pattern")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-301">Gets or sets the filter string used to determine what files are monitored in a directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-301">Gets or sets the filter string used to determine what files are monitored in a directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4bab-302">Chaîne de filtrage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-302">The filter string.</span>
          </span>
          <span data-ttu-id="d4bab-303">La valeur par défaut est « *. \*« (Surveille tous les fichiers.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-303">The default is "*.\*" (Watches all files.)</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-304">Pour surveiller les modifications dans tous les fichiers, la valeur la <xref:System.IO.FileSystemWatcher.Filter%2A> propriété sur une chaîne vide ( » »).</span><span class="sxs-lookup"><span data-stu-id="d4bab-304">To watch changes in all files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to an empty string ("").</span></span> <span data-ttu-id="d4bab-305">Pour visionner un fichier spécifique, définissez la <xref:System.IO.FileSystemWatcher.Filter%2A> propriété le nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="d4bab-305">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span> <span data-ttu-id="d4bab-306">Par exemple, pour surveiller les modifications apportées au fichier mondoc.txt, définissez le <xref:System.IO.FileSystemWatcher.Filter%2A> propriété « Doit être mondoc.txt ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-306">For example, to watch for changes in the file MyDoc.txt, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "MyDoc.txt".</span></span> <span data-ttu-id="d4bab-307">Vous pouvez également surveiller les modifications apportées à un certain type de fichier.</span><span class="sxs-lookup"><span data-stu-id="d4bab-307">You can also watch for changes in a certain type of file.</span></span> <span data-ttu-id="d4bab-308">Par exemple, pour surveiller les modifications dans les fichiers texte, définissez le <xref:System.IO.FileSystemWatcher.Filter%2A> propriété sur « \*.txt ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-308">For example, to watch for changes in any text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt".</span></span> <span data-ttu-id="d4bab-309">Utilisation de plusieurs filtres tels que «\*.txt&#124;\*.doc » n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="d4bab-309">Use of multiple filters such as "\*.txt&#124;\*.doc" is not supported.</span></span>  
  
 <span data-ttu-id="d4bab-310">Le <xref:System.IO.FileSystemWatcher.Filter%2A> propriété peut être modifiée après le <xref:System.IO.FileSystemWatcher> objet a commencé à recevoir des événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-310">The <xref:System.IO.FileSystemWatcher.Filter%2A> property can be changed after the <xref:System.IO.FileSystemWatcher> object has started receiving events.</span></span>  
  
 <span data-ttu-id="d4bab-311">Pour plus d’informations sur le filtrage de notifications inutiles, consultez le <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, et <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-311">For more information about filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
 <span data-ttu-id="d4bab-312"><xref:System.IO.FileSystemWatcher.Filter%2A> accepte les caractères génériques pour les fichiers correspondants, comme indiqué dans les exemples suivants.</span><span class="sxs-lookup"><span data-stu-id="d4bab-312"><xref:System.IO.FileSystemWatcher.Filter%2A> accepts wildcards for matching files, as shown in the following examples.</span></span>  
  
|<span data-ttu-id="d4bab-313">Chaîne de filtrage</span><span class="sxs-lookup"><span data-stu-id="d4bab-313">Filter string</span></span>|<span data-ttu-id="d4bab-314">Surveille les fichiers suivants</span><span class="sxs-lookup"><span data-stu-id="d4bab-314">Watches the following files</span></span>|  
|-------------------|---------------------------------|  
|<span data-ttu-id="d4bab-315">*.\*</span><span class="sxs-lookup"><span data-stu-id="d4bab-315">*.\*</span></span>|<span data-ttu-id="d4bab-316">Tous les fichiers (par défaut).</span><span class="sxs-lookup"><span data-stu-id="d4bab-316">All files (default).</span></span> <span data-ttu-id="d4bab-317">Une chaîne vide (" ») surveille également tous les fichiers.</span><span class="sxs-lookup"><span data-stu-id="d4bab-317">An empty string ("") also watches all files.</span></span>|  
|<span data-ttu-id="d4bab-318">\*.txt</span><span class="sxs-lookup"><span data-stu-id="d4bab-318">\*.txt</span></span>|<span data-ttu-id="d4bab-319">Tous les fichiers avec une extension « txt ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-319">All files with a "txt" extension.</span></span>|  
|<span data-ttu-id="d4bab-320">\*Recipe.doc</span><span class="sxs-lookup"><span data-stu-id="d4bab-320">\*recipe.doc</span></span>|<span data-ttu-id="d4bab-321">Tous les fichiers se terminant par « recette » avec une extension « doc ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-321">All files ending in "recipe" with a "doc" extension.</span></span>|  
|<span data-ttu-id="d4bab-322">Win\*.Xml</span><span class="sxs-lookup"><span data-stu-id="d4bab-322">win\*.xml</span></span>|<span data-ttu-id="d4bab-323">Tous les fichiers commençant par « win » avec une extension « xml ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-323">All files beginning with "win" with an "xml" extension.</span></span>|  
|<span data-ttu-id="d4bab-324">Sales \* 200 ?. xls</span><span class="sxs-lookup"><span data-stu-id="d4bab-324">Sales\*200?.xls</span></span>|<span data-ttu-id="d4bab-325">Correspond à ce qui suit :</span><span class="sxs-lookup"><span data-stu-id="d4bab-325">Matches the following:</span></span><br /><br /> <span data-ttu-id="d4bab-326">Ventes juillet 2001.xlsSales août 2002.xlsSales mars 2004.xls</span><span class="sxs-lookup"><span data-stu-id="d4bab-326">Sales July 2001.xlsSales Aug 2002.xlsSales March 2004.xls</span></span><br /><br /> <span data-ttu-id="d4bab-327">mais ne correspond pas à :</span><span class="sxs-lookup"><span data-stu-id="d4bab-327">but does not match:</span></span><br /><br /> <span data-ttu-id="d4bab-328">Ventes Nov 1999.xls</span><span class="sxs-lookup"><span data-stu-id="d4bab-328">Sales Nov 1999.xls</span></span>|  
|<span data-ttu-id="d4bab-329">MyReport.Doc</span><span class="sxs-lookup"><span data-stu-id="d4bab-329">MyReport.Doc</span></span>|<span data-ttu-id="d4bab-330">Surveille uniquement le suivi de MyReport.doc</span><span class="sxs-lookup"><span data-stu-id="d4bab-330">Watches only MyReport.doc</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d4bab-331">L’exemple suivant crée un <xref:System.IO.FileSystemWatcher> à surveiller le répertoire spécifié au moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="d4bab-331">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="d4bab-332">Le composant est défini pour surveiller les modifications de `LastWrite` et `LastAccess` du temps, la création, suppression, ou le changement de nom des fichiers texte dans le répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-332">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="d4bab-333">Si un fichier est modifié, créé ou supprimé, le chemin d’accès au fichier s’imprime sur la console.</span><span class="sxs-lookup"><span data-stu-id="d4bab-333">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="d4bab-334">Lorsqu’un fichier est renommé, les chemins d’accès nouvelles et anciennes impriment sur la console.</span><span class="sxs-lookup"><span data-stu-id="d4bab-334">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="d4bab-335">Utilisez le <xref:System.Diagnostics> et <xref:System.IO> espaces de noms pour cet exemple.</span><span class="sxs-lookup"><span data-stu-id="d4bab-335">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FileSystemWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!FileSystemWatcher ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="fileSystemWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeSubdirectories">
      <MemberSignature Language="C#" Value="public bool IncludeSubdirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeSubdirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeSubdirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeSubdirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeSubdirectories : bool with get, set" Usage="System.IO.FileSystemWatcher.IncludeSubdirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("Flag to indicate we want to watch subdirectories")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-336">Gets or sets a value indicating whether subdirectories within the specified path should be monitored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-336">Gets or sets a value indicating whether subdirectories within the specified path should be monitored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4bab-337">
            <see langword="true" /> si vous voulez surveiller les sous-répertoires ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-337">
              <see langword="true" /> if you want to monitor subdirectories; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d4bab-338">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-338">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-339">Définissez <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> à `true` lorsque vous souhaitez surveiller les notifications de modification des fichiers et répertoires contenus dans le répertoire spécifié par le biais du <xref:System.IO.FileSystemWatcher.Path%2A> propriété et ses sous-répertoires.</span><span class="sxs-lookup"><span data-stu-id="d4bab-339">Set <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> to `true` when you want to watch for change notifications for files and directories contained within the directory specified through the <xref:System.IO.FileSystemWatcher.Path%2A> property, and its subdirectories.</span></span> <span data-ttu-id="d4bab-340">Définition de la <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> propriété `false` vous aide à réduire le nombre de notifications envoyées à la mémoire tampon interne.</span><span class="sxs-lookup"><span data-stu-id="d4bab-340">Setting the <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> property to `false` helps reduce the number of notifications sent to the internal buffer.</span></span> <span data-ttu-id="d4bab-341">Pour plus d’informations sur le filtrage de notifications inutiles, consultez le <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> et <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-341">For more information on filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
 <span data-ttu-id="d4bab-342">Lorsque `true`, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> est récurrente à travers l’ensemble du sous-arbre, pas seulement les répertoires enfants immédiats.</span><span class="sxs-lookup"><span data-stu-id="d4bab-342">When `true`, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> is recursive through the entire sub tree, not just the immediate child directories.</span></span> <span data-ttu-id="d4bab-343">Le chemin d’accès relatif à un fichier ou répertoire dans le sous-arbre retourne dans le <xref:System.IO.FileSystemEventArgs.Name%2A> propriété de <xref:System.IO.FileSystemEventArgs> et <xref:System.IO.RenamedEventArgs.OldName%2A> propriété de <xref:System.IO.RenamedEventArgs>, selon les modifications suivies.</span><span class="sxs-lookup"><span data-stu-id="d4bab-343">The relative path to a file or directory within the sub tree returns in the <xref:System.IO.FileSystemEventArgs.Name%2A> property of <xref:System.IO.FileSystemEventArgs> and the <xref:System.IO.RenamedEventArgs.OldName%2A> property of <xref:System.IO.RenamedEventArgs>, depending on changes you are watching for.</span></span> <span data-ttu-id="d4bab-344">Vous pouvez obtenir le chemin d’accès qualifié complet à partir de la <xref:System.IO.FileSystemEventArgs.FullPath%2A> propriété de <xref:System.IO.FileSystemEventArgs> et <xref:System.IO.RenamedEventArgs.OldFullPath%2A> propriété de <xref:System.IO.RenamedEventArgs>, selon les modifications suivies.</span><span class="sxs-lookup"><span data-stu-id="d4bab-344">You can get the fully qualified path from the <xref:System.IO.FileSystemEventArgs.FullPath%2A> property of <xref:System.IO.FileSystemEventArgs> and the <xref:System.IO.RenamedEventArgs.OldFullPath%2A> property of <xref:System.IO.RenamedEventArgs>, depending on the changes you are watching for.</span></span>  
  
 <span data-ttu-id="d4bab-345">Si un répertoire est créé dans le sous-arbre du répertoire que vous surveillez et <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> est `true`, ce répertoire sera automatiquement surveillé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-345">If a directory is created in the sub tree of the directory you are watching, and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> is `true`, that directory will automatically be watched.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemEventArgs.FullPath" />
        <altmember cref="P:System.IO.RenamedEventArgs.OldFullPath" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
        <altmember cref="P:System.IO.FileSystemEventArgs.Name" />
        <altmember cref="P:System.IO.RenamedEventArgs.OldName" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="InternalBufferSize">
      <MemberSignature Language="C#" Value="public int InternalBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InternalBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property InternalBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InternalBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.InternalBufferSize : int with get, set" Usage="System.IO.FileSystemWatcher.InternalBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(8192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-346">Gets or sets the size (in bytes) of the internal buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-346">Gets or sets the size (in bytes) of the internal buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4bab-347">Taille de la mémoire tampon interne en octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-347">The internal buffer size in bytes.</span>
          </span>
          <span data-ttu-id="d4bab-348">La valeur par défaut est 8 192 (8 Ko).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-348">The default is 8192 (8 KB).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-349">Vous pouvez définir la mémoire tampon de 4 Ko ou plus, mais il ne doit pas dépasser 64 Ko.</span><span class="sxs-lookup"><span data-stu-id="d4bab-349">You can set the buffer to 4 KB or larger, but it must not exceed 64 KB.</span></span> <span data-ttu-id="d4bab-350">Si vous essayez de définir la <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriété inférieure à 4 096 octets, votre valeur est ignorée et la <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriété est définie sur 4 096 octets.</span><span class="sxs-lookup"><span data-stu-id="d4bab-350">If you try to set the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property to less than 4096 bytes, your value is discarded and the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property is set to 4096 bytes.</span></span> <span data-ttu-id="d4bab-351">Pour de meilleures performances, utilisez un multiple de 4 Ko sur les ordinateurs Intel.</span><span class="sxs-lookup"><span data-stu-id="d4bab-351">For best performance, use a multiple of 4 KB on Intel-based computers.</span></span>  
  
 <span data-ttu-id="d4bab-352">Le système notifie le composant des modifications de fichier, et stocke ces modifications dans une mémoire tampon le composant crée et passe aux API.</span><span class="sxs-lookup"><span data-stu-id="d4bab-352">The system notifies the component of file changes, and it stores those changes in a buffer the component creates and passes to the APIs.</span></span> <span data-ttu-id="d4bab-353">Chaque événement peut utiliser jusqu'à 16 octets de mémoire, sans le nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="d4bab-353">Each event can use up to 16 bytes of memory, not including the file name.</span></span> <span data-ttu-id="d4bab-354">Si plusieurs modifications sont apportées dans une courte période, la mémoire tampon peut provoquer un débordement.</span><span class="sxs-lookup"><span data-stu-id="d4bab-354">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="d4bab-355">Cela entraîne le composant de perdre la trace des modifications dans le répertoire, et il ne sera qu’une notification standard.</span><span class="sxs-lookup"><span data-stu-id="d4bab-355">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="d4bab-356">Augmentation de la taille de la mémoire tampon peut empêcher manquantes du système de fichiers des événements de modification.</span><span class="sxs-lookup"><span data-stu-id="d4bab-356">Increasing the size of the buffer can prevent missing file system change events.</span></span> <span data-ttu-id="d4bab-357">Toutefois, augmenter la taille de mémoire tampon est coûteuse, car elle provient d’une mémoire non paginée ne peut pas être transférée sur le disque, par conséquent, conserver la mémoire tampon autant que possible.</span><span class="sxs-lookup"><span data-stu-id="d4bab-357">However, increasing buffer size is expensive, because it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</span></span> <span data-ttu-id="d4bab-358">Pour éviter un dépassement de capacité de mémoire tampon, utilisez le <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> et <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> notifications de modifications de propriétés à filtrer les indésirables.</span><span class="sxs-lookup"><span data-stu-id="d4bab-358">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties to filter out unwanted change notifications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
      </Docs>
    </Member>
    <Member MemberName="NotifyFilter">
      <MemberSignature Language="C#" Value="public System.IO.NotifyFilters NotifyFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.NotifyFilters NotifyFilter" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.NotifyFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyFilter As NotifyFilters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::NotifyFilters NotifyFilter { System::IO::NotifyFilters get(); void set(System::IO::NotifyFilters value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyFilter : System.IO.NotifyFilters with get, set" Usage="System.IO.FileSystemWatcher.NotifyFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("Flag to indicate which change event we want to monitor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.NotifyFilters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-359">Gets or sets the type of changes to watch for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-359">Gets or sets the type of changes to watch for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4bab-360">Une des valeurs de <see cref="T:System.IO.NotifyFilters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-360">One of the <see cref="T:System.IO.NotifyFilters" /> values.</span>
          </span>
          <span data-ttu-id="d4bab-361">La valeur par défaut est la combinaison OR au niveau du bit de <see langword="LastWrite" />, <see langword="FileName" /> et <see langword="DirectoryName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-361">The default is the bitwise OR combination of <see langword="LastWrite" />, <see langword="FileName" />, and <see langword="DirectoryName" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-362">Vous pouvez combiner les membres de la <xref:System.IO.NotifyFilters> énumération pour surveiller plusieurs types de modification à la fois.</span><span class="sxs-lookup"><span data-stu-id="d4bab-362">You can combine the members of the <xref:System.IO.NotifyFilters> enumeration to watch for more than one type of change at a time.</span></span> <span data-ttu-id="d4bab-363">Par exemple, vous pouvez regarder les modifications de taille d’un fichier et les modifications dans le `LastWrite` temps.</span><span class="sxs-lookup"><span data-stu-id="d4bab-363">For example, you can watch for changes in size of a file, and for changes in the `LastWrite` time.</span></span> <span data-ttu-id="d4bab-364">Cela déclenche un événement chaque fois qu’il existe un changement de taille de fichier ou dossier, ou une modification de la `LastWrite` l’heure de fichier ou du dossier.</span><span class="sxs-lookup"><span data-stu-id="d4bab-364">This raises an event anytime there is a change in file or folder size, or a change in the `LastWrite` time of the file or folder.</span></span>  
  
 <span data-ttu-id="d4bab-365">Il s’agit d’une façon de filtrer les notifications inutiles.</span><span class="sxs-lookup"><span data-stu-id="d4bab-365">This is one way to filter out unwanted notifications.</span></span> <span data-ttu-id="d4bab-366">Pour plus d’informations sur le filtrage de notifications inutiles, consultez le <xref:System.IO.FileSystemWatcher.Filter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, et <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="d4bab-366">For more information on filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.Filter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4bab-367">L’exemple suivant crée un <xref:System.IO.FileSystemWatcher> à surveiller le répertoire spécifié au moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="d4bab-367">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="d4bab-368">Le composant est défini pour surveiller les modifications de `LastWrite` et `LastAccess` du temps, la création, suppression, ou le changement de nom des fichiers texte dans le répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-368">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="d4bab-369">Si un fichier est modifié, créé ou supprimé, le chemin d’accès au fichier s’imprime sur la console.</span><span class="sxs-lookup"><span data-stu-id="d4bab-369">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="d4bab-370">Lorsqu’un fichier est renommé, les chemins d’accès nouvelles et anciennes impriment sur la console.</span><span class="sxs-lookup"><span data-stu-id="d4bab-370">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="d4bab-371">Utilisez le <xref:System.Diagnostics> et <xref:System.IO> espaces de noms pour cet exemple.</span><span class="sxs-lookup"><span data-stu-id="d4bab-371">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4bab-372">The value is not a valid bitwise OR combination of the <see cref="T:System.IO.NotifyFilters" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-372">The value is not a valid bitwise OR combination of the <see cref="T:System.IO.NotifyFilters" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="d4bab-373">The value that is being set is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-373">The value that is being set is not valid.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChanged (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChanged(System::IO::FileSystemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnChanged : System.IO.FileSystemEventArgs -&gt; unit" Usage="fileSystemWatcher.OnChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d4bab-374">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-374">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4bab-375">Raises the <see cref="E:System.IO.FileSystemWatcher.Changed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-375">Raises the <see cref="E:System.IO.FileSystemWatcher.Changed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-376"><xref:System.IO.FileSystemWatcher.OnChanged%2A> est appelée lorsque des modifications sont apportées à la taille, les attributs système, heure de dernière écriture, heure du dernier accès, autorisations de sécurité d’un fichier ou un répertoire dans le répertoire surveillé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-376"><xref:System.IO.FileSystemWatcher.OnChanged%2A> is called when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</span></span>  
  
 <span data-ttu-id="d4bab-377">Utilisez le <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> propriété pour restreindre le nombre d’événements déclenché lorsque le <xref:System.IO.FileSystemWatcher.Changed> événement est géré.</span><span class="sxs-lookup"><span data-stu-id="d4bab-377">Use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> property to restrict the number of events raised when the <xref:System.IO.FileSystemWatcher.Changed> event is handled.</span></span>  
  
 <span data-ttu-id="d4bab-378">Le <xref:System.IO.FileSystemWatcher.OnCreated%2A> événement est déclenché dès qu’un fichier est créé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-378">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="d4bab-379">Si un fichier est copié ou transféré vers un répertoire surveillé, le <xref:System.IO.FileSystemWatcher.OnCreated%2A> événement est déclenché immédiatement, suivi par un ou plusieurs <xref:System.IO.FileSystemWatcher.OnChanged%2A> événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-379">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
 <span data-ttu-id="d4bab-380">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d4bab-380">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d4bab-381">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d4bab-381">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d4bab-382">
            <para>Lors de la substitution <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> (méthode).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-382">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Changed" />
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnCreated">
      <MemberSignature Language="C#" Value="protected void OnCreated (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnCreated(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnCreated (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnCreated(System::IO::FileSystemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnCreated : System.IO.FileSystemEventArgs -&gt; unit" Usage="fileSystemWatcher.OnCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d4bab-383">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-383">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4bab-384">Raises the <see cref="E:System.IO.FileSystemWatcher.Created" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-384">Raises the <see cref="E:System.IO.FileSystemWatcher.Created" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-385"><xref:System.IO.FileSystemWatcher.OnCreated%2A> est appelé lorsqu’un fichier ou répertoire est créé dans le répertoire surveillé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-385"><xref:System.IO.FileSystemWatcher.OnCreated%2A> is called when a file or directory is created in the directory being monitored.</span></span>  
  
 <span data-ttu-id="d4bab-386">Certaines occurrences courantes, telles que la copie ou déplace un fichier ou répertoire, ne correspondent pas directement à un événement, mais ces occurrences provoquent le déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-386">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="d4bab-387">Lorsque vous copiez un fichier ou répertoire, le système déclenche un <xref:System.IO.FileSystemWatcher.Created> événement dans le répertoire dans lequel le fichier a été copié, si le suivi de ce répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-387">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="d4bab-388">Si le répertoire à partir duquel vous avez copié suivi est assuré par une autre instance de <xref:System.IO.FileSystemWatcher>, aucun événement ne serait déclenché.</span><span class="sxs-lookup"><span data-stu-id="d4bab-388">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="d4bab-389">Par exemple, vous créez deux instances de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-389">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="d4bab-390">FileSystemWatcher1 est défini pour surveiller les « C:\My Documents » et FileSystemWatcher2 est défini pour surveiller les « Documents C:\Your ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-390">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="d4bab-391">Si vous copiez un fichier à partir de « Mes Documents » et collez-le dans « Vos Documents », un <xref:System.IO.FileSystemWatcher.Created> événement sera déclenché par FileSystemWatcher2, mais aucun événement n’est déclenché par FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="d4bab-391">If you copy a file from "My Documents" and paste it into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised in FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="d4bab-392">Contrairement à la copie, le déplacement d’un fichier ou répertoire déclenche deux événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-392">Unlike copying, moving a file or directory raises two events.</span></span> <span data-ttu-id="d4bab-393">À partir de l’exemple précédent, si vous déplacez un fichier à partir de « Mes Documents » vers « Vos Documents », un <xref:System.IO.FileSystemWatcher.Created> aurait été déclenché FileSystemWatcher2 et un <xref:System.IO.FileSystemWatcher.Deleted> FileSystemWatcher1 aurait été déclenché.</span><span class="sxs-lookup"><span data-stu-id="d4bab-393">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised in FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised in FileSystemWatcher1.</span></span>  
  
 <span data-ttu-id="d4bab-394">Le <xref:System.IO.FileSystemWatcher.OnCreated%2A> événement est déclenché dès qu’un fichier est créé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-394">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="d4bab-395">Si un fichier est copié ou transféré vers un répertoire surveillé, le <xref:System.IO.FileSystemWatcher.OnCreated%2A> événement est déclenché immédiatement, suivi par un ou plusieurs <xref:System.IO.FileSystemWatcher.OnChanged%2A> événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-395">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
 <span data-ttu-id="d4bab-396">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d4bab-396">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d4bab-397">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d4bab-397">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d4bab-398">
            <para>Lors de la substitution <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> (méthode).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-398">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected void OnDeleted (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnDeleted(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnDeleted (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnDeleted(System::IO::FileSystemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnDeleted : System.IO.FileSystemEventArgs -&gt; unit" Usage="fileSystemWatcher.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d4bab-399">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-399">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4bab-400">Raises the <see cref="E:System.IO.FileSystemWatcher.Deleted" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-400">Raises the <see cref="E:System.IO.FileSystemWatcher.Deleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-401"><xref:System.IO.FileSystemWatcher.OnDeleted%2A> est appelée lorsqu’un fichier ou répertoire, dans le répertoire surveillé, est supprimé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-401"><xref:System.IO.FileSystemWatcher.OnDeleted%2A> is called when a file or directory, within the directory being monitored, is deleted.</span></span>  
  
 <span data-ttu-id="d4bab-402">Certaines occurrences courantes, telles que la copie ou déplace un fichier ou répertoire, ne correspondent pas directement à un événement, mais ces occurrences provoquent le déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-402">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="d4bab-403">Lorsque vous copiez un fichier ou répertoire, le système déclenche un <xref:System.IO.FileSystemWatcher.Created> événement dans le répertoire dans lequel le fichier a été copié, si le suivi de ce répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-403">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="d4bab-404">Si le répertoire à partir duquel vous avez copié suivi est assuré par une autre instance de <xref:System.IO.FileSystemWatcher>, aucun événement ne serait déclenché.</span><span class="sxs-lookup"><span data-stu-id="d4bab-404">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="d4bab-405">Par exemple, vous créez deux instances de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-405">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="d4bab-406">FileSystemWatcher1 est défini pour surveiller les « C:\My Documents » et FileSystemWatcher2 est défini pour surveiller les « Documents C:\Your ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-406">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="d4bab-407">Si vous copiez un fichier à partir de « Mes Documents » dans « Vos Documents », un <xref:System.IO.FileSystemWatcher.Created> événement sera déclenché par FileSystemWatcher2, mais aucun événement n’est déclenché par FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="d4bab-407">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="d4bab-408">Contrairement à la copie, le déplacement d’un fichier ou répertoire déclenche deux événements.</span><span class="sxs-lookup"><span data-stu-id="d4bab-408">Unlike copying, moving a file or directory raises two events.</span></span> <span data-ttu-id="d4bab-409">À partir de l’exemple précédent, si vous déplacez un fichier à partir de « Mes Documents » vers « Vos Documents », un <xref:System.IO.FileSystemWatcher.Created> aurait été déclenché par FileSystemWatcher2 et un <xref:System.IO.FileSystemWatcher.Deleted> aurait été déclenché par FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="d4bab-409">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
 <span data-ttu-id="d4bab-410">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d4bab-410">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d4bab-411">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d4bab-411">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d4bab-412">
            <para>Lors de la substitution <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> (méthode).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-412">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="protected void OnError (System.IO.ErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnError(class System.IO.ErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnError (e As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnError(System::IO::ErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnError : System.IO.ErrorEventArgs -&gt; unit" Usage="fileSystemWatcher.OnError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d4bab-413">An <see cref="T:System.IO.ErrorEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-413">An <see cref="T:System.IO.ErrorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4bab-414">Raises the <see cref="E:System.IO.FileSystemWatcher.Error" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-414">Raises the <see cref="E:System.IO.FileSystemWatcher.Error" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-415"><xref:System.IO.FileSystemWatcher.OnError%2A> est appelée lorsqu’une erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="d4bab-415"><xref:System.IO.FileSystemWatcher.OnError%2A> is called when an error occurs.</span></span>  
  
 <span data-ttu-id="d4bab-416">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d4bab-416">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d4bab-417">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d4bab-417">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d4bab-418">
            <para>Lors de la substitution <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> (méthode).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-418">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Error" />
        <altmember cref="T:System.IO.ErrorEventArgs" />
        <altmember cref="T:System.IO.ErrorEventHandler" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
      </Docs>
    </Member>
    <Member MemberName="OnRenamed">
      <MemberSignature Language="C#" Value="protected void OnRenamed (System.IO.RenamedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnRenamed(class System.IO.RenamedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnRenamed (e As RenamedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnRenamed(System::IO::RenamedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnRenamed : System.IO.RenamedEventArgs -&gt; unit" Usage="fileSystemWatcher.OnRenamed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.RenamedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d4bab-419">A <see cref="T:System.IO.RenamedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-419">A <see cref="T:System.IO.RenamedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4bab-420">Raises the <see cref="E:System.IO.FileSystemWatcher.Renamed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-420">Raises the <see cref="E:System.IO.FileSystemWatcher.Renamed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-421"><xref:System.IO.FileSystemWatcher.OnRenamed%2A> est appelée lorsqu’un fichier ou répertoire dans le répertoire surveillé est renommé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-421"><xref:System.IO.FileSystemWatcher.OnRenamed%2A> is called when a file or directory within the directory being monitored is renamed.</span></span> <span data-ttu-id="d4bab-422">Son <xref:System.IO.RenamedEventArgs> argument contient des informations sur l’opération de changement de nom, tels que le type de modification, le chemin d’accès nouvel et ancienne et les anciens et nouveaux noms.</span><span class="sxs-lookup"><span data-stu-id="d4bab-422">Its <xref:System.IO.RenamedEventArgs> argument contains information about the renaming operation, such as the type of change, the old and new path, and the old and new name.</span></span> <span data-ttu-id="d4bab-423">Notez que son <xref:System.IO.FileSystemEventArgs.Name> propriété peut être null pour les événements renommés du si le <xref:System.IO.FileSystemWatcher> ne correspondent pas les événements anciens et nouveaux noms à partir du système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="d4bab-423">Note that its <xref:System.IO.FileSystemEventArgs.Name> property may be null for renamed events if the <xref:System.IO.FileSystemWatcher> does not get matching old and new name events from the operating system.</span></span> 
  
 <span data-ttu-id="d4bab-424">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d4bab-424">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d4bab-425">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d4bab-425">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d4bab-426">
            <para>Lors de la substitution <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> (méthode).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-426">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Renamed" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IO.FileSystemWatcher.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.FSWPathEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("The directory to monitor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-427">Gets or sets the path of the directory to watch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-427">Gets or sets the path of the directory to watch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4bab-428">Chemin d'accès à surveiller.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-428">The path to monitor.</span>
          </span>
          <span data-ttu-id="d4bab-429">La valeur par défaut est une chaîne vide ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-429">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-430">Il s’agit d’un chemin d’accès qualifié complet à un répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-430">This is a fully qualified path to a directory.</span></span> <span data-ttu-id="d4bab-431">Si le <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> propriété est `true`, ce répertoire est la racine à laquelle le système surveille les modifications ; sinon, il est le seul répertoire observé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-431">If the <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> property is `true`, this directory is the root at which the system watches for changes; otherwise it is the only directory watched.</span></span> <span data-ttu-id="d4bab-432">Pour visionner un fichier spécifique, définissez la <xref:System.IO.FileSystemWatcher.Path%2A> propriété dans le répertoire complet, correct et le <xref:System.IO.FileSystemWatcher.Filter%2A> propriété le nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="d4bab-432">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Path%2A> property to the fully qualified, correct directory, and the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span>  
  
 <span data-ttu-id="d4bab-433">Le <xref:System.IO.FileSystemWatcher.Path%2A> propriété prend en charge les chemins d’accès UNC Universal Naming Convention ().</span><span class="sxs-lookup"><span data-stu-id="d4bab-433">The <xref:System.IO.FileSystemWatcher.Path%2A> property supports Universal Naming Convention (UNC) paths.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-434">Cette propriété doit être définie avant que le composant peut surveiller les modifications.</span><span class="sxs-lookup"><span data-stu-id="d4bab-434">This property must be set before the component can watch for changes.</span></span>  
  
 <span data-ttu-id="d4bab-435">Lorsqu’un répertoire est renommé, le <xref:System.IO.FileSystemWatcher> rattache automatiquement à l’élément qui vient d’être renommé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-435">When a directory is renamed, the <xref:System.IO.FileSystemWatcher> automatically reattaches itself to the newly renamed item.</span></span> <span data-ttu-id="d4bab-436">Par exemple, si vous définissez le <xref:System.IO.FileSystemWatcher.Path%2A> propriété à « C:\My Documents » et puis renommez manuellement le répertoire « C:\Your Documents », le composant continue à écouter les notifications de modification sur le répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-436">For example, if you set the <xref:System.IO.FileSystemWatcher.Path%2A> property to "C:\My Documents" and then manually rename the directory to "C:\Your Documents", the component continues listening for change notifications on the newly renamed directory.</span></span> <span data-ttu-id="d4bab-437">Toutefois, lorsque vous demandez le <xref:System.IO.FileSystemWatcher.Path%2A> propriété, elle contient l’ancien chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="d4bab-437">However, when you ask for the <xref:System.IO.FileSystemWatcher.Path%2A> property, it contains the old path.</span></span> <span data-ttu-id="d4bab-438">Cela se produit car le composant détermine le répertoire à surveiller basé sur le handle, plutôt que le nom du répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-438">This happens because the component determines what directory watches based on the handle, rather than the name of the directory.</span></span> <span data-ttu-id="d4bab-439">Changement de nom n’affecte pas le handle.</span><span class="sxs-lookup"><span data-stu-id="d4bab-439">Renaming does not affect the handle.</span></span> <span data-ttu-id="d4bab-440">Par conséquent, si vous détruisez le composant, puis la recréer sans mettre à jour le <xref:System.IO.FileSystemWatcher.Path%2A> propriété, votre application échoue, car le répertoire n’existe plus.</span><span class="sxs-lookup"><span data-stu-id="d4bab-440">So, if you destroy the component, and then recreate it without updating the <xref:System.IO.FileSystemWatcher.Path%2A> property, your application will fail because the directory no longer exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4bab-441">L’exemple suivant crée un <xref:System.IO.FileSystemWatcher> à surveiller le répertoire spécifié au moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="d4bab-441">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="d4bab-442">Le composant est défini pour surveiller les modifications de `LastWrite` et `LastAccess` du temps, la création, suppression, ou le changement de nom des fichiers texte dans le répertoire.</span><span class="sxs-lookup"><span data-stu-id="d4bab-442">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="d4bab-443">Si un fichier est modifié, créé ou supprimé, le chemin d’accès au fichier s’imprime sur la console.</span><span class="sxs-lookup"><span data-stu-id="d4bab-443">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="d4bab-444">Lorsqu’un fichier est renommé, les chemins d’accès nouvelles et anciennes impriment sur la console.</span><span class="sxs-lookup"><span data-stu-id="d4bab-444">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="d4bab-445">Utilisez le <xref:System.Diagnostics> et <xref:System.IO> espaces de noms pour cet exemple.</span><span class="sxs-lookup"><span data-stu-id="d4bab-445">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d4bab-446">The specified path does not exist or could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-446">The specified path does not exist or could not be found.</span>
          </span>
          <span data-ttu-id="d4bab-447">-or-  The specified path contains wildcard characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-447">-or-  The specified path contains wildcard characters.</span>
          </span>
          <span data-ttu-id="d4bab-448">-or-  The specified path contains invalid path characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-448">-or-  The specified path contains invalid path characters.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
      </Docs>
    </Member>
    <Member MemberName="Renamed">
      <MemberSignature Language="C#" Value="public event System.IO.RenamedEventHandler Renamed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.RenamedEventHandler Renamed" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Renamed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Renamed As RenamedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::RenamedEventHandler ^ Renamed;" />
      <MemberSignature Language="F#" Value="member this.Renamed : System.IO.RenamedEventHandler " Usage="member this.Renamed : System.IO.RenamedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory rename matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.RenamedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-449">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is renamed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-449">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is renamed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-450">Le `Renamed` événement est un <xref:System.IO.RenamedEventHandler> délégué ayant la signature suivante :</span><span class="sxs-lookup"><span data-stu-id="d4bab-450">The `Renamed` event is an <xref:System.IO.RenamedEventHandler> delegate that has the following signature:</span></span>

 ```csharp
public delegate void Renamed(object sender, RenamedEventArgs e);
 ```
 ```vb
Public Delegate Sub RenamedEventHandler(sender As Object, e As RenamedEventArgs)
 ```
 <span data-ttu-id="d4bab-451">Le <xref:System.IO.RenamedEventArgs> objet fournit des informations sur l’opération de changement de nom, tels que le type de la modification du nom (le <xref:System.IO.FileSystemEventArgs.ChangeType> propriété), les anciens et nouveaux noms et le chemin d’accès ancienne et nouvel.</span><span class="sxs-lookup"><span data-stu-id="d4bab-451">The <xref:System.IO.RenamedEventArgs> object provides information about the renaming operation, such as the type of the rename (the <xref:System.IO.FileSystemEventArgs.ChangeType> property), the old and new name, and the old and new path.</span></span> <span data-ttu-id="d4bab-452">Notez que le <xref:System.IO.FileSystemEventArgs.Name> propriété peut être null pour les événements renommés du si le <xref:System.IO.FileSystemWatcher> ne correspondent pas les événements anciens et nouveaux noms à partir du système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="d4bab-452">Note that the <xref:System.IO.FileSystemEventArgs.Name> property may be null for renamed events if the <xref:System.IO.FileSystemWatcher> does not get matching old and new name events from the operating system.</span></span>

 <span data-ttu-id="d4bab-453">Renommer le répertoire surveillé ne déclenche pas une notification.</span><span class="sxs-lookup"><span data-stu-id="d4bab-453">Renaming the directory you are watching will not raise a notification.</span></span> <span data-ttu-id="d4bab-454">Notifications sont déclenchées uniquement pour les entrées dans le répertoire que vous surveillez.</span><span class="sxs-lookup"><span data-stu-id="d4bab-454">Notifications are only raised for entries inside the directory you are watching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4bab-455">L’exemple suivant utilise le <xref:System.IO.FileSystemWatcher.Renamed> événement pour afficher le chemin d’accès à la console chaque fois que le fichier à suivre est renommé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-455">The following example uses the <xref:System.IO.FileSystemWatcher.Renamed> event to display the file path to the console whenever the watched file is renamed.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.IO.FileSystemWatcher.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-456">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-456">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4bab-457">
            <see cref="T:System.ComponentModel.ISite" /> pour <see cref="T:System.IO.FileSystemWatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-457">An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-458">Sites lient un <xref:System.ComponentModel.Component> à un <xref:System.ComponentModel.Design.IDesignerHost.Container%2A> et activer la communication entre eux, ainsi que fournir un moyen pour le conteneur gérer ses composants.</span><span class="sxs-lookup"><span data-stu-id="d4bab-458">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Design.IDesignerHost.Container%2A> and enable communication between them, as well as provide a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.IO.FileSystemWatcher.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("The object used to marshal the event handler calls resulting from a directory change")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-459">Gets or sets the object used to marshal the event handler calls issued as a result of a directory change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-459">Gets or sets the object used to marshal the event handler calls issued as a result of a directory change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4bab-460">Élément <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> qui représente l'objet utilisé pour marshaler les appels du gestionnaire d'événements consécutifs à un changement de répertoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-460">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> that represents the object used to marshal the event handler calls issued as a result of a directory change.</span>
          </span>
          <span data-ttu-id="d4bab-461">La valeur par défaut est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-461">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-462">Lorsque <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> est `null`, méthodes gérant le <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, et <xref:System.IO.FileSystemWatcher.Renamed> événements sont appelés sur un thread du pool de threads système.</span><span class="sxs-lookup"><span data-stu-id="d4bab-462">When <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> is `null`, methods handling the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events are called on a thread from the system thread pool.</span></span> <span data-ttu-id="d4bab-463">Pour plus d’informations sur les pools de threads système, consultez <xref:System.Threading.ThreadPool>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-463">For more information on system thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="d4bab-464">Lorsque le <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, et <xref:System.IO.FileSystemWatcher.Renamed> événements sont gérés par un composant Windows Forms visuel, comme un <xref:System.Windows.Forms.Button>, l’accès au composant via le pool de threads système peut ne pas fonctionner ou peut entraîner une exception.</span><span class="sxs-lookup"><span data-stu-id="d4bab-464">When the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events are handled by a visual Windows Forms component, such as a <xref:System.Windows.Forms.Button>, accessing the component through the system thread pool might not work, or may result in an exception.</span></span> <span data-ttu-id="d4bab-465">Éviter ce problème en définissant <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> à un composant Windows Forms, ce qui provoque les méthodes qui gèrent le <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, et <xref:System.IO.FileSystemWatcher.Renamed> événements à appeler sur le même thread que celui sur lequel le composant a été créé.</span><span class="sxs-lookup"><span data-stu-id="d4bab-465">Avoid this by setting <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> to a Windows Forms component, which causes the methods that handle the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events to be called on the same thread on which the component was created.</span></span>  
  
 <span data-ttu-id="d4bab-466">Si le <xref:System.IO.FileSystemWatcher> est utilisé à l’intérieur de [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] dans un concepteur Windows Forms, <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> définit automatiquement le contrôle qui contient le <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="d4bab-466">If the <xref:System.IO.FileSystemWatcher> is used inside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] in a Windows Forms designer, <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> automatically sets to the control that contains the <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="d4bab-467">Par exemple, si vous placez un <xref:System.IO.FileSystemWatcher> sur un concepteur pour Form1 (qui hérite <xref:System.Windows.Forms.Form>) le <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> propriété du <xref:System.IO.FileSystemWatcher> est définie sur l’instance de Form1.</span><span class="sxs-lookup"><span data-stu-id="d4bab-467">For example, if you place a <xref:System.IO.FileSystemWatcher> on a designer for Form1 (which inherits from <xref:System.Windows.Forms.Form>) the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property of <xref:System.IO.FileSystemWatcher> is set to the instance of Form1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISynchronizeInvoke" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForChanged">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4bab-468">A synchronous method that returns a structure that contains specific information on the change that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-468">A synchronous method that returns a structure that contains specific information on the change that occurred.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForChanged">
      <MemberSignature Language="C#" Value="public System.IO.WaitForChangedResult WaitForChanged (System.IO.WatcherChangeTypes changeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.WaitForChangedResult WaitForChanged(valuetype System.IO.WatcherChangeTypes changeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChanged (changeType As WatcherChangeTypes) As WaitForChangedResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::WaitForChangedResult WaitForChanged(System::IO::WatcherChangeTypes changeType);" />
      <MemberSignature Language="F#" Value="member this.WaitForChanged : System.IO.WatcherChangeTypes -&gt; System.IO.WaitForChangedResult" Usage="fileSystemWatcher.WaitForChanged changeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.WaitForChangedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" />
      </Parameters>
      <Docs>
        <param name="changeType">
          <span data-ttu-id="d4bab-469">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-469">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4bab-470">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-470">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4bab-471">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-471">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-472">Cette méthode attend indéfiniment jusqu'à ce que la première modification se produit, puis retourne.</span><span class="sxs-lookup"><span data-stu-id="d4bab-472">This method waits indefinitely until the first change occurs and then returns.</span></span> <span data-ttu-id="d4bab-473">Il est identique à l’aide de <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> avec la `timeout` paramètre la valeur -1.</span><span class="sxs-lookup"><span data-stu-id="d4bab-473">This is the same as using <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> with the `timeout` parameter set to -1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-474">Cette méthode permet à un gestionnaire d’événements à appeler pour répondre au fichier modifications même si le <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> propriété est définie sur `false`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-474">This method allows an event handler to be invoked to respond to file changes even if the <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="d4bab-475">Dans certains systèmes, <xref:System.IO.FileSystemWatcher> signale les modifications apportées aux fichiers à l’aide du format de nom de 8.3 fichier court.</span><span class="sxs-lookup"><span data-stu-id="d4bab-475">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="d4bab-476">Par exemple, une modification apportée à « LongFileName.LongExtension » peut être signalée comme « LongFi ~. LON ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-476">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.WaitForChangedResult" />
      </Docs>
    </Member>
    <Member MemberName="WaitForChanged">
      <MemberSignature Language="C#" Value="public System.IO.WaitForChangedResult WaitForChanged (System.IO.WatcherChangeTypes changeType, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.WaitForChangedResult WaitForChanged(valuetype System.IO.WatcherChangeTypes changeType, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChanged (changeType As WatcherChangeTypes, timeout As Integer) As WaitForChangedResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::WaitForChangedResult WaitForChanged(System::IO::WatcherChangeTypes changeType, int timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitForChanged : System.IO.WatcherChangeTypes * int -&gt; System.IO.WaitForChangedResult" Usage="fileSystemWatcher.WaitForChanged (changeType, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.WaitForChangedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="changeType">
          <span data-ttu-id="d4bab-477">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-477">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d4bab-478">The time (in milliseconds) to wait before timing out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-478">The time (in milliseconds) to wait before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4bab-479">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-479">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4bab-480">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4bab-480">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4bab-481">Cette méthode attend jusqu'à ce qu’une modification se produit, ou il a expiré. La valeur -1 pour le `timeout` paramètre signifie que l’attente indéfiniment.</span><span class="sxs-lookup"><span data-stu-id="d4bab-481">This method waits until a change occurs or it has timed out. A value of -1 for the `timeout` parameter means wait indefinitely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4bab-482">Cette méthode permet à un gestionnaire d’événements à appeler pour répondre au fichier modifications même si le <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> propriété est définie sur `false`.</span><span class="sxs-lookup"><span data-stu-id="d4bab-482">This method allows an event handler to be invoked to respond to file changes even if the <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="d4bab-483">Dans certains systèmes, <xref:System.IO.FileSystemWatcher> signale les modifications apportées aux fichiers à l’aide du format de nom de 8.3 fichier court.</span><span class="sxs-lookup"><span data-stu-id="d4bab-483">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="d4bab-484">Par exemple, une modification apportée à « LongFileName.LongExtension » peut être signalée comme « LongFi ~. LON ».</span><span class="sxs-lookup"><span data-stu-id="d4bab-484">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.WaitForChangedResult" />
      </Docs>
    </Member>
  </Members>
</Type>