<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StreamWriter.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56f31bd789fd27cfb5dec1f299d1b5fc770e9fc32.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f31bd789fd27cfb5dec1f299d1b5fc770e9fc32</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.StreamWriter">
          <source>Implements a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> for writing characters to a stream in a particular encoding.</source>
          <target state="translated">Implémente <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> pour écrire les caractères dans un flux selon un encodage particulier.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> is designed for character output in a particular encoding, whereas classes derived from <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> are designed for byte input and output.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> est conçu pour la sortie de caractères dans un encodage particulier, tandis que les classes dérivées de <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> sont conçues pour les octets d’entrée et sortie.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Ce type implémente le <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Lorsque vous avez fini d’utiliser le type, vous devez la supprimer directement ou indirectement.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Pour supprimer le type directement, vous devez appeler sa <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> méthode dans un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloc.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Pour la supprimer indirectement, utiliser une construction de langage telles que <ph id="ph1">`using`</ph> (en c#) ou <ph id="ph2">`Using`</ph> (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> rubrique de l’interface.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> defaults to using an instance of <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> unless specified otherwise.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> par défaut, à l’aide d’une instance de <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> , sauf indication contraire.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>This instance of <ph id="ph1">`UTF8Encoding`</ph> is constructed without a byte order mark (BOM), so its <ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method returns an empty byte array.</source>
          <target state="translated">Cette instance de <ph id="ph1">`UTF8Encoding`</ph> est construite sans marque d’ordre d’octet (BOM), par conséquent, ses <ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> méthode retourne un tableau d’octets vide.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</source>
          <target state="translated">L’encodage UTF-8 par défaut pour ce constructeur pour lève une exception sur les octets non valides.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>This behavior is different from the behavior provided by the encoding object in the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Ce comportement est différent du comportement fourni par l’objet d’encodage dans la <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.StreamWriter.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">Pour spécifier une nomenclature et déterminer si une exception est levée sur les octets non valides, utilisez un constructeur qui accepte un objet d’encodage en tant que paramètre, tel que <ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph> ou <ph id="ph2">&lt;xref:System.IO.StreamWriter.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> is not thread safe.</source>
          <target state="translated">Par défaut, un <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> n’est pas thread-safe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>See <ph id="ph1">&lt;xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType&gt;</ph> for a thread-safe wrapper.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType&gt;</ph> pour un wrapper thread-safe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> object to write a file that lists the directories on the C drive, and then uses a <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> object to read and display each directory name.</source>
          <target state="translated">L’exemple suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> objet à écrire un fichier qui répertorie les répertoires sur le lecteur C, puis utilise une <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> objet pour lire et afficher chaque nom de répertoire.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>A good practice is to use these objects in a <ph id="ph1">`using`</ph> statement so that the unmanaged resources are correctly disposed.</source>
          <target state="translated">La meilleure pratique consiste à utiliser ces objets dans une <ph id="ph1">`using`</ph> instruction afin que les ressources non managées sont correctement supprimées.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>The <ph id="ph1">`using`</ph> statement automatically calls <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> on the object when the code that is using it has completed.</source>
          <target state="translated">Le <ph id="ph1">`using`</ph> instruction appelle automatiquement <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> sur l’objet lorsque le code qui l’utilise est terminé.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>The constructor used in this example is not supported for use in <ph id="ph1">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> Apps.</source>
          <target state="translated">Le constructeur utilisé dans cet exemple n’est pas prise en charge pour une utilisation dans <ph id="ph1">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> applications.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.IO.StreamWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>The stream to write to.</source>
          <target state="translated">Le flux dans lequel écrire.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified stream by using UTF-8 encoding and the default buffer size.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> pour le flux spécifié, à l’aide de l’encodage UTF-8 et de la taille de la mémoire tampon par défaut.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method returns an empty byte array.</source>
          <target state="translated">Ce constructeur crée un <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> avec UTF-8, codage sans une marque d’ordre d’octets (BOM), par conséquent, ses <ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> méthode retourne un tableau d’octets vide.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</source>
          <target state="translated">L’encodage UTF-8 par défaut pour ce constructeur pour lève une exception sur les octets non valides.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>This behavior is different from the behavior provided by the encoding object in the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Ce comportement est différent du comportement fourni par l’objet d’encodage dans la <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">Pour spécifier si une exception est levée sur les octets non valides, utilisez un constructeur qui accepte un objet d’encodage en tant que paramètre, tel que <ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> property is initialized using the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> propriété est initialisée à l’aide de le <ph id="ph2">`stream`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>The position of the stream is not reset.</source>
          <target state="translated">La position du flux de données n’est pas réinitialisée.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> object calls <ph id="ph2">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id="ph4">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> les appels de l’objet <ph id="ph2">&lt;xref:System.IO.Stream.Dispose&gt;</ph> sur fourni <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> objet lorsque <ph id="ph4">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>The following code example demonstrates this constructor.</source>
          <target state="translated">L’exemple de code suivant illustre ce constructeur.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> n’est pas accessible en écriture.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The complete file path to write to.</source>
          <target state="translated">Chemin d’accès complet du fichier dans lequel écrire.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source><bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> can be a file name.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> peut être un nom de fichier.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified file by using the default encoding and buffer size.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> pour le fichier spécifié, à l’aide de l’encodage et de la taille de la mémoire tampon par défaut.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method returns an empty byte array.</source>
          <target state="translated">Ce constructeur crée un <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> avec UTF-8, codage sans une marque d’ordre d’octets (BOM), par conséquent, ses <ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> méthode retourne un tableau d’octets vide.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</source>
          <target state="translated">L’encodage UTF-8 par défaut pour ce constructeur pour lève une exception sur les octets non valides.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>This behavior is different from the behavior provided by the encoding object in the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Ce comportement est différent du comportement fourni par l’objet d’encodage dans la <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph>.</source>
          <target state="translated">Pour spécifier une nomenclature et déterminer si une exception est levée sur les octets non valides, utilisez un constructeur qui accepte un objet d’encodage en tant que paramètre, tel que <ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated">Le <ph id="ph1">`path`</ph> paramètre peut être un nom de fichier, y compris un fichier sur un partage UNC Universal Naming Convention ().</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>If the file exists, it is overwritten; otherwise, a new file is created.</source>
          <target state="translated">Si le fichier existe, il est remplacé ; Sinon, un nouveau fichier est créé.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</source>
          <target state="translated">Le <ph id="ph1">`path`</ph> paramètre n’est pas nécessairement être un fichier stocké sur le disque ; il peut être n’importe quelle partie d’un système qui prend en charge les accès à l’aide de flux de données.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The following code example demonstrates this constructor.</source>
          <target state="translated">L’exemple de code suivant illustre ce constructeur.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>Access is denied.</source>
          <target state="translated">Accès refusé.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string ("").</source>
          <target state="translated">Le <ph id="ph1">&lt;paramref name="path" /&gt;</ph> est une chaîne vide ("").</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains the name of a system device (com1, com2, and so on).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contient le nom d’un périphérique système (com1, com2, etc.).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">Le chemin spécifié n’est pas valide (par exemple, il est sur un lecteur non mappé).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</source>
          <target state="translated">Par exemple, sur les plateformes Windows, les chemins ne doivent pas dépasser 248 caractères et les noms de fichiers ne doivent pas dépasser 260 caractères.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> comprend une syntaxe incorrecte ou non valide pour les noms de fichiers, les noms de répertoires ou les noms de volumes.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">Pour lire et écrire des fichiers.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The stream to write to.</source>
          <target state="translated">Le flux dans lequel écrire.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The character encoding to use.</source>
          <target state="translated">Encodage des caractères à utiliser.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified stream by using the specified encoding and the default buffer size.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> pour le flux spécifié, à l’aide de l’encodage spécifié et de la taille de mémoire tampon par défaut.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property using the encoding parameter, and the <ph id="ph2">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> property using the stream parameter.</source>
          <target state="translated">Ce constructeur initialise la <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> propriété à l’aide du paramètre d’encodage et le <ph id="ph2">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> propriété à l’aide du paramètre de flux.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The position of the stream is not reset.</source>
          <target state="translated">La position du flux de données n’est pas réinitialisée.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> object calls <ph id="ph2">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id="ph4">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> les appels de l’objet <ph id="ph2">&lt;xref:System.IO.Stream.Dispose&gt;</ph> sur fourni <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> objet lorsque <ph id="ph4">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The following example demonstrates this constructor.</source>
          <target state="translated">L’exemple suivant illustre ce constructeur.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> n’est pas accessible en écriture.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The complete file path to write to.</source>
          <target state="translated">Chemin d’accès complet du fichier dans lequel écrire.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to append data to the file; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to overwrite the file.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour ajouter des données au fichier ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour remplacer le contenu du fichier.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</source>
          <target state="translated">Si le fichier spécifié n'existe pas, ce paramètre n'a pas d'effet et le constructeur crée un fichier.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified file by using the default encoding and buffer size.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> pour le fichier spécifié, à l’aide de l’encodage et de la taille de la mémoire tampon par défaut.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>If the file exists, it can be either overwritten or appended to.</source>
          <target state="translated">Si le fichier existe, il peut être remplacé ou recevoir des ajouts.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>If the file does not exist, this constructor creates a new file.</source>
          <target state="translated">Si le fichier n'existe pas, ce constructeur crée un fichier.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method returns an empty byte array.</source>
          <target state="translated">Ce constructeur crée un <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> avec UTF-8, codage sans une marque d’ordre d’octets (BOM), par conséquent, ses <ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> méthode retourne un tableau d’octets vide.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</source>
          <target state="translated">L’encodage UTF-8 par défaut pour ce constructeur pour lève une exception sur les octets non valides.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>This behavior is different from the behavior provided by the encoding object in the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Ce comportement est différent du comportement fourni par l’objet d’encodage dans la <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph>.</source>
          <target state="translated">Pour spécifier une nomenclature et déterminer si une exception est levée sur les octets non valides, utilisez un constructeur qui accepte un objet d’encodage en tant que paramètre, tel que <ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated">Le <ph id="ph1">`path`</ph> paramètre peut être un nom de fichier, y compris un fichier sur un partage UNC Universal Naming Convention ().</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The <ph id="ph1">`path`</ph> parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</source>
          <target state="translated">Le <ph id="ph1">`path`</ph> paramètre n’est pas nécessairement être un fichier stocké sur le disque ; il peut être n’importe quelle partie d’un système qui prend en charge les accès à l’aide de flux de données.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The following code example demonstrates this constructor.</source>
          <target state="translated">L’exemple de code suivant illustre ce constructeur.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>Access is denied.</source>
          <target state="translated">Accès refusé.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> est vide.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains the name of a system device (com1, com2, and so on).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contient le nom d’un périphérique système (com1, com2, etc.).</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">Le chemin spécifié n’est pas valide (par exemple, il est sur un lecteur non mappé).</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> comprend une syntaxe incorrecte ou non valide pour les noms de fichiers, les noms de répertoires ou les noms de volumes.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</source>
          <target state="translated">Par exemple, sur les plateformes Windows, les chemins ne doivent pas dépasser 248 caractères et les noms de fichiers ne doivent pas dépasser 260 caractères.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>for reading and writing files.</source>
          <target state="translated">Pour lire et écrire des fichiers.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>The stream to write to.</source>
          <target state="translated">Le flux dans lequel écrire.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>The character encoding to use.</source>
          <target state="translated">Encodage des caractères à utiliser.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>The buffer size, in bytes.</source>
          <target state="translated">Taille de la mémoire tampon en octets.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified stream by using the specified encoding and buffer size.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> pour le flux spécifié, à l’aide de l’encodage et de la taille de mémoire tampon spécifiés.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property using the <ph id="ph2">`encoding`</ph> parameter, and the <ph id="ph3">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> property using the <ph id="ph4">`stream`</ph> parameter.</source>
          <target state="translated">Ce constructeur initialise la <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> à l’aide de la propriété le <ph id="ph2">`encoding`</ph> paramètre et le <ph id="ph3">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> à l’aide de la propriété du <ph id="ph4">`stream`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>The position of the stream is not reset.</source>
          <target state="translated">La position du flux de données n’est pas réinitialisée.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> object calls <ph id="ph2">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id="ph4">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> les appels de l’objet <ph id="ph2">&lt;xref:System.IO.Stream.Dispose&gt;</ph> sur fourni <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> objet lorsque <ph id="ph4">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>The following example demonstrates this constructor.</source>
          <target state="translated">L’exemple suivant illustre ce constructeur.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> est un nombre négatif.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> n’est pas accessible en écriture.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>The complete file path to write to.</source>
          <target state="translated">Chemin d’accès complet du fichier dans lequel écrire.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to append data to the file; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to overwrite the file.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour ajouter des données au fichier ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour remplacer le contenu du fichier.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</source>
          <target state="translated">Si le fichier spécifié n'existe pas, ce paramètre n'a pas d'effet et le constructeur crée un fichier.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>The character encoding to use.</source>
          <target state="translated">Encodage des caractères à utiliser.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified file by using the specified encoding and default buffer size.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> pour le fichier spécifié, à l’aide de l’encodage spécifié et de la taille de la mémoire tampon par défaut.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>If the file exists, it can be either overwritten or appended to.</source>
          <target state="translated">Si le fichier existe, il peut être remplacé ou recevoir des ajouts.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>If the file does not exist, this constructor creates a new file.</source>
          <target state="translated">Si le fichier n'existe pas, ce constructeur crée un fichier.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property using the encoding parameter.</source>
          <target state="translated">Ce constructeur initialise le <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> propriété à l’aide du paramètre de codage.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">`path`</ph> can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated"><ph id="ph1">`path`</ph> peut être un nom de fichier, y compris un fichier sur un partage UNC Universal Naming Convention ().</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph> n’est pas nécessairement être un fichier stocké sur le disque ; Il peut être n’importe quelle partie d’un système qui prend en charge l’accès via le flux de données.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>The following example demonstrates this constructor.</source>
          <target state="translated">L’exemple suivant illustre ce constructeur.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>Access is denied.</source>
          <target state="translated">Accès refusé.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> est vide.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains the name of a system device (com1, com2, and so on).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contient le nom d’un périphérique système (com1, com2, etc.).</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">Le chemin spécifié n’est pas valide (par exemple, il est sur un lecteur non mappé).</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> comprend une syntaxe incorrecte ou non valide pour les noms de fichiers, les noms de répertoires ou les noms de volumes.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</source>
          <target state="translated">Par exemple, sur les plateformes Windows, les chemins ne doivent pas dépasser 248 caractères et les noms de fichiers ne doivent pas dépasser 260 caractères.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>for reading and writing files.</source>
          <target state="translated">Pour lire et écrire des fichiers.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>The stream to write to.</source>
          <target state="translated">Le flux dans lequel écrire.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>The character encoding to use.</source>
          <target state="translated">Encodage des caractères à utiliser.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>The buffer size, in bytes.</source>
          <target state="translated">Taille de la mémoire tampon en octets.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to leave the stream open after the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> object is disposed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour maintenir le flux ouvert après avoir supprimé l'objet <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> pour le flux spécifié, à l’aide de l’encodage et de la taille de mémoire tampon spécifiés, et permet éventuellement de laisser le flux ouvert.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>Unless you set the <ph id="ph1">`leaveOpen`</ph> parameter to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph> object calls <ph id="ph4">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id="ph5">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id="ph6">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">Sauf si vous définissez la <ph id="ph1">`leaveOpen`</ph> paramètre <ph id="ph2">`true`</ph>, le <ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph> les appels de l’objet <ph id="ph4">&lt;xref:System.IO.Stream.Dispose&gt;</ph> sur le <ph id="ph5">&lt;xref:System.IO.Stream&gt;</ph> objet lorsque <ph id="ph6">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property by using the <ph id="ph2">`encoding`</ph> parameter, and initializes the <ph id="ph3">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> property by using the <ph id="ph4">`stream`</ph> parameter.</source>
          <target state="translated">Ce constructeur initialise la <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> propriété à l’aide de la <ph id="ph2">`encoding`</ph> paramètre et initialise le <ph id="ph3">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> propriété à l’aide de le <ph id="ph4">`stream`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>The position of the stream is not reset.</source>
          <target state="translated">La position du flux de données n’est pas réinitialisée.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>For additional information, see the <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph> property.</source>
          <target state="translated">Pour plus d’informations, consultez le <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>The following example demonstrates this constructor.</source>
          <target state="translated">L’exemple suivant illustre ce constructeur.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> est un nombre négatif.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> n’est pas accessible en écriture.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The complete file path to write to.</source>
          <target state="translated">Chemin d’accès complet du fichier dans lequel écrire.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to append data to the file; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to overwrite the file.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour ajouter des données au fichier ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour remplacer le contenu du fichier.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</source>
          <target state="translated">Si le fichier spécifié n'existe pas, ce paramètre n'a pas d'effet et le constructeur crée un fichier.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The character encoding to use.</source>
          <target state="translated">Encodage des caractères à utiliser.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The buffer size, in bytes.</source>
          <target state="translated">Taille de la mémoire tampon en octets.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified file on the specified path, using the specified encoding and buffer size.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> pour le fichier spécifié sur le chemin spécifié, à l’aide de l’encodage et de la taille de mémoire tampon spécifiés.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>If the file exists, it can be either overwritten or appended to.</source>
          <target state="translated">Si le fichier existe, il peut être remplacé ou recevoir des ajouts.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>If the file does not exist, this constructor creates a new file.</source>
          <target state="translated">Si le fichier n'existe pas, ce constructeur crée un fichier.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property using the encoding parameter.</source>
          <target state="translated">Ce constructeur initialise le <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> propriété à l’aide du paramètre de codage.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">`path`</ph> can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated"><ph id="ph1">`path`</ph> peut être un nom de fichier, y compris un fichier sur un partage UNC Universal Naming Convention ().</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph> n’est pas nécessairement être un fichier stocké sur le disque ; Il peut être n’importe quelle partie d’un système qui prend en charge l’accès via le flux de données.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The following example demonstrates this constructor.</source>
          <target state="translated">L’exemple suivant illustre ce constructeur.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string ("").</source>
          <target state="translated">Le <ph id="ph1">&lt;paramref name="path" /&gt;</ph> est une chaîne vide ("").</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains the name of a system device (com1, com2, and so on).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contient le nom d’un périphérique système (com1, com2, etc.).</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> or <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> est un nombre négatif.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> comprend une syntaxe incorrecte ou non valide pour les noms de fichiers, les noms de répertoires ou les noms de volumes.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>Access is denied.</source>
          <target state="translated">Accès refusé.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">Le chemin spécifié n’est pas valide (par exemple, il est sur un lecteur non mappé).</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</source>
          <target state="translated">Par exemple, sur les plateformes Windows, les chemins ne doivent pas dépasser 248 caractères et les noms de fichiers ne doivent pas dépasser 260 caractères.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>for reading and writing files.</source>
          <target state="translated">Pour lire et écrire des fichiers.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> will flush its buffer to the underlying stream after every call to <ph id="ph2">&lt;see cref="M:System.IO.StreamWriter.Write(System.Char)" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> vide sa mémoire tampon vers le flux sous-jacent après chaque appel à <ph id="ph2">&lt;see cref="M:System.IO.StreamWriter.Write(System.Char)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to force <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> to flush its buffer; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour forcer <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> à vider sa mémoire tampon ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">Vider le flux n’effacera pas son encodeur sous-jacent sauf si vous appelez explicitement <ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</source>
          <target state="translated">Paramètre <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> à <ph id="ph2">`true`</ph> signifie que les données sont supprimées de la mémoire tampon dans le flux après chaque opération d’écriture, mais l’état de l’encodeur n’est pas vidé.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Cela permet à l’encodeur de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Ce scénario affecte UTF8 et UTF7 où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>When <ph id="ph1">`AutoFlush`</ph> is set to <ph id="ph2">`false`</ph>, <ph id="ph3">`StreamWriter`</ph> will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in.</source>
          <target state="translated">Lorsque <ph id="ph1">`AutoFlush`</ph> a la valeur <ph id="ph2">`false`</ph>, <ph id="ph3">`StreamWriter`</ph> effectuera une quantité limitée de mise en mémoire tampon, à la fois de façon interne et potentielle dans l’encodeur à partir de l’encodage que vous avez passé.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>You can get better performance by setting <ph id="ph1">`AutoFlush`</ph> to <ph id="ph2">`false`</ph>, assuming that you always call <ph id="ph3">`Close`</ph> (or at least <ph id="ph4">`Flush`</ph>) when you're done writing with a <ph id="ph5">`StreamWriter`</ph>.</source>
          <target state="translated">Vous pouvez obtenir de meilleures performances en définissant <ph id="ph1">`AutoFlush`</ph> à <ph id="ph2">`false`</ph>, en supposant que vous appelez toujours <ph id="ph3">`Close`</ph> (ou au moins <ph id="ph4">`Flush`</ph>) lorsque vous avez terminé l’écriture avec un <ph id="ph5">`StreamWriter`</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>For example, set <ph id="ph1">`AutoFlush`</ph> to <ph id="ph2">`true`</ph> when you are writing to a device where the user expects immediate feedback.</source>
          <target state="translated">Par exemple, définissez <ph id="ph1">`AutoFlush`</ph> à <ph id="ph2">`true`</ph> lorsque vous écrivez sur un appareil où l’utilisateur attend des informations immédiates.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source><ph id="ph1">`Console.Out`</ph> is one of these cases: The <ph id="ph2">`StreamWriter`</ph> used internally for writing to <ph id="ph3">`Console`</ph> flushes all its internal state except the encoder state after every call to <ph id="ph4">&lt;xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Console.Out`</ph> est un de ces cas : le <ph id="ph2">`StreamWriter`</ph> utilisée en interne pour l’écriture dans <ph id="ph3">`Console`</ph> vide tout son état interne à l’exception de l’état de l’encodeur après chaque appel à <ph id="ph4">&lt;xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>The following example shows the syntax for using the <ph id="ph1">`AutoFlush`</ph> property.</source>
          <target state="translated">L’exemple suivant montre la syntaxe pour l’utilisation de la <ph id="ph1">`AutoFlush`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.IO.StreamWriter.BaseStream">
          <source>Gets the underlying stream that interfaces with a backing store.</source>
          <target state="translated">Obtient le flux sous-jacent qui sert d'interface avec un magasin de stockage.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.BaseStream">
          <source>The stream this <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph> is writing to.</source>
          <target state="translated">Flux dans lequel ce <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph> écrit.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.BaseStream">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Close">
          <source>Closes the current <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph> object and the underlying stream.</source>
          <target state="translated">Ferme l’objet <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph> actuel et le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode se substitue à <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>This implementation of <ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph> calls the <ph id="ph2">&lt;xref:System.IO.StreamWriter.Dispose%2A&gt;</ph> method passing a <ph id="ph3">`true`</ph> value.</source>
          <target state="translated">Cette implémentation de <ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph> appelle la <ph id="ph2">&lt;xref:System.IO.StreamWriter.Dispose%2A&gt;</ph> méthode en passant un <ph id="ph3">`true`</ph> valeur.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph> to ensure that all data is correctly written out to the underlying stream.</source>
          <target state="translated">Vous devez appeler <ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph> pour vous assurer que toutes les données sont correctement écrites dans le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>Following a call to <ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>, any operations on the <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> might raise exceptions.</source>
          <target state="translated">Après un appel à <ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>, toutes les opérations sur les <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> peuvent lever des exceptions.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>If there is insufficient space on the disk, calling <ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph> will raise an exception.</source>
          <target state="translated">Si l’espace est insuffisant sur le disque, l’appel <ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph> lève une exception.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">Vider le flux n’effacera pas son encodeur sous-jacent sauf si vous appelez explicitement <ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Paramètre <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> à <ph id="ph2">`true`</ph> signifie que les données sont supprimées de la mémoire tampon dans le flux, mais l’état de l’encodeur n’est pas vidé.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Cela permet à l’encodeur de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Ce scénario affecte UTF8 et UTF7 où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>The following code example demonstrates the <ph id="ph1">`Close`</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre la <ph id="ph1">`Close`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Close">
          <source>The current encoding does not support displaying half of a Unicode surrogate pair.</source>
          <target state="translated">L’encodage actuel ne prend pas en charge l’affichage de la moitié d’une paire de substitution Unicode.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph> references.</source>
          <target state="translated">Si le paramètre <ph id="ph1">`disposing`</ph> a la valeur <ph id="ph2">`true`</ph>, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Cette méthode appelle la méthode <ph id="ph1">`Dispose`</ph> de chaque objet référencé.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source>The current encoding does not support displaying half of a Unicode surrogate pair.</source>
          <target state="translated">L’encodage actuel ne prend pas en charge l’affichage de la moitié d’une paire de substitution Unicode.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> peut être appelée plusieurs fois par d'autres objets.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d’un appel antérieur à <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source>This method calls the dispose method of the base class, <ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /&gt;</ph>.</source>
          <target state="translated">Cette méthode appelle la méthode dispose de la classe de base <ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.IO.StreamWriter.Encoding">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> in which the output is written.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> dans lequel la sortie est écrite.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.Encoding">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> specified in the constructor for the current instance, or <ph id="ph2">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> if an encoding was not specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> spécifié dans le constructeur pour l'instance actuelle, ou <ph id="ph2">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> si aucun encodage n'est spécifié.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.Encoding">
          <source>This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>.</source>
          <target state="translated">Cette propriété est nécessaire dans certains scénarios XML où un en-tête doit être écrit, contenant l’encodage utilisé par le <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.Encoding">
          <source>This allows the XML code to consume an arbitrary <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> and generate the correct XML header.</source>
          <target state="translated">Cela permet au code XML de consommer un arbitraire <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> et générer l’en-tête XML correct.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.Encoding">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.Encoding">
          <source>The following example retrieves the encoding of the specified <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> instance.</source>
          <target state="translated">L’exemple suivant récupère l’encodage spécifié <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Flush">
          <source>Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.</source>
          <target state="translated">Efface toutes les mémoires tampons pour le writer actuel et provoque l'écriture des données mises en mémoire tampon dans le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Flush">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode se substitue à <ph id="ph1">&lt;xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Flush`</ph> or <ph id="ph2">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">Vider le flux n’effacera pas son encodeur sous-jacent sauf si vous appelez explicitement <ph id="ph1">`Flush`</ph> ou <ph id="ph2">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</source>
          <target state="translated">Paramètre <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> à <ph id="ph2">`true`</ph> signifie que les données sont supprimées de la mémoire tampon dans le flux après chaque opération d’écriture, mais l’état de l’encodeur n’est pas vidé.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Cela permet à l’encodeur de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Ce scénario affecte UTF8 et UTF7 où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Flush">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Flush">
          <source>The current writer is closed.</source>
          <target state="translated">Le writer actuel est fermé.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Flush">
          <source>An I/O error has occurred.</source>
          <target state="translated">Une erreur d’E/S s’est produite.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Flush">
          <source>The current encoding does not support displaying half of a Unicode surrogate pair.</source>
          <target state="translated">L’encodage actuel ne prend pas en charge l’affichage de la moitié d’une paire de substitution Unicode.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.FlushAsync">
          <source>Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">Efface toutes les mémoires tampons pour ce flux de manière asynchrone et provoque l'écriture des données mises en mémoire tampon sur l'appareil sous-jacent.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.FlushAsync">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">Tâche qui représente l’opération de vidage asynchrone.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.FlushAsync">
          <source>The stream has been disposed.</source>
          <target state="translated">Le flux a été supprimé.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="F:System.IO.StreamWriter.Null">
          <source>Provides a <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph> with no backing store that can be written to, but not read from.</source>
          <target state="translated">Fournit un élément <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph> sans magasin de stockage dans lequel il est possible d'écrire, mais pas de lire.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.StreamWriter.Null">
          <source>Use <ph id="ph1">`Null`</ph> to redirect output to a <ph id="ph2">`StreamWriter`</ph> that will not consume any operating system resources.</source>
          <target state="translated">Utilisez <ph id="ph1">`Null`</ph> pour rediriger la sortie vers un <ph id="ph2">`StreamWriter`</ph> qui ne consomme pas les ressources du système d’exploitation.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.StreamWriter.Null">
          <source>When the <ph id="ph1">`StreamWriter.Write`</ph> methods are invoked on <ph id="ph2">`Null`</ph>, the call simply returns, and no data is actually written to any backing store.</source>
          <target state="translated">Lorsque le <ph id="ph1">`StreamWriter.Write`</ph> méthodes sont appelées sur <ph id="ph2">`Null`</ph>, l’appel retourne simplement et aucune donnée n’est réellement écrits dans n’importe quel magasin de stockage.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.StreamWriter.Null">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.StreamWriter.Null">
          <source>The following example demonstrates a use of the <ph id="ph1">`Null`</ph> field.</source>
          <target state="translated">L’exemple suivant illustre une utilisation de la <ph id="ph1">`Null`</ph> champ.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="T:System.IO.StreamWriter">
          <source>Writes data to the stream.</source>
          <target state="translated">Écrit des données dans le flux.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>The character to write to the stream.</source>
          <target state="translated">Caractère à écrire dans le flux.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>Writes a character to the stream.</source>
          <target state="translated">Écrit un caractère dans le flux.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode se substitue à <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>The specified character is written to the underlying stream unless the end of the stream is reached prematurely.</source>
          <target state="translated">Le caractère spécifié est écrit dans le flux sous-jacent à moins que la fin du flux est atteinte prématurément.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>If <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> is invoked automatically.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> est <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> est appelée automatiquement.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and current writer is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> a la valeur true ou la mémoire tampon de <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> est saturée, et le writer actuel est fermé.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> is at the end the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> a la valeur true ou la mémoire tampon de <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> est saturée, et le contenu de la mémoire tampon ne peut pas être écrit dans le flux de taille fixe sous-jacent, car <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> se trouve à la fin du flux.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>A character array containing the data to write.</source>
          <target state="translated">Tableau de caractères contenant les données à écrire.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nothing is written.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> est <ph id="ph1">&lt;see langword="null" /&gt;</ph>, rien n’est écrit.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>Writes a character array to the stream.</source>
          <target state="translated">Écrit un tableau de caractères dans le flux.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode se substitue à <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>The specified characters are written to the underlying stream unless the end of the stream is reached prematurely.</source>
          <target state="translated">Les caractères spécifiés sont écrits dans le flux sous-jacent à moins que la fin du flux est atteinte prématurément.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>If <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> is invoked automatically.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> est <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> est appelée automatiquement.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>This method might provide faster performance than <ph id="ph1">`Write`</ph> (<ph id="ph2">`char[],``int,``int`</ph>) because it has fewer arguments to check.</source>
          <target state="translated">Cette méthode peut fournir des performances plus rapides que <ph id="ph1">`Write`</ph> (<ph id="ph2">`char[],``int,``int`</ph>), car il y a moins d’arguments à vérifier.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and current writer is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> a la valeur true ou la mémoire tampon de <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> est saturée, et le writer actuel est fermé.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> is at the end the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> a la valeur true ou la mémoire tampon de <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> est saturée, et le contenu de la mémoire tampon ne peut pas être écrit dans le flux de taille fixe sous-jacent, car <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> se trouve à la fin du flux.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>The string to write to the stream.</source>
          <target state="translated">Chaîne à écrire dans le flux.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is null, nothing is written.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> a la valeur null, rien n’est écrit.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>Writes a string to the stream.</source>
          <target state="translated">Écrit une chaîne dans le flux.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode se substitue à <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>The specified <ph id="ph1">&lt;xref:System.String&gt;</ph> is written to the underlying stream unless the end of the stream is reached prematurely.</source>
          <target state="translated">Spécifié <ph id="ph1">&lt;xref:System.String&gt;</ph> est écrit dans le flux sous-jacent à moins que la fin du flux est atteinte prématurément.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> is invoked automatically if <ph id="ph2">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> est appelé automatiquement si <ph id="ph2">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, no entries are written.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> est <ph id="ph2">`null`</ph>, aucune des entrées ne sont écrites.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and current writer is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> a la valeur true ou la mémoire tampon de <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> est saturée, et le writer actuel est fermé.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> is at the end the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> a la valeur true ou la mémoire tampon de <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> est saturée, et le contenu de la mémoire tampon ne peut pas être écrit dans le flux de taille fixe sous-jacent, car <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> se trouve à la fin du flux.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>A character array that contains the data to write.</source>
          <target state="translated">Tableau de caractères contenant les données à écrire.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start reading data.</source>
          <target state="translated">Position du caractère dans la mémoire tampon où la lecture des données.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">Nombre maximal de caractères à écrire.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the stream.</source>
          <target state="translated">Écrit un sous-tableau de caractères dans le flux.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode se substitue à <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The characters are read from <ph id="ph1">`buffer`</ph> beginning at <ph id="ph2">`index`</ph> and continuing through <ph id="ph3">`index`</ph> + (<ph id="ph4">`count`</ph> - 1).</source>
          <target state="translated">Les caractères sont lus à partir de <ph id="ph1">`buffer`</ph> commençant à <ph id="ph2">`index`</ph> et jusqu'à <ph id="ph3">`index`</ph> + (<ph id="ph4">`count`</ph> - 1).</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>All characters are written to the underlying stream unless the end of the underlying stream is reached prematurely.</source>
          <target state="translated">Tous les caractères sont écrits dans le flux sous-jacent à moins que la fin du flux sous-jacent est atteinte prématurément.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> is invoked automatically if <ph id="ph2">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> est appelé automatiquement si <ph id="ph2">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des tâches d’e/s courantes, consultez <bpt id="p1">[</bpt>des tâches d’e/s courantes<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This example writes eight characters from a 13-element array to a file, beginning at the third element of the array.</source>
          <target state="translated">Cet exemple écrit huit caractères à partir d’un tableau à 13 éléments dans un fichier, en commençant à la troisième élément du tableau.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">La longueur de la mémoire tampon moins <ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieure à <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est un nombre négatif.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Une erreur d’E/S se produit.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and current writer is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> a la valeur true ou la mémoire tampon de <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> est saturée, et le writer actuel est fermé.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> is at the end the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> a la valeur true ou la mémoire tampon de <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> est saturée, et le contenu de la mémoire tampon ne peut pas être écrit dans le flux de taille fixe sous-jacent, car <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> se trouve à la fin du flux.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="T:System.IO.StreamWriter">
          <source>Writes data to the stream asynchronously.</source>
          <target state="translated">Écrit des données dans le flux de façon asynchrone.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char)">
          <source>The character to write to the stream.</source>
          <target state="translated">Caractère à écrire dans le flux.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char)">
          <source>Writes a character to the stream asynchronously.</source>
          <target state="translated">Écrit un caractère dans le flux de façon asynchrone.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteAsync(System.Char)">
          <source>The following example shows how to write a single character (the letter "a") to a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%28System.Char%29&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant montre comment écrire un caractère unique (la lettre « a ») dans un fichier texte à l’aide de la <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%28System.Char%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char)">
          <source>The stream writer is disposed.</source>
          <target state="translated">Le writer de flux est supprimé.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char)">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer du flux est actuellement utilisé par une opération d’écriture précédente.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>The string to write to the stream.</source>
          <target state="translated">Chaîne à écrire dans le flux.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nothing is written.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>, rien n’est écrit.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>Writes a string to the stream asynchronously.</source>
          <target state="translated">Écrit une chaîne dans le flux de façon asynchrone.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>The following example shows how to write a string to a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%28System.String%29&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant montre comment écrire une chaîne dans un fichier texte à l’aide de la <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%28System.String%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>The stream writer is disposed.</source>
          <target state="translated">Le writer de flux est supprimé.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer du flux est actuellement utilisé par une opération d’écriture précédente.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>A character array that contains the data to write.</source>
          <target state="translated">Tableau de caractères contenant les données à écrire.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to begin reading data.</source>
          <target state="translated">Position du caractère dans la mémoire où commencer la lecture des données.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">Nombre maximal de caractères à écrire.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the stream asynchronously.</source>
          <target state="translated">Écrit un sous-tableau de caractères dans le flux de façon asynchrone.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The following example shows how to write multiple characters to a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant montre comment écrire plusieurs caractères dans un fichier texte à l’aide de la <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est supérieur à la longueur de la mémoire tampon.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est un nombre négatif.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The stream writer is disposed.</source>
          <target state="translated">Le writer de flux est supprimé.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer du flux est actuellement utilisé par une opération d’écriture précédente.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="T:System.IO.StreamWriter">
          <source>Writes data followed by a line terminator asynchronously to the stream.</source>
          <target state="translated">Écrit des données suivies d'un terminateur de ligne de façon asynchrone dans le flux.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync">
          <source>Writes a line terminator asynchronously to the stream.</source>
          <target state="translated">Écrit un terminateur de ligne dans le flux de façon asynchrone.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync">
          <source>The stream writer is disposed.</source>
          <target state="translated">Le writer de flux est supprimé.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer du flux est actuellement utilisé par une opération d’écriture précédente.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>The character to write to the stream.</source>
          <target state="translated">Caractère à écrire dans le flux.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>Writes a character followed by a line terminator asynchronously to the stream.</source>
          <target state="translated">Écrit dans le flux un caractère suivi d'un terminateur de ligne de façon asynchrone.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>The following example shows how to write a single character (the letter "a") to a line in a text file, followed by another line that contains a single character (the letter "b"), by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant montre comment écrire un caractère unique (la lettre « a ») à une ligne dans un fichier texte, suivie d’une autre ligne qui contient un caractère unique (la lettre « b »), à l’aide de la <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>The stream writer is disposed.</source>
          <target state="translated">Le writer de flux est supprimé.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer du flux est actuellement utilisé par une opération d’écriture précédente.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>The string to write.</source>
          <target state="translated">Chaîne à écrire.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>If the value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only a line terminator is written.</source>
          <target state="translated">Si la valeur est <ph id="ph1">&lt;see langword="null" /&gt;</ph>, seul une marque de fin de ligne est écrite.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>Writes a string followed by a line terminator asynchronously to the stream.</source>
          <target state="translated">Écrit une chaîne suivie d'un terminateur de ligne de façon asynchrone dans le flux.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>The following example shows how to write two lines that consist of string values to a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant montre comment écrire les deux lignes qui se composent de valeurs de chaîne dans un fichier texte à l’aide de la <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>The stream writer is disposed.</source>
          <target state="translated">Le writer de flux est supprimé.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer du flux est actuellement utilisé par une opération d’écriture précédente.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">Tableau de caractères à partir duquel les données doivent être écrites.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start reading data.</source>
          <target state="translated">Position du caractère dans la mémoire tampon où la lecture des données.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">Nombre maximal de caractères à écrire.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters followed by a line terminator asynchronously to the stream.</source>
          <target state="translated">Écrit un sous-tableau de caractères suivi d'un terminateur de ligne de façon asynchrone dans le flux.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Tâche qui représente l’opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Le terminateur de ligne est défini par le <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The following example shows how to write characters to two separate lines in a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant montre comment écrire des caractères en deux lignes distinctes dans un fichier texte à l’aide de la <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The first line contains the first 11 characters from the string (the letters "First line" followed by a space).</source>
          <target state="translated">La première ligne contient les 11 premiers caractères de la chaîne (les lettres « Première ligne » suivie d’un espace).</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The second line contains the remaining characters from the string (the letters "and second line").</source>
          <target state="translated">La deuxième ligne contient les caractères restants à partir de la chaîne (les lettres « et deuxième ligne »).</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est supérieur à la longueur de la mémoire tampon.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est un nombre négatif.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The stream writer is disposed.</source>
          <target state="translated">Le writer de flux est supprimé.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">Le writer du flux est actuellement utilisé par une opération d’écriture précédente.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>