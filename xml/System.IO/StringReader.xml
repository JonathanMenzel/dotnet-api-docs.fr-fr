<Type Name="StringReader" FullName="System.IO.StringReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d1c739a402ae00dc98c30acb1f9740c9c401b542" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36560576" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringReader : System.IO.TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringReader extends System.IO.TextReader" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringReader" />
  <TypeSignature Language="VB.NET" Value="Public Class StringReader&#xA;Inherits TextReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringReader : System::IO::TextReader" />
  <TypeSignature Language="F#" Value="type StringReader = class&#xA;    inherit TextReader" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="072f6-101">Implémente <see cref="T:System.IO.TextReader" /> qui lit une chaîne.</span>
      <span class="sxs-lookup">
        <span data-stu-id="072f6-101">Implements a <see cref="T:System.IO.TextReader" /> that reads from a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072f6-102"><xref:System.IO.StringReader> vous permet de lire une chaîne de façon synchrone ou asynchrone.</span><span class="sxs-lookup"><span data-stu-id="072f6-102"><xref:System.IO.StringReader> enables you to read a string synchronously or asynchronously.</span></span> <span data-ttu-id="072f6-103">Vous pouvez lire un caractère à la fois avec la <xref:System.IO.StringReader.Read%2A> ou le <xref:System.IO.StringReader.ReadAsync%2A> (méthode), une ligne à l’aide la <xref:System.IO.StringReader.ReadLine%2A> ou le <xref:System.IO.StringReader.ReadLineAsync%2A> (méthode) et un ensemble de la chaîne à l’aide la <xref:System.IO.StringReader.ReadToEnd%2A> ou le <xref:System.IO.StringReader.ReadToEndAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="072f6-103">You can read a character at a time with the <xref:System.IO.StringReader.Read%2A> or the <xref:System.IO.StringReader.ReadAsync%2A> method, a line at a time using the <xref:System.IO.StringReader.ReadLine%2A> or the <xref:System.IO.StringReader.ReadLineAsync%2A> method and an entire string using the <xref:System.IO.StringReader.ReadToEnd%2A> or the <xref:System.IO.StringReader.ReadToEndAsync%2A> method.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="072f6-104">Le tableau suivant répertorie des exemples d’autres tâches d’e/s courantes ou apparentées.</span><span class="sxs-lookup"><span data-stu-id="072f6-104">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="072f6-105">Pour...</span><span class="sxs-lookup"><span data-stu-id="072f6-105">To do this...</span></span>|<span data-ttu-id="072f6-106">Consultez l'exemple décrit dans cette rubrique...</span><span class="sxs-lookup"><span data-stu-id="072f6-106">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="072f6-107">Créer un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-107">Create a text file.</span></span>|[<span data-ttu-id="072f6-108">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-108">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-109">Écrire dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-109">Write to a text file.</span></span>|[<span data-ttu-id="072f6-110">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-111">Lire un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-111">Read from a text file.</span></span>|[<span data-ttu-id="072f6-112">Comment : lire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-112">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="072f6-113">Ajouter du texte dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-113">Append text to a file.</span></span>|[<span data-ttu-id="072f6-114">Comment : ouvrir un fichier journal et y ajouter des éléments</span><span class="sxs-lookup"><span data-stu-id="072f6-114">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-115">Obtenir la taille d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-115">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-116">Obtenir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-116">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-117">Définir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-117">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-118">Déterminer si un fichier existe.</span><span class="sxs-lookup"><span data-stu-id="072f6-118">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-119">Lire à partir d’un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="072f6-119">Read from a binary file.</span></span>|[<span data-ttu-id="072f6-120">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="072f6-120">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="072f6-121">Écrire dans un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="072f6-121">Write to a binary file.</span></span>|[<span data-ttu-id="072f6-122">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="072f6-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="072f6-123">L’exemple suivant montre comment lire une chaîne entière de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="072f6-123">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextReader" />
    <altmember cref="T:System.IO.StringWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringReader (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringReader(System::String ^ s);" />
      <MemberSignature Language="F#" Value="new System.IO.StringReader : string -&gt; System.IO.StringReader" Usage="new System.IO.StringReader s" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="072f6-124">Chaîne à laquelle <see cref="T:System.IO.StringReader" /> doit être initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-124">The string to which the <see cref="T:System.IO.StringReader" /> should be initialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="072f6-125">Initialise une nouvelle instance de la classe <see cref="T:System.IO.StringReader" /> qui lit la chaîne spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-125">Initializes a new instance of the <see cref="T:System.IO.StringReader" /> class that reads from the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072f6-126">Le tableau suivant répertorie des exemples d’autres tâches d’e/s courantes ou apparentées.</span><span class="sxs-lookup"><span data-stu-id="072f6-126">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="072f6-127">Pour...</span><span class="sxs-lookup"><span data-stu-id="072f6-127">To do this...</span></span>|<span data-ttu-id="072f6-128">Consultez l'exemple décrit dans cette rubrique...</span><span class="sxs-lookup"><span data-stu-id="072f6-128">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="072f6-129">Créer un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-129">Create a text file.</span></span>|[<span data-ttu-id="072f6-130">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-130">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-131">Écrire dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-131">Write to a text file.</span></span>|[<span data-ttu-id="072f6-132">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-132">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-133">Lire un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-133">Read from a text file.</span></span>|[<span data-ttu-id="072f6-134">Comment : lire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-134">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="072f6-135">Ajouter du texte dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-135">Append text to a file.</span></span>|[<span data-ttu-id="072f6-136">Comment : ouvrir un fichier journal et y ajouter des éléments</span><span class="sxs-lookup"><span data-stu-id="072f6-136">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-137">Obtenir la taille d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-137">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-138">Obtenir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-138">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-139">Définir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-139">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-140">Déterminer si un fichier existe.</span><span class="sxs-lookup"><span data-stu-id="072f6-140">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-141">Lire à partir d’un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="072f6-141">Read from a binary file.</span></span>|[<span data-ttu-id="072f6-142">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="072f6-142">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="072f6-143">Écrire dans un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="072f6-143">Write to a binary file.</span></span>|[<span data-ttu-id="072f6-144">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="072f6-144">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="072f6-145">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.IO.StringReader> classe.</span><span class="sxs-lookup"><span data-stu-id="072f6-145">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="072f6-146">Le paramètre <paramref name="s" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-146">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="072f6-147">Ferme <see cref="T:System.IO.StringReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-147">Closes the <see cref="T:System.IO.StringReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072f6-148">Pour obtenir un exemple de création d’un fichier et d’écrire du texte dans un fichier, consultez [Comment : écrire du texte dans un fichier](~/docs/standard/io/how-to-write-text-to-a-file.md).</span><span class="sxs-lookup"><span data-stu-id="072f6-148">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="072f6-149">Pour obtenir un exemple de texte de la lecture à partir d’un fichier, consultez [Comment : lire le texte d’un fichier](~/docs/standard/io/how-to-read-text-from-a-file.md).</span><span class="sxs-lookup"><span data-stu-id="072f6-149">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="072f6-150">Pour obtenir un exemple de lecture et écriture dans un fichier binaire, consultez [Comment : lire et écrire dans un nouveau fichier de données](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span><span class="sxs-lookup"><span data-stu-id="072f6-150">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="072f6-151">Cette méthode remplace la <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="072f6-151">This method overrides the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="072f6-152">Cette implémentation de `Close` appelle la <xref:System.IO.StringReader.Dispose%2A> méthode en passant un `true` valeur.</span><span class="sxs-lookup"><span data-stu-id="072f6-152">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="072f6-153">Vider le flux n’effacera pas son encodeur sous-jacent sauf si vous appelez explicitement `Close`.</span><span class="sxs-lookup"><span data-stu-id="072f6-153">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="072f6-154">Paramètre <xref:System.IO.StreamWriter.AutoFlush%2A> à `true` signifie que les données sont supprimées de la mémoire tampon dans le flux, mais l’état de l’encodeur n’est pas vidé.</span><span class="sxs-lookup"><span data-stu-id="072f6-154">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="072f6-155">Cela permet à l’encodeur de conserver son état (caractères partiels) afin qu’il peut encoder correctement le bloc suivant de caractères.</span><span class="sxs-lookup"><span data-stu-id="072f6-155">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="072f6-156">Ce scénario affecte UTF8 et UTF7 où certains caractères peuvent uniquement être encodés après que l’encodeur a reçu les caractères adjacents.</span><span class="sxs-lookup"><span data-stu-id="072f6-156">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="072f6-157">Après un appel à `Close`, autres méthodes peuvent lever une exception.</span><span class="sxs-lookup"><span data-stu-id="072f6-157">Following a call to `Close`, other methods might throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="072f6-158">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-158">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="072f6-159">Libère les ressources non managées utilisées par <see cref="T:System.IO.StringReader" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-159">Releases the unmanaged resources used by the <see cref="T:System.IO.StringReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072f6-160">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.IO.StringReader>.</span><span class="sxs-lookup"><span data-stu-id="072f6-160">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringReader> references.</span></span> <span data-ttu-id="072f6-161">Cette méthode appelle la méthode `Dispose` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="072f6-161">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="072f6-162">
            <para>
              <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> peut être appelée plusieurs fois par d’autres objets. Lors de la substitution <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d’un appel antérieur à <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-162">
              <para>
                <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Peek();" />
      <MemberSignature Language="F#" Value="override this.Peek : unit -&gt; int" Usage="stringReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="072f6-163">Retourne le caractère disponible suivant, mais ne le consomme pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-163">Returns the next available character but does not consume it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="072f6-164">Entier représentant le prochain caractère à lire, ou -1 si plus aucun caractère n’est disponible ou si le flux ne prend pas en charge la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-164">An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072f6-165">Le <xref:System.IO.StringReader.Peek%2A> méthode retourne une valeur entière afin de déterminer si la fin du fichier ou une autre erreur s’est produite.</span><span class="sxs-lookup"><span data-stu-id="072f6-165">The <xref:System.IO.StringReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="072f6-166">Cela permet à un utilisateur à vérifier au préalable si la valeur retournée est -1 avant un cast sur un <xref:System.Char> type.</span><span class="sxs-lookup"><span data-stu-id="072f6-166">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="072f6-167">Cette méthode remplace la <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="072f6-167">This method overrides the <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="072f6-168">La position actuelle de la `StringReader` n’est pas modifiée par cette opération.</span><span class="sxs-lookup"><span data-stu-id="072f6-168">The current position of the `StringReader` is not changed by this operation.</span></span>  
  
 <span data-ttu-id="072f6-169">Le tableau suivant répertorie des exemples d’autres tâches d’e/s courantes ou apparentées.</span><span class="sxs-lookup"><span data-stu-id="072f6-169">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="072f6-170">Pour...</span><span class="sxs-lookup"><span data-stu-id="072f6-170">To do this...</span></span>|<span data-ttu-id="072f6-171">Consultez l'exemple décrit dans cette rubrique...</span><span class="sxs-lookup"><span data-stu-id="072f6-171">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="072f6-172">Créer un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-172">Create a text file.</span></span>|[<span data-ttu-id="072f6-173">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-173">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-174">Écrire dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-174">Write to a text file.</span></span>|[<span data-ttu-id="072f6-175">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-175">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-176">Lire un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-176">Read from a text file.</span></span>|[<span data-ttu-id="072f6-177">Comment : lire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-177">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="072f6-178">Obtenir la taille d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-178">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="072f6-179">Le lecteur actuel est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-179">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="072f6-180">Lit le caractère ou le jeu de caractères suivant dans la chaîne d’entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-180">Reads the next character or next set of characters from the input string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; int" Usage="stringReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="072f6-181">Lit le caractère suivant dans la chaîne d’entrée et avance sa position d’un caractère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-181">Reads the next character from the input string and advances the character position by one character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="072f6-182">Caractère suivant de la chaîne sous-jacente, ou -1 si plus aucun caractère n’est disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-182">The next character from the underlying string, or -1 if no more characters are available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072f6-183">Cette méthode remplace la <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="072f6-183">This method overrides the <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="072f6-184">Le tableau suivant répertorie des exemples d’autres tâches d’e/s courantes ou apparentées.</span><span class="sxs-lookup"><span data-stu-id="072f6-184">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="072f6-185">Pour...</span><span class="sxs-lookup"><span data-stu-id="072f6-185">To do this...</span></span>|<span data-ttu-id="072f6-186">Consultez l'exemple décrit dans cette rubrique...</span><span class="sxs-lookup"><span data-stu-id="072f6-186">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="072f6-187">Créer un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-187">Create a text file.</span></span>|[<span data-ttu-id="072f6-188">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-188">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-189">Écrire dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-189">Write to a text file.</span></span>|[<span data-ttu-id="072f6-190">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-190">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-191">Lire un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-191">Read from a text file.</span></span>|[<span data-ttu-id="072f6-192">Comment : lire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-192">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="072f6-193">Ajouter du texte dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-193">Append text to a file.</span></span>|[<span data-ttu-id="072f6-194">Comment : ouvrir un fichier journal et y ajouter des éléments</span><span class="sxs-lookup"><span data-stu-id="072f6-194">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-195">Obtenir la taille d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-195">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-196">Obtenir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-196">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-197">Définir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-197">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-198">Déterminer si un fichier existe.</span><span class="sxs-lookup"><span data-stu-id="072f6-198">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-199">Lire à partir d’un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="072f6-199">Read from a binary file.</span></span>|[<span data-ttu-id="072f6-200">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="072f6-200">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="072f6-201">Écrire dans un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="072f6-201">Write to a binary file.</span></span>|[<span data-ttu-id="072f6-202">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="072f6-202">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="072f6-203">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.IO.StringReader> classe.</span><span class="sxs-lookup"><span data-stu-id="072f6-203">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="072f6-204">Le lecteur actuel est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-204">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;char&gt; -&gt; int" Usage="stringReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : char[] * int * int -&gt; int" Usage="stringReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="072f6-205">Quand cette méthode est retournée, contient le tableau de caractères spécifié dont les valeurs comprises entre <c>index</c> et (<c>index</c> + <c>count</c> - 1) sont remplacées par les caractères lus à partir de la source actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-205">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="072f6-206">Index de début dans la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-206">The starting index in the buffer.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="072f6-207">Nombre de caractères à lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-207">The number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="072f6-208">Lit un bloc de caractères dans la chaîne d’entrée et avance la position du caractère de <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-208">Reads a block of characters from the input string and advances the character position by <paramref name="count" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="072f6-209">Nombre total de caractères lus dans la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-209">The total number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="072f6-210">Cela peut être inférieur au nombre de caractères demandé si ce nombre n’est pas actuellement disponible, ou égal à zéro si la fin de la chaîne sous-jacente a été atteinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-210">This can be less than the number of characters requested if that many characters are not currently available, or zero if the end of the underlying string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072f6-211">Cette méthode se substitue à <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="072f6-211">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="072f6-212">La méthode lit jusqu'à `count` caractères à partir de la <xref:System.IO.StringReader> dans les `buffer` tableau de caractères commençant à la position `index`.</span><span class="sxs-lookup"><span data-stu-id="072f6-212">The method will read up to `count` characters from the <xref:System.IO.StringReader> into the `buffer` character array starting at position `index`.</span></span> <span data-ttu-id="072f6-213">Retourne le nombre réel de caractères de lecture, ou zéro si la fin de la chaîne a été atteinte et aucune caractères ne sont lus.</span><span class="sxs-lookup"><span data-stu-id="072f6-213">Returns the actual number of characters read, or zero if the end of the string has been reached and no characters are read.</span></span>  
  
 <span data-ttu-id="072f6-214">Le tableau suivant répertorie des exemples d’autres tâches d’e/s courantes ou apparentées.</span><span class="sxs-lookup"><span data-stu-id="072f6-214">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="072f6-215">Pour...</span><span class="sxs-lookup"><span data-stu-id="072f6-215">To do this...</span></span>|<span data-ttu-id="072f6-216">Consultez l'exemple décrit dans cette rubrique...</span><span class="sxs-lookup"><span data-stu-id="072f6-216">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="072f6-217">Créer un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-217">Create a text file.</span></span>|[<span data-ttu-id="072f6-218">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-218">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-219">Écrire dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-219">Write to a text file.</span></span>|[<span data-ttu-id="072f6-220">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-220">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-221">Lire un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-221">Read from a text file.</span></span>|[<span data-ttu-id="072f6-222">Comment : lire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-222">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="072f6-223">Ajouter du texte dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-223">Append text to a file.</span></span>|[<span data-ttu-id="072f6-224">Comment : ouvrir un fichier journal et y ajouter des éléments</span><span class="sxs-lookup"><span data-stu-id="072f6-224">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-225">Obtenir la taille d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-225">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-226">Obtenir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-226">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-227">Définir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-227">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-228">Déterminer si un fichier existe.</span><span class="sxs-lookup"><span data-stu-id="072f6-228">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-229">Lire à partir d’un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="072f6-229">Read from a binary file.</span></span>|[<span data-ttu-id="072f6-230">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="072f6-230">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="072f6-231">Écrire dans un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="072f6-231">Write to a binary file.</span></span>|[<span data-ttu-id="072f6-232">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="072f6-232">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="072f6-233">
            <paramref name="buffer" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-233">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="072f6-234">La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-234">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="072f6-235">
            <paramref name="index" /> ou <paramref name="count" /> est un nombre négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-235">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="072f6-236">Le lecteur actuel est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-236">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="072f6-237">Quand cette méthode est retournée, contient le tableau de caractères spécifié dont les valeurs comprises entre <c>index</c> et (<c>index</c> + <c>count</c> - 1) sont remplacées par les caractères lus à partir de la source actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-237">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="072f6-238">Position dans <c>buffer</c> à partir de laquelle commencer l’écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-238">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="072f6-239">Nombre maximal de caractères à lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-239">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="072f6-240">Si la fin de la chaîne est atteinte avant que le nombre de caractères spécifié soit écrit dans la mémoire tampon, la méthode est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-240">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="072f6-241">Lit un nombre maximal spécifié de caractères à partir de la chaîne actuelle de manière asynchrone, et écrit les données dans une mémoire tampon, en commençant à l’index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-241">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="072f6-242">Tâche qui représente l'opération de lecture asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-242">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="072f6-243">La valeur du paramètre <paramref name="TResult" /> contient le nombre total d'octets lus dans la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-243">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="072f6-244">La valeur de résultat peut être inférieure au nombre d’octets demandés si le nombre d’octets actuellement disponibles est inférieur au nombre demandé, ou elle peut avoir la valeur 0 (zéro) si la fin de la chaîne a été atteinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-244">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072f6-245">La tâche termine après un nombre de caractères spécifié par le `count` paramètre sont en lecture ou la fin de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="072f6-245">The task completes after either the number of characters specified by the `count` parameter are read or the end of the string is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072f6-246">L’exemple suivant montre comment lire les 23 premiers caractères d’une chaîne de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="072f6-246">The following example shows how to read the first 23 characters of a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example1.cs#1)]
 [!code-vb[System.IO.StringReader#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="072f6-247">
            <paramref name="buffer" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-247">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="072f6-248">
            <paramref name="index" /> ou <paramref name="count" /> est un nombre négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-248">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="072f6-249">La somme de <paramref name="index" /> et <paramref name="count" /> est supérieure à la longueur de la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-249">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="072f6-250">Le lecteur de chaîne a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-250">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="072f6-251">Le lecteur est actuellement utilisé par une opération de lecture antérieure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-251">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="stringReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="072f6-252">Quand cette méthode est retournée, contient le tableau de caractères spécifié dont les valeurs comprises entre <c>index</c> et (<c>index</c> + <c>count</c> - 1) sont remplacées par les caractères lus à partir de la source actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-252">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="072f6-253">Position dans <c>buffer</c> à partir de laquelle commencer l’écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-253">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="072f6-254">Nombre maximal de caractères à lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-254">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="072f6-255">Si la fin de la chaîne est atteinte avant que le nombre de caractères spécifié soit écrit dans la mémoire tampon, la méthode est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-255">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="072f6-256">Lit un nombre maximal spécifié de caractères à partir de la chaîne actuelle de manière asynchrone, et écrit les données dans une mémoire tampon, en commençant à l’index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-256">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="072f6-257">Tâche qui représente l'opération de lecture asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-257">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="072f6-258">La valeur du paramètre <paramref name="TResult" /> contient le nombre total d'octets lus dans la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-258">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="072f6-259">La valeur de résultat peut être inférieure au nombre d’octets demandés si le nombre d’octets actuellement disponibles est inférieur au nombre demandé, ou elle peut avoir la valeur 0 (zéro) si la fin de la chaîne a été atteinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-259">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072f6-260">La tâche ne termine pas tant que le nombre de caractères spécifié par le `count` paramètre sont en lecture ou la fin de la chaîne a été atteinte.</span><span class="sxs-lookup"><span data-stu-id="072f6-260">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the string has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="072f6-261">
            <paramref name="buffer" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-261">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="072f6-262">
            <paramref name="index" /> ou <paramref name="count" /> est un nombre négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-262">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="072f6-263">La somme de <paramref name="index" /> et <paramref name="count" /> est supérieure à la longueur de la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-263">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="072f6-264">Le lecteur de chaîne a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-264">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="072f6-265">Le lecteur est actuellement utilisé par une opération de lecture antérieure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-265">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public override string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="override this.ReadLine : unit -&gt; string" Usage="stringReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="072f6-266">Lit une ligne de caractères à partir de la chaîne en cours et retourne les données sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-266">Reads a line of characters from the current string and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="072f6-267">Ligne suivante dans la chaîne actuelle ou <see langword="null" /> si la fin de la chaîne est atteinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-267">The next line from the current string, or <see langword="null" /> if the end of the string is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072f6-268">Cette méthode remplace la <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="072f6-268">This method overrides the <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="072f6-269">Une ligne est définie comme une séquence de caractères suivi d’une ligne d’alimentation (« \n »), un retour chariot (« \r ») ou un retour chariot immédiatement suivi d’une ligne d’alimentation (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="072f6-269">A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="072f6-270">La chaîne retournée ne contient pas le caractère de fin retour chariot ou saut de ligne.</span><span class="sxs-lookup"><span data-stu-id="072f6-270">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="072f6-271">La valeur retournée est `null` si la fin de la chaîne a été atteinte.</span><span class="sxs-lookup"><span data-stu-id="072f6-271">The returned value is `null` if the end of the string has been reached.</span></span>  
  
 <span data-ttu-id="072f6-272">Si la méthode actuelle lève une <xref:System.OutOfMemoryException>, la position du lecteur dans la chaîne sous-jacente est avancée par le nombre de caractères que la méthode a été en mesure de lire, mais les caractères déjà lues interne <xref:System.IO.StringReader.ReadLine%2A> tampon sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="072f6-272">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="072f6-273">Étant donné que la position du lecteur dans la chaîne ne peut pas être modifiée, les caractères déjà lus sont irrécupérables et sont accessibles uniquement en réinitialisant le <xref:System.IO.StringReader>.</span><span class="sxs-lookup"><span data-stu-id="072f6-273">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="072f6-274">Pour éviter une telle situation, utilisez le <xref:System.IO.StringReader.Read%2A> méthode et magasin les caractères lus dans une mémoire tampon préallouée.</span><span class="sxs-lookup"><span data-stu-id="072f6-274">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="072f6-275">Le tableau suivant répertorie des exemples d’autres tâches d’e/s courantes ou apparentées.</span><span class="sxs-lookup"><span data-stu-id="072f6-275">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="072f6-276">Pour...</span><span class="sxs-lookup"><span data-stu-id="072f6-276">To do this...</span></span>|<span data-ttu-id="072f6-277">Consultez l'exemple décrit dans cette rubrique...</span><span class="sxs-lookup"><span data-stu-id="072f6-277">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="072f6-278">Créer un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-278">Create a text file.</span></span>|[<span data-ttu-id="072f6-279">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-279">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-280">Écrire dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-280">Write to a text file.</span></span>|[<span data-ttu-id="072f6-281">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-281">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-282">Lire un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-282">Read from a text file.</span></span>|[<span data-ttu-id="072f6-283">Comment : lire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-283">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="072f6-284">Ajouter du texte dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-284">Append text to a file.</span></span>|[<span data-ttu-id="072f6-285">Comment : ouvrir un fichier journal et y ajouter des éléments</span><span class="sxs-lookup"><span data-stu-id="072f6-285">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-286">Obtenir la taille d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-286">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-287">Obtenir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-287">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-288">Définir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-288">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-289">Déterminer si un fichier existe.</span><span class="sxs-lookup"><span data-stu-id="072f6-289">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-290">Lire à partir d’un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="072f6-290">Read from a binary file.</span></span>|[<span data-ttu-id="072f6-291">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="072f6-291">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="072f6-292">Écrire dans un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="072f6-292">Write to a binary file.</span></span>|[<span data-ttu-id="072f6-293">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="072f6-293">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="072f6-294">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.IO.StringReader> classe.</span><span class="sxs-lookup"><span data-stu-id="072f6-294">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="072f6-295">Le lecteur actuel est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-295">The current reader is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="072f6-296">La mémoire est insuffisante pour allouer une mémoire tampon à la chaîne retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-296">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="072f6-297">Lit une ligne de caractères de manière asynchrone à partir de la chaîne en cours et retourne les données sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-297">Reads a line of characters asynchronously from the current string and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="072f6-298">Tâche qui représente l'opération de lecture asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-298">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="072f6-299">La valeur du paramètre <paramref name="TResult" /> contient la ligne suivante issue du lecteur de chaîne, ou a la valeur <see langword="null" /> si tous les caractères ont été lus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-299">The value of the <paramref name="TResult" /> parameter contains the next line from the string reader, or is <see langword="null" /> if all the characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="072f6-300">L’exemple suivant montre comment lire une ligne à la fois à partir d’une chaîne de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="072f6-300">The following example shows how to read one line at a time from a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example3.cs#3)]
 [!code-vb[System.IO.StringReader#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="072f6-301">Le nombre de caractères dans la ligne suivante est supérieur à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-301">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="072f6-302">Le lecteur de chaîne a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-302">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="072f6-303">Le lecteur est actuellement utilisé par une opération de lecture antérieure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-303">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public override string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="override this.ReadToEnd : unit -&gt; string" Usage="stringReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="072f6-304">Lit tous les caractères entre la position actuelle et la fin de la chaîne, puis les retourne sous la forme d’une chaîne unique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-304">Reads all characters from the current position to the end of the string and returns them as a single string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="072f6-305">Contenu à partir de la position actuelle jusqu’à la fin du flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-305">The content from the current position to the end of the underlying string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072f6-306">Cette méthode remplace la <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="072f6-306">This method overrides the <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="072f6-307">Si la méthode actuelle lève une <xref:System.OutOfMemoryException>, la position du lecteur dans la chaîne sous-jacente est avancée par le nombre de caractères que la méthode a été en mesure de lire, mais les caractères déjà lues interne <xref:System.IO.StringReader.ReadToEnd%2A> tampon sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="072f6-307">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="072f6-308">Étant donné que la position du lecteur dans la chaîne ne peut pas être modifiée, les caractères déjà lus sont irrécupérables et sont accessibles uniquement en réinitialisant le <xref:System.IO.StringReader>.</span><span class="sxs-lookup"><span data-stu-id="072f6-308">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="072f6-309">Pour éviter une telle situation, utilisez le <xref:System.IO.StringReader.Read%2A> méthode et magasin les caractères lus dans une mémoire tampon préallouée.</span><span class="sxs-lookup"><span data-stu-id="072f6-309">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="072f6-310">Le tableau suivant répertorie des exemples d’autres tâches d’e/s courantes ou apparentées.</span><span class="sxs-lookup"><span data-stu-id="072f6-310">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="072f6-311">Pour...</span><span class="sxs-lookup"><span data-stu-id="072f6-311">To do this...</span></span>|<span data-ttu-id="072f6-312">Consultez l'exemple décrit dans cette rubrique...</span><span class="sxs-lookup"><span data-stu-id="072f6-312">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="072f6-313">Créer un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-313">Create a text file.</span></span>|[<span data-ttu-id="072f6-314">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-314">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-315">Écrire dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-315">Write to a text file.</span></span>|[<span data-ttu-id="072f6-316">Comment : écrire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-316">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="072f6-317">Lire un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="072f6-317">Read from a text file.</span></span>|[<span data-ttu-id="072f6-318">Comment : lire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="072f6-318">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="072f6-319">Ajouter du texte dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-319">Append text to a file.</span></span>|[<span data-ttu-id="072f6-320">Comment : ouvrir un fichier journal et y ajouter des éléments</span><span class="sxs-lookup"><span data-stu-id="072f6-320">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-321">Obtenir la taille d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-321">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-322">Obtenir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-322">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-323">Définir les attributs d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="072f6-323">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-324">Déterminer si un fichier existe.</span><span class="sxs-lookup"><span data-stu-id="072f6-324">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="072f6-325">Lire à partir d’un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="072f6-325">Read from a binary file.</span></span>|[<span data-ttu-id="072f6-326">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="072f6-326">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="072f6-327">Écrire dans un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="072f6-327">Write to a binary file.</span></span>|[<span data-ttu-id="072f6-328">Comment : lire et écrire dans un fichier de données créé récemment</span><span class="sxs-lookup"><span data-stu-id="072f6-328">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="072f6-329">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.IO.TextReader> classe.</span><span class="sxs-lookup"><span data-stu-id="072f6-329">This code example is part of a larger example provided for the <xref:System.IO.TextReader> class.</span></span>  
  
 [!code-cpp[System.IO.TextReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CPP/textrw.cpp#5)]
 [!code-csharp[System.IO.TextReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CS/textrw.cs#5)]
 [!code-vb[System.IO.TextReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.TextReaderWriter/VB/textrw.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="072f6-330">La mémoire est insuffisante pour allouer une mémoire tampon à la chaîne retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-330">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="072f6-331">Le lecteur actuel est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-331">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="072f6-332">Lit tous les caractères entre la position actuelle et la fin de la chaîne de manière asynchrone, puis les retourne sous la forme d’une chaîne unique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-332">Reads all characters from the current position to the end of the string asynchronously and returns them as a single string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="072f6-333">Tâche qui représente l'opération de lecture asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-333">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="072f6-334">La valeur du paramètre <paramref name="TResult" /> contient une chaîne composée des caractères de la position actuelle jusqu’à la fin de la chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-334">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="072f6-335">L’exemple suivant montre comment lire une chaîne entière de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="072f6-335">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="072f6-336">Le nombre de caractères est supérieur à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-336">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="072f6-337">Le lecteur de chaîne a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-337">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="072f6-338">Le lecteur est actuellement utilisé par une opération de lecture antérieure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="072f6-338">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>