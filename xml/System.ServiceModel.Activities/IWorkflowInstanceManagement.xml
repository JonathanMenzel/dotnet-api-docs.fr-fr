<Type Name="IWorkflowInstanceManagement" FullName="System.ServiceModel.Activities.IWorkflowInstanceManagement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8fcaab657acef56767c304b89a17573b70c2fcdc" /><Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/27/2018" /><Meta Name="ms.locfileid" Value="50179249" /></Metadata><TypeSignature Language="C#" Value="public interface IWorkflowInstanceManagement" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWorkflowInstanceManagement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWorkflowInstanceManagement" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWorkflowInstanceManagement" />
  <TypeSignature Language="F#" Value="type IWorkflowInstanceManagement = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.Activities.Description.WorkflowContractBehavior</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.ServiceContract(Name="IWorkflowInstanceManagement", Namespace="http://schemas.datacontract.org/2008/10/WorkflowServices")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente un contrat de service qui définit un jeu d'opérations vous permettant de contrôler des instances de flux de travail.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon (Guid instanceId, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abandon(valuetype System.Guid instanceId, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Abandon(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abandon (instanceId As Guid, reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abandon(Guid instanceId, System::String ^ reason);" />
      <MemberSignature Language="F#" Value="abstract member Abandon : Guid * string -&gt; unit" Usage="iWorkflowInstanceManagement.Abandon (instanceId, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(Name="Abandon")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à abandonner.</param>
        <param name="reason">Raison de l'abandon de l'instance de flux de travail.</param>
        <summary>Tente d'abandonner l'instance de flux de travail spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette opération est uniquement valide pour une instance de flux de travail actuellement chargée en mémoire. Si l'instance de flux de travail spécifiée n'est pas chargée ou est terminée, il y a absence d'opération. Cette opération ne prend pas en compte les transactions.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAbandon">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAbandon (Guid instanceId, string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAbandon(valuetype System.Guid instanceId, string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAbandon (instanceId As Guid, reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAbandon(Guid instanceId, System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAbandon : Guid * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="iWorkflowInstanceManagement.BeginAbandon (instanceId, reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(AsyncPattern=true, Name="Abandon")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à abandonner.</param>
        <param name="reason">Raison de l'abandon de l'instance de flux de travail.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de fin d'opération asynchrone.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération d'abandon asynchrone.</param>
        <summary>Commence une opération asynchrone pour abandonner l'instance de flux de travail spécifiée.</summary>
        <returns><see cref="T:System.IAsyncResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d’abandon arrête l’instance de flux de travail, détruit tous les objets associés et libère les ressources associées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCancel(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginCancel(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCancel : Guid * AsyncCallback * obj -&gt; IAsyncResult" Usage="iWorkflowInstanceManagement.BeginCancel (instanceId, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(AsyncPattern=true, Name="Cancel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à annuler.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de fin d'opération asynchrone.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération d'annulation asynchrone.</param>
        <summary>Commence une opération asynchrone pour annuler l'instance de flux de travail spécifiée.</summary>
        <returns>Élément <see cref="T:System.IAsyncResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'annulation quitte une instance de flux de travail et retourne à l'état précédent sans enregistrer les modifications que le flux de travail a pu apporter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRun(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginRun(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRun : Guid * AsyncCallback * obj -&gt; IAsyncResult" Usage="iWorkflowInstanceManagement.BeginRun (instanceId, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(AsyncPattern=true, Name="Run")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à exécuter.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de fin d'opération asynchrone.</param>
        <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération d'exécution asynchrone.</param>
        <summary>Commence une opération asynchrone pour exécuter l'instance de flux de travail spécifiée.</summary>
        <returns>Élément <see cref="T:System.IAsyncResult" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSuspend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSuspend (Guid instanceId, string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginSuspend(valuetype System.Guid instanceId, string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSuspend (instanceId As Guid, reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSuspend(Guid instanceId, System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginSuspend : Guid * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="iWorkflowInstanceManagement.BeginSuspend (instanceId, reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(AsyncPattern=true, Name="Suspend")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à interrompre.</param>
        <param name="reason">Raison de l'interruption de l'instance de flux de travail.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de fin d'opération asynchrone.</param>
        <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération d'interruption asynchrone.</param>
        <summary>Commence une opération asynchrone pour interrompre l'instance de flux de travail spécifiée.</summary>
        <returns><see cref="T:System.IAsyncResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'interruption arrête temporairement une instance de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Guid instanceId, string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTerminate(valuetype System.Guid instanceId, string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (instanceId As Guid, reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Guid instanceId, System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTerminate : Guid * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="iWorkflowInstanceManagement.BeginTerminate (instanceId, reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(AsyncPattern=true, Name="Terminate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à arrêter.</param>
        <param name="reason">Raison de l'arrêt de l'instance de flux de travail.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de fin d'opération asynchrone.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération d'arrêt asynchrone.</param>
        <summary>Commence une opération asynchrone pour arrêter l'instance de flux de travail spécifiée.</summary>
        <returns><see cref="T:System.IAsyncResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'arrêt met fin à une instance de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransactedCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTransactedCancel (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTransactedCancel(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedCancel(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransactedCancel (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTransactedCancel(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTransactedCancel : Guid * AsyncCallback * obj -&gt; IAsyncResult" Usage="iWorkflowInstanceManagement.BeginTransactedCancel (instanceId, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(AsyncPattern=true, Name="TransactedCancel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à annuler.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de fin d'opération asynchrone.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération d'annulation asynchrone.</param>
        <summary>Commence une opération d’annulation asynchrone dans une transaction.</summary>
        <returns><see cref="T:System.IAsyncResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'annulation quitte une instance de flux de travail et retourne à l'état précédent sans enregistrer les modifications que le flux de travail a pu apporter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransactedRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTransactedRun (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTransactedRun(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedRun(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransactedRun (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTransactedRun(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTransactedRun : Guid * AsyncCallback * obj -&gt; IAsyncResult" Usage="iWorkflowInstanceManagement.BeginTransactedRun (instanceId, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(AsyncPattern=true, Name="TransactedRun")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à exécuter.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de fin d'opération asynchrone.</param>
        <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération d'exécution asynchrone.</param>
        <summary>Commence une opération asynchrone qui exécute une instance de flux de travail dans une transaction.</summary>
        <returns><see cref="T:System.IAsyncResult" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransactedSuspend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTransactedSuspend (Guid instanceId, string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTransactedSuspend(valuetype System.Guid instanceId, string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransactedSuspend (instanceId As Guid, reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTransactedSuspend(Guid instanceId, System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTransactedSuspend : Guid * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="iWorkflowInstanceManagement.BeginTransactedSuspend (instanceId, reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(AsyncPattern=true, Name="TransactedSuspend")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à interrompre.</param>
        <param name="reason">Raison de l'interruption de l'instance de flux de travail.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de fin d'opération asynchrone.</param>
        <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération d'interruption asynchrone.</param>
        <summary>Commence une opération asynchrone qui interrompt l'instance de flux de travail spécifiée.</summary>
        <returns><see cref="T:System.IAsyncResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'interruption arrête temporairement une instance de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransactedTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTransactedTerminate (Guid instanceId, string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTransactedTerminate(valuetype System.Guid instanceId, string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransactedTerminate (instanceId As Guid, reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTransactedTerminate(Guid instanceId, System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTransactedTerminate : Guid * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="iWorkflowInstanceManagement.BeginTransactedTerminate (instanceId, reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(AsyncPattern=true, Name="TransactedTerminate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à arrêter.</param>
        <param name="reason">Raison de l'arrêt de l'instance de flux de travail.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de fin d'opération asynchrone.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération d'arrêt asynchrone.</param>
        <summary>Commence une opération asynchrone qui arrête une instance de flux de travail dans une transaction.</summary>
        <returns><see cref="T:System.IAsyncResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'arrêt met fin à une instance de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransactedUnsuspend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTransactedUnsuspend (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTransactedUnsuspend(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransactedUnsuspend (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTransactedUnsuspend(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTransactedUnsuspend : Guid * AsyncCallback * obj -&gt; IAsyncResult" Usage="iWorkflowInstanceManagement.BeginTransactedUnsuspend (instanceId, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(AsyncPattern=true, Name="TransactedUnsuspend")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail pour laquelle annuler l'interruption.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de fin d'opération asynchrone.</param>
        <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération d'annulation d'interruption asynchrone.</param>
        <summary>Commence une opération asynchrone qui reprend l’instance de flux de travail spécifiée dans une transaction.</summary>
        <returns><see cref="T:System.IAsyncResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'annulation d'interruption reprend une instance de flux de travail temporairement arrêtée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnsuspend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnsuspend (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUnsuspend(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnsuspend (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnsuspend(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginUnsuspend : Guid * AsyncCallback * obj -&gt; IAsyncResult" Usage="iWorkflowInstanceManagement.BeginUnsuspend (instanceId, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(AsyncPattern=true, Name="Unsuspend")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à reprendre.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de fin d'opération asynchrone.</param>
        <param name="state">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération d'annulation d'interruption asynchrone.</param>
        <summary>Commence une opération asynchrone qui reprend l'instance de flux de travail spécifiée.</summary>
        <returns><see cref="T:System.IAsyncResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'annulation d'interruption reprend une instance de flux de travail temporairement arrêtée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Cancel(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel(Guid instanceId);" />
      <MemberSignature Language="F#" Value="abstract member Cancel : Guid -&gt; unit" Usage="iWorkflowInstanceManagement.Cancel instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(Name="Cancel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à annuler.</param>
        <summary>Annule l'instance de flux de travail spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l'instance identifiée par l'ID d'instance n'existe pas en mémoire, une tentative de chargement de l'instance à partir du magasin d'instances est effectuée (si la persistance a été activée). Si la persistance n'a pas été activée ou que l'instance n'a pas été rendue persistante, une erreur est retournée à l'appelant. Une fois que l'instance en mémoire a été chargée ou identifiée, cette opération annule l'instance de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAbandon">
      <MemberSignature Language="C#" Value="public void EndAbandon (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAbandon(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndAbandon(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndAbandon (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndAbandon(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAbandon : IAsyncResult -&gt; unit" Usage="iWorkflowInstanceManagement.EndAbandon result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération d'abandon asynchrone.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public void EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancel (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCancel : IAsyncResult -&gt; unit" Usage="iWorkflowInstanceManagement.EndCancel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginCancel(System.Guid,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération d'annulation asynchrone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'annulation quitte une instance de flux de travail et retourne à l'état précédent sans enregistrer les modifications que le flux de travail a pu apporter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRun">
      <MemberSignature Language="C#" Value="public void EndRun (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRun(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndRun(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndRun (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndRun(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRun : IAsyncResult -&gt; unit" Usage="iWorkflowInstanceManagement.EndRun result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginRun(System.Guid,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération d'exécution asynchrone.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSuspend">
      <MemberSignature Language="C#" Value="public void EndSuspend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSuspend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndSuspend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSuspend (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSuspend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndSuspend : IAsyncResult -&gt; unit" Usage="iWorkflowInstanceManagement.EndSuspend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel à l'opération <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération d'interruption asynchrone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'interruption arrête temporairement une instance de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminate">
      <MemberSignature Language="C#" Value="public void EndTerminate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndTerminate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTerminate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTerminate (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTerminate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTerminate : IAsyncResult -&gt; unit" Usage="iWorkflowInstanceManagement.EndTerminate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération d'arrêt asynchrone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'arrêt met fin à une instance de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTransactedCancel">
      <MemberSignature Language="C#" Value="public void EndTransactedCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndTransactedCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTransactedCancel (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTransactedCancel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTransactedCancel : IAsyncResult -&gt; unit" Usage="iWorkflowInstanceManagement.EndTransactedCancel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedCancel(System.Guid,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération d'annulation traitée asynchrone.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTransactedRun">
      <MemberSignature Language="C#" Value="public void EndTransactedRun (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndTransactedRun(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedRun(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTransactedRun (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTransactedRun(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTransactedRun : IAsyncResult -&gt; unit" Usage="iWorkflowInstanceManagement.EndTransactedRun result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedRun(System.Guid,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération d'exécution traitée asynchrone.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTransactedSuspend">
      <MemberSignature Language="C#" Value="public void EndTransactedSuspend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndTransactedSuspend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedSuspend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTransactedSuspend (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTransactedSuspend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTransactedSuspend : IAsyncResult -&gt; unit" Usage="iWorkflowInstanceManagement.EndTransactedSuspend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération d'interruption traitée asynchrone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'interruption arrête temporairement une instance de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTransactedTerminate">
      <MemberSignature Language="C#" Value="public void EndTransactedTerminate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndTransactedTerminate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedTerminate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTransactedTerminate (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTransactedTerminate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTransactedTerminate : IAsyncResult -&gt; unit" Usage="iWorkflowInstanceManagement.EndTransactedTerminate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération d'arrêt traitée asynchrone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'arrêt met fin à une instance de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTransactedUnsuspend">
      <MemberSignature Language="C#" Value="public void EndTransactedUnsuspend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndTransactedUnsuspend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedUnsuspend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTransactedUnsuspend (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTransactedUnsuspend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTransactedUnsuspend : IAsyncResult -&gt; unit" Usage="iWorkflowInstanceManagement.EndTransactedUnsuspend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération d'annulation d'interruption traitée asynchrone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'annulation d'interruption reprend une instance de flux de travail temporairement arrêtée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnsuspend">
      <MemberSignature Language="C#" Value="public void EndUnsuspend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUnsuspend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndUnsuspend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUnsuspend (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUnsuspend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndUnsuspend : IAsyncResult -&gt; unit" Usage="iWorkflowInstanceManagement.EndUnsuspend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération d'annulation d'interruption asynchrone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'annulation d'interruption reprend une instance de flux de travail temporairement arrêtée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Run(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(Guid instanceId);" />
      <MemberSignature Language="F#" Value="abstract member Run : Guid -&gt; unit" Usage="iWorkflowInstanceManagement.Run instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(Name="Run")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à exécuter.</param>
        <summary>Démarre l'exécution de l'instance de flux de travail spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend (Guid instanceId, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Suspend(valuetype System.Guid instanceId, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Suspend(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Suspend (instanceId As Guid, reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Suspend(Guid instanceId, System::String ^ reason);" />
      <MemberSignature Language="F#" Value="abstract member Suspend : Guid * string -&gt; unit" Usage="iWorkflowInstanceManagement.Suspend (instanceId, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(Name="Suspend")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceId">Instance de flux de travail à interrompre.</param>
        <param name="reason">Raison de l'interruption de l'instance de flux de travail.</param>
        <summary>Interrompt l'instance de flux de travail spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'interruption arrête temporairement une instance de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Guid instanceId, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Terminate(valuetype System.Guid instanceId, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Terminate(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (instanceId As Guid, reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Guid instanceId, System::String ^ reason);" />
      <MemberSignature Language="F#" Value="abstract member Terminate : Guid * string -&gt; unit" Usage="iWorkflowInstanceManagement.Terminate (instanceId, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(Name="Terminate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à arrêter.</param>
        <param name="reason">Raison de l'arrêt de l'instance de flux de travail.</param>
        <summary>Arrête l'instance de flux de travail spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette opération combine les fonctionnalités d'une opération d'abandon suivie par une opération de persistance.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactedCancel">
      <MemberSignature Language="C#" Value="public void TransactedCancel (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransactedCancel(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedCancel(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransactedCancel (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransactedCancel(Guid instanceId);" />
      <MemberSignature Language="F#" Value="abstract member TransactedCancel : Guid -&gt; unit" Usage="iWorkflowInstanceManagement.TransactedCancel instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(Name="TransactedCancel")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.TransactionFlow</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à annuler.</param>
        <summary>Annule l’instance de flux de travail spécifiée dans une transaction.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactedRun">
      <MemberSignature Language="C#" Value="public void TransactedRun (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransactedRun(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedRun(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransactedRun (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransactedRun(Guid instanceId);" />
      <MemberSignature Language="F#" Value="abstract member TransactedRun : Guid -&gt; unit" Usage="iWorkflowInstanceManagement.TransactedRun instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(Name="TransactedRun")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.TransactionFlow</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à exécuter.</param>
        <summary>Exécute l’instance de flux de travail spécifiée dans une transaction.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactedSuspend">
      <MemberSignature Language="C#" Value="public void TransactedSuspend (Guid instanceId, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransactedSuspend(valuetype System.Guid instanceId, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedSuspend(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransactedSuspend (instanceId As Guid, reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransactedSuspend(Guid instanceId, System::String ^ reason);" />
      <MemberSignature Language="F#" Value="abstract member TransactedSuspend : Guid * string -&gt; unit" Usage="iWorkflowInstanceManagement.TransactedSuspend (instanceId, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(Name="TransactedSuspend")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.TransactionFlow</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à interrompre.</param>
        <param name="reason">Raison de l'interruption de l'instance de flux de travail.</param>
        <summary>Interrompt l’instance de flux de travail spécifiée dans une transaction.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'interruption arrête temporairement une instance de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactedTerminate">
      <MemberSignature Language="C#" Value="public void TransactedTerminate (Guid instanceId, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransactedTerminate(valuetype System.Guid instanceId, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedTerminate(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransactedTerminate (instanceId As Guid, reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransactedTerminate(Guid instanceId, System::String ^ reason);" />
      <MemberSignature Language="F#" Value="abstract member TransactedTerminate : Guid * string -&gt; unit" Usage="iWorkflowInstanceManagement.TransactedTerminate (instanceId, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(Name="TransactedTerminate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.TransactionFlow</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à arrêter.</param>
        <param name="reason">Raison de l'arrêt de l'instance de flux de travail.</param>
        <summary>Arrête l’instance de flux de travail spécifiée dans une transaction.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'arrêt met fin à une instance de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactedUnsuspend">
      <MemberSignature Language="C#" Value="public void TransactedUnsuspend (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransactedUnsuspend(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedUnsuspend(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransactedUnsuspend (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransactedUnsuspend(Guid instanceId);" />
      <MemberSignature Language="F#" Value="abstract member TransactedUnsuspend : Guid -&gt; unit" Usage="iWorkflowInstanceManagement.TransactedUnsuspend instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(Name="TransactedUnsuspend")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.TransactionFlow</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à reprendre.</param>
        <summary>Reprend l’instance de flux de travail spécifiée dans une transaction.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le processus d'annulation d'interruption reprend une instance de flux de travail temporairement arrêtée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unsuspend">
      <MemberSignature Language="C#" Value="public void Unsuspend (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsuspend(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Unsuspend(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unsuspend (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unsuspend(Guid instanceId);" />
      <MemberSignature Language="F#" Value="abstract member Unsuspend : Guid -&gt; unit" Usage="iWorkflowInstanceManagement.Unsuspend instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract(Name="Unsuspend")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificateur GUID de l'instance de flux de travail à reprendre.</param>
        <summary>Reprend l'instance de flux de travail spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>