<Type Name="Point3D" FullName="System.Windows.Forms.DataVisualization.Charting.Point3D">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ba253fa172c996fd0b14979ced740bb35517afb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629223" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Point3D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Point3D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Point3D" />
  <TypeSignature Language="VB.NET" Value="Public Class Point3D" />
  <TypeSignature Language="C++ CLI" Value="public ref class Point3D" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente les coordonnées d'un point de données tridimensionnel (3D). Cette classe est utilisée pour effectuer des dessins personnalisés avec des graphiques en 3D.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 N’importe quel point utilisé dans un dessin 3D, qui s’effectue à l’aide de GDI +, doit être transformé de X, Y et Z (3D) des coordonnées dans relatifs X et Y (2D) à l’aide la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> (méthode). En appelant <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, X et les valeurs Y de la <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objets sont modifiées pour refléter l’espace 3D. Nouvelle X et Y points peuvent ensuite être utilisées pour les appels de méthode GDI + : la valeur Z est ensuite ignorée : après avoir été modifiés en coordonnées en pixels absolues à l’aide de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> (méthode).  
  
 Notez que la coordonnée Z peut être inférieure à zéro (située derrière une zone de graphique) ou supérieure à 100 (située devant une zone de graphique).  
  
 Pour activer des graphiques 3D et employer leurs styles, utilisez la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> propriété. La <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> classe n’est pas utilisée pour les styles 3D.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.Point3D" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point3D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point3D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.Point3D" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point3D (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 x, float32 y, float32 z) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Single, y As Single, z As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point3D(float x, float y, float z);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">Coordonnée X du point en 3D.</param>
        <param name="y">Coordonnée Y du point en 3D.</param>
        <param name="z">Coordonnée Z qui représente l'intensité du point en 3D.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint" /> avec les coordonnées X, Y et Z spécifiées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointF">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF PointF { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF PointF" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF" />
      <MemberSignature Language="VB.NET" Value="Public Property PointF As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::PointF PointF { System::Drawing::PointF get(); void set(System::Drawing::PointF value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une structure <see cref="T:System.Drawing.PointF" /> qui stocke les coordonnées X et Y d'un point en 3D.</summary>
        <value>Structure <see cref="T:System.Drawing.PointF" /> qui stocke les coordonnées X et Y d'un point en 3D.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 N’importe quel point utilisé dans un dessin 3D, qui s’effectue à l’aide de GDI +, doit être transformé à partir de X, Y et Z (3D) coordonnées en coordonnées X et Y (2D) à l’aide de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> (méthode). Cette méthode prend un tableau de <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objets en tant que son seul paramètre. En appelant <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, les valeurs X et Y sont modifiées pour refléter l’espace 3D.  
  
 Ces nouvelles coordonnées X et Y sont ensuite converties en coordonnées absolues, en utilisant une méthode telle que la <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> (méthode). Après avoir converti les coordonnées, la <xref:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF%2A> propriété de chaque objet Point3D peut être utilisée pour toute méthode GDI + qui prend un <xref:System.Drawing.PointF> comme paramètre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float X { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la coordonnée X d'un point en 3D.</summary>
        <value>
          <see langword="float" /> qui représente la coordonnée X d'un point en 3D.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 N’importe quel point utilisé dans un dessin 3D, qui s’effectue à l’aide de GDI +, doit être transformé à partir de X, Y et Z (3D) coordonnées en coordonnées X et Y (2D) à l’aide de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> (méthode). Cette méthode prend un tableau d’objets de Point3D comme son seul paramètre. En appelant le <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> (méthode), les valeurs X et Y sont modifiées pour refléter l’espace 3D.  
  
 Ces nouvelles coordonnées X et Y sont ensuite converties en coordonnées absolues à l’aide de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> (méthode). Elles sont ensuite utilisées pour les appels de méthode GDI +.  
  
 Relatif coordonnée X peut être obtenue à partir de la valeur de l’axe en appelant le <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Y { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la coordonnée Y d'un point en 3D.</summary>
        <value>Valeur <see langword="float" /> qui représente la coordonnée Y d'un point en 3D.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 N’importe quel point utilisé dans un dessin 3D, qui s’effectue à l’aide de GDI +, doit être transformé à partir de X, Y et Z (3D) coordonnées en coordonnées X et Y (2D) à l’aide de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> (méthode). Cette méthode prend un tableau d’objets de Point3D comme son seul paramètre. En appelant le <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> (méthode), les valeurs X et Y sont modifiées pour refléter l’espace 3D.  
  
 Ces nouvelles coordonnées X et Y sont ensuite converties en coordonnées absolues à l’aide de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> (méthode). Elles sont ensuite utilisées pour les appels de méthode GDI +.  
  
 Une coordonnée Y relative peut être obtenue à partir d’une valeur d’axe à l’aide du <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public float Z { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Z" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.Z" />
      <MemberSignature Language="VB.NET" Value="Public Property Z As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Z { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la coordonnée Z d'un point en 3D.</summary>
        <value>Coordonnée Z d'un point en 3D mesurée en pourcentage de l'intensité de la zone de graphique pertinente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété Z est toujours exprimée en pourcentage de la profondeur de la zone de graphique approprié. Avec des graphiques 3D, les coordonnées Z sont relatives et ont la valeur 0 pour le mur arrière de la zone de graphique et la valeur 100 pour le mur avant de la zone de graphique.  
  
 **Remarque** Z cette propriété est peut-être inférieur à zéro (située derrière une zone de graphique) ou supérieure à 100 (située devant une zone de graphique).  
  
 N’importe quel point utilisé dans un dessin 3D, qui s’effectue à l’aide de GDI +, doit être transformé à partir de X, Y et Z (3D) coordonnées en coordonnées X et Y (2D) à l’aide de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> (méthode). Cette méthode prend un tableau d’objets de Point3D comme son seul paramètre. En appelant le <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> (méthode), les valeurs X et Y sont modifiées pour refléter l’espace 3D.  
  
 Ces nouvelles coordonnées X et Y sont ensuite converties en coordonnées absolues à l’aide de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> (méthode). Elles sont ensuite utilisées pour les appels de méthode GDI +.  
  
 Les coordonnées Z relatives peuvent être obtenues pour la série à l’aide de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A> et <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A> méthodes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>