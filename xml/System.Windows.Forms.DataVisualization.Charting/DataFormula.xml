<Type Name="DataFormula" FullName="System.Windows.Forms.DataVisualization.Charting.DataFormula">
  <TypeSignature Language="C#" Value="public class DataFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataFormula" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c8e12-101">Fournit les propriétés et méthodes permettant de préparer les données de série pour l'analyse technique, d'appliquer des formules à ces données et de préparer les données de sortie pour les afficher sous forme de graphique.</span><span class="sxs-lookup"><span data-stu-id="c8e12-101">Provides properties and methods to prepare series data for technical analysis, apply formulas on the series data and prepare output data to be displayed as a chart.</span></span> <span data-ttu-id="c8e12-102">Les calculs réels sont exécutés dans la classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />.</span><span class="sxs-lookup"><span data-stu-id="c8e12-102">The actual calculations are performed in the <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" /> class.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataFormula ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataFormula();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8e12-103">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataFormula" />.</span><span class="sxs-lookup"><span data-stu-id="c8e12-103">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataFormula" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySeriesValues">
      <MemberSignature Language="C#" Value="public void CopySeriesValues (string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopySeriesValues(string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.CopySeriesValues(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopySeriesValues (inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopySeriesValues(System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeries"><span data-ttu-id="c8e12-104">Liste séparée par des virgules des noms de série de données d'entrée et des noms de valeurs X et Y facultatives.</span><span class="sxs-lookup"><span data-stu-id="c8e12-104">A comma-separated list of input data series names and optional X and Y value names.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="c8e12-105">Liste séparée par des virgules des noms de série de données de sortie et des noms de valeurs X et Y facultatives.</span><span class="sxs-lookup"><span data-stu-id="c8e12-105">A comma-separated list of output data series names and optional X and Y value names.</span></span></param>
        <summary><span data-ttu-id="c8e12-106">Copie une série ou la valeur X ou Y spécifique.</span><span class="sxs-lookup"><span data-stu-id="c8e12-106">Copies a series or the specific X or Y value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FinancialFormula">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8e12-107">Appelle une méthode à partir d'une formule.</span><span class="sxs-lookup"><span data-stu-id="c8e12-107">Calls a method from a formula.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName"><span data-ttu-id="c8e12-108">Nom de la formule à appeler.</span><span class="sxs-lookup"><span data-stu-id="c8e12-108">The name of the formula to call.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="c8e12-109">Série d'entrée dans laquelle le calcul est exécuté.</span><span class="sxs-lookup"><span data-stu-id="c8e12-109">The input series in which calculation is performed.</span></span></param>
        <summary><span data-ttu-id="c8e12-110">Appelle une méthode d'un module de formule avec le nom de formule et la série d'entrée spécifiés.</span><span class="sxs-lookup"><span data-stu-id="c8e12-110">Calls a method from a formula module with the specified formula name and input series.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName"><span data-ttu-id="c8e12-111">Nom de la formule à appeler.</span><span class="sxs-lookup"><span data-stu-id="c8e12-111">The name of the formula to call.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="c8e12-112">Liste séparée par des virgules des noms de série d'entrée et des noms de valeurs X et Y facultatives.</span><span class="sxs-lookup"><span data-stu-id="c8e12-112">A comma-separated list of input series names and optional X and Y value names.</span></span></param>
        <summary><span data-ttu-id="c8e12-113">Appelle une méthode d'un module de formule avec le nom de formule et la série d'entrée spécifiés.</span><span class="sxs-lookup"><span data-stu-id="c8e12-113">Calls a method from a formula module with the specified formula name and input series.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName"><span data-ttu-id="c8e12-114">Nom de la formule à appeler.</span><span class="sxs-lookup"><span data-stu-id="c8e12-114">The name of the formula to call.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="c8e12-115">Série d'entrée dans laquelle le calcul est exécuté.</span><span class="sxs-lookup"><span data-stu-id="c8e12-115">The input series in which calculation is performed.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="c8e12-116">Série de sortie dans laquelle le résultat du calcul est enregistré.</span><span class="sxs-lookup"><span data-stu-id="c8e12-116">The output series in which the result of the calculation is stored.</span></span></param>
        <summary><span data-ttu-id="c8e12-117">Appelle une méthode d'un module de formule avec le nom de formule spécifié, et les noms de la série d'entrée et de sortie.</span><span class="sxs-lookup"><span data-stu-id="c8e12-117">Calls a method from a formula module with the specified formula name, and the names of the input and output series.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName"><span data-ttu-id="c8e12-118">Nom de la formule à appeler.</span><span class="sxs-lookup"><span data-stu-id="c8e12-118">The name of the formula to call.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="c8e12-119">Liste séparée par des virgules des noms de série d'entrée et des noms de valeurs X et Y facultatives.</span><span class="sxs-lookup"><span data-stu-id="c8e12-119">A comma-separated list of input series names and optional X and Y value names.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="c8e12-120">Liste séparée par des virgules des noms de série de sortie et des noms de valeurs X et Y facultatives.</span><span class="sxs-lookup"><span data-stu-id="c8e12-120">A comma-separated list of output series names and optional X and Y value names.</span></span></param>
        <summary><span data-ttu-id="c8e12-121">Appelle une méthode d'un module de formule avec le nom de formule, la série d'entrée et la série de sortie spécifiés.</span><span class="sxs-lookup"><span data-stu-id="c8e12-121">Calls a method from a formula module with the specified formula name, input and output series.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, parameters As String, inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ parameters, System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="parameters" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName"><span data-ttu-id="c8e12-122">Nom de la formule à appeler.</span><span class="sxs-lookup"><span data-stu-id="c8e12-122">The name of the formula to call.</span></span></param>
        <param name="parameters"><span data-ttu-id="c8e12-123">Paramètres associés à la formule.</span><span class="sxs-lookup"><span data-stu-id="c8e12-123">The parameters associated with the formula.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="c8e12-124">Série d'entrée dans laquelle le calcul est exécuté.</span><span class="sxs-lookup"><span data-stu-id="c8e12-124">The input series in which calculation is performed.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="c8e12-125">Série de sortie dans laquelle le résultat du calcul est enregistré.</span><span class="sxs-lookup"><span data-stu-id="c8e12-125">The output series in which the result of the calculation is stored.</span></span></param>
        <summary><span data-ttu-id="c8e12-126">Appelle une méthode d'un module de formule avec le nom de formule et les paramètres spécifiés, et les noms de la série d'entrée et de sortie.</span><span class="sxs-lookup"><span data-stu-id="c8e12-126">Calls a method from a formula module with the specified formula name and parameters, and the names of the input and output series.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, parameters As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ parameters, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="parameters" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName"><span data-ttu-id="c8e12-127">Nom de la formule à appeler.</span><span class="sxs-lookup"><span data-stu-id="c8e12-127">The name of the formula to call.</span></span></param>
        <param name="parameters"><span data-ttu-id="c8e12-128">Paramètres associés à la formule.</span><span class="sxs-lookup"><span data-stu-id="c8e12-128">The parameters associated with the formula.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="c8e12-129">Liste séparée par des virgules des noms de série d'entrée et des noms de valeurs X et Y facultatives.</span><span class="sxs-lookup"><span data-stu-id="c8e12-129">A comma-separated list of input series names and optional X and Y value names.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="c8e12-130">Liste séparée par des virgules des noms de série de sortie et des noms de valeurs X et Y facultatives.</span><span class="sxs-lookup"><span data-stu-id="c8e12-130">A comma-separated list of output series names and optional X and Y value names.</span></span></param>
        <summary><span data-ttu-id="c8e12-131">Appelle une méthode d'un module de formule avec le nom de formule et les paramètres spécifiés à l'aide des séries d'entrée et de sortie spécifiées.</span><span class="sxs-lookup"><span data-stu-id="c8e12-131">Calls a method from a formula module with the specified formula name and parameters, using the specified input and output series.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyPointIgnored">
      <MemberSignature Language="C#" Value="public bool IsEmptyPointIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyPointIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmptyPointIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmptyPointIgnored { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8e12-132">Obtient ou définit un indicateur qui détermine si les points vides sont ignorés lors des calculs.</span><span class="sxs-lookup"><span data-stu-id="c8e12-132">Gets or sets a flag that indicates whether empty points are ignored while performing calculations.</span></span></summary>
        <value>
          <span data-ttu-id="c8e12-133"><see langword="true" /> si les points vides sont ignorés lors de l'exécution des calculs ; <see langword="false" /> si les points vides sont traités comme des zéros.</span><span class="sxs-lookup"><span data-stu-id="c8e12-133"><see langword="true" /> if empty points are ignored while performing calculations; <see langword="false" /> if empty points are treated as zeroes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartFromFirst">
      <MemberSignature Language="C#" Value="public bool IsStartFromFirst { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStartFromFirst" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst" />
      <MemberSignature Language="VB.NET" Value="Public Property IsStartFromFirst As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStartFromFirst { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8e12-134">Obtient ou définit un indicateur qui détermine si les formules telles qu'une moyenne enchaînée doivent commencer à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="c8e12-134">Gets or sets a flag that indicates whether to start formulas such as "rolling average" from zero.</span></span></summary>
        <value>
          <span data-ttu-id="c8e12-135"><see langword="true" /> si les formules telles qu'une moyenne enchaînée commencent à partir de zéro ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8e12-135"><see langword="true" /> if formulas such as "rolling average" start from zero; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statistics">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.StatisticFormula Statistics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.StatisticFormula Statistics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Statistics As StatisticFormula" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::StatisticFormula ^ Statistics { System::Windows::Forms::DataVisualization::Charting::StatisticFormula ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.StatisticFormula</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8e12-136">Obtient une référence à la classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />.</span><span class="sxs-lookup"><span data-stu-id="c8e12-136">Gets a reference to the <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" /> class.</span></span></summary>
        <value><span data-ttu-id="c8e12-137">Référence à l'objet <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />.</span><span class="sxs-lookup"><span data-stu-id="c8e12-137">A reference to the <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>