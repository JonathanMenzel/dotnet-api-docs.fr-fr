<Type Name="IDataPointFilter" FullName="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8dc551a6c0e0f5d454edee63d62b3a688a4f7203" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36359382" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataPointFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataPointFilter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataPointFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataPointFilter" />
  <TypeSignature Language="F#" Value="type IDataPointFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Expose la méthode <see cref="M:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)" /> qui permet aux données <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> d'être filtrées de façon personnalisée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> expose l’interface du <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> (méthode), qui prend un point de données spécifique au sein d’une série et retourne un `Boolean` valeur qui détermine si ce point de données sera filtré.  
  
 Pour effectuer un filtrage personnalisé :  
  
-   Dérivez une classe nouvelle ou existante à partir de cette interface.  
  
-   Remplacer la <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> méthode pour fournir la logique de filtrage personnalisée.  
  
-   Pour lancer l’opération de filtrage, appelez l’une de la `Filter` méthodes dans le <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> classe qui prend un <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> objet en tant que premier paramètre.  
  
 Pour plus d’exemples de code source, consultez la <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> (méthode).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FilterDataPoint">
      <MemberSignature Language="C#" Value="public bool FilterDataPoint (System.Windows.Forms.DataVisualization.Charting.DataPoint point, System.Windows.Forms.DataVisualization.Charting.Series series, int pointIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterDataPoint(class System.Windows.Forms.DataVisualization.Charting.DataPoint point, class System.Windows.Forms.DataVisualization.Charting.Series series, int32 pointIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterDataPoint(System::Windows::Forms::DataVisualization::Charting::DataPoint ^ point, System::Windows::Forms::DataVisualization::Charting::Series ^ series, int pointIndex);" />
      <MemberSignature Language="F#" Value="abstract member FilterDataPoint : System.Windows.Forms.DataVisualization.Charting.DataPoint * System.Windows.Forms.DataVisualization.Charting.Series * int -&gt; bool" Usage="iDataPointFilter.FilterDataPoint (point, series, pointIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Forms.DataVisualization.Charting.DataPoint" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="pointIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="point">Objet <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> à filtrer.</param>
        <param name="series">Objet <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> auquel le point de données appartient.</param>
        <param name="pointIndex">Index du point de données qui détermine sa position dans la série.</param>
        <summary>Détermine si un point de données particulier de la série sera filtré.</summary>
        <returns>
          <see langword="True" /> si le point de données est supprimé ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode doit être appelée pour chaque point de données dans une série et retourne un `Boolean` valeur qui indique si un point de données doit être filtré.  
  
 Pour permettre le filtrage personnalisé, dérivez une classe nouvelle ou existante à partir de la <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> de l’interface, puis implémentez cette méthode. Fournir une logique de correspondance des critères personnalisés, puis retourner `true` ou `false` pour marquer les points de données à filtrer. Une fois que cette méthode a été implémentée, utilisez une de la `Filter` des définitions de méthode dans le <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> classe qui prend un <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> objet en tant que paramètre pour effectuer le filtrage.  
  
 Les points filtrés, par défaut, sont supprimés à partir d’une série. Ils peuvent également être affichés comme des points vides en définissant la valeur de la <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A> propriété `true`.  
  
 Points filtrés peuvent également être marqués comme filtrés s’ils ne correspondent pas les critères de filtrage, telle que déterminée par la <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A> valeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>