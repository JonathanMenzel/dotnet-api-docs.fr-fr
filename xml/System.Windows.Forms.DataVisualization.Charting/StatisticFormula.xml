<Type Name="StatisticFormula" FullName="System.Windows.Forms.DataVisualization.Charting.StatisticFormula">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe94b8b43688179da9c74296687175f9fcce213d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36358277" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StatisticFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatisticFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class StatisticFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class StatisticFormula" />
  <TypeSignature Language="F#" Value="type StatisticFormula = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="60abb-101">Calcule des formules statistiques.</span>
      <span class="sxs-lookup">
        <span data-stu-id="60abb-101">Calculates statistical formulas.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60abb-102">Les formules peuvent être faiblement regroupées dans les catégories suivantes : distributions, notamment les distributions inverses ; tests ; et formules statistiques de base.</span><span class="sxs-lookup"><span data-stu-id="60abb-102">Formulas can be loosely grouped into the following categories: distributions, including inverse distributions; tests; and basic statistical formulas.</span></span> <span data-ttu-id="60abb-103">Chaque groupe possède des caractéristiques communes en ce qui concerne leurs valeurs d’entrée et de retournés.</span><span class="sxs-lookup"><span data-stu-id="60abb-103">Each group has common characteristics with respect to their input and return values.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anova">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova (double probability, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova(float64 probability, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Anova (probability As Double, inputSeriesNames As String) As AnovaResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::AnovaResult ^ Anova(double probability, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Anova : double * string -&gt; System.Windows.Forms.DataVisualization.Charting.AnovaResult" Usage="statisticFormula.Anova (probability, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AnovaResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="60abb-104">La valeur alpha, qui correspond à la probabilité que l’hypothèse soit rejetée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-104">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="60abb-105">La plage autorisée est 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-105">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="inputSeriesNames">
          <span data-ttu-id="60abb-106">Liste délimitée par des virgules de noms de série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-106">A comma-delimited list of input series names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-107">Exécute un test ANOVA pour déterminer s'il y a une différence statistiquement significative entre les valeurs moyennes d'au moins deux groupes de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-107">Performs an ANOVA test to determine whether there is a statistically significant difference between the mean values of two or more groups of data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-108">Objet <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnovaResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-108">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnovaResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60abb-109">Un test ANOVA est utilisé pour tester la différence entre les moyens de deux ou plusieurs groupes de données.</span><span class="sxs-lookup"><span data-stu-id="60abb-109">An ANOVA test is used to test the difference between the means of two or more groups of data.</span></span>  
  
 <span data-ttu-id="60abb-110">Deux ou plusieurs groupes de données de série doivent être spécifiés, et chaque série doit avoir le même nombre de points de données ; Sinon, une exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="60abb-110">Two or more groups of series data must be specified, and each series must have the same number of data points; otherwise, an exception will be raised.</span></span>  
  
 <span data-ttu-id="60abb-111">Si une série d’entrée spécifiée n’existe pas dans le <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> au moment de l’appel de méthode, une exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="60abb-111">If a specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaFunction">
      <MemberSignature Language="C#" Value="public double BetaFunction (double m, double n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 BetaFunction(float64 m, float64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaFunction (m As Double, n As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BetaFunction(double m, double n);" />
      <MemberSignature Language="F#" Value="member this.BetaFunction : double * double -&gt; double" Usage="statisticFormula.BetaFunction (m, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double" />
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="60abb-112">Première valeur de la fonction Beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-112">The first value for the beta function.</span>
          </span>
        </param>
        <param name="n">
          <span data-ttu-id="60abb-113">Deuxième valeur de la fonction Beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-113">The second value for the beta function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-114">Retourne la valeur de fonction Beta pour deux valeurs données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-114">Returns the beta function value for two given values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-115">Valeur <see langword="double" /> qui représente la fonction Beta pour les deux valeurs données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-115">A <see langword="double" /> value that represents the beta function for the two given values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60abb-116">Cette méthode retourne la valeur de la fonction beta pour deux valeurs de données qui sont spécifiées par `m` et `n`.</span><span class="sxs-lookup"><span data-stu-id="60abb-116">This method returns the beta function value for two given values that are specified by `m` and `n`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlation">
      <MemberSignature Language="C#" Value="public double Correlation (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Correlation(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Correlation (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Correlation(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Correlation : string * string -&gt; double" Usage="statisticFormula.Correlation (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">
          <span data-ttu-id="60abb-117">Premier nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-117">The first input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="60abb-118">Second nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-118">The second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-119">Retourne la valeur de corrélation pour deux séries de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-119">Returns the correlation value for two data series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-120">Valeur <see langword="double" /> qui représente la corrélation entre deux séries de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-120">A <see langword="double" /> value that represents the correlation between two data series.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60abb-121">Corrélation mesure la relation entre deux jeux de données qui sont mis à l’échelle pour être indépendantes de l’unité de mesure.</span><span class="sxs-lookup"><span data-stu-id="60abb-121">Correlation measures the relationship between two data sets that are scaled to be independent of the unit of measurement.</span></span> <span data-ttu-id="60abb-122">Le <xref:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation%2A> méthode retourne la covariance de deux jeux de données divisé par le produit de leur écart et toujours comprise entre -1 et 1.</span><span class="sxs-lookup"><span data-stu-id="60abb-122">The <xref:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation%2A> method returns the covariance of two data sets divided by the product of their standard deviations, and always ranges from -1 to 1.</span></span>  
  
 <span data-ttu-id="60abb-123">Utiliser la corrélation pour déterminer si deux plages de données se déplacent ensemble ; Autrement dit, si les valeurs élevées d’un jeu sont associées à des valeurs élevées de l’autre (corrélation positive), si les petites valeurs d’un jeu sont associées à des valeurs élevées de l’autre (corrélation négative), ou si les valeurs dans les deux ensembles sont non liées () corrélation proche de zéro).</span><span class="sxs-lookup"><span data-stu-id="60abb-123">Use correlation to determine whether two ranges of data move together; that is, whether large values of one set are associated with large values of the other (positive correlation), whether small values of one set are associated with large values of the other (negative correlation), or whether values in both sets are unrelated (correlation near zero).</span></span>  
  
 <span data-ttu-id="60abb-124">Si une série d’entrée spécifiée n’existe pas dans la collection de séries au moment de l’appel de méthode, une exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="60abb-124">If a specified input series does not exist in the series collection at the time of the method call, an exception will be thrown.</span></span> <span data-ttu-id="60abb-125">Une exception est également levée si la série spécifiée n’ont pas le même nombre de points de données.</span><span class="sxs-lookup"><span data-stu-id="60abb-125">An exception will also be raised if the specified series do not have the same number of data points.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance">
      <MemberSignature Language="C#" Value="public double Covariance (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Covariance(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Covariance : string * string -&gt; double" Usage="statisticFormula.Covariance (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">
          <span data-ttu-id="60abb-126">Premier nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-126">The first input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="60abb-127">Second nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-127">The second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-128">Retourne la valeur de covariance pour deux séries de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-128">Returns the covariance value for two data series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-129">Valeur <see langword="double" /> qui représente la covariance entre deux séries de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-129">A <see langword="double" /> value that represents the covariance between two data series.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FDistribution">
      <MemberSignature Language="C#" Value="public double FDistribution (double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 FDistribution(float64 value, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FDistribution (value As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FDistribution(double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.FDistribution : double * int * int -&gt; double" Usage="statisticFormula.FDistribution (value, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="60abb-130">Valeur F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-130">The F value.</span>
          </span>
        </param>
        <param name="firstDegreeOfFreedom">
          <span data-ttu-id="60abb-131">Premier degré de liberté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-131">First degree of freedom.</span>
          </span>
        </param>
        <param name="secondDegreeOfFreedom">
          <span data-ttu-id="60abb-132">Deuxième degré de liberté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-132">Second degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-133">Retourne la probabilité de fonction distribution F cumulative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-133">Returns the cumulative F distribution function probability.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-134">Valeur <see langword="double" /> qui représente la probabilité de fonction distribution F cumulative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-134">A <see langword="double" /> value that represents the cumulative F distribution function probability.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.FTestResult FTest (double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.FTestResult FTest(float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FTest (probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As FTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::FTestResult ^ FTest(double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.FTest : double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.FTestResult" Usage="statisticFormula.FTest (probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="60abb-135">La valeur alpha, qui correspond à la probabilité que l’hypothèse soit rejetée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-135">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="60abb-136">La plage autorisée est 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-136">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="60abb-137">Premier nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-137">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="60abb-138">Second nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-138">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-139">Exécute un test F à deux exemples à l'aide de la distribution F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-139">Performs a two-sample F Test using the F distribution.</span>
          </span>
          <span data-ttu-id="60abb-140">Ce test est utilisé pour déterminer si les exemples ont des variations différentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-140">This test is used to determine if the samples have different variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-141">Objet <see cref="T:System.Windows.Forms.DataVisualization.Charting.FTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-141">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.FTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaFunction">
      <MemberSignature Language="C#" Value="public double GammaFunction (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GammaFunction(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaFunction (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaFunction(double value);" />
      <MemberSignature Language="F#" Value="member this.GammaFunction : double -&gt; double" Usage="statisticFormula.GammaFunction value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="60abb-142">Variable d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-142">The input variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-143">Retourne la valeur de fonction gamma pour la variable donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-143">Returns the gamma function value for the given variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-144">Valeur <see langword="double" /> qui représente la fonction gamma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-144">A <see langword="double" /> value that represents the gamma function.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseFDistribution">
      <MemberSignature Language="C#" Value="public double InverseFDistribution (double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseFDistribution(float64 probability, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseFDistribution (probability As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseFDistribution(double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseFDistribution : double * int * int -&gt; double" Usage="statisticFormula.InverseFDistribution (probability, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="60abb-145">La valeur alpha, qui correspond à la probabilité que l’hypothèse soit rejetée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-145">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="60abb-146">La plage autorisée est 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-146">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstDegreeOfFreedom">
          <span data-ttu-id="60abb-147">Premier degré de liberté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-147">First degree of freedom.</span>
          </span>
        </param>
        <param name="secondDegreeOfFreedom">
          <span data-ttu-id="60abb-148">Deuxième degré de liberté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-148">Second degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-149">Retourne l’inverse de la distribution cumulative F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-149">Returns the inverse of the F cumulative distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-150">Une valeur <see langword="double" /> de la fonction de distribution F inverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-150">A <see langword="double" /> value from the inverse F distribution function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60abb-151">Cette méthode retourne la valeur F pour la probabilité de distribution F donnée.</span><span class="sxs-lookup"><span data-stu-id="60abb-151">This method returns the F value for the given F distribution probability.</span></span>  
  
 <span data-ttu-id="60abb-152">La distribution F peut être utilisée dans un test F qui compare le degré de variabilité dans les deux jeux de données.</span><span class="sxs-lookup"><span data-stu-id="60abb-152">The F distribution can be used in an F-test that compares the degree of variability in two data sets.</span></span>  
  
 <span data-ttu-id="60abb-153">Cette méthode peut retourner une exception selon les valeurs de paramètre.</span><span class="sxs-lookup"><span data-stu-id="60abb-153">This method may return an exception depending on the parameter values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="60abb-154">Condition : impossible de continuer le calcul à l’aide des valeurs de paramètres spécifiées en raison de la limitation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-154">Condition: Cannot continue calculation using specified parameter values because of limitation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InverseNormalDistribution">
      <MemberSignature Language="C#" Value="public double InverseNormalDistribution (double probability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseNormalDistribution(float64 probability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseNormalDistribution (probability As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseNormalDistribution(double probability);" />
      <MemberSignature Language="F#" Value="member this.InverseNormalDistribution : double -&gt; double" Usage="statisticFormula.InverseNormalDistribution probability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="60abb-155">La valeur alpha, qui correspond à la probabilité que l’hypothèse soit rejetée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-155">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="60abb-156">La plage autorisée est 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-156">The allowable range is 0-1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-157">Retourne l'inverse de la distribution cumulative normale standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-157">Returns the inverse of the standard normal cumulative distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-158">Valeur <see langword="double" /> de la fonction de distribution cumulative normale standard inverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-158">A <see langword="double" /> value from the inverse standard normal cumulative distribution function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60abb-159">Cette méthode retourne la valeur F pour la probabilité de distribution F donnée.</span><span class="sxs-lookup"><span data-stu-id="60abb-159">This method returns the F value for the given F distribution probability.</span></span>  
  
 <span data-ttu-id="60abb-160">Il est supposé que la distribution a une moyenne de 0 (zéro) et un écart type égal à un.</span><span class="sxs-lookup"><span data-stu-id="60abb-160">It is assumed that the distribution has a mean of 0 (zero) and a standard deviation of one.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseTDistribution">
      <MemberSignature Language="C#" Value="public double InverseTDistribution (double probability, int degreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseTDistribution(float64 probability, int32 degreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseTDistribution (probability As Double, degreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseTDistribution(double probability, int degreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseTDistribution : double * int -&gt; double" Usage="statisticFormula.InverseTDistribution (probability, degreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="60abb-161">La valeur alpha, qui correspond à la probabilité que l’hypothèse soit rejetée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-161">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="60abb-162">La plage autorisée est 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-162">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="degreeOfFreedom">
          <span data-ttu-id="60abb-163">Degré de liberté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-163">The degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-164">Retourne la valeur t inverse de la distribution t Students comme fonction de probabilité et de degré de liberté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-164">Returns the inverse t-value of the Students t-distribution as a function of probability and degree of freedom.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-165">Valeur <see langword="double" /> qui représente la distribution T inverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-165">A <see langword="double" /> value that represents the inverse T distribution.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60abb-166">Cette méthode retourne la valeur t pour la probabilité de distribution T donnée.</span><span class="sxs-lookup"><span data-stu-id="60abb-166">This method returns the t value for the given T distribution probability.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mean">
      <MemberSignature Language="C#" Value="public double Mean (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Mean(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Mean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mean (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Mean(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Mean : string -&gt; double" Usage="statisticFormula.Mean inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="60abb-167">Nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-167">Input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-168">Retourne la moyenne de tous les points de données stockés dans la série spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-168">Returns the average of all data points stored in the specified series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-169">Valeur <see langword="double" /> qui représente la moyenne de tous les points de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-169">A <see langword="double" /> value that represents the average of all data points.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60abb-170">Utilisez cette méthode pour calculer la moyenne (autrement dit, la moyenne), des points stockés dans une série.</span><span class="sxs-lookup"><span data-stu-id="60abb-170">Use this method to calculate the mean (that is, the average) of the points stored in a series.</span></span>  
  
 <span data-ttu-id="60abb-171">Si la série d’entrée spécifiée n’existe pas dans le <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> au moment de l’appel de méthode, une exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="60abb-171">If the specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public double Median (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Median(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Median(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Median (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Median(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Median : string -&gt; double" Usage="statisticFormula.Median inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="60abb-172">Nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-172">Input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-173">Retourne la valeur médiane de tous les points de données dans la série spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-173">Returns the median of all data points in the specified series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-174">Une valeur <see langword="double" /> qui représente la valeur médiane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-174">A <see langword="double" /> value that represents the median.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60abb-175">Utilisez cette méthode pour calculer la valeur médiane des points stockés dans une série.</span><span class="sxs-lookup"><span data-stu-id="60abb-175">Use this method to calculate the median of the points stored in a series.</span></span>  
  
 <span data-ttu-id="60abb-176">La valeur médiane est la valeur centrale d’un exemple de jeu, où la moitié des membres sont une plus grande taille et la moitié des membres sont de taille inférieure.</span><span class="sxs-lookup"><span data-stu-id="60abb-176">The median is the middle value of a sample set, where half of the members are greater in size and half the members are lesser in size.</span></span>  
  
 <span data-ttu-id="60abb-177">Si la série d’entrée spécifiée n’existe pas dans le <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> au moment de l’appel de méthode, une exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="60abb-177">If the specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalDistribution">
      <MemberSignature Language="C#" Value="public double NormalDistribution (double zValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 NormalDistribution(float64 zValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormalDistribution (zValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormalDistribution(double zValue);" />
      <MemberSignature Language="F#" Value="member this.NormalDistribution : double -&gt; double" Usage="statisticFormula.NormalDistribution zValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="zValue">
          <span data-ttu-id="60abb-178">Valeur Z pour laquelle la probabilité est obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-178">The Z value for which the probability is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-179">Retourne la probabilité pour la fonction distribution cumulative normale standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-179">Returns the probability for the standard normal cumulative distribution function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-180">Valeur <see langword="double" /> de la fonction distribution cumulative normale standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-180">A <see langword="double" /> value from the standard normal cumulative distribution function.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TDistribution">
      <MemberSignature Language="C#" Value="public double TDistribution (double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 TDistribution(float64 value, int32 degreeOfFreedom, bool oneTail) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TDistribution (value As Double, degreeOfFreedom As Integer, oneTail As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TDistribution(double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="F#" Value="member this.TDistribution : double * int * bool -&gt; double" Usage="statisticFormula.TDistribution (value, degreeOfFreedom, oneTail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
        <Parameter Name="oneTail" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="60abb-181">Valeur T</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-181">The T value</span>
          </span>
        </param>
        <param name="degreeOfFreedom">
          <span data-ttu-id="60abb-182">Degré de liberté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-182">Degree of freedom</span>
          </span>
        </param>
        <param name="oneTail">
          <span data-ttu-id="60abb-183">Si <see langword="true" />, une distribution unilatérale est utilisée; sinon, une distribution bilatérale est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-183">If <see langword="true" />, a one-tailed distribution is used; otherwise, a two-tailed distribution is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-184">Retourne la probabilité pour la distribution T (distribution de Student).</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-184">Returns the probability for the T distribution (Student's distribution).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-185">Valeur <see langword="double" /> qui représente une fonction distribution cumulative T.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-185">A <see langword="double" /> value that represents a T Distribution cumulative function.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestEqualVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestEqualVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestEqualVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestEqualVariances : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestEqualVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="60abb-186">Test d'hypothèse sur la différence de moyenne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-186">Hypothesized mean difference.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="60abb-187">La valeur alpha, qui correspond à la probabilité que l’hypothèse soit rejetée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-187">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="60abb-188">La plage autorisée est 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-188">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="60abb-189">Premier nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-189">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="60abb-190">Second nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-190">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-191">Exécute un test T à l'aide de la distribution de Student (distribution T) avec des variances égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-191">Performs a T Test using Student's distribution (T distribution) with equal variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-192">Objet <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-192">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestPaired">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestPaired (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestPaired(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestPaired : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestPaired (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="60abb-193">Test d'hypothèse sur la différence de moyenne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-193">Hypothesized mean difference.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="60abb-194">La valeur alpha, qui correspond à la probabilité que l’hypothèse soit rejetée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-194">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="60abb-195">La plage autorisée est 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-195">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="60abb-196">Premier nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-196">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="60abb-197">Second nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-197">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-198">Exécute un test T à l'aide de la distribution de Student (distribution T) avec des échantillons appariés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-198">Performs a T Test using Student's distribution (T distribution) with paired samples.</span>
          </span>
          <span data-ttu-id="60abb-199">Utile dans le cas d'un appariement naturel d'observations dans les exemples.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-199">This is useful when there is a natural pairing of observations in samples.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-200">Objet <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-200">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestUnequalVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestUnequalVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestUnequalVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestUnequalVariances : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestUnequalVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="60abb-201">Test d'hypothèse sur la différence de moyenne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-201">Hypothesized mean difference.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="60abb-202">La valeur alpha, qui correspond à la probabilité que l’hypothèse soit rejetée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-202">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="60abb-203">La plage autorisée est 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-203">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="60abb-204">Premier nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-204">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="60abb-205">Second nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-205">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-206">Exécute un test T à l'aide de la distribution de Student (distribution T) avec des variances inégales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-206">Performs a T Test using Student's distribution (T distribution) with unequal variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-207">Objet <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-207">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variance">
      <MemberSignature Language="C#" Value="public double Variance (string inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Variance(string inputSeriesName, bool sampleVariance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Variance (inputSeriesName As String, sampleVariance As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Variance(System::String ^ inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="F#" Value="member this.Variance : string * bool -&gt; double" Usage="statisticFormula.Variance (inputSeriesName, sampleVariance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="sampleVariance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="60abb-208">Nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-208">The input series name.</span>
          </span>
        </param>
        <param name="sampleVariance">
          <span data-ttu-id="60abb-209">
            <see langword="True" /> si les données sont un exemple du remplissage ; <see langword="false" /> si les données sont le remplissage entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-209">
              <see langword="True" /> if the data is a sample of the population; <see langword="false" /> if the data is the entire population.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-210">Retourne la variance pour une série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-210">Returns the variance for a series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-211">Valeur <see langword="double" /> qui représente la variance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-211">A <see langword="double" /> value that represents the variance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest (double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest(float64 hypothesizedMeanDifference, float64 varianceFirstGroup, float64 varianceSecondGroup, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ZTest (hypothesizedMeanDifference As Double, varianceFirstGroup As Double, varianceSecondGroup As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As ZTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::ZTestResult ^ ZTest(double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.ZTest : double * double * double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.ZTestResult" Usage="statisticFormula.ZTest (hypothesizedMeanDifference, varianceFirstGroup, varianceSecondGroup, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ZTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="varianceFirstGroup" Type="System.Double" />
        <Parameter Name="varianceSecondGroup" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="60abb-212">Test d'hypothèse sur la différence de moyenne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-212">Hypothesized mean difference.</span>
          </span>
        </param>
        <param name="varianceFirstGroup">
          <span data-ttu-id="60abb-213">Variation du premier groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-213">Variance of the first group.</span>
          </span>
        </param>
        <param name="varianceSecondGroup">
          <span data-ttu-id="60abb-214">Variation du second groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-214">Variance of the second group.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="60abb-215">La valeur alpha, qui correspond à la probabilité que l’hypothèse soit rejetée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-215">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="60abb-216">La plage autorisée est 0-1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-216">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="60abb-217">Premier nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-217">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="60abb-218">Second nom de la série d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-218">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60abb-219">Exécute un test Z à l'aide de la distribution normale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-219">Performs a Z Test using the Normal distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60abb-220">Objet <see cref="T:System.Windows.Forms.DataVisualization.Charting.ZTestResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60abb-220">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ZTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>