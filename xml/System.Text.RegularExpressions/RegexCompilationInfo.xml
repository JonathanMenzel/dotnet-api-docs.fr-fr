<Type Name="RegexCompilationInfo" FullName="System.Text.RegularExpressions.RegexCompilationInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f164cfc9abe8e849fb31f3e1ac69fd860eddbf89" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52371118" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegexCompilationInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RegexCompilationInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.RegexCompilationInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RegexCompilationInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexCompilationInfo" />
  <TypeSignature Language="F#" Value="type RegexCompilationInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit des informations à propos d'une expression régulière utilisée pour compiler une expression régulière à un assembly autonome.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un tableau de <xref:System.Text.RegularExpressions.RegexCompilationInfo> objets est passé à la <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> méthode pour fournir des informations à propos de chaque expression régulière à inclure dans l’assembly. Chaque expression régulière compilée qui est incluse dans l’assembly est représentée comme une classe dérivée de <xref:System.Text.RegularExpressions.Regex>. Les propriétés de la <xref:System.Text.RegularExpressions.RegexCompilationInfo> type définit le nom de classe de l’expression régulière, son nom qualifié complet (autrement dit, son espace de noms et son nom de type), son modèle d’expression régulière, les options supplémentaires (par exemple, si l’expression régulière est non-respect de la casse) et un intervalle de délai d’attente qui spécifie la durée pendant laquelle le moteur d’expression régulière doit rechercher une correspondance.  
  
 Vous pouvez instancier un <xref:System.Text.RegularExpressions.RegexCompilationInfo> objet en appelant son constructeur de classe surchargés.  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />
    <related type="Article" href="~/docs/standard/base-types/compilation-and-reuse-in-regular-expressions.md">Compilation et réutilisation</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" />.</summary>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md">Éléments du langage des expressions régulières</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexCompilationInfo : string * System.Text.RegularExpressions.RegexOptions * string * string * bool -&gt; System.Text.RegularExpressions.RegexCompilationInfo" Usage="new System.Text.RegularExpressions.RegexCompilationInfo (pattern, options, name, fullnamespace, ispublic)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pattern">Expression régulière à compiler.</param>
        <param name="options">Options de l'expression régulière à utiliser lors de la compilation de l'expression régulière.</param>
        <param name="name">Nom du type qui représente l'expression régulière compilée.</param>
        <param name="fullnamespace">L'espace de noms auquel le nouveau type appartient.</param>
        <param name="ispublic">
          <see langword="true" /> pour rendre l'expression régulière compilée visible publiquement ; sinon, <see langword="false" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> qui contient des informations à propos d'une expression régulière à inclure dans un assembly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque paramètre de la <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructeur correspond directement à une propriété de la <xref:System.Text.RegularExpressions.RegexCompilationInfo> classe. Étant donné que toutes les propriétés sont en lecture/écriture, leurs valeurs peuvent également être attribuées directement.  
  
 Le <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> méthode génère un assembly qui contient des expressions régulières compilées. Par conséquent, vous ne devez pas spécifier <xref:System.Text.RegularExpressions.RegexOptions.Compiled> comme l’une des valeurs de `options`.  
  
 Si `ispublic` est `true`, accessibilité publique est spécifiée dans la classe d’expression régulière compilée. Autrement dit, il peut être instancié à partir du code qui s’exécute dans n’importe quel assembly. Si `ispublic` est `false`, la classe d’expression régulière compilée se voit `internal` (en c#) ou `Friend` (en Visual Basic) l’accessibilité. Autrement dit, il peut être instanciée uniquement du code qui s’exécute dans le même assembly que la classe d’expression régulière.  
  
   
  
## Examples  
 L’exemple suivant crée et utilise une expression régulière compilée en deux étapes.  
  
 Dans la première étape, compilez et exécutez l’exemple de code suivant. Le <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A> constructeur dans l’exemple de code définit une expression régulière compilée. Le résultat de l’exécution du code est un assembly nommé FishRegex.dll qui contient un type d’expression régulière compilée nommé `FishRegex`.  
  
 [!code-csharp[sys.txt.rgxCompInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/genFishRegex.cs#1)]
 [!code-vb[sys.txt.rgxCompInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/genFishRegex.vb#1)]  
  
 Dans la deuxième étape, compilez l’exemple de code suivant à l’aide d’une référence à FishRegex.dll et puis exécutez le fichier exécutable résultant. Le fichier exécutable correspond à une chaîne cible à l’aide de la `FishRegex` tapez et affiche la correspondance, un groupe, un groupe de capture et une position d’index de correspondances dans la chaîne cible.  
  
 [!code-csharp[sys.txt.rgxCompInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/useFishRegex.cs#2)]
 [!code-vb[sys.txt.rgxCompInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/useFishRegex.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> a la valeur <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pattern" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="name" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="fullnamespace" /> a la valeur <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>Ce constructeur crée une expression régulière compilée qui utilise la valeur de délai d’attente par défaut du domaine d’application dans lequel il est créé. Si une valeur de délai d’attente est définie pour le domaine d’application, l’expression régulière compilée utilise la valeur <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, ce qui empêche une opération de mise en correspondance de modèle à partir de l’expiration du délai. Le constructeur recommandé pour la création d’une expression régulière compilée est <see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />, qui vous permet de définir l’intervalle de délai d’attente.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean, matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexCompilationInfo : string * System.Text.RegularExpressions.RegexOptions * string * string * bool * TimeSpan -&gt; System.Text.RegularExpressions.RegexCompilationInfo" Usage="new System.Text.RegularExpressions.RegexCompilationInfo (pattern, options, name, fullnamespace, ispublic, matchTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="pattern">Expression régulière à compiler.</param>
        <param name="options">Options de l'expression régulière à utiliser lors de la compilation de l'expression régulière.</param>
        <param name="name">Nom du type qui représente l'expression régulière compilée.</param>
        <param name="fullnamespace">L'espace de noms auquel le nouveau type appartient.</param>
        <param name="ispublic">
          <see langword="true" /> pour rendre l'expression régulière compilée visible publiquement ; sinon, <see langword="false" />.</param>
        <param name="matchTimeout">Délai d'attente par défaut pour l'expression régulière.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> qui contient des informations à propos d'une expression régulière avec une valeur de délai d'attente spécifiée devant être incluse dans un assembly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque paramètre de la <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructeur correspond directement à une propriété de la <xref:System.Text.RegularExpressions.RegexCompilationInfo> classe. Étant donné que toutes les propriétés sont en lecture/écriture, leurs valeurs peuvent également être attribuées directement.  
  
 Le <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> méthode génère un assembly qui contient des expressions régulières compilées. Par conséquent, vous ne devez pas spécifier <xref:System.Text.RegularExpressions.RegexOptions.Compiled> comme l’une des valeurs de `options`.  
  
 Si `ispublic` est `true`, accessibilité publique est spécifiée dans la classe d’expression régulière compilée. Autrement dit, il peut être instancié à partir du code qui s’exécute dans n’importe quel assembly. Si `ispublic` est `false`, la classe d’expression régulière compilée se voit `internal` (en c#) ou `Friend` (en Visual Basic) l’accessibilité. Autrement dit, il peut être instanciée uniquement du code qui s’exécute dans le même assembly que la classe d’expression régulière.  
  
 Le `matchTimeout` paramètre définit l’intervalle de délai d’attente par défaut pour l’expression régulière compilée. Cette valeur représente la quantité approximative de temps un objet d’expression régulière compilée est exécutées une seule opération de correspondance avant que l’opération arrive à expiration et le moteur d’expression régulière lève un <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception lors de sa prochaine vérification de minutage . Pour plus d’informations sur la valeur de délai d’attente, consultez le <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> propriété.  
  
> [!IMPORTANT]
>  Nous vous recommandons de toujours définir une valeur de délai d’attente par défaut pour une expression régulière compilée. Les consommateurs de votre bibliothèque d’expressions régulières peuvent substituer cette valeur de délai d’attente en passant un <xref:System.TimeSpan> valeur qui représente le nouvel intervalle de délai d’attente pour cette surcharge de constructeur.  
  
   
  
## Examples  
 L’exemple suivant définit une expression régulière compilée unique nommée `DuplicateChars` qui identifie deux ou plusieurs occurrences du même caractère dans une chaîne d’entrée. L’expression régulière compilée a un délai d’attente par défaut de 2 secondes. Lorsque vous exécutez l’exemple, il crée une bibliothèque de classes nommée RegexLib.dll qui contient l’expression régulière compilée.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 Le modèle d'expression régulière `(\w)\1+` est défini comme indiqué dans le tableau suivant.  
  
|Motif|Description |  
|-------------|-----------------|  
|`(\w)`|Correspond à n’importe quel caractère alphabétique et l’assigner au premier groupe de capture.|  
|`\1+`|Correspond à une ou plusieurs occurrences de la valeur du premier groupe capturé.|  
  
 L’exemple suivant utilise le `DuplicatedChars` une expression régulière pour identifier des caractères en double dans un tableau de chaînes. Lorsqu’il appelle le `DuplicatedChars` constructeur, elle remplace l’intervalle de délai d’attente par.5 secondes.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> a la valeur <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pattern" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="name" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="fullnamespace" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
        <altmember cref="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l'expression régulière compilée est visible publiquement.</summary>
        <value>
          <see langword="true" /> si l'expression régulière est visible publiquement ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A> propriété est `false`, la classe d’expression régulière définie par l’instance actuelle peut être instanciée uniquement par le code qui s’exécute dans l’assembly qui contient la classe. Toutefois, étant donné que le <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType> méthode génère un assembly qui contient uniquement des expressions régulières compilées et n’autorise pas de code supplémentaire doit être ajouté, il n’existe généralement aucune raison pour affecter à cette propriété une valeur de `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan MatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MatchTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeout : TimeSpan with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le délai d'attente par défaut de l'expression régulière.</summary>
        <value>Intervalle maximum par défaut qui peut s'écouler lors d'une opération de correspondance de modèles avant qu'une exception <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> soit levée, ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> si les délais d'attente sont désactivés.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> propriété définit l’intervalle de délai d’attente par défaut pour l’expression régulière compilée. Cette valeur représente la durée approximative une expression régulière compilée est exécutées une seule opération de correspondance avant que l’opération arrive à expiration et le moteur d’expression régulière lève un <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception lors de sa prochaine vérification de minutage.  
  
> [!IMPORTANT]
>  Nous vous recommandons de toujours définir une valeur de délai d’attente par défaut pour une expression régulière compilée. Les consommateurs de votre bibliothèque d’expressions régulières peuvent substituer cette valeur de délai d’attente en passant un <xref:System.TimeSpan> valeur qui représente le nouvel intervalle de délai d’attente au constructeur de classe de l’expression régulière compilée.  
  
 Vous pouvez affecter une valeur de délai d’attente par défaut pour un <xref:System.Text.RegularExpressions.RegexCompilationInfo> objet dans une des manières suivantes :  
  
-   En appelant le <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> (méthode) et en fournissant la représentation sous forme de chaîne d’un <xref:System.TimeSpan> valeur pour la propriété « REGEX_DEFAULT_MATCH_TIMEOUT ».  
  
-   En appelant le <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> constructeur et en fournissant une valeur pour le `matchTimeout` paramètre.  
  
-   En définissant la valeur de cette propriété.  
  
 Pour définir un délai raisonnable, tenez compte des facteurs suivants :  
  
-   La longueur et la complexité du modèle d’expression régulière. Les expressions régulières plus longs et plus complexes nécessitent un temps de celles qui sont plus court et plus simple.  
  
-   La charge prévue de la machine. Traitement prend plus de temps sur les systèmes avec une utilisation élevée du processeur et de la mémoire.  
  
   
  
## Examples  
 L’exemple suivant définit une expression régulière compilée unique nommée `DuplicateChars` qui identifie deux ou plusieurs occurrences du même caractère dans une chaîne d’entrée. L’expression régulière compilée a un délai d’attente par défaut de 2 secondes. Lorsque vous exécutez l’exemple, il crée une bibliothèque de classes nommée RegexLib.dll qui contient l’expression régulière compilée.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 Le modèle d'expression régulière `(\w)\1+` est défini comme indiqué dans le tableau suivant.  
  
|Motif|Description |  
|-------------|-----------------|  
|`(\w)`|Correspond à n’importe quel caractère alphabétique et l’assigner au premier groupe de capture.|  
|`\1+`|Correspond à une ou plusieurs occurrences de la valeur du premier groupe capturé.|  
  
 L’exemple suivant utilise le `DuplicatedChars` une expression régulière pour identifier des caractères en double dans un tableau de chaînes. Lorsqu’il appelle le `DuplicatedChars` constructeur, elle remplace l’intervalle de délai d’attente par.5 secondes.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du type qui représente l'expression régulière compilée.</summary>
        <value>Nom du nouveau type.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.RegularExpressions.RegexCompilationInfo> classe est utilisée pour définir une expression régulière compilée, qui est représentée comme une classe dérivée de <xref:System.Text.RegularExpressions.Regex>. Le <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> propriété définit le nom de classe du type d’expression régulière et le <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> et <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> propriétés définissent ensemble son nom qualifié complet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La valeur de cette propriété est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La valeur de cette propriété est une chaîne vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'espace de noms auquel appartient le nouveau type.</summary>
        <value>Espace de noms du nouveau type.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.RegularExpressions.RegexCompilationInfo> classe est utilisée pour définir une expression régulière compilée, qui est représentée comme une classe dérivée de <xref:System.Text.RegularExpressions.Regex>. Le <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> propriété définit l’espace de noms qui contient le type d’expression régulière compilée, et le <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> et <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> propriétés définissent ensemble son nom qualifié complet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La valeur de cette propriété est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.RegexOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.RegularExpressions.RegexOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As RegexOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::RegexOptions Options { System::Text::RegularExpressions::RegexOptions get(); void set(System::Text::RegularExpressions::RegexOptions value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.RegularExpressions.RegexOptions with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les options à utiliser lors de la compilation de l'expression régulière.</summary>
        <value>Combinaison d'opérations de bits des valeurs d'énumération.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> méthode génère un assembly qui contient des expressions régulières compilées. Par conséquent, il est inutile de spécifier <xref:System.Text.RegularExpressions.RegexOptions.Compiled> comme l’une des valeurs de cette propriété. Si elle est présente, la <xref:System.Text.RegularExpressions.RegexOptions.Compiled> option est ignorée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'expression régulière à compiler.</summary>
        <value>Expression régulière à compiler.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> propriété peut contenir une expression régulière valide. Si la valeur de la <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> propriété n’est pas un modèle d’expression régulière syntaxiquement correct, l’appel à la <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> méthode lève un <xref:System.ArgumentException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La valeur de cette propriété est <see langword="null" />.</exception>
        <related type="Article" href="~/docs/standard/base-types/regular-expressions.md">Expressions régulières du .NET Framework</related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md">Éléments du langage des expressions régulières</related>
      </Docs>
    </Member>
  </Members>
</Type>