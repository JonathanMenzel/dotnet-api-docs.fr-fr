<Type Name="Match" FullName="System.Text.RegularExpressions.Match">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7bd3cccac8dcf1dc1ebd2bd1454ae68b76101fc1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37755146" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Match : System.Text.RegularExpressions.Group" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Match extends System.Text.RegularExpressions.Group" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Match" />
  <TypeSignature Language="VB.NET" Value="Public Class Match&#xA;Inherits Group" />
  <TypeSignature Language="C++ CLI" Value="public ref class Match : System::Text::RegularExpressions::Group" />
  <TypeSignature Language="F#" Value="type Match = class&#xA;    inherit Group" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Group</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6908b-101">Représente les résultats d'une correspondance d'expression régulière unique.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6908b-101">Represents the results from a single regular expression match.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6908b-102">Le <xref:System.Text.RegularExpressions.Match> objet est immuable et n’a aucun constructeur public.</span><span class="sxs-lookup"><span data-stu-id="6908b-102">The <xref:System.Text.RegularExpressions.Match> object is immutable and has no public constructor.</span></span> <span data-ttu-id="6908b-103">Une instance de la <xref:System.Text.RegularExpressions.Match> classe est retournée par la <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> (méthode) et représente la première correspondance de modèle dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="6908b-103">An instance of the <xref:System.Text.RegularExpressions.Match> class is returned by the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> method and represents the first pattern match in a string.</span></span> <span data-ttu-id="6908b-104">Les correspondances suivantes sont représentées par <xref:System.Text.RegularExpressions.Match> objets retournés par le <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6908b-104">Subsequent matches are represented by <xref:System.Text.RegularExpressions.Match> objects returned by the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6908b-105">En outre, un <xref:System.Text.RegularExpressions.MatchCollection> objet se compose de zéro, une ou plusieurs <xref:System.Text.RegularExpressions.Match> objets est retourné par la <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6908b-105">In addition, a <xref:System.Text.RegularExpressions.MatchCollection> object that consists of zero, one, or more <xref:System.Text.RegularExpressions.Match> objects is returned by the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6908b-106">Si le <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> méthode ne correspond pas à un modèle d’expression régulière dans une chaîne d’entrée, elle retourne un vide <xref:System.Text.RegularExpressions.MatchCollection> objet.</span><span class="sxs-lookup"><span data-stu-id="6908b-106">If the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> method fails to match a regular expression pattern in an input string, it returns an empty <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="6908b-107">Vous pouvez ensuite utiliser un `foreach` construire en c# ou un `For Each` construire en Visual Basic pour itérer au sein de la collection.</span><span class="sxs-lookup"><span data-stu-id="6908b-107">You can then use a `foreach` construct in C# or a `For Each` construct in Visual Basic to iterate the collection.</span></span>  
  
 <span data-ttu-id="6908b-108">Si le <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> méthode ne parvient pas à correspondre au modèle d’expression régulière, elle retourne un <xref:System.Text.RegularExpressions.Match> objet est égal à <xref:System.Text.RegularExpressions.Match.Empty%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6908b-108">If the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> method fails to match the regular expression pattern, it returns a <xref:System.Text.RegularExpressions.Match> object that is equal to <xref:System.Text.RegularExpressions.Match.Empty%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6908b-109">Vous pouvez utiliser le <xref:System.Text.RegularExpressions.Group.Success%2A> propriété afin de déterminer si la correspondance a réussi.</span><span class="sxs-lookup"><span data-stu-id="6908b-109">You can use the <xref:System.Text.RegularExpressions.Group.Success%2A> property to determine whether the match was successful.</span></span> <span data-ttu-id="6908b-110">L'exemple suivant illustre cette situation.</span><span class="sxs-lookup"><span data-stu-id="6908b-110">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Match.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match1.vb#1)]  
  
 <span data-ttu-id="6908b-111">Si une correspondance de modèle est réussie, le <xref:System.Text.RegularExpressions.Capture.Value%2A> propriété contient la sous-chaîne mise en correspondance, le <xref:System.Text.RegularExpressions.Capture.Index%2A> propriété indique la position de départ de base zéro de la sous-chaîne mise en correspondance dans la chaîne d’entrée et le <xref:System.Text.RegularExpressions.Capture.Length%2A> propriété indique le longueur de la sous-chaîne mise en correspondance dans la chaîne d’entrée.</span><span class="sxs-lookup"><span data-stu-id="6908b-111">If a pattern match is successful, the <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the matched substring, the <xref:System.Text.RegularExpressions.Capture.Index%2A> property indicates the zero-based starting position of the matched substring in the input string, and the <xref:System.Text.RegularExpressions.Capture.Length%2A> property indicates the length of matched substring in the input string.</span></span>  
  
 <span data-ttu-id="6908b-112">Parce qu’une correspondance unique peut impliquer plusieurs groupes de capture, <xref:System.Text.RegularExpressions.Match> a un <xref:System.Text.RegularExpressions.Match.Groups%2A> propriété qui retourne le <xref:System.Text.RegularExpressions.GroupCollection>.</span><span class="sxs-lookup"><span data-stu-id="6908b-112">Because a single match can involve multiple capturing groups, <xref:System.Text.RegularExpressions.Match> has a <xref:System.Text.RegularExpressions.Match.Groups%2A> property that returns the <xref:System.Text.RegularExpressions.GroupCollection>.</span></span> <span data-ttu-id="6908b-113">Le <xref:System.Text.RegularExpressions.Match> instance elle-même est équivalent au premier objet dans la collection, à `Match.Groups[0]` (`Match.Groups(0)` en Visual Basic), qui représente la correspondance entière.</span><span class="sxs-lookup"><span data-stu-id="6908b-113">The <xref:System.Text.RegularExpressions.Match> instance itself is equivalent to the first object in the collection, at `Match.Groups[0]` (`Match.Groups(0)` in Visual Basic), which represents the entire match.</span></span> <span data-ttu-id="6908b-114">Vous pouvez accéder les groupes capturés dans une correspondance de plusieurs manières :</span><span class="sxs-lookup"><span data-stu-id="6908b-114">You can access the captured groups in a match in the following ways:</span></span>  
  
-   <span data-ttu-id="6908b-115">Vous pouvez parcourir les membres de la <xref:System.Text.RegularExpressions.GroupCollection> objet en utilisant un `foreach` (c#) ou `For Each` construction de (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="6908b-115">You can iterate the members of the <xref:System.Text.RegularExpressions.GroupCollection> object  by using a `foreach` (C#) or `For Each` (Visual Basic) construct.</span></span>  
  
-   <span data-ttu-id="6908b-116">Vous pouvez utiliser le <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29?displayProperty=nameWithType> propriété à récupérer des groupes par le numéro du groupe de capture.</span><span class="sxs-lookup"><span data-stu-id="6908b-116">You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29?displayProperty=nameWithType> property to retrieve groups by the number of the capturing group.</span></span> <span data-ttu-id="6908b-117">Notez que vous pouvez déterminer les groupes numérotés sont présents dans une expression régulière en appelant l’instance <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6908b-117">Note that you can determine which numbered groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="6908b-118">Vous pouvez utiliser le <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29?displayProperty=nameWithType> propriété à récupérer des groupes par le nom du groupe de capture.</span><span class="sxs-lookup"><span data-stu-id="6908b-118">You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29?displayProperty=nameWithType> property to retrieve groups by the name of the capturing group.</span></span> <span data-ttu-id="6908b-119">Notez que vous pouvez déterminer les groupes nommés sont présents dans une expression régulière en appelant l’instance <xref:System.Text.RegularExpressions.Regex.GetGroupNames?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6908b-119">Note that you can determine which named groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNames?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6908b-120">Les exemples suivants utilisent l’expression régulière `Console\.Write(Line)?`.</span><span class="sxs-lookup"><span data-stu-id="6908b-120">The following examples use the regular expression `Console\.Write(Line)?`.</span></span> <span data-ttu-id="6908b-121">L'expression régulière est interprétée comme suit :</span><span class="sxs-lookup"><span data-stu-id="6908b-121">The regular expression is interpreted as follows:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6908b-122">Console\\. Écriture</span><span class="sxs-lookup"><span data-stu-id="6908b-122">Console\\.Write</span></span>|<span data-ttu-id="6908b-123">Mettre en correspondance la chaîne « Console.Write ».</span><span class="sxs-lookup"><span data-stu-id="6908b-123">Match the string "Console.Write".</span></span> <span data-ttu-id="6908b-124">Notez que le «. » caractères sont échappés avec afin qu’il est interprété comme un point littéral et non comme un caractère générique qui correspond à n’importe quel caractère.</span><span class="sxs-lookup"><span data-stu-id="6908b-124">Note that the "." character is escaped so that it is interpreted as a literal period rather than as a wildcard that matches any character.</span></span>|  
|<span data-ttu-id="6908b-125">(Ligne) ?</span><span class="sxs-lookup"><span data-stu-id="6908b-125">(Line)?</span></span>|<span data-ttu-id="6908b-126">Mettre en correspondance zéro ou une occurrence de la chaîne « Line ».</span><span class="sxs-lookup"><span data-stu-id="6908b-126">Match zero or one occurrence of the string "Line".</span></span>|  
  
 <span data-ttu-id="6908b-127">**Exemple 1**</span><span class="sxs-lookup"><span data-stu-id="6908b-127">**Example 1**</span></span>  
  
 <span data-ttu-id="6908b-128">L’exemple suivant appelle la <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> méthode pour récupérer toutes les correspondances de modèle dans une chaîne d’entrée.</span><span class="sxs-lookup"><span data-stu-id="6908b-128">The following example calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> method to retrieve all pattern matches in an input string.</span></span> <span data-ttu-id="6908b-129">Il effectue ensuite une itération le <xref:System.Text.RegularExpressions.Match> objets retourné <xref:System.Text.RegularExpressions.MatchCollection> objet pour afficher des informations sur chaque correspondance.</span><span class="sxs-lookup"><span data-stu-id="6908b-129">It then iterates the <xref:System.Text.RegularExpressions.Match> objects in the returned <xref:System.Text.RegularExpressions.MatchCollection> object to display information about each match.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Match.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match2.vb#2)]  
  
 <span data-ttu-id="6908b-130">**Exemple 2**</span><span class="sxs-lookup"><span data-stu-id="6908b-130">**Example 2**</span></span>  
  
 <span data-ttu-id="6908b-131">L’exemple suivant appelle la <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> et <xref:System.Text.RegularExpressions.Match.NextMatch%2A> méthodes pour extraire une correspondance à la fois.</span><span class="sxs-lookup"><span data-stu-id="6908b-131">The following example calls the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> and <xref:System.Text.RegularExpressions.Match.NextMatch%2A> methods to retrieve one match at a time.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Match.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.MatchCollection" />
    <altmember cref="T:System.Text.RegularExpressions.Regex" />
  </Docs>
  <Members>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.RegularExpressions.Match Empty" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Match.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::RegularExpressions::Match ^ Empty { System::Text::RegularExpressions::Match ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Match.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6908b-132">Obtient le groupe vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-132">Gets the empty group.</span>
          </span>
          <span data-ttu-id="6908b-133">Toutes les correspondances infructueuses retournent cette correspondance vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-133">All failed matches return this empty match.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6908b-134">Correspondance vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-134">An empty match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6908b-135">Cette propriété ne doit pas être utilisée pour déterminer si une correspondance est réussie.</span><span class="sxs-lookup"><span data-stu-id="6908b-135">This property should not be used to determine if a match is successful.</span></span> <span data-ttu-id="6908b-136">Au lieu de cela, utilisez le `Match.Success` propriété (héritée de <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="6908b-136">Instead, use the `Match.Success` property (which is inherited from <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public virtual System.Text.RegularExpressions.GroupCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.GroupCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Match.Groups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Groups As GroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::RegularExpressions::GroupCollection ^ Groups { System::Text::RegularExpressions::GroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Text.RegularExpressions.GroupCollection" Usage="System.Text.RegularExpressions.Match.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.GroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6908b-137">Obtient une collection de groupes correspondant à l’expression régulière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-137">Gets a collection of groups matched by the regular expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6908b-138">Groupes de caractères correspondant au modèle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-138">The character groups matched by the pattern.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6908b-139">Un modèle d’expression régulière peut inclure des sous-expressions, qui sont définies en plaçant une partie du modèle d’expression régulière entre parenthèses.</span><span class="sxs-lookup"><span data-stu-id="6908b-139">A regular expression pattern can include subexpressions, which are defined by enclosing a portion of the regular expression pattern in parentheses.</span></span> <span data-ttu-id="6908b-140">Chaque sous-expression de ce type constitue un groupe.</span><span class="sxs-lookup"><span data-stu-id="6908b-140">Every such subexpression forms a group.</span></span> <span data-ttu-id="6908b-141">Le <xref:System.Text.RegularExpressions.Match.Groups%2A> propriété fournit l’accès aux informations sur les correspondances de sous-expressions.</span><span class="sxs-lookup"><span data-stu-id="6908b-141">The <xref:System.Text.RegularExpressions.Match.Groups%2A> property provides access to information about those subexpression matches.</span></span> <span data-ttu-id="6908b-142">Par exemple, le modèle d’expression régulière `(\d{3})-(\d{3}-\d{4})`, qui correspond à des numéros de téléphone d’Amérique du Nord, a deux sous-expressions.</span><span class="sxs-lookup"><span data-stu-id="6908b-142">For example, the regular expression pattern `(\d{3})-(\d{3}-\d{4})`, which matches North American telephone numbers, has two subexpressions.</span></span> <span data-ttu-id="6908b-143">Le premier se compose du code de zone, qui se compose les trois premiers chiffres du numéro de téléphone.</span><span class="sxs-lookup"><span data-stu-id="6908b-143">The first consists of the area code, which composes the first three digits of the telephone number.</span></span> <span data-ttu-id="6908b-144">Ce groupe est capturé par la première partie de l’expression régulière, `(\d{3})`. Le deuxième se compose le numéro de téléphone individuel, qui compose les sept derniers chiffres du numéro de téléphone.</span><span class="sxs-lookup"><span data-stu-id="6908b-144">This group is captured by the first portion of the regular expression, `(\d{3})`.The second consists of the individual telephone number, which composes the last seven digits of the telephone number.</span></span> <span data-ttu-id="6908b-145">Ce groupe est capturé par la deuxième partie de l’expression régulière, `(\d{3}-\d{4})`.</span><span class="sxs-lookup"><span data-stu-id="6908b-145">This group is captured by the second portion of the regular expression, `(\d{3}-\d{4})`.</span></span> <span data-ttu-id="6908b-146">Ces deux groupes peuvent ensuite être récupérés à partir de la <xref:System.Text.RegularExpressions.GroupCollection> objet qui est retourné par la <xref:System.Text.RegularExpressions.Match.Groups%2A> propriété, comme le montre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="6908b-146">These two groups can then be retrieved from the <xref:System.Text.RegularExpressions.GroupCollection> object that is returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property, as the following example shows.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Groups#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/cs/groups1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Match.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/vb/groups1.vb#1)]  
  
 <span data-ttu-id="6908b-147">Le <xref:System.Text.RegularExpressions.GroupCollection> objet retourné par la <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> propriété est un objet de collection de base zéro qui a toujours au moins un membre.</span><span class="sxs-lookup"><span data-stu-id="6908b-147">The <xref:System.Text.RegularExpressions.GroupCollection> object returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> property is a zero-based collection object that always has at least one member.</span></span> <span data-ttu-id="6908b-148">Si le moteur d’expression régulière ne peut pas trouver de correspondances dans une chaîne d’entrée particulière, le <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> propriété du seul <xref:System.Text.RegularExpressions.Group> objet dans la collection (l’objet à l’index 0) est définie sur `false` et <xref:System.Text.RegularExpressions.Group> objet <xref:System.Text.RegularExpressions.Capture.Value%2A>propriété est définie sur <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6908b-148">If the regular expression engine cannot find any matches in a particular input string, the <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> property of the single <xref:System.Text.RegularExpressions.Group> object in the collection (the object at index 0) is set to `false` and the <xref:System.Text.RegularExpressions.Group> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property is set to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6908b-149">Si le moteur d’expression régulière peut trouver une correspondance, le premier élément de la <xref:System.Text.RegularExpressions.GroupCollection> objet (l’élément à l’index 0) retourné par la <xref:System.Text.RegularExpressions.Match.Groups%2A> propriété contient une chaîne qui correspond au modèle d’expression régulière entière.</span><span class="sxs-lookup"><span data-stu-id="6908b-149">If the regular expression engine can find a match, the first element of the <xref:System.Text.RegularExpressions.GroupCollection> object (the element at index 0) returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property contains a string that matches the entire regular expression pattern.</span></span> <span data-ttu-id="6908b-150">Chaque élément suivant, à partir de l’index un vers le haut, représente un groupe capturé, si l’expression régulière comprend des groupes de capture.</span><span class="sxs-lookup"><span data-stu-id="6908b-150">Each subsequent element, from index one upward, represents a captured group, if the regular expression includes capturing groups.</span></span> <span data-ttu-id="6908b-151">Pour plus d’informations, consultez la section « Regroupement construit et objets d’Expression régulière » de la [constructions de regroupement](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) article.</span><span class="sxs-lookup"><span data-stu-id="6908b-151">For more information, see the "Grouping Constructs and Regular Expression Objects" section of the [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) article.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6908b-152">L’exemple suivant tente de correspondre à un modèle d’expression régulière par rapport à un exemple de chaîne.</span><span class="sxs-lookup"><span data-stu-id="6908b-152">The following example attempts to match a regular expression pattern against a sample string.</span></span> <span data-ttu-id="6908b-153">L’exemple utilise le <xref:System.Text.RegularExpressions.Match.Groups%2A> propriété pour stocker les informations récupérées par la correspondance pour l’affichage dans la console.</span><span class="sxs-lookup"><span data-stu-id="6908b-153">The example uses the <xref:System.Text.RegularExpressions.Match.Groups%2A> property to store information that is retrieved by the match for display to the console.</span></span>  
  
 [!code-cpp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/cpp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cpp/snippet8.cpp#8)]
 [!code-csharp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/csharp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cs/snippet8.cs#8)]
 [!code-vb[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/regex match, nextmatch, groups, captures/vb/snippet8.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextMatch">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Match NextMatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.Match NextMatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Match.NextMatch" />
      <MemberSignature Language="VB.NET" Value="Public Function NextMatch () As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::Match ^ NextMatch();" />
      <MemberSignature Language="F#" Value="member this.NextMatch : unit -&gt; System.Text.RegularExpressions.Match" Usage="match.NextMatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6908b-154">Retourne un nouvel objet <see cref="T:System.Text.RegularExpressions.Match" /> avec les résultats de la correspondance suivante, en commençant à la position à laquelle la dernière correspondance s'est terminée (au niveau du caractère qui se trouve après le dernier caractère correspondant).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-154">Returns a new <see cref="T:System.Text.RegularExpressions.Match" /> object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6908b-155">Correspondance d'expression régulière suivante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-155">The next regular expression match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6908b-156">Cette méthode est similaire à l’appel <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> et au passage (`Index+Length`) en tant que la nouvelle position de départ.</span><span class="sxs-lookup"><span data-stu-id="6908b-156">This method is similar to calling <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> again and passing (`Index+Length`) as the new starting position.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6908b-157">Cette méthode ne modifie pas l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="6908b-157">This method does not modify the current instance.</span></span> <span data-ttu-id="6908b-158">Au lieu de cela, il retourne un nouvel <xref:System.Text.RegularExpressions.Match> objet qui contient des informations sur la correspondance suivante.</span><span class="sxs-lookup"><span data-stu-id="6908b-158">Instead, it returns a new <xref:System.Text.RegularExpressions.Match> object that contains information about the next match.</span></span>  
  
 <span data-ttu-id="6908b-159">Tentative de récupération de la correspondance suivante peut lever une <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> si une valeur de délai d’attente pour les opérations correspondantes est activée et que la tentative de recherche la correspondance suivante dépasse ce délai d’attente.</span><span class="sxs-lookup"><span data-stu-id="6908b-159">Attempting to retrieve the next match may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> if a time-out value for matching operations is in effect and the attempt to find the next match exceeds that time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6908b-160">L’exemple suivant utilise la <xref:System.Text.RegularExpressions.Match.NextMatch%2A> méthode pour capturer l’expression régulière correspond à au-delà de la première correspondance.</span><span class="sxs-lookup"><span data-stu-id="6908b-160">The following example uses the <xref:System.Text.RegularExpressions.Match.NextMatch%2A> method to capture regular expression matches beyond the first match.</span></span>  
  
 [!code-cpp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/cpp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cpp/snippet8.cpp#8)]
 [!code-csharp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/csharp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cs/snippet8.cs#8)]
 [!code-vb[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/regex match, nextmatch, groups, captures/vb/snippet8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="6908b-161">Un délai d’attente a expiré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-161">A time-out occurred.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="6908b-162">
            <para>Lorsqu’une tentative de correspondance est répétée en appelant le <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> méthode, le moteur d’expression régulière donne les correspondances vides un traitement spécial. En règle générale, <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> commence la recherche de la correspondance suivante exactement là où la correspondance précédente était arrêtée. Toutefois, après une correspondance vide, le <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> méthode avance d’un caractère avant d’essayer la correspondance suivante. Ce comportement garantit que le moteur d’expression régulière doit suivre la chaîne. Sinon, car aucun déplacement vers l’avant n’entraîne pas une correspondance vide, la correspondance suivante commencerait exactement au même endroit que la correspondance précédente, et elle doit correspondre à plusieurs reprises à la même chaîne vide.  L'exemple suivant illustre cette situation. Le modèle d’expression régulière <c>un \*</c> recherche zéro ou plusieurs occurrences de la lettre « a » dans la chaîne « abaabb ». Comme le montre la sortie de l’exemple, la recherche trouve six correspondances. La première tentative de correspondance recherche le premier « a ». La deuxième correspondance démarre exactement où la première correspondance se termine, avant le premier b ; il trouve aucune occurrence de « a » et retourne une chaîne vide. La troisième correspondance ne commence pas exactement où la deuxième correspondance s’est terminée, car la deuxième correspondance a retourné une chaîne vide. Au lieu de cela, il commence un caractère plus tard, après le premier « b ». La troisième correspondance trouve deux occurrences de « a » et retourne « aa ». La quatrième correspondance commence là où s’est terminée la troisième, avant le deuxième « b » et retourne une chaîne vide. La cinquième tentative de correspondance avance un caractère afin qu’il commence avant le troisième « b » et retourne une chaîne vide. La sixième correspondance commence après le dernier « b » et retourne une chaîne vide à nouveau.  [ ! code-csharp[System.Text.RegularExpressions.Match.NextMatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.nextmatch/cs/nextmatch1.cs#1)] [ ! code-vb[System.Text.RegularExpressions.Match.NextMatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.nextmatch/vb/nextmatch1.vb#1)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-162">
              <para>When a match attempt is repeated by calling the <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> method, the regular expression engine gives empty matches special treatment. Usually, <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> begins the search for the next match exactly where the previous match left off. However, after an empty match, the <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> method advances by one character before trying the next match. This behavior guarantees that the regular expression engine will progress through the string. Otherwise, because an empty match does not result in any forward movement, the next match would start in exactly the same place as the previous match, and it would match the same empty string repeatedly.  The following example provides an illustration. The regular expression pattern <c>a\*</c> searches for zero or more occurrences of the letter "a" in the string "abaabb". As the output from the example shows, the search finds six matches. The first match attempt finds the first "a". The second match starts exactly where the first match ends, before the first b; it finds zero occurrences of "a" and returns an empty string. The third match does not begin exactly where the second match ended, because the second match returned an empty string. Instead, it begins one character later, after the first "b". The third match finds two occurrences of "a" and returns "aa". The fourth match attempt begins where the third match ended, before the second "b", and returns an empty string. The fifth match attempt again advances one character so that it begins before the third "b" and returns an empty string. The sixth match begins after the last "b" and returns an empty string again.  [!code-csharp[System.Text.RegularExpressions.Match.NextMatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.nextmatch/cs/nextmatch1.cs#1)] [!code-vb[System.Text.RegularExpressions.Match.NextMatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.nextmatch/vb/nextmatch1.vb#1)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual string Result (string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Result(string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Match.Result(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Result (replacement As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Result(System::String ^ replacement);" />
      <MemberSignature Language="F#" Value="abstract member Result : string -&gt; string&#xA;override this.Result : string -&gt; string" Usage="match.Result replacement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="replacement">
          <span data-ttu-id="6908b-163">Modèle de remplacement à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-163">The replacement pattern to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6908b-164">Retourne l’extension du modèle de remplacement spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-164">Returns the expansion of the specified replacement pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6908b-165">Version étendue du paramètre <paramref name="replacement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-165">The expanded version of the <paramref name="replacement" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6908b-166">Tandis que le <xref:System.Text.RegularExpressions.Regex.Replace%2A?displayProperty=nameWithType> méthode remplace toutes les correspondances dans une chaîne d’entrée avec un modèle de remplacement spécifié, la <xref:System.Text.RegularExpressions.Match.Result%2A> méthode remplace une correspondance unique avec un modèle de remplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="6908b-166">Whereas the <xref:System.Text.RegularExpressions.Regex.Replace%2A?displayProperty=nameWithType> method replaces all matches in an input string with a specified replacement pattern, the <xref:System.Text.RegularExpressions.Match.Result%2A> method replaces a single match with a specified replacement pattern.</span></span> <span data-ttu-id="6908b-167">Car elle fonctionne sur une correspondance individuelle, il est également possible d’effectuer un traitement sur la chaîne correspondante avant d’appeler le <xref:System.Text.RegularExpressions.Match.Result%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6908b-167">Because it operates on an individual match, it is also possible to perform processing on the matched string before you call the <xref:System.Text.RegularExpressions.Match.Result%2A> method.</span></span>  
  
 <span data-ttu-id="6908b-168">Le `replacement` paramètre est un modèle de remplacement d’expression régulière standard.</span><span class="sxs-lookup"><span data-stu-id="6908b-168">The `replacement` parameter is a standard regular expression replacement pattern.</span></span> <span data-ttu-id="6908b-169">Il peut être composé de caractères littéraux et les substitutions d’expression régulière.</span><span class="sxs-lookup"><span data-stu-id="6908b-169">It can consist of literal characters and regular expression substitutions.</span></span> <span data-ttu-id="6908b-170">Pour plus d’informations, consultez [Substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span><span class="sxs-lookup"><span data-stu-id="6908b-170">For more information, see [Substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6908b-171">L’exemple suivant remplace les traits d’union qui commencent et terminent une expression entre parenthèses avec des parenthèses.</span><span class="sxs-lookup"><span data-stu-id="6908b-171">The following example replaces the hyphens that begin and end a parenthetical expression with parentheses.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Result#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.result/cs/result1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Match.Result#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.result/vb/result1.vb#1)]  
  
 <span data-ttu-id="6908b-172">Le modèle d'expression régulière `--(.+?)--` est interprété comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="6908b-172">The regular expression pattern `--(.+?)--` is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="6908b-173">Motif</span><span class="sxs-lookup"><span data-stu-id="6908b-173">Pattern</span></span>|<span data-ttu-id="6908b-174">Description </span><span class="sxs-lookup"><span data-stu-id="6908b-174">Description</span></span>|  
|-------------|-----------------|  
|`--`|<span data-ttu-id="6908b-175">Mettre en correspondance deux traits d’union.</span><span class="sxs-lookup"><span data-stu-id="6908b-175">Match two hyphens.</span></span>|  
|`(.+?)`|<span data-ttu-id="6908b-176">Correspond à n’importe quel caractère une ou plusieurs fois, mais le moins possible.</span><span class="sxs-lookup"><span data-stu-id="6908b-176">Match any character one or more times, but as few times as possible.</span></span> <span data-ttu-id="6908b-177">Il s'agit du premier groupe de capture.</span><span class="sxs-lookup"><span data-stu-id="6908b-177">This is the first capturing group.</span></span>|  
|`--`|<span data-ttu-id="6908b-178">Mettre en correspondance deux traits d’union.</span><span class="sxs-lookup"><span data-stu-id="6908b-178">Match two hyphens.</span></span>|  
  
 <span data-ttu-id="6908b-179">Notez que le modèle d’expression régulière `--(.+?)--` utilise le quantificateur paresseux `+?`.</span><span class="sxs-lookup"><span data-stu-id="6908b-179">Note that the regular expression pattern `--(.+?)--` uses the lazy quantifier `+?`.</span></span> <span data-ttu-id="6908b-180">Si le quantificateur gourmand `+` ont été utilisés au lieu de cela, le moteur d’expression régulière trouveriez qu’une correspondance unique dans la chaîne d’entrée.</span><span class="sxs-lookup"><span data-stu-id="6908b-180">If the greedy quantifier `+` were used instead, the regular expression engine would find only a single match in the input string.</span></span>  
  
 <span data-ttu-id="6908b-181">La chaîne de remplacement `($1)` remplace la correspondance avec le premier groupe capturé est placée entre parenthèses.</span><span class="sxs-lookup"><span data-stu-id="6908b-181">The replacement string `($1)` replaces the match with the first captured group, which is enclosed in parentheses.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6908b-182">
            <paramref name="replacement" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-182">
              <paramref name="replacement" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6908b-183">Le déploiement n'est pas autorisé pour ce modèle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-183">Expansion is not allowed for this pattern.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Synchronized (System.Text.RegularExpressions.Match inner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Match Synchronized(class System.Text.RegularExpressions.Match inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (inner As Match) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Match ^ Synchronized(System::Text::RegularExpressions::Match ^ inner);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Text.RegularExpressions.Match -&gt; System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Match.Synchronized inner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Match" />
      </Parameters>
      <Docs>
        <param name="inner">
          <span data-ttu-id="6908b-184">Correspondance d'expression régulière équivalente à celle attendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-184">A regular expression match equivalent to the one expected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6908b-185">Retourne une instance de <see cref="T:System.Text.RegularExpressions.Match" /> équivalente à celle qui est fournie, dont le partage entre plusieurs threads est possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-185">Returns a <see cref="T:System.Text.RegularExpressions.Match" /> instance equivalent to the one supplied that is suitable to share between multiple threads.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6908b-186">Correspondance d'expression régulière pouvant être partagée entre plusieurs threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-186">A regular expression match that is suitable to share between multiple threads.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6908b-187">
            <paramref name="inner" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6908b-187">
              <paramref name="inner" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>