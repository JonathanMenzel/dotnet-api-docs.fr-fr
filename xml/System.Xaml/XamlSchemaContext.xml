<Type Name="XamlSchemaContext" FullName="System.Xaml.XamlSchemaContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30dfd7e6872cbf5555a5fecd6d6b0694782c7865" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52251647" /></Metadata><TypeSignature Language="C#" Value="public class XamlSchemaContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlSchemaContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlSchemaContext" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlSchemaContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlSchemaContext" />
  <TypeSignature Language="F#" Value="type XamlSchemaContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="286c1-101">Définit un contexte réutilisable pour l'interprétation ou le mappage des types XAML, ainsi que des types sous-jacents dans les assemblys.</span><span class="sxs-lookup"><span data-stu-id="286c1-101">Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="286c1-102">Un contexte de schéma XAML fournit une couche d’abstraction entre un schéma ou de vocabulaire pour XAML et d’une implémentation d’analyseur spécifique.</span><span class="sxs-lookup"><span data-stu-id="286c1-102">A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.</span></span> <span data-ttu-id="286c1-103">En insérant le concept d’un contexte de schéma, le schéma peut être utilisé avec différents analyseurs XAML et le contexte de schéma complète les informations qui sont nécessaires pour interagir avec un analyseur XAML spécifique.</span><span class="sxs-lookup"><span data-stu-id="286c1-103">By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.</span></span> <span data-ttu-id="286c1-104">Par exemple, le contexte de schéma XAML fournit des API qui se rapportent à des concepts XAML ou à la liaison de CLR pour le système de type XAML de requête.</span><span class="sxs-lookup"><span data-stu-id="286c1-104">For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.</span></span> <span data-ttu-id="286c1-105">Le contexte de schéma XAML est également chargé de gérer la liste des assemblys chargés, qui définit l’emplacement où un analyseur XAML recherche des types de stockage.</span><span class="sxs-lookup"><span data-stu-id="286c1-105">The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="286c1-106">Dans un <see cref="T:System.AppDomain" />, un <see cref="T:System.Xaml.XamlSchemaContext" /> peuvent être partagées entre plusieurs appelants totale et les appelants de confiance partielle.</span><span class="sxs-lookup"><span data-stu-id="286c1-106">In an <see cref="T:System.AppDomain" />, a <see cref="T:System.Xaml.XamlSchemaContext" /> can be shared between multiple callers, which include both full and partial trust callers.</span></span> <span data-ttu-id="286c1-107">Cette situation existe dans les infrastructures telles que WPF, qui fournissent des accès en confiance partielle à XAML du chargement pour les parties du modèle d’application WPF.</span><span class="sxs-lookup"><span data-stu-id="286c1-107">This situation exists in frameworks such as WPF, which provide partial-trust access to XAML loading for portions of the WPF application model.</span></span> <span data-ttu-id="286c1-108">La valeur par défaut <see cref="T:System.Xaml.XamlSchemaContext" /> implémentation fournit des dispositifs de protection dans ce scénario en conservant toutes ses propriétés et paramètres immuable.</span><span class="sxs-lookup"><span data-stu-id="286c1-108">The default <see cref="T:System.Xaml.XamlSchemaContext" /> implementation provides safeguards in this scenario by keeping all its properties and settings immutable.</span></span> <span data-ttu-id="286c1-109">Les implémentations dérivées doivent envisager de suivre également ce modèle d’immuabilité pour les propriétés et les paramètres d’un contexte de schéma XAML.</span><span class="sxs-lookup"><span data-stu-id="286c1-109">Derived implementations should also consider following this model of immutability for properties and settings of a XAML schema context.</span></span>  
  
<span data-ttu-id="286c1-110">Le <see cref="T:System.Xaml.XamlSchemaContext" /> classe de base est conçue afin que les recherches n’aient pas d’effets observables de manière externe.</span><span class="sxs-lookup"><span data-stu-id="286c1-110">The <see cref="T:System.Xaml.XamlSchemaContext" /> base class is designed so that lookups have no externally observable side effects.</span></span> <span data-ttu-id="286c1-111">Les types qui sont référencés par <see cref="T:System.Xaml.XamlSchemaContext" /> API dans la base de classe, telle que <see cref="T:System.Xaml.XamlType" /> ou <see cref="T:System.Xaml.XamlMember" />, également ne produire aucun effet secondaire à partir de recherches.</span><span class="sxs-lookup"><span data-stu-id="286c1-111">The types that are referenced by <see cref="T:System.Xaml.XamlSchemaContext" /> APIs in the base class, such as <see cref="T:System.Xaml.XamlType" /> or <see cref="T:System.Xaml.XamlMember" />, also produce no side effects from lookups.</span></span> <span data-ttu-id="286c1-112">Toutes les données qui sont nécessaire pour effectuer une détermination du schéma doivent être disponibles à partir de la construction et les paramètres de la <see cref="T:System.AppDomain" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-112">All data that is needed to make a schema determination should be available from the construction and settings of the <see cref="T:System.AppDomain" />.</span></span> <span data-ttu-id="286c1-113">Notez qu’aucune API de recherche s’appuient sur les services explicitement passés ; leur entrée s’appuie sur la chaîne d’entrée uniquement.</span><span class="sxs-lookup"><span data-stu-id="286c1-113">Notice that no lookup APIs rely on explicitly passed-in services; their input relies on string input only.</span></span>  
  
<span data-ttu-id="286c1-114">Le <see cref="T:System.Xaml.XamlSchemaContext" /> classe de base et <see cref="T:System.Xaml.XamlType" /> et <see cref="T:System.Xaml.XamlMember" /> sont tous thread-safe dans leurs implémentations de base.</span><span class="sxs-lookup"><span data-stu-id="286c1-114">The <see cref="T:System.Xaml.XamlSchemaContext" /> base class, and <see cref="T:System.Xaml.XamlType" /> and <see cref="T:System.Xaml.XamlMember" /> are all thread safe in their base implementations.</span></span> <span data-ttu-id="286c1-115">Si vous dérivez de <see cref="T:System.Xaml.XamlSchemaContext" /> ou dériver des classes de système de type XAML tel que <see cref="T:System.Xaml.XamlType" /> et <see cref="T:System.Xaml.XamlMember" /> , vous pouvez choisir si vos classes doivent se comporter comme thread-safe.</span><span class="sxs-lookup"><span data-stu-id="286c1-115">If you derive from <see cref="T:System.Xaml.XamlSchemaContext" /> or derive XAML type system classes such as <see cref="T:System.Xaml.XamlType" /> and <see cref="T:System.Xaml.XamlMember" /> , you can choose whether your classes will behave as thread safe.</span></span></para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="286c1-116">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-116">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="286c1-117">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-117">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; referenceAssemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; referenceAssemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referenceAssemblies As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ referenceAssemblies);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlSchemaContext : seq&lt;System.Reflection.Assembly&gt; -&gt; System.Xaml.XamlSchemaContext" Usage="new System.Xaml.XamlSchemaContext referenceAssemblies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="referenceAssemblies" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="referenceAssemblies"><span data-ttu-id="286c1-118">Jeu énumérable d'éléments d'informations sur l'assembly.</span><span class="sxs-lookup"><span data-stu-id="286c1-118">An enumerable set of assembly information items.</span></span> <span data-ttu-id="286c1-119">Chaque élément d'informations de l'assembly est spécifié par une valeur <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-119">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span></span></param>
        <summary><span data-ttu-id="286c1-120">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" /> en fonction d'un jeu d'assemblys de référence.</span><span class="sxs-lookup"><span data-stu-id="286c1-120">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a set of reference assemblies.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Xaml.XamlSchemaContextSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContextSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As XamlSchemaContextSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Xaml::XamlSchemaContextSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlSchemaContext : System.Xaml.XamlSchemaContextSettings -&gt; System.Xaml.XamlSchemaContext" Usage="new System.Xaml.XamlSchemaContext settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlSchemaContextSettings" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="286c1-121">Objet de paramètres à utiliser pour construire le <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-121">The settings object to use to construct the <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></param>
        <summary><span data-ttu-id="286c1-122">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" /> en fonction d'un objet de paramètres.</span><span class="sxs-lookup"><span data-stu-id="286c1-122">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a settings object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="286c1-123">L’objet de paramètres stocke des informations sur le convertisseur de texte et les caractéristiques d’extension de balisage pour le contexte de schéma.</span><span class="sxs-lookup"><span data-stu-id="286c1-123">The settings object stores information about text converter and markup extension specifics for the schema context.</span></span> <span data-ttu-id="286c1-124">Pour plus d'informations, consultez <xref:System.Xaml.XamlSchemaContextSettings>.</span><span class="sxs-lookup"><span data-stu-id="286c1-124">For more information, see <xref:System.Xaml.XamlSchemaContextSettings>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; referenceAssemblies, System.Xaml.XamlSchemaContextSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; referenceAssemblies, class System.Xaml.XamlSchemaContextSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referenceAssemblies As IEnumerable(Of Assembly), settings As XamlSchemaContextSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ referenceAssemblies, System::Xaml::XamlSchemaContextSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlSchemaContext : seq&lt;System.Reflection.Assembly&gt; * System.Xaml.XamlSchemaContextSettings -&gt; System.Xaml.XamlSchemaContext" Usage="new System.Xaml.XamlSchemaContext (referenceAssemblies, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="referenceAssemblies" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
        <Parameter Name="settings" Type="System.Xaml.XamlSchemaContextSettings" />
      </Parameters>
      <Docs>
        <param name="referenceAssemblies"><span data-ttu-id="286c1-125">Jeu énumérable d'informations sur l'assembly.</span><span class="sxs-lookup"><span data-stu-id="286c1-125">An enumerable set of assembly information.</span></span> <span data-ttu-id="286c1-126">Chaque élément d'informations de l'assembly est spécifié par une valeur <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-126">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span></span></param>
        <param name="settings"><span data-ttu-id="286c1-127">Objet de paramètres à utiliser pour construire le <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-127">The settings object to use to construct the <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></param>
        <summary><span data-ttu-id="286c1-128">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" /> en fonction d'un jeu d'assemblys de référence et d'un objet de paramètres.</span><span class="sxs-lookup"><span data-stu-id="286c1-128">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a set of reference assemblies and a settings object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~XamlSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!XamlSchemaContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="xamlSchemaContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="286c1-129">Fournit une implémentation <see langword="Finalize" /> non standard qui n'appelle pas <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-129">Provides a nonstandard <see langword="Finalize" /> implementation that does not invoke <see langword="Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="286c1-130">Les contextes de schéma XAML ne doivent pas être supprimés par le garbage collection automatique ou par des opérations manuelles.</span><span class="sxs-lookup"><span data-stu-id="286c1-130">XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.</span></span> <span data-ttu-id="286c1-131">Bien que les contextes de schéma XAML n’aient aucune ressource non managée, <xref:System.Windows.Markup.XamlDeferLoadAttribute> propriétés peuvent être toujours actives, et suppression d’un contexte de schéma XAML peut interférer avec l’opération de chargement différé associée.</span><span class="sxs-lookup"><span data-stu-id="286c1-131">Although XAML schema contexts  have no unmanaged resources, <xref:System.Windows.Markup.XamlDeferLoadAttribute> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.</span></span>  
  
 <span data-ttu-id="286c1-132"><xref:System.AppDomain.AssemblyLoad> des gestionnaires d’événements sont accrochés en interne comme références faibles, sont nettoyés par cette implémentation.</span><span class="sxs-lookup"><span data-stu-id="286c1-132"><xref:System.AppDomain.AssemblyLoad> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifyAssemblyNamesInClrNamespaces">
      <MemberSignature Language="C#" Value="public bool FullyQualifyAssemblyNamesInClrNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullyQualifyAssemblyNamesInClrNamespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullyQualifyAssemblyNamesInClrNamespaces { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.FullyQualifyAssemblyNamesInClrNamespaces : bool" Usage="System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="286c1-133">Obtient une valeur qui spécifie si un schéma XAML et son contexte utilisent des noms d'assembly qualifiés complets dans les valeurs qui sont retournées par l'API de recherche.</span><span class="sxs-lookup"><span data-stu-id="286c1-133">Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</span></span></summary>
        <value><span data-ttu-id="286c1-134"><see langword="true" /> si un schéma XAML et son contexte utilisent des noms d'assembly qualifiés complets dans les valeurs qui sont retournées par les API de recherche ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-134"><see langword="true" /> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="286c1-135">Cette propriété retourne le <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> valeur qui est établie dans les paramètres pour le <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> signature de constructeur.</span><span class="sxs-lookup"><span data-stu-id="286c1-135">This property returns the <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature.</span></span> <span data-ttu-id="286c1-136">Si d’autres signatures ont été utilisés pour la construction ou si <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> n’a pas la valeur `true`, la valeur de cette propriété est `false`.</span><span class="sxs-lookup"><span data-stu-id="286c1-136">If other signatures were used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> is not specifically set to `true`, the value of this property is `false`.</span></span>  
  
 <span data-ttu-id="286c1-137">La valeur de cette propriété influence les chaînes qui sont retournées par <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</span><span class="sxs-lookup"><span data-stu-id="286c1-137">The value of this property influences the strings that are returned by <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</span></span> <span data-ttu-id="286c1-138">Si <xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A> est `true`, la partie de l’assembly de la chaîne signale l’équivalent de <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="286c1-138">If <xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A> is `true`, the assembly portion of the string reports the equivalent of <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;string&gt; GetAllXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetAllXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllXamlNamespaces () As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetAllXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetAllXamlNamespaces : unit -&gt; seq&lt;string&gt;&#xA;override this.GetAllXamlNamespaces : unit -&gt; seq&lt;string&gt;" Usage="xamlSchemaContext.GetAllXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="286c1-139">Recherche les assemblys qui sont détenus par ce <see cref="T:System.Xaml.XamlSchemaContext" /> et retourne un jeu d'espaces de noms.</span><span class="sxs-lookup"><span data-stu-id="286c1-139">Searches the assemblies that are held by this <see cref="T:System.Xaml.XamlSchemaContext" /> and returns a set of namespaces.</span></span></summary>
        <returns><span data-ttu-id="286c1-140">Jeu énumérable d'identificateurs d'espace de noms.</span><span class="sxs-lookup"><span data-stu-id="286c1-140">An enumerable set of namespace identifiers.</span></span> <span data-ttu-id="286c1-141">Ces identificateurs sont fournis sous forme de chaînes.</span><span class="sxs-lookup"><span data-stu-id="286c1-141">These identifiers are provided as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="286c1-142">Cette méthode recherche uniquement les assemblys de référence s’ils sont passés dans via le paramètre de construction ou de propriété.</span><span class="sxs-lookup"><span data-stu-id="286c1-142">This method only searches the reference assemblies if they are passed in through construction or property setting.</span></span> <span data-ttu-id="286c1-143">Si aucun assembly n’est établi en tant qu’assemblys de référence, la logique de cette méthode examine tous les assemblys chargés où cela <xref:System.Xaml.XamlSchemaContext> est actif.</span><span class="sxs-lookup"><span data-stu-id="286c1-143">If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <xref:System.Xaml.XamlSchemaContext> is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllXamlTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt; GetAllXamlTypes (string xamlNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlType&gt; GetAllXamlTypes(string xamlNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllXamlTypes (xamlNamespace As String) As ICollection(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ICollection&lt;System::Xaml::XamlType ^&gt; ^ GetAllXamlTypes(System::String ^ xamlNamespace);" />
      <MemberSignature Language="F#" Value="abstract member GetAllXamlTypes : string -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;&#xA;override this.GetAllXamlTypes : string -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;" Usage="xamlSchemaContext.GetAllXamlTypes xamlNamespace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="286c1-144">Espace de noms XAML pour lequel retourner les types.</span><span class="sxs-lookup"><span data-stu-id="286c1-144">The XAML namespace to return types for.</span></span></param>
        <summary><span data-ttu-id="286c1-145">Recherche les assemblys qui sont détenus par ce <see cref="T:System.Xaml.XamlSchemaContext" /> et retourne un jeu de types à partir de l'espace de noms XAML spécifié.</span><span class="sxs-lookup"><span data-stu-id="286c1-145">Searches the assemblies that are held by this <see cref="T:System.Xaml.XamlSchemaContext" /> and returns a set of types from the specified XAML namespace.</span></span></summary>
        <returns><span data-ttu-id="286c1-146">Jeu énumérable de types XAML.</span><span class="sxs-lookup"><span data-stu-id="286c1-146">An enumerable set of XAML types.</span></span> <span data-ttu-id="286c1-147">Chaque type XAML du jeu est représenté par un objet <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-147">Each XAML type in the set is represented by a <see cref="T:System.Xaml.XamlType" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetPreferredPrefix (string xmlns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPreferredPrefix(string xmlns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredPrefix (xmlns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPreferredPrefix(System::String ^ xmlns);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredPrefix : string -&gt; string&#xA;override this.GetPreferredPrefix : string -&gt; string" Usage="xamlSchemaContext.GetPreferredPrefix xmlns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlns"><span data-ttu-id="286c1-148">Espace de noms XAML pour lequel obtenir le préfixe préféré.</span><span class="sxs-lookup"><span data-stu-id="286c1-148">The XAML namespace to get the preferred prefix for.</span></span></param>
        <summary><span data-ttu-id="286c1-149">Obtient une chaîne signalée comme préfixe préféré à utiliser par les consommateurs lorsqu'ils mappent l'espace de noms XAML spécifié.</span><span class="sxs-lookup"><span data-stu-id="286c1-149">Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.</span></span></summary>
        <returns><span data-ttu-id="286c1-150">Chaîne que les consommateurs doivent utiliser lorsqu'ils mappent l'espace de noms XAML spécifié pour l'utilisation de balises.</span><span class="sxs-lookup"><span data-stu-id="286c1-150">A string that consumers should use when they map the specified XAML namespace for markup use.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="286c1-151">Le consommateur le plus immédiat des informations est généralement un writer XAML.</span><span class="sxs-lookup"><span data-stu-id="286c1-151">The most immediate consumer of the information is typically a XAML writer.</span></span> <span data-ttu-id="286c1-152">D’autres consommateurs indirects incluent des outils de conception.</span><span class="sxs-lookup"><span data-stu-id="286c1-152">Other indirect consumers include design tools.</span></span>  
  
 <span data-ttu-id="286c1-153">Dans le cadre de la liaison XAML pour le common language runtime (CLR), vous pouvez spécifier ces informations en appliquant <xref:System.Windows.Markup.XmlnsPrefixAttribute> au niveau de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="286c1-153">As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <xref:System.Windows.Markup.XmlnsPrefixAttribute> at the assembly level.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="286c1-154"><paramref name="xmlns" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="286c1-154"><paramref name="xmlns" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueConverter&lt;TConverterBase&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; GetValueConverter&lt;TConverterBase&gt; (Type converterType, System.Xaml.XamlType targetType) where TConverterBase : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Xaml.Schema.XamlValueConverter`1&lt;!!TConverterBase&gt; GetValueConverter&lt;class TConverterBase&gt;(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueConverter(Of TConverterBase As Class) (converterType As Type, targetType As XamlType) As XamlValueConverter(Of TConverterBase)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TConverterBase&gt;&#xA; where TConverterBase : class System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ GetValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.GetValueConverter : Type * System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; (requires 'ConverterBase : null)" Usage="xamlSchemaContext.GetValueConverter (converterType, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TConverterBase">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <typeparam name="TConverterBase"><span data-ttu-id="286c1-155">Classe de base du convertisseur spécifique.</span><span class="sxs-lookup"><span data-stu-id="286c1-155">The specific converter base class.</span></span></typeparam>
        <param name="converterType"><span data-ttu-id="286c1-156">Implémentation du convertisseur.</span><span class="sxs-lookup"><span data-stu-id="286c1-156">The converter implementation.</span></span></param>
        <param name="targetType"><span data-ttu-id="286c1-157">Type de destination souhaité pour le convertisseur.</span><span class="sxs-lookup"><span data-stu-id="286c1-157">The desired destination type for the converter.</span></span></param>
        <summary><span data-ttu-id="286c1-158">Retourne un convertisseur de valeurs qui peut effectuer une conversion dans le <paramref name="targetType" /> demandé.</span><span class="sxs-lookup"><span data-stu-id="286c1-158">Returns a value converter that can convert to the requested <paramref name="targetType" />.</span></span></summary>
        <returns><span data-ttu-id="286c1-159"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> comportant une contrainte qui correspond à la contrainte mise sur l'appel de méthode.</span><span class="sxs-lookup"><span data-stu-id="286c1-159">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with a constraint that matches the constraint that is put on the method call.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlDirective">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlDirective GetXamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlDirective GetXamlDirective(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlDirective (xamlNamespace As String, name As String) As XamlDirective" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlDirective ^ GetXamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetXamlDirective : string * string -&gt; System.Xaml.XamlDirective&#xA;override this.GetXamlDirective : string * string -&gt; System.Xaml.XamlDirective" Usage="xamlSchemaContext.GetXamlDirective (xamlNamespace, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlDirective</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="286c1-160">Espace de noms XAML qui contient la directive nommée.</span><span class="sxs-lookup"><span data-stu-id="286c1-160">The XAML namespace that contains the named directive.</span></span></param>
        <param name="name"><span data-ttu-id="286c1-161">Nom de la directive à obtenir.</span><span class="sxs-lookup"><span data-stu-id="286c1-161">The name of the directive to obtain.</span></span></param>
        <summary><span data-ttu-id="286c1-162">Retourne une valeur <see cref="T:System.Xaml.XamlDirective" /> qui représente une directive, pour le langage XAML ou pour une implémentation particulière.</span><span class="sxs-lookup"><span data-stu-id="286c1-162">Returns a <see cref="T:System.Xaml.XamlDirective" /> value that represents a directive, either for the XAML language or for a particular implementation.</span></span></summary>
        <returns><span data-ttu-id="286c1-163">Objet <see cref="T:System.Xaml.XamlDirective" /> qui représente la directive demandée.</span><span class="sxs-lookup"><span data-stu-id="286c1-163">A <see cref="T:System.Xaml.XamlDirective" /> object that represents the requested directive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="286c1-164">Substituez cette méthode si vous créez une classe dérivée de <xref:System.Xaml.XamlDirective> dans le cadre d’un scénario d’extension de système de type XAML.</span><span class="sxs-lookup"><span data-stu-id="286c1-164">Override this method if you create a derived class from <xref:System.Xaml.XamlDirective> as part of a XAML type system extension scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="286c1-165"><paramref name="xamlNamespace" /> ou <paramref name="name" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-165"><paramref name="xamlNamespace" /> or <paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXamlType">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="286c1-166">Retourne un <see cref="T:System.Xaml.XamlType" /> qui est basé sur un identificateur de type CLR ou XAML.</span><span class="sxs-lookup"><span data-stu-id="286c1-166">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on either a CLR or XAML type identifier.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlType GetXamlType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlType GetXamlType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlType ^ GetXamlType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetXamlType : Type -&gt; System.Xaml.XamlType&#xA;override this.GetXamlType : Type -&gt; System.Xaml.XamlType" Usage="xamlSchemaContext.GetXamlType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="286c1-167">Type pour lequel obtenir un <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-167">The type to get a <see cref="T:System.Xaml.XamlType" /> for.</span></span></param>
        <summary><span data-ttu-id="286c1-168">Retourne un <see cref="T:System.Xaml.XamlType" /> qui est basé sur un identificateur de type CLR.</span><span class="sxs-lookup"><span data-stu-id="286c1-168">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a CLR type identifier.</span></span></summary>
        <returns><span data-ttu-id="286c1-169"><see cref="T:System.Xaml.XamlType" /> qui correspond au <paramref name="type" /> d'entrée.</span><span class="sxs-lookup"><span data-stu-id="286c1-169">The <see cref="T:System.Xaml.XamlType" /> that matches the input <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="286c1-170">Cette surcharge suppose que vous utilisez le CLR pour le système de type de stockage.</span><span class="sxs-lookup"><span data-stu-id="286c1-170">This overload assumes that you are using the CLR for the backing type system.</span></span> <span data-ttu-id="286c1-171">Si vous n’utilisez pas le système de type CLR, utilisez <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</span><span class="sxs-lookup"><span data-stu-id="286c1-171">If you are not using the CLR type system, use <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="286c1-172"><paramref name="type" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-172"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType GetXamlType (System.Xaml.Schema.XamlTypeName xamlTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlType GetXamlType(class System.Xaml.Schema.XamlTypeName xamlTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlType ^ GetXamlType(System::Xaml::Schema::XamlTypeName ^ xamlTypeName);" />
      <MemberSignature Language="F#" Value="member this.GetXamlType : System.Xaml.Schema.XamlTypeName -&gt; System.Xaml.XamlType" Usage="xamlSchemaContext.GetXamlType xamlTypeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlTypeName" Type="System.Xaml.Schema.XamlTypeName" />
      </Parameters>
      <Docs>
        <param name="xamlTypeName"><span data-ttu-id="286c1-173">Nom de type XAML pour lequel obtenir un <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-173">The XAML type name to get a <see cref="T:System.Xaml.XamlType" /> for.</span></span></param>
        <summary><span data-ttu-id="286c1-174">Retourne un <see cref="T:System.Xaml.XamlType" /> qui est basé sur un nom de type de système XAML.</span><span class="sxs-lookup"><span data-stu-id="286c1-174">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a XAML system type name.</span></span></summary>
        <returns><span data-ttu-id="286c1-175"><see cref="T:System.Xaml.XamlType" /> qui correspond au <paramref name="xamlTypeName" /> d'entrée.</span><span class="sxs-lookup"><span data-stu-id="286c1-175">The <see cref="T:System.Xaml.XamlType" /> that matches the input <paramref name="xamlTypeName" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="286c1-176">Un composant de <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> ou <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-176">A component of <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> or <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="286c1-177"><paramref name="xamlTypeName" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-177"><paramref name="xamlTypeName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xaml.Schema.XamlTypeName" />
      </Docs>
    </Member>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xaml.XamlType GetXamlType (string xamlNamespace, string name, params System.Xaml.XamlType[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xaml.XamlType GetXamlType(string xamlNamespace, string name, class System.Xaml.XamlType[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetXamlType (xamlNamespace As String, name As String, ParamArray typeArguments As XamlType()) As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xaml::XamlType ^ GetXamlType(System::String ^ xamlNamespace, System::String ^ name, ... cli::array &lt;System::Xaml::XamlType ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="abstract member GetXamlType : string * string * System.Xaml.XamlType[] -&gt; System.Xaml.XamlType&#xA;override this.GetXamlType : string * string * System.Xaml.XamlType[] -&gt; System.Xaml.XamlType" Usage="xamlSchemaContext.GetXamlType (xamlNamespace, name, typeArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="286c1-178">Espace de noms XAML qui contient le type souhaité.</span><span class="sxs-lookup"><span data-stu-id="286c1-178">The XAML namespace that contains the desired type.</span></span></param>
        <param name="name"><span data-ttu-id="286c1-179">Nom de chaîne du type souhaité.</span><span class="sxs-lookup"><span data-stu-id="286c1-179">The string name of the desired type.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="286c1-180">Arguments de type d'initialisation pour un type générique.</span><span class="sxs-lookup"><span data-stu-id="286c1-180">The initialization type arguments for a generic type.</span></span></param>
        <summary><span data-ttu-id="286c1-181">Retourne un <see cref="T:System.Xaml.XamlType" /> basé sur un espace de noms XAML et une chaîne de nom de type.</span><span class="sxs-lookup"><span data-stu-id="286c1-181">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a XAML namespace and a string for the type name.</span></span> <span data-ttu-id="286c1-182">Cette signature peut spécifier les arguments de type dans les cas où le type souhaité est un type générique.</span><span class="sxs-lookup"><span data-stu-id="286c1-182">This signature can specify the type arguments for cases where the desired type is a generic type.</span></span></summary>
        <returns><span data-ttu-id="286c1-183"><see cref="T:System.Xaml.XamlType" /> qui correspond aux critères d'entrée.</span><span class="sxs-lookup"><span data-stu-id="286c1-183">The <see cref="T:System.Xaml.XamlType" /> that matches the input criteria.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAssemblyResolve">
      <MemberSignature Language="C#" Value="protected internal virtual System.Reflection.Assembly OnAssemblyResolve (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Reflection.Assembly OnAssemblyResolve(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function OnAssemblyResolve (assemblyName As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Reflection::Assembly ^ OnAssemblyResolve(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member OnAssemblyResolve : string -&gt; System.Reflection.Assembly&#xA;override this.OnAssemblyResolve : string -&gt; System.Reflection.Assembly" Usage="xamlSchemaContext.OnAssemblyResolve assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="286c1-184">Nom de l'assembly à charger.</span><span class="sxs-lookup"><span data-stu-id="286c1-184">The name of the assembly to load.</span></span></param>
        <summary><span data-ttu-id="286c1-185">Appelé lorsque les opérations utilisent ce contexte de schéma pour résoudre un assembly requis pour résoudre les espaces de noms XAML qu'il contient.</span><span class="sxs-lookup"><span data-stu-id="286c1-185">Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.</span></span></summary>
        <returns><span data-ttu-id="286c1-186">Assembly résolu.</span><span class="sxs-lookup"><span data-stu-id="286c1-186">The resolved assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="286c1-187">La technique de résolution d’assembly sous-jacente, qui est une API interne, comporte des tolérances intégrées pour différents formats de chaîne d’un nom d’assembly en fonction de la <xref:System.Reflection.AssemblyName> comportement de construction.</span><span class="sxs-lookup"><span data-stu-id="286c1-187">The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <xref:System.Reflection.AssemblyName> construction behavior.</span></span>  
  
 <span data-ttu-id="286c1-188">L’objectif de cette API consiste à activer la résolution de première occurrence par rapport à des ensembles connus d’assemblys, tels que des assemblys de référence et non par rapport à un global assembly cache.</span><span class="sxs-lookup"><span data-stu-id="286c1-188">The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.</span></span> <span data-ttu-id="286c1-189">Si la liste des assemblys de référence est remplie, l’implémentation par défaut peut accéder aux assemblys de référence connus.</span><span class="sxs-lookup"><span data-stu-id="286c1-189">If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt; ReferenceAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Reflection.Assembly&gt; ReferenceAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferenceAssemblies As IList(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Reflection::Assembly ^&gt; ^ ReferenceAssemblies { System::Collections::Generic::IList&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferenceAssemblies : System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt;" Usage="System.Xaml.XamlSchemaContext.ReferenceAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="286c1-190">Obtient un jeu énumérable d'assemblys de référence pour le contexte de schéma XAML.</span><span class="sxs-lookup"><span data-stu-id="286c1-190">Gets an enumerable set of reference assemblies for the XAML schema context.</span></span></summary>
        <value><span data-ttu-id="286c1-191">Jeu énumérable d'assemblys de référence pour le contexte de schéma.</span><span class="sxs-lookup"><span data-stu-id="286c1-191">An enumerable set of reference assemblies for the schema context.</span></span> <span data-ttu-id="286c1-192">Chaque élément d'informations de l'assembly est spécifié par une valeur <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-192">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportMarkupExtensionsWithDuplicateArity">
      <MemberSignature Language="C#" Value="public bool SupportMarkupExtensionsWithDuplicateArity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportMarkupExtensionsWithDuplicateArity" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportMarkupExtensionsWithDuplicateArity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportMarkupExtensionsWithDuplicateArity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportMarkupExtensionsWithDuplicateArity : bool" Usage="System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="286c1-193">Obtient une valeur qui spécifie si un schéma XAML et son contexte prennent en charge les extensions de balisage qui comportent deux constructeurs avec la même arité (nombre de paramètres d'entrée).</span><span class="sxs-lookup"><span data-stu-id="286c1-193">Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).</span></span></summary>
        <value><span data-ttu-id="286c1-194"><see langword="true" /> si le contexte de schéma autorise les extensions de balisage avec arité en double ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-194"><see langword="true" /> if the schema context permits markup extensions that have duplicate arity; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="286c1-195">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-195">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="286c1-196">Cette propriété retourne le <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> valeur qui est établie dans les paramètres pour le <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> signature de constructeur.</span><span class="sxs-lookup"><span data-stu-id="286c1-196">This property returns the <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature.</span></span> <span data-ttu-id="286c1-197">Si d’autres signatures sont utilisés pour la construction ou si <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> n’a pas la valeur `true`, la valeur de cette propriété est `false`.</span><span class="sxs-lookup"><span data-stu-id="286c1-197">If other signatures are used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> is not specifically set to `true`, the value of this property is `false`.</span></span>  
  
 <span data-ttu-id="286c1-198">Arité double des extensions de balisage n’est pas spécialement adressée par la spécification XAML [MS-XAML], section 6.6.7.2.</span><span class="sxs-lookup"><span data-stu-id="286c1-198">Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.</span></span> <span data-ttu-id="286c1-199">Il s’agit, car la formation de l’élément d’informations pour une extension de balisage XAML est identique quel que soit l’arité en double qui peut-être exister dans l’implémentation d’extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="286c1-199">This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.</span></span> <span data-ttu-id="286c1-200">Seul l’appel réel de l’extension de balisage et sa `ProvideValue` expose tous les problèmes associés à une arité en double.</span><span class="sxs-lookup"><span data-stu-id="286c1-200">Only the actual invocation of the markup extension and its `ProvideValue` exposes any issues associated with duplicate arity.</span></span> <span data-ttu-id="286c1-201">Comportement de gestion des arité en double est donc indéfini et est conservé jusqu'à chaque implémentation le contexte de schéma XAML et son intégration de writer XAML.</span><span class="sxs-lookup"><span data-stu-id="286c1-201">Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.</span></span> <span data-ttu-id="286c1-202">Le contexte de schéma XAML par défaut telle qu’implémentée pour les opérations de Services XAML du .NET Framework ne prend pas en charge l’arité en double ; différentes API des Services XAML .NET Framework lève des exceptions lors du traitement d’extension de balisage avec arité en double sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="286c1-202">The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.</span></span>  
  
 <span data-ttu-id="286c1-203">Pour plus d’informations sur la définition d’extensions de balisage, consultez [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="286c1-203">For more information about defining markup extensions, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCompatibleXamlNamespace">
      <MemberSignature Language="C#" Value="public virtual bool TryGetCompatibleXamlNamespace (string xamlNamespace, out string compatibleNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetCompatibleXamlNamespace(string xamlNamespace, [out] string&amp; compatibleNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetCompatibleXamlNamespace (xamlNamespace As String, ByRef compatibleNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetCompatibleXamlNamespace(System::String ^ xamlNamespace, [Runtime::InteropServices::Out] System::String ^ % compatibleNamespace);" />
      <MemberSignature Language="F#" Value="abstract member TryGetCompatibleXamlNamespace : string *  -&gt; bool&#xA;override this.TryGetCompatibleXamlNamespace : string *  -&gt; bool" Usage="xamlSchemaContext.TryGetCompatibleXamlNamespace (xamlNamespace, compatibleNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="compatibleNamespace" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="286c1-204">Chaîne <see langword="xmlns" /> de l'espace de noms XAML pour lequel rechercher un résultat compatible.</span><span class="sxs-lookup"><span data-stu-id="286c1-204">The <see langword="xmlns" /> string for the XAML namespace to be checked for a compatible result.</span></span></param>
        <param name="compatibleNamespace"><span data-ttu-id="286c1-205">Cette méthode retourne la chaîne <see langword="xmlns" /> pour une demande d'espace de noms XAML compatible.</span><span class="sxs-lookup"><span data-stu-id="286c1-205">When this method returns, the <see langword="xmlns" /> string for a compatible XAML namespace request.</span></span> <span data-ttu-id="286c1-206">Peut être identique à <paramref name="xamlNamespace" /> si la méthode retourne la valeur <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-206">This might be identical to <paramref name="xamlNamespace" /> if the method returns <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="286c1-207">Retourne des informations indiquant la réussite ou l'échec d'une demande d'espace de noms XAML compatible.</span><span class="sxs-lookup"><span data-stu-id="286c1-207">Returns the success or failure of a request for a compatible XAML namespace.</span></span> <span data-ttu-id="286c1-208">Une demande réussie signale cet espace de noms XAML en tant que paramètre de sortie.</span><span class="sxs-lookup"><span data-stu-id="286c1-208">A successful request reports that XAML namespace as an out parameter.</span></span></summary>
        <returns><span data-ttu-id="286c1-209"><see langword="true" /> si <paramref name="compatibleNamespace" /> contient un résultat utilisable ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-209"><see langword="true" /> if <paramref name="compatibleNamespace" /> contains a usable result; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="286c1-210">En interne, cette méthode utilise l’ordre de recherche suivant :</span><span class="sxs-lookup"><span data-stu-id="286c1-210">Internally, this method uses the following lookup order:</span></span>  
  
1.  <span data-ttu-id="286c1-211">Un dictionnaire de compatibilité implémenté en interne, ce qui peut avoir été rempli par une recherche antérieure.</span><span class="sxs-lookup"><span data-stu-id="286c1-211">An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.</span></span>  
  
2.  <span data-ttu-id="286c1-212">Le <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> évaluation du paramètre.</span><span class="sxs-lookup"><span data-stu-id="286c1-212">The <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> parameter evaluation.</span></span>  
  
 <span data-ttu-id="286c1-213">Si aucun autre espace de noms compatible n’est découvert et cette méthode retourne `false`, le `compatibleNamespace` sortie de paramètre peut avoir la même valeur que le `xamlNamespace` d’entrée.</span><span class="sxs-lookup"><span data-stu-id="286c1-213">If no other compatible namespace is discovered and this method returns `false`, the `compatibleNamespace` parameter output might have the same value as the `xamlNamespace` input.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="286c1-214"><paramref name="xamlNamespace" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="286c1-214"><paramref name="xamlNamespace" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>