<Type Name="AttachablePropertyServices" FullName="System.Xaml.AttachablePropertyServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30bcc6eb2a6ce6a7aab2a8c52e32b9d5ff5ff789" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39968635" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AttachablePropertyServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AttachablePropertyServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AttachablePropertyServices" />
  <TypeSignature Language="VB.NET" Value="Public Class AttachablePropertyServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttachablePropertyServices abstract sealed" />
  <TypeSignature Language="F#" Value="type AttachablePropertyServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des méthodes d'assistance statiques qui obtiennent des valeurs et des informations de méthode d'accesseur d'une propriété pouvant être attachée et qui peuvent être utilisées avec une banque de propriétés jointes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La plupart des fonctionnalités de cette classe s’appuie sur un magasin de la propriété jointe, qui implémente généralement le <xref:System.Xaml.IAttachedPropertyStore> interface. Toutefois, les paramètres pour le passage du magasin dans <xref:System.Xaml.AttachablePropertyServices> ne sont pas de type interface et sont à la place de type `object`. Il s’agit, car vous pouvez passer un objet arbitraire, et dans ce cas, un magasin de propriété pouvant être attachée internes par défaut est utilisé.  
  
 Meilleures pratiques pour l’objet arbitraire est de passer l’objet qui serait autrement associé au magasin. Ne passez pas `null` pour indiquer que vous n’avez pas un <xref:System.Xaml.IAttachedPropertyStore> à utiliser. En passant `null` entre des chemins de code qui ne font rien. Transmission d’un objet qui n’est pas null, mais prend la valeur en tant que `null` sur une tentative <xref:System.Xaml.IAttachedPropertyStore> casté, utilise la banque de propriétés pouvant être attachées par défaut.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyPropertiesTo">
      <MemberSignature Language="C#" Value="public static void CopyPropertiesTo (object instance, System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,object&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyPropertiesTo(object instance, valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Xaml.AttachableMemberIdentifier, object&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyPropertiesTo (instance As Object, array As KeyValuePair(Of AttachableMemberIdentifier, Object)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyPropertiesTo(System::Object ^ instance, cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Xaml::AttachableMemberIdentifier ^, System::Object ^&gt;&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="static member CopyPropertiesTo : obj * System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier, obj&gt;[] * int -&gt; unit" Usage="System.Xaml.AttachablePropertyServices.CopyPropertiesTo (instance, array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,System.Object&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instance">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" />, ou tout objet non null permettant d'accéder à une banque de propriétés pouvant être attachées par défaut statique.</param>
        <param name="array">Tableau de destination. Le tableau est un tableau générique qui doit être passé sans être dimensionné et doit avoir des composants de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> et d'<see langword="object" />.</param>
        <param name="index">Index source au niveau duquel effectuer la copie.</param>
        <summary>Copie toutes les paires propriété/valeur pouvant être attachées issues d'une banque de propriétés pouvant être attachées spécifiée et les enregistre dans un tableau de destination.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appel de cette méthode appelle sous-jacent <xref:System.Collections.Generic.ICollection%601.CopyTo%2A> implémentation est une contrainte avec une paire clé/valeur, qui peut être source d’exceptions qui ne sont pas répertoriés dans cette rubrique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachedPropertyCount">
      <MemberSignature Language="C#" Value="public static int GetAttachedPropertyCount (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetAttachedPropertyCount(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttachedPropertyCount (instance As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetAttachedPropertyCount(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetAttachedPropertyCount : obj -&gt; int" Usage="System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" />, ou tout objet non null permettant d'accéder à une banque de propriétés pouvant être attachées par défaut statique.</param>
        <summary>Retourne le nombre d'entrées de propriété pouvant être attachée dans la banque spécifié.</summary>
        <returns>Nombre entier d'entrées dans la banque.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public static bool RemoveProperty (object instance, System.Xaml.AttachableMemberIdentifier name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RemoveProperty(object instance, class System.Xaml.AttachableMemberIdentifier name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveProperty (instance As Object, name As AttachableMemberIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RemoveProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name);" />
      <MemberSignature Language="F#" Value="static member RemoveProperty : obj * System.Xaml.AttachableMemberIdentifier -&gt; bool" Usage="System.Xaml.AttachablePropertyServices.RemoveProperty (instance, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
      </Parameters>
      <Docs>
        <param name="instance">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" />, ou tout objet non null permettant d'accéder à une banque de propriétés pouvant être attachées par défaut statique.</param>
        <param name="name">Identificateur de l'entrée de propriété pouvant être attachée à supprimer de la banque.</param>
        <summary>Supprime de la banque spécifiée l'entrée de la propriété pouvant être attachée spécifiée.</summary>
        <returns>
          <see langword="true" /> si une entrée de propriété pouvant être attachée pour <paramref name="name" /> a été trouvée dans la banque et en a été supprimée ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les magasins sont par instance ; Par conséquent, dans un magasin, le `name` valeur doit être non équivoque.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public static void SetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProperty(object instance, class System.Xaml.AttachableMemberIdentifier name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetProperty (instance As Object, name As AttachableMemberIdentifier, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetProperty : obj * System.Xaml.AttachableMemberIdentifier * obj -&gt; unit" Usage="System.Xaml.AttachablePropertyServices.SetProperty (instance, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" /> ; ou tout objet non null pour utiliser une banque de propriétés pouvant être attachées par défaut statique.</param>
        <param name="name">Identificateur de l'entrée de propriété pouvant être attachée pour laquelle définir une valeur.</param>
        <param name="value">Valeur à définir.</param>
        <summary>Définit une valeur pour la propriété spécifiée pouvant être attachée dans le magasin spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Impossible de définir une valeur dans le magasin.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public static bool TryGetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetProperty(object instance, class System.Xaml.AttachableMemberIdentifier name, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetProperty (instance As Object, name As AttachableMemberIdentifier, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member TryGetProperty : obj * System.Xaml.AttachableMemberIdentifier *  -&gt; bool" Usage="System.Xaml.AttachablePropertyServices.TryGetProperty (instance, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="instance">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" /> ; ou tout objet non null pour utiliser une banque de propriétés pouvant être attachées par défaut statique.</param>
        <param name="name">Identificateur de l'entrée de propriété pouvant être attachée pour laquelle obtenir une valeur.</param>
        <param name="value">Paramètre de sortie. Quand cette méthode est retournée, contient l’objet de destination pour la valeur si <c>name</c> existe dans la banque et a une valeur.</param>
        <summary>Essaie d'obtenir une valeur pour la propriété pouvant être attachée spécifiée dans la banque spécifiée. Ne lève pas d'exception si la propriété pouvant être attachée spécifique n'existe pas dans la banque.</summary>
        <returns>
          <see langword="true" /> si une entrée de propriété pouvant être attachée pour <paramref name="name" /> a été trouvée dans la banque et qu'une valeur a été publiée dans <paramref name="value" /> ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetProperty&lt;T&gt; (object instance, System.Xaml.AttachableMemberIdentifier name, out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetProperty&lt;T&gt;(object instance, class System.Xaml.AttachableMemberIdentifier name, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetProperty(Of T) (instance As Object, name As AttachableMemberIdentifier, ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TryGetProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name, [Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="static member TryGetProperty : obj * System.Xaml.AttachableMemberIdentifier *  -&gt; bool" Usage="System.Xaml.AttachablePropertyServices.TryGetProperty (instance, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type attendu de la sortie.</typeparam>
        <param name="instance">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" />, ou tout objet non null permettant d'accéder à une banque de propriétés pouvant être attachées par défaut statique.</param>
        <param name="name">Identificateur de l'entrée de propriété pouvant être attachée pour laquelle obtenir une valeur.</param>
        <param name="value">Paramètre de sortie. Quand cette méthode est retournée, contient l’objet de destination pour la valeur si <c>name</c> existe dans la banque et a une valeur.</param>
        <summary>Essaie d'obtenir une valeur pour la propriété pouvant être attachée spécifiée dans la banque spécifiée, en retournant un formulaire de sortie générique. Ne lève pas d'exception si la propriété pouvant être attachée spécifique n'existe pas dans la banque.</summary>
        <returns>
          <see langword="true" /> si une entrée de propriété pouvant être attachée pour <paramref name="name" /> a été trouvée dans la banque et qu'une valeur a été publiée dans <paramref name="value" /> ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>