<Type Name="XamlObjectWriter" FullName="System.Xaml.XamlObjectWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ca402de94a9fb4c2404a3eb885b3a1fc9d0fc4b6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriter extends System.Xaml.XamlWriter implements class System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriter&#xA;Inherits XamlWriter&#xA;Implements IXamlLineInfoConsumer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriter : System::Xaml::XamlWriter, System::Xaml::IXamlLineInfoConsumer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfoConsumer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0a20e-101">Crée un graphique d'objet à partir d'un flux de données de nœud XAML source.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a20e-101">Creates an object graph from a source XAML node stream.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a20e-102">Le `Write` méthodes de <xref:System.Xaml.XamlObjectWriter> implémentent un modèle afin que la <xref:System.Xaml.XamlObjectWriter> utilise le <xref:System.Xaml.XamlWriter> qui est définie par le <xref:System.Xaml.XamlWriter.WriteNode%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0a20e-102">The `Write` methods of <xref:System.Xaml.XamlObjectWriter> implement a pattern so that the <xref:System.Xaml.XamlObjectWriter> uses the <xref:System.Xaml.XamlWriter> that is defined by the <xref:System.Xaml.XamlWriter.WriteNode%2A> method.</span></span> <span data-ttu-id="0a20e-103"><xref:System.Xaml.XamlWriter.WriteNode%2A> logique de basculer entre les `Write` méthodes, selon le nœud de type est à la position actuelle dans le lecteur.</span><span class="sxs-lookup"><span data-stu-id="0a20e-103"><xref:System.Xaml.XamlWriter.WriteNode%2A> logic switches between the `Write` methods, depending on which node type is at the current position in the reader.</span></span>  
  
## <a name="scope"></a><span data-ttu-id="0a20e-104">Portée</span><span class="sxs-lookup"><span data-stu-id="0a20e-104">Scope</span></span>  
 <span data-ttu-id="0a20e-105">A <xref:System.Xaml.XamlObjectWriter> a un concept de portée ; c'est-à-dire, le <xref:System.Xaml.XamlObjectWriter> maintient un point conceptuel de référence dans son graphique d’objet de sortie.</span><span class="sxs-lookup"><span data-stu-id="0a20e-105">A <xref:System.Xaml.XamlObjectWriter> has a concept of scope; that is, the <xref:System.Xaml.XamlObjectWriter> maintains a conceptual point of reference in its output object graph.</span></span> <span data-ttu-id="0a20e-106">Pour une portée particulière, certaines opérations peuvent être valide ou non valide ou produire un résultat non opération.</span><span class="sxs-lookup"><span data-stu-id="0a20e-106">For a particular scope, certain operations might be valid or invalid, or produce a no-operation result.</span></span> <span data-ttu-id="0a20e-107">Par exemple, si vous appelez <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> pour écrire des directives pour l’initialisation d’un objet qui déjà existe comme une instance, l’implémentation par défaut lève une exception.</span><span class="sxs-lookup"><span data-stu-id="0a20e-107">For example, if you call <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> to write directives for initialization on an object that already exists as an instance, the default implementation throws an exception.</span></span>  
  
 <span data-ttu-id="0a20e-108">Une technique possible pour le suivi de la portée personnalisé <xref:System.Xaml.XamlObjectWriter> consiste à aligner les actions de nœud avec une classe de la pile ou le frame.</span><span class="sxs-lookup"><span data-stu-id="0a20e-108">A possible technique for tracking scope in a custom <xref:System.Xaml.XamlObjectWriter> is to align the node actions with a stack or frame class.</span></span> <span data-ttu-id="0a20e-109">La pile ou le frame peut effectuer le suivi de push et pop pour chaque niveau de profondeur de modèle objet qui est entrée ou sortie alors que le <xref:System.Xaml.XamlObjectWriter> écrit le graphique d’objets.</span><span class="sxs-lookup"><span data-stu-id="0a20e-109">The stack or frame can keep track of push and pop for each level of object-model depth that is entered or exited while the <xref:System.Xaml.XamlObjectWriter> writes the object graph.</span></span>  
  
## <a name="callbacks"></a><span data-ttu-id="0a20e-110">Rappels</span><span class="sxs-lookup"><span data-stu-id="0a20e-110">Callbacks</span></span>  
 <span data-ttu-id="0a20e-111">Pour prendre en charge les intermédiaires et avancés <xref:System.Xaml.XamlObjectWriter> scénarios, le mécanisme d’écriture d’un graphique d’objet de rappel fournit des points d’entrée qui se produisent lorsqu’un <xref:System.Xaml.XamlObjectWriter> valide ou est prêt à valider certaines actions.</span><span class="sxs-lookup"><span data-stu-id="0a20e-111">To support intermediate and advanced <xref:System.Xaml.XamlObjectWriter> scenarios, the mechanism of writing an object graph provides callback entry points that occur when a <xref:System.Xaml.XamlObjectWriter> commits or is about to commit certain actions.</span></span> <span data-ttu-id="0a20e-112">Certains de ces rappels sont activés dans les paramètres et ne sont pas spécifiques pour le type d’objet ou le membre en cours d’écriture ; Toutefois, les informations de rappel sont souvent disponibles dans le contexte ou événements dans les données envoyées via le rappel.</span><span class="sxs-lookup"><span data-stu-id="0a20e-112">Some callbacks are enabled in the settings and are not specific to the object type or the member being written; however, callback information is often available in context or is in the event data that is sent through the callback.</span></span> <span data-ttu-id="0a20e-113">Voici une liste des rappels appropriés :</span><span class="sxs-lookup"><span data-stu-id="0a20e-113">The following is a list of relevant callbacks:</span></span>  
  
-   <span data-ttu-id="0a20e-114">Le rappel est déclaré par <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> est appelé lorsque la portée passe à un nouvel objet et à la <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> phase de durée de vie de chaque objet créé.</span><span class="sxs-lookup"><span data-stu-id="0a20e-114">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> phase of object lifetime for each created object.</span></span>  
  
-   <span data-ttu-id="0a20e-115">Le rappel est déclaré par <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> est appelé lorsque la portée passe à un nouvel objet et à la <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> phase de durée de vie de chaque objet créé.</span><span class="sxs-lookup"><span data-stu-id="0a20e-115">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> phase of object lifetime for each created object.</span></span>  
  
-   <span data-ttu-id="0a20e-116">Le rappel est déclaré par <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> est appelé lorsque la portée démarre dans un objet et se produit lorsque le premier <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> appel à cette portée d’objet est effectué mais pas encore validée.</span><span class="sxs-lookup"><span data-stu-id="0a20e-116">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> is invoked when the scope starts in an object, and occurs when the first <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> call to that object scope is made but not yet committed.</span></span>  
  
-   <span data-ttu-id="0a20e-117">Le rappel est déclaré par <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> est appelé lorsque la portée démarre dans un objet et se produit lorsque le <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> appel à cette portée d’objet est effectué mais pas encore validée.</span><span class="sxs-lookup"><span data-stu-id="0a20e-117">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> is invoked when the scope starts in an object, and happens when the <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call to that object scope is made but not yet committed.</span></span>  
  
-   <span data-ttu-id="0a20e-118">Le rappel est déclaré par <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> est appelé lorsque <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="0a20e-118">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is invoked when <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> is called.</span></span>  
  
## <a name="writing-dictionary-keys"></a><span data-ttu-id="0a20e-119">Clés de dictionnaire en écriture</span><span class="sxs-lookup"><span data-stu-id="0a20e-119">Writing Dictionary Keys</span></span>  
 <span data-ttu-id="0a20e-120">L’implémentation par défaut de <xref:System.Xaml.XamlObjectWriter> prend en charge la conversion de type sur les contraintes d’un <xref:System.Collections.Generic.Dictionary%602> avant le dictionnaire de contenu est ajouté au graphique d’objet.</span><span class="sxs-lookup"><span data-stu-id="0a20e-120">The default implementation of <xref:System.Xaml.XamlObjectWriter> supports type conversion on the constraints of a <xref:System.Collections.Generic.Dictionary%602> before the dictionary contents are added to the object graph.</span></span> <span data-ttu-id="0a20e-121">De cette manière, un dictionnaire générique peut être indexé par des objets en cours d’exécution et peut correspondre à l’objet générique applique `Add` et le comportement de l’indexeur.</span><span class="sxs-lookup"><span data-stu-id="0a20e-121">In this manner, a generic dictionary can be keyed at run time by objects and can match the relevant generic `Add` and indexer behavior.</span></span> <span data-ttu-id="0a20e-122">Toutefois, comme implémentée pour la base de <xref:System.Xaml.XamlObjectWriter>, cette fonction existe uniquement pour la création de graphique d’objet à partir de la base de <xref:System.Collections.Generic.Dictionary%602> classe et non pas pour les classes dérivées de <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="0a20e-122">However, as implemented for the base <xref:System.Xaml.XamlObjectWriter>, this capability exists only for object graph creation from the base <xref:System.Collections.Generic.Dictionary%602> class and not for derived classes of <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
## <a name="checks-for-disposed"></a><span data-ttu-id="0a20e-123">Recherche de suppressions</span><span class="sxs-lookup"><span data-stu-id="0a20e-123">Checks for Disposed</span></span>  
 <span data-ttu-id="0a20e-124">Writers XAML sont utilisés potentiellement pour les opérations différées ou où un appel est effectué par rapport à une instance de writer XAML a été supprimée dans l’intervalle.</span><span class="sxs-lookup"><span data-stu-id="0a20e-124">XAML writers are potentially used for deferred operations or where a call is made against a XAML writer instance that has been disposed in the interim.</span></span> <span data-ttu-id="0a20e-125">Différentes API de <xref:System.Xaml.XamlObjectWriter> peut lever <xref:System.ObjectDisposedException> dans ces cas.</span><span class="sxs-lookup"><span data-stu-id="0a20e-125">Various APIs of <xref:System.Xaml.XamlObjectWriter> might throw <xref:System.ObjectDisposedException> in these cases.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlWriter" />
    <altmember cref="T:System.Xaml.XamlObjectReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a20e-126">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-126">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext">
          <span data-ttu-id="0a20e-127">Contexte de schéma XAML partagé avec le lecteur XAML qui fournit des nœuds pour l'écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-127">A XAML schema context that is shared with the XAML reader that provides nodes for writing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-128">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriter" /> à l’aide du contexte de schéma XAML utilisé par un <see cref="T:System.Xaml.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-128">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class using  the XAML schema context that is used by a <see cref="T:System.Xaml.XamlReader" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a20e-129">
            <paramref name="schemaContext" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-129">
              <paramref name="schemaContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="schemaContext">
          <span data-ttu-id="0a20e-130">Contexte de schéma XAML partagé avec le lecteur XAML qui fournit des nœuds pour l'écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-130">A XAML schema context that is shared with the XAML reader that provides nodes for writing.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="0a20e-131">Objet de paramètres qui spécifie certaines options pour le comportement et la sortie de <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-131">A settings object that specifies certain options for <see cref="T:System.Xaml.XamlObjectWriter" /> behavior and output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-132">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriter" /> à l'aide du contexte utilisé par un <see cref="T:System.Xaml.XamlReader" /> et ses paramètres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-132">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class using the context that is used by a <see cref="T:System.Xaml.XamlReader" /> and its settings.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a20e-133">
            <paramref name="schemaContext" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-133">
              <paramref name="schemaContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a20e-134">Réinitialise toutes les images possibles et efface le graphique d'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-134">Resets all possible frames and clears the object graph.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0a20e-135">
            <see langword="true" /> pour libérer les ressources managées ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-135">
              <see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-136">Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlObjectWriter" />, et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-136">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlObjectWriter" />, and optionally, releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterBeginInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterBeginInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterBeginInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterBeginInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterBeginInit(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0a20e-137">Objet à signaler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-137">The object to report on.</span>
          </span>
          <span data-ttu-id="0a20e-138">L'objet est empaqueté dans <see cref="T:System.Xaml.XamlObjectEventArgs" /> lorsque le gestionnaire est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-138">The object is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-139">Appelle une méthode <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-139">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterEndInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterEndInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterEndInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterEndInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterEndInit(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0a20e-140">Objet à signaler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-140">The object to report on.</span>
          </span>
          <span data-ttu-id="0a20e-141">La valeur est empaquetée dans <see cref="T:System.Xaml.XamlObjectEventArgs" /> lorsque le gestionnaire est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-141">The value  is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-142">Appelle une méthode <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-142">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterProperties(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0a20e-143">Objet à signaler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-143">The object to report on.</span>
          </span>
          <span data-ttu-id="0a20e-144">Il est empaqueté dans <see cref="T:System.Xaml.XamlObjectEventArgs" /> lorsque le gestionnaire est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-144">This is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-145">Appelle une méthode référencée <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-145">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeProperties(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0a20e-146">Valeur à passer via <see cref="T:System.Xaml.XamlObjectEventArgs" /> lorsque le gestionnaire est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-146">The value to pass through <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-147">Appelle une méthode référencée <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-147">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetValue">
      <MemberSignature Language="C#" Value="protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetValue(object eventSender, class System.Xaml.XamlMember member, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSetValue (eventSender As Object, member As XamlMember, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnSetValue(System::Object ^ eventSender, System::Xaml::XamlMember ^ member, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSender" Type="System.Object" />
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventSender">
          <span data-ttu-id="0a20e-148">Objet à signaler en tant que source au gestionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-148">The object to report as the source to the handler.</span>
          </span>
        </param>
        <param name="member">
          <span data-ttu-id="0a20e-149">Nom de la propriété à définir, qui est passée au gestionnaire dans le cadre de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-149">The name of the property to set, which is passed to the handler as part of <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0a20e-150">Valeur à fournir pour la propriété qui est nommée par <c>property</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-150">The value to provide for the property that is named by <c>property</c>.</span>
          </span>
          <span data-ttu-id="0a20e-151">La valeur est passée au gestionnaire dans le cadre de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-151">The value is passed to the handler as part of <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-152">Appelle une méthode référencée <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce writer, dans la mesure où <paramref name="handled" /> dans les données d'événement <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> n'a pas la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-152">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this writer, as long as <paramref name="handled" /> in <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> event data is not <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a20e-153">Valeur booléenne définie par un gestionnaire associé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-153">A Boolean value that is set by any associated handler; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a20e-154">Si le `SetValue` opération pour ce writer XAML a un gestionnaire associé (un <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> est déclarée dans <xref:System.Xaml.XamlObjectWriterSettings>), cette méthode crée de nouveaux <xref:System.Windows.Markup.XamlSetValueEventArgs> et les transmet au gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="0a20e-154">If the `SetValue` operation for this XAML writer has an associated handler (a <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is declared in <xref:System.Xaml.XamlObjectWriterSettings>), this method creates new <xref:System.Windows.Markup.XamlSetValueEventArgs> and passes them to the handler.</span></span> <span data-ttu-id="0a20e-155">La valeur de retour est définie en lisant la <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> valeur qui est passé par les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="0a20e-155">The return value is set by reading the <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> value that is passed through the event data.</span></span> <span data-ttu-id="0a20e-156">Si aucun gestionnaire n’existe et que cette méthode est appelée, l’appel retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="0a20e-156">If no handler exists and this method is invoked, the call returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.Result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a20e-157">Obtient le dernier objet qui a été écrit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-157">Gets the last object that was written.</span>
          </span>
          <span data-ttu-id="0a20e-158">En général, appelé uniquement lorsque le flux de nœud est à sa fin et que le graphique d'objet est terminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-158">Typically only called when the node stream is at its end and the object graph is complete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a20e-159">Dernier objet écrit, ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-159">The last object written, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a20e-160">L’utilisation la plus courante de <xref:System.Xaml.XamlObjectWriter.Result%2A> consiste à appeler uniquement lorsque le flux de nœud est connu à sa fin, et le graphique d’objets est terminé.</span><span class="sxs-lookup"><span data-stu-id="0a20e-160">The most typical usage of <xref:System.Xaml.XamlObjectWriter.Result%2A> is to call it only when the node stream is known to be at its end, and the object graph is complete.</span></span> <span data-ttu-id="0a20e-161">Sinon, le graphique d’objets est susceptible d’être incomplet et n’est pas utile pour la plupart des scénarios de plateforme.</span><span class="sxs-lookup"><span data-stu-id="0a20e-161">Otherwise, the object graph is likely to be incomplete, and is not useful for most platform scenarios.</span></span>  
  
 <span data-ttu-id="0a20e-162"><xref:System.Xaml.XamlObjectWriter.Result%2A> en général contient uniquement une valeur non null si elle est appelée immédiatement après un appel à <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, et si la portée actuelle se trouve dans le membre où l’objet fournit une valeur.</span><span class="sxs-lookup"><span data-stu-id="0a20e-162"><xref:System.Xaml.XamlObjectWriter.Result%2A> typically only contains a non-null value if it is called immediately after a call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, and if the current scope is in the member where the object provides a value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope RootNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope RootNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ RootNameScope { System::Windows::Markup::INameScope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a20e-163">Obtient le service <see cref="T:System.Windows.Markup.INameScope" /> qui maintient la portée de nom XAML pour le nœud racine absolu du writer d'objet XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-163">Gets the <see cref="T:System.Windows.Markup.INameScope" /> service that maintains the XAML namescope for the absolute node root of the XAML object writer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a20e-164">Service <see cref="T:System.Windows.Markup.INameScope" /> qui maintient la portée de nom XAML pour la racine actuelle du writer d'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-164">The <see cref="T:System.Windows.Markup.INameScope" /> service that maintains the XAML namescope for the current root of the object writer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a20e-165">La valeur de cette propriété peut-être provenir du contexte d’objet writer.</span><span class="sxs-lookup"><span data-stu-id="0a20e-165">The value of this property may come from the object writer context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a20e-166">Obtient le contexte de schéma XAML actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-166">Gets the active XAML schema context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a20e-167">Contexte du schéma XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-167">The XAML schema context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a20e-168">Contexte de schéma XAML est une source d’informations nécessaire pour les scénarios d’écriture d’objet plus pratiques.</span><span class="sxs-lookup"><span data-stu-id="0a20e-168">XAML schema context is a necessary information source for most practical object-writing scenarios.</span></span> <span data-ttu-id="0a20e-169">Le contexte de schéma XAML influence la recherche de type pour les types de stockage et conserve des informations sur les assemblys où il existe des types de stockage.</span><span class="sxs-lookup"><span data-stu-id="0a20e-169">The XAML schema context influences the type lookup for backing types and holds information about the assemblies where backing types exist.</span></span> <span data-ttu-id="0a20e-170">Le contexte de schéma XAML par défaut est basé sur les règles de mappage de type CLR.</span><span class="sxs-lookup"><span data-stu-id="0a20e-170">The default XAML schema context is based on CLR type-mapping rules.</span></span> <span data-ttu-id="0a20e-171">En général, les infrastructures fournissent leur propre contexte de schéma XAML pour garantir que les mécanismes de chargement d’assemblys correspondent à programmation modèles d’application de l’infrastructure.</span><span class="sxs-lookup"><span data-stu-id="0a20e-171">Frameworks typically provide their own XAML schema context in order to assure that that the assembly-loading mechanisms match the framework's programming amd application models.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineInfo">
      <MemberSignature Language="C#" Value="public void SetLineInfo (int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineInfo(int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLineInfo (lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLineInfo(int lineNumber, int linePosition);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">
          <span data-ttu-id="0a20e-172">Numéro de ligne du lecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-172">The line number from the reader.</span>
          </span>
        </param>
        <param name="linePosition">
          <span data-ttu-id="0a20e-173">Position de ligne du lecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-173">The line position from the reader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-174">Implémente <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> et fournit les informations de ligne pour les exceptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-174">Implements <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> and provides line information for exceptions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a20e-175">Cette méthode de service n’est pas destinée à être appelée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="0a20e-175">This service method is not intended to be called directly from your code.</span></span> <span data-ttu-id="0a20e-176">Toutefois, si vous créez une classe dérivée de <xref:System.Xaml.XamlObjectWriter> et souhaitez signaler un contexte où les numéros de ligne ne sont pas disponibles ou pas utiles, cette méthode peut être appelée.</span><span class="sxs-lookup"><span data-stu-id="0a20e-176">However, if you are creating a derived class from <xref:System.Xaml.XamlObjectWriter> and expect to report a context where line numbers are unavailable or not useful, this method may be called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ShouldProvideLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShouldProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldProvideLineInfo { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a20e-177">Obtient une valeur qui indique si un service d'informations de ligne doit fournir des valeurs et par conséquent également appeler la méthode <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> si nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-177">Gets a value that reports whether a line information service should provide values and therefore, should also call the <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> method when it is relevant.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a20e-178">
            <see langword="true" /> si les informations de ligne sont utilisées par le writer ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-178">
              <see langword="true" /> if line information is used by the writer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a20e-179">Cette implémentation retourne toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="0a20e-179">This implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a20e-180">Ferme la portée de membres actuelle et écrit éventuellement la valeur de la portée de membres pendant qu'elle se ferme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-180">Closes the current member scope, and may write the value of the member scope while it closes.</span>
          </span>
          <span data-ttu-id="0a20e-181">La nouvelle portée devient la portée d'objets parents du membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-181">The new scope becomes the parent object scope of the member.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">
          <span data-ttu-id="0a20e-182">Échec de la création de la valeur d'un membre à partir d'un nœud de valeur qui est rencontré entre cet appel et un <see langword="StartMember" /> précédent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-182">Failed to create member value from a value node that is encountered between this call and a previous <see langword="StartMember" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a20e-183">Ferme la portée d'objets actuelle dans le writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-183">Closes the current object scope in the writer.</span>
          </span>
          <span data-ttu-id="0a20e-184">La nouvelle portée d'objets devient la portée de membres parents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-184">The new object scope becomes the parent member scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a20e-185">Si cette `EndObject` position étendue ferme l’objet racine, la nouvelle étendue de l’objet devient la portée racine.</span><span class="sxs-lookup"><span data-stu-id="0a20e-185">If this `EndObject` position scope is closing the root object, the new object scope becomes the root scope.</span></span>  
  
 <span data-ttu-id="0a20e-186">L’appel à <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> ne peut-être pas encore créé l’objet, car un membre d’objet peut être une voie d’initialisation nécessaires, telles que le texte d’initialisation ou des paramètres d’initialisation.</span><span class="sxs-lookup"><span data-stu-id="0a20e-186">The call to <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> might not yet have created the object because an object member might be a necessary initialization pathway, such as initialization text or initialization parameters.</span></span> <span data-ttu-id="0a20e-187">Dans ce cas, l’appel à <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> écrit l’objet.</span><span class="sxs-lookup"><span data-stu-id="0a20e-187">For these cases, the call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> actually writes the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a20e-188">Écrit le <see langword="StartObject" /> conceptuel dans le graphique d'objet lorsque l'objet spécifié est une valeur par défaut ou implicite de la propriété parente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-188">Writes the conceptual <see langword="StartObject" /> into the object graph when the specified object is a default or implicit value of the parent property.</span>
          </span>
          <span data-ttu-id="0a20e-189">La valeur implicite provient des informations obtenues du contexte de schéma XAML et des informations de type de stockage, au lieu d'être spécifiée en tant que valeur d'objet dans le jeu de nœuds XAML d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-189">The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a20e-190">La différence entre l’écriture avec <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> et écrire avec <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> peuvent être consultés dans le graphique d’objet obtenu.</span><span class="sxs-lookup"><span data-stu-id="0a20e-190">The difference between writing with <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> and writing with <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> can be seen in the resulting object graph.</span></span> <span data-ttu-id="0a20e-191"><xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> ne construit pas une instance d’un type, car le <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API dispose d’aucune information d’informer le graphique d’objets des éléments à construire.</span><span class="sxs-lookup"><span data-stu-id="0a20e-191"><xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> does not construct an instance of a type because the <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API has no information to inform the object graph of what to construct.</span></span> <span data-ttu-id="0a20e-192">Au lieu de cela, l’objet a été créé lors de l’initialisation de la propriété parent ; pour un <xref:System.Xaml.XamlObjectWriter> n’avez pas besoin pour la construction.</span><span class="sxs-lookup"><span data-stu-id="0a20e-192">Instead, the object was created when the parent property was initialized; so a <xref:System.Xaml.XamlObjectWriter> does not need to construct it.</span></span> <span data-ttu-id="0a20e-193">En revanche, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> Spécifie qu’une instance de ce type doit être construite et insérée dans le graphique d’objets.</span><span class="sxs-lookup"><span data-stu-id="0a20e-193">In contrast, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> specifies that an instance of that type should be constructed and inserted into the object graph.</span></span>  
  
 <span data-ttu-id="0a20e-194">Si vous pensez que le flux de nœud XAML comme une série d’images, un <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> est équilibré à un <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="0a20e-194">If you think of the XAML node stream as a series of frames, a <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> is balanced to a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call.</span></span> <span data-ttu-id="0a20e-195">Par conséquent, le nombre de <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> appels doivent être égal au nombre de <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> appels dans le cadre d’une évaluation complète de l’écriture de l’objet du flux de nœud XAML.</span><span class="sxs-lookup"><span data-stu-id="0a20e-195">Therefore, the number of <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> calls should equal the number of <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> calls as part of a complete object-writing evaluation of the XAML node stream.</span></span>  
  
 <span data-ttu-id="0a20e-196">L’aide conceptuelle `StartObject` positionner pour un objet implicite dans le graphique d’objets est nécessaire, car même si la valeur de l’objet est une valeur par défaut implicite, cet objet peut avoir encore des membres qui doivent être écrits selon le flux de nœud XAML.</span><span class="sxs-lookup"><span data-stu-id="0a20e-196">The conceptual `StartObject` position for an implicit object in the object graph is necessary because although the object value itself is an implicit default, that object might still have members that need to be written based on the XAML node stream.</span></span> <span data-ttu-id="0a20e-197">Un scénario classique où cela se produit est lorsque <xref:System.Xaml.XamlObjectWriter> écrit des nœuds de membres pour une propriété de collection et l’initialisation de la collection est implicite à la création de l’objet qui possède la propriété de collection.</span><span class="sxs-lookup"><span data-stu-id="0a20e-197">A typical scenario where this occurs is when <xref:System.Xaml.XamlObjectWriter> writes member nodes for a collection property, and the collection initialization is implicit to creating the object that owns the collection property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">
          <span data-ttu-id="0a20e-198">Déclaration d'espace de noms à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-198">The namespace declaration to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-199">Définit une déclaration d'espace de noms qui s'applique à la portée d'objets ou de membres suivante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-199">Defines a namespace declaration that applies to the next object scope or member scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a20e-200">Une déclaration d’espace de noms peut être écrite si la portée actuelle est une portée racine, étendue de l’objet ou membre.</span><span class="sxs-lookup"><span data-stu-id="0a20e-200">A namespace declaration can be written if the current scope is a root scope, object scope, or member scope.</span></span> <span data-ttu-id="0a20e-201">Toutefois, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> peut uniquement être appelée immédiatement avant un appel à une des valeurs suivantes : <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, ou <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a20e-201">However, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> can only be called immediately before a call to one of the following: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>.</span></span> <span data-ttu-id="0a20e-202">Le consécutifs <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> cas est pour l’écriture de plusieurs déclarations d’espace de noms dans le même nœud.</span><span class="sxs-lookup"><span data-stu-id="0a20e-202">The consecutive <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> case is for writing multiple namespace declarations to the same node.</span></span> <span data-ttu-id="0a20e-203">Enfin, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> ou <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> doit être appelée.</span><span class="sxs-lookup"><span data-stu-id="0a20e-203">Eventually, either <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> must be called.</span></span>  
  
 <span data-ttu-id="0a20e-204"><xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> n’utilisez pas un `Start` / `End` métaphore.</span><span class="sxs-lookup"><span data-stu-id="0a20e-204"><xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> does not use a `Start`/`End` metaphor.</span></span> <span data-ttu-id="0a20e-205">Bien qu’un espace de noms XAML ait des membres dans le sens de la représentation CLR, les membres sont connus et n’avez pas besoin d’être représentées comme un type spécial de <xref:System.Xaml.XamlMember> pour l’extensibilité.</span><span class="sxs-lookup"><span data-stu-id="0a20e-205">Although a XAML namespace has members in the CLR representation sense, the members are known and do not need to be represented as a special type of <xref:System.Xaml.XamlMember> for extensibility.</span></span> <span data-ttu-id="0a20e-206">Pour accéder aux valeurs d’une <xref:System.Xaml.NamespaceDeclaration>, vous accédez à son <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> et <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="0a20e-206">To access the values of a <xref:System.Xaml.NamespaceDeclaration>, you access its <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> and <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> properties.</span></span>  
  
 <span data-ttu-id="0a20e-207">Une déclaration d’espace de noms peut avoir un <xref:System.String.Empty?displayProperty=nameWithType> valeur pour le préfixe.</span><span class="sxs-lookup"><span data-stu-id="0a20e-207">A namespace declaration may have a <xref:System.String.Empty?displayProperty=nameWithType> value for the prefix.</span></span> <span data-ttu-id="0a20e-208">A <xref:System.String.Empty?displayProperty=nameWithType> préfixe représente une déclaration d’espace de noms XAML par défaut.</span><span class="sxs-lookup"><span data-stu-id="0a20e-208">A <xref:System.String.Empty?displayProperty=nameWithType> prefix represents a declaration of the default XAML namespace.</span></span> <span data-ttu-id="0a20e-209">N’essayez pas d’utiliser null pour représenter le préfixe par défaut ;  elle lève une exception dans cette API.</span><span class="sxs-lookup"><span data-stu-id="0a20e-209">Do not attempt to use null to represent the default prefix;  it throws an exception in this API.</span></span> <span data-ttu-id="0a20e-210">Pour plus d'informations, consultez <xref:System.Xaml.NamespaceDeclaration>.</span><span class="sxs-lookup"><span data-stu-id="0a20e-210">For more information, see <xref:System.Xaml.NamespaceDeclaration>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a20e-211">
            <paramref name="namespaceDeclaration" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-211">The <paramref name="namespaceDeclaration" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a20e-212">Un composant de <paramref name="namespaceDeclaration" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-212">A component of <paramref name="namespaceDeclaration" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlObjectReaderException">
          <span data-ttu-id="0a20e-213">Tentative d'écriture d'un nœud d'espaces de noms XAML dans une portée non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-213">Tried to write a XAML namespace node in an invalid scope.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="0a20e-214">Propriété XAML à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-214">The XAML property to write.</span>
          </span>
          <span data-ttu-id="0a20e-215">En général, vous obtenez cette valeur d'un lecteur XAML via le flux de nœud XAML intermédiaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-215">Typically you obtain this value from a XAML reader through the XAML node stream intermediate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-216">Écrit un nouveau nœud membre dans la portée d'objets actuelle, et la portée devient une nouvelle portée de membres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-216">Writes a new member node into the current object scope, and the scope becomes a new member scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="0a20e-217">Surveiller un <xref:System.Xaml.XamlDuplicateMemberException>, qui se produit lorsque la même propriété XAML est définie deux fois dans l’entrée XAML.</span><span class="sxs-lookup"><span data-stu-id="0a20e-217">Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input.</span></span> <span data-ttu-id="0a20e-218">Dans les cas simples, par exemple lorsque la même propriété est définie dans la syntaxe d’attribut et de syntaxe d’élément de propriété, vous pouvez facilement voir cette exception dans la balise d’entrée.</span><span class="sxs-lookup"><span data-stu-id="0a20e-218">In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup.</span></span> <span data-ttu-id="0a20e-219">Toutefois, des cas peuvent se produire plus difficiles à détecter.</span><span class="sxs-lookup"><span data-stu-id="0a20e-219">However, more subtle cases can occur that are more difficult to spot.</span></span> <span data-ttu-id="0a20e-220">Par exemple, cette exception peut se produire si vous définissez une propriété de contenu XAML, si vous impliquez des propriétés ambiantes XAML, et si une propriété permet à la fois une utilisation pouvant être attachée et une utilisation de l’instance.</span><span class="sxs-lookup"><span data-stu-id="0a20e-220">For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage.</span></span> <span data-ttu-id="0a20e-221">Dans les phases de développement de débogage, vous pouvez souvent trouver cette exception en consultant la représentation sous forme de nœud XAML intermédiaire qui connecte la lecture de balise et l’écriture de graphique d’objet.</span><span class="sxs-lookup"><span data-stu-id="0a20e-221">In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">
          <span data-ttu-id="0a20e-222">
            <paramref name="property" /> a <see cref="P:System.Xaml.XamlMember.IsUnknown" /> défini à <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-222">
              <paramref name="property" /> has <see cref="P:System.Xaml.XamlMember.IsUnknown" /> set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="0a20e-223">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-223">-or-</span>
          </span>
          <span data-ttu-id="0a20e-224">
            <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> passé, ce qui indique que le contenu du flux de nœud XAML pour un objet ne prend pas en charge le contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-224">
              <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> passed, which indicates that the XAML node stream contained content for an object that does not support content.</span>
          </span>
          <span data-ttu-id="0a20e-225">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-225">-or-</span>
          </span>
          <span data-ttu-id="0a20e-226">Tentative d'écriture d'un membre de démarrage dans une portée non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-226">Attempted to write a start member in an invalid scope.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlDuplicateMemberException">
          <span data-ttu-id="0a20e-227">
            <paramref name="property" /> spécifie une propriété qui est déjà définie explicitement dans la portée d'objet parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-227">
              <paramref name="property" /> specifies a property that is already explicitly set in the parent object scope.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a20e-228">
            <paramref name="property" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-228">
              <paramref name="property" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ xamlType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">
          <span data-ttu-id="0a20e-229">Type à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-229">The type to write.</span>
          </span>
          <span data-ttu-id="0a20e-230">En général, vous obtenez cette valeur d'un lecteur XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-230">Typically you obtain this value from a XAML reader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-231">Écrit un nouveau nœud objet dans la portée actuelle et définit la portée sur une nouvelle portée d'objets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-231">Writes an object node into the current scope, and sets the scope to a new object scope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">
          <span data-ttu-id="0a20e-232">Traitement d'un type <see cref="P:System.Xaml.XamlType.IsUnknown" />, et impossible de créer un objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-232">Processing an <see cref="P:System.Xaml.XamlType.IsUnknown" /> type and cannot create an object.</span>
          </span>
          <span data-ttu-id="0a20e-233">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-233">-or-</span>
          </span>
          <span data-ttu-id="0a20e-234">Tentative d'écriture d'un objet de démarrage dans une portée non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-234">Attempted to write a start object in an invalid scope.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlParseException">
          <span data-ttu-id="0a20e-235">Tentative d'écriture d'un objet racine lorsque l'objet racine a déjà été fourni dans les paramètres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-235">Attempted to write a root object when the root object was already provided in the settings.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a20e-236">
            <paramref name="xamlType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-236">
              <paramref name="xamlType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a20e-237">Si la portée actuelle est à l’intérieur d’une collection, un dictionnaire ou un tableau, la nouvelle instance doit être ajoutée à la collection, un dictionnaire ou un tableau à l’aide de la <see langword="Add" /> méthode du type approprié.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a20e-237">If the current scope is inside a collection, dictionary, or array, the new instance should be added to the collection, dictionary, or array by using the <see langword="Add" /> method of the relevant type.</span>
            </span>
            <span data-ttu-id="0a20e-238">Dans le cas contraire, le membre doit être assigné à la nouvelle instance.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a20e-238">Otherwise, the member should be assigned to the new instance.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0a20e-239">Valeur à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-239">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a20e-240">Écrit une valeur dans la portée de membres actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-240">Writes a value to the current member scope.</span>
          </span>
          <span data-ttu-id="0a20e-241">Si la portée actuelle est à l'intérieur d'une collection, d'un dictionnaire ou d'un objet tableau, la valeur doit être ajoutée à la collection, au dictionnaire ou au tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-241">If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">
          <span data-ttu-id="0a20e-242">Tentative d'écriture d'une valeur dans une portée non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a20e-242">Attempted to write a value in an invalid scope.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>