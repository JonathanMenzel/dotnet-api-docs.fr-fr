<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlObjectWriterSettings.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a94fb89f28b3f761992da4505a75cc54c6b173a7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a94fb89f28b3f761992da4505a75cc54c6b173a7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Provides specific XAML writer settings for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</source>
          <target state="translated">Fournit des paramètres de writer XAML spécifiques pour <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> can function within specified <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> peut fonctionner dans spécifié <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Where settings are not specified, an instance of <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph> exists that has default values for a constructed <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, and this instance can be used in merges of settings for a derived class.</source>
          <target state="translated">Où les paramètres ne sont pas spécifiés, une instance de <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph> existe qui a des valeurs par défaut pour un élément construit <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, et cette instance peut être utilisée dans des fusions de paramètres pour une classe dérivée.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source>The settings instance to copy.</source>
          <target state="translated">Instance de paramètres à copier.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class that is based on the copy of an existing instance.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph>, qui est basée sur la copie d'une instance existante.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>Gets or sets <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> permissions that the XAML writer observes.</source>
          <target state="translated">Obtient ou définit les autorisations <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> que le writer XAML observe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> permissions.</source>
          <target state="translated">Autorisations <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>This property indicates the expected access level for non-public members, which are accessed in partial trust through a partial-trust tolerant runtime.</source>
          <target state="translated">Cette propriété indique le niveau d’accès attendu pour les membres non publics, qui sont accessibles en confiance partielle via une exécution à tolérance de panne de confiance partielle.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> phase of the object lifetime for each created object.</source>
          <target state="translated">Obtient ou définit une référence à un rappel appelé par le writer XAML à la phase <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> de la durée de vie de chaque objet créé.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
          <source>A callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> phase of object lifetime.</source>
          <target state="translated">Rappel appelé par le writer XAML à la phase <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> de la durée de vie d'objet.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> phase of the object lifetime for each created object.</source>
          <target state="translated">Obtient ou définit une référence à un rappel appelé par le writer XAML à la phase <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> de la durée de vie de chaque objet créé.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
          <source>A callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> phase of object lifetime.</source>
          <target state="translated">Rappel appelé par le writer XAML à la phase <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> de la durée de vie d'objet.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.</source>
          <target state="translated">Obtient ou définit une référence à un rappel appelé par le writer XAML à la phase d'écriture post-membre de la durée de vie de chaque objet créé.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
          <source>A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.</source>
          <target state="translated">Rappel appelé par le writer XAML à la phase d'écriture post-membre de la durée de vie d'objet.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.</source>
          <target state="translated">Obtient ou définit une référence à un rappel appelé par le writer XAML à la phase d'écriture pré-membre de la durée de vie de chaque objet créé.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
          <source>A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.</source>
          <target state="translated">Rappel appelé par le writer XAML à la phase d'écriture pré-membre de la durée de vie d'objet.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Gets or sets the XAML namescope to use for registering names from the XAML writer if <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit la portée de nom XAML à utiliser pour l'inscription de noms à partir du writer XAML si <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>The XAML namescope to use for registering names.</source>
          <target state="translated">Portée de nom XAML à utiliser pour l'inscription de noms.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Specific contexts for a <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> might use an external XAML namescope.</source>
          <target state="translated">Contextes spécifiques d’un <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> peut utiliser une portée de nom XAML externe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>WPF Usage Notes</source>
          <target state="translated">Remarques sur l'utilisation de WPF</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>In the WPF XAML implementation, XAML writer operations that are initiated by <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph> specify a separate XAML namescope.</source>
          <target state="translated">Dans l’implémentation XAML WPF, les opérations de writer XAML qui sont lancés par <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph> spécifier une portée de nom XAML séparée.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>In this WPF scenario, templates should not share a XAML namescope with the root of the XAML page that defines them.</source>
          <target state="translated">Dans ce scénario WPF, les modèles ne doivent pas partager de portée de nom XAML avec la racine de la page XAML qui les définit.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Instead, they should process into a separate, designated XAML namescope.</source>
          <target state="translated">Au lieu de cela, ils doivent traiter une portée de nom XAML désignée séparée.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>Gets or sets a value that specifies whether the XAML writer should ignore (not call) <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementations on a <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> in type-converter situations.</source>
          <target state="translated">Obtient ou définit une valeur qui spécifie si le writer XAML doit ignorer (ne pas appeler) les implémentations de <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> sur un <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> dans les situations de convertisseur de type.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the XAML writer ignores <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementations; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le writer XAML ignore des implémentations de <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class and its <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> method are part of an overall design for type conversion in the CLR.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> classe et ses <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> méthode font partie d’une conception globale pour la conversion de type dans le CLR.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>In XAML systems, you can typically assume that type-converter input is identifiable by the XAML reader, and for purposes of input, is always a string.</source>
          <target state="translated">Dans les systèmes XAML, vous pouvez généralement supposer qu’entrée de convertisseur de type est identifiable par le lecteur XAML et à des fins d’entrée, est toujours une chaîne.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>If you set this property to <ph id="ph1">`true`</ph>, you enable a mode where this assumption is codified in the XAML object writer behavior.</source>
          <target state="translated">Si vous définissez cette propriété sur <ph id="ph1">`true`</ph>, vous activez un mode où cette hypothèse est codifiée dans le comportement de writer d’objet XAML.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>This mode supports a compatibility requirement for previous versions of WPF XAML.</source>
          <target state="translated">Ce mode prend en charge une spécification de compatibilité pour les versions antérieures de XAML WPF.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>Gets or sets a value that determines whether to disable a default <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> feature that runs type conversion on the <ph id="ph2">&lt;paramref name="K" /&gt;</ph> component of a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> before writing the object graph representation.</source>
          <target state="translated">Obtient ou définit une valeur qui détermine s'il convient de désactiver une fonctionnalité <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> par défaut qui exécute la conversion de type sur le composant <ph id="ph2">&lt;paramref name="K" /&gt;</ph> d'un <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> avant d'écrire la représentation de graphique d'objet.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="K" /&gt;</ph> type conversion for a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> object should be disabled.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la conversion de type <ph id="ph2">&lt;paramref name="K" /&gt;</ph> pour un objet <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> doit être désactivée.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if performing <ph id="ph2">&lt;paramref name="K" /&gt;</ph> type conversion for a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> object applies.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> si la conversion de type <ph id="ph2">&lt;paramref name="K" /&gt;</ph> pour un objet <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> s'applique.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>For more information about the <ph id="ph1">`K`</ph> type conversion feature, see Remarks in <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur la <ph id="ph1">`K`</ph> fonctionnalité de conversion de type, consultez la section Notes dans <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source>Gets or sets a value that determines whether name registration should occur against the specified <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit une valeur qui détermine si l'inscription des noms doit se faire par rapport au <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if name registration should occur against the <ph id="ph2">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if name registration should occur into the parent XAML namescope.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'inscription des noms doit se faire par rapport au <ph id="ph2">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph> ; <ph id="ph3">&lt;see langword="false" /&gt;</ph> si l'inscription des noms doit se faire dans la portée de nom XAML parente.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>Gets or sets a preexisting root object for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operations.</source>
          <target state="translated">Obtient ou définit un objet racine préexistant pour les opérations <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>A preexisting root object for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operations.</source>
          <target state="translated">Objet racine préexistant pour les opérations <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>If you set this value, the root object instance is used as an implicit <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> call (with object input that is direct instead of coming from the reader) that precedes the first explicit node-write call by the <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">Si vous définissez cette valeur, l’instance d’objet racine est utilisée comme implicite <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> appel (avec l’entrée d’objet qui est directe au lieu de venir du lecteur) qui précède le premier appel d’écriture de nœud explicite par le <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>Any error checking, such as verifying the XAML type of the provided root object, is deferred until that implicit <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> call, instead of being checked when you set this settings property.</source>
          <target state="translated">Toute vérification des erreurs, telles que la vérification du type XAML de l’objet racine fourni, est différée jusqu'à ce qu’implicite <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> appel, au lieu d’en cours de vérification lorsque vous définissez cette propriété de paramètres.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.</source>
          <target state="translated">Obtient ou définit une valeur qui détermine si le writer XAML omet de rechercher le chemin du code qui recherche les propriétés en double.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the duplicate property check should be omitted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la recherche de propriétés en double doit être omise ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>The specified code path checks the currently assigned properties and throws an exception if a duplicate property set of the named ambient property is attempted.</source>
          <target state="translated">Le chemin d’accès du code spécifié vérifie les propriétés actuellement attribuées et lève une exception si un jeu de propriétés en double de la propriété ambiante nommée est tenté.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> should omit to call <ph id="ph2">&lt;see langword="ProvideValue" /&gt;</ph> on a markup extension, which is relevant when the markup extension represents the root of an object graph.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> doit omettre d'appeler <ph id="ph2">&lt;see langword="ProvideValue" /&gt;</ph> sur une extension de balisage, ce qui est pertinent lorsque l'extension de balisage représente la racine d'un graphique d'objet.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> should omit to call <ph id="ph3">&lt;see langword="ProvideValue" /&gt;</ph> on a markup extension; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> doit omettre l'appel à <ph id="ph3">&lt;see langword="ProvideValue" /&gt;</ph> sur une extension de balisage ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>This setting is used when the <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> processes the root node (<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>, or members within the root node).</source>
          <target state="translated">Ce paramètre est utilisé lorsque le <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> traite le nœud racine (<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>, ou des membres au sein du nœud racine).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>This property is relevant for template and defer-load scenarios.</source>
          <target state="translated">Cette propriété est pertinente pour les scénarios de modèle et de chargement différé.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>Used in the <ph id="ph1">&lt;see langword="BeginInitHandler" /&gt;</ph> in place of the actual <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</source>
          <target state="translated">Utilisé dans <ph id="ph1">&lt;see langword="BeginInitHandler" /&gt;</ph> à la place du <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph> réel.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to be used in place of the actual <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> à utiliser à la place le réel <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>Used internally to provide the correct info in the handler, while keeping runtime behavior fully compatible.</source>
          <target state="translated">Utilisé en interne pour fournir les informations correctes dans le gestionnaire, tout en conservant le comportement d’exécution est entièrement compatible.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>Gets or sets the handler to use when the object writer calls into a CLR-implemented <ph id="ph1">&lt;see langword="SetValue" /&gt;</ph> for dependency properties.</source>
          <target state="translated">Obtient ou définit le gestionnaire à utiliser lorsque le writer d'objet appelle un <ph id="ph1">&lt;see langword="SetValue" /&gt;</ph> implémenté CLR pour rechercher les propriétés de dépendance.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>A handler implementation that handles this case.</source>
          <target state="translated">Implémentation de gestionnaire qui gère ce cas.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>The event handler is based on the generic <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> delegate that uses the <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> event data.</source>
          <target state="translated">Le Gestionnaire d’événements est basé sur le type générique <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> délégué qui utilise le <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> les données d’événement.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>