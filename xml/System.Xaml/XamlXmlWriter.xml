<Type Name="XamlXmlWriter" FullName="System.Xaml.XamlXmlWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce096a6a9bab68a836a7072d0a6ebf12e48bac45" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39796950" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlXmlWriter : System.Xaml.XamlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlXmlWriter extends System.Xaml.XamlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlXmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlXmlWriter&#xA;Inherits XamlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlXmlWriter : System::Xaml::XamlWriter" />
  <TypeSignature Language="F#" Value="type XamlXmlWriter = class&#xA;    inherit XamlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Utilise une classe de prise en charge <see cref="T:System.IO.TextWriter" /> ou <see cref="T:System.Xml.XmlWriter" /> pour écrire un flux de nœud XAML dans une forme sérialisée de balisage ou de texte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe est généralement utilisée dans les scénarios de sérialisation.  
  
## <a name="how-to-use-xamlxmlwriter"></a>Comment utiliser XamlXmlWriter  
 Le <xref:System.Xaml.XamlWriter> API dispose de plusieurs méthodes qui écrivent des différents types de nœuds XAML. Collectivement, ceux-ci sont référencés dans la documentation en tant que le `Write` méthodes d’un <xref:System.Xaml.XamlWriter>. <xref:System.Xaml.XamlXmlWriter> utilise plusieurs classes d’état interne pour déterminer l’opération à effectuer une de ses `Write` implémentations est appelée. Un `Write` appel utilise les États pour déterminer si l’élément demandé, un attribut ou une valeur peut être écrits, ou si une exception est levée. Par exemple, si vous appelez <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> et l’état de la <xref:System.Xaml.XamlXmlWriter> position du nœud actuel est une valeur ou au sein d’un membre, une exception est levée. En règle générale, les appelants de la <xref:System.Xaml.XamlXmlWriter> API tenez compte du type de nœud XAML actuel qui vient du lecteur XAML et le flux de nœud XAML. En fonction de ces connaissances, les appelants doivent éviter d’appeler `Write` API qui ne sont pas pertinents pour le type de nœud actuel.  
  
## <a name="xaml-namespaces-and-xamlxmlwriter"></a>Espaces de noms XAML et XamlXmlWriter  
 L’espace de noms XAML écrit le comportement de <xref:System.Xaml.XamlXmlWriter> est complexe et n’est pas limité à des appels explicites à <xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A>. Au lieu de cela, autres `Write` appels, tels que <xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A>, peuvent nécessiter que la déclaration d’espace de noms être écrites à un point particulier dans la structure de nœuds. Le writer XAML génère un préfixe selon sa propre logique, ou utilise des informations à partir de la <xref:System.Xaml.INamespacePrefixLookup> service pour déterminer un préfixe préféré. En outre, explicite <xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A> appels peut différer ou ne rien retourner si la déclaration d’espace de noms XAML est déjà applicable et déclaré ailleurs.  
  
## <a name="write-method-exceptions"></a>Écrire des Exceptions des méthodes  
 Les exceptions levées par le <xref:System.Xaml.XamlXmlWriter> `Write` méthodes sont généralement <xref:System.InvalidOperationException> ou <xref:System.Xaml.XamlXmlWriterException>.  
  
 Une <xref:System.InvalidOperationException> indique souvent qu’un lecteur XAML a passé une structure de nœud non valide dans le flux de nœud XAML. Dans ce cas la structure de nœud n’est pas valide pour des raisons qui ne sont pas liées à la validation d’un schéma XAML ou un contexte de schéma XAML. Au lieu de cela, le flux de nœud n’est pas valide dans sa forme basique. Par exemple, si une implémentation de lecteur XAML défaillante a généré un flux de nœud XAML qui comportait deux consécutifs `StartObject` nœuds, la tentative d’appel de la seconde <xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A> lèverait une <xref:System.InvalidOperationException>. Tous les enregistreurs XAML considère une telle opération n’est pas valide. Un autre exemple d’un <xref:System.InvalidOperationException> est lorsque les informations d’espace de noms XAML ne sont pas disponibles via le contexte de schéma XAML qui s’applique à la position actuelle du flux de nœud.  
  
 Un <xref:System.Xaml.XamlXmlWriterException> indique une exception où cette implémentation du writer XAML particulière choisit de lever une exception basée sur ses fonctionnalités prévues. Un <xref:System.Xaml.XamlXmlWriterException> peut indiquer des cas spécifiques où un <xref:System.Xaml.XamlXmlWriter> ne respecte pas son propre état ou les paramètres. Par exemple, un <xref:System.Xaml.XamlXmlWriterException> peut entraîner de tentatives d’écriture des informations d’espace de noms XAML à une position qui le <xref:System.Xaml.XamlXmlWriter> et son format de sérialisation non prise en charge, ou l’écriture des membres en double lors de l’instance <xref:System.Xaml.XamlXmlWriterSettings> empêchent.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.Stream * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (stream, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="stream">Flux de données à écrire.</param>
        <param name="schemaContext">Contexte de schéma XAML pour le writer XAML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'un flux de données.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.TextWriter textWriter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::TextWriter ^ textWriter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.TextWriter * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (textWriter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="textWriter">
          <see cref="T:System.IO.TextWriter" /> qui écrit la sortie.</param>
        <param name="schemaContext">Contexte de schéma XAML pour le writer XAML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'une base <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textWriter" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.Xml.XmlWriter xmlWriter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter xmlWriter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::Xml::XmlWriter ^ xmlWriter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.Xml.XmlWriter * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (xmlWriter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">
          <see cref="T:System.Xml.XmlWriter" /> qui écrit la sortie.</param>
        <param name="schemaContext">Contexte de schéma XAML pour le writer XAML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'une base <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlWriter" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.Stream * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (stream, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="stream">Flux de données à écrire.</param>
        <param name="schemaContext">Contexte de schéma XAML pour le writer XAML.</param>
        <param name="settings">Instance de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, qui possède généralement des paramètres spécifiques non définis par défaut.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'un flux à l'aide d'un objet de paramètres de writer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ne modifiez pas les valeurs de la `settings` objet après la <xref:System.Xaml.XamlXmlWriter> instance est construite. <xref:System.Xaml.XamlXmlWriter> Impossible de mettre à jour ses paramètres internes en fonction des valeurs de paramètres qui sont mutables au moment de l’exécution. Paramètres doivent être fournis uniquement pour l’initialisation. Vous pouvez fusionner des paramètres d’un writer XAML actif en utilisant l’une de le <xref:System.Xaml.XamlXmlWriterSettings> signatures de constructeur ; Toutefois, vous devez appliquer ensuite ces paramètres à une nouvelle instance de writer XAML au lieu d’essayer d’ajuster l’existant.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.TextWriter textWriter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::TextWriter ^ textWriter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.TextWriter * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (textWriter, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="textWriter">
          <see cref="T:System.IO.TextWriter" /> qui écrit la sortie.</param>
        <param name="schemaContext">Contexte de schéma XAML pour le writer XAML.</param>
        <param name="settings">Instance de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, qui possède généralement des paramètres spécifiques non définis par défaut.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'une base <see cref="T:System.IO.TextWriter" />, à l'aide d'un objet de paramètres.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ne modifiez pas les valeurs de la `settings` objet après la <xref:System.Xaml.XamlXmlWriter> instance est construite. <xref:System.Xaml.XamlXmlWriter> Impossible de mettre à jour ses paramètres internes en fonction des valeurs de paramètres qui sont mutables au moment de l’exécution. Paramètres doivent être fournis uniquement pour l’initialisation. Vous pouvez fusionner des paramètres d’un writer XAML actif en utilisant l’une de le <xref:System.Xaml.XamlXmlWriterSettings> signatures de constructeur ; Toutefois, vous devez appliquer ensuite ces paramètres à une nouvelle instance de writer XAML au lieu d’essayer d’ajuster l’existant.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textWriter" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.Xml.XmlWriter xmlWriter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter xmlWriter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::Xml::XmlWriter ^ xmlWriter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.Xml.XmlWriter * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (xmlWriter, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">
          <see cref="T:System.Xml.XmlWriter" /> qui écrit la sortie.</param>
        <param name="schemaContext">Contexte de schéma XAML pour le writer XAML.</param>
        <param name="settings">Instance de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, qui possède généralement des paramètres spécifiques non définis par défaut.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'une base <see cref="T:System.Xml.XmlWriter" />, à l'aide d'un objet de paramètres.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ne modifiez pas les valeurs de la `settings` objet après la <xref:System.Xaml.XamlXmlWriter> instance est construite. <xref:System.Xaml.XamlXmlWriter> Impossible de mettre à jour ses paramètres internes en fonction des valeurs de paramètres qui sont mutables au moment de l’exécution. Paramètres doivent être fournis uniquement pour l’initialisation. Vous pouvez fusionner des paramètres d’un writer XAML actif en utilisant l’une de le <xref:System.Xaml.XamlXmlWriterSettings> signatures de constructeur ; Toutefois, vous devez appliquer ensuite ces paramètres à une nouvelle instance de writer XAML au lieu d’essayer d’ajuster l’existant.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlWriter" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlXmlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> pour libérer les ressources non managées ; sinon, <see langword="false" />.</param>
        <summary>Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlXmlWriter" /> et libère éventuellement les ressources managées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette implémentation appelle `Close` sur sous-jacent <xref:System.Xml.XmlWriter> ou <xref:System.IO.TextWriter> pour les cas où <xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A> est `true` dans aucun fourni <xref:System.Xaml.XamlXmlWriterSettings>. Sinon, elle appelle <xref:System.Xaml.XamlXmlWriter.Flush%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="xamlXmlWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Appelle la méthode <see langword="Flush" /> du <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent, ce qui a pour effet d'écrire toutes les données en mémoire tampon, puis de fermer le writer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Dispose` comportement pour un <xref:System.Xaml.XamlXmlWriter> peut être influencée par ses paramètres de writer, surtout par <xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlXmlWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le contexte de schéma XAML utilisé par ce <see cref="T:System.Xaml.XamlXmlWriter" /> pour le traitement.</summary>
        <value>Contexte de schéma XAML utilisé par ce <see cref="T:System.Xaml.XamlXmlWriter" /> pour le traitement XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, un writer XAML obtient son contexte de schéma XAML à partir du lecteur XAML associé qui fournit le flux de nœud XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlXmlWriterSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlXmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As XamlXmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlXmlWriterSettings ^ Settings { System::Xaml::XamlXmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xaml.XamlXmlWriterSettings" Usage="System.Xaml.XamlXmlWriter.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlXmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les paramètres de writer utilisés par ce <see cref="T:System.Xaml.XamlXmlWriter" /> pour le traitement XAML.</summary>
        <value>Paramètres de writer utilisés par ce <see cref="T:System.Xaml.XamlXmlWriter" /> pour le traitement XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur que vous obtenez à partir de cette propriété est une copie et non une référence. Modification des valeurs de propriété sur les paramètres n’affecte pas actif <xref:System.Xaml.XamlXmlWriter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlXmlWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Écrit un nœud membre de fin XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de données de nœud XAML n'est pas dans un membre ou si l'état du writer interne ne prend pas en charge l'écriture dans un membre de fin.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La position actuelle du flux de nœud XAML n'est pas dans un membre.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">L'état du writer actuel ne prend pas en charge l'écriture d'un membre de fin.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlXmlWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Écrit un nœud objet de fin XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de nœud XAML en cours de traitement est incompatible avec l'écriture d'un objet de fin.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans le balisage et le texte des représentations de XAML, un objet de fin est une balise de fermeture.  
  
 La plus courante de cas où <xref:System.InvalidOperationException> est levée par <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> est lorsque la position actuelle du flux de nœud XAML est toujours dans un membre, et <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> est appelée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La position actuelle du flux de nœud XAML n'est pas dans une portée où un membre de fin peut être écrit.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">L'état du writer actuel ne prend pas en charge l'écriture d'un objet de fin.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlXmlWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Écrit un objet dans les cas où l'objet spécifié est une valeur par défaut ou implicite de la propriété écrite, au lieu d'être spécifié en tant que valeur d'objet dans le jeu de nœuds XAML d'entrée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlXmlWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">Déclaration d'espace de noms XAML à écrire.</param>
        <summary>Écrit les informations d'espace de noms dans le <see cref="T:System.Xml.XmlWriter" /><see cref="T:System.IO.TextWriter" /> sous-jacent. Peut lever une exception pour certains états ; toutefois, peut à la place différer l'écriture des informations d'espace de noms jusqu'à ce que le writer et le flux de données de nœud XAML en cours de traitement aient atteint une position à laquelle une déclaration d'espace de noms XAML peut être insérée.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceDeclaration" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceDeclaration" /> n'est pas une déclaration d'espace de noms XAML valide (possède un préfixe null ou un composant d'identificateur null).</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">L'état du writer actuel ne prend pas en charge l'écriture d'une déclaration d'espace de noms XAML.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlXmlWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">Identificateur de membre XAML du membre à écrire.</param>
        <summary>Écrit un nœud membre de début XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de données de nœud XAML est dans un autre membre ou si elle n'est pas dans une portée ou un état de writer dans laquelle/lequel un membre de début peut être écrit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Logique interne par défaut dans le <xref:System.Xaml.XamlXmlWriter> essaie d’abord écrire le membre sous forme d’attribut. Si aucune forme d’attribut n’est pris en charge, car la propriété ou sa valeur ne prend pas en charge la syntaxe de texte, un élément de propriété est écrite à la place. Si la propriété est une propriété de contenu XAML, un `GetObject` cas ou une propriété implicite, autres formes XAML peuvent être écrits, tels que le texte interne ou un enfant de l’objet qui n’a aucun membre intermédiaire.  
  
 L’exception de membre en double n’est jamais levée si <xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A> est `true` dans le <xref:System.Xaml.XamlXmlWriterSettings> objet qui a été utilisé pour les paramètres pour ce <xref:System.Xaml.XamlXmlWriter>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="property" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="property" /> n’est pas un <see cref="T:System.Xaml.XamlMember" /> valide.</exception>
        <exception cref="T:System.InvalidOperationException">La position actuelle du flux de nœud XAML n'est pas valide pour l'écriture d'un membre de début.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">L'état du writer n'est pas valide pour l'écriture d'un membre de début.  
  
- ou - 
Le writer XAML a essayé d'écrire dans un membre dupliqué. Cette exception peut avoir une exception interne plus précise.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlXmlWriter.WriteStartObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Xaml.XamlType" /> (identificateur de type XAML) pour l'objet à écrire.</param>
        <summary>Écrit un nœud objet de début XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de données de nœud XAML n'est pas dans une portée dans laquelle un objet de début peut être écrit ou si l'état du writer ne permet pas l'écriture d'un objet de début.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> n’est pas un <see cref="T:System.Xaml.XamlType" /> valide.</exception>
        <exception cref="T:System.InvalidOperationException">La position actuelle du flux de nœud XAML n'est pas valide pour l'écriture d'un nouvel objet de début.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">L'état du writer XAML n'est pas valide pour l'écriture d'un nouvel objet de début.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlXmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Informations de valeur à écrire.</param>
        <summary>Écrit un nœud de valeur XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de nœud XAML n'est pas valide pour l'écriture d'une valeur ou si l'état du writer ne permet pas l'écriture d'une valeur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’entrée `value` peut être `null`, qui prend en charge l’écriture explicite null comme une valeur sérialisée. Ce comportement utilise le <xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType> définition en tant que <xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A> d’entrée et appelle immédiatement <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La position actuelle du flux de nœud XAML n'est pas valide pour l'écriture d'une valeur.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">L'état du writer XAML ne prend pas en charge l'écriture d'un nœud de valeur.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> spécifie une valeur qui n'est pas null ou une chaîne.</exception>
      </Docs>
    </Member>
  </Members>
</Type>