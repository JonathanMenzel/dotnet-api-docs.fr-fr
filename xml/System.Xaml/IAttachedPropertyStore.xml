<Type Name="IAttachedPropertyStore" FullName="System.Xaml.IAttachedPropertyStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="873b7d69873c08f5462060c447fb0108cc08e567" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAttachedPropertyStore" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAttachedPropertyStore" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAttachedPropertyStore" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAttachedPropertyStore" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAttachedPropertyStore" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c3579-101">Représente une banque de membres pouvant être attachés pour un objet dans lequel les membres pouvant être attachés sont définis.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c3579-101">Represents an attachable member store for an object where attachable members are set.</span>
      </span>
      <span data-ttu-id="c3579-102">Cette banque de membres pouvant être attachés peut ensuite être référencée avec <see cref="T:System.Xaml.AttachablePropertyServices" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c3579-102">This attachable member store can then be referenced with <see cref="T:System.Xaml.AttachablePropertyServices" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3579-103">Un membre pouvant être attaché est généralement implémenté et utilisé comme une propriété pouvant être attachée.</span><span class="sxs-lookup"><span data-stu-id="c3579-103">An attachable member is typically implemented and used as an attachable property.</span></span> <span data-ttu-id="c3579-104">Le terme « membre pouvant être attaché » prévoit la possibilité qu’une technologie définit également un système d’événements pouvant être attachés.</span><span class="sxs-lookup"><span data-stu-id="c3579-104">The term "attachable member" provides for the possibility that a technology also defines a system for attachable events.</span></span> <span data-ttu-id="c3579-105">Comme un élément dans une banque de propriétés, un événement pouvant être attaché stocke une référence au gestionnaire qui est attribué par le biais d’utilisation du membre pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="c3579-105">As an item in a property store, an attachable event stores a reference to the handler that is assigned through attachable member usage.</span></span> <span data-ttu-id="c3579-106">Un événement pouvant être attaché dans XAML peut utiliser le même magasin que les propriétés pouvant être attachées, même si l’événement pouvant être attachée n’est pas vraiment une propriété pour le système de type sous-jacent ou qu’il est considéré comme dans le monde réel.</span><span class="sxs-lookup"><span data-stu-id="c3579-106">An attachable event in XAML can use the same store as the attachable properties do, even if the attachable event is not truly a property to the underlying type system or as it is considered in real-world use.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
    <altmember cref="T:System.Xaml.AttachablePropertyServices" />
  </Docs>
  <Members>
    <Member MemberName="CopyPropertiesTo">
      <MemberSignature Language="C#" Value="public void CopyPropertiesTo (System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,object&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPropertiesTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Xaml.AttachableMemberIdentifier, object&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPropertiesTo (array As KeyValuePair(Of AttachableMemberIdentifier, Object)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyPropertiesTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Xaml::AttachableMemberIdentifier ^, System::Object ^&gt;&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,System.Object&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="c3579-107">Tableau de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-107">The destination array.</span>
          </span>
          <span data-ttu-id="c3579-108">Le tableau est un tableau générique qui doit être passé sans être dimensionné et doit avoir des composants de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> et d'<see langword="object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-108">The array is a generic array, should be passed undimensioned, and should have components of <see cref="T:System.Xaml.AttachableMemberIdentifier" /> and <see langword="object" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c3579-109">Index source où la copie doit commencer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-109">The source index where copying should begin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3579-110">Copie toutes les paires membre/valeur pouvant être attachées, à partir de cette banque de membres pouvant être attachés et vers un tableau de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-110">Copies all attachable member/value pairs from this attachable member store into a destination array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCount">
      <MemberSignature Language="C#" Value="public int PropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PropertyCount" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PropertyCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c3579-111">Obtient le nombre d'entrées de membres pouvant être attachés dans cette banque de membres pouvant être attachés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-111">Gets the count of the attachable member entries in this attachable member store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c3579-112">Nombre entier d'entrées dans la banque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-112">The integer count of entries in the store.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="c3579-113">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-113">The XAML type system identifier for the attachable member entry to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3579-114">Supprime l'entrée pour le membre pouvant être attaché spécifié de cette banque de membres pouvant être attachés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-114">Removes the entry for the specified attachable member from this attachable member store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3579-115">
            <see langword="true" /> si une entrée de membre pouvant être attaché pour <paramref name="attachableMemberIdentifier" /> a été trouvée dans la banque et supprimée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-115">
              <see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="c3579-116">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-116">The XAML type system identifier for the attachable member entry to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c3579-117">Valeur à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-117">The value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3579-118">Définit une valeur pour le membre pouvant être attaché spécifié dans la banque spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-118">Sets a value for the specified attachable member in the specified store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3579-119">Une implémentation ne doit pas lever une exception si le membre pouvant être attaché spécifique existe déjà.</span><span class="sxs-lookup"><span data-stu-id="c3579-119">An implementation should not throw an exception if the specific attachable member already exists.</span></span> <span data-ttu-id="c3579-120">Si un membre existe déjà, l’implémentation doit remplacer toute valeur existante avec `value`.</span><span class="sxs-lookup"><span data-stu-id="c3579-120">If a member already exists, the implementation should overwrite any existing value with `value`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="c3579-121">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-121">The XAML type system identifier for the attachable member entry to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c3579-122">Paramètre de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-122">Out parameter.</span>
          </span>
          <span data-ttu-id="c3579-123">Cette méthode retourne l’objet de destination pour la valeur si <c>attachableMemberIdentifier</c> existe dans la banque et possède une valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-123">When this method returns, contains the destination object for the value if <c>attachableMemberIdentifier</c> exists in the store and has a value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3579-124">Essaie d'obtenir une valeur pour le membre pouvant être attaché spécifié dans la banque spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-124">Attempts to get a value for the specified attachable member in the specified store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3579-125">
            <see langword="true" /> si une entrée de membre pouvant être attaché pour <paramref name="attachableMemberIdentifier" /> a été trouvée dans la banque et qu'une valeur a été publiée sous <paramref name="value" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3579-125">
              <see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and a value was posted to <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3579-126">Une implémentation ne doit pas lever une exception si le membre pouvant être attaché spécifique ne se trouve pas dans le magasin.</span><span class="sxs-lookup"><span data-stu-id="c3579-126">An implementation should not throw an exception if the specific attachable member is not located in the store.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>