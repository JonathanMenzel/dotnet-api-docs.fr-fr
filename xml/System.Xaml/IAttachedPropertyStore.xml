<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IAttachedPropertyStore.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5873b7d69873c08f5462060c447fb0108cc08e567.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">873b7d69873c08f5462060c447fb0108cc08e567</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.IAttachedPropertyStore">
          <source>Represents an attachable member store for an object where attachable members are set.</source>
          <target state="translated">Représente une banque de membres pouvant être attachés pour un objet dans lequel les membres pouvant être attachés sont définis.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xaml.IAttachedPropertyStore">
          <source>This attachable member store can then be referenced with <ph id="ph1">&lt;see cref="T:System.Xaml.AttachablePropertyServices" /&gt;</ph>.</source>
          <target state="translated">Cette banque de membres pouvant être attachés peut ensuite être référencée avec <ph id="ph1">&lt;see cref="T:System.Xaml.AttachablePropertyServices" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IAttachedPropertyStore">
          <source>An attachable member is typically implemented and used as an attachable property.</source>
          <target state="translated">Un membre pouvant être attaché est généralement implémenté et utilisé comme une propriété pouvant être attachée.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IAttachedPropertyStore">
          <source>The term "attachable member" provides for the possibility that a technology also defines a system for attachable events.</source>
          <target state="translated">Le terme « membre pouvant être attaché » prévoit la possibilité qu’une technologie définit également un système d’événements pouvant être attachés.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IAttachedPropertyStore">
          <source>As an item in a property store, an attachable event stores a reference to the handler that is assigned through attachable member usage.</source>
          <target state="translated">Comme un élément dans une banque de propriétés, un événement pouvant être attaché stocke une référence au gestionnaire qui est attribué par le biais d’utilisation du membre pouvant être attaché.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IAttachedPropertyStore">
          <source>An attachable event in XAML can use the same store as the attachable properties do, even if the attachable event is not truly a property to the underlying type system or as it is considered in real-world use.</source>
          <target state="translated">Un événement pouvant être attaché dans XAML peut utiliser le même magasin que les propriétés pouvant être attachées, même si l’événement pouvant être attachée n’est pas vraiment une propriété pour le système de type sous-jacent ou qu’il est considéré comme dans le monde réel.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>The destination array.</source>
          <target state="translated">Tableau de destination.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>The array is a generic array, should be passed undimensioned, and should have components of <ph id="ph1">&lt;see cref="T:System.Xaml.AttachableMemberIdentifier" /&gt;</ph> and <ph id="ph2">&lt;see langword="object" /&gt;</ph>.</source>
          <target state="translated">Le tableau est un tableau générique qui doit être passé sans être dimensionné et doit avoir des composants de <ph id="ph1">&lt;see cref="T:System.Xaml.AttachableMemberIdentifier" /&gt;</ph> et d'<ph id="ph2">&lt;see langword="object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>The source index where copying should begin.</source>
          <target state="translated">Index source où la copie doit commencer.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>Copies all attachable member/value pairs from this attachable member store into a destination array.</source>
          <target state="translated">Copie toutes les paires membre/valeur pouvant être attachées, à partir de cette banque de membres pouvant être attachés et vers un tableau de destination.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
          <source>Gets the count of the attachable member entries in this attachable member store.</source>
          <target state="translated">Obtient le nombre d'entrées de membres pouvant être attachés dans cette banque de membres pouvant être attachés.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
          <source>The integer count of entries in the store.</source>
          <target state="translated">Nombre entier d'entrées dans la banque.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
          <source>The XAML type system identifier for the attachable member entry to remove.</source>
          <target state="translated">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à supprimer.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
          <source>Removes the entry for the specified attachable member from this attachable member store.</source>
          <target state="translated">Supprime l'entrée pour le membre pouvant être attaché spécifié de cette banque de membres pouvant être attachés.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attachable member entry for <ph id="ph2">&lt;paramref name="attachableMemberIdentifier" /&gt;</ph> was found in the store and removed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si une entrée de membre pouvant être attaché pour <ph id="ph2">&lt;paramref name="attachableMemberIdentifier" /&gt;</ph> a été trouvée dans la banque et supprimée ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>The XAML type system identifier for the attachable member entry to set.</source>
          <target state="translated">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à définir.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>The value to set.</source>
          <target state="translated">Valeur à définir.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>Sets a value for the specified attachable member in the specified store.</source>
          <target state="translated">Définit une valeur pour le membre pouvant être attaché spécifié dans la banque spécifiée.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>An implementation should not throw an exception if the specific attachable member already exists.</source>
          <target state="translated">Une implémentation ne doit pas lever une exception si le membre pouvant être attaché spécifique existe déjà.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>If a member already exists, the implementation should overwrite any existing value with <ph id="ph1">`value`</ph>.</source>
          <target state="translated">Si un membre existe déjà, l’implémentation doit remplacer toute valeur existante avec <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>The XAML type system identifier for the attachable member entry to get.</source>
          <target state="translated">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à obtenir.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>Out parameter.</source>
          <target state="translated">Paramètre de sortie.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>When this method returns, contains the destination object for the value if <bpt id="p1">&lt;c&gt;</bpt>attachableMemberIdentifier<ept id="p1">&lt;/c&gt;</ept> exists in the store and has a value.</source>
          <target state="translated">Cette méthode retourne l’objet de destination pour la valeur si <bpt id="p1">&lt;c&gt;</bpt>attachableMemberIdentifier<ept id="p1">&lt;/c&gt;</ept> existe dans la banque et possède une valeur.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>Attempts to get a value for the specified attachable member in the specified store.</source>
          <target state="translated">Essaie d'obtenir une valeur pour le membre pouvant être attaché spécifié dans la banque spécifiée.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attachable member entry for <ph id="ph2">&lt;paramref name="attachableMemberIdentifier" /&gt;</ph> was found in the store and a value was posted to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si une entrée de membre pouvant être attaché pour <ph id="ph2">&lt;paramref name="attachableMemberIdentifier" /&gt;</ph> a été trouvée dans la banque et qu'une valeur a été publiée sous <ph id="ph3">&lt;paramref name="value" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>An implementation should not throw an exception if the specific attachable member is not located in the store.</source>
          <target state="translated">Une implémentation ne doit pas lever une exception si le membre pouvant être attaché spécifique ne se trouve pas dans le magasin.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>