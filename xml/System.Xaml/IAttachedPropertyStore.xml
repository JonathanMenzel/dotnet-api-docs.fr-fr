<Type Name="IAttachedPropertyStore" FullName="System.Xaml.IAttachedPropertyStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="66354ae0a5fc8bf13543264b682da7e35aba2ea0" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52241585" /></Metadata><TypeSignature Language="C#" Value="public interface IAttachedPropertyStore" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAttachedPropertyStore" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAttachedPropertyStore" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAttachedPropertyStore" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAttachedPropertyStore" />
  <TypeSignature Language="F#" Value="type IAttachedPropertyStore = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Représente une banque de membres pouvant être attachés pour un objet dans lequel les membres pouvant être attachés sont définis. Cette banque de membres pouvant être attachés peut ensuite être référencée avec <see cref="T:System.Xaml.AttachablePropertyServices" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un membre pouvant être attaché est généralement implémenté et utilisé comme une propriété pouvant être attachée. Le terme « membre pouvant être attaché » prévoit la possibilité qu’une technologie définit également un système pour les événements pouvant être attachées. En tant qu’élément dans une banque de propriétés, un événement pouvant être attaché stocke une référence au gestionnaire qui est attribué par l’utilisation de membre pouvant être attaché. Un événement pouvant être attaché dans XAML peut utiliser le même magasin que les propriétés pouvant être attachées, même si l’événement pouvant être attaché n’est pas vraiment une propriété pour le système de type sous-jacent ou comme il est considéré comme dans le monde réel.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
    <altmember cref="T:System.Xaml.AttachablePropertyServices" />
  </Docs>
  <Members>
    <Member MemberName="CopyPropertiesTo">
      <MemberSignature Language="C#" Value="public void CopyPropertiesTo (System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,object&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPropertiesTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Xaml.AttachableMemberIdentifier, object&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPropertiesTo (array As KeyValuePair(Of AttachableMemberIdentifier, Object)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyPropertiesTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Xaml::AttachableMemberIdentifier ^, System::Object ^&gt;&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyPropertiesTo : System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier, obj&gt;[] * int -&gt; unit" Usage="iAttachedPropertyStore.CopyPropertiesTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,System.Object&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tableau de destination. Le tableau est un tableau générique qui doit être passé sans être dimensionné et doit avoir des composants de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> et d'<see langword="object" />.</param>
        <param name="index">Index source où la copie doit commencer.</param>
        <summary>Copie toutes les paires membre/valeur pouvant être attachées, à partir de cette banque de membres pouvant être attachés et vers un tableau de destination.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCount">
      <MemberSignature Language="C#" Value="public int PropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PropertyCount" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PropertyCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyCount : int" Usage="System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre d'entrées de membres pouvant être attachés dans cette banque de membres pouvant être attachés.</summary>
        <value>Nombre entier d'entrées dans la banque.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member RemoveProperty : System.Xaml.AttachableMemberIdentifier -&gt; bool" Usage="iAttachedPropertyStore.RemoveProperty attachableMemberIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à supprimer.</param>
        <summary>Supprime l'entrée pour le membre pouvant être attaché spécifié de cette banque de membres pouvant être attachés.</summary>
        <returns><see langword="true" /> si une entrée de membre pouvant être attaché pour <paramref name="attachableMemberIdentifier" /> a été trouvée dans la banque et supprimée ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : System.Xaml.AttachableMemberIdentifier * obj -&gt; unit" Usage="iAttachedPropertyStore.SetProperty (attachableMemberIdentifier, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à définir.</param>
        <param name="value">Valeur à définir.</param>
        <summary>Définit une valeur pour le membre pouvant être attaché spécifié dans la banque spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une implémentation ne doit pas lever une exception si le membre pouvant être attaché spécifique existe déjà. Si un membre existe déjà, l’implémentation doit remplacer toute valeur existante avec `value`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetProperty : System.Xaml.AttachableMemberIdentifier *  -&gt; bool" Usage="iAttachedPropertyStore.TryGetProperty (attachableMemberIdentifier, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à obtenir.</param>
        <param name="value">Paramètre de sortie. Cette méthode retourne l'objet de destination pour la valeur si <paramref name="attachableMemberIdentifier" /> existe dans la banque et possède une valeur.</param>
        <summary>Essaie d'obtenir une valeur pour le membre pouvant être attaché spécifié dans la banque spécifiée.</summary>
        <returns><see langword="true" /> si une entrée de membre pouvant être attaché pour <paramref name="attachableMemberIdentifier" /> a été trouvée dans la banque et qu'une valeur a été publiée sous <paramref name="value" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une implémentation ne doit pas lever une exception si le membre pouvant être attaché spécifique n’est pas situé dans le magasin.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>