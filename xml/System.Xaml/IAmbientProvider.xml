<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fcab2d451e7a5dffd50523a55bea65848a0295d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444912" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="013f2-101">Représente un service qui peut retourner des informations sur les propriétés ambiantes ou les types ambiants aux convertisseurs de type et aux extensions de balisage.</span>
      <span class="sxs-lookup">
        <span data-stu-id="013f2-101">Represents a service that can return information items about ambient properties or ambient types to type converters and markup extensions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="013f2-102">Cette interface représente le service qui peut aider aux convertisseurs de type et extensions de balisage à obtenir les identificateurs de propriété ambiante pour le système de type XAML (<xref:System.Xaml.XamlMember> objets).</span><span class="sxs-lookup"><span data-stu-id="013f2-102">This interface represents the service that can help type converters and markup extensions to get the ambient property identifiers for the XAML type system (<xref:System.Xaml.XamlMember> objects).</span></span> <span data-ttu-id="013f2-103">Le service peut également obtenir les valeurs de propriété ambiante à partir de classes.</span><span class="sxs-lookup"><span data-stu-id="013f2-103">The service can also get the ambient property values from classes.</span></span> <span data-ttu-id="013f2-104">Types peuvent également être ambiants ; tout membre qui utilise ce type comme sa valeur doit être considéré comme ambiant.</span><span class="sxs-lookup"><span data-stu-id="013f2-104">Types can also be ambient; any member that uses that type as its value should be considered ambient.</span></span>  
  
 <span data-ttu-id="013f2-105">Ce service est en général retourné via un appel à <xref:System.IServiceProvider.GetService%2A>, qui est effectué par rapport à un fournisseur de services spécifique au contexte.</span><span class="sxs-lookup"><span data-stu-id="013f2-105">This service is typically returned through a call to <xref:System.IServiceProvider.GetService%2A>, which is made against a context-specific service provider.</span></span> <span data-ttu-id="013f2-106">Le fournisseur de service est généralement disponible pour les contextes qui en ont besoin, telles que le code d’exécution d’un convertisseur de valeur.</span><span class="sxs-lookup"><span data-stu-id="013f2-106">The service provider is generally available to contexts that need it, such as the execution code of a value converter.</span></span> <span data-ttu-id="013f2-107">Pour plus d’informations, consultez [convertisseurs de Type et Extensions de balisage pour XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) et [contextes de services disponibles aux convertisseurs de Type et Extensions de balisage](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span><span class="sxs-lookup"><span data-stu-id="013f2-107">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
## <a name="about-ambient-properties"></a><span data-ttu-id="013f2-108">Sur les propriétés ambiantes</span><span class="sxs-lookup"><span data-stu-id="013f2-108">About Ambient Properties</span></span>  
 <span data-ttu-id="013f2-109">Une propriété ambiante est une propriété dont la valeur de propriété doit être disponible pour le convertisseur de type et extension de balisage qui existent dans la structure de nœud XAML et dans le graphique d’objets créés à partir de celui-ci.</span><span class="sxs-lookup"><span data-stu-id="013f2-109">An ambient property is a property whose property value should be available to type converter and markup extension usages that exist in the XAML node structure and in the object graph created from it.</span></span> <span data-ttu-id="013f2-110">Cela s’applique à un processeur XAML pendant la phase de l’écriture d’objet du chemin de chargement ou de la phase de sérialisation d’une entité chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="013f2-110">This is relevant for a XAML processor during the object-writing phase of the load path or the serialization phase of a save path.</span></span>  
  
 <span data-ttu-id="013f2-111">Dans le cas de chemin d’accès de charge, la valeur de propriété ambiante peut influencer la valeur dans le graphique d’objets d’autres propriétés qui existent en dessous dans une structure de nœud XAML.</span><span class="sxs-lookup"><span data-stu-id="013f2-111">In the load path case, the ambient property value might influence the value in the object graph of other properties that exist underneath it in a XAML node structure.</span></span> <span data-ttu-id="013f2-112">Lors du traitement en tant que flux de nœud XAML, le concept ambiant signifie que la valeur de propriété ambiante doit être disponible pour les convertisseurs de type et extensions de balisage de `StartObject` à `EndObject`.</span><span class="sxs-lookup"><span data-stu-id="013f2-112">When processed as a XAML node stream, the ambient concept means the ambient property value must be available to type converters and markup extensions from `StartObject` to `EndObject`.</span></span> <span data-ttu-id="013f2-113">De même, un convertisseur de type qui est utilisé pour l’enregistrement chemin d’accès peut utiliser les connaissances de la propriété ambiante et sa valeur.</span><span class="sxs-lookup"><span data-stu-id="013f2-113">Similarly, a type converter that is used for the save path can use knowledge of the ambient property and its value.</span></span> <span data-ttu-id="013f2-114">Par conséquent, le code XAML produit est une meilleure représentation aller-retour.</span><span class="sxs-lookup"><span data-stu-id="013f2-114">Therefore, the XAML that is produced is a better round-trip representation.</span></span>  
  
 <span data-ttu-id="013f2-115">Pour les membres en règle générale, XAML ne spécifie pas l’ordre dans lequel les membres d’un objet doivent être traités.</span><span class="sxs-lookup"><span data-stu-id="013f2-115">For members in general, XAML does not specify the order in which members of an object must be processed.</span></span> <span data-ttu-id="013f2-116">Toutefois, toute valeur de propriété ambiante doit être traitée en premier par le lecteur XAML afin que les type markup extension utilisations de convertisseurs et qui sont contenues dans d’autres propriétés puissent y accéder via le <xref:System.Xaml.IAmbientProvider> service.</span><span class="sxs-lookup"><span data-stu-id="013f2-116">However, any ambient property value must be processed first by the XAML reader so that the type converter and markup extension usages that are contained in other properties can access it through the <xref:System.Xaml.IAmbientProvider> service.</span></span>  
  
 <span data-ttu-id="013f2-117"><xref:System.Xaml.XamlMember.DependsOn%2A> est un concept semblable qui influence également l’ordre de traitement des nœuds XAML.</span><span class="sxs-lookup"><span data-stu-id="013f2-117"><xref:System.Xaml.XamlMember.DependsOn%2A> is a similar concept that also influences XAML node-processing order.</span></span> <span data-ttu-id="013f2-118">Toutefois, <xref:System.Xaml.XamlMember.DependsOn%2A> peut uniquement être utilisé pour les relations de membres et le nœud homologue ; il ne peut pas influencer tous les descendants.</span><span class="sxs-lookup"><span data-stu-id="013f2-118">However, <xref:System.Xaml.XamlMember.DependsOn%2A> can only be used for peer member and node relationships; it cannot influence all descendants.</span></span> <span data-ttu-id="013f2-119">En outre, <xref:System.Xaml.XamlMember.DependsOn%2A> directement a une incidence sur l’objet paramètre de propriété de graphique ; alors que la technique ambiante s’appuie sur les convertisseurs de type ou les extensions de balisage.</span><span class="sxs-lookup"><span data-stu-id="013f2-119">Also, <xref:System.Xaml.XamlMember.DependsOn%2A> directly influences object graph property setting; whereas the ambient technique relies on type converters or markup extensions.</span></span> <span data-ttu-id="013f2-120">Dans la technique ambiante, il doit également être un convertisseur de type spécifique ou une définition d’extension de balisage qui spécifie la façon dont la valeur de propriété ambiante doit être interprétée et appliquée à l’objet.</span><span class="sxs-lookup"><span data-stu-id="013f2-120">In the ambient technique, there must also be a specific type converter or markup extension definition that specifies how the ambient property value should be interpreted and applied to the object.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="013f2-121">Remarques sur l'utilisation de WPF</span><span class="sxs-lookup"><span data-stu-id="013f2-121">WPF Usage Notes</span></span>  
 <span data-ttu-id="013f2-122">Un scénario de propriété ambiante est illustré dans le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] jeu de fonctionnalités est <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, qui peut qualifier les recherches de nom de propriété pour les autres valeurs.</span><span class="sxs-lookup"><span data-stu-id="013f2-122">An ambient property scenario that is illustrated in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] feature set is <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, which can qualify the necessary property name lookups for other values.</span></span> <span data-ttu-id="013f2-123">Dans ce cas, le <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valeur qualifie le <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> les valeurs qui sont trouvent dans les nœuds XAML sous celle-ci.</span><span class="sxs-lookup"><span data-stu-id="013f2-123">In this case, the <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value qualifies the <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values that are located in the XAML nodes underneath it.</span></span> <span data-ttu-id="013f2-124"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> utilise le comportement de convertisseur de type pour un <xref:System.Windows.DependencyProperty>.</span><span class="sxs-lookup"><span data-stu-id="013f2-124"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> uses the type converter behavior for a <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="013f2-125">Ce comportement accède à ambiant <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valeur en interrogeant <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> à partir d’un contexte de service qui est disponible pour les convertisseurs de type et extensions de balisage.</span><span class="sxs-lookup"><span data-stu-id="013f2-125">This behavior accesses the ambient <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value by querying <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> from a service context that is available to type converters and markup extensions.</span></span>  
  
 <span data-ttu-id="013f2-126">Un scénario de type ambiant est illustré dans l’ensemble de fonctionnalités WPF est <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="013f2-126">An ambient type scenario that is illustrated in the WPF feature set is <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="013f2-127"><xref:System.Windows.ResourceDictionary> a un <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> propriété qui peut contenir d’autres <xref:System.Windows.ResourceDictionary> objets à fusionner et l’ordre prévu de résolution des ressource pour les conflits de scénarios fusionnés avec l’ordre que les types sont chargés.</span><span class="sxs-lookup"><span data-stu-id="013f2-127"><xref:System.Windows.ResourceDictionary> has a <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> property that can contain other <xref:System.Windows.ResourceDictionary> objects to merge, and the intended order of resource resolution for the merged scenario clashes with the order that types are loaded.</span></span> <span data-ttu-id="013f2-128"><xref:System.Windows.ResourceDictionary> s’applique <xref:System.Windows.Markup.AmbientAttribute> afin qu’un processeur XAML peut traiter correctement les références d’un dictionnaire fusionné avec `StaticResource` utilisations.</span><span class="sxs-lookup"><span data-stu-id="013f2-128"><xref:System.Windows.ResourceDictionary> applies <xref:System.Windows.Markup.AmbientAttribute> so that a XAML processor can correctly process the references in a merged dictionary with `StaticResource` usages.</span></span> <span data-ttu-id="013f2-129">Plus précisément, `StaticResource` est une extension de balisage qui appelle <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="013f2-129">Specifically, `StaticResource` is a markup extension, which calls <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="013f2-130">Retourne un jeu énumérable d'éléments d'informations de type ambiant ou de propriété ambiante pour la portée demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-130">Returns an enumerable set of ambient type or property information items for the requested scope.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="013f2-131">Jeu de types à partir duquel récupérer les informations de type ambiant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-131">The set of types from which to retrieve ambient type information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="013f2-132">Retourne un jeu énumérable d'instances d'objet des types ambiants possibles pour les types demandés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-132">Returns an enumerable set of object instances of possible ambient types for the requested types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="013f2-133">Jeu énumérable d'objets qui représentent les valeurs du jeu demandé d'identificateurs <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-133">An enumerable set of objects that represent the values for the requested set of <see cref="T:System.Xaml.XamlType" /> identifiers.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">
          <span data-ttu-id="013f2-134">Spécifie un ou plusieurs types qui doivent arrêter l'évaluation lorsqu'ils sont rencontrés dans le cadre d'une traversée ascendante du graphique d'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-134">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span>
          </span>
          <span data-ttu-id="013f2-135">Ce type contient la propriété ambiante souhaitée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-135">This type holds the desired ambient property.</span>
          </span>
          <span data-ttu-id="013f2-136">Peut avoir la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-136">May be <see langword="null" />.</span>
          </span>
        </param>
        <param name="properties">
          <span data-ttu-id="013f2-137">Spécifie un ou plusieurs objets de type identificateur de propriété qui identifient les propriétés à considérer comme ambiantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-137">Specifies one or more property identifier objects that identify the properties to be considered ambient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="013f2-138">Retourne un jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de propriétés demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-138">Returns an enumerable set of ambient property information items for the requested set of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="013f2-139">Jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de propriétés demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-139">An enumerable set of ambient property information items for the requested set of properties.</span>
          </span>
          <span data-ttu-id="013f2-140">Les informations de propriété de chaque <see cref="T:System.Xaml.AmbientPropertyValue" /> qui sont retournées correspondront à l'un des <paramref name="properties" /> d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-140">The property information for each <see cref="T:System.Xaml.AmbientPropertyValue" /> that is returned will match one of the input <paramref name="properties" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="013f2-141">Chaque <xref:System.Xaml.AmbientPropertyValue> retourné contient le <xref:System.Xaml.XamlMember> identificateur et une valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="013f2-141">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">
          <span data-ttu-id="013f2-142">Spécifie un ou plusieurs types qui doivent arrêter l'évaluation lorsqu'ils sont rencontrés dans le cadre d'une traversée ascendante du graphique d'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-142">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span>
          </span>
          <span data-ttu-id="013f2-143">Ce type contient la propriété ambiante souhaitée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-143">This type holds the desired ambient property.</span>
          </span>
          <span data-ttu-id="013f2-144">Peut avoir la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-144">May be <see langword="null" />.</span>
          </span>
        </param>
        <param name="searchLiveStackOnly">
          <span data-ttu-id="013f2-145">
            <see langword="true" /> pour ne pas utiliser de contexte enregistré ; <see langword="false" /> pour utiliser un contexte enregistré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-145">
              <see langword="true" /> to not use a saved context; <see langword="false" /> to use a saved context.</span>
          </span>
          <span data-ttu-id="013f2-146">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-146">The default is <see langword="false" />.</span>
          </span>
        </param>
        <param name="types">To be added.</param>
        <param name="properties">
          <span data-ttu-id="013f2-147">Spécifie un ou plusieurs objets de type identificateur de propriété qui identifient les propriétés à considérer comme ambiantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-147">Specifies one or more property identifier objects that identify the properties to be considered ambient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="013f2-148">Retourne un jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de types et de propriétés demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-148">Returns an enumerable set of ambient property information items for the requested set of types and properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="013f2-149">Un jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de types et de propriétés demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-149">An enumerable set of ambient property information items for the requested set of types and properties.</span>
          </span>
          <span data-ttu-id="013f2-150">Les informations de propriété de chaque <see cref="T:System.Xaml.AmbientPropertyValue" /> qui sont retournées correspondront à l'un des <paramref name="types" /> ou <paramref name="properties" /> d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-150">The property information for each <see cref="T:System.Xaml.AmbientPropertyValue" /> that is returned will match one of the input <paramref name="types" /> or <paramref name="properties" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="013f2-151">Chaque <xref:System.Xaml.AmbientPropertyValue> retourné contient le <xref:System.Xaml.XamlMember> identificateur et une valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="013f2-151">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 <span data-ttu-id="013f2-152">Donnée <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> surcharge peut rechercher des types ambiants et des propriétés ambiantes dans le même passent à travers une arborescence.</span><span class="sxs-lookup"><span data-stu-id="013f2-152">This particular <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> overload can search for ambient types and ambient properties in the same pass through a tree.</span></span> <span data-ttu-id="013f2-153">À l’aide de cette surcharge entraîne un classement des éléments dans la valeur de retour est différent de <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> ou <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="013f2-153">Using this overload results in an ordering of items in the return value that is different from <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> or <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>.</span></span>  
  
 <span data-ttu-id="013f2-154">Cette surcharge permet également à la recherche de ne pas utiliser n’importe quel contexte enregistré.</span><span class="sxs-lookup"><span data-stu-id="013f2-154">This overload also permits the search to not use any saved context.</span></span> <span data-ttu-id="013f2-155">Le <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> ou <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> surcharges utilisent implicitement un contexte enregistré s’il est disponible (ils agissent toujours comme si implicite `searchLiveStackOnly` paramètre est `false`).</span><span class="sxs-lookup"><span data-stu-id="013f2-155">The <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> or <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> overloads implicitly use a saved context if it is available (they always act as if an implicit `searchLiveStackOnly` parameter is `false`).</span></span> <span data-ttu-id="013f2-156">Le concept d’un contexte enregistré est contrôlé potentiellement différemment par les contextes de schéma XAML particulières, ou par les infrastructures qui incorporent XAML.</span><span class="sxs-lookup"><span data-stu-id="013f2-156">The concept of a saved context is potentially handled differently by particular XAML schema contexts, or by frameworks that incorporate XAML.</span></span> <span data-ttu-id="013f2-157">Dans l’implémentation XAML WPF, les contextes enregistrés sont utilisés pour l’expansion du modèle, ainsi que d’autres zones de fonctionnalité.</span><span class="sxs-lookup"><span data-stu-id="013f2-157">In the WPF XAML implementation, saved contexts are used for template expansion, as well as other feature areas.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="013f2-158">Retourne un élément d'information de type ambiant ou de propriété ambiante pour le jeu demandé, en fonction de la première propriété rencontrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-158">Returns a single ambient type or property information item from the requested set, based on which property is first encountered.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="013f2-159">Jeu de types à partir duquel récupérer les informations de type ambiant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-159">The set of types from which to retrieve ambient type information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="013f2-160">Retourne le premier objet correspondant qui est un type ambiant possible pour les types demandés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-160">Returns the first matching object that is a possible ambient type for the requested types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="013f2-161">Premier objet de résultat pour le jeu demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-161">The first result object for the requested set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">
          <span data-ttu-id="013f2-162">Spécifie un ou plusieurs types qui doivent arrêter l'évaluation lorsqu'ils sont rencontrés dans le cadre d'une traversée ascendante du graphique d'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-162">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span>
          </span>
          <span data-ttu-id="013f2-163">Ce type contient la propriété ambiante souhaitée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-163">This type holds the desired ambient property.</span>
          </span>
        </param>
        <param name="properties">
          <span data-ttu-id="013f2-164">Spécifie un ou plusieurs objets qui identifient les propriétés à considérer comme ambiantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-164">Specifies one or more objects that identify the properties to be considered ambient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="013f2-165">Retourne un élément d'information de propriété ambiante unique à partir du jeu de propriétés demandé, en fonction de la première propriété rencontrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-165">Returns a single ambient property information item from the requested set of properties, based on which property is first encountered.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="013f2-166">Élément d'information de propriété ambiante unique pour la première valeur de propriété ambiante trouvée dans la liste des <paramref name="properties" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="013f2-166">A single ambient property information item for the first ambient property value from the <paramref name="properties" /> list that is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="013f2-167">Chaque <xref:System.Xaml.AmbientPropertyValue> retourné contient le <xref:System.Xaml.XamlMember> identificateur et une valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="013f2-167">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>