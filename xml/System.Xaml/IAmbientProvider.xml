<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9b23ffb53d894df644dba6a14485653536d622e1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719923" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Représente un service qui peut retourner des informations sur les propriétés ambiantes ou les types ambiants aux convertisseurs de type et aux extensions de balisage.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette interface représente le service qui peut aider aux convertisseurs de type et extensions de balisage à obtenir les identificateurs de propriété ambiante pour le système de type XAML (<xref:System.Xaml.XamlMember> objets). Le service peut également obtenir les valeurs de propriété ambiante à partir de classes. Types peuvent également être ambiants ; tout membre qui utilise ce type comme sa valeur doit être considéré comme ambiant.  
  
 Ce service est en général retourné via un appel à <xref:System.IServiceProvider.GetService%2A>, qui est effectué par rapport à un fournisseur de services spécifique au contexte. Le fournisseur de service est généralement disponible pour les contextes qui en ont besoin, telles que le code d’exécution d’un convertisseur de valeur. Pour plus d’informations, consultez [convertisseurs de Type et Extensions de balisage pour XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) et [contextes de services disponibles aux convertisseurs de Type et Extensions de balisage](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
## <a name="about-ambient-properties"></a>Sur les propriétés ambiantes  
 Une propriété ambiante est une propriété dont la valeur de propriété doit être disponible pour le convertisseur de type et extension de balisage qui existent dans la structure de nœud XAML et dans le graphique d’objets créés à partir de celui-ci. Cela s’applique à un processeur XAML pendant la phase de l’écriture d’objet du chemin de chargement ou de la phase de sérialisation d’une entité chemin d’accès.  
  
 Dans le cas de chemin d’accès de charge, la valeur de propriété ambiante peut influencer la valeur dans le graphique d’objets d’autres propriétés qui existent en dessous dans une structure de nœud XAML. Lors du traitement en tant que flux de nœud XAML, le concept ambiant signifie que la valeur de propriété ambiante doit être disponible pour les convertisseurs de type et extensions de balisage de `StartObject` à `EndObject`. De même, un convertisseur de type qui est utilisé pour l’enregistrement chemin d’accès peut utiliser les connaissances de la propriété ambiante et sa valeur. Par conséquent, le code XAML produit est une meilleure représentation aller-retour.  
  
 Pour les membres en règle générale, XAML ne spécifie pas l’ordre dans lequel les membres d’un objet doivent être traités. Toutefois, toute valeur de propriété ambiante doit être traitée en premier par le lecteur XAML afin que les type markup extension utilisations de convertisseurs et qui sont contenues dans d’autres propriétés puissent y accéder via le <xref:System.Xaml.IAmbientProvider> service.  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> est un concept semblable qui influence également l’ordre de traitement des nœuds XAML. Toutefois, <xref:System.Xaml.XamlMember.DependsOn%2A> peut uniquement être utilisé pour les relations de membres et le nœud homologue ; il ne peut pas influencer tous les descendants. En outre, <xref:System.Xaml.XamlMember.DependsOn%2A> directement a une incidence sur l’objet paramètre de propriété de graphique ; alors que la technique ambiante s’appuie sur les convertisseurs de type ou les extensions de balisage. Dans la technique ambiante, il doit également être un convertisseur de type spécifique ou une définition d’extension de balisage qui spécifie la façon dont la valeur de propriété ambiante doit être interprétée et appliquée à l’objet.  
  
## <a name="wpf-usage-notes"></a>Remarques sur l'utilisation de WPF  
 Un scénario de propriété ambiante est illustré dans le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] jeu de fonctionnalités est <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, qui peut qualifier les recherches de nom de propriété pour les autres valeurs. Dans ce cas, le <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valeur qualifie le <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> les valeurs qui sont trouvent dans les nœuds XAML sous celle-ci. <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> utilise le comportement de convertisseur de type pour un <xref:System.Windows.DependencyProperty>. Ce comportement accède à ambiant <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valeur en interrogeant <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> à partir d’un contexte de service qui est disponible pour les convertisseurs de type et extensions de balisage.  
  
 Un scénario de type ambiant est illustré dans l’ensemble de fonctionnalités WPF est <xref:System.Windows.ResourceDictionary>. <xref:System.Windows.ResourceDictionary> a un <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> propriété qui peut contenir d’autres <xref:System.Windows.ResourceDictionary> objets à fusionner et l’ordre prévu de résolution des ressource pour les conflits de scénarios fusionnés avec l’ordre que les types sont chargés. <xref:System.Windows.ResourceDictionary> s’applique <xref:System.Windows.Markup.AmbientAttribute> afin qu’un processeur XAML peut traiter correctement les références d’un dictionnaire fusionné avec `StaticResource` utilisations. Plus précisément, `StaticResource` est une extension de balisage qui appelle <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne un jeu énumérable d'éléments d'informations de type ambiant ou de propriété ambiante pour la portée demandée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">Jeu de types à partir duquel récupérer les informations de type ambiant.</param>
        <summary>Retourne un jeu énumérable d'instances d'objet des types ambiants possibles pour les types demandés.</summary>
        <returns>Jeu énumérable d'objets qui représentent les valeurs du jeu demandé d'identificateurs <see cref="T:System.Xaml.XamlType" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Spécifie un ou plusieurs types qui doivent arrêter l'évaluation lorsqu'ils sont rencontrés dans le cadre d'une traversée ascendante du graphique d'objet. Ce type contient la propriété ambiante souhaitée. Peut avoir la valeur <see langword="null" />.</param>
        <param name="properties">Spécifie un ou plusieurs objets de type identificateur de propriété qui identifient les propriétés à considérer comme ambiantes.</param>
        <summary>Retourne un jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de propriétés demandé.</summary>
        <returns>Jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de propriétés demandé. Les informations de propriété de chaque <see cref="T:System.Xaml.AmbientPropertyValue" /> qui sont retournées correspondront à l'un des <paramref name="properties" /> d'entrée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque <xref:System.Xaml.AmbientPropertyValue> retourné contient le <xref:System.Xaml.XamlMember> identificateur et une valeur de propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Spécifie un ou plusieurs types qui doivent arrêter l'évaluation lorsqu'ils sont rencontrés dans le cadre d'une traversée ascendante du graphique d'objet. Ce type contient la propriété ambiante souhaitée. Peut avoir la valeur <see langword="null" />.</param>
        <param name="searchLiveStackOnly">
          <see langword="true" /> pour ne pas utiliser de contexte enregistré ; <see langword="false" /> pour utiliser un contexte enregistré. La valeur par défaut est <see langword="false" />.</param>
        <param name="types">To be added.</param>
        <param name="properties">Spécifie un ou plusieurs objets de type identificateur de propriété qui identifient les propriétés à considérer comme ambiantes.</param>
        <summary>Retourne un jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de types et de propriétés demandé.</summary>
        <returns>Un jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de types et de propriétés demandé. Les informations de propriété de chaque <see cref="T:System.Xaml.AmbientPropertyValue" /> qui sont retournées correspondront à l'un des <paramref name="types" /> ou <paramref name="properties" /> d'entrée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque <xref:System.Xaml.AmbientPropertyValue> retourné contient le <xref:System.Xaml.XamlMember> identificateur et une valeur de propriété.  
  
 Donnée <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> surcharge peut rechercher des types ambiants et des propriétés ambiantes dans le même passent à travers une arborescence. À l’aide de cette surcharge entraîne un classement des éléments dans la valeur de retour est différent de <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> ou <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>.  
  
 Cette surcharge permet également à la recherche de ne pas utiliser n’importe quel contexte enregistré. Le <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> ou <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> surcharges utilisent implicitement un contexte enregistré s’il est disponible (ils agissent toujours comme si implicite `searchLiveStackOnly` paramètre est `false`). Le concept d’un contexte enregistré est contrôlé potentiellement différemment par les contextes de schéma XAML particulières, ou par les infrastructures qui incorporent XAML. Dans l’implémentation XAML WPF, les contextes enregistrés sont utilisés pour l’expansion du modèle, ainsi que d’autres zones de fonctionnalité.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne un élément d'information de type ambiant ou de propriété ambiante pour le jeu demandé, en fonction de la première propriété rencontrée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">Jeu de types à partir duquel récupérer les informations de type ambiant.</param>
        <summary>Retourne le premier objet correspondant qui est un type ambiant possible pour les types demandés.</summary>
        <returns>Premier objet de résultat pour le jeu demandé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Spécifie un ou plusieurs types qui doivent arrêter l'évaluation lorsqu'ils sont rencontrés dans le cadre d'une traversée ascendante du graphique d'objet. Ce type contient la propriété ambiante souhaitée.</param>
        <param name="properties">Spécifie un ou plusieurs objets qui identifient les propriétés à considérer comme ambiantes.</param>
        <summary>Retourne un élément d'information de propriété ambiante unique à partir du jeu de propriétés demandé, en fonction de la première propriété rencontrée.</summary>
        <returns>Élément d'information de propriété ambiante unique pour la première valeur de propriété ambiante trouvée dans la liste des <paramref name="properties" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque <xref:System.Xaml.AmbientPropertyValue> retourné contient le <xref:System.Xaml.XamlMember> identificateur et une valeur de propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>