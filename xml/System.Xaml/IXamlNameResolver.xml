<Type Name="IXamlNameResolver" FullName="System.Xaml.IXamlNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e2b0082aa6761aafa449dd2b26cdbd2f6d5f016" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39942586" /></Metadata><TypeSignature Language="C#" Value="public interface IXamlNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXamlNameResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IXamlNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXamlNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXamlNameResolver" />
  <TypeSignature Language="F#" Value="type IXamlNameResolver = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8e3f3-101">Décrit un service qui peut retourner des objets spécifiés par leur nom XAML, ou retourne un jeton qui reporte la résolution de noms.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-101">Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution.</span></span> <span data-ttu-id="8e3f3-102">Le service peut également retourner un jeu énumérable de tous les objets nommés figurant dans la portée de nom XAML.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-102">The service can also return an enumerable set of all named objects that are in the XAML namescope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3f3-103">Cette interface n’est pas prévue pour implémentation externe de scénarios XAML classiques, car c’est un service.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-103">This interface is not intended for external implementation of typical XAML scenarios because it is a service.</span></span> <span data-ttu-id="8e3f3-104">Ce service permet des extensions de balisage et les convertisseurs de type pour résoudre les noms XAML à d’autres objets de la même source XAML pendant qu’elles sont toujours en une représentation de nœud XAML.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-104">This service enables markup extensions and type converters to resolve XAML names to other objects from the same XAML source while they are still in a XAML node representation.</span></span> <span data-ttu-id="8e3f3-105">Le service peut être utilisé pour résoudre les références anticipées pour n’importe quel mécanisme qui repose sur les noms XAML pour l’accès non linéaire à la production XAML environnante.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-105">The service can be used to resolve forward references for any mechanism that relies on XAML names for nonlinear access to the surrounding XAML production.</span></span> <span data-ttu-id="8e3f3-106">Pour plus d’informations, consultez [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="8e3f3-106">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).</span></span>  
  
 <span data-ttu-id="8e3f3-107">Convertisseurs de type et extensions de balisage peuvent interroger pour <xref:System.Xaml.IXamlNameResolver> en tant que service sur le contexte de service qui est fourni par un writer d’objet XAML, lorsque le writer d’objet XAML appelle le comportement de conversion de valeur.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-107">Type converters and markup extensions can query for <xref:System.Xaml.IXamlNameResolver> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="8e3f3-108">Pour plus d’informations, consultez [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) et [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span><span class="sxs-lookup"><span data-stu-id="8e3f3-108">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="8e3f3-109">Ce service expose une API qui peut différer la résolution de noms.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-109">This service exposes an API that can defer name resolution.</span></span> <span data-ttu-id="8e3f3-110">La métaphore implémentée par le service est que les noms ne peut pas être résolus dans un premier passage par rapport à un graphique d’objets partiels doivent être stockés et utilisés pour créer le jeton de correction.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-110">The metaphor implemented by the service is that names that cannot be resolved in a first pass against a partial name-object graph should be stored and used to create the fixup token.</span></span> <span data-ttu-id="8e3f3-111">Dans le comportement par défaut, tous ces noms sont soumises pour une autre tentative de résolution d’un deuxième passage.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-111">In the default behavior, all such names are submitted for another resolution attempt on a second pass.</span></span> <span data-ttu-id="8e3f3-112">Sur la deuxième passe, le graphique d’objets est terminé, et tous les jetons de correction sont en mesure de résoudre.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-112">On the second pass, the overall name-object graph is complete, and all the fixup tokens are able to resolve.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8e3f3-113">Même si elles sont autorisées par une implémentation particulière, les références anticipées dans XAML ont inévitablement des conséquences sur les performances.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-113">Even if they are permitted by a particular implementation, forward references in XAML inevitably have performance consequences.</span></span> <span data-ttu-id="8e3f3-114">Il est recommandé pour la qualité de la production XAML d’éviter les références anticipées chaque fois que possible.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-114">As a best practice for production-quality XAML, avoid forward references whenever possible.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <altmember cref="T:System.Windows.NameScope" />
  </Docs>
  <Members>
    <Member MemberName="GetAllNamesAndValuesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetAllNamesAndValuesInScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetAllNamesAndValuesInScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllNamesAndValuesInScope () As IEnumerable(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetAllNamesAndValuesInScope();" />
      <MemberSignature Language="F#" Value="abstract member GetAllNamesAndValuesInScope : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="iXamlNameResolver.GetAllNamesAndValuesInScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e3f3-115">Retourne un jeu énumérable de tous les objets nommés figurant dans la portée de nom XAML.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-115">Returns an enumerable set of all named objects in the XAML namescope.</span></span></summary>
        <returns><span data-ttu-id="8e3f3-116">Jeu énumérable d'objets <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-116">An enumerable set of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects.</span></span> <span data-ttu-id="8e3f3-117">Pour chaque <see cref="T:System.Collections.Generic.KeyValuePair`2" />, le composant <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> est une chaîne, et le composant <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> est l'objet qui utilise le nom <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> dans la portée de nom XAML.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-117">For each <see cref="T:System.Collections.Generic.KeyValuePair`2" />, the <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> component is a string, and the <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> component is the object that uses the <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> name in the XAML namescope.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFixupToken">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e3f3-118">Retourne un objet qui peut être correct pour certains modèles de balisage qui produisent des références vers l'avant.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-118">Returns an object that can correct for certain markup patterns that produce forward references.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String)) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; -&gt; obj" Usage="iXamlNameResolver.GetFixupToken names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="names"><span data-ttu-id="8e3f3-119">Collection des noms qui constituent des références possibles vers l'avant.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-119">A collection of names that are possible forward references.</span></span></param>
        <summary><span data-ttu-id="8e3f3-120">Retourne un objet qui peut être correct pour certains modèles de balisage qui produisent des références vers l'avant.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-120">Returns an object that can correct for certain markup patterns that produce forward references.</span></span></summary>
        <returns><span data-ttu-id="8e3f3-121">Objet qui fournit un jeton pour le comportement de recherche à évaluer ultérieurement.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-121">An object that provides a token for lookup behavior to be evaluated later.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3f3-122">Les fournisseurs de services internes existants qui sont disponibles dans les contextes de schéma pour les extensions de balisage et les convertisseurs de type peuvent implémenter ce service ; Toutefois, elles retournent un type interne uniquement les writers XAML existants qui fonctionnent sous le contexte de schéma XAML par défaut peuvent traiter.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-122">Existing internal service providers that are available in schema contexts for markup extensions and type converters can implement this service; however, they return an internal type that only the existing XAML writers that work under the default XAML schema context can process.</span></span>  
  
 <span data-ttu-id="8e3f3-123">Lorsque tous les noms référencés peuvent être résolus, le code utilisateur est appelé pour d’analyse de chaque nom dans la liste.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-123">When all the forward referenced names are resolvable, the user code is called to reparse each name in the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names, bool canAssignDirectly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, bool canAssignDirectly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String), canAssignDirectly As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names, bool canAssignDirectly);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; * bool -&gt; obj" Usage="iXamlNameResolver.GetFixupToken (names, canAssignDirectly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="canAssignDirectly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="names"><span data-ttu-id="8e3f3-124">Collection des noms qui constituent des références possibles vers l'avant.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-124">A collection of names that are possible forward references.</span></span></param>
        <param name="canAssignDirectly"><span data-ttu-id="8e3f3-125"><see langword="true" /> pour assigner immédiatement la référence de nom résolue à la propriété cible.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-125"><see langword="true" /> to immediately assign the resolved name reference to the target property.</span></span> <span data-ttu-id="8e3f3-126"><see langword="false" /> pour appeler le code utilisateur pour une nouvelle analyse.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-126"><see langword="false" /> to call the user code for a reparse.</span></span> <span data-ttu-id="8e3f3-127">Le comportement par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-127">The default behavior is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8e3f3-128">Retourne un objet qui peut être correct pour certains modèles de balisage qui produisent des références vers l'avant.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-128">Returns an object that can correct for certain markup patterns that produce forward references.</span></span></summary>
        <returns><span data-ttu-id="8e3f3-129">Objet qui fournit un jeton pour le comportement de recherche à évaluer ultérieurement.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-129">An object that provides a token for lookup behavior to be evaluated later.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3f3-130">Les fournisseurs de services internes existants qui sont disponibles dans les contextes de schéma pour les extensions de balisage et les convertisseurs de type implémentent ce service ; Toutefois, elles retournent un type interne qui peut uniquement être traité par les writers XAML existants qui fonctionnent sous le contexte de schéma XAML par défaut.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-130">Existing internal service providers that are available in schema contexts for markup extensions and type converters implement this service; however, they return an internal type that can only be processed by the existing XAML writers that work under the default XAML schema context.</span></span>  
  
 <span data-ttu-id="8e3f3-131">Si `canAssignDirectly` est `false`, lorsque tous les noms référencés peuvent être résolus, le code utilisateur est appelé pour chaque nom dans la liste de nouvelle analyse.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-131">If `canAssignDirectly` is `false`, when all the forward referenced names are resolvable, the user code is called to reparse each name in the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixupTokenAvailable">
      <MemberSignature Language="C#" Value="public bool IsFixupTokenAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixupTokenAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixupTokenAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixupTokenAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixupTokenAvailable : bool" Usage="System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e3f3-132">Obtient une valeur qui détermine si l'appel de <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> est disponible pour résoudre un nom dans un jeton pour la résolution vers l'avant.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-132">Gets a value that determines whether calling <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> is available in order to resolve a name into a token for forward resolution.</span></span></summary>
        <value><span data-ttu-id="8e3f3-133"><see langword="true" /> si <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> est disponible en tant qu'implémentation qui retourne un jeton utile pour la résolution vers l'avant ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-133"><see langword="true" /> if <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> is available as an implementation that returns a useful token for forward resolution; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3f3-134">Cette propriété retourne `false` lorsque <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> ne retourne pas un jeton, car un <xref:System.Xaml.Schema.XamlValueConverter%601> est impliqué dans la deuxième passe sur un jeton existant.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-134">This property returns `false` when <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> does not return a token because a <xref:System.Xaml.Schema.XamlValueConverter%601> is involved in the second pass on an existing token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNameScopeInitializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler OnNameScopeInitializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OnNameScopeInitializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event OnNameScopeInitializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OnNameScopeInitializationComplete;" />
      <MemberSignature Language="F#" Value="member this.OnNameScopeInitializationComplete : EventHandler " Usage="member this.OnNameScopeInitializationComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e3f3-135">Se produit lorsqu'un processeur XAML a inscrit tous les noms pertinents dans la portée de nom XAML de stockage.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-135">Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e3f3-136">Résout un objet à partir d'une référence de nom.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-136">Resolves an object from a name reference.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string -&gt; obj" Usage="iXamlNameResolver.Resolve name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8e3f3-137">Référence de nom à résoudre.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-137">The name reference to resolve.</span></span></param>
        <summary><span data-ttu-id="8e3f3-138">Résout un objet à partir d'une référence de nom.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-138">Resolves an object from a name reference.</span></span></summary>
        <returns><span data-ttu-id="8e3f3-139">Objet résolu ou valeur Null.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-139">The resolved object; or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3f3-140">Si une valeur est retournée en tant que `null`, une référence anticipée peut exister.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-140">If a value is returned as `null`, a forward reference might exist.</span></span> <span data-ttu-id="8e3f3-141">Les implémentations qui souhaitent prendre en charge les références anticipées peuvent utiliser le `FixupToken` modèle via la <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> et <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> API.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-141">Implementations that want to support forward references can use the `FixupToken` pattern through the <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> and <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> APIs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name, out bool isFullyInitialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name, [out] bool&amp; isFullyInitialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String, ByRef isFullyInitialized As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name, [Runtime::InteropServices::Out] bool % isFullyInitialized);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string *  -&gt; obj" Usage="iXamlNameResolver.Resolve (name, isFullyInitialized)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isFullyInitialized" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8e3f3-142">Référence de nom à résoudre.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-142">The name reference to resolve.</span></span></param>
        <param name="isFullyInitialized"><span data-ttu-id="8e3f3-143"><see langword="true" /> si l'objet retourné par la méthode comporte des dépendances avec des références non résolues ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-143">When this method returns, <see langword="true" /> if the returned object has any dependencies on unresolved references; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8e3f3-144">Résout un objet à partir d'une référence de nom et fournit une valeur de suivi qui signale si l'objet est entièrement initialisé pour le graphique d'objet.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-144">Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.</span></span></summary>
        <returns><span data-ttu-id="8e3f3-145">Objet qui fournit un jeton pour le comportement de recherche à évaluer ultérieurement.</span><span class="sxs-lookup"><span data-stu-id="8e3f3-145">An object that provides a token for lookup behavior to be evaluated later.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>