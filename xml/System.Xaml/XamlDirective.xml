<Type Name="XamlDirective" FullName="System.Xaml.XamlDirective">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95fab87d5eed7bb70a2918e6a942597a62d78e89" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51934948" /></Metadata><TypeSignature Language="C#" Value="public class XamlDirective : System.Xaml.XamlMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlDirective extends System.Xaml.XamlMember" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlDirective" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlDirective&#xA;Inherits XamlMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlDirective : System::Xaml::XamlMember" />
  <TypeSignature Language="F#" Value="type XamlDirective = class&#xA;    inherit XamlMember" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8bc03-101">Fournit l'identificateur de système de type XAML pour un membre si le membre est également une directive XAML.</span><span class="sxs-lookup"><span data-stu-id="8bc03-101">Provides the XAML type system identifier for a member if the member is also a XAML directive.</span></span> <span data-ttu-id="8bc03-102">Les lecteurs XAML et les writers XAML utilisent l'identificateur <see cref="T:System.Xaml.XamlDirective" /> pendant le traitement des nœuds membres.</span><span class="sxs-lookup"><span data-stu-id="8bc03-102">XAML readers and XAML writers use the <see cref="T:System.Xaml.XamlDirective" /> identifier during processing of member nodes.</span></span> <span data-ttu-id="8bc03-103">L'identificateur est utilisé lorsque le lecteur XAML est positionné sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" /> et que <see cref="P:System.Xaml.XamlMember.IsDirective" /> a la valeur <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-103">The identifier is used when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" /> and <see cref="P:System.Xaml.XamlMember.IsDirective" /> is <see langword="true" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-104"><xref:System.Xaml.XamlDirective> Fournit des valeurs attendues pour le système de type XAML lorsque le membre est une directive XAML.</span><span class="sxs-lookup"><span data-stu-id="8bc03-104"><xref:System.Xaml.XamlDirective> provides expected values for the XAML type system when the member is a XAML directive.</span></span> <span data-ttu-id="8bc03-105">Par définition, une directive XAML a des caractéristiques qui retournent toujours les mêmes résultats pour un sous-ensemble de la <xref:System.Xaml.XamlMember> propriétés et les mêmes informations de système de type XAML est signalé pour les directives XAML possibles.</span><span class="sxs-lookup"><span data-stu-id="8bc03-105">By definition, a XAML directive has characteristics that always return the same results for a subset of the <xref:System.Xaml.XamlMember> properties, and the same XAML type system information is reported for all possible XAML directives.</span></span> <span data-ttu-id="8bc03-106">Des caractéristiques de système de type XAML qui sont spécifiques aux directives sont signalées par le comportement interne ou via des substitutions de <xref:System.Xaml.XamlMember> `Lookup*` membres virtuels dans le <xref:System.Xaml.XamlDirective> classe.</span><span class="sxs-lookup"><span data-stu-id="8bc03-106">The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of <xref:System.Xaml.XamlMember> `Lookup*` virtual members in the <xref:System.Xaml.XamlDirective> class.</span></span>  
  
 <span data-ttu-id="8bc03-107">La liste suivante montre les résultats retournés par une directive XAML pour <xref:System.Xaml.XamlMember> lorsque le membre est en fait un <xref:System.Xaml.XamlDirective>:</span><span class="sxs-lookup"><span data-stu-id="8bc03-107">The following list shows the returned results of a XAML directive for <xref:System.Xaml.XamlMember> when the member is actually a <xref:System.Xaml.XamlDirective>:</span></span>  
  
-   <span data-ttu-id="8bc03-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> est toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="8bc03-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> est toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="8bc03-110"><xref:System.Xaml.XamlMember.DependsOn%2A> est toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-110"><xref:System.Xaml.XamlMember.DependsOn%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="8bc03-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> est toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="8bc03-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> est toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="8bc03-113"><xref:System.Xaml.XamlMember.IsDirective%2A> est toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-113"><xref:System.Xaml.XamlMember.IsDirective%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="8bc03-114"><xref:System.Xaml.XamlMember.IsEvent%2A> est toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-114"><xref:System.Xaml.XamlMember.IsEvent%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="8bc03-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> est toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="8bc03-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> est toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="8bc03-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> est toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> is always `true`.</span></span>  
  
 <span data-ttu-id="8bc03-118">En outre, le stockage interne pour <xref:System.Xaml.XamlMember.DeclaringType%2A> reste indéfini et retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-118">Also, the internal backing for <xref:System.Xaml.XamlMember.DeclaringType%2A> remains unset and returns `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8bc03-119"><xref:System.Xaml.XamlDirective> est un <xref:System.Xaml.XamlMember> sous-classe.</span><span class="sxs-lookup"><span data-stu-id="8bc03-119"><xref:System.Xaml.XamlDirective> is a <xref:System.Xaml.XamlMember> subclass.</span></span> <span data-ttu-id="8bc03-120">Comme avec <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> a des considérations de sécurité concernant la façon dont le système de type XAML signale l’accès.</span><span class="sxs-lookup"><span data-stu-id="8bc03-120">As with <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> has security considerations regarding how the XAML type system reports access.</span></span> <span data-ttu-id="8bc03-121">Consultez <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="8bc03-121">See <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlMember" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3"><span data-ttu-id="8bc03-122">Fonctionnement des concepts et structures du flux de nœud XAML</span><span class="sxs-lookup"><span data-stu-id="8bc03-122">Understanding XAML Node Stream Structures and Concepts</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8bc03-123">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-123">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : string * string -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespace, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="8bc03-124">Espace de noms XAML principal dans lequel ce <see cref="T:System.Xaml.XamlDirective" /> peut exister.</span><span class="sxs-lookup"><span data-stu-id="8bc03-124">The primary XAML namespace where this <see cref="T:System.Xaml.XamlDirective" /> can exist.</span></span></param>
        <param name="name"><span data-ttu-id="8bc03-125">Nom identifiant du <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-125">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span></span></param>
        <summary><span data-ttu-id="8bc03-126">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDirective" />, en spécifiant des valeurs pour un nom et un espace de noms XAML unique.</span><span class="sxs-lookup"><span data-stu-id="8bc03-126">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for a name and a single XAML namespace.</span></span> <span data-ttu-id="8bc03-127">Utilisez cette signature uniquement lorsque vous souhaitez ou attendez que <see cref="P:System.Xaml.XamlMember.IsUnknown" /> indique <see langword="true" /> pour la directive.</span><span class="sxs-lookup"><span data-stu-id="8bc03-127">Use this signature only when you want or expect <see cref="P:System.Xaml.XamlMember.IsUnknown" /> to report <see langword="true" /> for the directive.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8bc03-128">Cette signature du constructeur génère toujours un identificateur pour la directive où <xref:System.Xaml.XamlMember.IsUnknown%2A> rapports `true` système de type pour le XAML.</span><span class="sxs-lookup"><span data-stu-id="8bc03-128">This signature of the constructor always generates an identifier for the directive where <xref:System.Xaml.XamlMember.IsUnknown%2A> reports `true` for the XAML type system.</span></span> <span data-ttu-id="8bc03-129">Si les informations nécessaires sont disponibles (le type de sauvegarde et un élément d’informations de syntaxe de texte pour la conversion) et que vous souhaitez un identificateur qui peut appliquer la directive, utilisez le <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> signature du constructeur à la place.</span><span class="sxs-lookup"><span data-stu-id="8bc03-129">If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> constructor signature instead.</span></span>  
  
 <span data-ttu-id="8bc03-130">Si vous utilisez cette signature, le <xref:System.Xaml.XamlDirective.AllowedLocation%2A> valeur de l’instance est <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; et le <xref:System.Xaml.XamlMember.Type%2A> valeur et <xref:System.Xaml.XamlMember.TypeConverter%2A> valeur sont toutes deux `null`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-130">If you use this signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; and the <xref:System.Xaml.XamlMember.Type%2A> value and <xref:System.Xaml.XamlMember.TypeConverter%2A> value are both `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (System.Collections.Generic.IEnumerable&lt;string&gt; xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; xamlNamespaces, string name, class System.Xaml.XamlType xamlType, class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; typeConverter, valuetype System.Xaml.Schema.AllowedMemberLocations allowedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ xamlNamespaces, System::String ^ name, System::Xaml::XamlType ^ xamlType, System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ typeConverter, System::Xaml::Schema::AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : seq&lt;string&gt; * string * System.Xaml.XamlType * System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; * System.Xaml.Schema.AllowedMemberLocations -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespaces, name, xamlType, typeConverter, allowedLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespaces" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
        <Parameter Name="typeConverter" Type="System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" />
        <Parameter Name="allowedLocation" Type="System.Xaml.Schema.AllowedMemberLocations" />
      </Parameters>
      <Docs>
        <param name="xamlNamespaces"><span data-ttu-id="8bc03-131">Jeu d'espaces de noms XAML où ce <see cref="T:System.Xaml.XamlDirective" /> peut exister, passé en tant que jeu énumérable des chaînes d'identification.</span><span class="sxs-lookup"><span data-stu-id="8bc03-131">A set of XAML namespaces where this <see cref="T:System.Xaml.XamlDirective" /> can exist, passed as an enumerable set of the identifier strings.</span></span></param>
        <param name="name"><span data-ttu-id="8bc03-132">Nom identifiant du <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-132">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span></span></param>
        <param name="xamlType"><span data-ttu-id="8bc03-133">Type XAML qui stocke le <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-133">The XAML type that backs the <see cref="T:System.Xaml.XamlDirective" />.</span></span></param>
        <param name="typeConverter"><span data-ttu-id="8bc03-134">Convertisseur de type utilisé par ce <see cref="T:System.Xaml.XamlDirective" /> pour la conversion de la syntaxe du texte.</span><span class="sxs-lookup"><span data-stu-id="8bc03-134">The type converter that this <see cref="T:System.Xaml.XamlDirective" /> uses for text syntax conversion.</span></span></param>
        <param name="allowedLocation"><span data-ttu-id="8bc03-135">Valeur de l'énumération <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-135">A value of the <see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="8bc03-136">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDirective" />, en spécifiant des valeurs pour chacune des valeurs en fonction du cas d'un <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-136">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for each per-case value of a <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-137">Vous devez utiliser ce constructeur pour générer un <xref:System.Xaml.XamlDirective> qui ne signale pas <xref:System.Xaml.XamlMember.IsUnknown%2A> comme `true`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-137">You must use this constructor to generate a <xref:System.Xaml.XamlDirective> that does not report <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8bc03-138">Le paramètre <paramref name="xamlType" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-138">The <paramref name="xamlType" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedLocation">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.Schema.AllowedMemberLocations AllowedLocation" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlDirective.AllowedLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedLocation As AllowedMemberLocations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::AllowedMemberLocations AllowedLocation { System::Xaml::Schema::AllowedMemberLocations get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedLocation : System.Xaml.Schema.AllowedMemberLocations" Usage="System.Xaml.XamlDirective.AllowedLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.AllowedMemberLocations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bc03-139">Obtient une valeur qui spécifie les types de nœud XAML pour lesquels la directive peut être spécifiée.</span><span class="sxs-lookup"><span data-stu-id="8bc03-139">Gets a value that specifies the XAML node types where the directive can be specified.</span></span></summary>
        <value><span data-ttu-id="8bc03-140">Valeur de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="8bc03-140">A value of the enumeration.</span></span> <span data-ttu-id="8bc03-141">La valeur par défaut est l'énumération par défaut, laquelle est <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-141">The default is the enumeration default, which is <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-142">Vous pouvez définir cette valeur dans la <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> signature de constructeur.</span><span class="sxs-lookup"><span data-stu-id="8bc03-142">You can set this value in the <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> constructor signature.</span></span> <span data-ttu-id="8bc03-143">Si vous construisez à l’aide de la <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> signature de constructeur, le <xref:System.Xaml.XamlDirective.AllowedLocation%2A> valeur de l’instance est <xref:System.Xaml.Schema.AllowedMemberLocations.Any>.</span><span class="sxs-lookup"><span data-stu-id="8bc03-143">If you construct by using the <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> constructor signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>.</span></span> <span data-ttu-id="8bc03-144">Toutefois, l’instance signale toujours <xref:System.Xaml.XamlMember.IsUnknown%2A> comme `true`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-144">However, the instance always reports <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span> <span data-ttu-id="8bc03-145">Ce comportement affecte généralement les tentatives d’écriture de graphiques d’objets et affecte également les autres utilisations pratiques d’un <xref:System.Xaml.XamlMember> valeur.</span><span class="sxs-lookup"><span data-stu-id="8bc03-145">This behavior typically affects attempts to write object graphs and also affects other practical uses of a <xref:System.Xaml.XamlMember> value.</span></span>  
  
 <span data-ttu-id="8bc03-146">Vous ne construisez généralement pas de cas de directive XAML où <xref:System.Xaml.XamlDirective.AllowedLocation%2A> est <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8bc03-146">You typically would not construct a XAML directive case where <xref:System.Xaml.XamlDirective.AllowedLocation%2A> is <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlDirective.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-147">Retourne le code de hachage de cet objet.</span><span class="sxs-lookup"><span data-stu-id="8bc03-147">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="8bc03-148">Code de hachage entier.</span><span class="sxs-lookup"><span data-stu-id="8bc03-148">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlDirective.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-149">Retourne une liste d'espaces de noms XAML dans lesquels ce membre XAML peut exister.</span><span class="sxs-lookup"><span data-stu-id="8bc03-149">Returns a list of XAML namespaces where this XAML member can exist.</span></span></summary>
        <returns><span data-ttu-id="8bc03-150">Liste d'identificateurs d'espace de noms XAML, sous forme de chaînes.</span><span class="sxs-lookup"><span data-stu-id="8bc03-150">A list of XAML namespace identifiers, as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-151">Les identificateurs d’espace de noms XAML sont des chaînes qui apparaissent généralement sous la forme de chaîne d’identificateur URI (Uniform Resource) selon les conventions habituelles pour les espaces de noms XAML et XML.</span><span class="sxs-lookup"><span data-stu-id="8bc03-151">The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces.</span></span> <span data-ttu-id="8bc03-152">Si la liste contient plusieurs éléments, le premier élément dans le jeu est généralement l’espace de noms XAML principal pertinentes à des fins de traitement, et les autres éléments sont des alternatives.</span><span class="sxs-lookup"><span data-stu-id="8bc03-152">If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates.</span></span> <span data-ttu-id="8bc03-153"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> repose sur ce classement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-153"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> relies on this ordering.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlDirective.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-154">Retourne une implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-154">Returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span> <span data-ttu-id="8bc03-155">Cette implémentation retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-155">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="8bc03-156">Retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-156">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-157">Une directive XAML ne peut pas avoir des attributs personnalisés, cette implémentation retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-157">Because a XAML directive cannot have custom attributes, this implementation always returns `null`.</span></span> <span data-ttu-id="8bc03-158"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-158"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlDirective.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-159">Retourne un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, lequel est utilisé pendant le chargement différé des objets XAML déclarés.</span><span class="sxs-lookup"><span data-stu-id="8bc03-159">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used during deferred loading of XAML-declared objects.</span></span> <span data-ttu-id="8bc03-160">Cette implémentation retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-160">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="8bc03-161">Retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-161">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-162">Une directive ne peut pas avoir un chargement différé, cette implémentation retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-162">Because a directive cannot have deferred loading, this implementation always returns `null`.</span></span> <span data-ttu-id="8bc03-163"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-163"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected override sealed System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlDirective.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-164">Retourne une liste d'objets <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-164">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="8bc03-165">Cette liste répertorie les membres pour lesquels il existe des relations de dépendance pour l'ordre d'initialisation concernant ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-165">The list reports the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span> <span data-ttu-id="8bc03-166">Cette implémentation retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-166">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="8bc03-167">Retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-167">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-168">Une directive XAML ne peut pas avoir d’ordre d’initialisation, cette implémentation retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-168">Because a XAML directive cannot have initialization order, this implementation always returns `null`.</span></span> <span data-ttu-id="8bc03-169"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-169"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlDirective.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-170">Retourne le <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associé à un <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-170">Returns the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with a <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <returns><span data-ttu-id="8bc03-171">Informations <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> pour ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-171">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-172">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bc03-172">This method may be invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="8bc03-173">Cette implémentation retourne un statique interne <xref:System.Xaml.Schema.XamlMemberInvoker> valeur qui est spécifique aux directives dans le système de type XAML.</span><span class="sxs-lookup"><span data-stu-id="8bc03-173">This implementation returns an internal static <xref:System.Xaml.Schema.XamlMemberInvoker> value that is specific to directives in the XAML type system.</span></span> <span data-ttu-id="8bc03-174"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-174"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlDirective.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-175">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> est signalé comme étant une propriété ambiante.</span><span class="sxs-lookup"><span data-stu-id="8bc03-175">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <returns><span data-ttu-id="8bc03-176">Retourne toujours <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-176">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-177">Une directive XAML ne peut pas être un type ambiant, cette implémentation retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-177">Because a XAML directive cannot be an ambient type, this implementation always returns `false`.</span></span> <span data-ttu-id="8bc03-178"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-178"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlMember.LookupIsAmbient" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="override this.LookupIsEvent : unit -&gt; bool" Usage="xamlDirective.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-179">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente un événement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-179">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an event.</span></span></summary>
        <returns><span data-ttu-id="8bc03-180">Retourne toujours <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-180">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-181"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-181"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-182">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente une propriété en lecture seule escomptée.</span><span class="sxs-lookup"><span data-stu-id="8bc03-182">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended read-only property.</span></span></summary>
        <returns><span data-ttu-id="8bc03-183">Retourne toujours <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-183">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-184">Par définition, les directives sont définissables.</span><span class="sxs-lookup"><span data-stu-id="8bc03-184">By definition, directives are settable.</span></span> <span data-ttu-id="8bc03-185"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-185"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlDirective.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-186">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente une propriété qui a un accesseur <see langword="get" /> public.</span><span class="sxs-lookup"><span data-stu-id="8bc03-186">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="8bc03-187">Retourne toujours <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-187">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-188"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-188"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlDirective.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-189">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente un membre qui ne peut pas être résolu par le système de stockage utilisé pour la résolution du type et du membre.</span><span class="sxs-lookup"><span data-stu-id="8bc03-189">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <returns><span data-ttu-id="8bc03-190"><see langword="true" /> si ce <see cref="T:System.Xaml.XamlDirective" /> représente un membre qui ne peut pas être résolu ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-190"><see langword="true" /> if this <see cref="T:System.Xaml.XamlDirective" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-191">Le <xref:System.Xaml.XamlDirective> implémentation appelle base uniquement et ne fait rien de plus.</span><span class="sxs-lookup"><span data-stu-id="8bc03-191">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="8bc03-192">L’implémentation de base retourne les résultats dans cet ordre : les résultats sont basés sur la réflexion interne ; ou les résultats sont basés sur la vérification d’une valeur null de la <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bc03-192">The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="8bc03-193">Le <xref:System.Xaml.XamlDirective> implémentation le scelle virtuel membre ; par conséquent, tous <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-193">The <xref:System.Xaml.XamlDirective> implementation seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-194">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente une propriété en écriture seule escomptée.</span><span class="sxs-lookup"><span data-stu-id="8bc03-194">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended write-only property.</span></span></summary>
        <returns><span data-ttu-id="8bc03-195">Retourne toujours <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-195">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-196"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-196"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlDirective.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-197">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente une propriété qui a un accesseur <see langword="set" /> public.</span><span class="sxs-lookup"><span data-stu-id="8bc03-197">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="set" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="8bc03-198">Retourne toujours <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-198">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-199"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-199"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-200">Retourne le <see cref="T:System.Xaml.XamlType" /> du type dans lequel le <see cref="T:System.Xaml.XamlMember" /> peut exister.</span><span class="sxs-lookup"><span data-stu-id="8bc03-200">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span> <span data-ttu-id="8bc03-201">Cette implémentation retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-201">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="8bc03-202">Retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-202">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-203">Types de cibles ne sont pas pertinents pour les directives ; Par conséquent, cette implémentation retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="8bc03-203">Target types are not relevant for directives; therefore, this implementation always returns `null`.</span></span> <span data-ttu-id="8bc03-204"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-204"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-205">Retourne le <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</span><span class="sxs-lookup"><span data-stu-id="8bc03-205">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <returns><span data-ttu-id="8bc03-206"><see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</span><span class="sxs-lookup"><span data-stu-id="8bc03-206">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-207">Le <xref:System.Xaml.XamlDirective> implémentation appelle base uniquement et ne fait rien de plus.</span><span class="sxs-lookup"><span data-stu-id="8bc03-207">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="8bc03-208">L’implémentation de base retourne des résultats basés sur une réflexion interne, ou lors de la recherche d’une valeur null de <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, dans cet ordre.</span><span class="sxs-lookup"><span data-stu-id="8bc03-208">The base implementation returns results based either on internal reflection, or checking for a null value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span> <span data-ttu-id="8bc03-209"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-209"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 <span data-ttu-id="8bc03-210">Consultez la section Notes dans <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> pour plus d’informations sur les informations <xref:System.Xaml.XamlMember.Type%2A> exécute.</span><span class="sxs-lookup"><span data-stu-id="8bc03-210">See Remarks in <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> for more information about what information <xref:System.Xaml.XamlMember.Type%2A> carries.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlDirective.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-211">Retourne une implémentation de convertisseur de type qui est associée à ce <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-211">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <returns><span data-ttu-id="8bc03-212">Instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui comporte une contrainte <see cref="T:System.ComponentModel.TypeConverter" /> ; ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-212">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance that has <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-213">Le <xref:System.Xaml.XamlDirective> implémentation appelle base uniquement et ne fait rien de plus.</span><span class="sxs-lookup"><span data-stu-id="8bc03-213">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="8bc03-214">Consultez <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8bc03-214">See <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8bc03-215"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-215"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-216">Retourne un accesseur <see langword="get" /> associé à ce <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-216">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span> <span data-ttu-id="8bc03-217">Cette implémentation retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-217">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="8bc03-218">Retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-218">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-219"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-219"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlDirective.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-220">Retourne une réflexion <see cref="T:System.Reflection.MemberInfo" /> CLR associée à ce <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-220">Returns a CLR reflection <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span> <span data-ttu-id="8bc03-221">Cette implémentation retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-221">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="8bc03-222">Retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-222">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-223"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-223"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-224">Retourne un accesseur <see langword="set" /> associé à ce <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-224">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span> <span data-ttu-id="8bc03-225">Cette implémentation retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-225">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="8bc03-226">Retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-226">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-227"><xref:System.Xaml.XamlDirective> scelle ce membre virtuel ; Par conséquent, tous les <xref:System.Xaml.XamlDirective> types et des directives XAML prédéfinies doivent utiliser ce comportement.</span><span class="sxs-lookup"><span data-stu-id="8bc03-227"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlDirective.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bc03-228">Retourne une représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-228">Returns a string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <returns><span data-ttu-id="8bc03-229">Représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="8bc03-229">A string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bc03-230">Si les informations d’espace de noms XAML ne sont disponibles, cette implémentation retourne une combinaison de chaînes <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> et <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bc03-230">If XAML namespace information is available, this implementation returns a string combination of <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> and <xref:System.Xaml.XamlMember.Name%2A>.</span></span> <span data-ttu-id="8bc03-231">Si les informations d’espace de noms XAML sont indisponibles, cette implémentation retourne <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bc03-231">If XAML namespace information is unavailable, this implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>