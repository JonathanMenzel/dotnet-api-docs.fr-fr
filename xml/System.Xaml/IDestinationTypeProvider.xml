<Type Name="IDestinationTypeProvider" FullName="System.Xaml.IDestinationTypeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9c0902f060cf70a990455e9cd7000558331b3fac" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36444928" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDestinationTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IDestinationTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDestinationTypeProvider" />
  <TypeSignature Language="F#" Value="type IDestinationTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9c04f-101">Représente un service qui peut retourner un identificateur de système de type CLR pour le type de destination.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c04f-101">Represents a service that can return a CLR type system identifier for the destination type.</span>
      </span>
      <span data-ttu-id="9c04f-102">Le type de destination est pertinent lorsque celui défini pour une opération de définition de propriétés est indirectement signalé par une réflexion ou d'autres mécanismes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c04f-102">The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c04f-103">Le type qui est retourné par <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> est résolu à partir de la position actuelle du flux de nœud XAML à l’aide du contexte de schéma XAML actif.</span><span class="sxs-lookup"><span data-stu-id="9c04f-103">The type that is returned by <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> is resolved from the current position of the XAML node stream by using current XAML schema context.</span></span>  
  
 <span data-ttu-id="9c04f-104">Si vous utilisez le système de type XAML tel qu’implémenté par les Services XAML .NET Framework et le contexte de service sous ces conditions, l’accès <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> retourne le <xref:System.Xaml.XamlType.UnderlyingType%2A> selon les informations de système de type XAML disponibles et le contexte de schéma XAML basé sur CLR.</span><span class="sxs-lookup"><span data-stu-id="9c04f-104">If you use the XAML type system as implemented by .NET Framework XAML Services and access the service context under these conditions, <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> returns the <xref:System.Xaml.XamlType.UnderlyingType%2A> based on available XAML type system information and CLR-based XAML schema context.</span></span>  
  
 <span data-ttu-id="9c04f-105">Ce service s’applique aux situations où réflexion pure CLR ou autres mécanismes peut ne pas fournissent suffisamment d’informations sur un type de destination.</span><span class="sxs-lookup"><span data-stu-id="9c04f-105">This service is relevant for situations where pure CLR reflection or other mechanisms might not provide enough information about a destination type.</span></span> <span data-ttu-id="9c04f-106">Voici une liste de quelques scénarios pertinents pour <xref:System.Xaml.IDestinationTypeProvider>:</span><span class="sxs-lookup"><span data-stu-id="9c04f-106">The following is a list of some relevant scenarios for <xref:System.Xaml.IDestinationTypeProvider>:</span></span>  
  
-   <span data-ttu-id="9c04f-107">Le système de type CLR signale un type indirect en raison de la façon dont le CLR définit et utilise des types, et vous souhaitez un type de destination vrai.</span><span class="sxs-lookup"><span data-stu-id="9c04f-107">The CLR type system reports an indirect type because of how the CLR defines and uses types, and you want a true destination type.</span></span> <span data-ttu-id="9c04f-108">Par exemple, les API dans les Services XAML .NET Framework utilisent ce service en interne lorsqu’ils traitent des membres de l’événement.</span><span class="sxs-lookup"><span data-stu-id="9c04f-108">For example, the APIs in .NET Framework XAML Services use this service internally when they process event members.</span></span> <span data-ttu-id="9c04f-109">Les événements sont signalés par réflexion pure CLR comme un <xref:System.Delegate>.</span><span class="sxs-lookup"><span data-stu-id="9c04f-109">Events are reported by pure CLR reflection as a <xref:System.Delegate>.</span></span>  
  
-   <span data-ttu-id="9c04f-110">Vous souhaitez vous assurer que le type de destination de l’utilisation d’un convertisseur de type correspond au type attendu que le convertisseur de type peut produire.</span><span class="sxs-lookup"><span data-stu-id="9c04f-110">You want to ensure that the destination type of a type converter usage matches the expected type that the type converter can produce.</span></span> <span data-ttu-id="9c04f-111">Ce scénario est utile lorsque le type de destination est paramétré ou générique.</span><span class="sxs-lookup"><span data-stu-id="9c04f-111">This scenario is useful when the destination type is parameterized or generic.</span></span>  
  
-   <span data-ttu-id="9c04f-112">Votre convertisseur de valeurs est appelée à partir d’une utilisation imbriquée dans un autre convertisseur de valeurs.</span><span class="sxs-lookup"><span data-stu-id="9c04f-112">Your value converter is being called from a usage that nested in another value converter.</span></span> <span data-ttu-id="9c04f-113">Dans ce cas, <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> se déroule l’imbrication et retourne le type de destination de la propriété réelle qui est définie, au lieu de retourner le type de sortie de tous les convertisseurs de valeur intermédiaire.</span><span class="sxs-lookup"><span data-stu-id="9c04f-113">In this case, <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> unwinds the nesting and returns the destination type of the actual property being set, instead of returning the output type of any intervening value converter.</span></span>  
  
 <span data-ttu-id="9c04f-114">Convertisseurs de type et extensions de balisage peuvent interroger pour <xref:System.Xaml.IDestinationTypeProvider> en tant que service sur le contexte de service qui est fourni par un writer d’objet XAML, lorsque le writer d’objet XAML appelle le comportement de conversion de valeur.</span><span class="sxs-lookup"><span data-stu-id="9c04f-114">Type converters and markup extensions can query for <xref:System.Xaml.IDestinationTypeProvider> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="9c04f-115">Pour plus d’informations, consultez [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) et [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span><span class="sxs-lookup"><span data-stu-id="9c04f-115">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <Member MemberName="GetDestinationType">
      <MemberSignature Language="C#" Value="public Type GetDestinationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDestinationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IDestinationTypeProvider.GetDestinationType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDestinationType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDestinationType();" />
      <MemberSignature Language="F#" Value="abstract member GetDestinationType : unit -&gt; Type" Usage="iDestinationTypeProvider.GetDestinationType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c04f-116">Retourne le CLR <see cref="T:System.Type" /> qui identifie le type de destination pour le convertisseur de type pertinent ou l'extension de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c04f-116">Returns the CLR <see cref="T:System.Type" /> that identifies the destination type for the relevant type converter or markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c04f-117">Valeur <see cref="T:System.Type" /> CLR pour le type de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c04f-117">A CLR <see cref="T:System.Type" /> value for the destination type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c04f-118">Cette méthode n’a aucun paramètre d’entrée.</span><span class="sxs-lookup"><span data-stu-id="9c04f-118">This method has no input parameter.</span></span> <span data-ttu-id="9c04f-119">Les éléments à retourner (et s’il faut retourner une valeur autre que `null`) est déterminé par la position du nœud actuel dans le flux de nœud XAML.</span><span class="sxs-lookup"><span data-stu-id="9c04f-119">What to return (and whether to return anything other than `null`) is determined by the current node position in the XAML node stream.</span></span>  
  
## <a name="service-implementers"></a><span data-ttu-id="9c04f-120">Implémenteurs de service</span><span class="sxs-lookup"><span data-stu-id="9c04f-120">Service Implementers</span></span>  
 <span data-ttu-id="9c04f-121">Si vous réimplémentez ce service, le <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> méthode doit retourner le type qu’un convertisseur de type ou d’extension de balisage s’attend à vérifier par rapport à son type de sortie ou de conversion plus spécifique.</span><span class="sxs-lookup"><span data-stu-id="9c04f-121">If you reimplement this service, the <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> method should return the type that a markup extension or type converter expects to check against its most specific conversion or output type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>