<Type Name="XamlWriter" FullName="System.Xaml.XamlWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97ff37111147273d0fa14f587014ff90f0e4de45" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39995012" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XamlWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XamlWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XamlWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlWriter abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type XamlWriter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="4eb50-101">Fournit l'implémentation par défaut et les définitions de classe de base pour un writer XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4eb50-101">Provides default implementation and base class definitions for a XAML writer.</span>
      </span>
      <span data-ttu-id="4eb50-102">Il ne s'agit pas d'un writer XAML par défaut actif ; vous devez le dériver de <see cref="T:System.Xaml.XamlWriter" /> et implémenter ses membres abstraits ou utiliser une classe dérivée <see cref="T:System.Xaml.XamlWriter" /> existante.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4eb50-102">This is not a working default XAML writer; you must either derive from <see cref="T:System.Xaml.XamlWriter" /> and implement its abstract members, or use an existing <see cref="T:System.Xaml.XamlWriter" /> derived class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eb50-103">Les pratiques les plus pertinents deux classes dérivées de <xref:System.Xaml.XamlWriter> sont le <xref:System.Xaml.XamlXmlWriter> et <xref:System.Xaml.XamlObjectWriter> des classes, comme l’expliquer les détails suivants :</span><span class="sxs-lookup"><span data-stu-id="4eb50-103">The two most relevant practical derived classes of <xref:System.Xaml.XamlWriter> are the <xref:System.Xaml.XamlXmlWriter> and <xref:System.Xaml.XamlObjectWriter> classes, as the following details explain:</span></span>  
  
-   <span data-ttu-id="4eb50-104"><xref:System.Xaml.XamlXmlWriter> traite un jeu de nœud XAML et produit un fichier texte XML.</span><span class="sxs-lookup"><span data-stu-id="4eb50-104"><xref:System.Xaml.XamlXmlWriter> processes a XAML node set and produces an XML text file.</span></span> <span data-ttu-id="4eb50-105">Cette classe peut être utilisée pour la sérialisation ou en tant que partie de la fonction d’un outil qui fonctionne avec la représentation en mémoire de XAML et produit une sortie de fichier XAML.</span><span class="sxs-lookup"><span data-stu-id="4eb50-105">This class might be used for serialization or as part of the function of a tool that works with in-memory representation of XAML and produces XAML file output.</span></span>  
  
-   <span data-ttu-id="4eb50-106"><xref:System.Xaml.XamlObjectWriter> traite un jeu de nœud XAML et produit un graphique d’objet.</span><span class="sxs-lookup"><span data-stu-id="4eb50-106"><xref:System.Xaml.XamlObjectWriter> processes a XAML node set and produces an object graph.</span></span> <span data-ttu-id="4eb50-107">Cette classe peut être utilisée en tant que partie d’une personnalisation complète ou partielle de l’analyseur XAML d’une technologie.</span><span class="sxs-lookup"><span data-stu-id="4eb50-107">This class might be used as part of a full or partial customization of a technology's XAML parser.</span></span>  
  
 <span data-ttu-id="4eb50-108"><xref:System.Xaml.XamlWriterSettings> est une classe pour les paramètres qui sont utilisés par un <xref:System.Xaml.XamlWriter>; Toutefois, par défaut, le <xref:System.Xaml.XamlWriterSettings> classe ne contient pas tous les paramètres spécifiques.</span><span class="sxs-lookup"><span data-stu-id="4eb50-108"><xref:System.Xaml.XamlWriterSettings> is a class for settings that are used by a <xref:System.Xaml.XamlWriter>; however, by default, the <xref:System.Xaml.XamlWriterSettings> class does not hold any specific settings.</span></span> <span data-ttu-id="4eb50-109">Le <xref:System.Xaml.XamlWriter> constructeur de base n’utilise pas cette classe de paramètres en tant qu’argument, ni aucun autre <xref:System.Xaml.XamlWriter> membre.</span><span class="sxs-lookup"><span data-stu-id="4eb50-109">The <xref:System.Xaml.XamlWriter> base constructor does not use this settings class as an argument, nor does any other <xref:System.Xaml.XamlWriter> member.</span></span> <span data-ttu-id="4eb50-110">Au lieu de cela, le <xref:System.Xaml.XamlXmlWriter> et <xref:System.Xaml.XamlObjectWriter> classes incluent leurs propres classes de paramètres en tant qu’arguments de construction.</span><span class="sxs-lookup"><span data-stu-id="4eb50-110">Instead, the <xref:System.Xaml.XamlXmlWriter> and <xref:System.Xaml.XamlObjectWriter> classes include their own settings classes as construction arguments.</span></span> <span data-ttu-id="4eb50-111">Ces classes de paramètres sont <xref:System.Xaml.XamlXmlWriterSettings> et <xref:System.Xaml.XamlObjectWriterSettings>.</span><span class="sxs-lookup"><span data-stu-id="4eb50-111">These settings classes are <xref:System.Xaml.XamlXmlWriterSettings> and <xref:System.Xaml.XamlObjectWriterSettings>.</span></span> <span data-ttu-id="4eb50-112">Les classes de paramètres définissent les valeurs de paramètres réels et sont basées sur <xref:System.Xaml.XamlWriterSettings>, afin qu’ils puissent utiliser le <xref:System.Xaml.XamlWriterSettings> fonctionnalité de fusion.</span><span class="sxs-lookup"><span data-stu-id="4eb50-112">The settings classes define actual settings values and are based on <xref:System.Xaml.XamlWriterSettings>, so that they can use the <xref:System.Xaml.XamlWriterSettings> merge feature.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4eb50-113">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlWriter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="xamlWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4eb50-114">Ferme l'objet writer XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-114">Closes the XAML writer object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eb50-115">Dans l’implémentation de base, l’appel <xref:System.Xaml.XamlWriter.Close%2A> appelle le <xref:System.Xaml.XamlWriter.Dispose%2A> méthode avec le `isDisposing` paramètre en tant que `true`.</span><span class="sxs-lookup"><span data-stu-id="4eb50-115">In the base implementation, calling <xref:System.Xaml.XamlWriter.Close%2A> calls the <xref:System.Xaml.XamlWriter.Dispose%2A> method with the `isDisposing` parameter as `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xamlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="4eb50-116">
            <see langword="true" /> pour libérer les ressources managées ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-116">
              <see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4eb50-117">Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlWriter" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-117">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eb50-118">Vous devez appeler la classe de base pour obtenir <xref:System.Xaml.XamlWriter.IsDisposed%2A>  =  `true`.</span><span class="sxs-lookup"><span data-stu-id="4eb50-118">You must call the base class to get <xref:System.Xaml.XamlWriter.IsDisposed%2A> = `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlWriter.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Xaml.XamlWriter.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4eb50-119">Obtient une valeur indiquant si <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> a été appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-119">Gets whether <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> has been called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4eb50-120">
            <see langword="true" /> si <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> a été appelé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-120">
              <see langword="true" /> if <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> has been called; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4eb50-121">En cas d'implémentation dans une classe dérivée, obtient le contexte de schéma XAML actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-121">When implemented in a derived class, gets the active XAML schema context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4eb50-122">Contexte de schéma XAML actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-122">The active XAML schema context.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4eb50-123">Consultez <see cref="M:System.IDisposable.Dispose" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-123">See <see cref="M:System.IDisposable.Dispose" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public abstract void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndMember();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndMember : unit -&gt; unit" Usage="xamlWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4eb50-124">En cas d'implémentation dans une classe dérivée, produit la représentation d'un nœud membre de fin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-124">When implemented in a derived class, produces the representation of an end member node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public abstract void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndObject();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndObject : unit -&gt; unit" Usage="xamlWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4eb50-125">En cas d'implémentation dans une classe dérivée, produit la représentation d'un nœud objet de fin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-125">When implemented in a derived class, produces the representation of an end object node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public abstract void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteGetObject();" />
      <MemberSignature Language="F#" Value="abstract member WriteGetObject : unit -&gt; unit" Usage="xamlWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4eb50-126">En cas d'implémentation dans une classe dérivée, produit un objet dans les cas où l'objet est une valeur par défaut ou une valeur implicite de la propriété qui est définie, plutôt que de le spécifier en tant que valeur d'objet discrète dans le jeu de nœuds XAML d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-126">When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public abstract void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="abstract member WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">
          <span data-ttu-id="4eb50-127">Déclaration d'espace de noms à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-127">The namespace declaration to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4eb50-128">En cas d'implémentation dans une classe dérivée, écrit un nœud de déclaration d'espace de noms XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-128">When implemented in a derived class, writes a XAML namespace declaration node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public void WriteNode (System.Xaml.XamlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNode(class System.Xaml.XamlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNode (reader As XamlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNode(System::Xaml::XamlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteNode : System.Xaml.XamlReader -&gt; unit" Usage="xamlWriter.WriteNode reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="4eb50-129">Lecteur à utiliser pour la détermination de nœud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-129">The reader to use for node determination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4eb50-130">Exécute la commutation selon le type de nœud du lecteur XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) et appelle la méthode <see langword="Write" /> concernée pour l'implémentation du writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-130">Performs switching based on node type from the XAML reader (<see cref="P:System.Xaml.XamlReader.NodeType" />) and calls the relevant <see langword="Write" /> method for the writer implementation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="notes-for-inheritors"></a><span data-ttu-id="4eb50-131">Notes de publication pour les héritiers</span><span class="sxs-lookup"><span data-stu-id="4eb50-131">Notes for Inheritors</span></span>  
 <span data-ttu-id="4eb50-132">Le <xref:System.Xaml.XamlWriter.WriteNode%2A> méthode n’est pas une méthode virtuelle, car il possède une implémentation pratique pour toutes les existantes <xref:System.Xaml.XamlNodeType> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4eb50-132">The <xref:System.Xaml.XamlWriter.WriteNode%2A> method is not a virtual method because it has practical implementation for all existing <xref:System.Xaml.XamlNodeType> values.</span></span> <span data-ttu-id="4eb50-133">Selon <xref:System.Xaml.XamlNodeType>, <xref:System.Xaml.XamlWriter.WriteNode%2A> appelle le `Write` membres virtuels qui sont dédiés aux types de nœud particulier.</span><span class="sxs-lookup"><span data-stu-id="4eb50-133">Based on <xref:System.Xaml.XamlNodeType>, <xref:System.Xaml.XamlWriter.WriteNode%2A> calls into the `Write` virtual members that are dedicated to particular node types.</span></span>  
  
 <span data-ttu-id="4eb50-134">Si vous avez un scénario d’écriture de XAML avancé qui développe le système de type XAML et le concept de flux de nœud XAML afin que les nouveaux types de nœuds sont définis, n’utilisez pas <xref:System.Xaml.XamlWriter.WriteNode%2A> appelle dans votre logique.</span><span class="sxs-lookup"><span data-stu-id="4eb50-134">If you have an advanced XAML writing scenario that expands the XAML type system and XAML node stream concept so that new node types are defined, do not use <xref:System.Xaml.XamlWriter.WriteNode%2A> calls in your logic.</span></span> <span data-ttu-id="4eb50-135">Vous devez fournir à la place de votre propre alternative pour la logique de basculement du type de nœud de la classe ou dans les substitutions virtuelles.</span><span class="sxs-lookup"><span data-stu-id="4eb50-135">You must instead provide your own alternative for node-type switching logic in the class or in virtual overrides.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4eb50-136">
            <paramref name="reader" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-136">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="4eb50-137">L'implémentation par défaut a rencontré un <see cref="T:System.Xaml.XamlNodeType" /> qui n'est pas dans l'énumération par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-137">The default implementation encountered a <see cref="T:System.Xaml.XamlNodeType" /> that is not in the default enumeration.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public abstract void WriteStartMember (System.Xaml.XamlMember xamlMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartMember(class System.Xaml.XamlMember xamlMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartMember(System::Xaml::XamlMember ^ xamlMember);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlWriter.WriteStartMember xamlMember" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember">
          <span data-ttu-id="4eb50-138">Nœud membre à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-138">The member node to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4eb50-139">En cas d'implémentation dans une classe dérivée, écrit la représentation d'un nœud membre de début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-139">When implemented in a derived class, writes the representation of a start member node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public abstract void WriteStartObject (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartObject(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartObject (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartObject(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlWriter.WriteStartObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4eb50-140">Type XAML de l'objet à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-140">The XAML type of the object to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4eb50-141">En cas d'implémentation dans une classe dérivée, écrit la représentation d'un nœud objet de début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-141">When implemented in a derived class, writes the representation of a start object node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public abstract void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : obj -&gt; unit" Usage="xamlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4eb50-142">Valeur à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-142">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4eb50-143">En cas d'implémentation dans une classe dérivée, écrit un nœud valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4eb50-143">When implemented in a derived class, writes a value node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>