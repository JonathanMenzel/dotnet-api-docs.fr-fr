<Type Name="XamlXmlReader" FullName="System.Xaml.XamlXmlReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4e60953e764d55a14d5663dd6b80164e0b22949" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51920913" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlXmlReader : System.Xaml.XamlReader, System.Xaml.IXamlLineInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlXmlReader extends System.Xaml.XamlReader implements class System.Xaml.IXamlLineInfo" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlXmlReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlXmlReader&#xA;Inherits XamlReader&#xA;Implements IXamlLineInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlXmlReader : System::Xaml::XamlReader, System::Xaml::IXamlLineInfo" />
  <TypeSignature Language="F#" Value="type XamlXmlReader = class&#xA;    inherit XamlReader&#xA;    interface IXamlLineInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Traite le balisage XAML des fichiers XML par le biais d'un intermédiaire de <see cref="T:System.Xml.XmlReader" /> et produit un flux de données de nœud XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous construisez un <xref:System.Xaml.XamlXmlReader>, un <xref:System.Xml.XmlReader> est requis. L’objectif de cette conception consiste à utiliser les API .NET Framework établies pour le traitement XML afin de gérer l’entrée de flux de données, pour obtenir un flux à partir d’un fichier et ainsi de suite.  
  
 <xref:System.Xml.XmlReader> est le premier composant du chemin d’accès de charge standard pour les opérations de XAML et est incorporé par <xref:System.Xaml.XamlServices.Load%2A?displayProperty=nameWithType> ainsi que par plusieurs implémentations XAML d’infrastructure existantes pour le chargement XAML.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlReaderSettings" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">Présentation des flux de nœud XAML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.Stream -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Flux initial à charger dans le lecteur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> basée sur un flux.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::TextReader ^ textReader);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.TextReader -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader textReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader">
          <see cref="T:System.IO.TextReader" /> à utiliser pour l'initialisation.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> basée sur un <see cref="T:System.IO.TextReader" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textReader" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : string -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nom du fichier XML à charger.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction du nom d'un fichier à charger dans un lecteur XML par défaut.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.Xml.XmlReader -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader xmlReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <see cref="T:System.Xml.XmlReader" /> à utiliser comme processeur XML intermédiaire.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> à l'aide du <see cref="T:System.Xml.XmlReader" /> fourni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’initialisation avec ce constructeur définit également un contexte de schéma XAML par défaut et les paramètres de lecteur par défaut.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlReader" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.Stream * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (stream, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="stream">Flux initial à charger dans le lecteur.</param>
        <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction d'un flux de données, à l'aide d'un contexte de schéma XAML fourni.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.Stream stream, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::Stream ^ stream, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.Stream * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (stream, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="stream">Flux initial à charger dans le lecteur.</param>
        <param name="settings">Paramètres de lecteur spécifiques.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> basée sur un flux de données, avec des paramètres spécifiques au langage XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’initialisation avec ce constructeur tente de fusionner certains des paramètres à partir du lecteur par défaut avec les paramètres spécifiques de XAML dans `settings`. Pour plus d'informations, consultez <xref:System.Xaml.XamlXmlReaderSettings>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.TextReader textReader, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader textReader, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::TextReader ^ textReader, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.TextReader * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (textReader, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="textReader">
          <see cref="T:System.IO.TextReader" /> à utiliser pour l'initialisation.</param>
        <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> basée sur un<see cref="T:System.IO.TextReader" /> avec un contexte de schéma fourni et des paramètres spécifiques au langage XAML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textReader" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.TextReader textReader, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader textReader, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::TextReader ^ textReader, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.TextReader * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (textReader, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="textReader">
          <see cref="T:System.IO.TextReader" /> à utiliser pour l'initialisation.</param>
        <param name="settings">Paramètres de lecteur spécifiques.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> en fonction d'un <see cref="T:System.IO.TextReader" />, à l'aide des paramètres spécifiques au langage XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’initialisation avec ce constructeur tente de fusionner certains des paramètres à partir du lecteur par défaut avec les paramètres spécifiques de XAML dans `settings`. Pour plus d'informations, consultez <xref:System.Xaml.XamlXmlReaderSettings>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textReader" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (string fileName, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::String ^ fileName, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : string * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (fileName, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="fileName">Nom du fichier à charger.</param>
        <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction du nom d'un fichier à charger dans un lecteur XML par défaut, avec un contexte de schéma XAML fourni.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (string fileName, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, settings As XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::String ^ fileName, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : string * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (fileName, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="fileName">Nom du fichier XML à charger.</param>
        <param name="settings">Paramètres de lecteur spécifiques.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction du nom d'un fichier à charger dans un lecteur XML par défaut, à l'aide des paramètres de lecteur spécifiques au langage XAML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.Xml.XmlReader xmlReader, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::Xml::XmlReader ^ xmlReader, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.Xml.XmlReader * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (xmlReader, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <see cref="T:System.Xml.XmlReader" /> à utiliser comme processeur XML intermédiaire.</param>
        <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> en utilisant le <see cref="T:System.Xml.XmlReader" /> et le contexte de schéma fournis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’initialisation avec ce constructeur définit également par défaut des paramètres de lecteur.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.Xml.XmlReader xmlReader, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::Xml::XmlReader ^ xmlReader, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.Xml.XmlReader * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (xmlReader, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <see cref="T:System.Xml.XmlReader" /> à utiliser comme processeur XML intermédiaire.</param>
        <param name="settings">Paramètres de lecteur XAML spécifiques.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> à l'aide du <see cref="T:System.Xml.XmlReader" /> et des paramètres de lecteur fournis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’initialisation avec ce constructeur tente de fusionner certains des paramètres à partir de la liste fournie `xmlReader` ainsi que les paramètres spécifiques de XAML dans `settings`. L’initialisation avec ce constructeur définit également par défaut des paramètres de lecteur. Pour plus d'informations, consultez <xref:System.Xaml.XamlXmlReaderSettings>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.Stream * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (stream, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="stream">Flux initial à charger dans le lecteur.</param>
        <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
        <param name="settings">Paramètres de lecteur spécifiques.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction d'un flux de données, avec un contexte de schéma XAML fourni et des paramètres spécifiques au langage XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’initialisation avec ce constructeur tente de fusionner certains des paramètres à partir du lecteur par défaut avec les paramètres spécifiques de XAML dans `settings`. Pour plus d'informations, consultez <xref:System.Xaml.XamlXmlReaderSettings>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.TextReader textReader, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader textReader, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::TextReader ^ textReader, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.TextReader * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (textReader, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="textReader">
          <see cref="T:System.IO.TextReader" /> à utiliser pour l'initialisation.</param>
        <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
        <param name="settings">Paramètres de lecteur spécifiques.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> en fonction d'un<see cref="T:System.IO.TextReader" /> à l'aide du contexte de schéma fourni et des paramètres spécifiques au langage XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’initialisation avec ce constructeur tente de fusionner certains des paramètres à partir du lecteur par défaut avec les paramètres spécifiques de XAML dans `settings`. Pour plus d'informations, consultez <xref:System.Xaml.XamlXmlReaderSettings>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textReader" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (string fileName, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, schemaContext As XamlSchemaContext, settings As XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::String ^ fileName, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : string * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (fileName, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="fileName">Nom du fichier XML à charger.</param>
        <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
        <param name="settings">Paramètres de lecteur spécifiques.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction du nom d'un fichier à charger dans un lecteur XML par défaut, à l'aide du contexte de schéma XAML fourni et des paramètres de lecteur spécifiques au langage XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’initialisation avec ce constructeur tente de fusionner certains des paramètres à partir du lecteur par défaut avec les paramètres spécifiques de XAML dans `settings`. Pour plus d'informations, consultez <xref:System.Xaml.XamlXmlReaderSettings>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.Xml.XmlReader xmlReader, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::Xml::XmlReader ^ xmlReader, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.Xml.XmlReader * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (xmlReader, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <see cref="T:System.Xml.XmlReader" /> à utiliser comme processeur XML intermédiaire.</param>
        <param name="schemaContext">Contexte du schéma XAML pour le traitement XAML.</param>
        <param name="settings">Paramètres de lecteur XAML spécifiques.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> à l'aide du <see cref="T:System.Xml.XmlReader" />, du contexte de schéma et des paramètres de lecteur fournis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’initialisation avec ce constructeur tente de fusionner certains des paramètres à partir de la liste fournie `xmlReader` ainsi que les paramètres spécifiques de XAML dans `settings`. Pour plus d'informations, consultez <xref:System.Xaml.XamlXmlReaderSettings>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLineInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasLineInfo : bool" Usage="System.Xaml.XamlXmlReader.HasLineInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui spécifie si des informations de ligne sont disponibles.</summary>
        <value>
          <see langword="true" /> si des informations de ligne sont disponibles ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété fait partie de la <xref:System.Xaml.IXamlLineInfo> implémentation. Le résultat est partiellement basé sur les paramètres du lecteur qui a été utilisés pour initialiser cet <xref:System.Xaml.XamlXmlReader>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public override bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEof { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEof : bool" Usage="System.Xaml.XamlXmlReader.IsEof" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui signale si la position du lecteur dans le flux de nœud XAML est à la fin du fichier.</summary>
        <value>
          <see langword="true" /> si la position est à la fin conceptuelle du fichier du flux de nœud XAML ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous utilisez actuellement un lecteur de sous-arborescence, ce lecteur signale <xref:System.Xaml.XamlXmlReader.IsEof%2A> après avoir quitté les limites de la sous-arborescence. Pour plus d'informations, consultez <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Xaml.XamlXmlReader.LineNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le numéro de ligne à signaler.</summary>
        <value>Numéro de ligne à signaler.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété fait partie de la <xref:System.Xaml.IXamlLineInfo> implémentation. Types de nœud de <xref:System.Xaml.XamlNodeType.StartObject>, <xref:System.Xaml.XamlNodeType.StartMember>, <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>, ou <xref:System.Xaml.XamlNodeType.Value> peut retourner un numéro de ligne. Autres types de nœuds retournent une valeur égale à 0. Tous les types de nœuds retournent 0 si <xref:System.Xaml.XamlXmlReader.HasLineInfo%2A> est `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Xaml.XamlXmlReader.LinePosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la position de ligne à signaler.</summary>
        <value>Position de ligne à signaler.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété fait partie de la <xref:System.Xaml.IXamlLineInfo> implémentation. Types de nœud de <xref:System.Xaml.XamlNodeType.StartObject>, <xref:System.Xaml.XamlNodeType.StartMember>, <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>, ou <xref:System.Xaml.XamlNodeType.Value> peuvent retourner une position de ligne. Autres types de nœuds retournent une valeur égale à 0. Tous les types de nœuds retournent 0 si <xref:System.Xaml.XamlXmlReader.HasLineInfo%2A> est `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Xaml.XamlMember" Usage="System.Xaml.XamlXmlReader.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le membre actuel à la position du lecteur, si la position actuelle du lecteur est sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
        <value>Membre actuel ou <see langword="null" /> si la position actuelle du lecteur n'est pas sur un membre.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">Présentation des flux de nœud XAML</related>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Xaml.NamespaceDeclaration" Usage="System.Xaml.XamlXmlReader.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'espace de noms XAML du nœud actuel.</summary>
        <value>Espace de noms XAML du nœud actuel, s'il est disponible ; sinon <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété a uniquement un résultat non null si le <xref:System.Xaml.XamlXmlReader.NodeType%2A> de la position actuelle est <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>. Cette propriété ne signale pas l’espace de noms XAML qui s’applique aux objets ou membres dans un sens général d’étendue. Votre implémentation doit mettre en cache informations d’espace de noms XAML si vous en avez besoin pour des opérations spécifiques. Pour les opérations par défaut qui impliquent le contexte de schéma XAML chargé, le XAML responsable espace de noms en interne met en cache les implémentations de writer XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xaml.XamlNodeType" Usage="System.Xaml.XamlXmlReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type du nœud actuel.</summary>
        <value>Valeur de l'énumération <see cref="T:System.Xaml.XamlNodeType" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xamlXmlReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit le nœud XAML suivant de la source chargée, si un nœud XAML est disponible.</summary>
        <returns>
          <see langword="true" /> si un nœud est disponible ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nœud où <xref:System.Xaml.XamlXmlReader.Read%2A> retourne `false` retourne également `true` pour <xref:System.Xaml.XamlXmlReader.IsEof%2A>.  
  
 Appel <xref:System.Xaml.XamlXmlReader.Read%2A> a généralement pour effet secondaire d’avancer le <xref:System.Xaml.XamlXmlReader.LineNumber%2A> ou <xref:System.Xaml.XamlXmlReader.LinePosition%2A>.  
  
 L’opération suivante après l’appel <xref:System.Xaml.XamlXmlReader.Read%2A> et obtenir un `true` résultat consiste généralement à vérifier <xref:System.Xaml.XamlXmlReader.NodeType%2A>. Pour plus d’informations sur les concepts de flux de nœud XAML, consultez [Understanding XAML Node Stream Structures et des Concepts](~/docs/framework/xaml-services/understanding-xaml-node-stream-structures-and-concepts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlXmlReader.NodeType" />
        <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">Fonctionnement des concepts et structures du flux de nœud XAML</related>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlXmlReader.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui fournit les informations de schéma pour le jeu d'informations.</summary>
        <value>Objet qui fournit les informations de schéma pour le jeu d'informations.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette valeur est le contexte de schéma XAML par défaut ou un contexte de schéma XAML spécifiquement dérivé qui est fourni en tant qu’informations de constructeur. Contexte de schéma affecte de nombreux aspects du comportement de traitement XAML. En particulier, le <xref:System.Xaml.XamlXmlReader.SchemaContext%2A> du lecteur est généralement utilisé par tout writer associé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlXmlReader.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Xaml.XamlType" /> du nœud actuel.</summary>
        <value>
          <see cref="T:System.Xaml.XamlType" /> du nœud actuel, ou <see langword="null" /> si la position n'est pas sur un objet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété a uniquement un résultat non null si le <xref:System.Xaml.XamlXmlReader.NodeType%2A> de la position actuelle est <xref:System.Xaml.XamlNodeType.StartObject>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">Présentation des flux de nœud XAML</related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.XamlXmlReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur du nœud actuel.</summary>
        <value>Valeur du nœud actuel ou <see langword="null" /> si la position n'est pas sur un type de nœud <see cref="F:System.Xaml.XamlNodeType.Value" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">Présentation des flux de nœud XAML</related>
      </Docs>
    </Member>
  </Members>
</Type>