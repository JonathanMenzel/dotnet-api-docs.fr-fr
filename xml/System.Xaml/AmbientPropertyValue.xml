<Type Name="AmbientPropertyValue" FullName="System.Xaml.AmbientPropertyValue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df7012b4ea55422811e1b4ba7b2619bb31b02d81" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AmbientPropertyValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmbientPropertyValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AmbientPropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public Class AmbientPropertyValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientPropertyValue" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="17ba5-101">Signale les informations relatives à une propriété ambiante, dans le cadre d'une implémentation de <see cref="T:System.Xaml.IAmbientProvider" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="17ba5-101">Reports information about an ambient property, as part of an <see cref="T:System.Xaml.IAmbientProvider" /> implementation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ba5-102"><xref:System.Xaml.AmbientPropertyValue> représente un élément d’information qui est retourné en appelant un <xref:System.Xaml.IAmbientProvider> méthode du service.</span><span class="sxs-lookup"><span data-stu-id="17ba5-102"><xref:System.Xaml.AmbientPropertyValue> represents an information item that is returned by calling an <xref:System.Xaml.IAmbientProvider> service method.</span></span> <span data-ttu-id="17ba5-103">Le `GetAll` méthodes retournent les énumérations ou tableaux de <xref:System.Xaml.AmbientPropertyValue> éléments ; le `GetFirst` méthodes retournent un seul <xref:System.Xaml.AmbientPropertyValue>.</span><span class="sxs-lookup"><span data-stu-id="17ba5-103">The `GetAll` methods return enumerations or arrays of <xref:System.Xaml.AmbientPropertyValue> items; the `GetFirst` methods return a single <xref:System.Xaml.AmbientPropertyValue>.</span></span>  
  
## <a name="about-ambient-properties"></a><span data-ttu-id="17ba5-104">Sur les propriétés ambiantes</span><span class="sxs-lookup"><span data-stu-id="17ba5-104">About Ambient Properties</span></span>  
 <span data-ttu-id="17ba5-105">Une propriété ambiante est une propriété dont la valeur de propriété doit être disponible pour l’utilisation du convertisseur de valeurs dans la structure de nœud XAML et au graphique d’objet qu’il contient.</span><span class="sxs-lookup"><span data-stu-id="17ba5-105">An ambient property is a property whose property value should be available to value converter usage in the XAML node structure and to the object graph underneath it.</span></span> <span data-ttu-id="17ba5-106">Le concept d’ambiant ne s’applique à un processeur XAML pendant la phase de l’écriture d’objet du chemin de chargement ou de la phase de sérialisation d’une entité chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="17ba5-106">The ambient concept  is relevant for a XAML processor during the object-writing phase of the load path or the serialization phase of a save path.</span></span>  
  
 <span data-ttu-id="17ba5-107">Un type peut également être attribué comme ambiant.</span><span class="sxs-lookup"><span data-stu-id="17ba5-107">A type can also be attributed as ambient.</span></span> <span data-ttu-id="17ba5-108">Dans ce cas, toutes les propriétés qui utilisent le type attribué sont signalées comme ambiant.</span><span class="sxs-lookup"><span data-stu-id="17ba5-108">In this case, all properties that use the attributed type are reported as ambient.</span></span>  
  
 <span data-ttu-id="17ba5-109">Dans le cas de chemin d’accès de charge, la valeur de propriété ambiante peut influencer la valeur produite de graphique d’objet d’autres propriétés qui existent en dessous dans une structure de nœud XAML.</span><span class="sxs-lookup"><span data-stu-id="17ba5-109">In the load path case, the ambient property value might influence the object graph produced value of other properties that exist underneath it in a XAML node structure.</span></span> <span data-ttu-id="17ba5-110">Lors du traitement en tant que flux de nœud XAML, le concept ambiant implique que la valeur de propriété ambiante doit être disponible pour les convertisseurs de type et extensions de balisage de `StartObject` à `EndObject`.</span><span class="sxs-lookup"><span data-stu-id="17ba5-110">When processed as a XAML node stream, the ambient concept implies that the ambient property value must be available to type converters and markup extensions from `StartObject` to `EndObject`.</span></span> <span data-ttu-id="17ba5-111">De même, une type convertisseur ou extension de balisage qui est utilisée pour enregistrer le chemin d’accès peut présenter la propriété ambiante et sa valeur.</span><span class="sxs-lookup"><span data-stu-id="17ba5-111">Similarly, a type converter or markup extension that is used for the save path can look up the ambient property and its value.</span></span> <span data-ttu-id="17ba5-112">Par conséquent, le code XAML produit est une meilleure représentation aller-retour.</span><span class="sxs-lookup"><span data-stu-id="17ba5-112">Therefore, the XAML that is produced is a better round-trip representation.</span></span>  
  
 <span data-ttu-id="17ba5-113">Par sa définition de langage XAML ne spécifie pas l’ordre dans lequel les membres d’un objet doivent être traités.</span><span class="sxs-lookup"><span data-stu-id="17ba5-113">By its language definition, XAML does not specify the order in which members of an object must be processed.</span></span> <span data-ttu-id="17ba5-114">Toutefois, toute valeur de propriété ambiante doit être traitée en premier par le lecteur XAML afin que la type markup extension Utilisation du convertisseur et qui sont contenus dans d’autres propriétés peut y accéder via le <xref:System.Xaml.IAmbientProvider> service.</span><span class="sxs-lookup"><span data-stu-id="17ba5-114">However, any ambient property value must be processed first by the XAML reader so that the type converter and markup extension usage that are contained in other properties can access it through the <xref:System.Xaml.IAmbientProvider> service.</span></span>  
  
 <span data-ttu-id="17ba5-115"><xref:System.Xaml.XamlMember.DependsOn%2A> est un concept semblable qui influence également l’ordre de traitement des nœuds XAML.</span><span class="sxs-lookup"><span data-stu-id="17ba5-115"><xref:System.Xaml.XamlMember.DependsOn%2A> is a similar concept that also influences XAML node-processing order.</span></span> <span data-ttu-id="17ba5-116">Toutefois, <xref:System.Xaml.XamlMember.DependsOn%2A> peut uniquement être utilisé pour les relations de membres et le nœud homologue ; il ne peut pas influencer tous les descendants.</span><span class="sxs-lookup"><span data-stu-id="17ba5-116">However, <xref:System.Xaml.XamlMember.DependsOn%2A> can only be used for peer member and node relationships; it cannot influence all descendants.</span></span> <span data-ttu-id="17ba5-117">En outre, <xref:System.Xaml.XamlMember.DependsOn%2A> directement a une incidence sur l’objet paramètre de propriété de graphique, tandis que la technique ambiante s’appuie sur les convertisseurs de type ou les extensions de balisage.</span><span class="sxs-lookup"><span data-stu-id="17ba5-117">Also, <xref:System.Xaml.XamlMember.DependsOn%2A> directly influences object graph property setting, whereas the ambient technique relies on type converters or markup extensions.</span></span> <span data-ttu-id="17ba5-118">Dans la technique ambiante, il doit également être un convertisseur de type spécifique ou une définition d’extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="17ba5-118">In the ambient technique, there must also be a specific type converter or markup extension definition.</span></span> <span data-ttu-id="17ba5-119">C’est à chaque convertisseur de type ou d’une extension de balisage pour déterminer la façon dont la valeur de propriété ambiante doit être interprétée et appliquée à l’emplacement de graphique d’objet où le convertisseur de type ou l’extension de balisage est utilisée.</span><span class="sxs-lookup"><span data-stu-id="17ba5-119">It is up to each type converter or markup extension to determine how the ambient property value should be interpreted and applied to the object graph location where the type converter or markup extension is used.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="17ba5-120">Remarques sur l'utilisation de WPF</span><span class="sxs-lookup"><span data-stu-id="17ba5-120">WPF Usage Notes</span></span>  
 <span data-ttu-id="17ba5-121">Un scénario de propriété ambiante est illustré dans le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] jeu de fonctionnalités est <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, qui peut qualifier les recherches de nom de propriété pour les autres valeurs.</span><span class="sxs-lookup"><span data-stu-id="17ba5-121">An ambient property scenario that is illustrated in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] feature set is <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, which can qualify the necessary property name lookups for other values.</span></span> <span data-ttu-id="17ba5-122">Dans ce cas, le <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valeur qualifie le <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> valeurs dans les nœuds XAML sous celle-ci.</span><span class="sxs-lookup"><span data-stu-id="17ba5-122">In this case, the <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value qualifies the <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values in the XAML nodes underneath it.</span></span> <span data-ttu-id="17ba5-123"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> utilise le comportement de convertisseur de type pour un <xref:System.Windows.DependencyProperty>.</span><span class="sxs-lookup"><span data-stu-id="17ba5-123"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> uses the type converter behavior for a <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="17ba5-124">Ce comportement accède à ambiant <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valeur en interrogeant <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> à partir d’un contexte de service qui est disponible pour les convertisseurs de type et extensions de balisage.</span><span class="sxs-lookup"><span data-stu-id="17ba5-124">This behavior accesses the ambient <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value by querying <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> from a service context that is available to type converters and markup extensions.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientPropertyValue (System.Xaml.XamlMember property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As XamlMember, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientPropertyValue(System::Xaml::XamlMember ^ property, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="17ba5-125">Identificateur qui représente la propriété ambiante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ba5-125">The identifier that represents the ambient property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="17ba5-126">Valeur à signaler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ba5-126">The value to report.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ba5-127">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.AmbientPropertyValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ba5-127">Initializes a new instance of the <see cref="T:System.Xaml.AmbientPropertyValue" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember RetrievedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember RetrievedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RetrievedProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ RetrievedProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17ba5-128">Obtient l'identificateur du système de type XAML (<see cref="T:System.Xaml.XamlMember" />) qui représente la propriété ambiante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ba5-128">Gets the XAML type system identifier (<see cref="T:System.Xaml.XamlMember" />) that represents the ambient property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17ba5-129">Identificateur qui représente la propriété ambiante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ba5-129">The identifier that represents the ambient property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17ba5-130">Obtient la valeur de la propriété ambiante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ba5-130">Gets the value of the ambient property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17ba5-131">Valeur de la propriété ambiante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ba5-131">The value of the ambient property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>