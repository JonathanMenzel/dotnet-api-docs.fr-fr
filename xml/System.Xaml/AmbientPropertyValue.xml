<Type Name="AmbientPropertyValue" FullName="System.Xaml.AmbientPropertyValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a44eb2004abcae643ccb9cf6df0b05aa26fb2db" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39985648" /></Metadata><TypeSignature Language="C#" Value="public class AmbientPropertyValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmbientPropertyValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AmbientPropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public Class AmbientPropertyValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientPropertyValue" />
  <TypeSignature Language="F#" Value="type AmbientPropertyValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Signale les informations relatives à une propriété ambiante, dans le cadre d'une implémentation de <see cref="T:System.Xaml.IAmbientProvider" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.AmbientPropertyValue> représente un élément d’information qui est retourné en appelant un <xref:System.Xaml.IAmbientProvider> méthode de service. Le `GetAll` méthodes retournent des énumérations ou des tableaux de <xref:System.Xaml.AmbientPropertyValue> éléments ; le `GetFirst` méthodes retournent un seul <xref:System.Xaml.AmbientPropertyValue>.  
  
## <a name="about-ambient-properties"></a>À propos des propriétés ambiantes  
 Une propriété ambiante est une propriété dont la valeur propriété doit être disponible à l’utilisation de convertisseur de valeur dans la structure de nœud XAML et au graphique d’objet situé en dessous. Le concept ambiant est pertinent pour un processeur XAML pendant la phase d’écriture d’objet du chemin d’accès de charge ou la phase de sérialisation d’une entité chemin d’accès.  
  
 Un type peut également être attribué comme ambiant. Dans ce cas, toutes les propriétés qui utilisent le type avec attributs sont signalées comme ambiant.  
  
 Dans le cas de chemin d’accès de charge, la valeur de propriété ambiante peut influencer la valeur produite de graphique d’objet d’autres propriétés qui existent en dessous dans une structure de nœud XAML. Lors du traitement comme un flux de nœud XAML, le concept ambiant implique que la valeur de propriété ambiante doit être disponible pour les convertisseurs de type et extensions de balisage de `StartObject` à `EndObject`. De même, une type convertisseur ou extension de balisage qui est utilisée pour l’enregistrement chemin d’accès peut rechercher la propriété ambiante et sa valeur. Par conséquent, le XAML est produit est une meilleure représentation aller-retour.  
  
 Par sa définition de langage XAML ne spécifie pas l’ordre dans lequel les membres d’un objet doivent être traités. Toutefois, n’importe quelle valeur de propriété ambiante doit être traitée en premier par le lecteur XAML afin que la type markup extension Utilisation du convertisseur et qui sont contenus dans d’autres propriétés peut y accéder via le <xref:System.Xaml.IAmbientProvider> service.  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> est un concept semblable qui influence également l’ordre de traitement des nœuds XAML. Toutefois, <xref:System.Xaml.XamlMember.DependsOn%2A> peut être utilisé uniquement pour les relations de membre et le nœud homologue ; il ne peut pas influencer tous les descendants. En outre, <xref:System.Xaml.XamlMember.DependsOn%2A> influence directement objet graphique de paramètre de propriété, alors que la technique ambiante s’appuie sur les convertisseurs de type ou les extensions de balisage. Dans la technique ambiante, il doit également être un convertisseur de type spécifique ou une définition d’extension de balisage. C’est à chaque convertisseur de type ou d’une extension de balisage pour déterminer comment la valeur de propriété ambiante doit être interprétée et appliquée à l’emplacement de graphique d’objet dans lequel le convertisseur de type ou l’extension de balisage est utilisée.  
  
## <a name="wpf-usage-notes"></a>Remarques sur l'utilisation de WPF  
 Un scénario de propriété ambiante qui est illustré dans le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] ensemble de fonctionnalités est <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, qui peut qualifier les recherches de nom de propriété pour les autres valeurs. Dans ce cas, le <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valeur qualifie le <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> valeurs dans les nœuds XAML sous celle-ci. <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> utilise le comportement de convertisseur de type pour un <xref:System.Windows.DependencyProperty>. Ce comportement accède à l’ambiante <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valeur en interrogeant <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> à partir d’un contexte de service qui est disponible pour les convertisseurs de type et extensions de balisage.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientPropertyValue (System.Xaml.XamlMember property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As XamlMember, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientPropertyValue(System::Xaml::XamlMember ^ property, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xaml.AmbientPropertyValue : System.Xaml.XamlMember * obj -&gt; System.Xaml.AmbientPropertyValue" Usage="new System.Xaml.AmbientPropertyValue (property, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">Identificateur qui représente la propriété ambiante.</param>
        <param name="value">Valeur à signaler.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.AmbientPropertyValue" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember RetrievedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember RetrievedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RetrievedProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ RetrievedProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RetrievedProperty : System.Xaml.XamlMember" Usage="System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'identificateur du système de type XAML (<see cref="T:System.Xaml.XamlMember" />) qui représente la propriété ambiante.</summary>
        <value>Identificateur qui représente la propriété ambiante.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.AmbientPropertyValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur de la propriété ambiante.</summary>
        <value>Valeur de la propriété ambiante.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>