<Type Name="AmbientPropertyValue" FullName="System.Xaml.AmbientPropertyValue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="401f19a4048fa6995215ff6cbf1c1973cf5eafc8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444961" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AmbientPropertyValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmbientPropertyValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AmbientPropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public Class AmbientPropertyValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientPropertyValue" />
  <TypeSignature Language="F#" Value="type AmbientPropertyValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Signale les informations relatives à une propriété ambiante, dans le cadre d'une implémentation de <see cref="T:System.Xaml.IAmbientProvider" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.AmbientPropertyValue> représente un élément d’information qui est retourné en appelant un <xref:System.Xaml.IAmbientProvider> méthode du service. Le `GetAll` méthodes retournent les énumérations ou tableaux de <xref:System.Xaml.AmbientPropertyValue> éléments ; le `GetFirst` méthodes retournent un seul <xref:System.Xaml.AmbientPropertyValue>.  
  
## <a name="about-ambient-properties"></a>Sur les propriétés ambiantes  
 Une propriété ambiante est une propriété dont la valeur de propriété doit être disponible pour l’utilisation du convertisseur de valeurs dans la structure de nœud XAML et au graphique d’objet qu’il contient. Le concept d’ambiant ne s’applique à un processeur XAML pendant la phase de l’écriture d’objet du chemin de chargement ou de la phase de sérialisation d’une entité chemin d’accès.  
  
 Un type peut également être attribué comme ambiant. Dans ce cas, toutes les propriétés qui utilisent le type attribué sont signalées comme ambiant.  
  
 Dans le cas de chemin d’accès de charge, la valeur de propriété ambiante peut influencer la valeur produite de graphique d’objet d’autres propriétés qui existent en dessous dans une structure de nœud XAML. Lors du traitement en tant que flux de nœud XAML, le concept ambiant implique que la valeur de propriété ambiante doit être disponible pour les convertisseurs de type et extensions de balisage de `StartObject` à `EndObject`. De même, une type convertisseur ou extension de balisage qui est utilisée pour enregistrer le chemin d’accès peut présenter la propriété ambiante et sa valeur. Par conséquent, le code XAML produit est une meilleure représentation aller-retour.  
  
 Par sa définition de langage XAML ne spécifie pas l’ordre dans lequel les membres d’un objet doivent être traités. Toutefois, toute valeur de propriété ambiante doit être traitée en premier par le lecteur XAML afin que la type markup extension Utilisation du convertisseur et qui sont contenus dans d’autres propriétés peut y accéder via le <xref:System.Xaml.IAmbientProvider> service.  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> est un concept semblable qui influence également l’ordre de traitement des nœuds XAML. Toutefois, <xref:System.Xaml.XamlMember.DependsOn%2A> peut uniquement être utilisé pour les relations de membres et le nœud homologue ; il ne peut pas influencer tous les descendants. En outre, <xref:System.Xaml.XamlMember.DependsOn%2A> directement a une incidence sur l’objet paramètre de propriété de graphique, tandis que la technique ambiante s’appuie sur les convertisseurs de type ou les extensions de balisage. Dans la technique ambiante, il doit également être un convertisseur de type spécifique ou une définition d’extension de balisage. C’est à chaque convertisseur de type ou d’une extension de balisage pour déterminer la façon dont la valeur de propriété ambiante doit être interprétée et appliquée à l’emplacement de graphique d’objet où le convertisseur de type ou l’extension de balisage est utilisée.  
  
## <a name="wpf-usage-notes"></a>Remarques sur l'utilisation de WPF  
 Un scénario de propriété ambiante est illustré dans le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] jeu de fonctionnalités est <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, qui peut qualifier les recherches de nom de propriété pour les autres valeurs. Dans ce cas, le <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valeur qualifie le <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> valeurs dans les nœuds XAML sous celle-ci. <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> utilise le comportement de convertisseur de type pour un <xref:System.Windows.DependencyProperty>. Ce comportement accède à ambiant <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valeur en interrogeant <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> à partir d’un contexte de service qui est disponible pour les convertisseurs de type et extensions de balisage.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientPropertyValue (System.Xaml.XamlMember property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As XamlMember, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientPropertyValue(System::Xaml::XamlMember ^ property, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xaml.AmbientPropertyValue : System.Xaml.XamlMember * obj -&gt; System.Xaml.AmbientPropertyValue" Usage="new System.Xaml.AmbientPropertyValue (property, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">Identificateur qui représente la propriété ambiante.</param>
        <param name="value">Valeur à signaler.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.AmbientPropertyValue" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember RetrievedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember RetrievedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RetrievedProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ RetrievedProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RetrievedProperty : System.Xaml.XamlMember" Usage="System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'identificateur du système de type XAML (<see cref="T:System.Xaml.XamlMember" />) qui représente la propriété ambiante.</summary>
        <value>Identificateur qui représente la propriété ambiante.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.AmbientPropertyValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur de la propriété ambiante.</summary>
        <value>Valeur de la propriété ambiante.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>