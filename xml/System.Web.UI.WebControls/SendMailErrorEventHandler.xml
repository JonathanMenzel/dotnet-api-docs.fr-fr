<Type Name="SendMailErrorEventHandler" FullName="System.Web.UI.WebControls.SendMailErrorEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db67fe646746e8ddbc98aa2e7ddc2a04dc281e74" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51867386" /></Metadata><TypeSignature Language="C#" Value="public delegate void SendMailErrorEventHandler(object sender, SendMailErrorEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SendMailErrorEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub SendMailErrorEventHandler(sender As Object, e As SendMailErrorEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void SendMailErrorEventHandler(System::Object ^ sender, SendMailErrorEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type SendMailErrorEventHandler = delegate of obj * SendMailErrorEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Source de l'événement.</param>
    <param name="e">Objet <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> qui contient les données d'événement.</param>
    <summary>Représente la méthode qui gère l'événement <see langword="SendMailError" /> des contrôles tels que le contrôle <see cref="T:System.Web.UI.WebControls.ChangePassword" />, le contrôle <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> et le contrôle <see cref="T:System.Web.UI.WebControls.PasswordRecovery" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous créez un délégué <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>, vous identifiez la méthode qui gérera l'événement. Pour associer l’événement avec le Gestionnaire d’événements, ajoutez une instance du délégué à l’événement. Le Gestionnaire d’événements est appelé chaque fois que l’événement se produit, sauf si vous supprimez le délégué de l’événement. Pour plus d’informations sur les délégués de gestionnaire d’événements, consultez [gestion des événements serveur dans les Pages Web Forms ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
 Gérer le `SendMailError` événement permet à votre application Web continuer l’exécution, même si une exception se produit lorsque vous tentez d’envoyer un message électronique. Par exemple, cela est utile si l’exception se produit lorsqu’un utilisateur parcourt un Assistant à plusieurs étapes. Il est préférable d’enregistrer l’erreur, afficher un message d’information à l’utilisateur et autoriser l’utilisateur à terminer l’Assistant au lieu de mettre fin à l’application.  
  
 Si vous ne créez pas de gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> événement, ou si vous créez un gestionnaire d’événements, tout en conservant la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété définie sur `false`, votre application Web cessent de s’exécuter si une erreur se produit lors de l’envoi d’un message électronique, et ASP.NET sera afficher un message d’erreur.  
  
 Le <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> méthode autorise également les classes dérivées à gérer l’événement au lieu du <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>. Cette technique est recommandée pour gérer l’événement dans une classe dérivée de <xref:System.Web.UI.WebControls.ChangePassword> ou <xref:System.Web.UI.WebControls.CreateUserWizard>.  
  
 Pour plus d’informations sur la gestion des événements, consultez [gestion des événements serveur dans les Pages Web Forms ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui utilise un <xref:System.Web.UI.WebControls.ChangePassword> contrôle Web et inclut un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> événement nommé `SendMailError`. L’exemple de code suppose que le site Web ASP.NET a été configuré pour utiliser l’appartenance d’ASP.NET et l’authentification par formulaire, et qu’un utilisateur a été créé dont le nom et mot de passe vous connaissez. Pour plus d’informations, consultez [Comment : implémenter l’authentification par formulaire Simple](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Si la modification de mot de passe réussit, le code tente d’utiliser SMTP pour envoyer un message électronique à l’utilisateur pour confirmer la modification. Cette opération est effectuée le `SendingMail` Gestionnaire d’événements. Pour plus d’informations sur la façon de configurer un serveur SMTP, consultez [NIB : Comment : installer et configurer les serveurs virtuels SMTP dans IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Dans le cadre de cet exemple, il n’est pas nécessaire de configurer un serveur SMTP ; l’exemple est construit pour tester un échec d’envoi d’un message électronique.  
  
 Si un serveur de messagerie n’est pas configuré correctement ou une autre erreur se produit et le message électronique ne peut pas être envoyé, le `SendMailError` fonction est appelée. Un message s’affiche à l’utilisateur. En outre, un événement est enregistré dans le journal des événements Windows en partant du principe qu’une source d’événements nommée MySamplesSite déjà existe. Consultez l’exemple de code ci-dessous pour créer la source d’événement spécifié. Pour plus d’informations sur la création d’une source d’événements, consultez [gestion des événements serveur dans les Pages Web Forms ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété de la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objet est défini sur `true` pour indiquer que l’erreur a été gérée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Utilisez l’exemple de code suivant si vous avez besoin ajouter par programmation de la source d’événements nommée MySamplesSite dans votre journal des applications. Cette source d’événements doit exister dans l’ordre pour le premier exemple de code fonctionne correctement. L’exemple de code suivant nécessite des privilèges d’administrateur.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <altmember cref="T:System.Web.Mail.SmtpMail" />
    <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Serveur gestion des événements dans les Pages Web ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Gestion et déclenchement d'événements</related>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">SMTP, élément (paramètres réseau)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Onglet Application outil Administration de Site Web</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c">Sécurisation des contrôles de connexion</related>
    <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Pratiques de sécurité de base pour les Applications Web</related>
  </Docs>
</Type>