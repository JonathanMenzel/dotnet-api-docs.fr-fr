<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f8b3a12d64c2a4cdb1c157ad0a9108722a6b0db" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51904072" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type FormParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Lie la valeur d’un champ <see cref="P:System.Web.HttpRequest.Form" /> de requête HTTP à un objet de paramètre.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Web.UI.WebControls.FormParameter> classe pour lier la valeur d’une variable de formulaire dans le <xref:System.Web.HttpRequest.Form%2A> collection à un paramètre utilisé dans une requête paramétrable ou une commande. Les contrôles qui lient des données au paramètre peuvent lever une exception si un <xref:System.Web.UI.WebControls.FormParameter> est spécifié mais aucune variable de formulaire correspondante est passée. Ils peuvent également afficher aucune donnée si la variable de formulaire est passée sans valeur correspondante. Définir le <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> afin d’éviter ces situations, le cas échéant.  
  
 Le <xref:System.Web.UI.WebControls.FormParameter> classe fournit le <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> propriété, qui identifie le nom de la variable de formulaire à lier, en plus de celles héritées de la <xref:System.Web.UI.WebControls.Parameter> classe.  
  
> [!IMPORTANT]
>  Le <xref:System.Web.UI.WebControls.FormParameter> ne valide pas la valeur passée par l’élément form en aucune façon ; elle utilise la valeur brute. Dans la plupart des cas, vous pouvez valider la valeur de la <xref:System.Web.UI.WebControls.FormParameter> avant d’être utilisée par un contrôle de source de données en gérant un événement, tel que le `Selecting`, `Updating`, `Inserting`, ou `Deleting` événements exposés par le contrôle de source de données que vous utilisez. Si la valeur du paramètre ne satisfait pas vos tests de validation, vous pouvez annuler l’opération de données en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété associé <xref:System.ComponentModel.CancelEventArgs> classe `true`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment insérer des données dans une base de données à l’aide de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle et une page Web ASP.NET simple. Les données actuelles de la table de données s’affiche dans le <xref:System.Web.UI.WebControls.DropDownList> contrôle. Vous pouvez ajouter de nouveaux enregistrements en entrant des valeurs dans le <xref:System.Web.UI.WebControls.TextBox> contrôles et en cliquant sur le bouton. Lorsque le bouton est activé, les valeurs spécifiées sont insérées dans la base de données et le <xref:System.Web.UI.WebControls.DropDownList> est actualisé.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Utilisation de paramètres avec les contrôles de Source de données</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.FormParameter" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Utilisation de paramètres avec les contrôles de Source de données</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance sans nom de la classe <see cref="T:System.Web.UI.WebControls.FormParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.FormParameter> objet créé avec le <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> constructeur est initialisé avec les valeurs par défaut pour toutes ses propriétés. Le <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> est initialisée à <xref:System.String.Empty?displayProperty=nameWithType>. En outre, le <xref:System.Web.UI.WebControls.Parameter.Name%2A> propriété est initialisée avec <xref:System.String.Empty?displayProperty=nameWithType>, le <xref:System.Web.UI.WebControls.Parameter.Type%2A> propriété est initialisée avec <xref:System.TypeCode.Object?displayProperty=nameWithType>, le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriété est initialisée avec <xref:System.Data.ParameterDirection.Input>et le <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propriété est initialisée avec la valeur null (`Nothing` en Visual Basic).  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  Le <xref:System.Web.UI.WebControls.FormParameter> ne valide pas la valeur passée par l’élément form en aucune façon ; elle utilise la valeur brute. Dans la plupart des cas, vous pouvez valider la valeur de la <xref:System.Web.UI.WebControls.FormParameter> avant d’être utilisée par un contrôle de source de données en gérant un événement, tel que le `Selecting`, `Updating`, `Inserting`, ou `Deleting` événements exposés par le contrôle de source de données que vous utilisez. Si la valeur du paramètre ne satisfait pas vos tests de validation, vous pouvez annuler l’opération de données en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété associé <xref:System.ComponentModel.CancelEventArgs> classe `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Utilisation de paramètres avec les contrôles de Source de données</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : System.Web.UI.WebControls.FormParameter -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original">Instance de <see cref="T:System.Web.UI.WebControls.FormParameter" /> à partir de laquelle l'instance actuelle est initialisée.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.FormParameter" /> avec les valeurs de l'instance spécifiée par le paramètre <paramref name="original" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> constructeur est un `protected` constructeur de copie utilisé pour cloner un <xref:System.Web.UI.WebControls.FormParameter> instance. Les valeurs de la <xref:System.Web.UI.WebControls.FormParameter>, y compris <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, et <xref:System.Web.UI.WebControls.Parameter.Type%2A> sont transférés vers la nouvelle instance.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Utilisation de paramètres avec les contrôles de Source de données</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom du paramètre.</param>
        <param name="formField">Nom de la variable de formulaire liée à l'objet Parameter. La valeur par défaut est <see cref="F:System.String.Empty" />.</param>
        <summary>Initialise une nouvelle instance nommée de la classe <see cref="T:System.Web.UI.WebControls.FormParameter" />, à l'aide de la chaîne spécifiée pour identifier le champ de la variable de formulaire à lier.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.FormParameter> objet créé avec le <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> constructeur est initialisé avec le nom de paramètre spécifié et la chaîne qui identifie la variable de formulaire liée au paramètre. Le <xref:System.Web.UI.WebControls.Parameter.Type%2A> et <xref:System.Web.UI.WebControls.Parameter.Direction%2A> les propriétés sont initialisées avec les valeurs par défaut.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  Le <xref:System.Web.UI.WebControls.FormParameter> ne valide pas la valeur passée par l’élément form en aucune façon ; elle utilise la valeur brute. Dans la plupart des cas, vous pouvez valider la valeur de la <xref:System.Web.UI.WebControls.FormParameter> avant d’être utilisée par un contrôle de source de données en gérant un événement, tel que le `Selecting`, `Updating`, `Inserting`, ou `Deleting` événements exposés par le contrôle de source de données que vous utilisez. Si la valeur du paramètre ne satisfait pas vos tests de validation, vous pouvez annuler l’opération de données en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété associé <xref:System.ComponentModel.CancelEventArgs> classe `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Utilisation de paramètres avec les contrôles de Source de données</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, dbType, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom du paramètre.</param>
        <param name="dbType">Type de base de données du paramètre.</param>
        <param name="formField">Nom de la variable de formulaire liée à l'objet Parameter.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.FormParameter" />, à l'aide de la chaîne spécifiée pour identifier le champ de la variable de formulaire à lier.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, type, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom du paramètre.</param>
        <param name="type">Type que le paramètre représente. La valeur par défaut est <see cref="F:System.TypeCode.Object" />.</param>
        <param name="formField">Nom de la variable de formulaire liée à l'objet Parameter. La valeur par défaut est <see cref="F:System.String.Empty" />.</param>
        <summary>Initialise une nouvelle instance nommée et fortement typée de la classe <see cref="T:System.Web.UI.WebControls.FormParameter" />, à l'aide de la chaîne spécifiée pour identifier la variable de formulaire à lier.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.FormParameter> objet créé avec le <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> constructeur est initialisé avec le nom de paramètre spécifié, <xref:System.Web.UI.WebControls.Parameter.Type%2A>et la chaîne qui identifie la variable de formulaire liée au paramètre. Uniquement les <xref:System.Web.UI.WebControls.Parameter.Direction%2A> et <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> les propriétés sont initialisées avec les valeurs par défaut.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  Le <xref:System.Web.UI.WebControls.FormParameter> ne valide pas la valeur passée par l’élément form en aucune façon ; elle utilise la valeur brute. Dans la plupart des cas, vous pouvez valider la valeur de la <xref:System.Web.UI.WebControls.FormParameter> avant d’être utilisée par un contrôle de source de données en gérant un événement, tel que le `Selecting`, `Updating`, `Inserting`, ou `Deleting` événements exposés par le contrôle de source de données que vous utilisez. Si la valeur du paramètre ne satisfait pas vos tests de validation, vous pouvez annuler l’opération de données en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété associé <xref:System.ComponentModel.CancelEventArgs> classe `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Utilisation de paramètres avec les contrôles de Source de données</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="formParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un doublon de l'instance de <see cref="T:System.Web.UI.WebControls.FormParameter" /> actuelle.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.FormParameter" /> qui est un doublon exact de l'objet actuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormParameter.Clone%2A> les appels de méthode le <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> constructeur de copie pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.FormParameter> classe avec les valeurs de l’instance actuelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Utilisation de paramètres avec les contrôles de Source de données</related>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="formParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> en cours de la demande.</param>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> qui est associé à la page dans laquelle le <see cref="T:System.Web.UI.WebControls.FormParameter" /> est utilisé.</param>
        <summary>Met à jour et retourne la valeur de l'objet <see cref="T:System.Web.UI.WebControls.FormParameter" />.</summary>
        <returns>Objet qui correspond à la valeur mise à jour et actuelle du paramètre. Si le contexte ou la demande est null (<see langword="Nothing" /> en Visual Basic), la méthode <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> retourne null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormParameter> tente de se lier à la variable de formulaire chaque fois que le <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> méthode est appelée.  
  
 Le `context` paramètre est utilisé par le <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> méthode pour récupérer la valeur du champ de formulaire spécifié à partir de la demande. Le `control` paramètre est ignoré.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Utilisation de paramètres avec les contrôles de Source de données</related>
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormField : string with get, set" Usage="System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la variable de formulaire liée au paramètre.</summary>
        <value>Chaîne identifiant la variable de formulaire liée au paramètre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> identifie une paire nom/valeur qui est passée dans le <xref:System.Web.HttpRequest.Form%2A> collection. Bien que le <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> propriété identifie le nom de la paire, le <xref:System.Web.UI.WebControls.FormParameter> lie sa valeur correspondante au moment de l’exécution. Si la paire nom/valeur de variable chaîne format attendu n’est pas passée à la page Web ASP.NET dans la collection, le <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> méthode lie le paramètre à la valeur de la <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propriété, si elle est définie. Si le <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> n’est pas définie, la <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> méthode ne parvient pas à lier le paramètre à une valeur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher les données filtrées à l’aide un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle et un <xref:System.Web.UI.WebControls.FormParameter> pour récupérer des données à partir d’un objet métier de couche intermédiaire et un <xref:System.Web.UI.WebControls.GridView> contrôle pour afficher les résultats.  
  
 L’exemple de code se compose d’un <xref:System.Web.UI.WebControls.TextBox>, un <xref:System.Web.UI.WebControls.GridView> contrôle, le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle et un bouton Envoyer. Par défaut, le <xref:System.Web.UI.WebControls.TextBox> est rempli avec le nom d’un des employés Northwind Traders. Le <xref:System.Web.UI.WebControls.GridView> affiche des informations sur l’employé identifié par le nom dans la <xref:System.Web.UI.WebControls.TextBox>. Pour récupérer des données sur un autre employé, entrez le nom complet de l’employé dans le <xref:System.Web.UI.WebControls.TextBox> et cliquez sur le bouton.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriété spécifie une expression utilisée pour filtrer les données récupérées par le <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>. Cette propriété utilise des espaces réservés de paramètre qui sont comparés aux paramètres contenus dans le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection. Dans cet exemple, l’espace réservé de paramètre est un <xref:System.Web.UI.WebControls.FormParameter> lié à la valeur de la <xref:System.Web.UI.WebControls.TextBox> contrôle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 L’exemple de code suivant montre l’objet métier de couche intermédiaire qui utilise l’exemple de code précédent. Cet exemple se compose de deux classes de base : le `EmployeeLogic` classe encapsule la logique métier et la `NorthwindEmployee` classe est une classe de modèle qui contient uniquement les fonctionnalités de base requises pour charger et rendre persistantes des données à partir de la couche données. Par souci de simplicité, le `EmployeeLogic` classe crée un ensemble statique de données, au lieu de récupérer les données d’une couche de données. Il est également utile pour cet exemple, étant donné que l’exemple s’appuie sur l’utilisateur à fournir le nom complet d’un employé de Northwind Traders pour illustrer le filtrage. Pour obtenir un exemple complet, vous devez compiler et utiliser ces classes avec les exemples de code ASP.NET fournis.  
  
> [!IMPORTANT]
>  Le <xref:System.Web.UI.WebControls.FormParameter> ne valide pas la valeur passée par l’élément form en aucune façon ; elle utilise la valeur brute. Dans la plupart des cas, vous pouvez valider la valeur de la <xref:System.Web.UI.WebControls.FormParameter> avant d’être utilisée par un contrôle de source de données en gérant un événement, tel que le `Selecting`, `Updating`, `Inserting`, ou `Deleting` événements exposés par le contrôle de source de données que vous utilisez. Si la valeur du paramètre ne satisfait pas vos tests de validation, vous pouvez annuler l’opération de données en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété associé <xref:System.ComponentModel.CancelEventArgs> classe `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Utilisation de paramètres avec les contrôles de Source de données</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l'entrée cliente dans le paramètre est validée.</summary>
        <value>
          <see langword="true" /> si l'entrée du client est validée ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>