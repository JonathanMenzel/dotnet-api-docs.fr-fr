<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f59085711b255f8d2e627288c4ef6040298ebf1" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53394026" /></Metadata><TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un champ qui s’affiche en tant que texte dans un contrôle lié aux données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundField> classe est utilisée par les contrôles liés aux données (tel que <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView>) pour afficher la valeur d’un champ en tant que texte. Le <xref:System.Web.UI.WebControls.BoundField> objet est affiché différemment selon le contrôle lié aux données dans lequel il est utilisé. Par exemple, le <xref:System.Web.UI.WebControls.GridView> contrôle qui affiche un <xref:System.Web.UI.WebControls.BoundField> objet en tant que colonne, tandis que le <xref:System.Web.UI.WebControls.DetailsView> contrôle l’affiche sous la forme d’une ligne.  
  
 Pour spécifier le champ à afficher dans un <xref:System.Web.UI.WebControls.BoundField> de l’objet, définissez le <xref:System.Web.UI.WebControls.BoundField.DataField%2A> propriété le nom du champ. La valeur du champ peut être encodée en HTML avant qu’il est affiché en définissant le <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propriété `true`. Vous pouvez appliquer une chaîne de mise en forme personnalisée à la valeur du champ en définissant le <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriété. Lorsque le <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propriété est `true`, la valeur de chaîne encodée du champ est utilisée dans la chaîne de format personnalisée. Par défaut, la chaîne mise en forme est appliquée aux valeurs de champ uniquement lorsque le contrôle lié aux données est en mode lecture seule. Pour appliquer la chaîne mise en forme aux valeurs affichées lorsque le contrôle lié aux données est en mode édition, définissez la <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> propriété `true`. Si la valeur d’un champ est null, vous pouvez afficher une légende personnalisée en définissant le <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propriété. Le <xref:System.Web.UI.WebControls.BoundField> objet peut également convertir automatiquement une chaîne vide (« ») champ des valeurs null en définissant le <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> propriété `true`.  
  
 Vous pouvez masquer un <xref:System.Web.UI.WebControls.BoundField> objet dans un contrôle lié aux données en définissant le <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> propriété `false`. Pour empêcher la valeur d’un champ d’être modifié en mode édition, affectez la <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> propriété `true`. Dans lié aux données les contrôles qui prennent en charge insertion d’enregistrements (tels que le <xref:System.Web.UI.WebControls.DetailsView> contrôle), vous pouvez masquer un <xref:System.Web.UI.WebControls.BoundField> objet en définissant le <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> propriété `false`. Cela est généralement le cas lorsque vous souhaitez masquer un champ de clé généré automatiquement en mode insertion.  
  
 Vous pouvez personnaliser les sections d’en-tête et pied de page d’un <xref:System.Web.UI.WebControls.BoundField> objet. Pour afficher une légende dans les sections d’en-tête ou pied de page, définissez la <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> ou <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> propriétés, respectivement. Au lieu de l’affichage du texte dans la section d’en-tête, vous pouvez afficher une image en définissant le <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> propriété. La section d’en-tête peut être masquée dans le <xref:System.Web.UI.WebControls.BoundField> objet en définissant le <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> propriété `false`.  
  
> [!NOTE]
>  Certains contrôles liés aux données (tels que le <xref:System.Web.UI.WebControls.GridView> contrôle) peut afficher ou masquer uniquement la section de l’intégralité de l’en-tête du contrôle. Ces contrôles liés aux données ne gèrent pas la <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> propriété pour un champ lié. Pour afficher ou masquer l’intégralité de l’en-tête d’un contrôle lié aux données (si disponible), utilisez le contrôle `ShowHeader` propriété.  
  
 Vous pouvez également personnaliser l’apparence de la <xref:System.Web.UI.WebControls.BoundField> objet (couleur de police, couleur d’arrière-plan et ainsi de suite) en définissant les propriétés de style pour les différentes parties du champ. Le tableau suivant répertorie les différentes propriétés de style.  
  
|Propriété de style|Description |  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Les paramètres de style pour les contrôles de serveur Web enfants de le <xref:System.Web.UI.WebControls.BoundField> objet.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Les paramètres de style pour la section de pied de page de la <xref:System.Web.UI.WebControls.BoundField> objet.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Les paramètres de style pour la section d’en-tête de la <xref:System.Web.UI.WebControls.BoundField> objet.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Les paramètres de style pour les éléments de données dans le <xref:System.Web.UI.WebControls.BoundField> objet.|  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.BoundField> objet pour afficher les valeurs d’un champ dans un <xref:System.Web.UI.WebControls.GridView> contrôle.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.BoundField> classe. Ce constructeur est couramment utilisé lorsque vous ajoutez des champs à un contrôle lié aux données créé dynamiquement.  
  
 Pour ajouter dynamiquement un <xref:System.Web.UI.WebControls.BoundField> de l’objet à un contrôle lié aux données, créez une nouvelle <xref:System.Web.UI.WebControls.BoundField> de l’objet, définissez ses propriétés, puis ajoutez-le à la collection de champs du contrôle lié aux données. Par exemple, si vous utilisez le <xref:System.Web.UI.WebControls.GridView> contrôler, ajoutez le <xref:System.Web.UI.WebControls.BoundField> de l’objet à le <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.  
  
> [!NOTE]
>  Bien que vous pouvez ajouter dynamiquement des champs à un contrôle lié aux données, il est fortement recommandé que les champs être statiquement déclarés et puis affichés ou masqués, selon le cas. La déclaration statique de tous vos champs réduit la taille de l’état d’affichage pour le contrôle lié aux données parent.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le constructeur pour ajouter dynamiquement un <xref:System.Web.UI.WebControls.BoundField> de l’objet à un <xref:System.Web.UI.WebControls.GridView> contrôle.  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si la chaîne de mise en forme spécifiée par la propriété <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> s'applique aux valeurs de champ lorsque le contrôle lié aux données qui contient l'objet <see cref="T:System.Web.UI.WebControls.BoundField" /> est en mode édition.</summary>
        <value><see langword="true" /> pour appliquer la chaîne de mise en forme aux valeurs de champ en mode édition ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Contrôles liés aux données (tel que <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, et <xref:System.Web.UI.WebControls.GridView>) ont différents modes d’affichage permettant aux utilisateurs de lire, modifier ou insérer des enregistrements. Par défaut, la chaîne mise en forme spécifiée par la <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriété est appliquée aux valeurs de champ uniquement lorsque le contrôle lié aux données est en mode lecture seule. Pour appliquer la chaîne mise en forme aux valeurs affichées lorsque le contrôle lié aux données est en mode édition, définissez la <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> propriété `true`.  
  
> [!NOTE]
>  Un <xref:System.Web.UI.WebControls.BoundField> objet ne supprime pas automatiquement la mise en forme lorsque le champ est mis à jour dans la source de données. Si vous ne souhaitez pas la mise en forme en tant que partie de la valeur stockée, vous devrez supprimer la mise en forme par programme.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> propriété à laquelle appliquer la mise en forme de chaîne aux valeurs de champ pendant une <xref:System.Web.UI.WebControls.GridView> contrôle est en mode édition. La mise en forme est ensuite supprimée par programme avant que la valeur est mise à jour dans la source de données.  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si les chaînes vides ("") sont converties automatiquement en valeurs null lorsque le champ de données est mis à jour dans la source de données.</summary>
        <value><see langword="true" /> pour convertir automatiquement des chaînes vides en valeurs null ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parfois, l’utilisateur peut entrer une chaîne vide pour une valeur de champ lorsque la mise à jour ou insérer des enregistrements. Utilisez le <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> propriété pour spécifier si une valeur de chaîne vide est automatiquement converties en valeurs null lorsque le champ de données est mis à jour dans la source de données.  
  
> [!NOTE]
>  Par défaut, un <xref:System.Web.UI.WebControls.BoundField> objet affiche les valeurs null en tant que chaînes vides. Pour afficher une valeur différente, définissez la <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> propriété pour spécifier qu’une chaîne vide (" ») la valeur du champ doit-elle automatiquement être converties en valeurs null.  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField"><see cref="T:System.Web.UI.WebControls.DataControlField" /> vers lequel copier les propriétés du <see cref="T:System.Web.UI.WebControls.BoundField" /> actuel.</param>
        <summary>Copie les propriétés de l'objet <see cref="T:System.Web.UI.WebControls.BoundField" /> actuel vers l'objet <see cref="T:System.Web.UI.WebControls.DataControlField" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A> méthode est une méthode d’assistance utilisée par le <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> méthode pour copier les propriétés de le <xref:System.Web.UI.WebControls.BoundField> de l’objet à le <xref:System.Web.UI.WebControls.DataControlField> objet créé par la méthode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un objet <see cref="T:System.Web.UI.WebControls.BoundField" /> vide.</summary>
        <returns>Un <see cref="T:System.Web.UI.WebControls.BoundField" /> vide.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundField.CreateField%2A> méthode est une méthode d’assistance utilisée par le <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> méthode pour créer un vide <xref:System.Web.UI.WebControls.BoundField> objet dans lequel copier les propriétés de le <xref:System.Web.UI.WebControls.BoundField> à l’objet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du champ de données lié à lier à l'objet <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <value>Nom du champ de données à lier au <see cref="T:System.Web.UI.WebControls.BoundField" />. La valeur par défaut est une chaîne vide (""), ce qui signifie que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.BoundField.DataField%2A> propriété pour spécifier le nom du champ de données à lier à la <xref:System.Web.UI.WebControls.BoundField> objet. Les valeurs du champ spécifié sont affichées dans le <xref:System.Web.UI.WebControls.BoundField> objet sous forme de texte. Vous pouvez éventuellement mettre en forme le texte affiché en définissant le <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriété.  
  
> [!NOTE]
>  Si la valeur d’un champ est null, une chaîne vide (" ») est affiché pour la valeur par défaut. Pour spécifier une autre légende, définissez la <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.BoundField.DataField%2A> propriété pour spécifier quel champ à afficher dans un <xref:System.Web.UI.WebControls.BoundField> colonne field d’une <xref:System.Web.UI.WebControls.GridView> contrôle.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne qui spécifie le format d'affichage de la valeur du champ.</summary>
        <value>Chaîne de mise en forme qui spécifie le format d'affichage de la valeur du champ. La valeur par défaut est une chaîne vide (""), qui indique qu'aucune mise en forme spéciale n'est appliquée à la valeur de champ.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriété pour spécifier un format d’affichage personnalisé pour les valeurs qui sont affichés dans le <xref:System.Web.UI.WebControls.BoundField> objet. Si le <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriété n’est pas définie, la valeur du champ s’affiche sans mise en forme spéciale.  
  
> [!NOTE]
>  Dans les versions d’ASP.NET antérieures à 3.5, vous devez définir le <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propriété `false` pour mettre en forme les champs qui sont pas types de données string. Sinon, la valeur du champ est convertie en une chaîne par la méthode de conversion par défaut avant la chaîne de format qui est stockée dans le <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriété est appliquée.  
  
 Par défaut, la chaîne mise en forme est appliquée à la valeur de champ uniquement lorsque le contrôle lié aux données qui contient le <xref:System.Web.UI.WebControls.BoundField> objet est en mode en lecture seule. Pour appliquer la chaîne mise en forme aux valeurs de champ en mode édition, définissez la <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> propriété `true`.  
  
 La chaîne mise en forme peut être n’importe quelle chaîne littérale et inclut généralement un espace réservé pour la valeur du champ. Par exemple, dans la chaîne mise en forme `Item Value: {0}`, la valeur du champ est remplacée par le {0} espace réservé lors de la chaîne est affichée dans le <xref:System.Web.UI.WebControls.BoundField> objet. Le reste de la chaîne mise en forme s’affiche sous forme de texte littéral.  
  
 Si la chaîne mise en forme n’inclut pas d’un espace réservé, uniquement la chaîne de mise en forme elle-même est incluse dans le texte final affiché (la valeur du champ à partir de la source de données n’est pas incluse). Si l’espace réservé est un 0 (zéro), placé entre accolades, comme illustré dans l’exemple précédent, la valeur de champ est convertie en une chaîne par la méthode par défaut. Vous pouvez ajouter au zéro, une chaîne qui spécifie la façon dont la valeur du champ doit être mis en forme. Par exemple, l’espace réservé `{0:C}` pour un champ numérique, spécifie que la valeur du champ doit être convertie en un format monétaire.  
  
 Mise en forme est appliquée à l’aide de la <xref:System.String.Format%2A> (méthode). Le nombre qui suit l’accolade ouvrante fait partie de la syntaxe utilisée par cette méthode et indique parmi une série de valeurs de l’espace réservé doit utiliser. Étant donné qu’une seule valeur de champ dans chaque cellule, le nombre qui suit l’accolade ouvrante peut uniquement être défini sur 0.  
  
 Le tableau suivant répertorie les caractères de format standard pour les champs numériques. Ces caractères de format ne sont pas la casse, à l’exception de `X`, qui affiche les caractères hexadécimaux dans le cas qui est spécifié. Vous pouvez ajouter un nombre à la plupart des caractères de format pour spécifier le nombre de chiffres significatifs ou de décimales que vous souhaitez afficher.  
  
> [!NOTE]
>  Dans la plupart des cas, la mise en forme dépend de paramètre de culture du serveur. Les exemples sont pour un paramètre de culture `en-US`.  
  
|Caractère de format|Description |Exemple|  
|----------------------|-----------------|-------------|  
|`C` ou `c`|Affiche les valeurs numériques au format monétaire. Vous pouvez spécifier le nombre de décimales.|Format : `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Format : `{0:C3}`<br /><br /> 123.456  -> $123.456|  
|`D` ou `d`|Affiche des valeurs entières au format décimal. Vous pouvez spécifier le nombre de chiffres. (Bien que le type est appelé « décimal », les nombres sont mis en forme en tant qu’entiers).|Format : `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Format : `{0:D6}`<br /><br /> 1234  -> 001234|  
|`E` ou `e`|Affiche les valeurs numériques au format scientifique (exponentielle). Vous pouvez spécifier le nombre de décimales.|Format : `{0:E}`<br /><br /> 1052.0329112756 -&GT; 1.052033E + 003<br /><br /> Format : `{0:E2}`<br /><br /> -1052.0329112756 -> - 1.05e + 003|  
|`F` ou `f`|Affiche les valeurs numériques au format fixe. Vous pouvez spécifier le nombre de décimales.|Format : `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Format : `{0:F3}`<br /><br /> 1234.567 -> 1234.567|  
|`G` ou `g`|Affiche les valeurs numériques dans le format général (le plus compact de notation à virgule fixe ou scientifique). Vous pouvez spécifier le nombre de chiffres significatifs.|Format : `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Format : `{0:G2}`<br /><br /> -123.456 -> -120|  
|`N` ou `n`|Affiche les valeurs numériques au format numérique (y compris les séparateurs de groupes et d’un signe négatif facultatif). Vous pouvez spécifier le nombre de décimales.|Format : `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Format : `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  
|`P` ou `p`|Affiche les valeurs numériques au format pourcentage. Vous pouvez spécifier le nombre de décimales.|Format : `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Format : `{0:P1}`<br /><br /> .5 -> 50.0%|  
|`R` ou `r`|Affiche <xref:System.Single>, <xref:System.Double>, ou `BigInteger` valeurs au format aller-retour.|Format : `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` ou `x`|Affiche des valeurs entières au format hexadécimal. Vous pouvez spécifier le nombre de chiffres.|Format : `{0:X}`<br /><br /> 255 -&GT; FF<br /><br /> Format : `{0:x4}`<br /><br /> 255 -> 00ff|  
  
 Pour plus d’informations et pour obtenir des exemples qui montrent la mise en forme pour les autres valeurs de culture, consultez [des chaînes de Format numériques Standard](~/docs/standard/base-types/standard-numeric-format-strings.md). Vous pouvez également créer des chaînes de format numériques personnalisées. Pour plus d’informations, consultez [Chaînes de format numériques personnalisées](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
 Le tableau suivant répertorie les caractères de formatage de <xref:System.DateTime> champs. La plupart de ces spécifications de mise en forme entraîne une sortie différente en fonction des paramètres de culture. Les exemples concernent un <xref:System.DateTime> valeur de 6/15/2009 1:45:30 PM avec un paramètre de culture `en-US`.  
  
|Caractère de format|Description |Exemple|  
|----------------------|-----------------|-------------|  
|`d`|Modèle de date courte.|Format : `{0:d}`<br /><br /> 6/15/2009 1:45:30 PM -&GT; 6/15/2009|  
|`D`|Modèle de date longue.|Format : `{0:D}`<br /><br /> 6/15/2009 1:45:30 PM -> lundi 15 juin 2009|  
|`f`|Modèle de date/heure complet (heure courte).|Format : `{0:f}`<br /><br /> 6/15/2009 1:45:30 PM -> lundi 15 juin 2009 1:45 PM|  
|`F`|Modèle de date/heure complet (heure longue).|Format : `{0:F}`<br /><br /> 6/15/2009 1:45:30 PM -> lundi 15 juin 2009 1:45:30 PM|  
|`g`|Modèle de date/heure général (heure courte).|Format : `{0:g}`<br /><br /> 6/15/2009 1:45:30 PM -&GT; 6/15/2009 1:45 PM|  
|`G`|Modèle de date/heure général (heure longue).|Format : `{0:G}`<br /><br /> 6/15/2009 1:45:30 PM -&GT; 6/15/2009 1:45:30 PM|  
|`M` ou `m`|Modèle de mois/jour.|Format : `{0:M}`<br /><br /> 6/15/2009 1:45:30 PM -> 15 juin|  
|`O` ou `o`|Modèle de date/heure aller-retour.|Format : `{0:o}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000|  
|`R` ou `r`|Modèle RFC1123 (pour plus d’informations, consultez <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>).|Format : `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  
|`s`|Modèle de date/heure pouvant être trié.|Format : `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  
|`t`|Modèle d’heure courte.|Format : `{0:t}`<br /><br /> 6/15/2009 1:45:30 PM -&GT; 1:45 PM|  
|`T`|Modèle d’heure longue.|Format : `{0:T}`<br /><br /> 6/15/2009 1:45:30 PM -&GT; 1:45:30 PM|  
|`u`|Modèle de date/heure universel pouvant être trié.|Format : `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  
|`U`|Modèle de date/heure complet universel.|Format : `{0:U}`<br /><br /> 6/15/2009 1:45:30 PM -> lundi 15 juin 2009 8:45:30 PM|  
|`Y` ou `y`|Modèle d'année/mois.|Format : `{0:Y}`<br /><br /> 6/15/2009 1:45:30 PM -> juin 2009|  
  
 Pour plus d’informations et pour obtenir des exemples qui montrent la mise en forme pour les autres valeurs de culture, consultez [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Vous pouvez également créer des chaînes de format de temps et de date personnalisée. Pour plus d’informations, consultez [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
   
  
## Examples  
 Un projet de site Web Visual Studio avec code source est disponible pour accompagner cette rubrique : [Télécharger](https://go.microsoft.com/fwlink/?LinkId=191889).  
  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriété pour spécifier un format d’affichage personnalisé pour les valeurs d’un champ.  
  
  
  
 L’exemple suivant montre une ligne de la sortie produite par cet exemple.  
  
|ProductID|Name|ProductNumber|ListPrice|Épaisseur|ModifiedDate|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Mettre en forme des types dans .NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary"><see cref="T:System.Collections.IDictionary" /> utilisé pour stocker les valeurs de la cellule spécifiée.</param>
        <param name="cell"><see cref="T:System.Web.UI.WebControls.TableCell" /> contenant les valeurs à récupérer.</param>
        <param name="rowState">Une des valeurs de <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <param name="includeReadOnly"><see langword="true" /> pour inclure les valeurs des champs en lecture seule ; sinon, <see langword="false" />.</param>
        <summary>Remplit l'objet <see cref="T:System.Collections.IDictionary" /> spécifié avec les valeurs provenant de l'objet <see cref="T:System.Web.UI.WebControls.TableCell" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A> méthode est fournie comme un moyen pratique pour récupérer les valeurs des champs à partir du spécifié <xref:System.Web.UI.WebControls.TableCell> de l’objet dans un <xref:System.Web.UI.WebControls.BoundField> objet.  
  
> [!NOTE]
>  Cette méthode est principalement utilisée par des développeurs de contrôles.  
  
 Elle ne retourne pas de valeur. Au lieu de cela, les valeurs de champ sont retournées par référence à travers le <xref:System.Collections.IDictionary?displayProperty=nameWithType> objet transmis pour le `dictionary` paramètre. Une fois que la méthode a été appelée, itérer la <xref:System.Collections.IDictionary?displayProperty=nameWithType> objet pour accéder aux valeurs de champ.  
  
> [!NOTE]
>  Si le <xref:System.Web.UI.WebControls.TableCell> objet contient des valeurs de champ en lecture seule, vous devez passer `true` pour le `includeReadOnly` paramètre pour inclure ces valeurs.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">Valeur de champ à mettre en forme.</param>
        <param name="encode"><see langword="true" /> pour encoder la valeur ; sinon, <see langword="false" />.</param>
        <summary>Met en forme la valeur de champ spécifiée pour une cellule dans l'objet <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <returns>Valeur de champ convertie au format spécifié par <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> méthode est une méthode d’assistance utilisée pour transformer une valeur de champ au format spécifié par le <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriété. Si une valeur de champ est null, la valeur de la <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propriété est renvoyée.  
  
> [!NOTE]
>  Cette méthode est principalement utilisée par des développeurs de contrôles.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.BoundField" /> (classe), vous pouvez substituer cette méthode pour exécuter une routine de mise en forme personnalisée.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère la valeur utilisée pour un champ lors du rendu de l'objet <see cref="T:System.Web.UI.WebControls.BoundField" /> dans un concepteur.</summary>
        <returns>Valeur à afficher dans le concepteur en tant que valeur du champ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> méthode est une méthode d’assistance utilisée pour déterminer la valeur à afficher pour un champ lors du rendu le <xref:System.Web.UI.WebControls.BoundField> objet dans un concepteur. Si des données réelles ne peut pas être récupérées à partir de la source de données au moment du design, la valeur retournée par cette méthode s’affiche à la place.  
  
> [!NOTE]
>  Cette méthode est principalement utilisée par des développeurs de contrôles.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.BoundField" /> (classe), vous pouvez substituer cette méthode pour retourner une valeur différente à afficher pour le champ dans un concepteur.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">Conteneur pour la valeur du champ.</param>
        <summary>Récupère la valeur du champ lié à l'objet <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <returns>Valeur du champ lié à <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> méthode est une méthode d’assistance utilisée pour déterminer la valeur d’un champ. Si le <xref:System.Web.UI.WebControls.BoundField> objet est affiché dans un concepteur et la valeur du champ ne peut pas être déterminée au moment du design, la valeur retournée à partir de la <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> méthode est retournée au lieu de la valeur de champ réels.  
  
> [!NOTE]
>  Cette méthode est principalement utilisée par des développeurs de contrôles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Le conteneur spécifié par le paramètre <paramref name="controlContainer" /> est <see langword="null" />.  
  
ou 
Le conteneur spécifié par le paramètre <paramref name="controlContainer" /> n'a pas d'élément de données.  
  
ou 
Le champ de données est introuvable.</exception>
        <block subset="none" type="overrides"><para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.BoundField" /> (classe), vous pouvez substituer cette méthode pour fournir une routine personnalisée pour déterminer la valeur d’un champ.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte qui s'affiche dans l'en-tête d'un contrôle de données.</summary>
        <value>Texte affiché dans l'en-tête du contrôle de données. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> propriété pour identifier un champ dans un contrôle de données avec un nom convivial. L’application la plus courante de la <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> propriété consiste à fournir des noms de colonnes explicites aux champs liés aux données dans un <xref:System.Web.UI.WebControls.GridView> ou <xref:System.Web.UI.WebControls.DetailsView> contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si les valeurs de champ sont encodées en HTML avant qu'elles soient affichées dans un objet <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <value><see langword="true" /> si les valeurs de champ sont encodées en HTML avant qu'elles soient affichées dans un objet <see cref="T:System.Web.UI.WebControls.BoundField" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propriété pour spécifier si les valeurs de champ sont encodées en HTML à leurs représentations sous forme de chaîne respectives avant qu’elles sont affichées dans un <xref:System.Web.UI.WebControls.BoundField> objet. Par exemple, si cette propriété est `true`, une valeur de chaîne «\<script > » est rendu en tant que «&lt;script&gt;». Si cette propriété est `false`, la chaîne sera restituée inchangée.  
  
> [!NOTE]
>  Les valeurs de champ de codage HTML permet d’empêcher les attaques de script entre sites et de contenu malveillant de s’afficher. Cette propriété doit être activée chaque fois que possible.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propriété pour empêcher les valeurs de champ soient encodées en HTML avant d’être affichées dans un <xref:System.Web.UI.WebControls.BoundField> objet.  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le texte créé en appliquant la propriété <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> à la valeur <see cref="T:System.Web.UI.WebControls.BoundField" /> doit être encodé en HTML lorsqu'il est affiché.</summary>
        <value><see langword="true" /> si le texte doit être encodé en HTML ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valeurs de codage HTML peuvent aider à empêcher l’affichage des attaques de script entre sites et de contenu malveillant. Codage HTML est également utile lorsque vous souhaitez afficher le code HTML dans le navigateur, telles que l’affichage de la chaîne «\<br / > » au lieu d’insérer un saut de ligne (`<br/>` élément) dans la page.  
  
> [!NOTE]
>  Cette propriété est une nouveauté dans ASP.NET 3.5. Si cette propriété `false` restaure le comportement par défaut de la <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> dans les versions d’ASP.NET antérieures à 3.5. Pour plus d'informations, consultez la propriété <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting"><see langword="true" /> si le tri est pris en charge ; sinon, <see langword="false" />.</param>
        <param name="control">Contrôle de données auquel appartient <see cref="T:System.Web.UI.WebControls.BoundField" />.</param>
        <summary>Initialise l'objet <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <returns><see langword="false" /> dans tous les cas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> méthode est appelée par le contrôle de données avec laquelle le <xref:System.Web.UI.WebControls.BoundField> objet est associé pour effectuer l’initialisation d’objet de base pour les instances du champ, avant que le champ est ajouté à une collection de lignes. Contrôles de données tels que <xref:System.Web.UI.WebControls.DetailsView> et <xref:System.Web.UI.WebControls.GridView> appeler le <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> méthode dans leurs `CreateChildControls` méthodes avant les autres méthodes telles que `CreateRow` sont appelées pour créer des lignes spécifiques avec des données.  
  
 Appelez cette méthode lorsque vous écrivez un personnalisé lié aux données contrôle qui utilise <xref:System.Web.UI.WebControls.TableCell> objets pour effectuer l’initialisation de base pour un <xref:System.Web.UI.WebControls.BoundField> objet. Implémentez cette méthode si votre <xref:System.Web.UI.WebControls.BoundField>-type dérivé nécessite une initialisation d’objet avant de remplir <xref:System.Web.UI.WebControls.TableCell> objets avec des données ou des contrôles dans le <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">Objet <see cref="T:System.Web.UI.WebControls.TableCell" /> à initialiser.</param>
        <param name="cellType">Une des valeurs de <see cref="T:System.Web.UI.WebControls.DataControlCellType" />.</param>
        <param name="rowState">Une des valeurs de <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <param name="rowIndex">Index de base zéro de la ligne.</param>
        <summary>Initialise l'objet <see cref="T:System.Web.UI.WebControls.TableCell" /> spécifié à l'état de ligne spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> méthode est implémentée par <xref:System.Web.UI.WebControls.BoundField>-types dérivés pour ajouter du texte et des contrôles à un <xref:System.Web.UI.WebControls.TableCell> objet d’un contrôle de données qui utilise des tables pour afficher une interface utilisateur (IU). Ces contrôles de données créent la structure complète du tableau ligne-ligne lorsque le contrôle `CreateChildControls` méthode est appelée. Le <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> méthode est appelée par le `InitializeRow` méthode des données de contrôles tels que <xref:System.Web.UI.WebControls.DetailsView> et <xref:System.Web.UI.WebControls.GridView>.  
  
 Appelez cette méthode lorsque vous écrivez un personnalisé lié aux données contrôle qui utilise <xref:System.Web.UI.WebControls.TableCell> objets pour initialiser les cellules de la structure de table avec des données ou des contrôles. Implémentez cette méthode lorsque vous écrivez un <xref:System.Web.UI.WebControls.BoundField>-classe dérivée.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell">Objet <see cref="T:System.Web.UI.WebControls.TableCell" /> à initialiser.</param>
        <param name="rowState">Une des valeurs de <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <summary>Initialise l'objet <see cref="T:System.Web.UI.WebControls.TableCell" /> spécifié à l'état de ligne spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A> méthode est une méthode d’assistance utilisée pour initialiser une cellule dans le <xref:System.Web.UI.WebControls.BoundField> objet.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.BoundField" /> (classe), vous pouvez substituer cette méthode pour exécuter une routine d’initialisation personnalisée.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Représente l'état du contrôle à restaurer.</param>
        <summary>Restaure les informations d'état d'affichage précédemment enregistrées pour ce champ.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la légende affichée pour un champ lorsque la valeur du champ est null.</summary>
        <value>Légende affichée pour un champ lorsque la valeur du champ est null. La valeur par défaut est une chaîne vide (""), ce qui signifie que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parfois la valeur d’un champ est stockée en tant que valeur null dans la source de données. Vous pouvez spécifier une légende personnalisée à afficher pour les champs qui ont une valeur null en définissant le <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propriété. Si cette propriété n’est pas définie, les valeurs de champ null sont affichés sous forme de chaînes vides ( » »). Lorsqu’un enregistrement est en cours de mise à jour ou inséré dans un contrôle lié aux données, si l’utilisateur entre la valeur spécifiée par cette propriété (autre qu’une chaîne vide) pour un champ dans un contrôle lié aux données, que la valeur est automatiquement convertie en null dans la source de données.  
  
> [!NOTE]
>  Pour convertir une valeur de champ de chaîne vide en une valeur null, définissez le <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> propriété `true`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propriété pour spécifier une légende personnalisée à afficher pour les valeurs de champ null.  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Source de l'événement.</param>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Lie la valeur d'un champ à l'objet <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> méthode est une méthode d’assistance utilisée pour lier la valeur d’un champ dans la source de données à une cellule correspondante dans le <xref:System.Web.UI.WebControls.BoundField> objet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Le contrôle auquel la valeur de champ est liée n'est pas un <see cref="T:System.Web.UI.WebControls.TextBox" /> ou un <see cref="T:System.Web.UI.WebControls.TableCell" />.</exception>
        <block subset="none" type="overrides"><para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.BoundField" /> (classe), vous pouvez substituer cette méthode pour exécuter une routine de liaison personnalisée.</para></block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si la valeur du champ peut être modifiée en mode édition.</summary>
        <value><see langword="true" /> pour empêcher la modification de la valeur du champ en mode édition ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> propriété pour empêcher les valeurs affichées dans un <xref:System.Web.UI.WebControls.BoundField> objet en cours de modification. Lorsqu’un contrôle lié aux données est en mode édition, les champs qui sont en lecture seule sont affichés sous forme de texte brut, sans contrôle d’édition.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> propriété s’applique uniquement au mode édition. Pour empêcher les champs d’apparaître en mode insertion, utilisez le <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> propriété pour empêcher les valeurs du champ clé affichées dans un <xref:System.Web.UI.WebControls.BoundField> objet d’être modifié en mode édition.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'encodage en HTML est pris en charge par un objet <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <value>Retourne toujours <see langword="true" /> pour indiquer que l'encodage en HTML est pris en charge par un <see cref="T:System.Web.UI.WebControls.BoundField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A> propriété est une propriété d’assistance utilisée par la <xref:System.Web.UI.WebControls.BoundField> classe et des classes dérivées pour déterminer si l’encodage en HTML est pris en charge par la classe.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lorsque vous dérivez de la <see cref="T:System.Web.UI.WebControls.BoundField" /> (classe), vous pouvez remplacer cette propriété pour indiquer si l’encodage en HTML est pris en charge par la classe.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente l’expression « this ».</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce champ est utilisé pour indiquer que le <xref:System.Web.UI.WebControls.BoundField> objet doit lier avec la source de données elle-même, plutôt qu’un champ de la source de données. Dans de ce cas, l’objet `ToString` valeur s’affichera dans le champ.  
  
 Ce champ est utilisé principalement par les développeurs de contrôles.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui détermine si le contrôle valide l'entrée cliente ou non.</summary>
        <value>Valeur qui détermine si le contrôle valide l'entrée d'un client ou pas. La valeur par défaut est <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Détermine si les contrôles contenus dans un objet <see cref="T:System.Web.UI.WebControls.BoundField" /> prennent en charge les rappels.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> méthode est une méthode d’assistance utilisée pour déterminer si les contrôles contenus dans un <xref:System.Web.UI.WebControls.BoundField> rappels de prise en charge de l’objet. Cette méthode a été implémentée comme une méthode vide (une méthode qui ne contient-elle pas de code) pour indiquer que les rappels sont pris en charge.  
  
> [!NOTE]
>  Cette méthode est principalement utilisée par des développeurs de contrôles.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Les classes qui dérivent de la <see cref="T:System.Web.UI.WebControls.BoundField" /> classe peut substituer cette méthode pour indiquer si les contrôles contenus dans le champ de rappels de prise en charge. Pour indiquer que les rappels sont pris en charge, implémentent cette méthode comme une méthode vide qui ne lève pas d’exception ; Sinon, lève une exception avec un message pertinent décrivant pourquoi les rappels ne sont pas pris en charge.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>