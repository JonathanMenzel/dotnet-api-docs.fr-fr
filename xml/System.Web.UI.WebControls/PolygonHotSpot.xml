<Type Name="PolygonHotSpot" FullName="System.Web.UI.WebControls.PolygonHotSpot">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3700ae21498ce4132de6bddccfd7689ab99b0600" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39857081" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PolygonHotSpot : System.Web.UI.WebControls.HotSpot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PolygonHotSpot extends System.Web.UI.WebControls.HotSpot" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.PolygonHotSpot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PolygonHotSpot&#xA;Inherits HotSpot" />
  <TypeSignature Language="C++ CLI" Value="public ref class PolygonHotSpot sealed : System::Web::UI::WebControls::HotSpot" />
  <TypeSignature Language="F#" Value="type PolygonHotSpot = class&#xA;    inherit HotSpot" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HotSpot</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit une zone réactive en forme de polygone dans un contrôle <see cref="T:System.Web.UI.WebControls.ImageMap" />. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe définit une zone réactive en forme de polygone dans un <xref:System.Web.UI.WebControls.ImageMap> contrôle. Le <xref:System.Web.UI.WebControls.PolygonHotSpot> est utile pour définir de façon irrégulière en forme de zones réactives dans un <xref:System.Web.UI.WebControls.ImageMap> contrôle. Par exemple, vous pouvez l’utiliser pour définir des régions individuelles au sein d’une carte géographique.  
  
 Pour définir la zone d’un <xref:System.Web.UI.WebControls.PolygonHotSpot>, définissez le <xref:System.Web.UI.WebControls.PolygonHotSpot.Coordinates%2A> en une chaîne qui spécifie les coordonnées de chaque sommet de la <xref:System.Web.UI.WebControls.PolygonHotSpot> objet. Un sommet du polygone est un point auquel répondre aux deux bords de polygone.  
  
 Quand un <xref:System.Web.UI.WebControls.PolygonHotSpot> objet est activé, la page navigue vers une URL, génère une publication sur le serveur ou ne fait rien. Le <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propriété spécifie ce comportement. Pour accéder à une URL, définissez la <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propriété `HotSpotMode.Navigate`et utiliser le <xref:System.Web.UI.WebControls.HotSpot.NavigateUrl%2A> propriété pour spécifier l’URL pour accéder à. Pour publier sur le serveur, définissez la <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propriété `HotSpotMode.PostBack`et utiliser le <xref:System.Web.UI.WebControls.HotSpot.PostBackValue%2A> propriété pour spécifier un nom pour le <xref:System.Web.UI.WebControls.PolygonHotSpot> objet. Ce nom est passé dans le <xref:System.Web.UI.WebControls.ImageMapEventArgs> données d’événement lorsque le <xref:System.Web.UI.WebControls.PolygonHotSpot> vous cliquez sur. Si vous souhaitez que le <xref:System.Web.UI.WebControls.PolygonHotSpot> objet n’ont aucun comportement, définissez la <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propriété `HotSpotMode.Inactive`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer un <xref:System.Web.UI.WebControls.ImageMap> contrôle qui contient trois <xref:System.Web.UI.WebControls.PolygonHotSpot> objets. Chaque <xref:System.Web.UI.WebControls.PolygonHotSpot> objet représente une région géographique sur la carte. Lorsque l’utilisateur clique sur un <xref:System.Web.UI.WebControls.PolygonHotSpot> de l’objet, il le publie sur le serveur et le type et le nom de la zone réactive sont affichés dans une étiquette.  
  
 [!code-aspx-csharp[PolygonHotSpot.Class1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PolygonHotSpot.Class1/CS/polygonhotspot.class1cs.aspx#1)]
 [!code-aspx-vb[PolygonHotSpot.Class1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PolygonHotSpot.Class1/VB/polygonhotspot.class1vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ImageMap" />
    <altmember cref="P:System.Web.UI.WebControls.PolygonHotSpot.Coordinates" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PolygonHotSpot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PolygonHotSpot.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PolygonHotSpot();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.PolygonHotSpot" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.PolygonHotSpot> classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer par programmation un <xref:System.Web.UI.WebControls.PolygonHotSpot> de l’objet et l’ajouter à un <xref:System.Web.UI.WebControls.ImageMap> contrôle. Le <xref:System.Web.UI.WebControls.ImageMap> contrôle contient deux autres <xref:System.Web.UI.WebControls.PolygonHotSpot> les objets qui ont été ajoutés de façon déclarative. Chaque <xref:System.Web.UI.WebControls.PolygonHotSpot> objet représente une région géographique sur la carte. Lorsque l’utilisateur clique sur un <xref:System.Web.UI.WebControls.PolygonHotSpot> de l’objet, il le publie sur le serveur et le type et le nom de la zone réactive sont affichés dans une étiquette.  
  
 [!code-aspx-csharp[PolygonHotSpot.Cstr#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PolygonHotSpot.Cstr/CS/polygonhotspot.cstrcs.aspx#1)]
 [!code-aspx-vb[PolygonHotSpot.Cstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PolygonHotSpot.Cstr/VB/polygonhotspot.cstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Coordinates">
      <MemberSignature Language="C#" Value="public string Coordinates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Coordinates" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PolygonHotSpot.Coordinates" />
      <MemberSignature Language="VB.NET" Value="Public Property Coordinates As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Coordinates { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Coordinates : string with get, set" Usage="System.Web.UI.WebControls.PolygonHotSpot.Coordinates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Chaîne des coordonnées qui représente les sommets d'un objet <see cref="T:System.Web.UI.WebControls.PolygonHotSpot" />.</summary>
        <value>Chaîne qui représente les coordonnées des sommets d'un objet <see cref="T:System.Web.UI.WebControls.PolygonHotSpot" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.PolygonHotSpot.Coordinates%2A> propriété pour spécifier les coordonnées des sommets d’un <xref:System.Web.UI.WebControls.PolygonHotSpot> objet. Un sommet du polygone est un point auquel répondre aux deux bords de polygone. La chaîne que vous spécifiez doit être formatée avec chaque coordonnée séparée par une virgule. Chaque sommet que vous spécifiez doit avoir des coordonnées x et une coordonnée y. Par exemple, la chaîne « 128,185,335,157,510,224,510,383,228,383 » définit une zone réactive polygone à cinq sommets. La coordonnée x du premier vertex est 128. Coordonnée y du premier vertex est 185.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer par programmation un <xref:System.Web.UI.WebControls.PolygonHotSpot> de l’objet et l’ajouter à un <xref:System.Web.UI.WebControls.ImageMap> contrôle. Le <xref:System.Web.UI.WebControls.PolygonHotSpot.Coordinates%2A> propriété est utilisée pour spécifier les coordonnées des sommets de le <xref:System.Web.UI.WebControls.PolygonHotSpot> objet. Le <xref:System.Web.UI.WebControls.ImageMap> contrôle contient deux autres <xref:System.Web.UI.WebControls.PolygonHotSpot> les objets qui ont été ajoutés de façon déclarative. Chaque <xref:System.Web.UI.WebControls.PolygonHotSpot> objet représente une région géographique sur la carte. Lorsque l’utilisateur clique sur un <xref:System.Web.UI.WebControls.PolygonHotSpot> de l’objet, il le publie sur le serveur et le type et le nom de la zone réactive sont affichés dans une étiquette.  
  
 [!code-aspx-csharp[PolygonHotSpot.Cstr#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PolygonHotSpot.Cstr/CS/polygonhotspot.cstrcs.aspx#1)]
 [!code-aspx-vb[PolygonHotSpot.Cstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PolygonHotSpot.Cstr/VB/polygonhotspot.cstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ImageMap" />
      </Docs>
    </Member>
    <Member MemberName="GetCoordinates">
      <MemberSignature Language="C#" Value="public override string GetCoordinates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetCoordinates() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PolygonHotSpot.GetCoordinates" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCoordinates () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetCoordinates();" />
      <MemberSignature Language="F#" Value="override this.GetCoordinates : unit -&gt; string" Usage="polygonHotSpot.GetCoordinates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une chaîne qui représente les coordonnées des sommets d'un objet <see cref="T:System.Web.UI.WebControls.PolygonHotSpot" />.</summary>
        <returns>Chaîne qui représente les coordonnées des sommets d'un objet <see cref="T:System.Web.UI.WebControls.PolygonHotSpot" />. La valeur par défaut est une chaîne vide ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.PolygonHotSpot.GetCoordinates%2A> méthode retourne une chaîne qui représente les coordonnées des sommets d’un <xref:System.Web.UI.WebControls.PolygonHotSpot> objet. La chaîne retournée par cette méthode est la valeur actuelle de la <xref:System.Web.UI.WebControls.PolygonHotSpot.Coordinates%2A> propriété.  
  
 Le <xref:System.Web.UI.WebControls.PolygonHotSpot.GetCoordinates%2A> méthode est utilisée en interne par ASP.NET pour obtenir le texte à utiliser pour les coordonnées d’un <xref:System.Web.UI.WebControls.PolygonHotSpot> lorsqu’il est restitué. La chaîne retournée est spécifique à la langue du navigateur et le balisage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer un <xref:System.Web.UI.WebControls.ImageMap> contrôle qui contient trois <xref:System.Web.UI.WebControls.PolygonHotSpot> objets. Chaque <xref:System.Web.UI.WebControls.PolygonHotSpot> objet représente une région géographique sur la carte. Lorsque l’utilisateur clique sur un <xref:System.Web.UI.WebControls.PolygonHotSpot> l’objet, la publication sur le serveur. Le <xref:System.Web.UI.WebControls.PolygonHotSpot.GetCoordinates%2A> méthode récupère les coordonnées des sommets du polygone afin qu’elles puissent être affichées dans une étiquette.  
  
 [!code-aspx-csharp[PolygonHotSpot.GetCoordinates#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PolygonHotSpot.GetCoordinates/CS/polygonhotspot.getcoordinatescs.aspx#1)]
 [!code-aspx-vb[PolygonHotSpot.GetCoordinates#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PolygonHotSpot.GetCoordinates/VB/polygonhotspot.getcoordinatesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ImageMap" />
        <altmember cref="P:System.Web.UI.WebControls.PolygonHotSpot.Coordinates" />
      </Docs>
    </Member>
    <Member MemberName="MarkupName">
      <MemberSignature Language="C#" Value="protected internal override string MarkupName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MarkupName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PolygonHotSpot.MarkupName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property MarkupName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::String ^ MarkupName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupName : string" Usage="System.Web.UI.WebControls.PolygonHotSpot.MarkupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>