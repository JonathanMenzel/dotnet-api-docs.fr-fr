<Type Name="FormViewInsertedEventArgs" FullName="System.Web.UI.WebControls.FormViewInsertedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8abbd042e29b1bd7daef45986573633b1173ff2" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51903890" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewInsertedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FormViewInsertedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> incrémente le <xref:System.Web.UI.WebControls.FormView.ItemInserted> événement lorsqu’un bouton d’insertion (un bouton avec son `CommandName` propriété définie sur « Insert ») dans le contrôle est activé, mais après que le <xref:System.Web.UI.WebControls.FormView> contrôle insère l’enregistrement. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée, telles que la vérification des résultats d’une opération d’insertion, chaque fois que cet événement se produit.  
  
 Un <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> objet est passé à la méthode de gestion d’événements, ce qui vous permet de déterminer le nombre d’enregistrements affectés et toutes les exceptions qui se sont produites. Pour déterminer le nombre d’enregistrements affectés par l’opération d’insertion, utilisez le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> propriété. Utilisez le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> propriété afin de déterminer si des exceptions se sont produites. Vous pouvez également indiquer si l’exception a été gérée dans la méthode de gestion des événements en définissant le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> propriété. Si vous avez besoin accéder aux valeurs de l’enregistrement inséré, utilisez le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> propriété.  
  
 Par défaut, le <xref:System.Web.UI.WebControls.FormView> contrôle retourne au mode spécifié par le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété après une opération d’insertion. Si une exception se produit pendant l’opération d’insertion, vous pouvez conserver le <xref:System.Web.UI.WebControls.FormView> contrôle en mode insertion en définissant le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> propriété `true`.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 Pour obtenir la liste des valeurs de propriété initiales d'une instance de la classe <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>, consultez le constructeur <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A>.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> objet passé à la méthode de gestion d’événements pour le <xref:System.Web.UI.WebControls.FormView.ItemInserted> événement pour déterminer si une exception s’est produite pendant une opération d’insertion.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewInsertedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewInsertedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewInsertedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.FormViewInsertedEventArgs" Usage="new System.Web.UI.WebControls.FormViewInsertedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Nombre de lignes affectées par l'opération d'insertion.</param>
        <param name="e">
          <see cref="T:System.Exception" /> qui représente l'exception levée lors de l'opération d'insertion. Si aucune exception n'a été levée, utilisez <see langword="null" /> pour ce paramètre.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> classe.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>|Valeur du paramètre `affectedRows`.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>|Le <xref:System.Exception?displayProperty=nameWithType> objet contenu dans le `e` paramètre.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>|Initialisé à `false`.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>|Initialisé à `false`.|  
  
> [!NOTE]
>  Ce constructeur est utilisé principalement par les développeurs de contrôles lors du déclenchement d’événements.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de lignes affectées par l'opération d'insertion.</summary>
        <value>Nombre de lignes affectées par l'opération d'insertion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> propriété afin de déterminer le nombre d’enregistrements affectés par l’opération d’insertion. Cette propriété est couramment utilisée pour vérifier que le nombre correct d’enregistrements ont été inséré dans les situations suivantes :  
  
-   Vérifiez qu’un seul enregistrement a été inséré. Parfois, une instruction insert écrite de manière incorrecte peut insérer plusieurs enregistrements.  
  
-   Vérifiez qu’un enregistrement a été inséré lorsqu’une erreur se produit pendant l’opération d’insertion qui ne lève pas d’exception.  
  
-   Vérifiez qu’un enregistrement a été inséré lorsqu’un contrôle de source de données qui prend en charge la détection de conflit (contrôle d’accès concurrentiel optimiste), comme le <xref:System.Web.UI.WebControls.SqlDataSource> et <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle, a ses <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propriété définie sur la `ConflictOptions.CompareAllValues` valeur d’énumération. Sous ce paramètre, un enregistrement qui a la même valeur de clé en tant qu’enregistrement par un autre utilisateur simultanément ne peut pas être inséré.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> propriété pour vérifier qu’un enregistrement a été inséré pendant l’opération d’insertion.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'exception (s'il y en a une) qui a été levée pendant l'opération d'insertion.</summary>
        <value>
          <see cref="T:System.Exception" /> qui représente l'exception qui a été levée pendant l'opération d'insertion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> propriété pour déterminer l’exception (le cas échéant) qui a été levée pendant l’opération d’insertion. Si aucune exception n'a été levée, cette propriété retourne `null`.  
  
> [!NOTE]
>  Si une exception a été levée et que vous décidez de gérer l’exception dans le Gestionnaire d’événements, veillez à définir le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> propriété `true`; sinon, le <xref:System.Web.UI.WebControls.FormView> contrôle lève à nouveau l’exception.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> propriété afin de déterminer si une exception a été levée pendant une opération d’insertion.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si une exception levée pendant l'opération d'insertion a été gérée dans le gestionnaire d'événements.</summary>
        <value>
          <see langword="true" /> si l'exception a été gérée dans le gestionnaire d'événements ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’une exception est levée pendant l’opération d’insertion, utilisez le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> propriété pour indiquer si l’exception a été gérée dans le Gestionnaire d’événements. Lorsque cette propriété est définie `true`, l’exception est considérée comme gérée et n’est pas levée à nouveau. Si cette propriété est définie sur `false`, le <xref:System.Web.UI.WebControls.FormView> contrôle lève à nouveau l’exception. Pour déterminer quelle exception a été levée, utilisez le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> propriété pour indiquer que l’exception a été gérée dans le Gestionnaire d’événements.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInInsertMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInInsertMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInInsertMode : bool with get, set" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> doit rester en mode insertion après une opération d'insertion.</summary>
        <value>
          <see langword="true" /> pour rester en mode insertion après une opération d'insertion ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, le <xref:System.Web.UI.WebControls.FormView> contrôle retourne au mode spécifié par le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété. Utilisez le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> propriété pour spécifier si le <xref:System.Web.UI.WebControls.FormView> contrôle doit rester en mode insertion après une opération d’insertion. Pour conserver le <xref:System.Web.UI.WebControls.FormView> contrôle en mode insertion, définissez cette propriété sur `true`.  
  
> [!NOTE]
>  Cette propriété doit être utilisée uniquement lorsqu’une situation se produit (par exemple, une exception est levée) qui requiert que le contrôle se comporte différemment de la normale. Si le <xref:System.Web.UI.WebControls.FormView> contrôle doit rester en mode insertion par défaut, définissez le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété à la place.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> propriété pour conserver le <xref:System.Web.UI.WebControls.FormView> contrôle en mode insertion lorsqu’une exception se produit pendant une opération d’insertion.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Values { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un dictionnaire qui contient les paires valeur/nom du champ de l'enregistrement inséré.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> qui contient un dictionnaire de paires valeur/nom du champ clé de l'enregistrement inséré.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> propriété pour accéder aux valeurs des champs de l’enregistrement inséré. Par exemple, vous pouvez utiliser ces valeurs pour conserver un journal des enregistrements insérés.  
  
 Le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> propriété retourne un <xref:System.Collections.Specialized.OrderedDictionary> objet qui implémente le <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interface. Le <xref:System.Collections.Specialized.OrderedDictionary> objet contient <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> les objets qui représentent les champs de l’enregistrement inséré. Pour accéder aux noms des champs, utilisez le <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> propriété de la <xref:System.Collections.Specialized.OrderedDictionary> objet. De même, vous pouvez accéder les valeurs de champ en utilisant le <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> propriété.  
  
> [!NOTE]
>  En guise de raccourci, vous pouvez également utiliser l’indexeur de la <xref:System.Collections.Specialized.OrderedDictionary> objet pour accéder au champ valeurs directement. L’avantage à l’aide de l’indexeur est qu’il retourne directement les valeurs de champ. Les contrôles qui s’appuient sur l’ordre des champs de source de données (tel que <xref:System.Web.UI.WebControls.AccessDataSource>) peuvent accéder aux valeurs de champ uniquement par index.  
  
   
  
## Examples  
 L’exemple suivant montre comment parcourir les éléments dans le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> collection.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgsValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/CS/formviewinsertedeventargsvaluescs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgsValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/VB/formviewinsertedeventargsvaluesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      </Docs>
    </Member>
  </Members>
</Type>